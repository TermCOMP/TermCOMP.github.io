YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/yhj13.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could be proven:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 55 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 5215 ms]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) LLVM Symbolic Execution SCC
        (8) SCC2IRS [SOUND, 72 ms]
        (9) IntTRS
        (10) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (11) IntTRS
        (12) RankingReductionPairProof [EQUIVALENT, 0 ms]
        (13) YES
    (14) LLVM Symbolic Execution SCC
        (15) SCC2IRS [SOUND, 67 ms]
        (16) IntTRS
        (17) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (18) IntTRS
        (19) PolynomialOrderProcessor [EQUIVALENT, 4 ms]
        (20) YES
    (21) LLVM Symbolic Execution SCC
        (22) SCC2IRS [SOUND, 68 ms]
        (23) IntTRS
        (24) PolynomialOrderProcessor [EQUIVALENT, 1 ms]
        (25) YES


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/yhj13.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/yhj13.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "test_fun" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: (0 i32, 1 i32, 2 i32) variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 7
	0:
		%4 = alloca i32, align 4
		%5 = alloca i32, align 4
		%6 = alloca i32, align 4
		%7 = alloca *i32, align 8
		%8 = alloca *i32, align 8
		%9 = alloca *i32, align 8
		%10 = alloca *i32, align 8
		store %0, %4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %4)
		store %1, %5
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %5)
		store %2, %6
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %6)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i32 %7)
		%11 = alloca i8, numElementsLit: 4, align 16
		%12 = bitcast *i8 %11 to *i32
		store %12, %7
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i32 %8)
		%13 = alloca i8, numElementsLit: 4, align 16
		%14 = bitcast *i8 %13 to *i32
		store %14, %8
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i32 %9)
		%15 = alloca i8, numElementsLit: 4, align 16
		%16 = bitcast *i8 %15 to *i32
		store %16, %9
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i32 %10)
		%17 = alloca i8, numElementsLit: 4, align 16
		%18 = bitcast *i8 %17 to *i32
		store %18, %10
		%19 = load %4
		%20 = load %7
		store %19, %20
		%21 = load %5
		%22 = load %8
		store %21, %22
		%23 = load %6
		%24 = load %9
		store %23, %24
		%25 = load %10
		store 0, %25
		br %26
	26:
		%27 = load %7
		%28 = load %27
		%29 = load %8
		%30 = load %29
		%31 = icmp slt %28 %30
		br %31, %32, %53
	32:
		%33 = load %7
		%34 = load %33
		%35 = load %9
		%36 = load %35
		%37 = icmp slt %34 %36
		br %37, %38, %43
	38:
		%39 = load %7
		%40 = load %39
		%41 = add i32 %40, 1
		%42 = load %7
		store %41, %42
		br %48
	43:
		%44 = load %9
		%45 = load %44
		%46 = add i32 %45, 1
		%47 = load %9
		store %46, %47
		br %48
	48:
		%49 = load %10
		%50 = load %49
		%51 = add i32 %50, 1
		%52 = load %10
		store %51, %52
		br %26
	53:
		%54 = load %10
		%55 = load %54
		ret %55

*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 79
	0:
		%1 = alloca i32, align 4
		store 0, %1
		%2 = call i32 @__VERIFIER_nondet_int()
		%3 = call i32 @__VERIFIER_nondet_int()
		%4 = call i32 @__VERIFIER_nondet_int()
		%5 = call i32 @test_fun(i32 %2, i32 %3, i32 %4)
		ret %5


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 3 SCCs.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC
----------------------------------------

(8) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 51 rulesP rules:
f_996(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, 0, v2924, v2925, v2926, v2927, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 3, 7, 4, 8) -> f_997(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, 0, v2924, v2926, v2927, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 3, 7, 4, 8) :|: 0 = 0
f_997(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, 0, v2924, v2926, v2927, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 3, 7, 4, 8) -> f_998(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, 0, v2924, v2926, v2941, v2927, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 3, 7, 4, 8, 2) :|: v2941 = 1 + v2926 && 2 <= v2941
f_998(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, 0, v2924, v2926, v2941, v2927, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 3, 7, 4, 8, 2) -> f_999(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, 0, v2924, v2926, v2941, v2927, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 3, 7, 4, 8, 2) :|: 0 = 0
f_999(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, 0, v2924, v2926, v2941, v2927, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 3, 7, 4, 8, 2) -> f_1000(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, 0, v2924, v2926, v2941, v2927, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 3, 7, 4, 8, 2) :|: TRUE
f_1000(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, 0, v2924, v2926, v2941, v2927, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 3, 7, 4, 8, 2) -> f_1001(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, 0, v2924, v2926, v2941, v2927, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 3, 7, 4, 8, 2) :|: TRUE
f_1001(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, 0, v2924, v2926, v2941, v2927, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 3, 7, 4, 8, 2) -> f_1002(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, 0, v2924, v2926, v2941, v2927, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 3, 7, 4, 8, 2) :|: 0 = 0
f_1002(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, 0, v2924, v2926, v2941, v2927, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 3, 7, 4, 8, 2) -> f_1003(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, 0, v2924, v2926, v2941, v2927, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 3, 7, 4, 8, 2) :|: 0 = 0
f_1003(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, 0, v2924, v2926, v2941, v2927, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 3, 7, 4, 8, 2) -> f_1004(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, 0, v2924, v2926, v2941, v2927, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 3, 7, 4, 8, 2) :|: 0 = 0
f_1004(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, 0, v2924, v2926, v2941, v2927, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 3, 7, 4, 8, 2) -> f_1005(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, 0, v2924, v2926, v2941, v2927, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 3, 7, 4, 8, 2) :|: 0 = 0
f_1005(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, 0, v2924, v2926, v2941, v2927, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 3, 7, 4, 8, 2) -> f_1006(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, 0, v2924, v2926, v2941, v2927, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 3, 7, 4, 8, 2) :|: 0 = 0
f_1006(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, 0, v2924, v2926, v2941, v2927, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 3, 7, 4, 8, 2) -> f_1007(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, 0, v2924, v2926, v2941, v2927, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 3, 7, 4, 8, 2) :|: TRUE
f_1007(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, 0, v2924, v2926, v2941, v2927, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 3, 7, 4, 8, 2) -> f_1008(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, 0, v2924, v2926, v2941, v2927, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 3, 7, 4, 8, 2) :|: 0 = 0
f_1008(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, 0, v2924, v2926, v2941, v2927, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 3, 7, 4, 8, 2) -> f_1009(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, 0, v2924, v2926, v2941, v2927, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 3, 7, 4, 8, 2) :|: 0 = 0
f_1009(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, 0, v2924, v2926, v2941, v2927, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 3, 7, 4, 8, 2) -> f_1010(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, 0, v2924, v2926, v2941, v2927, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 3, 7, 4, 8, 2) :|: 0 = 0
f_1010(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, 0, v2924, v2926, v2941, v2927, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 3, 7, 4, 8, 2) -> f_1011(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, v2927, 0, v2924, v2926, v2941, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 3, 7, 4, 8, 2) :|: 0 = 0
f_1011(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, v2927, 0, v2924, v2926, v2941, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 3, 7, 4, 8, 2) -> f_1012(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, v2927, v2924, v2926, v2941, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 0, 3, 7, 4, 8, 2) :|: 0 = 0
f_1012(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, v2927, v2924, v2926, v2941, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 0, 3, 7, 4, 8, 2) -> f_1013(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, v2927, v2924, v2926, v2941, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 0, 3, 7, 4, 8, 2) :|: TRUE
f_1013(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, v2927, v2924, v2926, v2941, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 0, 3, 7, 4, 8, 2) -> f_1014(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, v2927, v2924, v2926, v2941, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 0, 3, 7, 4, 8, 2) :|: 0 = 0
f_1014(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, v2927, v2924, v2926, v2941, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 0, 3, 7, 4, 8, 2) -> f_1015(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, v2927, v2926, v2941, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 0, 3, 7, 4, 8, 2) :|: 0 = 0
f_1015(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, v2927, v2926, v2941, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 0, 3, 7, 4, 8, 2) -> f_1016(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, v2927, v2926, v2941, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 0, 3, 7, 4, 8, 2) :|: v2927 = 1 + v2921
f_1016(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, v2927, v2926, v2941, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 0, 3, 7, 4, 8, 2) -> f_1017(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, v2927, v2926, v2941, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 0, 3, 7, 4, 8, 2) :|: 0 = 0
f_1017(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, v2927, v2926, v2941, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 0, 3, 7, 4, 8, 2) -> f_1018(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, v2927, v2926, v2941, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 0, 3, 7, 4, 8, 2) :|: TRUE
f_1018(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, v2927, v2926, v2941, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 0, 3, 7, 4, 8, 2) -> f_1019(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, v2927, v2926, v2941, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 0, 3, 7, 4, 8, 2) :|: TRUE
f_1019(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, v2927, v2926, v2941, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 0, 3, 7, 4, 8, 2) -> f_1020(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, v2927, v2926, v2941, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 0, 3, 7, 4, 8) :|: TRUE
f_1020(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3125, 1, v3127, v3128, v3129, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 0, 3, 7, 4, 8) -> f_1021(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3125, 1, v3127, v3128, v3129, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 0, 3, 7, 4, 8) :|: 0 = 0
f_1021(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3125, 1, v3127, v3128, v3129, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 0, 3, 7, 4, 8) -> f_1022(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3125, 1, v3127, v3129, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 0, 3, 7, 4, 8) :|: 0 = 0
f_1022(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3125, 1, v3127, v3129, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 0, 3, 7, 4, 8) -> f_1023(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3125, 1, v3127, v3129, v3198, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 0, 3, 7, 4, 8, 2) :|: v3198 = 1 + v3129 && 2 <= v3198
f_1023(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3125, 1, v3127, v3129, v3198, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 0, 3, 7, 4, 8, 2) -> f_1024(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3125, 1, v3127, v3129, v3198, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 0, 3, 7, 4, 8, 2) :|: 0 = 0
f_1024(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3125, 1, v3127, v3129, v3198, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 0, 3, 7, 4, 8, 2) -> f_1025(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3125, 1, v3127, v3129, v3198, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 0, 3, 7, 4, 8, 2) :|: TRUE
f_1025(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3125, 1, v3127, v3129, v3198, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 0, 3, 7, 4, 8, 2) -> f_1026(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3125, 1, v3127, v3129, v3198, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 0, 3, 7, 4, 8, 2) :|: TRUE
f_1026(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3125, 1, v3127, v3129, v3198, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 0, 3, 7, 4, 8, 2) -> f_1027(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3125, 1, v3127, v3129, v3198, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 0, 3, 7, 4, 8, 2) :|: 0 = 0
f_1027(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3125, 1, v3127, v3129, v3198, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 0, 3, 7, 4, 8, 2) -> f_1028(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3127, 1, v3125, v3129, v3198, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 0, 3, 7, 4, 8, 2) :|: 0 = 0
f_1028(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3127, 1, v3125, v3129, v3198, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 0, 3, 7, 4, 8, 2) -> f_1029(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3127, 1, v3125, v3129, v3198, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 0, 3, 7, 4, 8, 2) :|: 0 = 0
f_1029(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3127, 1, v3125, v3129, v3198, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 0, 3, 7, 4, 8, 2) -> f_1030(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3127, 1, v3125, v3129, v3198, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 0, 3, 7, 4, 8, 2) :|: 0 = 0
f_1030(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3127, 1, v3125, v3129, v3198, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 0, 3, 7, 4, 8, 2) -> f_1031(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3127, 1, v3125, v3129, v3198, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 0, 3, 7, 4, 8, 2) :|: v3127 < v3112
f_1031(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3127, 1, v3125, v3129, v3198, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 0, 3, 7, 4, 8, 2) -> f_1033(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3127, 1, v3125, v3129, v3198, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 0, 3, 7, 4, 8, 2) :|: 0 = 0
f_1033(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3127, 1, v3125, v3129, v3198, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 0, 3, 7, 4, 8, 2) -> f_1035(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3127, 1, v3125, v3129, v3198, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 0, 3, 7, 4, 8, 2) :|: TRUE
f_1035(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3127, 1, v3125, v3129, v3198, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 0, 3, 7, 4, 8, 2) -> f_1037(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3127, 1, v3125, v3129, v3198, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 0, 3, 7, 4, 8, 2) :|: 0 = 0
f_1037(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3127, 1, v3125, v3129, v3198, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 0, 3, 7, 4, 8, 2) -> f_1039(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3127, 1, v3125, v3129, v3198, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 0, 3, 7, 4, 8, 2) :|: 0 = 0
f_1039(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3127, 1, v3125, v3129, v3198, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 0, 3, 7, 4, 8, 2) -> f_1041(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3127, 1, v3125, v3129, v3198, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 0, 3, 7, 4, 8, 2) :|: 0 = 0
f_1041(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3127, 1, v3125, v3129, v3198, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 0, 3, 7, 4, 8, 2) -> f_1043(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3127, 1, v3125, v3129, v3198, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 0, 3, 7, 4, 8, 2) :|: 0 = 0
f_1043(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3127, 1, v3125, v3129, v3198, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 0, 3, 7, 4, 8, 2) -> f_1044(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3127, 1, 0, v3125, v3129, v3198, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 3, 7, 4, 8, 2) :|: 0 = 0
f_1044(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3127, 1, 0, v3125, v3129, v3198, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 3, 7, 4, 8, 2) -> f_1045(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3127, 1, 0, v3125, v3129, v3198, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 3, 7, 4, 8, 2) :|: TRUE
f_1045(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3127, 1, 0, v3125, v3129, v3198, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 3, 7, 4, 8, 2) -> f_1046(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3127, 1, 0, v3125, v3129, v3198, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 3, 7, 4, 8, 2) :|: 0 = 0
f_1046(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3127, 1, 0, v3125, v3129, v3198, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 3, 7, 4, 8, 2) -> f_1047(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3127, 1, 0, v3129, v3198, v3125, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 3, 7, 4, 8, 2) :|: 0 = 0
f_1047(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3127, 1, 0, v3129, v3198, v3125, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 3, 7, 4, 8, 2) -> f_1048(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3127, 1, 0, v3356, v3129, v3198, v3125, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 3, 7, 4, 8, 2) :|: v3356 = 1 + v3127
f_1048(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3127, 1, 0, v3356, v3129, v3198, v3125, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 3, 7, 4, 8, 2) -> f_1049(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3127, 1, 0, v3356, v3129, v3198, v3125, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 3, 7, 4, 8, 2) :|: 0 = 0
f_1049(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3127, 1, 0, v3356, v3129, v3198, v3125, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 3, 7, 4, 8, 2) -> f_1050(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3127, 1, 0, v3356, v3129, v3198, v3125, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 3, 7, 4, 8, 2) :|: TRUE
f_1050(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3127, 1, 0, v3356, v3129, v3198, v3125, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 3, 7, 4, 8, 2) -> f_1051(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3127, 1, 0, v3356, v3129, v3198, v3125, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 3, 7, 4, 8, 2) :|: TRUE
f_1051(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3127, 1, 0, v3356, v3129, v3198, v3125, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 3, 7, 4, 8, 2) -> f_995(v3111, v3112, v3113, v3114, v3115, v3116, v3117, v3118, v3119, v3120, v3121, v3122, v3123, v3124, v3127, 1, 0, v3125, v3129, v3198, v3356, v3130, v3131, v3132, v3133, v3134, v3135, v3136, v3137, v3138, v3139, v3140, v3141, v3142, 3, 7, 4, 8) :|: TRUE
f_995(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, 0, v2924, v2925, v2926, v2927, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 3, 7, 4, 8) -> f_996(v2907, v2908, v2909, v2910, v2911, v2912, v2913, v2914, v2915, v2916, v2917, v2918, v2919, v2920, v2921, 1, 0, v2924, v2925, v2926, v2927, v2928, v2929, v2930, v2931, v2932, v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, 3, 7, 4, 8) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_996(v2907:0, v2908:0, v2909:0, v2910:0, v2911:0, v2912:0, v2913:0, v2914:0, v2915:0, v2916:0, v2917:0, v2918:0, v2919:0, v2920:0, v2921:0, 1, 0, v2924:0, v2925:0, v2926:0, 1 + v2921:0, v2928:0, v2929:0, v2930:0, v2931:0, v2932:0, v2933:0, v2934:0, v2935:0, v2936:0, v2937:0, v2938:0, v2939:0, v2940:0, 3, 7, 4, 8) -> f_996(v2907:0, v2908:0, v2909:0, v2910:0, v2911:0, v2912:0, v2913:0, v2914:0, v2915:0, v2916:0, v2917:0, v2918:0, v2919:0, v2920:0, 1 + v2921:0, 1, 0, v2921:0, 1 + v2926:0, 1 + (1 + v2926:0), 1 + (1 + v2921:0), v2928:0, v2929:0, v2930:0, v2931:0, v2932:0, v2933:0, v2934:0, v2935:0, v2936:0, v2937:0, v2938:0, v2939:0, v2940:0, 3, 7, 4, 8) :|: v2908:0 > 1 + v2921:0 && v2926:0 > 0
Filtered unneeded arguments:
   f_996(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38) -> f_996(x2, x15, x20, x21)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_996(v2908:0, v2921:0, v2926:0, sum~cons_1~v2921:0) -> f_996(v2908:0, 1 + v2921:0, 1 + (1 + v2926:0), 1 + (1 + v2921:0)) :|: v2908:0 > 1 + v2921:0 && v2926:0 > 0 && sum~cons_1~v2921:0 = 1 + v2921:0

----------------------------------------

(9)
Obligation:
Rules:
f_996(v2908:0, v2921:0, v2926:0, sum~cons_1~v2921:0) -> f_996(v2908:0, 1 + v2921:0, 1 + (1 + v2926:0), 1 + (1 + v2921:0)) :|: v2908:0 > 1 + v2921:0 && v2926:0 > 0 && sum~cons_1~v2921:0 = 1 + v2921:0

----------------------------------------

(10) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(11)
Obligation:
Rules:
f_996(v2908:0:0, v2921:0:0, v2926:0:0, sum~cons_1~v2921:0:0) -> f_996(v2908:0:0, 1 + v2921:0:0, 1 + (1 + v2926:0:0), 1 + (1 + v2921:0:0)) :|: v2908:0:0 > 1 + v2921:0:0 && v2926:0:0 > 0 && sum~cons_1~v2921:0:0 = 1 + v2921:0:0

----------------------------------------

(12) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_996 ] = f_996_1 + -1*f_996_2

The following rules are decreasing:
f_996(v2908:0:0, v2921:0:0, v2926:0:0, sum~cons_1~v2921:0:0) -> f_996(v2908:0:0, 1 + v2921:0:0, 1 + (1 + v2926:0:0), 1 + (1 + v2921:0:0)) :|: v2908:0:0 > 1 + v2921:0:0 && v2926:0:0 > 0 && sum~cons_1~v2921:0:0 = 1 + v2921:0:0

The following rules are bounded:
f_996(v2908:0:0, v2921:0:0, v2926:0:0, sum~cons_1~v2921:0:0) -> f_996(v2908:0:0, 1 + v2921:0:0, 1 + (1 + v2926:0:0), 1 + (1 + v2921:0:0)) :|: v2908:0:0 > 1 + v2921:0:0 && v2926:0:0 > 0 && sum~cons_1~v2921:0:0 = 1 + v2921:0:0


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
SCC
----------------------------------------

(15) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 27 rulesP rules:
f_877(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2171, 1, v2173, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) -> f_879(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2171, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) :|: 0 = 0
f_879(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2171, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) -> f_881(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2171, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) :|: 0 = 0
f_881(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2171, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) -> f_883(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2171, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) :|: 0 = 0
f_883(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2171, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) -> f_885(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2171, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) :|: v2173 < v2158
f_885(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2171, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) -> f_889(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2171, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) :|: 0 = 0
f_889(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2171, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) -> f_893(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2171, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) :|: TRUE
f_893(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2171, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) -> f_897(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2171, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) :|: 0 = 0
f_897(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2171, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) -> f_901(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2171, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) :|: 0 = 0
f_901(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2171, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) -> f_905(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2171, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) :|: 0 = 0
f_905(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2171, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) -> f_909(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2171, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) :|: 0 = 0
f_909(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2171, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) -> f_912(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2171, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) :|: v2173 < v2159
f_912(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2171, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) -> f_916(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2171, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) :|: 0 = 0
f_916(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2171, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) -> f_920(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2171, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) :|: TRUE
f_920(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2171, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) -> f_924(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2171, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) :|: 0 = 0
f_924(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2171, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) -> f_928(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) :|: 0 = 0
f_928(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) -> f_932(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2305, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) :|: v2305 = 1 + v2173
f_932(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2305, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) -> f_936(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2305, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) :|: 0 = 0
f_936(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2305, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) -> f_940(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2305, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) :|: TRUE
f_940(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2305, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) -> f_944(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2305, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) :|: TRUE
f_944(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2305, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) -> f_947(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2305, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) :|: 0 = 0
f_947(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2305, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) -> f_950(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2305, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) :|: 0 = 0
f_950(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2305, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) -> f_953(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2305, v2175, v2519, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8, 2) :|: v2519 = 1 + v2175 && 2 <= v2519
f_953(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2305, v2175, v2519, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8, 2) -> f_956(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2305, v2175, v2519, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8, 2) :|: 0 = 0
f_956(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2305, v2175, v2519, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8, 2) -> f_960(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2305, v2175, v2519, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8, 2) :|: TRUE
f_960(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2305, v2175, v2519, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8, 2) -> f_964(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2305, v2175, v2519, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8, 2) :|: TRUE
f_964(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2305, v2175, v2519, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8, 2) -> f_875(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2173, 1, v2305, v2175, v2519, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) :|: TRUE
f_875(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2171, 1, v2173, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) -> f_877(v2157, v2158, v2159, v2160, v2161, v2162, v2163, v2164, v2165, v2166, v2167, v2168, v2169, v2170, v2171, 1, v2173, v2174, v2175, v2176, v2177, v2178, v2179, v2180, v2181, v2182, v2183, v2184, v2185, v2186, v2187, v2188, 0, 3, 7, 4, 8) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_877(v2157:0, v2158:0, v2159:0, v2160:0, v2161:0, v2162:0, v2163:0, v2164:0, v2165:0, v2166:0, v2167:0, v2168:0, v2169:0, v2170:0, v2171:0, 1, v2173:0, v2174:0, v2175:0, v2176:0, v2177:0, v2178:0, v2179:0, v2180:0, v2181:0, v2182:0, v2183:0, v2184:0, v2185:0, v2186:0, v2187:0, v2188:0, 0, 3, 7, 4, 8) -> f_877(v2157:0, v2158:0, v2159:0, v2160:0, v2161:0, v2162:0, v2163:0, v2164:0, v2165:0, v2166:0, v2167:0, v2168:0, v2169:0, v2170:0, v2173:0, 1, 1 + v2173:0, v2175:0, 1 + v2175:0, v2176:0, v2177:0, v2178:0, v2179:0, v2180:0, v2181:0, v2182:0, v2183:0, v2184:0, v2185:0, v2186:0, v2187:0, v2188:0, 0, 3, 7, 4, 8) :|: v2173:0 < v2158:0 && v2175:0 > 0 && v2173:0 < v2159:0
Filtered unneeded arguments:
   f_877(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37) -> f_877(x2, x3, x17, x19)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_877(v2158:0, v2159:0, v2173:0, v2175:0) -> f_877(v2158:0, v2159:0, 1 + v2173:0, 1 + v2175:0) :|: v2175:0 > 0 && v2173:0 < v2159:0 && v2173:0 < v2158:0

----------------------------------------

(16)
Obligation:
Rules:
f_877(v2158:0, v2159:0, v2173:0, v2175:0) -> f_877(v2158:0, v2159:0, 1 + v2173:0, 1 + v2175:0) :|: v2175:0 > 0 && v2173:0 < v2159:0 && v2173:0 < v2158:0

----------------------------------------

(17) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(18)
Obligation:
Rules:
f_877(v2158:0:0, v2159:0:0, v2173:0:0, v2175:0:0) -> f_877(v2158:0:0, v2159:0:0, 1 + v2173:0:0, 1 + v2175:0:0) :|: v2175:0:0 > 0 && v2173:0:0 < v2159:0:0 && v2173:0:0 < v2158:0:0

----------------------------------------

(19) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_877(x, x1, x2, x3)] = x - x2

The following rules are decreasing:
f_877(v2158:0:0, v2159:0:0, v2173:0:0, v2175:0:0) -> f_877(v2158:0:0, v2159:0:0, 1 + v2173:0:0, 1 + v2175:0:0) :|: v2175:0:0 > 0 && v2173:0:0 < v2159:0:0 && v2173:0:0 < v2158:0:0
The following rules are bounded:
f_877(v2158:0:0, v2159:0:0, v2173:0:0, v2175:0:0) -> f_877(v2158:0:0, v2159:0:0, 1 + v2173:0:0, 1 + v2175:0:0) :|: v2175:0:0 > 0 && v2173:0:0 < v2159:0:0 && v2173:0:0 < v2158:0:0

----------------------------------------

(20)
YES

----------------------------------------

(21)
Obligation:
SCC
----------------------------------------

(22) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 26 rulesP rules:
f_861(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2102, 0, v2104, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) -> f_864(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2102, 0, v2104, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) :|: 0 = 0
f_864(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2102, 0, v2104, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) -> f_867(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2102, 0, v2104, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) :|: 0 = 0
f_867(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2102, 0, v2104, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) -> f_870(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2102, 0, v2104, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) :|: 0 = 0
f_870(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2102, 0, v2104, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) -> f_873(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2102, 0, v2104, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) :|: 0 = 0
f_873(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2102, 0, v2104, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) -> f_876(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2102, 0, v2104, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) :|: TRUE
f_876(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2102, 0, v2104, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) -> f_878(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2102, 0, v2104, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) :|: 0 = 0
f_878(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2102, 0, v2104, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) -> f_880(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2102, 0, v2104, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) :|: 0 = 0
f_880(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2102, 0, v2104, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) -> f_882(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2102, 0, v2104, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) :|: 0 = 0
f_882(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2102, 0, v2104, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) -> f_884(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2104, 0, v2102, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) :|: 0 = 0
f_884(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2104, 0, v2102, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) -> f_888(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2104, 0, v2102, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) :|: v2104 <= v2087
f_888(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2104, 0, v2102, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) -> f_892(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2104, 0, v2102, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) :|: 0 = 0
f_892(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2104, 0, v2102, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) -> f_896(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2104, 0, v2102, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) :|: TRUE
f_896(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2104, 0, v2102, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) -> f_900(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2104, 0, v2102, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) :|: 0 = 0
f_900(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2104, 0, v2102, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) -> f_904(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2104, 0, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) :|: 0 = 0
f_904(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2104, 0, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) -> f_908(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2104, 0, v2222, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) :|: v2222 = 1 + v2104
f_908(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2104, 0, v2222, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) -> f_911(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2104, 0, v2222, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) :|: 0 = 0
f_911(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2104, 0, v2222, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) -> f_915(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2104, 0, v2222, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) :|: TRUE
f_915(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2104, 0, v2222, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) -> f_919(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2104, 0, v2222, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) :|: TRUE
f_919(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2104, 0, v2222, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) -> f_923(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2104, 0, v2222, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) :|: 0 = 0
f_923(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2104, 0, v2222, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) -> f_927(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2104, 0, v2222, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) :|: 0 = 0
f_927(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2104, 0, v2222, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) -> f_931(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2104, 0, v2222, v2106, v2304, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8, 2) :|: v2304 = 1 + v2106 && 2 <= v2304
f_931(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2104, 0, v2222, v2106, v2304, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8, 2) -> f_935(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2104, 0, v2222, v2106, v2304, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8, 2) :|: 0 = 0
f_935(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2104, 0, v2222, v2106, v2304, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8, 2) -> f_939(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2104, 0, v2222, v2106, v2304, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8, 2) :|: TRUE
f_939(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2104, 0, v2222, v2106, v2304, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8, 2) -> f_943(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2104, 0, v2222, v2106, v2304, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8, 2) :|: TRUE
f_943(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2104, 0, v2222, v2106, v2304, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8, 2) -> f_858(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2104, 0, v2222, v2106, v2304, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) :|: TRUE
f_858(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2102, 0, v2104, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) -> f_861(v2087, v2088, v2089, v2090, v2091, v2092, v2093, v2094, v2095, v2096, v2097, v2098, v2099, v2100, 1, v2102, 0, v2104, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, 3, 7, 4, 8) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_861(v2087:0, v2088:0, v2089:0, v2090:0, v2091:0, v2092:0, v2093:0, v2094:0, v2095:0, v2096:0, v2097:0, v2098:0, v2099:0, v2100:0, 1, v2102:0, 0, v2104:0, v2105:0, v2106:0, v2107:0, v2108:0, v2109:0, v2110:0, v2111:0, v2112:0, v2113:0, v2114:0, v2115:0, v2116:0, v2117:0, v2118:0, v2119:0, 3, 7, 4, 8) -> f_861(v2087:0, v2088:0, v2089:0, v2090:0, v2091:0, v2092:0, v2093:0, v2094:0, v2095:0, v2096:0, v2097:0, v2098:0, v2099:0, v2100:0, 1, v2104:0, 0, 1 + v2104:0, v2106:0, 1 + v2106:0, v2107:0, v2108:0, v2109:0, v2110:0, v2111:0, v2112:0, v2113:0, v2114:0, v2115:0, v2116:0, v2117:0, v2118:0, v2119:0, 3, 7, 4, 8) :|: v2106:0 > 0 && v2104:0 <= v2087:0
Filtered unneeded arguments:
   f_861(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37) -> f_861(x1, x18, x20)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_861(v2087:0, v2104:0, v2106:0) -> f_861(v2087:0, 1 + v2104:0, 1 + v2106:0) :|: v2106:0 > 0 && v2104:0 <= v2087:0

----------------------------------------

(23)
Obligation:
Rules:
f_861(v2087:0, v2104:0, v2106:0) -> f_861(v2087:0, 1 + v2104:0, 1 + v2106:0) :|: v2106:0 > 0 && v2104:0 <= v2087:0

----------------------------------------

(24) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_861(x, x1, x2)] = x - x1

The following rules are decreasing:
f_861(v2087:0, v2104:0, v2106:0) -> f_861(v2087:0, 1 + v2104:0, 1 + v2106:0) :|: v2106:0 > 0 && v2104:0 <= v2087:0
The following rules are bounded:
f_861(v2087:0, v2104:0, v2106:0) -> f_861(v2087:0, 1 + v2104:0, 1 + v2106:0) :|: v2106:0 > 0 && v2104:0 <= v2087:0

----------------------------------------

(25)
YES
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.001s
