MAYBE
proof of /hpcwork/ff862203/termcomp25/benchmarks/SrbeL.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could not be shown:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 66 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 10.3 s]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) LLVM Symbolic Execution SCC
        (8) SCC2IRS [SOUND, 34 ms]
        (9) IntTRS
            (10) IntTRSPeriodicNontermProof [COMPLETE, 7 ms]
            (11) NO
        (12) SCC2IRS [SOUND, 7 ms]
        (13) IntTRS
            (14) IntTRSCompressionProof [EQUIVALENT, 0 ms]
            (15) IntTRS
    (16) LLVM Symbolic Execution SCC
        (17) SCC2IRS [SOUND, 37 ms]
        (18) IntTRS
            (19) IntTRSPeriodicNontermProof [COMPLETE, 2 ms]
            (20) NO
        (21) SCC2IRS [SOUND, 0 ms]
        (22) IntTRS
            (23) IntTRSCompressionProof [EQUIVALENT, 0 ms]
            (24) IntTRS
    (25) LLVM Symbolic Execution SCC
        (26) SCC2IRS [SOUND, 0 ms]
        (27) IntTRS
            (28) IntTRSPeriodicNontermProof [COMPLETE, 3 ms]
            (29) NO
        (30) SCC2IRS [SOUND, 17 ms]
        (31) IntTRS
            (32) IntTRSCompressionProof [EQUIVALENT, 0 ms]
            (33) IntTRS
            (34) IntTRSPeriodicNontermProof [COMPLETE, 16 ms]
            (35) NO
    (36) LLVM Symbolic Execution SCC


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/SrbeL.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/SrbeL.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

struct.cell --> BasicStructureType(elementType: i32, elementType: *struct.cell)

Global variables:

Name: pc1 initVal: 1 type: i32 addrSpace: null alignment: 4 threadLocal: false constant: false linkageType: null section: null

Name: pc4 initVal: 1 type: i32 addrSpace: null alignment: 4 threadLocal: false constant: false linkageType: null section: null

Name: push.t1 initVal: null type: *BasicTypeName typeName: struct.cellBasicStructureType(elementType: i32, elementType: *struct.cell) addrSpace: null alignment: 8 threadLocal: false constant: false linkageType: INTERNAL section: null

Name: push.x1 initVal: null type: *BasicTypeName typeName: struct.cellBasicStructureType(elementType: i32, elementType: *struct.cell) addrSpace: null alignment: 8 threadLocal: false constant: false linkageType: INTERNAL section: null

Name: S initVal: null type: *BasicTypeName typeName: struct.cellBasicStructureType(elementType: i32, elementType: *struct.cell) addrSpace: null alignment: 8 threadLocal: false constant: false linkageType: COMMON section: null

Name: pop.t4 initVal: null type: *BasicTypeName typeName: struct.cellBasicStructureType(elementType: i32, elementType: *struct.cell) addrSpace: null alignment: 8 threadLocal: false constant: false linkageType: INTERNAL section: null

Name: pop.x4 initVal: null type: *BasicTypeName typeName: struct.cellBasicStructureType(elementType: i32, elementType: *struct.cell) addrSpace: null alignment: 8 threadLocal: false constant: false linkageType: INTERNAL section: null

Name: pop.res4 initVal: 0 type: i32 addrSpace: null alignment: 4 threadLocal: false constant: false linkageType: INTERNAL section: null

Name: garbage initVal: null type: *BasicTypeName typeName: struct.cellBasicStructureType(elementType: i32, elementType: *struct.cell) addrSpace: null alignment: 8 threadLocal: false constant: false linkageType: COMMON section: null

Function declarations and definitions:

*BasicFunctionTypename: "malloc" returnParam: *i8 noalias parameters: (i64) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "free" returnParam: BasicVoidType parameters: (*i8) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "push" linkageType: EXTERNALLY_VISIBLE returnParam: BasicVoidType parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 14
	0:
		%1 = load @pc1
		%2 = add i32 %1, 1
		store %2, @pc1
		switch %1, %28 [1, %3 2, %10 3, %13 4, %15 5, %19 6, %27]
	3:
		%4 = call noalias *i8 @malloc(i64 16)
		%5 = bitcast *i8 %4 to *BasicTypeName typeName: struct.cellBasicStructureType(elementType: i32, elementType: *struct.cell)
		store %5, @push.x1
		%6 = load @push.x1
		%7 = getelementptr %6, 0, 0
		store 0, %7
		%8 = load @push.x1
		%9 = getelementptr %8, 0, 1
		store null, %9
		br %28
	10:
		%11 = load @push.x1
		%12 = getelementptr %11, 0, 0
		store 4, %12
		br %28
	13:
		%14 = load @S
		store %14, @push.t1
		br %28
	15:
		%16 = load @push.t1
		%17 = load @push.x1
		%18 = getelementptr %17, 0, 1
		store %16, %18
		br %28
	19:
		%20 = load @S
		%21 = load @push.t1
		%22 = icmp eq %20 %21
		br %22, %23, %25
	23:
		%24 = load @push.x1
		store %24, @S
		br %26
	25:
		store 3, @pc1
		br %26
	26:
		br %28
	27:
		store 1, @pc1
		br %28
	28:
		ret void

*BasicFunctionTypename: "pop" linkageType: EXTERNALLY_VISIBLE returnParam: BasicVoidType parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 26
	0:
		%1 = load @pc4
		%2 = add i32 %1, 1
		store %2, @pc4
		switch %1, %30 [1, %3 2, %5 3, %10 4, %14 5, %22]
	3:
		%4 = load @S
		store %4, @pop.t4
		br %30
	5:
		%6 = load @pop.t4
		%7 = icmp eq %6 null
		br %7, %8, %9
	8:
		store 1, @pc4
		br %9
	9:
		br %30
	10:
		%11 = load @pop.t4
		%12 = getelementptr %11, 0, 1
		%13 = load %12
		store %13, @pop.x4
		br %30
	14:
		%15 = load @S
		%16 = load @pop.t4
		%17 = icmp eq %15 %16
		br %17, %18, %20
	18:
		%19 = load @pop.x4
		store %19, @S
		br %21
	20:
		store 1, @pc4
		br %21
	21:
		br %30
	22:
		%23 = load @pop.t4
		%24 = getelementptr %23, 0, 0
		%25 = load %24
		store %25, @pop.res4
		%26 = load @garbage
		%27 = load @pop.t4
		%28 = getelementptr %27, 0, 1
		store %26, %28
		%29 = load @pop.t4
		store %29, @garbage
		store 1, @pc4
		br %30
	30:
		ret void

*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 115
	0:
		%1 = alloca i32, align 4
		%2 = alloca *BasicTypeName typeName: struct.cellBasicStructureType(elementType: i32, elementType: *struct.cell), align 8
		store 0, %1
		br %3
	3:
		%4 = load @S
		%5 = icmp ne %4 null
		br %5, %15, %6
	6:
		%7 = load @pc1
		%8 = icmp ne 1 %7
		br %8, %15, %9
	9:
		%10 = load @pc4
		%11 = icmp ne 1 %10
		br %11, %15, %12
	12:
		%13 = call i32 @__VERIFIER_nondet_int()
		%14 = icmp ne %13 0
		br %15
	15:
		%16 = phi [1, %9], [1, %6], [1, %3], [%14, %12]
		br %16, %17, %23
	17:
		%18 = call i32 @__VERIFIER_nondet_int()
		%19 = icmp ne %18 0
		br %19, %20, %21
	20:
		Unnamed Call-Instruction = call BasicVoidType @push()
		br %22
	21:
		Unnamed Call-Instruction = call BasicVoidType @pop()
		br %22
	22:
		br %3
	23:
		br %24
	24:
		%25 = load @garbage
		%26 = icmp ne %25 null
		br %26, %27, %34
	27:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**BasicTypeName typeName: struct.cellBasicStructureType(elementType: i32, elementType: *struct.cell) %2)
		%28 = load @garbage
		%29 = getelementptr %28, 0, 1
		%30 = load %29
		store %30, %2
		%31 = load @garbage
		%32 = bitcast *BasicTypeName typeName: struct.cellBasicStructureType(elementType: i32, elementType: *struct.cell) %31 to *i8
		Unnamed Call-Instruction = call BasicVoidType @free(*i8 %32)
		%33 = load %2
		store %33, @garbage
		br %24
	34:
		%35 = load @garbage
		%36 = icmp ne %35 null
		%37 = xor i1 %36, 1
		%38 = xor i1 %37, 1
		%39 = zext i1 %38 to i32
		ret %39


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 4 SCCs.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC
----------------------------------------

(8) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 16 rulesP rules:
f_2817(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v75738, v79981, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) -> f_2825(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v75738, v79981, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) :|: 0 < v80992
f_2825(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v75738, v79981, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) -> f_2835(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v75738, v79981, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) :|: 0 = 0
f_2835(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v75738, v79981, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) -> f_2843(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v75738, v79981, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) :|: TRUE
f_2843(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v75738, v79981, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) -> f_2852(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v75738, v79981, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) :|: TRUE
f_2852(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v75738, v79981, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) -> f_2860(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v79981, v75738, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) :|: 0 = 0
f_2860(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v79981, v75738, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) -> f_2869(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v87954, v75738, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) :|: v87954 = 8 + v80992 && 9 <= v87954
f_2869(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v87954, v75738, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) -> f_2878(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v87954, v88040, v75738, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) :|: TRUE
f_2878(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v87954, v88040, v75738, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) -> f_2886(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v87954, v88040, v75738, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) :|: TRUE
f_2886(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v87954, v88040, v75738, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) -> f_2892(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v87954, v88040, v75738, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) :|: 0 = 0
f_2892(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v87954, v88040, v75738, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) -> f_2895(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v87954, v88040, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) :|: 0 = 0
f_2895(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v87954, v88040, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) -> f_2896(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v87954, v88040, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) :|: TRUE
f_2896(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v87954, v88040, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) -> f_2897(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v87954, v88040, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) :|: 0 = 0
f_2897(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v87954, v88040, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) -> f_2898(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v87954, v88040, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) :|: TRUE
f_2898(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v87954, v88040, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) -> f_2899(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v87954, v88040, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) :|: TRUE
f_2899(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v87954, v88040, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) -> f_2805(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v87954, v88040, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) :|: TRUE
f_2805(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v75738, v79981, v80992, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) -> f_2817(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v75738, v79981, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_2817(v58960:0, v58961:0, v58962:0, v58963:0, v58964:0, v58965:0, v58966:0, v58967:0, v58968:0, v58969:0, v58970:0, 0, 1, v80992:0, v75738:0, v79981:0, v58974:0, v58975:0, v58976:0, v58977:0, v58978:0, v58979:0, v58980:0, v58981:0, v58982:0, v58983:0, v58984:0, 3, 7, 8, 4, 9) -> f_2817(v58960:0, v58961:0, v58962:0, v58963:0, v58964:0, v58965:0, v58966:0, v58967:0, v58968:0, v58969:0, v58970:0, 0, 1, v88040:0, v80992:0, 8 + v80992:0, v58974:0, v58975:0, v58976:0, v58977:0, v58978:0, v58979:0, v58980:0, v58981:0, v58982:0, v58983:0, v58984:0, 3, 7, 8, 4, 9) :|: v80992:0 > 0
Filtered unneeded arguments:
   f_2817(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32) -> f_2817(x14)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_2817(v80992:0) -> f_2817(v88040:0) :|: v80992:0 > 0

----------------------------------------

(9)
Obligation:
Rules:
f_2817(v80992:0) -> f_2817(v88040:0) :|: v80992:0 > 0

----------------------------------------

(10) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, v80992:0) -> f(1, v88040:0) :|: pc = 1 && v80992:0 > 0
Witness term starting non-terminating reduction: f(1, 1)
----------------------------------------

(11)
NO

----------------------------------------

(12) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 16 rulesP rules:
f_2817(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v75738, v79981, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) -> f_2825(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v75738, v79981, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) :|: 0 < v80992
f_2825(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v75738, v79981, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) -> f_2835(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v75738, v79981, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) :|: 0 = 0
f_2835(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v75738, v79981, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) -> f_2843(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v75738, v79981, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) :|: TRUE
f_2843(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v75738, v79981, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) -> f_2852(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v75738, v79981, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) :|: TRUE
f_2852(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v75738, v79981, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) -> f_2860(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v79981, v75738, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) :|: 0 = 0
f_2860(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v79981, v75738, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) -> f_2869(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v87954, v75738, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) :|: v87954 = 8 + v80992 && 9 <= v87954
f_2869(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v87954, v75738, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) -> f_2878(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v87954, v88040, v75738, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) :|: TRUE
f_2878(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v87954, v88040, v75738, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) -> f_2886(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v87954, v88040, v75738, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) :|: TRUE
f_2886(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v87954, v88040, v75738, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) -> f_2892(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v87954, v88040, v75738, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) :|: 0 = 0
f_2892(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v87954, v88040, v75738, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) -> f_2895(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v87954, v88040, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) :|: 0 = 0
f_2895(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v87954, v88040, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) -> f_2896(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v87954, v88040, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) :|: TRUE
f_2896(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v87954, v88040, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) -> f_2897(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v87954, v88040, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) :|: 0 = 0
f_2897(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v87954, v88040, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) -> f_2898(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v87954, v88040, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) :|: TRUE
f_2898(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v87954, v88040, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) -> f_2899(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v87954, v88040, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) :|: TRUE
f_2899(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v87954, v88040, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) -> f_2805(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v87954, v88040, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) :|: 1 <= v58960 && 1 <= v58961 && 1 <= v58962 && 1 <= v58963 && 1 <= v58964 && 1 <= v58965 && 1 <= v58966 && 1 <= v58967 && 1 <= v58968 && 1 <= v58969 && 1 <= v58970 && 4 <= v58974 && 4 <= v58975 && 8 <= v58976 && 8 <= v58977 && 8 <= v58978 && 8 <= v58979 && 8 <= v58980 && 4 <= v58981 && 8 <= v58982 && 4 <= v58983 && 8 <= v58984 && 1 <= v80992 && 9 <= v87954 && 0 <= v88040 && v58960 <= v58974 && v58961 <= v58975 && v58962 <= v58976 && v58963 <= v58977 && v58964 <= v58978 && v58965 <= v58979 && v58966 <= v58980 && v58967 <= v58981 && v58968 <= v58982 && v58969 <= v58983 && v58970 <= v58984
f_2805(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v75738, v79981, v80992, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) -> f_2817(v58960, v58961, v58962, v58963, v58964, v58965, v58966, v58967, v58968, v58969, v58970, 0, 1, v80992, v75738, v79981, v58974, v58975, v58976, v58977, v58978, v58979, v58980, v58981, v58982, v58983, v58984, 3, 7, 8, 4, 9) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_2817(v58960:0, v58961:0, v58962:0, v58963:0, v58964:0, v58965:0, v58966:0, v58967:0, v58968:0, v58969:0, v58970:0, 0, 1, v80992:0, v75738:0, v79981:0, v58974:0, v58975:0, v58976:0, v58977:0, v58978:0, v58979:0, v58980:0, v58981:0, v58982:0, v58983:0, v58984:0, 3, 7, 8, 4, 9) -> f_2817(v58960:0, v58961:0, v58962:0, v58963:0, v58964:0, v58965:0, v58966:0, v58967:0, v58968:0, v58969:0, v58970:0, 0, 1, v88040:0, v80992:0, 8 + v80992:0, v58974:0, v58975:0, v58976:0, v58977:0, v58978:0, v58979:0, v58980:0, v58981:0, v58982:0, v58983:0, v58984:0, 3, 7, 8, 4, 9) :|: v58961:0 > 0 && v58960:0 > 0 && v58962:0 > 0 && v58963:0 > 0 && v58964:0 > 0 && v58965:0 > 0 && v58966:0 > 0 && v58967:0 > 0 && v58968:0 > 0 && v58969:0 > 0 && v58970:0 > 0 && v58974:0 > 3 && v58975:0 > 3 && v58976:0 > 7 && v58977:0 > 7 && v58978:0 > 7 && v58979:0 > 7 && v58980:0 > 7 && v58981:0 > 3 && v58982:0 > 7 && v58983:0 > 3 && v58984:0 > 7 && v80992:0 > 0 && v88040:0 > -1 && v58974:0 >= v58960:0 && v58975:0 >= v58961:0 && v58976:0 >= v58962:0 && v58977:0 >= v58963:0 && v58978:0 >= v58964:0 && v58979:0 >= v58965:0 && v58980:0 >= v58966:0 && v58981:0 >= v58967:0 && v58982:0 >= v58968:0 && v58984:0 >= v58970:0 && v58983:0 >= v58969:0
Filtered unneeded arguments:
   f_2817(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32) -> f_2817(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x14, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_2817(v58960:0, v58961:0, v58962:0, v58963:0, v58964:0, v58965:0, v58966:0, v58967:0, v58968:0, v58969:0, v58970:0, v80992:0, v58974:0, v58975:0, v58976:0, v58977:0, v58978:0, v58979:0, v58980:0, v58981:0, v58982:0, v58983:0, v58984:0) -> f_2817(v58960:0, v58961:0, v58962:0, v58963:0, v58964:0, v58965:0, v58966:0, v58967:0, v58968:0, v58969:0, v58970:0, v88040:0, v58974:0, v58975:0, v58976:0, v58977:0, v58978:0, v58979:0, v58980:0, v58981:0, v58982:0, v58983:0, v58984:0) :|: v58960:0 > 0 && v58961:0 > 0 && v58962:0 > 0 && v58963:0 > 0 && v58964:0 > 0 && v58965:0 > 0 && v58966:0 > 0 && v58967:0 > 0 && v58968:0 > 0 && v58969:0 > 0 && v58970:0 > 0 && v58974:0 > 3 && v58975:0 > 3 && v58976:0 > 7 && v58977:0 > 7 && v58978:0 > 7 && v58979:0 > 7 && v58980:0 > 7 && v58981:0 > 3 && v58982:0 > 7 && v58983:0 > 3 && v58984:0 > 7 && v80992:0 > 0 && v88040:0 > -1 && v58974:0 >= v58960:0 && v58975:0 >= v58961:0 && v58976:0 >= v58962:0 && v58977:0 >= v58963:0 && v58978:0 >= v58964:0 && v58979:0 >= v58965:0 && v58980:0 >= v58966:0 && v58981:0 >= v58967:0 && v58982:0 >= v58968:0 && v58983:0 >= v58969:0 && v58984:0 >= v58970:0

----------------------------------------

(13)
Obligation:
Rules:
f_2817(v58960:0, v58961:0, v58962:0, v58963:0, v58964:0, v58965:0, v58966:0, v58967:0, v58968:0, v58969:0, v58970:0, v80992:0, v58974:0, v58975:0, v58976:0, v58977:0, v58978:0, v58979:0, v58980:0, v58981:0, v58982:0, v58983:0, v58984:0) -> f_2817(v58960:0, v58961:0, v58962:0, v58963:0, v58964:0, v58965:0, v58966:0, v58967:0, v58968:0, v58969:0, v58970:0, v88040:0, v58974:0, v58975:0, v58976:0, v58977:0, v58978:0, v58979:0, v58980:0, v58981:0, v58982:0, v58983:0, v58984:0) :|: v58960:0 > 0 && v58961:0 > 0 && v58962:0 > 0 && v58963:0 > 0 && v58964:0 > 0 && v58965:0 > 0 && v58966:0 > 0 && v58967:0 > 0 && v58968:0 > 0 && v58969:0 > 0 && v58970:0 > 0 && v58974:0 > 3 && v58975:0 > 3 && v58976:0 > 7 && v58977:0 > 7 && v58978:0 > 7 && v58979:0 > 7 && v58980:0 > 7 && v58981:0 > 3 && v58982:0 > 7 && v58983:0 > 3 && v58984:0 > 7 && v80992:0 > 0 && v88040:0 > -1 && v58974:0 >= v58960:0 && v58975:0 >= v58961:0 && v58976:0 >= v58962:0 && v58977:0 >= v58963:0 && v58978:0 >= v58964:0 && v58979:0 >= v58965:0 && v58980:0 >= v58966:0 && v58981:0 >= v58967:0 && v58982:0 >= v58968:0 && v58983:0 >= v58969:0 && v58984:0 >= v58970:0

----------------------------------------

(14) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(15)
Obligation:
Rules:
f_2817(v58960:0:0, v58961:0:0, v58962:0:0, v58963:0:0, v58964:0:0, v58965:0:0, v58966:0:0, v58967:0:0, v58968:0:0, v58969:0:0, v58970:0:0, v80992:0:0, v58974:0:0, v58975:0:0, v58976:0:0, v58977:0:0, v58978:0:0, v58979:0:0, v58980:0:0, v58981:0:0, v58982:0:0, v58983:0:0, v58984:0:0) -> f_2817(v58960:0:0, v58961:0:0, v58962:0:0, v58963:0:0, v58964:0:0, v58965:0:0, v58966:0:0, v58967:0:0, v58968:0:0, v58969:0:0, v58970:0:0, v88040:0:0, v58974:0:0, v58975:0:0, v58976:0:0, v58977:0:0, v58978:0:0, v58979:0:0, v58980:0:0, v58981:0:0, v58982:0:0, v58983:0:0, v58984:0:0) :|: v58983:0:0 >= v58969:0:0 && v58984:0:0 >= v58970:0:0 && v58982:0:0 >= v58968:0:0 && v58981:0:0 >= v58967:0:0 && v58980:0:0 >= v58966:0:0 && v58979:0:0 >= v58965:0:0 && v58978:0:0 >= v58964:0:0 && v58977:0:0 >= v58963:0:0 && v58976:0:0 >= v58962:0:0 && v58975:0:0 >= v58961:0:0 && v58974:0:0 >= v58960:0:0 && v88040:0:0 > -1 && v80992:0:0 > 0 && v58984:0:0 > 7 && v58983:0:0 > 3 && v58982:0:0 > 7 && v58981:0:0 > 3 && v58980:0:0 > 7 && v58979:0:0 > 7 && v58978:0:0 > 7 && v58977:0:0 > 7 && v58976:0:0 > 7 && v58975:0:0 > 3 && v58974:0:0 > 3 && v58970:0:0 > 0 && v58969:0:0 > 0 && v58968:0:0 > 0 && v58967:0:0 > 0 && v58966:0:0 > 0 && v58965:0:0 > 0 && v58964:0:0 > 0 && v58963:0:0 > 0 && v58962:0:0 > 0 && v58961:0:0 > 0 && v58960:0:0 > 0

----------------------------------------

(16)
Obligation:
SCC
----------------------------------------

(17) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 16 rulesP rules:
f_2722(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v68641, v75002, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) -> f_2739(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v68641, v75002, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) :|: 0 < v75736
f_2739(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v68641, v75002, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) -> f_2753(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v68641, v75002, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) :|: 0 = 0
f_2753(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v68641, v75002, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) -> f_2766(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v68641, v75002, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) :|: TRUE
f_2766(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v68641, v75002, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) -> f_2778(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v68641, v75002, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) :|: TRUE
f_2778(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v68641, v75002, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) -> f_2792(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v75002, v68641, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) :|: 0 = 0
f_2792(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v75002, v68641, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) -> f_2803(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v85165, v68641, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) :|: v85165 = 8 + v75736 && 9 <= v85165
f_2803(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v85165, v68641, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) -> f_2815(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v85165, v85989, v68641, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) :|: TRUE
f_2815(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v85165, v85989, v68641, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) -> f_2823(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v85165, v85989, v68641, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) :|: TRUE
f_2823(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v85165, v85989, v68641, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) -> f_2834(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v85165, v85989, v68641, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) :|: 0 = 0
f_2834(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v85165, v85989, v68641, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) -> f_2842(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v85165, v85989, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) :|: 0 = 0
f_2842(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v85165, v85989, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) -> f_2851(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v85165, v85989, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) :|: TRUE
f_2851(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v85165, v85989, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) -> f_2859(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v85165, v85989, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) :|: 0 = 0
f_2859(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v85165, v85989, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) -> f_2868(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v85165, v85989, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) :|: TRUE
f_2868(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v85165, v85989, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) -> f_2877(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v85165, v85989, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) :|: TRUE
f_2877(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v85165, v85989, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) -> f_2702(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v85165, v85989, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) :|: TRUE
f_2702(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v68641, v75002, v75736, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) -> f_2722(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v68641, v75002, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_2722(v38868:0, v38869:0, v38870:0, v38871:0, v38872:0, v38873:0, v38874:0, v38875:0, v38876:0, v38877:0, v38878:0, 0, v38881:0, 1, v75736:0, v68641:0, v75002:0, v38882:0, v38883:0, v38884:0, v38885:0, v38886:0, v38887:0, v38888:0, v38889:0, v38890:0, v38891:0, v38892:0, 3, 7, 8, 4, 9) -> f_2722(v38868:0, v38869:0, v38870:0, v38871:0, v38872:0, v38873:0, v38874:0, v38875:0, v38876:0, v38877:0, v38878:0, 0, v38881:0, 1, v85989:0, v75736:0, 8 + v75736:0, v38882:0, v38883:0, v38884:0, v38885:0, v38886:0, v38887:0, v38888:0, v38889:0, v38890:0, v38891:0, v38892:0, 3, 7, 8, 4, 9) :|: v75736:0 > 0
Filtered unneeded arguments:
   f_2722(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33) -> f_2722(x15)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_2722(v75736:0) -> f_2722(v85989:0) :|: v75736:0 > 0

----------------------------------------

(18)
Obligation:
Rules:
f_2722(v75736:0) -> f_2722(v85989:0) :|: v75736:0 > 0

----------------------------------------

(19) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, v75736:0) -> f(1, v85989:0) :|: pc = 1 && v75736:0 > 0
Witness term starting non-terminating reduction: f(1, 1)
----------------------------------------

(20)
NO

----------------------------------------

(21) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 16 rulesP rules:
f_2722(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v68641, v75002, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) -> f_2739(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v68641, v75002, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) :|: 0 < v75736
f_2739(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v68641, v75002, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) -> f_2753(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v68641, v75002, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) :|: 0 = 0
f_2753(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v68641, v75002, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) -> f_2766(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v68641, v75002, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) :|: TRUE
f_2766(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v68641, v75002, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) -> f_2778(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v68641, v75002, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) :|: TRUE
f_2778(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v68641, v75002, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) -> f_2792(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v75002, v68641, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) :|: 0 = 0
f_2792(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v75002, v68641, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) -> f_2803(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v85165, v68641, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) :|: v85165 = 8 + v75736 && 9 <= v85165
f_2803(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v85165, v68641, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) -> f_2815(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v85165, v85989, v68641, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) :|: TRUE
f_2815(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v85165, v85989, v68641, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) -> f_2823(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v85165, v85989, v68641, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) :|: TRUE
f_2823(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v85165, v85989, v68641, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) -> f_2834(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v85165, v85989, v68641, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) :|: 0 = 0
f_2834(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v85165, v85989, v68641, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) -> f_2842(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v85165, v85989, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) :|: 0 = 0
f_2842(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v85165, v85989, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) -> f_2851(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v85165, v85989, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) :|: TRUE
f_2851(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v85165, v85989, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) -> f_2859(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v85165, v85989, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) :|: 0 = 0
f_2859(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v85165, v85989, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) -> f_2868(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v85165, v85989, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) :|: TRUE
f_2868(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v85165, v85989, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) -> f_2877(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v85165, v85989, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) :|: TRUE
f_2877(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v85165, v85989, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) -> f_2702(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v85165, v85989, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) :|: 1 <= v38868 && 1 <= v38869 && 1 <= v38870 && 1 <= v38871 && 1 <= v38872 && 1 <= v38873 && 1 <= v38874 && 1 <= v38875 && 1 <= v38876 && 1 <= v38877 && 1 <= v38878 && 4 <= v38882 && 4 <= v38883 && 8 <= v38884 && 8 <= v38885 && 8 <= v38886 && 8 <= v38887 && 8 <= v38888 && 4 <= v38889 && 8 <= v38890 && 4 <= v38891 && 8 <= v38892 && 1 <= v75736 && 9 <= v85165 && 0 <= v85989 && v38868 <= v38882 && v38869 <= v38883 && v38870 <= v38884 && v38871 <= v38885 && v38872 <= v38886 && v38873 <= v38887 && v38874 <= v38888 && v38875 <= v38889 && v38876 <= v38890 && v38877 <= v38891 && v38878 <= v38892
f_2702(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v68641, v75002, v75736, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) -> f_2722(v38868, v38869, v38870, v38871, v38872, v38873, v38874, v38875, v38876, v38877, v38878, 0, v38881, 1, v75736, v68641, v75002, v38882, v38883, v38884, v38885, v38886, v38887, v38888, v38889, v38890, v38891, v38892, 3, 7, 8, 4, 9) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_2722(v38868:0, v38869:0, v38870:0, v38871:0, v38872:0, v38873:0, v38874:0, v38875:0, v38876:0, v38877:0, v38878:0, 0, v38881:0, 1, v75736:0, v68641:0, v75002:0, v38882:0, v38883:0, v38884:0, v38885:0, v38886:0, v38887:0, v38888:0, v38889:0, v38890:0, v38891:0, v38892:0, 3, 7, 8, 4, 9) -> f_2722(v38868:0, v38869:0, v38870:0, v38871:0, v38872:0, v38873:0, v38874:0, v38875:0, v38876:0, v38877:0, v38878:0, 0, v38881:0, 1, v85989:0, v75736:0, 8 + v75736:0, v38882:0, v38883:0, v38884:0, v38885:0, v38886:0, v38887:0, v38888:0, v38889:0, v38890:0, v38891:0, v38892:0, 3, 7, 8, 4, 9) :|: v38869:0 > 0 && v38868:0 > 0 && v38870:0 > 0 && v38871:0 > 0 && v38872:0 > 0 && v38873:0 > 0 && v38874:0 > 0 && v38875:0 > 0 && v38876:0 > 0 && v38877:0 > 0 && v38878:0 > 0 && v38882:0 > 3 && v38883:0 > 3 && v38884:0 > 7 && v38885:0 > 7 && v38886:0 > 7 && v38887:0 > 7 && v38888:0 > 7 && v38889:0 > 3 && v38890:0 > 7 && v38891:0 > 3 && v38892:0 > 7 && v75736:0 > 0 && v85989:0 > -1 && v38882:0 >= v38868:0 && v38883:0 >= v38869:0 && v38884:0 >= v38870:0 && v38885:0 >= v38871:0 && v38886:0 >= v38872:0 && v38887:0 >= v38873:0 && v38888:0 >= v38874:0 && v38889:0 >= v38875:0 && v38890:0 >= v38876:0 && v38892:0 >= v38878:0 && v38891:0 >= v38877:0
Filtered unneeded arguments:
   f_2722(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33) -> f_2722(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x15, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_2722(v38868:0, v38869:0, v38870:0, v38871:0, v38872:0, v38873:0, v38874:0, v38875:0, v38876:0, v38877:0, v38878:0, v75736:0, v38882:0, v38883:0, v38884:0, v38885:0, v38886:0, v38887:0, v38888:0, v38889:0, v38890:0, v38891:0, v38892:0) -> f_2722(v38868:0, v38869:0, v38870:0, v38871:0, v38872:0, v38873:0, v38874:0, v38875:0, v38876:0, v38877:0, v38878:0, v85989:0, v38882:0, v38883:0, v38884:0, v38885:0, v38886:0, v38887:0, v38888:0, v38889:0, v38890:0, v38891:0, v38892:0) :|: v38868:0 > 0 && v38869:0 > 0 && v38870:0 > 0 && v38871:0 > 0 && v38872:0 > 0 && v38873:0 > 0 && v38874:0 > 0 && v38875:0 > 0 && v38876:0 > 0 && v38877:0 > 0 && v38878:0 > 0 && v38882:0 > 3 && v38883:0 > 3 && v38884:0 > 7 && v38885:0 > 7 && v38886:0 > 7 && v38887:0 > 7 && v38888:0 > 7 && v38889:0 > 3 && v38890:0 > 7 && v38891:0 > 3 && v38892:0 > 7 && v75736:0 > 0 && v85989:0 > -1 && v38882:0 >= v38868:0 && v38883:0 >= v38869:0 && v38884:0 >= v38870:0 && v38885:0 >= v38871:0 && v38886:0 >= v38872:0 && v38887:0 >= v38873:0 && v38888:0 >= v38874:0 && v38889:0 >= v38875:0 && v38890:0 >= v38876:0 && v38891:0 >= v38877:0 && v38892:0 >= v38878:0

----------------------------------------

(22)
Obligation:
Rules:
f_2722(v38868:0, v38869:0, v38870:0, v38871:0, v38872:0, v38873:0, v38874:0, v38875:0, v38876:0, v38877:0, v38878:0, v75736:0, v38882:0, v38883:0, v38884:0, v38885:0, v38886:0, v38887:0, v38888:0, v38889:0, v38890:0, v38891:0, v38892:0) -> f_2722(v38868:0, v38869:0, v38870:0, v38871:0, v38872:0, v38873:0, v38874:0, v38875:0, v38876:0, v38877:0, v38878:0, v85989:0, v38882:0, v38883:0, v38884:0, v38885:0, v38886:0, v38887:0, v38888:0, v38889:0, v38890:0, v38891:0, v38892:0) :|: v38868:0 > 0 && v38869:0 > 0 && v38870:0 > 0 && v38871:0 > 0 && v38872:0 > 0 && v38873:0 > 0 && v38874:0 > 0 && v38875:0 > 0 && v38876:0 > 0 && v38877:0 > 0 && v38878:0 > 0 && v38882:0 > 3 && v38883:0 > 3 && v38884:0 > 7 && v38885:0 > 7 && v38886:0 > 7 && v38887:0 > 7 && v38888:0 > 7 && v38889:0 > 3 && v38890:0 > 7 && v38891:0 > 3 && v38892:0 > 7 && v75736:0 > 0 && v85989:0 > -1 && v38882:0 >= v38868:0 && v38883:0 >= v38869:0 && v38884:0 >= v38870:0 && v38885:0 >= v38871:0 && v38886:0 >= v38872:0 && v38887:0 >= v38873:0 && v38888:0 >= v38874:0 && v38889:0 >= v38875:0 && v38890:0 >= v38876:0 && v38891:0 >= v38877:0 && v38892:0 >= v38878:0

----------------------------------------

(23) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(24)
Obligation:
Rules:
f_2722(v38868:0:0, v38869:0:0, v38870:0:0, v38871:0:0, v38872:0:0, v38873:0:0, v38874:0:0, v38875:0:0, v38876:0:0, v38877:0:0, v38878:0:0, v75736:0:0, v38882:0:0, v38883:0:0, v38884:0:0, v38885:0:0, v38886:0:0, v38887:0:0, v38888:0:0, v38889:0:0, v38890:0:0, v38891:0:0, v38892:0:0) -> f_2722(v38868:0:0, v38869:0:0, v38870:0:0, v38871:0:0, v38872:0:0, v38873:0:0, v38874:0:0, v38875:0:0, v38876:0:0, v38877:0:0, v38878:0:0, v85989:0:0, v38882:0:0, v38883:0:0, v38884:0:0, v38885:0:0, v38886:0:0, v38887:0:0, v38888:0:0, v38889:0:0, v38890:0:0, v38891:0:0, v38892:0:0) :|: v38891:0:0 >= v38877:0:0 && v38892:0:0 >= v38878:0:0 && v38890:0:0 >= v38876:0:0 && v38889:0:0 >= v38875:0:0 && v38888:0:0 >= v38874:0:0 && v38887:0:0 >= v38873:0:0 && v38886:0:0 >= v38872:0:0 && v38885:0:0 >= v38871:0:0 && v38884:0:0 >= v38870:0:0 && v38883:0:0 >= v38869:0:0 && v38882:0:0 >= v38868:0:0 && v85989:0:0 > -1 && v75736:0:0 > 0 && v38892:0:0 > 7 && v38891:0:0 > 3 && v38890:0:0 > 7 && v38889:0:0 > 3 && v38888:0:0 > 7 && v38887:0:0 > 7 && v38886:0:0 > 7 && v38885:0:0 > 7 && v38884:0:0 > 7 && v38883:0:0 > 3 && v38882:0:0 > 3 && v38878:0:0 > 0 && v38877:0:0 > 0 && v38876:0:0 > 0 && v38875:0:0 > 0 && v38874:0:0 > 0 && v38873:0:0 > 0 && v38872:0:0 > 0 && v38871:0:0 > 0 && v38870:0:0 > 0 && v38869:0:0 > 0 && v38868:0:0 > 0

----------------------------------------

(25)
Obligation:
SCC
----------------------------------------

(26) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 16 rulesP rules:
f_1121(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v35, v2356, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) -> f_1165(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v35, v2356, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) :|: 0 < v3508
f_1165(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v35, v2356, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) -> f_1219(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v35, v2356, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) :|: 0 = 0
f_1219(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v35, v2356, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) -> f_1272(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v35, v2356, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) :|: TRUE
f_1272(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v35, v2356, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) -> f_1328(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v35, v2356, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) :|: TRUE
f_1328(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v35, v2356, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) -> f_1386(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v2356, v35, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) :|: 0 = 0
f_1386(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v2356, v35, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) -> f_1452(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v30722, v35, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) :|: v30722 = 8 + v3508 && 9 <= v30722
f_1452(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v30722, v35, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) -> f_1524(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v30722, v34336, v35, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) :|: TRUE
f_1524(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v30722, v34336, v35, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) -> f_1598(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v30722, v34336, v35, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) :|: TRUE
f_1598(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v30722, v34336, v35, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) -> f_1657(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v30722, v34336, v35, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) :|: 0 = 0
f_1657(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v30722, v34336, v35, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) -> f_1696(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v30722, v34336, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) :|: 0 = 0
f_1696(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v30722, v34336, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) -> f_1738(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v30722, v34336, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) :|: TRUE
f_1738(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v30722, v34336, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) -> f_1780(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v30722, v34336, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) :|: 0 = 0
f_1780(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v30722, v34336, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) -> f_1826(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v30722, v34336, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) :|: TRUE
f_1826(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v30722, v34336, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) -> f_1867(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v30722, v34336, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) :|: TRUE
f_1867(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v30722, v34336, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) -> f_1080(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v30722, v34336, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) :|: TRUE
f_1080(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v35, v2356, v3508, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) -> f_1121(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v35, v2356, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_1121(v1:0, v5:0, v9:0, v13:0, v17:0, v21:0, v25:0, v29:0, v33:0, v37:0, v39:0, 0, 1, v3508:0, v35:0, v2356:0, v2:0, v6:0, v10:0, v14:0, v18:0, v22:0, v26:0, v30:0, v34:0, v38:0, v40:0, v11:0, v15:0, v23:0, v27:0, v31:0, 3, 7, 8, 4, 9) -> f_1121(v1:0, v5:0, v9:0, v13:0, v17:0, v21:0, v25:0, v29:0, v33:0, v37:0, v39:0, 0, 1, v34336:0, v3508:0, 8 + v3508:0, v2:0, v6:0, v10:0, v14:0, v18:0, v22:0, v26:0, v30:0, v34:0, v38:0, v40:0, v11:0, v15:0, v23:0, v27:0, v31:0, 3, 7, 8, 4, 9) :|: v3508:0 > 0
Filtered unneeded arguments:
   f_1121(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37) -> f_1121(x14)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1121(v3508:0) -> f_1121(v34336:0) :|: v3508:0 > 0

----------------------------------------

(27)
Obligation:
Rules:
f_1121(v3508:0) -> f_1121(v34336:0) :|: v3508:0 > 0

----------------------------------------

(28) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, v3508:0) -> f(1, v34336:0) :|: pc = 1 && v3508:0 > 0
Witness term starting non-terminating reduction: f(1, 1)
----------------------------------------

(29)
NO

----------------------------------------

(30) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 16 rulesP rules:
f_1121(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v35, v2356, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) -> f_1165(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v35, v2356, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) :|: 0 < v3508
f_1165(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v35, v2356, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) -> f_1219(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v35, v2356, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) :|: 0 = 0
f_1219(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v35, v2356, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) -> f_1272(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v35, v2356, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) :|: TRUE
f_1272(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v35, v2356, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) -> f_1328(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v35, v2356, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) :|: TRUE
f_1328(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v35, v2356, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) -> f_1386(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v2356, v35, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) :|: 0 = 0
f_1386(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v2356, v35, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) -> f_1452(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v30722, v35, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) :|: v30722 = 8 + v3508 && 9 <= v30722
f_1452(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v30722, v35, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) -> f_1524(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v30722, v34336, v35, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) :|: TRUE
f_1524(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v30722, v34336, v35, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) -> f_1598(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v30722, v34336, v35, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) :|: TRUE
f_1598(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v30722, v34336, v35, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) -> f_1657(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v30722, v34336, v35, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) :|: 0 = 0
f_1657(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v30722, v34336, v35, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) -> f_1696(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v30722, v34336, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) :|: 0 = 0
f_1696(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v30722, v34336, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) -> f_1738(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v30722, v34336, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) :|: TRUE
f_1738(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v30722, v34336, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) -> f_1780(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v30722, v34336, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) :|: 0 = 0
f_1780(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v30722, v34336, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) -> f_1826(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v30722, v34336, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) :|: TRUE
f_1826(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v30722, v34336, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) -> f_1867(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v30722, v34336, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) :|: TRUE
f_1867(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v30722, v34336, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) -> f_1080(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v30722, v34336, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) :|: 1 <= v1 && 4 <= v2 && 1 <= v5 && 4 <= v6 && 1 <= v9 && 8 <= v10 && 0 <= v11 && 1 <= v13 && 8 <= v14 && 0 <= v15 && 1 <= v17 && 8 <= v18 && 1 <= v21 && 8 <= v22 && 0 <= v23 && 1 <= v25 && 8 <= v26 && 0 <= v27 && 1 <= v29 && 4 <= v30 && 1 <= v33 && 8 <= v34 && 1 <= v3508 && 1 <= v37 && 4 <= v38 && 1 <= v39 && 8 <= v40 && 9 <= v30722 && 0 <= v34336 && v1 <= v2 && v5 <= v6 && v9 <= v10 && v13 <= v14 && v17 <= v18 && v21 <= v22 && v25 <= v26 && v29 <= v30 && v33 <= v34 && v37 <= v38 && v39 <= v40
f_1080(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v35, v2356, v3508, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) -> f_1121(v1, v5, v9, v13, v17, v21, v25, v29, v33, v37, v39, 0, 1, v3508, v35, v2356, v2, v6, v10, v14, v18, v22, v26, v30, v34, v38, v40, v11, v15, v23, v27, v31, 3, 7, 8, 4, 9) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_1121(v1:0, v5:0, v9:0, v13:0, v17:0, v21:0, v25:0, v29:0, v33:0, v37:0, v39:0, 0, 1, v3508:0, v35:0, v2356:0, v2:0, v6:0, v10:0, v14:0, v18:0, v22:0, v26:0, v30:0, v34:0, v38:0, v40:0, v11:0, v15:0, v23:0, v27:0, v31:0, 3, 7, 8, 4, 9) -> f_1121(v1:0, v5:0, v9:0, v13:0, v17:0, v21:0, v25:0, v29:0, v33:0, v37:0, v39:0, 0, 1, v34336:0, v3508:0, 8 + v3508:0, v2:0, v6:0, v10:0, v14:0, v18:0, v22:0, v26:0, v30:0, v34:0, v38:0, v40:0, v11:0, v15:0, v23:0, v27:0, v31:0, 3, 7, 8, 4, 9) :|: v2:0 > 3 && v1:0 > 0 && v5:0 > 0 && v6:0 > 3 && v9:0 > 0 && v10:0 > 7 && v11:0 > -1 && v13:0 > 0 && v14:0 > 7 && v15:0 > -1 && v17:0 > 0 && v18:0 > 7 && v21:0 > 0 && v22:0 > 7 && v23:0 > -1 && v25:0 > 0 && v26:0 > 7 && v27:0 > -1 && v29:0 > 0 && v30:0 > 3 && v33:0 > 0 && v34:0 > 7 && v3508:0 > 0 && v37:0 > 0 && v38:0 > 3 && v39:0 > 0 && v40:0 > 7 && v34336:0 > -1 && v2:0 >= v1:0 && v6:0 >= v5:0 && v9:0 <= v10:0 && v14:0 >= v13:0 && v18:0 >= v17:0 && v22:0 >= v21:0 && v26:0 >= v25:0 && v30:0 >= v29:0 && v34:0 >= v33:0 && v40:0 >= v39:0 && v38:0 >= v37:0
Filtered unneeded arguments:
   f_1121(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37) -> f_1121(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x14, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1121(v1:0, v5:0, v9:0, v13:0, v17:0, v21:0, v25:0, v29:0, v33:0, v37:0, v39:0, v3508:0, v2:0, v6:0, v10:0, v14:0, v18:0, v22:0, v26:0, v30:0, v34:0, v38:0, v40:0, v11:0, v15:0, v23:0, v27:0) -> f_1121(v1:0, v5:0, v9:0, v13:0, v17:0, v21:0, v25:0, v29:0, v33:0, v37:0, v39:0, v34336:0, v2:0, v6:0, v10:0, v14:0, v18:0, v22:0, v26:0, v30:0, v34:0, v38:0, v40:0, v11:0, v15:0, v23:0, v27:0) :|: v1:0 > 0 && v2:0 > 3 && v5:0 > 0 && v6:0 > 3 && v9:0 > 0 && v10:0 > 7 && v11:0 > -1 && v13:0 > 0 && v14:0 > 7 && v15:0 > -1 && v17:0 > 0 && v18:0 > 7 && v21:0 > 0 && v22:0 > 7 && v23:0 > -1 && v25:0 > 0 && v26:0 > 7 && v27:0 > -1 && v29:0 > 0 && v30:0 > 3 && v33:0 > 0 && v34:0 > 7 && v3508:0 > 0 && v37:0 > 0 && v38:0 > 3 && v39:0 > 0 && v40:0 > 7 && v34336:0 > -1 && v2:0 >= v1:0 && v6:0 >= v5:0 && v9:0 <= v10:0 && v14:0 >= v13:0 && v18:0 >= v17:0 && v22:0 >= v21:0 && v26:0 >= v25:0 && v30:0 >= v29:0 && v34:0 >= v33:0 && v38:0 >= v37:0 && v40:0 >= v39:0

----------------------------------------

(31)
Obligation:
Rules:
f_1121(v1:0, v5:0, v9:0, v13:0, v17:0, v21:0, v25:0, v29:0, v33:0, v37:0, v39:0, v3508:0, v2:0, v6:0, v10:0, v14:0, v18:0, v22:0, v26:0, v30:0, v34:0, v38:0, v40:0, v11:0, v15:0, v23:0, v27:0) -> f_1121(v1:0, v5:0, v9:0, v13:0, v17:0, v21:0, v25:0, v29:0, v33:0, v37:0, v39:0, v34336:0, v2:0, v6:0, v10:0, v14:0, v18:0, v22:0, v26:0, v30:0, v34:0, v38:0, v40:0, v11:0, v15:0, v23:0, v27:0) :|: v1:0 > 0 && v2:0 > 3 && v5:0 > 0 && v6:0 > 3 && v9:0 > 0 && v10:0 > 7 && v11:0 > -1 && v13:0 > 0 && v14:0 > 7 && v15:0 > -1 && v17:0 > 0 && v18:0 > 7 && v21:0 > 0 && v22:0 > 7 && v23:0 > -1 && v25:0 > 0 && v26:0 > 7 && v27:0 > -1 && v29:0 > 0 && v30:0 > 3 && v33:0 > 0 && v34:0 > 7 && v3508:0 > 0 && v37:0 > 0 && v38:0 > 3 && v39:0 > 0 && v40:0 > 7 && v34336:0 > -1 && v2:0 >= v1:0 && v6:0 >= v5:0 && v9:0 <= v10:0 && v14:0 >= v13:0 && v18:0 >= v17:0 && v22:0 >= v21:0 && v26:0 >= v25:0 && v30:0 >= v29:0 && v34:0 >= v33:0 && v38:0 >= v37:0 && v40:0 >= v39:0

----------------------------------------

(32) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(33)
Obligation:
Rules:
f_1121(v1:0:0, v5:0:0, v9:0:0, v13:0:0, v17:0:0, v21:0:0, v25:0:0, v29:0:0, v33:0:0, v37:0:0, v39:0:0, v3508:0:0, v2:0:0, v6:0:0, v10:0:0, v14:0:0, v18:0:0, v22:0:0, v26:0:0, v30:0:0, v34:0:0, v38:0:0, v40:0:0, v11:0:0, v15:0:0, v23:0:0, v27:0:0) -> f_1121(v1:0:0, v5:0:0, v9:0:0, v13:0:0, v17:0:0, v21:0:0, v25:0:0, v29:0:0, v33:0:0, v37:0:0, v39:0:0, v34336:0:0, v2:0:0, v6:0:0, v10:0:0, v14:0:0, v18:0:0, v22:0:0, v26:0:0, v30:0:0, v34:0:0, v38:0:0, v40:0:0, v11:0:0, v15:0:0, v23:0:0, v27:0:0) :|: v38:0:0 >= v37:0:0 && v40:0:0 >= v39:0:0 && v34:0:0 >= v33:0:0 && v30:0:0 >= v29:0:0 && v26:0:0 >= v25:0:0 && v22:0:0 >= v21:0:0 && v18:0:0 >= v17:0:0 && v14:0:0 >= v13:0:0 && v9:0:0 <= v10:0:0 && v6:0:0 >= v5:0:0 && v2:0:0 >= v1:0:0 && v34336:0:0 > -1 && v40:0:0 > 7 && v39:0:0 > 0 && v38:0:0 > 3 && v37:0:0 > 0 && v3508:0:0 > 0 && v34:0:0 > 7 && v33:0:0 > 0 && v30:0:0 > 3 && v29:0:0 > 0 && v27:0:0 > -1 && v26:0:0 > 7 && v25:0:0 > 0 && v23:0:0 > -1 && v22:0:0 > 7 && v21:0:0 > 0 && v18:0:0 > 7 && v17:0:0 > 0 && v15:0:0 > -1 && v14:0:0 > 7 && v13:0:0 > 0 && v11:0:0 > -1 && v10:0:0 > 7 && v9:0:0 > 0 && v6:0:0 > 3 && v5:0:0 > 0 && v2:0:0 > 3 && v1:0:0 > 0

----------------------------------------

(34) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, v1:0:0, v5:0:0, v9:0:0, v13:0:0, v17:0:0, v21:0:0, v25:0:0, v29:0:0, v33:0:0, v37:0:0, v39:0:0, v3508:0:0, v2:0:0, v6:0:0, v10:0:0, v14:0:0, v18:0:0, v22:0:0, v26:0:0, v30:0:0, v34:0:0, v38:0:0, v40:0:0, v11:0:0, v15:0:0, v23:0:0, v27:0:0) -> f(1, v1:0:0, v5:0:0, v9:0:0, v13:0:0, v17:0:0, v21:0:0, v25:0:0, v29:0:0, v33:0:0, v37:0:0, v39:0:0, v34336:0:0, v2:0:0, v6:0:0, v10:0:0, v14:0:0, v18:0:0, v22:0:0, v26:0:0, v30:0:0, v34:0:0, v38:0:0, v40:0:0, v11:0:0, v15:0:0, v23:0:0, v27:0:0) :|: pc = 1 && (v38:0:0 >= v37:0:0 && v40:0:0 >= v39:0:0 && v34:0:0 >= v33:0:0 && v30:0:0 >= v29:0:0 && v26:0:0 >= v25:0:0 && v22:0:0 >= v21:0:0 && v18:0:0 >= v17:0:0 && v14:0:0 >= v13:0:0 && v9:0:0 <= v10:0:0 && v6:0:0 >= v5:0:0 && v2:0:0 >= v1:0:0 && v34336:0:0 > -1 && v40:0:0 > 7 && v39:0:0 > 0 && v38:0:0 > 3 && v37:0:0 > 0 && v3508:0:0 > 0 && v34:0:0 > 7 && v33:0:0 > 0 && v30:0:0 > 3 && v29:0:0 > 0 && v27:0:0 > -1 && v26:0:0 > 7 && v25:0:0 > 0 && v23:0:0 > -1 && v22:0:0 > 7 && v21:0:0 > 0 && v18:0:0 > 7 && v17:0:0 > 0 && v15:0:0 > -1 && v14:0:0 > 7 && v13:0:0 > 0 && v11:0:0 > -1 && v10:0:0 > 7 && v9:0:0 > 0 && v6:0:0 > 3 && v5:0:0 > 0 && v2:0:0 > 3 && v1:0:0 > 0)
Witness term starting non-terminating reduction: f(1, 4, 16, 8, 16, 8, 1, 16, 4, 1, 4, 1, 15, 6, 18, 10, 18, 14, 20, 22, 6, 22, 6, 20, 0, 0, 0, 0)
----------------------------------------

(35)
NO

----------------------------------------

(36)
Obligation:
SCC/hpcwork/ff862203/termcomp25/benchmarks/SrbeL.c:47:75: warning: unknown attribute '__leaf__' ignored [-Wunknown-attributes]
extern size_t __ctype_get_mb_cur_max (void) __attribute__ ((__nothrow__ , __leaf__)) ;
                                                                          ^
/hpcwork/ff862203/termcomp25/benchmarks/SrbeL.c:50:36: warning: unknown attribute '__leaf__' ignored [-Wunknown-attributes]
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;
                                   ^
/hpcwork/ff862203/termcomp25/benchmarks/SrbeL.c:52:36: warning: unknown attribute '__leaf__' ignored [-Wunknown-attributes]
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;
                                   ^
/hpcwork/ff862203/termcomp25/benchmarks/SrbeL.c:54:36: warning: unknown attribute '__leaf__' ignored [-Wunknown-attributes]
