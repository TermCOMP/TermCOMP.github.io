YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/omTL6.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could be proven:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 18 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 2653 ms]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) LLVM Symbolic Execution SCC
        (8) SCC2IRS [SOUND, 116 ms]
        (9) IntTRS
        (10) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (11) IntTRS
        (12) PolynomialOrderProcessor [EQUIVALENT, 7 ms]
        (13) AND
            (14) IntTRS
                (15) TerminationGraphProcessor [EQUIVALENT, 17 ms]
                (16) AND
                    (17) IntTRS
                        (18) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                        (19) IntTRS
                        (20) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                        (21) IntTRS
                        (22) RankingReductionPairProof [EQUIVALENT, 3 ms]
                        (23) IntTRS
                        (24) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                        (25) IntTRS
                        (26) RankingReductionPairProof [EQUIVALENT, 1 ms]
                        (27) IntTRS
                        (28) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                        (29) IntTRS
                        (30) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                        (31) IntTRS
                        (32) RankingReductionPairProof [EQUIVALENT, 1 ms]
                        (33) YES
                    (34) IntTRS
                        (35) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                        (36) IntTRS
                        (37) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                        (38) IntTRS
                        (39) PolynomialOrderProcessor [EQUIVALENT, 1 ms]
                        (40) YES
            (41) IntTRS
                (42) TerminationGraphProcessor [EQUIVALENT, 15 ms]
                (43) AND
                    (44) IntTRS
                        (45) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                        (46) IntTRS
                        (47) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                        (48) IntTRS
                        (49) RankingReductionPairProof [EQUIVALENT, 0 ms]
                        (50) YES
                    (51) IntTRS
                        (52) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                        (53) IntTRS
                        (54) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                        (55) IntTRS
                        (56) RankingReductionPairProof [EQUIVALENT, 3 ms]
                        (57) IntTRS
                        (58) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                        (59) IntTRS
                        (60) RankingReductionPairProof [EQUIVALENT, 2 ms]
                        (61) IntTRS
                        (62) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                        (63) IntTRS
                        (64) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                        (65) IntTRS
                        (66) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
                        (67) YES
    (68) LLVM Symbolic Execution SCC
        (69) SCC2IRS [SOUND, 63 ms]
        (70) IntTRS
        (71) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (72) IntTRS
        (73) PolynomialOrderProcessor [EQUIVALENT, 12 ms]
        (74) AND
            (75) IntTRS
                (76) TerminationGraphProcessor [EQUIVALENT, 1 ms]
                (77) IntTRS
                (78) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                (79) IntTRS
                (80) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                (81) IntTRS
                (82) PolynomialOrderProcessor [EQUIVALENT, 2 ms]
                (83) YES
            (84) IntTRS
                (85) TerminationGraphProcessor [EQUIVALENT, 3 ms]
                (86) IntTRS
                (87) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                (88) IntTRS
                (89) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                (90) IntTRS
                (91) RankingReductionPairProof [EQUIVALENT, 1 ms]
                (92) YES
    (93) LLVM Symbolic Execution SCC
        (94) SCC2IRS [SOUND, 52 ms]
        (95) IntTRS
        (96) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (97) IntTRS
        (98) PolynomialOrderProcessor [EQUIVALENT, 3 ms]
        (99) IntTRS
        (100) TerminationGraphProcessor [EQUIVALENT, 3 ms]
        (101) IntTRS
        (102) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (103) IntTRS
        (104) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
        (105) IntTRS
        (106) PolynomialOrderProcessor [EQUIVALENT, 1 ms]
        (107) YES
    (108) LLVM Symbolic Execution SCC
        (109) SCC2IRS [SOUND, 74 ms]
        (110) IntTRS
        (111) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (112) IntTRS
        (113) PolynomialOrderProcessor [EQUIVALENT, 2 ms]
        (114) IntTRS
        (115) TerminationGraphProcessor [EQUIVALENT, 1 ms]
        (116) IntTRS
        (117) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (118) IntTRS
        (119) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
        (120) IntTRS
        (121) PolynomialOrderProcessor [EQUIVALENT, 1 ms]
        (122) YES
    (123) LLVM Symbolic Execution SCC
        (124) SCC2IRS [SOUND, 34 ms]
        (125) IntTRS
        (126) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (127) IntTRS
        (128) PolynomialOrderProcessor [EQUIVALENT, 6 ms]
        (129) YES
    (130) LLVM Symbolic Execution SCC
        (131) SCC2IRS [SOUND, 31 ms]
        (132) IntTRS
        (133) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (134) IntTRS
        (135) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (136) YES
    (137) LLVM Symbolic Execution SCC
        (138) SCC2IRS [SOUND, 26 ms]
        (139) IntTRS
        (140) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (141) IntTRS
        (142) RankingReductionPairProof [EQUIVALENT, 8 ms]
        (143) YES


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/omTL6.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/omTL6.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 7
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		%3 = alloca i32, align 4
		%4 = alloca i32, align 4
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %4)
		%5 = call i32 @__VERIFIER_nondet_int()
		store %5, %2
		%6 = call i32 @__VERIFIER_nondet_int()
		store %6, %3
		%7 = call i32 @__VERIFIER_nondet_int()
		store %7, %4
		br %8
	8:
		%9 = load %2
		%10 = icmp sgt %9 0
		br %10, %11, %17
	11:
		%12 = load %3
		%13 = icmp sgt %12 0
		br %13, %14, %17
	14:
		%15 = load %4
		%16 = icmp sgt %15 0
		br %17
	17:
		%18 = phi [0, %11], [0, %8], [%16, %14]
		br %18, %19, %38
	19:
		%20 = call i32 @__VERIFIER_nondet_int()
		%21 = icmp ne %20 0
		br %21, %22, %25
	22:
		%23 = load %2
		%24 = sub i32 %23, 1
		store %24, %2
		br %37
	25:
		%26 = call i32 @__VERIFIER_nondet_int()
		%27 = icmp ne %26 0
		br %27, %28, %32
	28:
		%29 = load %3
		%30 = sub i32 %29, 1
		store %30, %3
		%31 = call i32 @__VERIFIER_nondet_int()
		store %31, %4
		br %36
	32:
		%33 = load %4
		%34 = sub i32 %33, 1
		store %34, %4
		%35 = call i32 @__VERIFIER_nondet_int()
		store %35, %2
		br %36
	36:
		br %37
	37:
		br %8
	38:
		ret 0


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 7 SCCs.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC
----------------------------------------

(8) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 138 rulesP rules:
f_1374(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24550, 1, v24552, v24553, v24554, 0, v24556, v24557, v24558, v24559, v24560, v24561, v24562, v24563, v24564, 3, 2, 4) -> f_1387(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, v24554, 0, v24556, v24557, v24558, v24559, v24550, v24561, v24562, v24563, v24564, 3, 2, 4) :|: 0 = 0
f_1387(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, v24554, 0, v24556, v24557, v24558, v24559, v24550, v24561, v24562, v24563, v24564, 3, 2, 4) -> f_1399(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, v24554, 0, v24556, v24557, v24558, v24559, v24550, v24561, v24562, v24563, v24564, 3, 2, 4) :|: 0 < v24560 && 2 <= v24550
f_1399(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, v24554, 0, v24556, v24557, v24558, v24559, v24550, v24561, v24562, v24563, v24564, 3, 2, 4) -> f_1412(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, v24554, 0, v24556, v24557, v24558, v24559, v24550, v24561, v24562, v24563, v24564, 3, 2, 4) :|: 0 = 0
f_1412(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, v24554, 0, v24556, v24557, v24558, v24559, v24550, v24561, v24562, v24563, v24564, 3, 2, 4) -> f_1423(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, v24554, 0, v24556, v24557, v24558, v24559, v24550, v24561, v24562, v24563, v24564, 3, 2, 4) :|: TRUE
f_1423(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, v24554, 0, v24556, v24557, v24558, v24559, v24550, v24561, v24562, v24563, v24564, 3, 2, 4) -> f_1435(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, v24554, 0, v24556, v24557, v24558, v24559, v24550, v24561, v24562, v24563, v24564, 3, 2, 4) :|: 0 = 0
f_1435(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, v24554, 0, v24556, v24557, v24558, v24559, v24550, v24561, v24562, v24563, v24564, 3, 2, 4) -> f_1446(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, v24554, 0, v24556, v24557, v24558, v24559, v24550, v24561, v24562, v24563, v24564, 3, 2, 4) :|: 0 = 0
f_1446(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, v24554, 0, v24556, v24557, v24558, v24559, v24550, v24561, v24562, v24563, v24564, 3, 2, 4) -> f_1455(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, v24554, 0, v24556, v24557, v24558, v24559, v24550, v24561, v24562, v24563, v24564, 3, 2, 4) :|: TRUE
f_1455(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, v24554, 0, v24556, v24557, v24558, v24559, v24550, v24561, v24562, v24563, v24564, 3, 2, 4) -> f_1464(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, v24554, 0, v24556, v24557, v24558, v24559, v24550, v24561, v24562, v24563, v24564, 3, 2, 4) :|: 0 = 0
f_1464(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, v24554, 0, v24556, v24557, v24558, v24559, v24550, v24561, v24562, v24563, v24564, 3, 2, 4) -> f_1474(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, v24554, 0, v24556, v24557, v24558, v24559, v24550, v24561, v24562, v24563, v24564, 3, 2, 4) :|: 0 = 0
f_1474(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, v24554, 0, v24556, v24557, v24558, v24559, v24550, v24561, v24562, v24563, v24564, 3, 2, 4) -> f_1481(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, v24554, 0, v24556, v24557, v24558, v24559, v24550, v24561, v24562, v24563, v24564, 3, 2, 4) :|: 0 = 0
f_1481(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, v24554, 0, v24556, v24557, v24558, v24559, v24550, v24561, v24562, v24563, v24564, 3, 2, 4) -> f_1488(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, v24554, 0, v24556, v24557, v24558, v24559, v24550, v24561, v24562, v24563, v24564, 3, 2, 4) :|: TRUE
f_1488(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, v24554, 0, v24556, v24557, v24558, v24559, v24550, v24561, v24562, v24563, v24564, 3, 2, 4) -> f_1496(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, v29768, 0, v24556, v24557, v24558, v24559, v24550, v24561, v24562, v24563, v24564, 3, 2, 4) :|: TRUE
f_1496(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, v29768, 0, v24556, v24557, v24558, v24559, v24550, v24561, v24562, v24563, v24564, 3, 2, 4) -> f_1506(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, v29768, 0, v24556, v24557, v24558, v24559, v24550, v24561, v24562, v24563, v24564, 3, 2, 4) :|: v29768 != 0
f_1496(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, v29768, 0, v24556, v24557, v24558, v24559, v24550, v24561, v24562, v24563, v24564, 3, 2, 4) -> f_1507(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, 0, v24556, v24557, v24558, v24559, v24550, v24561, v24562, v24563, v24564, 3, 2, 4) :|: v29768 = 0
f_1506(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, v29768, 0, v24556, v24557, v24558, v24559, v24550, v24561, v24562, v24563, v24564, 3, 2, 4) -> f_1516(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, v29768, 0, v24556, v24557, v24558, v24559, v24550, v24561, v24562, v24563, v24564, 3, 2, 4) :|: 0 = 0
f_1516(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, v29768, 0, v24556, v24557, v24558, v24559, v24550, v24561, v24562, v24563, v24564, 3, 2, 4) -> f_1526(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, v29768, 0, v24556, v24557, v24558, v24559, v24550, v24561, v24562, v24563, v24564, 3, 2, 4) :|: TRUE
f_1526(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, v29768, 0, v24556, v24557, v24558, v24559, v24550, v24561, v24562, v24563, v24564, 3, 2, 4) -> f_1772(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, v29768, 0, v24556, v24557, v24558, v24559, v24550, v24560, v24561, v24562, v24563, v24564, 3, 2, 4) :|: TRUE
f_1772(v44286, v44287, v44288, v44289, v44290, v44291, v44292, v44293, 1, v44295, v44296, v44297, 0, v44299, v44300, v44301, v44302, v44303, v44304, v44305, v44306, v44307, v44308, 3, 2, 4) -> f_1779(v44286, v44287, v44288, v44289, v44290, v44291, v44292, v44293, 1, v44295, v44296, v44297, 0, v44299, v44300, v44301, v44302, v44304, v44305, v44306, v44307, v44308, 3, 2, 4) :|: 0 = 0
f_1779(v44286, v44287, v44288, v44289, v44290, v44291, v44292, v44293, 1, v44295, v44296, v44297, 0, v44299, v44300, v44301, v44302, v44304, v44305, v44306, v44307, v44308, 3, 2, 4) -> f_1786(v44286, v44287, v44288, v44289, v44290, v44291, v44292, v44293, 1, v44295, v44296, v44297, 0, v44299, v44300, v44301, v44302, v45094, v44305, v44306, v44307, v44308, 3, 2, 4) :|: 1 + v45094 = v44293 && 0 <= v45094
f_1786(v44286, v44287, v44288, v44289, v44290, v44291, v44292, v44293, 1, v44295, v44296, v44297, 0, v44299, v44300, v44301, v44302, v45094, v44305, v44306, v44307, v44308, 3, 2, 4) -> f_1793(v44286, v44287, v44288, v44289, v44290, v44291, v44292, v44293, 1, v44295, v44296, v44297, 0, v44299, v44300, v44301, v44302, v45094, v44305, v44306, v44307, v44308, 3, 2, 4) :|: TRUE
f_1793(v44286, v44287, v44288, v44289, v44290, v44291, v44292, v44293, 1, v44295, v44296, v44297, 0, v44299, v44300, v44301, v44302, v45094, v44305, v44306, v44307, v44308, 3, 2, 4) -> f_1801(v44286, v44287, v44288, v44289, v44290, v44291, v44292, v44293, 1, v44295, v44296, v44297, 0, v44299, v44300, v44301, v44302, v45094, v44305, v44306, v44307, v44308, 3, 2, 4) :|: TRUE
f_1801(v44286, v44287, v44288, v44289, v44290, v44291, v44292, v44293, 1, v44295, v44296, v44297, 0, v44299, v44300, v44301, v44302, v45094, v44305, v44306, v44307, v44308, 3, 2, 4) -> f_1362(v44286, v44287, v44288, v44289, v44290, v44291, v44292, v44293, 1, v44295, v44296, v44297, 0, v44299, v44300, v44301, v44302, v45094, v44305, v44306, v44307, v44308, 3, 2, 4) :|: TRUE
f_1362(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24550, 1, v24552, v24553, v24554, 0, v24556, v24557, v24558, v24559, v24560, v24561, v24562, v24563, v24564, 3, 2, 4) -> f_1374(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24550, 1, v24552, v24553, v24554, 0, v24556, v24557, v24558, v24559, v24560, v24561, v24562, v24563, v24564, 3, 2, 4) :|: TRUE
f_1507(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, 0, v24556, v24557, v24558, v24559, v24550, v24561, v24562, v24563, v24564, 3, 2, 4) -> f_1517(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, 0, v24556, v24557, v24558, v24559, v24550, v24561, v24562, v24563, v24564, 3, 2, 4) :|: 0 = 0
f_1517(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, 0, v24556, v24557, v24558, v24559, v24550, v24561, v24562, v24563, v24564, 3, 2, 4) -> f_1527(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, 0, v24556, v24557, v24558, v24559, v24550, v24561, v24562, v24563, v24564, 3, 2, 4) :|: TRUE
f_1527(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, 0, v24556, v24557, v24558, v24559, v24550, v24561, v24562, v24563, v24564, 3, 2, 4) -> f_1774(v24543, v24544, v24545, v24546, v24547, v24548, v24549, v24560, 1, v24552, v24553, 0, v24556, v24557, v24558, v24559, v24550, v24560, v24561, v24562, v24563, v24564, 3, 2, 4) :|: TRUE
f_1774(v44438, v44439, v44440, v44441, v44442, v44443, v44444, v44445, 1, v44447, v44448, 0, v44450, v44451, v44452, v44453, v44454, v44455, v44456, v44457, v44458, v44459, 3, 2, 4) -> f_1780(v44438, v44439, v44440, v44441, v44442, v44443, v44444, v44445, 1, v44447, v44448, 0, v44899, v44450, v44451, v44452, v44453, v44454, v44455, v44456, v44457, v44458, v44459, 3, 2, 4) :|: TRUE
f_1780(v44438, v44439, v44440, v44441, v44442, v44443, v44444, v44445, 1, v44447, v44448, 0, v44899, v44450, v44451, v44452, v44453, v44454, v44455, v44456, v44457, v44458, v44459, 3, 2, 4) -> f_1787(v44438, v44439, v44440, v44441, v44442, v44443, v44444, v44445, 1, v44447, v44448, 0, v44899, v44450, v44451, v44452, v44453, v44454, v44455, v44456, v44457, v44458, v44459, 3, 2, 4) :|: v44899 != 0
f_1780(v44438, v44439, v44440, v44441, v44442, v44443, v44444, v44445, 1, v44447, v44448, 0, v44899, v44450, v44451, v44452, v44453, v44454, v44455, v44456, v44457, v44458, v44459, 3, 2, 4) -> f_1788(v44438, v44439, v44440, v44441, v44442, v44443, v44444, v44445, 1, v44447, v44448, 0, v44450, v44451, v44452, v44453, v44454, v44455, v44456, v44457, v44458, v44459, 3, 2, 4) :|: v44899 = 0
f_1787(v44438, v44439, v44440, v44441, v44442, v44443, v44444, v44445, 1, v44447, v44448, 0, v44899, v44450, v44451, v44452, v44453, v44454, v44455, v44456, v44457, v44458, v44459, 3, 2, 4) -> f_1794(v44438, v44439, v44440, v44441, v44442, v44443, v44444, v44445, 1, v44447, v44448, 0, v44899, v44450, v44451, v44452, v44453, v44454, v44455, v44456, v44457, v44458, v44459, 3, 2, 4) :|: 0 = 0
f_1794(v44438, v44439, v44440, v44441, v44442, v44443, v44444, v44445, 1, v44447, v44448, 0, v44899, v44450, v44451, v44452, v44453, v44454, v44455, v44456, v44457, v44458, v44459, 3, 2, 4) -> f_1802(v44438, v44439, v44440, v44441, v44442, v44443, v44444, v44445, 1, v44447, v44448, 0, v44899, v44450, v44451, v44452, v44453, v44454, v44455, v44456, v44457, v44458, v44459, 3, 2, 4) :|: TRUE
f_1802(v44438, v44439, v44440, v44441, v44442, v44443, v44444, v44445, 1, v44447, v44448, 0, v44899, v44450, v44451, v44452, v44453, v44454, v44455, v44456, v44457, v44458, v44459, 3, 2, 4) -> f_1910(v44438, v44439, v44440, v44441, v44442, v44443, v44444, v44445, 1, v44447, v44448, 0, v44899, v44450, v44451, v44452, v44448, v44453, v44454, v44455, v44456, v44457, v44458, v44459, 3, 2, 4) :|: TRUE
f_1910(v51057, v51058, v51059, v51060, v51061, v51062, v51063, v51064, 1, v51066, v51067, 0, v51069, v51070, v51071, v51072, v51073, v51074, v51075, v51076, v51077, v51078, v51079, v51080, 3, 2, 4) -> f_1912(v51057, v51058, v51059, v51060, v51061, v51062, v51063, v51064, 1, v51066, v51067, 0, v51069, v51071, v51072, v51073, v51074, v51075, v51076, v51077, v51078, v51079, v51080, 3, 2, 4) :|: 0 = 0
f_1912(v51057, v51058, v51059, v51060, v51061, v51062, v51063, v51064, 1, v51066, v51067, 0, v51069, v51071, v51072, v51073, v51074, v51075, v51076, v51077, v51078, v51079, v51080, 3, 2, 4) -> f_1914(v51057, v51058, v51059, v51060, v51061, v51062, v51063, v51064, 1, v51066, v51067, 0, v51069, v51142, v51071, v51072, v51073, v51074, v51075, v51076, v51077, v51078, v51079, v51080, 3, 2, 4) :|: 1 + v51142 = v51066 && 0 <= v51142
f_1914(v51057, v51058, v51059, v51060, v51061, v51062, v51063, v51064, 1, v51066, v51067, 0, v51069, v51142, v51071, v51072, v51073, v51074, v51075, v51076, v51077, v51078, v51079, v51080, 3, 2, 4) -> f_1916(v51057, v51058, v51059, v51060, v51061, v51062, v51063, v51064, 1, v51066, v51067, 0, v51069, v51142, v51071, v51072, v51073, v51074, v51075, v51076, v51077, v51078, v51079, v51080, 3, 2, 4) :|: TRUE
f_1916(v51057, v51058, v51059, v51060, v51061, v51062, v51063, v51064, 1, v51066, v51067, 0, v51069, v51142, v51071, v51072, v51073, v51074, v51075, v51076, v51077, v51078, v51079, v51080, 3, 2, 4) -> f_1918(v51057, v51058, v51059, v51060, v51061, v51062, v51063, v51064, 1, v51066, v51067, 0, v51069, v51142, v51146, v51072, v51073, v51074, v51075, v51076, v51077, v51078, v51079, v51080, 3, 2, 4) :|: TRUE
f_1918(v51057, v51058, v51059, v51060, v51061, v51062, v51063, v51064, 1, v51066, v51067, 0, v51069, v51142, v51146, v51072, v51073, v51074, v51075, v51076, v51077, v51078, v51079, v51080, 3, 2, 4) -> f_1920(v51057, v51058, v51059, v51060, v51061, v51062, v51063, v51064, 1, v51066, v51067, 0, v51069, v51142, v51146, v51072, v51073, v51074, v51075, v51076, v51077, v51078, v51079, v51080, 3, 2, 4) :|: TRUE
f_1920(v51057, v51058, v51059, v51060, v51061, v51062, v51063, v51064, 1, v51066, v51067, 0, v51069, v51142, v51146, v51072, v51073, v51074, v51075, v51076, v51077, v51078, v51079, v51080, 3, 2, 4) -> f_1922(v51057, v51058, v51059, v51060, v51061, v51062, v51063, v51064, 1, v51066, v51067, 0, v51069, v51142, v51146, v51072, v51073, v51074, v51075, v51076, v51077, v51078, v51079, v51080, 3, 2, 4) :|: TRUE
f_1922(v51057, v51058, v51059, v51060, v51061, v51062, v51063, v51064, 1, v51066, v51067, 0, v51069, v51142, v51146, v51072, v51073, v51074, v51075, v51076, v51077, v51078, v51079, v51080, 3, 2, 4) -> f_1835(v51057, v51058, v51059, v51060, v51061, v51062, v51063, v51064, 1, v51066, v51067, 0, v51075, v51076, v51069, v51072, v51073, v51074, v51142, v51146, v51077, v51078, v51079, v51080, 3, 2, 4) :|: TRUE
f_1835(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46876, v46877, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46885, v46886, v46887, v46888, v46889, v46890, 3, 2, 4) -> f_1839(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46876, v46877, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46885, v46886, v46887, v46888, v46889, v46890, 3, 2, 4) :|: TRUE
f_1839(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46876, v46877, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46885, v46886, v46887, v46888, v46889, v46890, 3, 2, 4) -> f_1841(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46876, v46877, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46885, v46886, v46887, v46888, v46889, v46890, 3, 2, 4) :|: TRUE
f_1841(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46876, v46877, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46885, v46886, v46887, v46888, v46889, v46890, 3, 2, 4) -> f_1843(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46876, v46877, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46885, v46886, v46887, v46888, v46889, v46890, 3, 2, 4) :|: 0 = 0
f_1843(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46876, v46877, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46885, v46886, v46887, v46888, v46889, v46890, 3, 2, 4) -> f_1845(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46876, v46877, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46885, v46886, v46887, v46888, v46889, v46890, 3, 2, 4) :|: 0 = 0
f_1845(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46876, v46877, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46885, v46886, v46887, v46888, v46889, v46890, 3, 2, 4) -> f_1847(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46876, v46877, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46885, v46886, v46887, v46888, v46889, v46890, 3, 2, 4) :|: TRUE
f_1847(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46876, v46877, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46885, v46886, v46887, v46888, v46889, v46890, 3, 2, 4) -> f_1849(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46877, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46876, v46886, v46887, v46888, v46889, v46890, 3, 2, 4) :|: 0 = 0
f_1849(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46877, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46876, v46886, v46887, v46888, v46889, v46890, 3, 2, 4) -> f_1851(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46877, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46876, v46886, v46887, v46888, v46889, v46890, 3, 2, 4) :|: 0 < v46885 && 2 <= v46876 && 2 <= v46872
f_1851(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46877, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46876, v46886, v46887, v46888, v46889, v46890, 3, 2, 4) -> f_1855(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46877, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46876, v46886, v46887, v46888, v46889, v46890, 3, 2, 4) :|: 0 = 0
f_1855(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46877, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46876, v46886, v46887, v46888, v46889, v46890, 3, 2, 4) -> f_1859(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46877, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46876, v46886, v46887, v46888, v46889, v46890, 3, 2, 4) :|: TRUE
f_1859(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46877, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46876, v46886, v46887, v46888, v46889, v46890, 3, 2, 4) -> f_1863(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46886, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46876, v46887, v46888, v46889, v46890, 3, 2, 4) :|: 0 = 0
f_1863(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46886, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46876, v46887, v46888, v46889, v46890, 3, 2, 4) -> f_1867(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46886, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46876, v46887, v46888, v46889, v46890, 3, 2, 4) :|: 0 < v46886
f_1867(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46886, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46876, v46887, v46888, v46889, v46890, 3, 2, 4) -> f_1872(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46886, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46876, v46887, v46888, v46889, v46890, 3, 2, 4) :|: 0 = 0
f_1872(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46886, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46876, v46887, v46888, v46889, v46890, 3, 2, 4) -> f_1877(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46886, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46876, v46887, v46888, v46889, v46890, 3, 2, 4) :|: 0 = 0
f_1877(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46886, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46876, v46887, v46888, v46889, v46890, 3, 2, 4) -> f_1882(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46886, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46876, v46887, v46888, v46889, v46890, 3, 2, 4) :|: TRUE
f_1882(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46886, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46876, v46887, v46888, v46889, v46890, 3, 2, 4) -> f_1886(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46886, v50524, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46876, v46887, v46888, v46889, v46890, 3, 2, 4) :|: TRUE
f_1886(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46886, v50524, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46876, v46887, v46888, v46889, v46890, 3, 2, 4) -> f_1889(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46886, v50524, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46876, v46887, v46888, v46889, v46890, 3, 2, 4) :|: v50524 != 0
f_1886(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46886, v50524, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46876, v46887, v46888, v46889, v46890, 3, 2, 4) -> f_1890(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46886, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46876, v46887, v46888, v46889, v46890, 3, 2, 4) :|: v50524 = 0
f_1889(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46886, v50524, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46876, v46887, v46888, v46889, v46890, 3, 2, 4) -> f_1893(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46886, v50524, v46879, v46880, v46881, v46882, v46883, v46884, v46876, v46887, v46888, v46889, v46890, 0, 3, 2, 4) :|: 0 = 0
f_1893(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46886, v50524, v46879, v46880, v46881, v46882, v46883, v46884, v46876, v46887, v46888, v46889, v46890, 0, 3, 2, 4) -> f_1897(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46886, v50524, v46879, v46880, v46881, v46882, v46883, v46884, v46876, v46887, v46888, v46889, v46890, 0, 3, 2, 4) :|: TRUE
f_1897(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46886, v50524, v46879, v46880, v46881, v46882, v46883, v46884, v46876, v46887, v46888, v46889, v46890, 0, 3, 2, 4) -> f_1900(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46886, v50524, v46880, v46881, v46882, v46883, v46884, v46876, v46887, v46888, v46889, v46890, 0, 3, 2, 4) :|: 0 = 0
f_1900(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46886, v50524, v46880, v46881, v46882, v46883, v46884, v46876, v46887, v46888, v46889, v46890, 0, 3, 2, 4) -> f_1902(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46886, v50524, v50780, v46881, v46882, v46883, v46884, v46876, v46887, v46888, v46889, v46890, 0, 3, 2, 4) :|: 1 + v50780 = v46874 && 0 <= v50780
f_1902(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46886, v50524, v50780, v46881, v46882, v46883, v46884, v46876, v46887, v46888, v46889, v46890, 0, 3, 2, 4) -> f_1905(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46886, v50524, v50780, v46881, v46882, v46883, v46884, v46876, v46887, v46888, v46889, v46890, 0, 3, 2, 4) :|: TRUE
f_1905(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46886, v50524, v50780, v46881, v46882, v46883, v46884, v46876, v46887, v46888, v46889, v46890, 0, 3, 2, 4) -> f_1908(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46886, v50524, v50780, v46881, v46882, v46883, v46884, v46876, v46887, v46888, v46889, v46890, 0, 3, 2, 4) :|: TRUE
f_1908(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46886, v50524, v50780, v46881, v46882, v46883, v46884, v46876, v46887, v46888, v46889, v46890, 0, 3, 2, 4) -> f_1798(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46886, v50524, v46881, v46882, v46883, v46884, v46876, v50780, v46887, v46888, v46889, v46890, 0, 3, 2, 4) :|: TRUE
f_1798(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45379, 1, v45381, v45382, v45383, v45384, v45385, v45386, v45387, v45388, v45389, v45390, v45391, v45392, v45393, 0, 3, 2, 4) -> f_1804(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45379, 1, v45381, v45382, v45383, v45384, v45385, v45386, v45387, v45388, v45389, v45390, v45391, v45392, v45393, 0, 3, 2, 4) :|: TRUE
f_1804(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45379, 1, v45381, v45382, v45383, v45384, v45385, v45386, v45387, v45388, v45389, v45390, v45391, v45392, v45393, 0, 3, 2, 4) -> f_1809(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v45383, v45384, v45385, v45386, v45387, v45388, v45379, v45390, v45391, v45392, v45393, 0, 3, 2, 4) :|: 0 = 0
f_1809(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v45383, v45384, v45385, v45386, v45387, v45388, v45379, v45390, v45391, v45392, v45393, 0, 3, 2, 4) -> f_1814(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v45383, v45384, v45385, v45386, v45387, v45388, v45379, v45390, v45391, v45392, v45393, 0, 3, 2, 4) :|: 0 < v45389 && 2 <= v45379
f_1814(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v45383, v45384, v45385, v45386, v45387, v45388, v45379, v45390, v45391, v45392, v45393, 0, 3, 2, 4) -> f_1820(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v45383, v45384, v45385, v45386, v45387, v45388, v45379, v45390, v45391, v45392, v45393, 0, 3, 2, 4) :|: 0 = 0
f_1820(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v45383, v45384, v45385, v45386, v45387, v45388, v45379, v45390, v45391, v45392, v45393, 0, 3, 2, 4) -> f_1826(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v45383, v45384, v45385, v45386, v45387, v45388, v45379, v45390, v45391, v45392, v45393, 0, 3, 2, 4) :|: TRUE
f_1826(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v45383, v45384, v45385, v45386, v45387, v45388, v45379, v45390, v45391, v45392, v45393, 0, 3, 2, 4) -> f_1832(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v45383, v45384, v45385, v45386, v45387, v45388, v45379, v45390, v45391, v45392, v45393, 0, 3, 2, 4) :|: 0 = 0
f_1832(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v45383, v45384, v45385, v45386, v45387, v45388, v45379, v45390, v45391, v45392, v45393, 0, 3, 2, 4) -> f_1838(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v45383, v45384, v45385, v45386, v45387, v45388, v45379, v45390, v45391, v45392, v45393, 0, 3, 2, 4) :|: 0 = 0
f_1838(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v45383, v45384, v45385, v45386, v45387, v45388, v45379, v45390, v45391, v45392, v45393, 0, 3, 2, 4) -> f_1840(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v45383, v45384, v45385, v45386, v45387, v45388, v45379, v45390, v45391, v45392, v45393, 0, 3, 2, 4) :|: TRUE
f_1840(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v45383, v45384, v45385, v45386, v45387, v45388, v45379, v45390, v45391, v45392, v45393, 0, 3, 2, 4) -> f_1842(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v45383, v45384, v45385, v45386, v45387, v45388, v45379, v45390, v45391, v45392, v45393, 0, 3, 2, 4) :|: 0 = 0
f_1842(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v45383, v45384, v45385, v45386, v45387, v45388, v45379, v45390, v45391, v45392, v45393, 0, 3, 2, 4) -> f_1844(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v45383, v45384, v45385, v45386, v45387, v45388, v45379, v45390, v45391, v45392, v45393, 0, 3, 2, 4) :|: 0 = 0
f_1844(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v45383, v45384, v45385, v45386, v45387, v45388, v45379, v45390, v45391, v45392, v45393, 0, 3, 2, 4) -> f_1846(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v45383, v45384, v45385, v45386, v45387, v45388, v45379, v45390, v45391, v45392, v45393, 0, 3, 2, 4) :|: 0 = 0
f_1846(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v45383, v45384, v45385, v45386, v45387, v45388, v45379, v45390, v45391, v45392, v45393, 0, 3, 2, 4) -> f_1848(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v45383, v45384, v45385, v45386, v45387, v45388, v45379, v45390, v45391, v45392, v45393, 0, 3, 2, 4) :|: TRUE
f_1848(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v45383, v45384, v45385, v45386, v45387, v45388, v45379, v45390, v45391, v45392, v45393, 0, 3, 2, 4) -> f_1850(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v48177, v45384, v45385, v45386, v45387, v45388, v45379, v45390, v45391, v45392, v45393, 0, 3, 2, 4) :|: TRUE
f_1850(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v48177, v45384, v45385, v45386, v45387, v45388, v45379, v45390, v45391, v45392, v45393, 0, 3, 2, 4) -> f_1853(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v48177, v45384, v45385, v45386, v45387, v45388, v45379, v45390, v45391, v45392, v45393, 0, 3, 2, 4) :|: v48177 != 0
f_1850(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v48177, v45384, v45385, v45386, v45387, v45388, v45379, v45390, v45391, v45392, v45393, 0, 3, 2, 4) -> f_1854(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, 0, v45384, v45385, v45386, v45387, v45388, v45379, v45390, v45391, v45392, v45393, 3, 2, 4) :|: v48177 = 0
f_1853(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v48177, v45384, v45385, v45386, v45387, v45388, v45379, v45390, v45391, v45392, v45393, 0, 3, 2, 4) -> f_1857(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v48177, v45384, v45385, v45386, v45387, v45388, v45379, v45390, v45391, v45392, v45393, 0, 3, 2, 4) :|: 0 = 0
f_1857(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v48177, v45384, v45385, v45386, v45387, v45388, v45379, v45390, v45391, v45392, v45393, 0, 3, 2, 4) -> f_1861(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v48177, v45384, v45385, v45386, v45387, v45388, v45379, v45390, v45391, v45392, v45393, 0, 3, 2, 4) :|: TRUE
f_1861(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v48177, v45384, v45385, v45386, v45387, v45388, v45379, v45390, v45391, v45392, v45393, 0, 3, 2, 4) -> f_1865(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v48177, v45384, v45385, v45386, v45387, v45388, v45390, v45391, v45392, v45393, 0, 3, 2, 4) :|: 0 = 0
f_1865(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v48177, v45384, v45385, v45386, v45387, v45388, v45390, v45391, v45392, v45393, 0, 3, 2, 4) -> f_1869(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v48177, v45384, v45385, v45386, v45387, v45388, v49023, v45390, v45391, v45392, v45393, 0, 3, 2, 4) :|: 1 + v49023 = v45389 && 0 <= v49023
f_1869(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v48177, v45384, v45385, v45386, v45387, v45388, v49023, v45390, v45391, v45392, v45393, 0, 3, 2, 4) -> f_1874(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v48177, v45384, v45385, v45386, v45387, v45388, v49023, v45390, v45391, v45392, v45393, 0, 3, 2, 4) :|: TRUE
f_1874(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v48177, v45384, v45385, v45386, v45387, v45388, v49023, v45390, v45391, v45392, v45393, 0, 3, 2, 4) -> f_1879(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v48177, v45384, v45385, v45386, v45387, v45388, v49023, v45390, v45391, v45392, v45393, 0, 3, 2, 4) :|: TRUE
f_1879(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v48177, v45384, v45385, v45386, v45387, v45388, v49023, v45390, v45391, v45392, v45393, 0, 3, 2, 4) -> f_1798(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, v48177, v45384, v45385, v45386, v45387, v45388, v49023, v45390, v45391, v45392, v45393, 0, 3, 2, 4) :|: TRUE
f_1854(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, 0, v45384, v45385, v45386, v45387, v45388, v45379, v45390, v45391, v45392, v45393, 3, 2, 4) -> f_1858(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, 0, v45384, v45385, v45386, v45387, v45388, v45379, v45390, v45391, v45392, v45393, 3, 2, 4) :|: 0 = 0
f_1858(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, 0, v45384, v45385, v45386, v45387, v45388, v45379, v45390, v45391, v45392, v45393, 3, 2, 4) -> f_1862(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, 0, v45384, v45385, v45386, v45387, v45388, v45379, v45390, v45391, v45392, v45393, 3, 2, 4) :|: TRUE
f_1862(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, 0, v45384, v45385, v45386, v45387, v45388, v45379, v45390, v45391, v45392, v45393, 3, 2, 4) -> f_1899(v45372, v45373, v45374, v45375, v45376, v45377, v45378, v45389, 1, v45381, v45382, 0, v45384, v45385, v45386, v45387, v45388, v45379, v45389, v45390, v45391, v45392, v45393, 3, 2, 4) :|: TRUE
f_1899(v50756, v50757, v50758, v50759, v50760, v50761, v50762, v50763, 1, v50765, v50766, 0, v50768, v50769, v50770, v50771, v50772, v50773, v50774, v50775, v50776, v50777, v50778, 3, 2, 4) -> f_1901(v50756, v50757, v50758, v50759, v50760, v50761, v50762, v50763, 1, v50765, v50766, 0, v50779, v50769, v50770, v50771, v50772, v50773, v50774, v50775, v50776, v50777, v50778, 3, 2, 4) :|: TRUE
f_1901(v50756, v50757, v50758, v50759, v50760, v50761, v50762, v50763, 1, v50765, v50766, 0, v50779, v50769, v50770, v50771, v50772, v50773, v50774, v50775, v50776, v50777, v50778, 3, 2, 4) -> f_1903(v50756, v50757, v50758, v50759, v50760, v50761, v50762, v50763, 1, v50765, v50766, 0, v50779, v50769, v50770, v50771, v50772, v50773, v50774, v50775, v50776, v50777, v50778, 3, 2, 4) :|: v50779 != 0
f_1901(v50756, v50757, v50758, v50759, v50760, v50761, v50762, v50763, 1, v50765, v50766, 0, v50779, v50769, v50770, v50771, v50772, v50773, v50774, v50775, v50776, v50777, v50778, 3, 2, 4) -> f_1904(v50756, v50757, v50758, v50759, v50760, v50761, v50762, v50763, 1, v50765, v50766, 0, v50769, v50770, v50771, v50772, v50773, v50774, v50775, v50776, v50777, v50778, 3, 2, 4) :|: v50779 = 0
f_1903(v50756, v50757, v50758, v50759, v50760, v50761, v50762, v50763, 1, v50765, v50766, 0, v50779, v50769, v50770, v50771, v50772, v50773, v50774, v50775, v50776, v50777, v50778, 3, 2, 4) -> f_1906(v50756, v50757, v50758, v50759, v50760, v50761, v50762, v50763, 1, v50765, v50766, 0, v50779, v50769, v50770, v50771, v50772, v50773, v50774, v50775, v50776, v50777, v50778, 3, 2, 4) :|: 0 = 0
f_1906(v50756, v50757, v50758, v50759, v50760, v50761, v50762, v50763, 1, v50765, v50766, 0, v50779, v50769, v50770, v50771, v50772, v50773, v50774, v50775, v50776, v50777, v50778, 3, 2, 4) -> f_1909(v50756, v50757, v50758, v50759, v50760, v50761, v50762, v50763, 1, v50765, v50766, 0, v50779, v50769, v50770, v50771, v50772, v50773, v50774, v50775, v50776, v50777, v50778, 3, 2, 4) :|: TRUE
f_1909(v50756, v50757, v50758, v50759, v50760, v50761, v50762, v50763, 1, v50765, v50766, 0, v50779, v50769, v50770, v50771, v50772, v50773, v50774, v50775, v50776, v50777, v50778, 3, 2, 4) -> f_1910(v50756, v50757, v50758, v50759, v50760, v50761, v50762, v50763, 1, v50765, v50766, 0, v50779, v50772, v50766, v50769, v50770, v50771, v50773, v50774, v50775, v50776, v50777, v50778, 3, 2, 4) :|: TRUE
f_1904(v50756, v50757, v50758, v50759, v50760, v50761, v50762, v50763, 1, v50765, v50766, 0, v50769, v50770, v50771, v50772, v50773, v50774, v50775, v50776, v50777, v50778, 3, 2, 4) -> f_1907(v50756, v50757, v50758, v50759, v50760, v50761, v50762, v50763, 1, v50765, v50766, 0, v50769, v50770, v50771, v50772, v50773, v50774, v50775, v50776, v50777, v50778, 3, 2, 4) :|: 0 = 0
f_1907(v50756, v50757, v50758, v50759, v50760, v50761, v50762, v50763, 1, v50765, v50766, 0, v50769, v50770, v50771, v50772, v50773, v50774, v50775, v50776, v50777, v50778, 3, 2, 4) -> f_1911(v50756, v50757, v50758, v50759, v50760, v50761, v50762, v50763, 1, v50765, v50766, 0, v50769, v50770, v50771, v50772, v50773, v50774, v50775, v50776, v50777, v50778, 3, 2, 4) :|: TRUE
f_1911(v50756, v50757, v50758, v50759, v50760, v50761, v50762, v50763, 1, v50765, v50766, 0, v50769, v50770, v50771, v50772, v50773, v50774, v50775, v50776, v50777, v50778, 3, 2, 4) -> f_1913(v50756, v50757, v50758, v50759, v50760, v50761, v50762, v50763, 1, v50765, v50766, 0, v50770, v50771, v50772, v50773, v50774, v50775, v50776, v50777, v50778, 3, 2, 4) :|: 0 = 0
f_1913(v50756, v50757, v50758, v50759, v50760, v50761, v50762, v50763, 1, v50765, v50766, 0, v50770, v50771, v50772, v50773, v50774, v50775, v50776, v50777, v50778, 3, 2, 4) -> f_1915(v50756, v50757, v50758, v50759, v50760, v50761, v50762, v50763, 1, v50765, v50766, 0, v51143, v50771, v50772, v50773, v50774, v50775, v50776, v50777, v50778, 3, 2, 4) :|: 1 + v51143 = v50766 && 0 <= v51143
f_1915(v50756, v50757, v50758, v50759, v50760, v50761, v50762, v50763, 1, v50765, v50766, 0, v51143, v50771, v50772, v50773, v50774, v50775, v50776, v50777, v50778, 3, 2, 4) -> f_1917(v50756, v50757, v50758, v50759, v50760, v50761, v50762, v50763, 1, v50765, v50766, 0, v51143, v50771, v50772, v50773, v50774, v50775, v50776, v50777, v50778, 3, 2, 4) :|: TRUE
f_1917(v50756, v50757, v50758, v50759, v50760, v50761, v50762, v50763, 1, v50765, v50766, 0, v51143, v50771, v50772, v50773, v50774, v50775, v50776, v50777, v50778, 3, 2, 4) -> f_1919(v50756, v50757, v50758, v50759, v50760, v50761, v50762, v50763, 1, v50765, v50766, 0, v51143, v51147, v50772, v50773, v50774, v50775, v50776, v50777, v50778, 3, 2, 4) :|: TRUE
f_1919(v50756, v50757, v50758, v50759, v50760, v50761, v50762, v50763, 1, v50765, v50766, 0, v51143, v51147, v50772, v50773, v50774, v50775, v50776, v50777, v50778, 3, 2, 4) -> f_1921(v50756, v50757, v50758, v50759, v50760, v50761, v50762, v50763, 1, v50765, v50766, 0, v51143, v51147, v50772, v50773, v50774, v50775, v50776, v50777, v50778, 3, 2, 4) :|: TRUE
f_1921(v50756, v50757, v50758, v50759, v50760, v50761, v50762, v50763, 1, v50765, v50766, 0, v51143, v51147, v50772, v50773, v50774, v50775, v50776, v50777, v50778, 3, 2, 4) -> f_1923(v50756, v50757, v50758, v50759, v50760, v50761, v50762, v50763, 1, v50765, v50766, 0, v51143, v51147, v50772, v50773, v50774, v50775, v50776, v50777, v50778, 3, 2, 4) :|: TRUE
f_1923(v50756, v50757, v50758, v50759, v50760, v50761, v50762, v50763, 1, v50765, v50766, 0, v51143, v51147, v50772, v50773, v50774, v50775, v50776, v50777, v50778, 3, 2, 4) -> f_1647(v50756, v50757, v50758, v50759, v50760, v50761, v50762, v50763, 1, v50765, v50766, 0, v50772, v50766, v50773, v50774, v51143, v51147, v50775, v50776, v50777, v50778, 3, 2, 4) :|: TRUE
f_1647(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37347, 1, v37349, v37350, 0, v37352, v37353, v37354, v37355, v37356, v37357, v37358, v37359, v37360, v37361, 3, 2, 4) -> f_1655(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37347, 1, v37349, v37350, 0, v37352, v37353, v37354, v37355, v37356, v37357, v37358, v37359, v37360, v37361, 3, 2, 4) :|: TRUE
f_1655(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37347, 1, v37349, v37350, 0, v37352, v37353, v37354, v37355, v37356, v37357, v37358, v37359, v37360, v37361, 3, 2, 4) -> f_1665(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37347, 1, v37349, v37350, 0, v37352, v37353, v37354, v37355, v37356, v37357, v37358, v37359, v37360, v37361, 3, 2, 4) :|: TRUE
f_1665(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37347, 1, v37349, v37350, 0, v37352, v37353, v37354, v37355, v37356, v37357, v37358, v37359, v37360, v37361, 3, 2, 4) -> f_1673(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37350, 0, v37352, v37353, v37354, v37355, v37356, v37358, v37359, v37360, v37361, 3, 2, 4) :|: 0 = 0
f_1673(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37350, 0, v37352, v37353, v37354, v37355, v37356, v37358, v37359, v37360, v37361, 3, 2, 4) -> f_1679(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37350, 0, v37352, v37353, v37354, v37355, v37356, v37358, v37359, v37360, v37361, 3, 2, 4) :|: 0 < v37357
f_1679(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37350, 0, v37352, v37353, v37354, v37355, v37356, v37358, v37359, v37360, v37361, 3, 2, 4) -> f_1686(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37350, 0, v37352, v37353, v37354, v37355, v37356, v37358, v37359, v37360, v37361, 3, 2, 4) :|: 0 = 0
f_1686(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37350, 0, v37352, v37353, v37354, v37355, v37356, v37358, v37359, v37360, v37361, 3, 2, 4) -> f_1693(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37350, 0, v37352, v37353, v37354, v37355, v37356, v37358, v37359, v37360, v37361, 3, 2, 4) :|: TRUE
f_1693(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37350, 0, v37352, v37353, v37354, v37355, v37356, v37358, v37359, v37360, v37361, 3, 2, 4) -> f_1700(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37350, 0, v37352, v37353, v37354, v37355, v37356, v37358, v37359, v37360, v37361, 3, 2, 4) :|: 0 = 0
f_1700(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37350, 0, v37352, v37353, v37354, v37355, v37356, v37358, v37359, v37360, v37361, 3, 2, 4) -> f_1708(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37350, 0, v37352, v37353, v37354, v37355, v37356, v37358, v37359, v37360, v37361, 3, 2, 4) :|: 0 = 0
f_1708(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37350, 0, v37352, v37353, v37354, v37355, v37356, v37358, v37359, v37360, v37361, 3, 2, 4) -> f_1715(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37350, 0, v37352, v37353, v37354, v37355, v37356, v37358, v37359, v37360, v37361, 3, 2, 4) :|: TRUE
f_1715(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37350, 0, v37352, v37353, v37354, v37355, v37356, v37358, v37359, v37360, v37361, 3, 2, 4) -> f_1722(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37356, 0, v37352, v37353, v37354, v37355, v37350, v37358, v37359, v37360, v37361, 3, 2, 4) :|: 0 = 0
f_1722(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37356, 0, v37352, v37353, v37354, v37355, v37350, v37358, v37359, v37360, v37361, 3, 2, 4) -> f_1729(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37356, 0, v37352, v37353, v37354, v37355, v37350, v37358, v37359, v37360, v37361, 3, 2, 4) :|: 0 < v37356 && 2 <= v37350
f_1729(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37356, 0, v37352, v37353, v37354, v37355, v37350, v37358, v37359, v37360, v37361, 3, 2, 4) -> f_1738(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37356, 0, v37352, v37353, v37354, v37355, v37350, v37358, v37359, v37360, v37361, 3, 2, 4) :|: 0 = 0
f_1738(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37356, 0, v37352, v37353, v37354, v37355, v37350, v37358, v37359, v37360, v37361, 3, 2, 4) -> f_1745(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37356, 0, v37352, v37353, v37354, v37355, v37350, v37358, v37359, v37360, v37361, 3, 2, 4) :|: 0 = 0
f_1745(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37356, 0, v37352, v37353, v37354, v37355, v37350, v37358, v37359, v37360, v37361, 3, 2, 4) -> f_1751(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37356, 0, v37352, v37353, v37354, v37355, v37350, v37358, v37359, v37360, v37361, 3, 2, 4) :|: TRUE
f_1751(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37356, 0, v37352, v37353, v37354, v37355, v37350, v37358, v37359, v37360, v37361, 3, 2, 4) -> f_1755(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37356, v43950, 0, v37352, v37353, v37354, v37355, v37350, v37358, v37359, v37360, v37361, 3, 2, 4) :|: TRUE
f_1755(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37356, v43950, 0, v37352, v37353, v37354, v37355, v37350, v37358, v37359, v37360, v37361, 3, 2, 4) -> f_1759(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37356, v43950, 0, v37352, v37353, v37354, v37355, v37350, v37358, v37359, v37360, v37361, 3, 2, 4) :|: v43950 != 0
f_1755(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37356, v43950, 0, v37352, v37353, v37354, v37355, v37350, v37358, v37359, v37360, v37361, 3, 2, 4) -> f_1760(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37356, 0, v37352, v37353, v37354, v37355, v37350, v37358, v37359, v37360, v37361, 3, 2, 4) :|: v43950 = 0
f_1759(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37356, v43950, 0, v37352, v37353, v37354, v37355, v37350, v37358, v37359, v37360, v37361, 3, 2, 4) -> f_1765(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37356, v43950, 0, v37352, v37353, v37354, v37355, v37350, v37358, v37359, v37360, v37361, 3, 2, 4) :|: 0 = 0
f_1765(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37356, v43950, 0, v37352, v37353, v37354, v37355, v37350, v37358, v37359, v37360, v37361, 3, 2, 4) -> f_1771(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37356, v43950, 0, v37352, v37353, v37354, v37355, v37350, v37358, v37359, v37360, v37361, 3, 2, 4) :|: TRUE
f_1771(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37356, v43950, 0, v37352, v37353, v37354, v37355, v37350, v37358, v37359, v37360, v37361, 3, 2, 4) -> f_1772(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37356, v43950, 0, v37352, v37353, v37350, v37357, v37354, v37355, v37358, v37359, v37360, v37361, 3, 2, 4) :|: TRUE
f_1760(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37356, 0, v37352, v37353, v37354, v37355, v37350, v37358, v37359, v37360, v37361, 3, 2, 4) -> f_1766(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37356, 0, v37352, v37353, v37354, v37355, v37350, v37358, v37359, v37360, v37361, 3, 2, 4) :|: 0 = 0
f_1766(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37356, 0, v37352, v37353, v37354, v37355, v37350, v37358, v37359, v37360, v37361, 3, 2, 4) -> f_1773(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37356, 0, v37352, v37353, v37354, v37355, v37350, v37358, v37359, v37360, v37361, 3, 2, 4) :|: TRUE
f_1773(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37356, 0, v37352, v37353, v37354, v37355, v37350, v37358, v37359, v37360, v37361, 3, 2, 4) -> f_1774(v37340, v37341, v37342, v37343, v37344, v37345, v37346, v37357, 1, v37349, v37356, 0, v37352, v37353, v37350, v37357, v37354, v37355, v37358, v37359, v37360, v37361, 3, 2, 4) :|: TRUE
f_1890(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46886, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46876, v46887, v46888, v46889, v46890, 3, 2, 4) -> f_1894(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46886, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46876, v46887, v46888, v46889, v46890, 3, 2, 4) :|: 0 = 0
f_1894(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46886, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46876, v46887, v46888, v46889, v46890, 3, 2, 4) -> f_1898(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46886, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46876, v46887, v46888, v46889, v46890, 3, 2, 4) :|: TRUE
f_1898(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46886, 0, v46879, v46880, v46881, v46882, v46883, v46884, v46876, v46887, v46888, v46889, v46890, 3, 2, 4) -> f_1899(v46867, v46868, v46869, v46870, v46871, v46872, v46873, v46874, 1, v46885, v46886, 0, v46881, v46882, v46883, v46884, v46876, v46879, v46880, v46887, v46888, v46889, v46890, 3, 2, 4) :|: TRUE
f_1788(v44438, v44439, v44440, v44441, v44442, v44443, v44444, v44445, 1, v44447, v44448, 0, v44450, v44451, v44452, v44453, v44454, v44455, v44456, v44457, v44458, v44459, 3, 2, 4) -> f_1795(v44438, v44439, v44440, v44441, v44442, v44443, v44444, v44445, 1, v44447, v44448, 0, v44450, v44451, v44452, v44453, v44454, v44455, v44456, v44457, v44458, v44459, 3, 2, 4) :|: 0 = 0
f_1795(v44438, v44439, v44440, v44441, v44442, v44443, v44444, v44445, 1, v44447, v44448, 0, v44450, v44451, v44452, v44453, v44454, v44455, v44456, v44457, v44458, v44459, 3, 2, 4) -> f_1803(v44438, v44439, v44440, v44441, v44442, v44443, v44444, v44445, 1, v44447, v44448, 0, v44450, v44451, v44452, v44453, v44454, v44455, v44456, v44457, v44458, v44459, 3, 2, 4) :|: TRUE
f_1803(v44438, v44439, v44440, v44441, v44442, v44443, v44444, v44445, 1, v44447, v44448, 0, v44450, v44451, v44452, v44453, v44454, v44455, v44456, v44457, v44458, v44459, 3, 2, 4) -> f_1808(v44438, v44439, v44440, v44441, v44442, v44443, v44444, v44445, 1, v44447, v44448, 0, v44450, v44451, v44453, v44454, v44455, v44456, v44457, v44458, v44459, 3, 2, 4) :|: 0 = 0
f_1808(v44438, v44439, v44440, v44441, v44442, v44443, v44444, v44445, 1, v44447, v44448, 0, v44450, v44451, v44453, v44454, v44455, v44456, v44457, v44458, v44459, 3, 2, 4) -> f_1813(v44438, v44439, v44440, v44441, v44442, v44443, v44444, v44445, 1, v44447, v44448, 0, v44450, v44451, v46046, v44453, v44454, v44455, v44456, v44457, v44458, v44459, 3, 2, 4) :|: 1 + v46046 = v44448 && 0 <= v46046
f_1813(v44438, v44439, v44440, v44441, v44442, v44443, v44444, v44445, 1, v44447, v44448, 0, v44450, v44451, v46046, v44453, v44454, v44455, v44456, v44457, v44458, v44459, 3, 2, 4) -> f_1819(v44438, v44439, v44440, v44441, v44442, v44443, v44444, v44445, 1, v44447, v44448, 0, v44450, v44451, v46046, v44453, v44454, v44455, v44456, v44457, v44458, v44459, 3, 2, 4) :|: TRUE
f_1819(v44438, v44439, v44440, v44441, v44442, v44443, v44444, v44445, 1, v44447, v44448, 0, v44450, v44451, v46046, v44453, v44454, v44455, v44456, v44457, v44458, v44459, 3, 2, 4) -> f_1825(v44438, v44439, v44440, v44441, v44442, v44443, v44444, v44445, 1, v44447, v44448, 0, v44450, v44451, v46046, v46054, v44454, v44455, v44456, v44457, v44458, v44459, 3, 2, 4) :|: TRUE
f_1825(v44438, v44439, v44440, v44441, v44442, v44443, v44444, v44445, 1, v44447, v44448, 0, v44450, v44451, v46046, v46054, v44454, v44455, v44456, v44457, v44458, v44459, 3, 2, 4) -> f_1831(v44438, v44439, v44440, v44441, v44442, v44443, v44444, v44445, 1, v44447, v44448, 0, v44450, v44451, v46046, v46054, v44454, v44455, v44456, v44457, v44458, v44459, 3, 2, 4) :|: TRUE
f_1831(v44438, v44439, v44440, v44441, v44442, v44443, v44444, v44445, 1, v44447, v44448, 0, v44450, v44451, v46046, v46054, v44454, v44455, v44456, v44457, v44458, v44459, 3, 2, 4) -> f_1837(v44438, v44439, v44440, v44441, v44442, v44443, v44444, v44445, 1, v44447, v44448, 0, v44450, v44451, v46046, v46054, v44454, v44455, v44456, v44457, v44458, v44459, 3, 2, 4) :|: TRUE
f_1837(v44438, v44439, v44440, v44441, v44442, v44443, v44444, v44445, 1, v44447, v44448, 0, v44450, v44451, v46046, v46054, v44454, v44455, v44456, v44457, v44458, v44459, 3, 2, 4) -> f_1647(v44438, v44439, v44440, v44441, v44442, v44443, v44444, v44445, 1, v44447, v44448, 0, v44450, v44451, v44454, v44455, v46046, v46054, v44456, v44457, v44458, v44459, 3, 2, 4) :|: TRUE
Combined rules. Obtained 18 rulesP rules:
f_1374(v24543:0, v24544:0, v24545:0, v24546:0, v24547:0, v24548:0, v24549:0, v24550:0, 1, v24552:0, v24553:0, v24554:0, 0, v24556:0, v24557:0, v24558:0, v24559:0, v24560:0, v24561:0, v24562:0, v24563:0, v24564:0, 3, 2, 4) -> f_1780(v24543:0, v24544:0, v24545:0, v24546:0, v24547:0, v24548:0, v24549:0, v24560:0, 1, v24552:0, v24553:0, 0, v44899:0, v24556:0, v24557:0, v24558:0, v24559:0, v24550:0, v24560:0, v24561:0, v24562:0, v24563:0, v24564:0, 3, 2, 4) :|: v24560:0 > 0 && v24550:0 > 1
f_1886(v46867:0, v46868:0, v46869:0, v46870:0, v46871:0, v46872:0, v46873:0, v46874:0, 1, v46885:0, v46886:0, 0, 0, v46879:0, v46880:0, v46881:0, v46882:0, v46883:0, v46884:0, v46876:0, v46887:0, v46888:0, v46889:0, v46890:0, 3, 2, 4) -> f_1901(v46867:0, v46868:0, v46869:0, v46870:0, v46871:0, v46872:0, v46873:0, v46874:0, 1, v46885:0, v46886:0, 0, v50779:0, v46882:0, v46883:0, v46884:0, v46876:0, v46879:0, v46880:0, v46887:0, v46888:0, v46889:0, v46890:0, 3, 2, 4) :|: TRUE
f_1850(v45372:0, v45373:0, v45374:0, v45375:0, v45376:0, v45377:0, v45378:0, 1 + v49023:0, 1, v45381:0, v45382:0, v48177:0, v45384:0, v45385:0, v45386:0, v45387:0, v45388:0, v45379:0, v45390:0, v45391:0, v45392:0, v45393:0, 0, 3, 2, 4) -> f_1850(v45372:0, v45373:0, v45374:0, v45375:0, v45376:0, v45377:0, v45378:0, v49023:0, 1, v45381:0, v45382:0, v48177:1, v45384:0, v45385:0, v45386:0, v45387:0, v45388:0, 1 + v49023:0, v45390:0, v45391:0, v45392:0, v45393:0, 0, 3, 2, 4) :|: v49023:0 > 0 && v48177:0 < 0
f_1850(v45372:0, v45373:0, v45374:0, v45375:0, v45376:0, v45377:0, v45378:0, 1 + v49023:0, 1, v45381:0, v45382:0, v48177:0, v45384:0, v45385:0, v45386:0, v45387:0, v45388:0, v45379:0, v45390:0, v45391:0, v45392:0, v45393:0, 0, 3, 2, 4) -> f_1850(v45372:0, v45373:0, v45374:0, v45375:0, v45376:0, v45377:0, v45378:0, v49023:0, 1, v45381:0, v45382:0, v48177:1, v45384:0, v45385:0, v45386:0, v45387:0, v45388:0, 1 + v49023:0, v45390:0, v45391:0, v45392:0, v45393:0, 0, 3, 2, 4) :|: v49023:0 > 0 && v48177:0 > 0
f_1901(v50756:0, v50757:0, v50758:0, v50759:0, v50760:0, v50761:0, v50762:0, v50763:0, 1, v50765:0, 1 + v51143:0, 0, 0, v50769:0, v50770:0, v50771:0, v50772:0, v50773:0, v50774:0, v50775:0, v50776:0, v50777:0, v50778:0, 3, 2, 4) -> f_1755(v50756:0, v50757:0, v50758:0, v50759:0, v50760:0, v50761:0, v50762:0, v51147:0, 1, v50765:0, v51143:0, v43950:0, 0, v50772:0, 1 + v51143:0, v50773:0, v50774:0, 1 + v51143:0, v50775:0, v50776:0, v50777:0, v50778:0, 3, 2, 4) :|: v51143:0 > 0 && v51147:0 > 0
f_1780(v44438:0, v44439:0, v44440:0, v44441:0, v44442:0, v44443:0, v44444:0, v44445:0, 1, 1 + v51142:0, v44448:0, 0, v44899:0, v44450:0, v44451:0, v44452:0, v44453:0, v44454:0, v44455:0, v44456:0, v44457:0, v44458:0, v44459:0, 3, 2, 4) -> f_1886(v44438:0, v44439:0, v44440:0, v44441:0, v44442:0, v44443:0, v44444:0, v44445:0, 1, v51142:0, v51146:0, v50524:0, 0, v44454:0, v44455:0, v44899:0, v44452:0, v44448:0, v44453:0, 1 + v51142:0, v44456:0, v44457:0, v44458:0, v44459:0, 3, 2, 4) :|: v51142:0 > 0 && v44899:0 < 0 && v51146:0 > 0 && v44443:0 > 1
f_1780(v44438:0, v44439:0, v44440:0, v44441:0, v44442:0, v44443:0, v44444:0, v44445:0, 1, 1 + v51142:0, v44448:0, 0, v44899:0, v44450:0, v44451:0, v44452:0, v44453:0, v44454:0, v44455:0, v44456:0, v44457:0, v44458:0, v44459:0, 3, 2, 4) -> f_1886(v44438:0, v44439:0, v44440:0, v44441:0, v44442:0, v44443:0, v44444:0, v44445:0, 1, v51142:0, v51146:0, v50524:0, 0, v44454:0, v44455:0, v44899:0, v44452:0, v44448:0, v44453:0, 1 + v51142:0, v44456:0, v44457:0, v44458:0, v44459:0, 3, 2, 4) :|: v51142:0 > 0 && v44899:0 > 0 && v51146:0 > 0 && v44443:0 > 1
f_1755(v37340:0, v37341:0, v37342:0, v37343:0, v37344:0, v37345:0, v37346:0, v37357:0, 1, v37349:0, v37356:0, 0, 0, v37352:0, v37353:0, v37354:0, v37355:0, v37350:0, v37358:0, v37359:0, v37360:0, v37361:0, 3, 2, 4) -> f_1780(v37340:0, v37341:0, v37342:0, v37343:0, v37344:0, v37345:0, v37346:0, v37357:0, 1, v37349:0, v37356:0, 0, v44899:0, v37352:0, v37353:0, v37350:0, v37357:0, v37354:0, v37355:0, v37358:0, v37359:0, v37360:0, v37361:0, 3, 2, 4) :|: TRUE
f_1886(v46867:0, v46868:0, v46869:0, v46870:0, v46871:0, v46872:0, v46873:0, 1 + v50780:0, 1, v46885:0, v46886:0, v50524:0, 0, v46879:0, v46880:0, v46881:0, v46882:0, v46883:0, v46884:0, v46876:0, v46887:0, v46888:0, v46889:0, v46890:0, 3, 2, 4) -> f_1850(v46867:0, v46868:0, v46869:0, v46870:0, v46871:0, v46872:0, v46873:0, v50780:0, 1, v46885:0, v46886:0, v48177:0, v46881:0, v46882:0, v46883:0, v46884:0, v46876:0, 1 + v50780:0, v46887:0, v46888:0, v46889:0, v46890:0, 0, 3, 2, 4) :|: v50780:0 > 0 && v50524:0 < 0
f_1886(v46867:0, v46868:0, v46869:0, v46870:0, v46871:0, v46872:0, v46873:0, 1 + v50780:0, 1, v46885:0, v46886:0, v50524:0, 0, v46879:0, v46880:0, v46881:0, v46882:0, v46883:0, v46884:0, v46876:0, v46887:0, v46888:0, v46889:0, v46890:0, 3, 2, 4) -> f_1850(v46867:0, v46868:0, v46869:0, v46870:0, v46871:0, v46872:0, v46873:0, v50780:0, 1, v46885:0, v46886:0, v48177:0, v46881:0, v46882:0, v46883:0, v46884:0, v46876:0, 1 + v50780:0, v46887:0, v46888:0, v46889:0, v46890:0, 0, 3, 2, 4) :|: v50780:0 > 0 && v50524:0 > 0
f_1901(v50756:0, v50757:0, v50758:0, v50759:0, v50760:0, v50761:0, v50762:0, v50763:0, 1, 1 + v51142:0, v50766:0, 0, v50779:0, v50769:0, v50770:0, v50771:0, v50772:0, v50773:0, v50774:0, v50775:0, v50776:0, v50777:0, v50778:0, 3, 2, 4) -> f_1886(v50756:0, v50757:0, v50758:0, v50759:0, v50760:0, v50761:0, v50762:0, v50763:0, 1, v51142:0, v51146:0, v50524:0, 0, v50773:0, v50774:0, v50779:0, v50769:0, v50770:0, v50771:0, 1 + v51142:0, v50775:0, v50776:0, v50777:0, v50778:0, 3, 2, 4) :|: v51142:0 > 0 && v50761:0 > 1 && v50779:0 < 0 && v51146:0 > 0
f_1901(v50756:0, v50757:0, v50758:0, v50759:0, v50760:0, v50761:0, v50762:0, v50763:0, 1, 1 + v51142:0, v50766:0, 0, v50779:0, v50769:0, v50770:0, v50771:0, v50772:0, v50773:0, v50774:0, v50775:0, v50776:0, v50777:0, v50778:0, 3, 2, 4) -> f_1886(v50756:0, v50757:0, v50758:0, v50759:0, v50760:0, v50761:0, v50762:0, v50763:0, 1, v51142:0, v51146:0, v50524:0, 0, v50773:0, v50774:0, v50779:0, v50769:0, v50770:0, v50771:0, 1 + v51142:0, v50775:0, v50776:0, v50777:0, v50778:0, 3, 2, 4) :|: v51142:0 > 0 && v50761:0 > 1 && v50779:0 > 0 && v51146:0 > 0
f_1780(v44438:0, v44439:0, v44440:0, v44441:0, v44442:0, v44443:0, v44444:0, v44445:0, 1, v44447:0, 1 + v46046:0, 0, 0, v44450:0, v44451:0, v44452:0, v44453:0, v44454:0, v44455:0, v44456:0, v44457:0, v44458:0, v44459:0, 3, 2, 4) -> f_1755(v44438:0, v44439:0, v44440:0, v44441:0, v44442:0, v44443:0, v44444:0, v46054:0, 1, v44447:0, v46046:0, v43950:0, 0, v44450:0, v44451:0, v44454:0, v44455:0, 1 + v46046:0, v44456:0, v44457:0, v44458:0, v44459:0, 3, 2, 4) :|: v46046:0 > 0 && v46054:0 > 0
f_1755(v37340:0, v37341:0, v37342:0, v37343:0, v37344:0, v37345:0, v37346:0, 1 + v45094:0, 1, v37349:0, v37356:0, v43950:0, 0, v37352:0, v37353:0, v37354:0, v37355:0, v37350:0, v37358:0, v37359:0, v37360:0, v37361:0, 3, 2, 4) -> f_1374(v37340:0, v37341:0, v37342:0, v37343:0, v37344:0, v37345:0, v37346:0, 1 + v45094:0, 1, v37349:0, v37356:0, v43950:0, 0, v37352:0, v37353:0, v37350:0, 1 + v45094:0, v45094:0, v37358:0, v37359:0, v37360:0, v37361:0, 3, 2, 4) :|: v43950:0 < 0 && v45094:0 > -1
f_1755(v37340:0, v37341:0, v37342:0, v37343:0, v37344:0, v37345:0, v37346:0, 1 + v45094:0, 1, v37349:0, v37356:0, v43950:0, 0, v37352:0, v37353:0, v37354:0, v37355:0, v37350:0, v37358:0, v37359:0, v37360:0, v37361:0, 3, 2, 4) -> f_1374(v37340:0, v37341:0, v37342:0, v37343:0, v37344:0, v37345:0, v37346:0, 1 + v45094:0, 1, v37349:0, v37356:0, v43950:0, 0, v37352:0, v37353:0, v37350:0, 1 + v45094:0, v45094:0, v37358:0, v37359:0, v37360:0, v37361:0, 3, 2, 4) :|: v43950:0 > 0 && v45094:0 > -1
f_1374(v24543:0, v24544:0, v24545:0, v24546:0, v24547:0, v24548:0, v24549:0, v24550:0, 1, v24552:0, v24553:0, v24554:0, 0, v24556:0, v24557:0, v24558:0, v24559:0, 1 + v45094:0, v24561:0, v24562:0, v24563:0, v24564:0, 3, 2, 4) -> f_1374(v24543:0, v24544:0, v24545:0, v24546:0, v24547:0, v24548:0, v24549:0, 1 + v45094:0, 1, v24552:0, v24553:0, v29768:0, 0, v24556:0, v24557:0, v24558:0, v24559:0, v45094:0, v24561:0, v24562:0, v24563:0, v24564:0, 3, 2, 4) :|: v24550:0 > 1 && v45094:0 > -1 && v29768:0 < 0
f_1374(v24543:0, v24544:0, v24545:0, v24546:0, v24547:0, v24548:0, v24549:0, v24550:0, 1, v24552:0, v24553:0, v24554:0, 0, v24556:0, v24557:0, v24558:0, v24559:0, 1 + v45094:0, v24561:0, v24562:0, v24563:0, v24564:0, 3, 2, 4) -> f_1374(v24543:0, v24544:0, v24545:0, v24546:0, v24547:0, v24548:0, v24549:0, 1 + v45094:0, 1, v24552:0, v24553:0, v29768:0, 0, v24556:0, v24557:0, v24558:0, v24559:0, v45094:0, v24561:0, v24562:0, v24563:0, v24564:0, 3, 2, 4) :|: v24550:0 > 1 && v45094:0 > -1 && v29768:0 > 0
f_1850(v45372:0, v45373:0, v45374:0, v45375:0, v45376:0, v45377:0, v45378:0, v45389:0, 1, v45381:0, v45382:0, 0, v45384:0, v45385:0, v45386:0, v45387:0, v45388:0, v45379:0, v45390:0, v45391:0, v45392:0, v45393:0, 0, 3, 2, 4) -> f_1901(v45372:0, v45373:0, v45374:0, v45375:0, v45376:0, v45377:0, v45378:0, v45389:0, 1, v45381:0, v45382:0, 0, v50779:0, v45385:0, v45386:0, v45387:0, v45388:0, v45379:0, v45389:0, v45390:0, v45391:0, v45392:0, v45393:0, 3, 2, 4) :|: TRUE
Filtered unneeded arguments:
   f_1374(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25) -> f_1374(x6, x8, x10, x11, x18)
   f_1886(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27) -> f_1886(x6, x8, x10, x11, x12)
   f_1850(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26) -> f_1850(x6, x8, x10, x11, x12)
   f_1901(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26) -> f_1901(x6, x8, x10, x11, x13)
   f_1780(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26) -> f_1780(x6, x8, x10, x11, x13)
   f_1755(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25) -> f_1755(x6, x8, x10, x11, x12)
Removed division, modulo operations, cleaned up constraints. Obtained 17 rules.P rules:
f_1374(v24548:0, v24550:0, v24552:0, v24553:0, v24560:0) -> f_1780(v24548:0, v24560:0, v24552:0, v24553:0, v44899:0) :|: v24560:0 > 0 && v24550:0 > 1
f_1886(v46872:0, v46874:0, v46885:0, v46886:0, cons_0) -> f_1901(v46872:0, v46874:0, v46885:0, v46886:0, v50779:0) :|: TRUE && cons_0 = 0
f_1850(v45377:0, sum~cons_1~v49023:0, v45381:0, v45382:0, v48177:0) -> f_1850(v45377:0, v49023:0, v45381:0, v45382:0, v48177:1) :|: v49023:0 > 0 && v48177:0 < 0 && sum~cons_1~v49023:0 = 1 + v49023:0
f_1850(v45377:0, sum~cons_1~v49023:0, v45381:0, v45382:0, v48177:0) -> f_1850(v45377:0, v49023:0, v45381:0, v45382:0, v48177:1) :|: v49023:0 > 0 && v48177:0 > 0 && sum~cons_1~v49023:0 = 1 + v49023:0
f_1901(v50761:0, v50763:0, v50765:0, sum~cons_1~v51143:0, cons_0) -> f_1755(v50761:0, v51147:0, v50765:0, v51143:0, v43950:0) :|: v51143:0 > 0 && v51147:0 > 0 && sum~cons_1~v51143:0 = 1 + v51143:0 && cons_0 = 0
f_1780(v44443:0, v44445:0, sum~cons_1~v51142:0, v44448:0, v44899:0) -> f_1886(v44443:0, v44445:0, v51142:0, v51146:0, v50524:0) :|: v44899:0 < 0 && v51142:0 > 0 && v44443:0 > 1 && v51146:0 > 0 && sum~cons_1~v51142:0 = 1 + v51142:0
f_1780(v44443:0, v44445:0, sum~cons_1~v51142:0, v44448:0, v44899:0) -> f_1886(v44443:0, v44445:0, v51142:0, v51146:0, v50524:0) :|: v44899:0 > 0 && v51142:0 > 0 && v44443:0 > 1 && v51146:0 > 0 && sum~cons_1~v51142:0 = 1 + v51142:0
f_1755(v37345:0, v37357:0, v37349:0, v37356:0, cons_0) -> f_1780(v37345:0, v37357:0, v37349:0, v37356:0, v44899:0) :|: TRUE && cons_0 = 0
f_1886(v46872:0, sum~cons_1~v50780:0, v46885:0, v46886:0, v50524:0) -> f_1850(v46872:0, v50780:0, v46885:0, v46886:0, v48177:0) :|: v50780:0 > 0 && v50524:0 < 0 && sum~cons_1~v50780:0 = 1 + v50780:0
f_1886(v46872:0, sum~cons_1~v50780:0, v46885:0, v46886:0, v50524:0) -> f_1850(v46872:0, v50780:0, v46885:0, v46886:0, v48177:0) :|: v50780:0 > 0 && v50524:0 > 0 && sum~cons_1~v50780:0 = 1 + v50780:0
f_1901(v50761:0, v50763:0, sum~cons_1~v51142:0, v50766:0, v50779:0) -> f_1886(v50761:0, v50763:0, v51142:0, v51146:0, v50524:0) :|: v50761:0 > 1 && v51142:0 > 0 && v51146:0 > 0 && v50779:0 < 0 && sum~cons_1~v51142:0 = 1 + v51142:0
f_1901(v50761:0, v50763:0, sum~cons_1~v51142:0, v50766:0, v50779:0) -> f_1886(v50761:0, v50763:0, v51142:0, v51146:0, v50524:0) :|: v50761:0 > 1 && v51142:0 > 0 && v51146:0 > 0 && v50779:0 > 0 && sum~cons_1~v51142:0 = 1 + v51142:0
f_1780(v44443:0, v44445:0, v44447:0, sum~cons_1~v46046:0, cons_0) -> f_1755(v44443:0, v46054:0, v44447:0, v46046:0, v43950:0) :|: v46046:0 > 0 && v46054:0 > 0 && sum~cons_1~v46046:0 = 1 + v46046:0 && cons_0 = 0
f_1755(v37345:0, sum~cons_1~v45094:0, v37349:0, v37356:0, v43950:0) -> f_1374(v37345:0, 1 + v45094:0, v37349:0, v37356:0, v45094:0) :|: v43950:0 < 0 && v45094:0 > -1 && sum~cons_1~v45094:0 = 1 + v45094:0
f_1755(v37345:0, sum~cons_1~v45094:0, v37349:0, v37356:0, v43950:0) -> f_1374(v37345:0, 1 + v45094:0, v37349:0, v37356:0, v45094:0) :|: v43950:0 > 0 && v45094:0 > -1 && sum~cons_1~v45094:0 = 1 + v45094:0
f_1374(v24548:0, v24550:0, v24552:0, v24553:0, sum~cons_1~v45094:0) -> f_1374(v24548:0, 1 + v45094:0, v24552:0, v24553:0, v45094:0) :|: v24550:0 > 1 && v45094:0 > -1 && sum~cons_1~v45094:0 = 1 + v45094:0
f_1850(v45377:0, v45389:0, v45381:0, v45382:0, cons_0) -> f_1901(v45377:0, v45389:0, v45381:0, v45382:0, v50779:0) :|: TRUE && cons_0 = 0

----------------------------------------

(9)
Obligation:
Rules:
f_1374(v24548:0, v24550:0, v24552:0, v24553:0, v24560:0) -> f_1780(v24548:0, v24560:0, v24552:0, v24553:0, v44899:0) :|: v24560:0 > 0 && v24550:0 > 1
f_1886(v46872:0, v46874:0, v46885:0, v46886:0, cons_0) -> f_1901(v46872:0, v46874:0, v46885:0, v46886:0, v50779:0) :|: TRUE && cons_0 = 0
f_1850(v45377:0, sum~cons_1~v49023:0, v45381:0, v45382:0, v48177:0) -> f_1850(v45377:0, v49023:0, v45381:0, v45382:0, v48177:1) :|: v49023:0 > 0 && v48177:0 < 0 && sum~cons_1~v49023:0 = 1 + v49023:0
f_1850(x, x1, x2, x3, x4) -> f_1850(x, x5, x2, x3, x6) :|: x5 > 0 && x4 > 0 && x1 = 1 + x5
f_1901(x7, x8, x9, x10, x11) -> f_1755(x7, x12, x9, x13, x14) :|: x13 > 0 && x12 > 0 && x10 = 1 + x13 && x11 = 0
f_1780(x15, x16, x17, x18, x19) -> f_1886(x15, x16, x20, x21, x22) :|: x19 < 0 && x20 > 0 && x15 > 1 && x21 > 0 && x17 = 1 + x20
f_1780(x23, x24, x25, x26, x27) -> f_1886(x23, x24, x28, x29, x30) :|: x27 > 0 && x28 > 0 && x23 > 1 && x29 > 0 && x25 = 1 + x28
f_1755(x31, x32, x33, x34, x35) -> f_1780(x31, x32, x33, x34, x36) :|: TRUE && x35 = 0
f_1886(x37, x38, x39, x40, x41) -> f_1850(x37, x42, x39, x40, x43) :|: x42 > 0 && x41 < 0 && x38 = 1 + x42
f_1886(x44, x45, x46, x47, x48) -> f_1850(x44, x49, x46, x47, x50) :|: x49 > 0 && x48 > 0 && x45 = 1 + x49
f_1901(x51, x52, x53, x54, x55) -> f_1886(x51, x52, x56, x57, x58) :|: x51 > 1 && x56 > 0 && x57 > 0 && x55 < 0 && x53 = 1 + x56
f_1901(x59, x60, x61, x62, x63) -> f_1886(x59, x60, x64, x65, x66) :|: x59 > 1 && x64 > 0 && x65 > 0 && x63 > 0 && x61 = 1 + x64
f_1780(x67, x68, x69, x70, x71) -> f_1755(x67, x72, x69, x73, x74) :|: x73 > 0 && x72 > 0 && x70 = 1 + x73 && x71 = 0
f_1755(v37345:0, sum~cons_1~v45094:0, v37349:0, v37356:0, v43950:0) -> f_1374(v37345:0, 1 + v45094:0, v37349:0, v37356:0, v45094:0) :|: v43950:0 < 0 && v45094:0 > -1 && sum~cons_1~v45094:0 = 1 + v45094:0
f_1755(x75, x76, x77, x78, x79) -> f_1374(x75, 1 + x80, x77, x78, x80) :|: x79 > 0 && x80 > -1 && x76 = 1 + x80
f_1374(x81, x82, x83, x84, x85) -> f_1374(x81, 1 + x86, x83, x84, x86) :|: x82 > 1 && x86 > -1 && x85 = 1 + x86
f_1850(x87, x88, x89, x90, x91) -> f_1901(x87, x88, x89, x90, x92) :|: TRUE && x91 = 0

----------------------------------------

(10) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(11)
Obligation:
Rules:
f_1780(x15:0, x16:0, sum~cons_1~x20:0, x18:0, x19:0) -> f_1886(x15:0, x16:0, x20:0, x21:0, x22:0) :|: x15:0 > 1 && x21:0 > 0 && x20:0 > 0 && x19:0 < 0 && sum~cons_1~x20:0 = 1 + x20:0
f_1850(x:0, sum~cons_1~x5:0, x2:0, x3:0, x4:0) -> f_1850(x:0, x5:0, x2:0, x3:0, x6:0) :|: x5:0 > 0 && x4:0 > 0 && sum~cons_1~x5:0 = 1 + x5:0
f_1886(v46872:0:0, v46874:0:0, v46885:0:0, v46886:0:0, cons_0) -> f_1901(v46872:0:0, v46874:0:0, v46885:0:0, v46886:0:0, v50779:0:0) :|: TRUE && cons_0 = 0
f_1886(x37:0, sum~cons_1~x42:0, x39:0, x40:0, x41:0) -> f_1850(x37:0, x42:0, x39:0, x40:0, x43:0) :|: x42:0 > 0 && x41:0 < 0 && sum~cons_1~x42:0 = 1 + x42:0
f_1780(x, x1, x2, x3, x4) -> f_1755(x, x5, x2, x6, x7) :|: x6 > 0 && x5 > 0 && x3 = 1 + x6 && x4 = 0
f_1780(x23:0, x24:0, sum~cons_1~x28:0, x26:0, x27:0) -> f_1886(x23:0, x24:0, x28:0, x29:0, x30:0) :|: x23:0 > 1 && x29:0 > 0 && x28:0 > 0 && x27:0 > 0 && sum~cons_1~x28:0 = 1 + x28:0
f_1901(x59:0, x60:0, sum~cons_1~x64:0, x62:0, x63:0) -> f_1886(x59:0, x60:0, x64:0, x65:0, x66:0) :|: x65:0 > 0 && x63:0 > 0 && x64:0 > 0 && x59:0 > 1 && sum~cons_1~x64:0 = 1 + x64:0
f_1901(x8, x9, x10, x11, x12) -> f_1755(x8, x13, x10, x14, x15) :|: x14 > 0 && x13 > 0 && x11 = 1 + x14 && x12 = 0
f_1755(x75:0, sum~cons_1~x80:0, x77:0, x78:0, x79:0) -> f_1374(x75:0, 1 + x80:0, x77:0, x78:0, x80:0) :|: x79:0 > 0 && x80:0 > -1 && sum~cons_1~x80:0 = 1 + x80:0
f_1850(x16, x17, x18, x19, x20) -> f_1901(x16, x17, x18, x19, x21) :|: TRUE && x20 = 0
f_1755(x22, x23, x24, x25, x26) -> f_1780(x22, x23, x24, x25, x27) :|: TRUE && x26 = 0
f_1755(v37345:0:0, sum~cons_1~v45094:0:0, v37349:0:0, v37356:0:0, v43950:0:0) -> f_1374(v37345:0:0, 1 + v45094:0:0, v37349:0:0, v37356:0:0, v45094:0:0) :|: v43950:0:0 < 0 && v45094:0:0 > -1 && sum~cons_1~v45094:0:0 = 1 + v45094:0:0
f_1886(x44:0, sum~cons_1~x49:0, x46:0, x47:0, x48:0) -> f_1850(x44:0, x49:0, x46:0, x47:0, x50:0) :|: x49:0 > 0 && x48:0 > 0 && sum~cons_1~x49:0 = 1 + x49:0
f_1901(x51:0, x52:0, sum~cons_1~x56:0, x54:0, x55:0) -> f_1886(x51:0, x52:0, x56:0, x57:0, x58:0) :|: x57:0 > 0 && x55:0 < 0 && x56:0 > 0 && x51:0 > 1 && sum~cons_1~x56:0 = 1 + x56:0
f_1374(v24548:0:0, v24550:0:0, v24552:0:0, v24553:0:0, v24560:0:0) -> f_1780(v24548:0:0, v24560:0:0, v24552:0:0, v24553:0:0, v44899:0:0) :|: v24560:0:0 > 0 && v24550:0:0 > 1
f_1374(x81:0, x82:0, x83:0, x84:0, sum~cons_1~x86:0) -> f_1374(x81:0, 1 + x86:0, x83:0, x84:0, x86:0) :|: x82:0 > 1 && x86:0 > -1 && sum~cons_1~x86:0 = 1 + x86:0
f_1850(v45377:0:0, sum~cons_1~v49023:0:0, v45381:0:0, v45382:0:0, v48177:0:0) -> f_1850(v45377:0:0, v49023:0:0, v45381:0:0, v45382:0:0, v48177:1:0) :|: v49023:0:0 > 0 && v48177:0:0 < 0 && sum~cons_1~v49023:0:0 = 1 + v49023:0:0

----------------------------------------

(12) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1780(x, x1, x2, x3, x4)] = -2 + x + x2
[f_1886(x5, x6, x7, x8, x9)] = -1 + x5 + x7
[f_1850(x10, x11, x12, x13, x14)] = -1 + x10 + x12
[f_1901(x15, x16, x17, x18, x19)] = -2 + x15 + x17
[f_1755(x20, x21, x22, x23, x24)] = -2 + x20 + x22
[f_1374(x25, x26, x27, x28, x29)] = -2 + x25 + x27

The following rules are decreasing:
f_1886(v46872:0:0, v46874:0:0, v46885:0:0, v46886:0:0, cons_0) -> f_1901(v46872:0:0, v46874:0:0, v46885:0:0, v46886:0:0, v50779:0:0) :|: TRUE && cons_0 = 0
f_1850(x16, x17, x18, x19, x20) -> f_1901(x16, x17, x18, x19, x21) :|: TRUE && x20 = 0
The following rules are bounded:
f_1780(x15:0, x16:0, sum~cons_1~x20:0, x18:0, x19:0) -> f_1886(x15:0, x16:0, x20:0, x21:0, x22:0) :|: x15:0 > 1 && x21:0 > 0 && x20:0 > 0 && x19:0 < 0 && sum~cons_1~x20:0 = 1 + x20:0
f_1780(x23:0, x24:0, sum~cons_1~x28:0, x26:0, x27:0) -> f_1886(x23:0, x24:0, x28:0, x29:0, x30:0) :|: x23:0 > 1 && x29:0 > 0 && x28:0 > 0 && x27:0 > 0 && sum~cons_1~x28:0 = 1 + x28:0
f_1901(x59:0, x60:0, sum~cons_1~x64:0, x62:0, x63:0) -> f_1886(x59:0, x60:0, x64:0, x65:0, x66:0) :|: x65:0 > 0 && x63:0 > 0 && x64:0 > 0 && x59:0 > 1 && sum~cons_1~x64:0 = 1 + x64:0
f_1901(x51:0, x52:0, sum~cons_1~x56:0, x54:0, x55:0) -> f_1886(x51:0, x52:0, x56:0, x57:0, x58:0) :|: x57:0 > 0 && x55:0 < 0 && x56:0 > 0 && x51:0 > 1 && sum~cons_1~x56:0 = 1 + x56:0

----------------------------------------

(13)
Complex Obligation (AND)

----------------------------------------

(14)
Obligation:
Rules:
f_1780(x15:0, x16:0, sum~cons_1~x20:0, x18:0, x19:0) -> f_1886(x15:0, x16:0, x20:0, x21:0, x22:0) :|: x15:0 > 1 && x21:0 > 0 && x20:0 > 0 && x19:0 < 0 && sum~cons_1~x20:0 = 1 + x20:0
f_1850(x:0, sum~cons_1~x5:0, x2:0, x3:0, x4:0) -> f_1850(x:0, x5:0, x2:0, x3:0, x6:0) :|: x5:0 > 0 && x4:0 > 0 && sum~cons_1~x5:0 = 1 + x5:0
f_1886(x37:0, sum~cons_1~x42:0, x39:0, x40:0, x41:0) -> f_1850(x37:0, x42:0, x39:0, x40:0, x43:0) :|: x42:0 > 0 && x41:0 < 0 && sum~cons_1~x42:0 = 1 + x42:0
f_1780(x, x1, x2, x3, x4) -> f_1755(x, x5, x2, x6, x7) :|: x6 > 0 && x5 > 0 && x3 = 1 + x6 && x4 = 0
f_1780(x23:0, x24:0, sum~cons_1~x28:0, x26:0, x27:0) -> f_1886(x23:0, x24:0, x28:0, x29:0, x30:0) :|: x23:0 > 1 && x29:0 > 0 && x28:0 > 0 && x27:0 > 0 && sum~cons_1~x28:0 = 1 + x28:0
f_1901(x59:0, x60:0, sum~cons_1~x64:0, x62:0, x63:0) -> f_1886(x59:0, x60:0, x64:0, x65:0, x66:0) :|: x65:0 > 0 && x63:0 > 0 && x64:0 > 0 && x59:0 > 1 && sum~cons_1~x64:0 = 1 + x64:0
f_1901(x8, x9, x10, x11, x12) -> f_1755(x8, x13, x10, x14, x15) :|: x14 > 0 && x13 > 0 && x11 = 1 + x14 && x12 = 0
f_1755(x75:0, sum~cons_1~x80:0, x77:0, x78:0, x79:0) -> f_1374(x75:0, 1 + x80:0, x77:0, x78:0, x80:0) :|: x79:0 > 0 && x80:0 > -1 && sum~cons_1~x80:0 = 1 + x80:0
f_1755(x22, x23, x24, x25, x26) -> f_1780(x22, x23, x24, x25, x27) :|: TRUE && x26 = 0
f_1755(v37345:0:0, sum~cons_1~v45094:0:0, v37349:0:0, v37356:0:0, v43950:0:0) -> f_1374(v37345:0:0, 1 + v45094:0:0, v37349:0:0, v37356:0:0, v45094:0:0) :|: v43950:0:0 < 0 && v45094:0:0 > -1 && sum~cons_1~v45094:0:0 = 1 + v45094:0:0
f_1886(x44:0, sum~cons_1~x49:0, x46:0, x47:0, x48:0) -> f_1850(x44:0, x49:0, x46:0, x47:0, x50:0) :|: x49:0 > 0 && x48:0 > 0 && sum~cons_1~x49:0 = 1 + x49:0
f_1901(x51:0, x52:0, sum~cons_1~x56:0, x54:0, x55:0) -> f_1886(x51:0, x52:0, x56:0, x57:0, x58:0) :|: x57:0 > 0 && x55:0 < 0 && x56:0 > 0 && x51:0 > 1 && sum~cons_1~x56:0 = 1 + x56:0
f_1374(v24548:0:0, v24550:0:0, v24552:0:0, v24553:0:0, v24560:0:0) -> f_1780(v24548:0:0, v24560:0:0, v24552:0:0, v24553:0:0, v44899:0:0) :|: v24560:0:0 > 0 && v24550:0:0 > 1
f_1374(x81:0, x82:0, x83:0, x84:0, sum~cons_1~x86:0) -> f_1374(x81:0, 1 + x86:0, x83:0, x84:0, x86:0) :|: x82:0 > 1 && x86:0 > -1 && sum~cons_1~x86:0 = 1 + x86:0
f_1850(v45377:0:0, sum~cons_1~v49023:0:0, v45381:0:0, v45382:0:0, v48177:0:0) -> f_1850(v45377:0:0, v49023:0:0, v45381:0:0, v45382:0:0, v48177:1:0) :|: v49023:0:0 > 0 && v48177:0:0 < 0 && sum~cons_1~v49023:0:0 = 1 + v49023:0:0

----------------------------------------

(15) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained 2 non-trivial SCCs.

----------------------------------------

(16)
Complex Obligation (AND)

----------------------------------------

(17)
Obligation:
Rules:
f_1780(x, x1, x2, x3, x4) -> f_1755(x, x5, x2, x6, x7) :|: x6 > 0 && x5 > 0 && x3 = 1 + x6 && x4 = 0
f_1755(x22, x23, x24, x25, x26) -> f_1780(x22, x23, x24, x25, x27) :|: TRUE && x26 = 0
f_1374(v24548:0:0, v24550:0:0, v24552:0:0, v24553:0:0, v24560:0:0) -> f_1780(v24548:0:0, v24560:0:0, v24552:0:0, v24553:0:0, v44899:0:0) :|: v24560:0:0 > 0 && v24550:0:0 > 1
f_1755(x75:0, sum~cons_1~x80:0, x77:0, x78:0, x79:0) -> f_1374(x75:0, 1 + x80:0, x77:0, x78:0, x80:0) :|: x79:0 > 0 && x80:0 > -1 && sum~cons_1~x80:0 = 1 + x80:0
f_1755(v37345:0:0, sum~cons_1~v45094:0:0, v37349:0:0, v37356:0:0, v43950:0:0) -> f_1374(v37345:0:0, 1 + v45094:0:0, v37349:0:0, v37356:0:0, v45094:0:0) :|: v43950:0:0 < 0 && v45094:0:0 > -1 && sum~cons_1~v45094:0:0 = 1 + v45094:0:0
f_1374(x81:0, x82:0, x83:0, x84:0, sum~cons_1~x86:0) -> f_1374(x81:0, 1 + x86:0, x83:0, x84:0, x86:0) :|: x82:0 > 1 && x86:0 > -1 && sum~cons_1~x86:0 = 1 + x86:0

----------------------------------------

(18) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(19)
Obligation:
Rules:
f_1374(v24548:0:0:0, v24550:0:0:0, v24552:0:0:0, v24553:0:0:0, v24560:0:0:0) -> f_1780(v24548:0:0:0, v24560:0:0:0, v24552:0:0:0, v24553:0:0:0, v44899:0:0:0) :|: v24560:0:0:0 > 0 && v24550:0:0:0 > 1
f_1780(x:0, x1:0, x2:0, sum~cons_1~x6:0, cons_0) -> f_1374(x:0, 1 + x80:0:0, x2:0, x6:0, x80:0:0) :|: x7:0 > 0 && x80:0:0 > -1 && x6:0 > 0 && sum~cons_1~x6:0 = 1 + x6:0 && cons_0 = 0
f_1374(x81:0:0, x82:0:0, x83:0:0, x84:0:0, sum~cons_1~x86:0:0) -> f_1374(x81:0:0, 1 + x86:0:0, x83:0:0, x84:0:0, x86:0:0) :|: x82:0:0 > 1 && x86:0:0 > -1 && sum~cons_1~x86:0:0 = 1 + x86:0:0
f_1780(x, x1, x2, x3, x4) -> f_1780(x, x5, x2, x6, x7) :|: x6 > 0 && x5 > 0 && x3 = 1 + x6 && x4 = 0
f_1780(x8, x9, x10, x11, x12) -> f_1374(x8, 1 + x13, x10, x14, x13) :|: x15 < 0 && x13 > -1 && x14 > 0 && x11 = 1 + x14 && x12 = 0

----------------------------------------

(20) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1374(x1, x2, x3, x4, x5) -> f_1374(x2, x4, x5)
   f_1780(x1, x2, x3, x4, x5) -> f_1780(x4, x5)

----------------------------------------

(21)
Obligation:
Rules:
f_1374(v24550:0:0:0, v24553:0:0:0, v24560:0:0:0) -> f_1780(v24553:0:0:0, v44899:0:0:0) :|: v24560:0:0:0 > 0 && v24550:0:0:0 > 1
f_1780(sum~cons_1~x6:0, cons_0) -> f_1374(1 + x80:0:0, x6:0, x80:0:0) :|: x7:0 > 0 && x80:0:0 > -1 && x6:0 > 0 && sum~cons_1~x6:0 = 1 + x6:0 && cons_0 = 0
f_1374(x82:0:0, x84:0:0, sum~cons_1~x86:0:0) -> f_1374(1 + x86:0:0, x84:0:0, x86:0:0) :|: x82:0:0 > 1 && x86:0:0 > -1 && sum~cons_1~x86:0:0 = 1 + x86:0:0
f_1780(x3, x4) -> f_1780(x6, x7) :|: x6 > 0 && x5 > 0 && x3 = 1 + x6 && x4 = 0
f_1780(x11, x12) -> f_1374(1 + x13, x14, x13) :|: x15 < 0 && x13 > -1 && x14 > 0 && x11 = 1 + x14 && x12 = 0

----------------------------------------

(22) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1374 ] = 2*f_1374_2 + 1
[ f_1780 ] = 2*f_1780_1

The following rules are decreasing:
f_1374(v24550:0:0:0, v24553:0:0:0, v24560:0:0:0) -> f_1780(v24553:0:0:0, v44899:0:0:0) :|: v24560:0:0:0 > 0 && v24550:0:0:0 > 1
f_1780(sum~cons_1~x6:0, cons_0) -> f_1374(1 + x80:0:0, x6:0, x80:0:0) :|: x7:0 > 0 && x80:0:0 > -1 && x6:0 > 0 && sum~cons_1~x6:0 = 1 + x6:0 && cons_0 = 0
f_1780(x3, x4) -> f_1780(x6, x7) :|: x6 > 0 && x5 > 0 && x3 = 1 + x6 && x4 = 0
f_1780(x11, x12) -> f_1374(1 + x13, x14, x13) :|: x15 < 0 && x13 > -1 && x14 > 0 && x11 = 1 + x14 && x12 = 0

The following rules are bounded:
f_1780(sum~cons_1~x6:0, cons_0) -> f_1374(1 + x80:0:0, x6:0, x80:0:0) :|: x7:0 > 0 && x80:0:0 > -1 && x6:0 > 0 && sum~cons_1~x6:0 = 1 + x6:0 && cons_0 = 0
f_1780(x3, x4) -> f_1780(x6, x7) :|: x6 > 0 && x5 > 0 && x3 = 1 + x6 && x4 = 0


----------------------------------------

(23)
Obligation:
Rules:
f_1374(v24550:0:0:0, v24553:0:0:0, v24560:0:0:0) -> f_1780(v24553:0:0:0, v44899:0:0:0) :|: v24560:0:0:0 > 0 && v24550:0:0:0 > 1
f_1374(x82:0:0, x84:0:0, sum~cons_1~x86:0:0) -> f_1374(1 + x86:0:0, x84:0:0, x86:0:0) :|: x82:0:0 > 1 && x86:0:0 > -1 && sum~cons_1~x86:0:0 = 1 + x86:0:0
f_1780(x11, x12) -> f_1374(1 + x13, x14, x13) :|: x15 < 0 && x13 > -1 && x14 > 0 && x11 = 1 + x14 && x12 = 0

----------------------------------------

(24) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(25)
Obligation:
Rules:
f_1374(x82:0:0:0, x84:0:0:0, sum~cons_1~x86:0:0:0) -> f_1374(1 + x86:0:0:0, x84:0:0:0, x86:0:0:0) :|: x82:0:0:0 > 1 && x86:0:0:0 > -1 && sum~cons_1~x86:0:0:0 = 1 + x86:0:0:0
f_1374(v24550:0:0:0:0, sum~cons_1~x14:0, v24560:0:0:0:0) -> f_1374(1 + x13:0, x14:0, x13:0) :|: v24550:0:0:0:0 > 1 && v24560:0:0:0:0 > 0 && x14:0 > 0 && x13:0 > -1 && x15:0 < 0 && sum~cons_1~x14:0 = 1 + x14:0

----------------------------------------

(26) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1374 ] = 2*f_1374_2

The following rules are decreasing:
f_1374(v24550:0:0:0:0, sum~cons_1~x14:0, v24560:0:0:0:0) -> f_1374(1 + x13:0, x14:0, x13:0) :|: v24550:0:0:0:0 > 1 && v24560:0:0:0:0 > 0 && x14:0 > 0 && x13:0 > -1 && x15:0 < 0 && sum~cons_1~x14:0 = 1 + x14:0

The following rules are bounded:
f_1374(v24550:0:0:0:0, sum~cons_1~x14:0, v24560:0:0:0:0) -> f_1374(1 + x13:0, x14:0, x13:0) :|: v24550:0:0:0:0 > 1 && v24560:0:0:0:0 > 0 && x14:0 > 0 && x13:0 > -1 && x15:0 < 0 && sum~cons_1~x14:0 = 1 + x14:0


----------------------------------------

(27)
Obligation:
Rules:
f_1374(x82:0:0:0, x84:0:0:0, sum~cons_1~x86:0:0:0) -> f_1374(1 + x86:0:0:0, x84:0:0:0, x86:0:0:0) :|: x82:0:0:0 > 1 && x86:0:0:0 > -1 && sum~cons_1~x86:0:0:0 = 1 + x86:0:0:0

----------------------------------------

(28) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(29)
Obligation:
Rules:
f_1374(x82:0:0:0:0, x84:0:0:0:0, sum~cons_1~x86:0:0:0:0) -> f_1374(1 + x86:0:0:0:0, x84:0:0:0:0, x86:0:0:0:0) :|: x82:0:0:0:0 > 1 && x86:0:0:0:0 > -1 && sum~cons_1~x86:0:0:0:0 = 1 + x86:0:0:0:0

----------------------------------------

(30) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1374(x1, x2, x3) -> f_1374(x1, x3)

----------------------------------------

(31)
Obligation:
Rules:
f_1374(x82:0:0:0:0, sum~cons_1~x86:0:0:0:0) -> f_1374(1 + x86:0:0:0:0, x86:0:0:0:0) :|: x82:0:0:0:0 > 1 && x86:0:0:0:0 > -1 && sum~cons_1~x86:0:0:0:0 = 1 + x86:0:0:0:0

----------------------------------------

(32) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1374 ] = f_1374_2

The following rules are decreasing:
f_1374(x82:0:0:0:0, sum~cons_1~x86:0:0:0:0) -> f_1374(1 + x86:0:0:0:0, x86:0:0:0:0) :|: x82:0:0:0:0 > 1 && x86:0:0:0:0 > -1 && sum~cons_1~x86:0:0:0:0 = 1 + x86:0:0:0:0

The following rules are bounded:
f_1374(x82:0:0:0:0, sum~cons_1~x86:0:0:0:0) -> f_1374(1 + x86:0:0:0:0, x86:0:0:0:0) :|: x82:0:0:0:0 > 1 && x86:0:0:0:0 > -1 && sum~cons_1~x86:0:0:0:0 = 1 + x86:0:0:0:0


----------------------------------------

(33)
YES

----------------------------------------

(34)
Obligation:
Rules:
f_1850(x:0, sum~cons_1~x5:0, x2:0, x3:0, x4:0) -> f_1850(x:0, x5:0, x2:0, x3:0, x6:0) :|: x5:0 > 0 && x4:0 > 0 && sum~cons_1~x5:0 = 1 + x5:0
f_1850(v45377:0:0, sum~cons_1~v49023:0:0, v45381:0:0, v45382:0:0, v48177:0:0) -> f_1850(v45377:0:0, v49023:0:0, v45381:0:0, v45382:0:0, v48177:1:0) :|: v49023:0:0 > 0 && v48177:0:0 < 0 && sum~cons_1~v49023:0:0 = 1 + v49023:0:0

----------------------------------------

(35) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(36)
Obligation:
Rules:
f_1850(x:0:0, sum~cons_1~x5:0:0, x2:0:0, x3:0:0, x4:0:0) -> f_1850(x:0:0, x5:0:0, x2:0:0, x3:0:0, x6:0:0) :|: x5:0:0 > 0 && x4:0:0 > 0 && sum~cons_1~x5:0:0 = 1 + x5:0:0
f_1850(v45377:0:0:0, sum~cons_1~v49023:0:0:0, v45381:0:0:0, v45382:0:0:0, v48177:0:0:0) -> f_1850(v45377:0:0:0, v49023:0:0:0, v45381:0:0:0, v45382:0:0:0, v48177:1:0:0) :|: v49023:0:0:0 > 0 && v48177:0:0:0 < 0 && sum~cons_1~v49023:0:0:0 = 1 + v49023:0:0:0

----------------------------------------

(37) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1850(x1, x2, x3, x4, x5) -> f_1850(x2, x5)

----------------------------------------

(38)
Obligation:
Rules:
f_1850(sum~cons_1~x5:0:0, x4:0:0) -> f_1850(x5:0:0, x6:0:0) :|: x5:0:0 > 0 && x4:0:0 > 0 && sum~cons_1~x5:0:0 = 1 + x5:0:0
f_1850(sum~cons_1~v49023:0:0:0, v48177:0:0:0) -> f_1850(v49023:0:0:0, v48177:1:0:0) :|: v49023:0:0:0 > 0 && v48177:0:0:0 < 0 && sum~cons_1~v49023:0:0:0 = 1 + v49023:0:0:0

----------------------------------------

(39) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1850(x, x1)] = x

The following rules are decreasing:
f_1850(sum~cons_1~x5:0:0, x4:0:0) -> f_1850(x5:0:0, x6:0:0) :|: x5:0:0 > 0 && x4:0:0 > 0 && sum~cons_1~x5:0:0 = 1 + x5:0:0
f_1850(sum~cons_1~v49023:0:0:0, v48177:0:0:0) -> f_1850(v49023:0:0:0, v48177:1:0:0) :|: v49023:0:0:0 > 0 && v48177:0:0:0 < 0 && sum~cons_1~v49023:0:0:0 = 1 + v49023:0:0:0
The following rules are bounded:
f_1850(sum~cons_1~x5:0:0, x4:0:0) -> f_1850(x5:0:0, x6:0:0) :|: x5:0:0 > 0 && x4:0:0 > 0 && sum~cons_1~x5:0:0 = 1 + x5:0:0
f_1850(sum~cons_1~v49023:0:0:0, v48177:0:0:0) -> f_1850(v49023:0:0:0, v48177:1:0:0) :|: v49023:0:0:0 > 0 && v48177:0:0:0 < 0 && sum~cons_1~v49023:0:0:0 = 1 + v49023:0:0:0

----------------------------------------

(40)
YES

----------------------------------------

(41)
Obligation:
Rules:
f_1850(x:0, sum~cons_1~x5:0, x2:0, x3:0, x4:0) -> f_1850(x:0, x5:0, x2:0, x3:0, x6:0) :|: x5:0 > 0 && x4:0 > 0 && sum~cons_1~x5:0 = 1 + x5:0
f_1886(v46872:0:0, v46874:0:0, v46885:0:0, v46886:0:0, cons_0) -> f_1901(v46872:0:0, v46874:0:0, v46885:0:0, v46886:0:0, v50779:0:0) :|: TRUE && cons_0 = 0
f_1886(x37:0, sum~cons_1~x42:0, x39:0, x40:0, x41:0) -> f_1850(x37:0, x42:0, x39:0, x40:0, x43:0) :|: x42:0 > 0 && x41:0 < 0 && sum~cons_1~x42:0 = 1 + x42:0
f_1780(x, x1, x2, x3, x4) -> f_1755(x, x5, x2, x6, x7) :|: x6 > 0 && x5 > 0 && x3 = 1 + x6 && x4 = 0
f_1901(x8, x9, x10, x11, x12) -> f_1755(x8, x13, x10, x14, x15) :|: x14 > 0 && x13 > 0 && x11 = 1 + x14 && x12 = 0
f_1755(x75:0, sum~cons_1~x80:0, x77:0, x78:0, x79:0) -> f_1374(x75:0, 1 + x80:0, x77:0, x78:0, x80:0) :|: x79:0 > 0 && x80:0 > -1 && sum~cons_1~x80:0 = 1 + x80:0
f_1850(x16, x17, x18, x19, x20) -> f_1901(x16, x17, x18, x19, x21) :|: TRUE && x20 = 0
f_1755(x22, x23, x24, x25, x26) -> f_1780(x22, x23, x24, x25, x27) :|: TRUE && x26 = 0
f_1755(v37345:0:0, sum~cons_1~v45094:0:0, v37349:0:0, v37356:0:0, v43950:0:0) -> f_1374(v37345:0:0, 1 + v45094:0:0, v37349:0:0, v37356:0:0, v45094:0:0) :|: v43950:0:0 < 0 && v45094:0:0 > -1 && sum~cons_1~v45094:0:0 = 1 + v45094:0:0
f_1886(x44:0, sum~cons_1~x49:0, x46:0, x47:0, x48:0) -> f_1850(x44:0, x49:0, x46:0, x47:0, x50:0) :|: x49:0 > 0 && x48:0 > 0 && sum~cons_1~x49:0 = 1 + x49:0
f_1374(v24548:0:0, v24550:0:0, v24552:0:0, v24553:0:0, v24560:0:0) -> f_1780(v24548:0:0, v24560:0:0, v24552:0:0, v24553:0:0, v44899:0:0) :|: v24560:0:0 > 0 && v24550:0:0 > 1
f_1374(x81:0, x82:0, x83:0, x84:0, sum~cons_1~x86:0) -> f_1374(x81:0, 1 + x86:0, x83:0, x84:0, x86:0) :|: x82:0 > 1 && x86:0 > -1 && sum~cons_1~x86:0 = 1 + x86:0
f_1850(v45377:0:0, sum~cons_1~v49023:0:0, v45381:0:0, v45382:0:0, v48177:0:0) -> f_1850(v45377:0:0, v49023:0:0, v45381:0:0, v45382:0:0, v48177:1:0) :|: v49023:0:0 > 0 && v48177:0:0 < 0 && sum~cons_1~v49023:0:0 = 1 + v49023:0:0

----------------------------------------

(42) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained 2 non-trivial SCCs.

----------------------------------------

(43)
Complex Obligation (AND)

----------------------------------------

(44)
Obligation:
Rules:
f_1850(x:0, sum~cons_1~x5:0, x2:0, x3:0, x4:0) -> f_1850(x:0, x5:0, x2:0, x3:0, x6:0) :|: x5:0 > 0 && x4:0 > 0 && sum~cons_1~x5:0 = 1 + x5:0
f_1850(v45377:0:0, sum~cons_1~v49023:0:0, v45381:0:0, v45382:0:0, v48177:0:0) -> f_1850(v45377:0:0, v49023:0:0, v45381:0:0, v45382:0:0, v48177:1:0) :|: v49023:0:0 > 0 && v48177:0:0 < 0 && sum~cons_1~v49023:0:0 = 1 + v49023:0:0

----------------------------------------

(45) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(46)
Obligation:
Rules:
f_1850(x:0:0, sum~cons_1~x5:0:0, x2:0:0, x3:0:0, x4:0:0) -> f_1850(x:0:0, x5:0:0, x2:0:0, x3:0:0, x6:0:0) :|: x5:0:0 > 0 && x4:0:0 > 0 && sum~cons_1~x5:0:0 = 1 + x5:0:0
f_1850(v45377:0:0:0, sum~cons_1~v49023:0:0:0, v45381:0:0:0, v45382:0:0:0, v48177:0:0:0) -> f_1850(v45377:0:0:0, v49023:0:0:0, v45381:0:0:0, v45382:0:0:0, v48177:1:0:0) :|: v49023:0:0:0 > 0 && v48177:0:0:0 < 0 && sum~cons_1~v49023:0:0:0 = 1 + v49023:0:0:0

----------------------------------------

(47) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1850(x1, x2, x3, x4, x5) -> f_1850(x2, x5)

----------------------------------------

(48)
Obligation:
Rules:
f_1850(sum~cons_1~x5:0:0, x4:0:0) -> f_1850(x5:0:0, x6:0:0) :|: x5:0:0 > 0 && x4:0:0 > 0 && sum~cons_1~x5:0:0 = 1 + x5:0:0
f_1850(sum~cons_1~v49023:0:0:0, v48177:0:0:0) -> f_1850(v49023:0:0:0, v48177:1:0:0) :|: v49023:0:0:0 > 0 && v48177:0:0:0 < 0 && sum~cons_1~v49023:0:0:0 = 1 + v49023:0:0:0

----------------------------------------

(49) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1850 ] = f_1850_1

The following rules are decreasing:
f_1850(sum~cons_1~x5:0:0, x4:0:0) -> f_1850(x5:0:0, x6:0:0) :|: x5:0:0 > 0 && x4:0:0 > 0 && sum~cons_1~x5:0:0 = 1 + x5:0:0
f_1850(sum~cons_1~v49023:0:0:0, v48177:0:0:0) -> f_1850(v49023:0:0:0, v48177:1:0:0) :|: v49023:0:0:0 > 0 && v48177:0:0:0 < 0 && sum~cons_1~v49023:0:0:0 = 1 + v49023:0:0:0

The following rules are bounded:
f_1850(sum~cons_1~x5:0:0, x4:0:0) -> f_1850(x5:0:0, x6:0:0) :|: x5:0:0 > 0 && x4:0:0 > 0 && sum~cons_1~x5:0:0 = 1 + x5:0:0
f_1850(sum~cons_1~v49023:0:0:0, v48177:0:0:0) -> f_1850(v49023:0:0:0, v48177:1:0:0) :|: v49023:0:0:0 > 0 && v48177:0:0:0 < 0 && sum~cons_1~v49023:0:0:0 = 1 + v49023:0:0:0


----------------------------------------

(50)
YES

----------------------------------------

(51)
Obligation:
Rules:
f_1755(x75:0, sum~cons_1~x80:0, x77:0, x78:0, x79:0) -> f_1374(x75:0, 1 + x80:0, x77:0, x78:0, x80:0) :|: x79:0 > 0 && x80:0 > -1 && sum~cons_1~x80:0 = 1 + x80:0
f_1780(x, x1, x2, x3, x4) -> f_1755(x, x5, x2, x6, x7) :|: x6 > 0 && x5 > 0 && x3 = 1 + x6 && x4 = 0
f_1755(x22, x23, x24, x25, x26) -> f_1780(x22, x23, x24, x25, x27) :|: TRUE && x26 = 0
f_1374(v24548:0:0, v24550:0:0, v24552:0:0, v24553:0:0, v24560:0:0) -> f_1780(v24548:0:0, v24560:0:0, v24552:0:0, v24553:0:0, v44899:0:0) :|: v24560:0:0 > 0 && v24550:0:0 > 1
f_1755(v37345:0:0, sum~cons_1~v45094:0:0, v37349:0:0, v37356:0:0, v43950:0:0) -> f_1374(v37345:0:0, 1 + v45094:0:0, v37349:0:0, v37356:0:0, v45094:0:0) :|: v43950:0:0 < 0 && v45094:0:0 > -1 && sum~cons_1~v45094:0:0 = 1 + v45094:0:0
f_1374(x81:0, x82:0, x83:0, x84:0, sum~cons_1~x86:0) -> f_1374(x81:0, 1 + x86:0, x83:0, x84:0, x86:0) :|: x82:0 > 1 && x86:0 > -1 && sum~cons_1~x86:0 = 1 + x86:0

----------------------------------------

(52) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(53)
Obligation:
Rules:
f_1374(v24548:0:0:0, v24550:0:0:0, v24552:0:0:0, v24553:0:0:0, v24560:0:0:0) -> f_1780(v24548:0:0:0, v24560:0:0:0, v24552:0:0:0, v24553:0:0:0, v44899:0:0:0) :|: v24560:0:0:0 > 0 && v24550:0:0:0 > 1
f_1780(x:0, x1:0, x2:0, sum~cons_1~x6:0, cons_0) -> f_1374(x:0, 1 + x80:0:0, x2:0, x6:0, x80:0:0) :|: x7:0 > 0 && x80:0:0 > -1 && x6:0 > 0 && sum~cons_1~x6:0 = 1 + x6:0 && cons_0 = 0
f_1374(x81:0:0, x82:0:0, x83:0:0, x84:0:0, sum~cons_1~x86:0:0) -> f_1374(x81:0:0, 1 + x86:0:0, x83:0:0, x84:0:0, x86:0:0) :|: x82:0:0 > 1 && x86:0:0 > -1 && sum~cons_1~x86:0:0 = 1 + x86:0:0
f_1780(x, x1, x2, x3, x4) -> f_1780(x, x5, x2, x6, x7) :|: x6 > 0 && x5 > 0 && x3 = 1 + x6 && x4 = 0
f_1780(x8, x9, x10, x11, x12) -> f_1374(x8, 1 + x13, x10, x14, x13) :|: x15 < 0 && x13 > -1 && x14 > 0 && x11 = 1 + x14 && x12 = 0

----------------------------------------

(54) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1374(x1, x2, x3, x4, x5) -> f_1374(x2, x4, x5)
   f_1780(x1, x2, x3, x4, x5) -> f_1780(x4, x5)

----------------------------------------

(55)
Obligation:
Rules:
f_1374(v24550:0:0:0, v24553:0:0:0, v24560:0:0:0) -> f_1780(v24553:0:0:0, v44899:0:0:0) :|: v24560:0:0:0 > 0 && v24550:0:0:0 > 1
f_1780(sum~cons_1~x6:0, cons_0) -> f_1374(1 + x80:0:0, x6:0, x80:0:0) :|: x7:0 > 0 && x80:0:0 > -1 && x6:0 > 0 && sum~cons_1~x6:0 = 1 + x6:0 && cons_0 = 0
f_1374(x82:0:0, x84:0:0, sum~cons_1~x86:0:0) -> f_1374(1 + x86:0:0, x84:0:0, x86:0:0) :|: x82:0:0 > 1 && x86:0:0 > -1 && sum~cons_1~x86:0:0 = 1 + x86:0:0
f_1780(x3, x4) -> f_1780(x6, x7) :|: x6 > 0 && x5 > 0 && x3 = 1 + x6 && x4 = 0
f_1780(x11, x12) -> f_1374(1 + x13, x14, x13) :|: x15 < 0 && x13 > -1 && x14 > 0 && x11 = 1 + x14 && x12 = 0

----------------------------------------

(56) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1374 ] = 2*f_1374_2 + 1
[ f_1780 ] = 2*f_1780_1

The following rules are decreasing:
f_1374(v24550:0:0:0, v24553:0:0:0, v24560:0:0:0) -> f_1780(v24553:0:0:0, v44899:0:0:0) :|: v24560:0:0:0 > 0 && v24550:0:0:0 > 1
f_1780(sum~cons_1~x6:0, cons_0) -> f_1374(1 + x80:0:0, x6:0, x80:0:0) :|: x7:0 > 0 && x80:0:0 > -1 && x6:0 > 0 && sum~cons_1~x6:0 = 1 + x6:0 && cons_0 = 0
f_1780(x3, x4) -> f_1780(x6, x7) :|: x6 > 0 && x5 > 0 && x3 = 1 + x6 && x4 = 0
f_1780(x11, x12) -> f_1374(1 + x13, x14, x13) :|: x15 < 0 && x13 > -1 && x14 > 0 && x11 = 1 + x14 && x12 = 0

The following rules are bounded:
f_1780(sum~cons_1~x6:0, cons_0) -> f_1374(1 + x80:0:0, x6:0, x80:0:0) :|: x7:0 > 0 && x80:0:0 > -1 && x6:0 > 0 && sum~cons_1~x6:0 = 1 + x6:0 && cons_0 = 0
f_1780(x3, x4) -> f_1780(x6, x7) :|: x6 > 0 && x5 > 0 && x3 = 1 + x6 && x4 = 0


----------------------------------------

(57)
Obligation:
Rules:
f_1374(v24550:0:0:0, v24553:0:0:0, v24560:0:0:0) -> f_1780(v24553:0:0:0, v44899:0:0:0) :|: v24560:0:0:0 > 0 && v24550:0:0:0 > 1
f_1374(x82:0:0, x84:0:0, sum~cons_1~x86:0:0) -> f_1374(1 + x86:0:0, x84:0:0, x86:0:0) :|: x82:0:0 > 1 && x86:0:0 > -1 && sum~cons_1~x86:0:0 = 1 + x86:0:0
f_1780(x11, x12) -> f_1374(1 + x13, x14, x13) :|: x15 < 0 && x13 > -1 && x14 > 0 && x11 = 1 + x14 && x12 = 0

----------------------------------------

(58) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(59)
Obligation:
Rules:
f_1374(x82:0:0:0, x84:0:0:0, sum~cons_1~x86:0:0:0) -> f_1374(1 + x86:0:0:0, x84:0:0:0, x86:0:0:0) :|: x82:0:0:0 > 1 && x86:0:0:0 > -1 && sum~cons_1~x86:0:0:0 = 1 + x86:0:0:0
f_1374(v24550:0:0:0:0, sum~cons_1~x14:0, v24560:0:0:0:0) -> f_1374(1 + x13:0, x14:0, x13:0) :|: v24550:0:0:0:0 > 1 && v24560:0:0:0:0 > 0 && x14:0 > 0 && x13:0 > -1 && x15:0 < 0 && sum~cons_1~x14:0 = 1 + x14:0

----------------------------------------

(60) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1374 ] = 2*f_1374_2

The following rules are decreasing:
f_1374(v24550:0:0:0:0, sum~cons_1~x14:0, v24560:0:0:0:0) -> f_1374(1 + x13:0, x14:0, x13:0) :|: v24550:0:0:0:0 > 1 && v24560:0:0:0:0 > 0 && x14:0 > 0 && x13:0 > -1 && x15:0 < 0 && sum~cons_1~x14:0 = 1 + x14:0

The following rules are bounded:
f_1374(v24550:0:0:0:0, sum~cons_1~x14:0, v24560:0:0:0:0) -> f_1374(1 + x13:0, x14:0, x13:0) :|: v24550:0:0:0:0 > 1 && v24560:0:0:0:0 > 0 && x14:0 > 0 && x13:0 > -1 && x15:0 < 0 && sum~cons_1~x14:0 = 1 + x14:0


----------------------------------------

(61)
Obligation:
Rules:
f_1374(x82:0:0:0, x84:0:0:0, sum~cons_1~x86:0:0:0) -> f_1374(1 + x86:0:0:0, x84:0:0:0, x86:0:0:0) :|: x82:0:0:0 > 1 && x86:0:0:0 > -1 && sum~cons_1~x86:0:0:0 = 1 + x86:0:0:0

----------------------------------------

(62) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(63)
Obligation:
Rules:
f_1374(x82:0:0:0:0, x84:0:0:0:0, sum~cons_1~x86:0:0:0:0) -> f_1374(1 + x86:0:0:0:0, x84:0:0:0:0, x86:0:0:0:0) :|: x82:0:0:0:0 > 1 && x86:0:0:0:0 > -1 && sum~cons_1~x86:0:0:0:0 = 1 + x86:0:0:0:0

----------------------------------------

(64) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1374(x1, x2, x3) -> f_1374(x1, x3)

----------------------------------------

(65)
Obligation:
Rules:
f_1374(x82:0:0:0:0, sum~cons_1~x86:0:0:0:0) -> f_1374(1 + x86:0:0:0:0, x86:0:0:0:0) :|: x82:0:0:0:0 > 1 && x86:0:0:0:0 > -1 && sum~cons_1~x86:0:0:0:0 = 1 + x86:0:0:0:0

----------------------------------------

(66) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1374(x, x1)] = x1

The following rules are decreasing:
f_1374(x82:0:0:0:0, sum~cons_1~x86:0:0:0:0) -> f_1374(1 + x86:0:0:0:0, x86:0:0:0:0) :|: x82:0:0:0:0 > 1 && x86:0:0:0:0 > -1 && sum~cons_1~x86:0:0:0:0 = 1 + x86:0:0:0:0
The following rules are bounded:
f_1374(x82:0:0:0:0, sum~cons_1~x86:0:0:0:0) -> f_1374(1 + x86:0:0:0:0, x86:0:0:0:0) :|: x82:0:0:0:0 > 1 && x86:0:0:0:0 > -1 && sum~cons_1~x86:0:0:0:0 = 1 + x86:0:0:0:0

----------------------------------------

(67)
YES

----------------------------------------

(68)
Obligation:
SCC
----------------------------------------

(69) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 60 rulesP rules:
f_1182(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17880, 1, v17882, v17883, 0, v17885, v17886, v17887, v17888, v17889, v17890, v17891, 3, 2, 4) -> f_1195(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, v17883, 0, v17885, v17886, v17880, v17888, v17889, v17890, v17891, 3, 2, 4) :|: 0 = 0
f_1195(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, v17883, 0, v17885, v17886, v17880, v17888, v17889, v17890, v17891, 3, 2, 4) -> f_1207(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, v17883, 0, v17885, v17886, v17880, v17888, v17889, v17890, v17891, 3, 2, 4) :|: 0 < v17887 && 2 <= v17880 && 2 <= v17886
f_1207(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, v17883, 0, v17885, v17886, v17880, v17888, v17889, v17890, v17891, 3, 2, 4) -> f_1220(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, v17883, 0, v17885, v17886, v17880, v17888, v17889, v17890, v17891, 3, 2, 4) :|: 0 = 0
f_1220(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, v17883, 0, v17885, v17886, v17880, v17888, v17889, v17890, v17891, 3, 2, 4) -> f_1231(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, v17883, 0, v17885, v17886, v17880, v17888, v17889, v17890, v17891, 3, 2, 4) :|: TRUE
f_1231(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, v17883, 0, v17885, v17886, v17880, v17888, v17889, v17890, v17891, 3, 2, 4) -> f_1245(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, v17883, 0, v17885, v17886, v17880, v17888, v17889, v17890, v17891, 3, 2, 4) :|: 0 = 0
f_1245(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, v17883, 0, v17885, v17886, v17880, v17888, v17889, v17890, v17891, 3, 2, 4) -> f_1259(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, v17883, 0, v17885, v17886, v17880, v17888, v17889, v17890, v17891, 3, 2, 4) :|: 0 = 0
f_1259(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, v17883, 0, v17885, v17886, v17880, v17888, v17889, v17890, v17891, 3, 2, 4) -> f_1271(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, v17883, 0, v17885, v17886, v17880, v17888, v17889, v17890, v17891, 3, 2, 4) :|: TRUE
f_1271(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, v17883, 0, v17885, v17886, v17880, v17888, v17889, v17890, v17891, 3, 2, 4) -> f_1280(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, v17883, 0, v17885, v17886, v17880, v17888, v17889, v17890, v17891, 3, 2, 4) :|: 0 = 0
f_1280(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, v17883, 0, v17885, v17886, v17880, v17888, v17889, v17890, v17891, 3, 2, 4) -> f_1288(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, v17883, 0, v17885, v17886, v17880, v17888, v17889, v17890, v17891, 3, 2, 4) :|: 0 = 0
f_1288(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, v17883, 0, v17885, v17886, v17880, v17888, v17889, v17890, v17891, 3, 2, 4) -> f_1298(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, v17883, 0, v17885, v17886, v17880, v17888, v17889, v17890, v17891, 3, 2, 4) :|: 0 = 0
f_1298(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, v17883, 0, v17885, v17886, v17880, v17888, v17889, v17890, v17891, 3, 2, 4) -> f_1309(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, v17883, 0, v17885, v17886, v17880, v17888, v17889, v17890, v17891, 3, 2, 4) :|: TRUE
f_1309(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, v17883, 0, v17885, v17886, v17880, v17888, v17889, v17890, v17891, 3, 2, 4) -> f_1318(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, v23891, 0, v17885, v17886, v17880, v17888, v17889, v17890, v17891, 3, 2, 4) :|: TRUE
f_1318(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, v23891, 0, v17885, v17886, v17880, v17888, v17889, v17890, v17891, 3, 2, 4) -> f_1328(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, v23891, 0, v17885, v17886, v17880, v17888, v17889, v17890, v17891, 3, 2, 4) :|: v23891 != 0
f_1318(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, v23891, 0, v17885, v17886, v17880, v17888, v17889, v17890, v17891, 3, 2, 4) -> f_1329(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, 0, v17885, v17886, v17880, v17888, v17889, v17890, v17891, 3, 2, 4) :|: v23891 = 0
f_1328(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, v23891, 0, v17885, v17886, v17880, v17888, v17889, v17890, v17891, 3, 2, 4) -> f_1342(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, v23891, 0, v17885, v17886, v17880, v17888, v17889, v17890, v17891, 3, 2, 4) :|: 0 = 0
f_1342(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, v23891, 0, v17885, v17886, v17880, v17888, v17889, v17890, v17891, 3, 2, 4) -> f_1356(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, v23891, 0, v17885, v17886, v17880, v17888, v17889, v17890, v17891, 3, 2, 4) :|: TRUE
f_1356(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, v23891, 0, v17885, v17886, v17880, v17888, v17889, v17890, v17891, 3, 2, 4) -> f_1660(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, v23891, 0, v17885, v17886, v17880, v17887, v17888, v17889, v17890, v17891, 3, 2, 4) :|: TRUE
f_1660(v37831, v37832, v37833, v37834, v37835, v37836, v37837, v37838, 1, v37840, v37841, 0, v37843, v37844, v37845, v37846, v37847, v37848, v37849, v37850, 3, 2, 4) -> f_1669(v37831, v37832, v37833, v37834, v37835, v37836, v37837, v37838, 1, v37840, v37841, 0, v37843, v37844, v37846, v37847, v37848, v37849, v37850, 3, 2, 4) :|: 0 = 0
f_1669(v37831, v37832, v37833, v37834, v37835, v37836, v37837, v37838, 1, v37840, v37841, 0, v37843, v37844, v37846, v37847, v37848, v37849, v37850, 3, 2, 4) -> f_1674(v37831, v37832, v37833, v37834, v37835, v37836, v37837, v37838, 1, v37840, v37841, 0, v37843, v37844, v38758, v37847, v37848, v37849, v37850, 3, 2, 4) :|: 1 + v38758 = v37838 && 0 <= v38758
f_1674(v37831, v37832, v37833, v37834, v37835, v37836, v37837, v37838, 1, v37840, v37841, 0, v37843, v37844, v38758, v37847, v37848, v37849, v37850, 3, 2, 4) -> f_1681(v37831, v37832, v37833, v37834, v37835, v37836, v37837, v37838, 1, v37840, v37841, 0, v37843, v37844, v38758, v37847, v37848, v37849, v37850, 3, 2, 4) :|: TRUE
f_1681(v37831, v37832, v37833, v37834, v37835, v37836, v37837, v37838, 1, v37840, v37841, 0, v37843, v37844, v38758, v37847, v37848, v37849, v37850, 3, 2, 4) -> f_1688(v37831, v37832, v37833, v37834, v37835, v37836, v37837, v37838, 1, v37840, v37841, 0, v37843, v37844, v38758, v37847, v37848, v37849, v37850, 3, 2, 4) :|: TRUE
f_1688(v37831, v37832, v37833, v37834, v37835, v37836, v37837, v37838, 1, v37840, v37841, 0, v37843, v37844, v38758, v37847, v37848, v37849, v37850, 3, 2, 4) -> f_1172(v37831, v37832, v37833, v37834, v37835, v37836, v37837, v37838, 1, v37840, v37841, 0, v37843, v37844, v38758, v37847, v37848, v37849, v37850, 3, 2, 4) :|: TRUE
f_1172(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17880, 1, v17882, v17883, 0, v17885, v17886, v17887, v17888, v17889, v17890, v17891, 3, 2, 4) -> f_1182(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17880, 1, v17882, v17883, 0, v17885, v17886, v17887, v17888, v17889, v17890, v17891, 3, 2, 4) :|: TRUE
f_1329(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, 0, v17885, v17886, v17880, v17888, v17889, v17890, v17891, 3, 2, 4) -> f_1343(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, 0, v17885, v17886, v17880, v17888, v17889, v17890, v17891, 3, 2, 4) :|: 0 = 0
f_1343(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, 0, v17885, v17886, v17880, v17888, v17889, v17890, v17891, 3, 2, 4) -> f_1357(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, 0, v17885, v17886, v17880, v17888, v17889, v17890, v17891, 3, 2, 4) :|: TRUE
f_1357(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, 0, v17885, v17886, v17880, v17888, v17889, v17890, v17891, 3, 2, 4) -> f_1662(v17873, v17874, v17875, v17876, v17877, v17878, v17879, v17887, 1, v17882, 0, v17885, v17886, v17880, v17887, v17888, v17889, v17890, v17891, 3, 2, 4) :|: TRUE
f_1662(v37953, v37954, v37955, v37956, v37957, v37958, v37959, v37960, 1, v37962, 0, v37964, v37965, v37966, v37967, v37968, v37969, v37970, v37971, 3, 2, 4) -> f_1670(v37953, v37954, v37955, v37956, v37957, v37958, v37959, v37960, 1, v37962, 0, v38757, v37964, v37965, v37966, v37967, v37968, v37969, v37970, v37971, 3, 2, 4) :|: TRUE
f_1670(v37953, v37954, v37955, v37956, v37957, v37958, v37959, v37960, 1, v37962, 0, v38757, v37964, v37965, v37966, v37967, v37968, v37969, v37970, v37971, 3, 2, 4) -> f_1676(v37953, v37954, v37955, v37956, v37957, v37958, v37959, v37960, 1, v37962, 0, v37964, v37965, v37966, v37967, v37968, v37969, v37970, v37971, 3, 2, 4) :|: v38757 = 0
f_1676(v37953, v37954, v37955, v37956, v37957, v37958, v37959, v37960, 1, v37962, 0, v37964, v37965, v37966, v37967, v37968, v37969, v37970, v37971, 3, 2, 4) -> f_1683(v37953, v37954, v37955, v37956, v37957, v37958, v37959, v37960, 1, v37962, 0, v37964, v37965, v37966, v37967, v37968, v37969, v37970, v37971, 3, 2, 4) :|: 0 = 0
f_1683(v37953, v37954, v37955, v37956, v37957, v37958, v37959, v37960, 1, v37962, 0, v37964, v37965, v37966, v37967, v37968, v37969, v37970, v37971, 3, 2, 4) -> f_1690(v37953, v37954, v37955, v37956, v37957, v37958, v37959, v37960, 1, v37962, 0, v37964, v37965, v37966, v37967, v37968, v37969, v37970, v37971, 3, 2, 4) :|: TRUE
f_1690(v37953, v37954, v37955, v37956, v37957, v37958, v37959, v37960, 1, v37962, 0, v37964, v37965, v37966, v37967, v37968, v37969, v37970, v37971, 3, 2, 4) -> f_1696(v37953, v37954, v37955, v37956, v37957, v37958, v37959, v37960, 1, v37962, 0, v37965, v37966, v37967, v37968, v37969, v37970, v37971, 3, 2, 4) :|: 0 = 0
f_1696(v37953, v37954, v37955, v37956, v37957, v37958, v37959, v37960, 1, v37962, 0, v37965, v37966, v37967, v37968, v37969, v37970, v37971, 3, 2, 4) -> f_1703(v37953, v37954, v37955, v37956, v37957, v37958, v37959, v37960, 1, v37962, 0, v40119, v37965, v37966, v37967, v37968, v37969, v37970, v37971, 3, 2, 4) :|: 1 + v40119 = v37962 && 0 <= v40119
f_1703(v37953, v37954, v37955, v37956, v37957, v37958, v37959, v37960, 1, v37962, 0, v40119, v37965, v37966, v37967, v37968, v37969, v37970, v37971, 3, 2, 4) -> f_1710(v37953, v37954, v37955, v37956, v37957, v37958, v37959, v37960, 1, v37962, 0, v40119, v37965, v37966, v37967, v37968, v37969, v37970, v37971, 3, 2, 4) :|: TRUE
f_1710(v37953, v37954, v37955, v37956, v37957, v37958, v37959, v37960, 1, v37962, 0, v40119, v37965, v37966, v37967, v37968, v37969, v37970, v37971, 3, 2, 4) -> f_1717(v37953, v37954, v37955, v37956, v37957, v37958, v37959, v37960, 1, v37962, 0, v40119, v40806, v37966, v37967, v37968, v37969, v37970, v37971, 3, 2, 4) :|: TRUE
f_1717(v37953, v37954, v37955, v37956, v37957, v37958, v37959, v37960, 1, v37962, 0, v40119, v40806, v37966, v37967, v37968, v37969, v37970, v37971, 3, 2, 4) -> f_1724(v37953, v37954, v37955, v37956, v37957, v37958, v37959, v37960, 1, v37962, 0, v40119, v40806, v37966, v37967, v37968, v37969, v37970, v37971, 3, 2, 4) :|: TRUE
f_1724(v37953, v37954, v37955, v37956, v37957, v37958, v37959, v37960, 1, v37962, 0, v40119, v40806, v37966, v37967, v37968, v37969, v37970, v37971, 3, 2, 4) -> f_1732(v37953, v37954, v37955, v37956, v37957, v37958, v37959, v37960, 1, v37962, 0, v40119, v40806, v37966, v37967, v37968, v37969, v37970, v37971, 3, 2, 4) :|: TRUE
f_1732(v37953, v37954, v37955, v37956, v37957, v37958, v37959, v37960, 1, v37962, 0, v40119, v40806, v37966, v37967, v37968, v37969, v37970, v37971, 3, 2, 4) -> f_1472(v37953, v37954, v37955, v37956, v37957, v37958, v37959, v37960, 1, v37962, 0, v37966, v37967, v40119, v40806, v37968, v37969, v37970, v37971, 3, 2, 4) :|: TRUE
f_1472(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28042, 1, v28044, 0, v28046, v28047, v28048, v28049, v28050, v28051, v28052, v28053, 3, 2, 4) -> f_1479(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28042, 1, v28044, 0, v28046, v28047, v28048, v28049, v28050, v28051, v28052, v28053, 3, 2, 4) :|: TRUE
f_1479(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28042, 1, v28044, 0, v28046, v28047, v28048, v28049, v28050, v28051, v28052, v28053, 3, 2, 4) -> f_1486(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28042, 1, v28044, 0, v28046, v28047, v28048, v28049, v28050, v28051, v28052, v28053, 3, 2, 4) :|: TRUE
f_1486(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28042, 1, v28044, 0, v28046, v28047, v28048, v28049, v28050, v28051, v28052, v28053, 3, 2, 4) -> f_1494(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28044, 0, v28046, v28047, v28048, v28050, v28051, v28052, v28053, 3, 2, 4) :|: 0 = 0
f_1494(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28044, 0, v28046, v28047, v28048, v28050, v28051, v28052, v28053, 3, 2, 4) -> f_1502(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28044, 0, v28046, v28047, v28048, v28050, v28051, v28052, v28053, 3, 2, 4) :|: 0 < v28049
f_1502(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28044, 0, v28046, v28047, v28048, v28050, v28051, v28052, v28053, 3, 2, 4) -> f_1512(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28044, 0, v28046, v28047, v28048, v28050, v28051, v28052, v28053, 3, 2, 4) :|: 0 = 0
f_1512(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28044, 0, v28046, v28047, v28048, v28050, v28051, v28052, v28053, 3, 2, 4) -> f_1522(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28044, 0, v28046, v28047, v28048, v28050, v28051, v28052, v28053, 3, 2, 4) :|: TRUE
f_1522(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28044, 0, v28046, v28047, v28048, v28050, v28051, v28052, v28053, 3, 2, 4) -> f_1532(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28044, 0, v28046, v28047, v28048, v28050, v28051, v28052, v28053, 3, 2, 4) :|: 0 = 0
f_1532(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28044, 0, v28046, v28047, v28048, v28050, v28051, v28052, v28053, 3, 2, 4) -> f_1544(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28044, 0, v28046, v28047, v28048, v28050, v28051, v28052, v28053, 3, 2, 4) :|: 0 = 0
f_1544(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28044, 0, v28046, v28047, v28048, v28050, v28051, v28052, v28053, 3, 2, 4) -> f_1557(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28044, 0, v28046, v28047, v28048, v28050, v28051, v28052, v28053, 3, 2, 4) :|: TRUE
f_1557(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28044, 0, v28046, v28047, v28048, v28050, v28051, v28052, v28053, 3, 2, 4) -> f_1570(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28048, 0, v28046, v28047, v28044, v28050, v28051, v28052, v28053, 3, 2, 4) :|: 0 = 0
f_1570(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28048, 0, v28046, v28047, v28044, v28050, v28051, v28052, v28053, 3, 2, 4) -> f_1582(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28048, 0, v28046, v28047, v28044, v28050, v28051, v28052, v28053, 3, 2, 4) :|: 0 < v28048 && 2 <= v28044 && 2 <= v28041
f_1582(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28048, 0, v28046, v28047, v28044, v28050, v28051, v28052, v28053, 3, 2, 4) -> f_1593(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28048, 0, v28046, v28047, v28044, v28050, v28051, v28052, v28053, 3, 2, 4) :|: 0 = 0
f_1593(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28048, 0, v28046, v28047, v28044, v28050, v28051, v28052, v28053, 3, 2, 4) -> f_1605(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28048, 0, v28046, v28047, v28044, v28050, v28051, v28052, v28053, 3, 2, 4) :|: 0 = 0
f_1605(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28048, 0, v28046, v28047, v28044, v28050, v28051, v28052, v28053, 3, 2, 4) -> f_1618(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28048, 0, v28046, v28047, v28044, v28050, v28051, v28052, v28053, 3, 2, 4) :|: TRUE
f_1618(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28048, 0, v28046, v28047, v28044, v28050, v28051, v28052, v28053, 3, 2, 4) -> f_1629(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28048, v36552, 0, v28046, v28047, v28044, v28050, v28051, v28052, v28053, 3, 2, 4) :|: TRUE
f_1629(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28048, v36552, 0, v28046, v28047, v28044, v28050, v28051, v28052, v28053, 3, 2, 4) -> f_1640(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28048, v36552, 0, v28046, v28047, v28044, v28050, v28051, v28052, v28053, 3, 2, 4) :|: v36552 != 0
f_1629(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28048, v36552, 0, v28046, v28047, v28044, v28050, v28051, v28052, v28053, 3, 2, 4) -> f_1641(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28048, 0, v28046, v28047, v28044, v28050, v28051, v28052, v28053, 3, 2, 4) :|: v36552 = 0
f_1640(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28048, v36552, 0, v28046, v28047, v28044, v28050, v28051, v28052, v28053, 3, 2, 4) -> f_1651(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28048, v36552, v28046, v28047, 0, v28044, v28050, v28051, v28052, v28053, 3, 2, 4) :|: 0 = 0
f_1651(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28048, v36552, v28046, v28047, 0, v28044, v28050, v28051, v28052, v28053, 3, 2, 4) -> f_1659(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28048, v36552, v28046, v28047, 0, v28044, v28050, v28051, v28052, v28053, 3, 2, 4) :|: TRUE
f_1659(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28048, v36552, v28046, v28047, 0, v28044, v28050, v28051, v28052, v28053, 3, 2, 4) -> f_1660(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28048, v36552, 0, v28044, v28049, v28046, v28047, v28050, v28051, v28052, v28053, 3, 2, 4) :|: TRUE
f_1641(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28048, 0, v28046, v28047, v28044, v28050, v28051, v28052, v28053, 3, 2, 4) -> f_1652(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28048, 0, v28046, v28047, v28044, v28050, v28051, v28052, v28053, 3, 2, 4) :|: 0 = 0
f_1652(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28048, 0, v28046, v28047, v28044, v28050, v28051, v28052, v28053, 3, 2, 4) -> f_1661(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28048, 0, v28046, v28047, v28044, v28050, v28051, v28052, v28053, 3, 2, 4) :|: TRUE
f_1661(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28048, 0, v28046, v28047, v28044, v28050, v28051, v28052, v28053, 3, 2, 4) -> f_1662(v28035, v28036, v28037, v28038, v28039, v28040, v28041, v28049, 1, v28048, 0, v28044, v28049, v28046, v28047, v28050, v28051, v28052, v28053, 3, 2, 4) :|: TRUE
Combined rules. Obtained 6 rulesP rules:
f_1182(v17873:0, v17874:0, v17875:0, v17876:0, v17877:0, v17878:0, v17879:0, v17880:0, 1, v17882:0, v17883:0, 0, v17885:0, v17886:0, 1 + v38758:0, v17888:0, v17889:0, v17890:0, v17891:0, 3, 2, 4) -> f_1182(v17873:0, v17874:0, v17875:0, v17876:0, v17877:0, v17878:0, v17879:0, 1 + v38758:0, 1, v17882:0, v23891:0, 0, v17885:0, v17886:0, v38758:0, v17888:0, v17889:0, v17890:0, v17891:0, 3, 2, 4) :|: v17880:0 > 1 && v38758:0 > -1 && v17886:0 > 1 && v23891:0 < 0
f_1182(v17873:0, v17874:0, v17875:0, v17876:0, v17877:0, v17878:0, v17879:0, v17880:0, 1, v17882:0, v17883:0, 0, v17885:0, v17886:0, 1 + v38758:0, v17888:0, v17889:0, v17890:0, v17891:0, 3, 2, 4) -> f_1182(v17873:0, v17874:0, v17875:0, v17876:0, v17877:0, v17878:0, v17879:0, 1 + v38758:0, 1, v17882:0, v23891:0, 0, v17885:0, v17886:0, v38758:0, v17888:0, v17889:0, v17890:0, v17891:0, 3, 2, 4) :|: v17880:0 > 1 && v38758:0 > -1 && v17886:0 > 1 && v23891:0 > 0
f_1629(v28035:0, v28036:0, v28037:0, v28038:0, v28039:0, v28040:0, v28041:0, v28049:0, 1, 1 + v40119:0, 0, 0, v28046:0, v28047:0, v28044:0, v28050:0, v28051:0, v28052:0, v28053:0, 3, 2, 4) -> f_1629(v28035:0, v28036:0, v28037:0, v28038:0, v28039:0, v28040:0, v28041:0, v40806:0, 1, v40119:0, v36552:1, 0, v28046:0, v28047:0, 1 + v40119:0, v28050:0, v28051:0, v28052:0, v28053:0, 3, 2, 4) :|: v40119:0 > 0 && v40806:0 > 0 && v28041:0 > 1
f_1182(v17873:0, v17874:0, v17875:0, v17876:0, v17877:0, v17878:0, v17879:0, v17880:0, 1, 1 + v40119:0, v17883:0, 0, v17885:0, v17886:0, v17887:0, v17888:0, v17889:0, v17890:0, v17891:0, 3, 2, 4) -> f_1629(v17873:0, v17874:0, v17875:0, v17876:0, v17877:0, v17878:0, v17879:0, v40806:0, 1, v40119:0, v36552:0, 0, v17880:0, v17887:0, 1 + v40119:0, v17888:0, v17889:0, v17890:0, v17891:0, 3, 2, 4) :|: v40119:0 > 0 && v17880:0 > 1 && v17887:0 > 0 && v17886:0 > 1 && v40806:0 > 0 && v17879:0 > 1
f_1629(v28035:0, v28036:0, v28037:0, v28038:0, v28039:0, v28040:0, v28041:0, 1 + v38758:0, 1, v28048:0, v36552:0, 0, v28046:0, v28047:0, v28044:0, v28050:0, v28051:0, v28052:0, v28053:0, 3, 2, 4) -> f_1182(v28035:0, v28036:0, v28037:0, v28038:0, v28039:0, v28040:0, v28041:0, 1 + v38758:0, 1, v28048:0, v36552:0, 0, v28044:0, 1 + v38758:0, v38758:0, v28050:0, v28051:0, v28052:0, v28053:0, 3, 2, 4) :|: v36552:0 < 0 && v38758:0 > -1
f_1629(v28035:0, v28036:0, v28037:0, v28038:0, v28039:0, v28040:0, v28041:0, 1 + v38758:0, 1, v28048:0, v36552:0, 0, v28046:0, v28047:0, v28044:0, v28050:0, v28051:0, v28052:0, v28053:0, 3, 2, 4) -> f_1182(v28035:0, v28036:0, v28037:0, v28038:0, v28039:0, v28040:0, v28041:0, 1 + v38758:0, 1, v28048:0, v36552:0, 0, v28044:0, 1 + v38758:0, v38758:0, v28050:0, v28051:0, v28052:0, v28053:0, 3, 2, 4) :|: v36552:0 > 0 && v38758:0 > -1
Filtered unneeded arguments:
   f_1182(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22) -> f_1182(x7, x8, x10, x14, x15)
   f_1629(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22) -> f_1629(x7, x8, x10, x11)
Removed division, modulo operations, cleaned up constraints. Obtained 5 rules.P rules:
f_1182(v17879:0, v17880:0, v17882:0, v17886:0, sum~cons_1~v38758:0) -> f_1182(v17879:0, 1 + v38758:0, v17882:0, v17886:0, v38758:0) :|: v38758:0 > -1 && v17886:0 > 1 && v17880:0 > 1 && sum~cons_1~v38758:0 = 1 + v38758:0
f_1629(v28041:0, v28049:0, sum~cons_1~v40119:0, cons_0) -> f_1629(v28041:0, v40806:0, v40119:0, v36552:1) :|: v40806:0 > 0 && v28041:0 > 1 && v40119:0 > 0 && sum~cons_1~v40119:0 = 1 + v40119:0 && cons_0 = 0
f_1182(v17879:0, v17880:0, sum~cons_1~v40119:0, v17886:0, v17887:0) -> f_1629(v17879:0, v40806:0, v40119:0, v36552:0) :|: v17880:0 > 1 && v40119:0 > 0 && v17887:0 > 0 && v17886:0 > 1 && v17879:0 > 1 && v40806:0 > 0 && sum~cons_1~v40119:0 = 1 + v40119:0
f_1629(v28041:0, sum~cons_1~v38758:0, v28048:0, v36552:0) -> f_1182(v28041:0, 1 + v38758:0, v28048:0, 1 + v38758:0, v38758:0) :|: v36552:0 < 0 && v38758:0 > -1 && sum~cons_1~v38758:0 = 1 + v38758:0
f_1629(v28041:0, sum~cons_1~v38758:0, v28048:0, v36552:0) -> f_1182(v28041:0, 1 + v38758:0, v28048:0, 1 + v38758:0, v38758:0) :|: v36552:0 > 0 && v38758:0 > -1 && sum~cons_1~v38758:0 = 1 + v38758:0

----------------------------------------

(70)
Obligation:
Rules:
f_1182(v17879:0, v17880:0, v17882:0, v17886:0, sum~cons_1~v38758:0) -> f_1182(v17879:0, 1 + v38758:0, v17882:0, v17886:0, v38758:0) :|: v38758:0 > -1 && v17886:0 > 1 && v17880:0 > 1 && sum~cons_1~v38758:0 = 1 + v38758:0
f_1629(v28041:0, v28049:0, sum~cons_1~v40119:0, cons_0) -> f_1629(v28041:0, v40806:0, v40119:0, v36552:1) :|: v40806:0 > 0 && v28041:0 > 1 && v40119:0 > 0 && sum~cons_1~v40119:0 = 1 + v40119:0 && cons_0 = 0
f_1182(x, x1, x2, x3, x4) -> f_1629(x, x5, x6, x7) :|: x1 > 1 && x6 > 0 && x4 > 0 && x3 > 1 && x > 1 && x5 > 0 && x2 = 1 + x6
f_1629(x8, x9, x10, x11) -> f_1182(x8, 1 + x12, x10, 1 + x12, x12) :|: x11 < 0 && x12 > -1 && x9 = 1 + x12
f_1629(x13, x14, x15, x16) -> f_1182(x13, 1 + x17, x15, 1 + x17, x17) :|: x16 > 0 && x17 > -1 && x14 = 1 + x17

----------------------------------------

(71) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(72)
Obligation:
Rules:
f_1182(v17879:0:0, v17880:0:0, v17882:0:0, v17886:0:0, sum~cons_1~v38758:0:0) -> f_1182(v17879:0:0, 1 + v38758:0:0, v17882:0:0, v17886:0:0, v38758:0:0) :|: v38758:0:0 > -1 && v17886:0:0 > 1 && v17880:0:0 > 1 && sum~cons_1~v38758:0:0 = 1 + v38758:0:0
f_1629(v28041:0:0, v28049:0:0, sum~cons_1~v40119:0:0, cons_0) -> f_1629(v28041:0:0, v40806:0:0, v40119:0:0, v36552:1:0) :|: v40806:0:0 > 0 && v28041:0:0 > 1 && v40119:0:0 > 0 && sum~cons_1~v40119:0:0 = 1 + v40119:0:0 && cons_0 = 0
f_1629(x13:0, sum~cons_1~x17:0, x15:0, x16:0) -> f_1182(x13:0, 1 + x17:0, x15:0, 1 + x17:0, x17:0) :|: x16:0 > 0 && x17:0 > -1 && sum~cons_1~x17:0 = 1 + x17:0
f_1182(x:0, x1:0, sum~cons_1~x6:0, x3:0, x4:0) -> f_1629(x:0, x5:0, x6:0, x7:0) :|: x:0 > 1 && x5:0 > 0 && x3:0 > 1 && x4:0 > 0 && x6:0 > 0 && x1:0 > 1 && sum~cons_1~x6:0 = 1 + x6:0
f_1629(x8:0, sum~cons_1~x12:0, x10:0, x11:0) -> f_1182(x8:0, 1 + x12:0, x10:0, 1 + x12:0, x12:0) :|: x11:0 < 0 && x12:0 > -1 && sum~cons_1~x12:0 = 1 + x12:0

----------------------------------------

(73) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1182(x, x1, x2, x3, x4)] = -7 + x + x*x2 + x2 + x2^2
[f_1629(x5, x6, x7, x8)] = -1 + x5 + x5*x7 + x7 + x7^2

The following rules are decreasing:
f_1629(v28041:0:0, v28049:0:0, sum~cons_1~v40119:0:0, cons_0) -> f_1629(v28041:0:0, v40806:0:0, v40119:0:0, v36552:1:0) :|: v40806:0:0 > 0 && v28041:0:0 > 1 && v40119:0:0 > 0 && sum~cons_1~v40119:0:0 = 1 + v40119:0:0 && cons_0 = 0
f_1629(x13:0, sum~cons_1~x17:0, x15:0, x16:0) -> f_1182(x13:0, 1 + x17:0, x15:0, 1 + x17:0, x17:0) :|: x16:0 > 0 && x17:0 > -1 && sum~cons_1~x17:0 = 1 + x17:0
f_1629(x8:0, sum~cons_1~x12:0, x10:0, x11:0) -> f_1182(x8:0, 1 + x12:0, x10:0, 1 + x12:0, x12:0) :|: x11:0 < 0 && x12:0 > -1 && sum~cons_1~x12:0 = 1 + x12:0
The following rules are bounded:
f_1629(v28041:0:0, v28049:0:0, sum~cons_1~v40119:0:0, cons_0) -> f_1629(v28041:0:0, v40806:0:0, v40119:0:0, v36552:1:0) :|: v40806:0:0 > 0 && v28041:0:0 > 1 && v40119:0:0 > 0 && sum~cons_1~v40119:0:0 = 1 + v40119:0:0 && cons_0 = 0
f_1182(x:0, x1:0, sum~cons_1~x6:0, x3:0, x4:0) -> f_1629(x:0, x5:0, x6:0, x7:0) :|: x:0 > 1 && x5:0 > 0 && x3:0 > 1 && x4:0 > 0 && x6:0 > 0 && x1:0 > 1 && sum~cons_1~x6:0 = 1 + x6:0

----------------------------------------

(74)
Complex Obligation (AND)

----------------------------------------

(75)
Obligation:
Rules:
f_1182(v17879:0:0, v17880:0:0, v17882:0:0, v17886:0:0, sum~cons_1~v38758:0:0) -> f_1182(v17879:0:0, 1 + v38758:0:0, v17882:0:0, v17886:0:0, v38758:0:0) :|: v38758:0:0 > -1 && v17886:0:0 > 1 && v17880:0:0 > 1 && sum~cons_1~v38758:0:0 = 1 + v38758:0:0
f_1182(x:0, x1:0, sum~cons_1~x6:0, x3:0, x4:0) -> f_1629(x:0, x5:0, x6:0, x7:0) :|: x:0 > 1 && x5:0 > 0 && x3:0 > 1 && x4:0 > 0 && x6:0 > 0 && x1:0 > 1 && sum~cons_1~x6:0 = 1 + x6:0

----------------------------------------

(76) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained one non-trivial SCC.

----------------------------------------

(77)
Obligation:
Rules:
f_1182(v17879:0:0, v17880:0:0, v17882:0:0, v17886:0:0, sum~cons_1~v38758:0:0) -> f_1182(v17879:0:0, 1 + v38758:0:0, v17882:0:0, v17886:0:0, v38758:0:0) :|: v38758:0:0 > -1 && v17886:0:0 > 1 && v17880:0:0 > 1 && sum~cons_1~v38758:0:0 = 1 + v38758:0:0

----------------------------------------

(78) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(79)
Obligation:
Rules:
f_1182(v17879:0:0:0, v17880:0:0:0, v17882:0:0:0, v17886:0:0:0, sum~cons_1~v38758:0:0:0) -> f_1182(v17879:0:0:0, 1 + v38758:0:0:0, v17882:0:0:0, v17886:0:0:0, v38758:0:0:0) :|: v38758:0:0:0 > -1 && v17886:0:0:0 > 1 && v17880:0:0:0 > 1 && sum~cons_1~v38758:0:0:0 = 1 + v38758:0:0:0

----------------------------------------

(80) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1182(x1, x2, x3, x4, x5) -> f_1182(x2, x4, x5)

----------------------------------------

(81)
Obligation:
Rules:
f_1182(v17880:0:0:0, v17886:0:0:0, sum~cons_1~v38758:0:0:0) -> f_1182(1 + v38758:0:0:0, v17886:0:0:0, v38758:0:0:0) :|: v38758:0:0:0 > -1 && v17886:0:0:0 > 1 && v17880:0:0:0 > 1 && sum~cons_1~v38758:0:0:0 = 1 + v38758:0:0:0

----------------------------------------

(82) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1182(x, x1, x2)] = x2

The following rules are decreasing:
f_1182(v17880:0:0:0, v17886:0:0:0, sum~cons_1~v38758:0:0:0) -> f_1182(1 + v38758:0:0:0, v17886:0:0:0, v38758:0:0:0) :|: v38758:0:0:0 > -1 && v17886:0:0:0 > 1 && v17880:0:0:0 > 1 && sum~cons_1~v38758:0:0:0 = 1 + v38758:0:0:0
The following rules are bounded:
f_1182(v17880:0:0:0, v17886:0:0:0, sum~cons_1~v38758:0:0:0) -> f_1182(1 + v38758:0:0:0, v17886:0:0:0, v38758:0:0:0) :|: v38758:0:0:0 > -1 && v17886:0:0:0 > 1 && v17880:0:0:0 > 1 && sum~cons_1~v38758:0:0:0 = 1 + v38758:0:0:0

----------------------------------------

(83)
YES

----------------------------------------

(84)
Obligation:
Rules:
f_1182(v17879:0:0, v17880:0:0, v17882:0:0, v17886:0:0, sum~cons_1~v38758:0:0) -> f_1182(v17879:0:0, 1 + v38758:0:0, v17882:0:0, v17886:0:0, v38758:0:0) :|: v38758:0:0 > -1 && v17886:0:0 > 1 && v17880:0:0 > 1 && sum~cons_1~v38758:0:0 = 1 + v38758:0:0
f_1629(x13:0, sum~cons_1~x17:0, x15:0, x16:0) -> f_1182(x13:0, 1 + x17:0, x15:0, 1 + x17:0, x17:0) :|: x16:0 > 0 && x17:0 > -1 && sum~cons_1~x17:0 = 1 + x17:0
f_1629(x8:0, sum~cons_1~x12:0, x10:0, x11:0) -> f_1182(x8:0, 1 + x12:0, x10:0, 1 + x12:0, x12:0) :|: x11:0 < 0 && x12:0 > -1 && sum~cons_1~x12:0 = 1 + x12:0

----------------------------------------

(85) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained one non-trivial SCC.

----------------------------------------

(86)
Obligation:
Rules:
f_1182(v17879:0:0, v17880:0:0, v17882:0:0, v17886:0:0, sum~cons_1~v38758:0:0) -> f_1182(v17879:0:0, 1 + v38758:0:0, v17882:0:0, v17886:0:0, v38758:0:0) :|: v38758:0:0 > -1 && v17886:0:0 > 1 && v17880:0:0 > 1 && sum~cons_1~v38758:0:0 = 1 + v38758:0:0

----------------------------------------

(87) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(88)
Obligation:
Rules:
f_1182(v17879:0:0:0, v17880:0:0:0, v17882:0:0:0, v17886:0:0:0, sum~cons_1~v38758:0:0:0) -> f_1182(v17879:0:0:0, 1 + v38758:0:0:0, v17882:0:0:0, v17886:0:0:0, v38758:0:0:0) :|: v38758:0:0:0 > -1 && v17886:0:0:0 > 1 && v17880:0:0:0 > 1 && sum~cons_1~v38758:0:0:0 = 1 + v38758:0:0:0

----------------------------------------

(89) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1182(x1, x2, x3, x4, x5) -> f_1182(x2, x4, x5)

----------------------------------------

(90)
Obligation:
Rules:
f_1182(v17880:0:0:0, v17886:0:0:0, sum~cons_1~v38758:0:0:0) -> f_1182(1 + v38758:0:0:0, v17886:0:0:0, v38758:0:0:0) :|: v38758:0:0:0 > -1 && v17886:0:0:0 > 1 && v17880:0:0:0 > 1 && sum~cons_1~v38758:0:0:0 = 1 + v38758:0:0:0

----------------------------------------

(91) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1182 ] = f_1182_3

The following rules are decreasing:
f_1182(v17880:0:0:0, v17886:0:0:0, sum~cons_1~v38758:0:0:0) -> f_1182(1 + v38758:0:0:0, v17886:0:0:0, v38758:0:0:0) :|: v38758:0:0:0 > -1 && v17886:0:0:0 > 1 && v17880:0:0:0 > 1 && sum~cons_1~v38758:0:0:0 = 1 + v38758:0:0:0

The following rules are bounded:
f_1182(v17880:0:0:0, v17886:0:0:0, sum~cons_1~v38758:0:0:0) -> f_1182(1 + v38758:0:0:0, v17886:0:0:0, v38758:0:0:0) :|: v38758:0:0:0 > -1 && v17886:0:0:0 > 1 && v17880:0:0:0 > 1 && sum~cons_1~v38758:0:0:0 = 1 + v38758:0:0:0


----------------------------------------

(92)
YES

----------------------------------------

(93)
Obligation:
SCC
----------------------------------------

(94) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 69 rulesP rules:
f_1364(v24634, v24635, v24636, v24637, v24638, v24639, v24640, v24641, 1, v24643, v24644, 0, v24646, v24647, v24648, v24649, v24650, v24651, v24652, v24653, v24654, 3, 2, 4) -> f_1375(v24634, v24635, v24636, v24637, v24638, v24639, v24640, v24641, 1, v24643, v24644, 0, v24646, v24648, v24649, v24650, v24651, v24652, v24653, v24654, 3, 2, 4) :|: 0 = 0
f_1375(v24634, v24635, v24636, v24637, v24638, v24639, v24640, v24641, 1, v24643, v24644, 0, v24646, v24648, v24649, v24650, v24651, v24652, v24653, v24654, 3, 2, 4) -> f_1388(v24634, v24635, v24636, v24637, v24638, v24639, v24640, v24641, 1, v24643, v24644, 0, v24646, v25205, v24648, v24649, v24650, v24651, v24652, v24653, v24654, 3, 2, 4) :|: 1 + v25205 = v24643 && 0 <= v25205
f_1388(v24634, v24635, v24636, v24637, v24638, v24639, v24640, v24641, 1, v24643, v24644, 0, v24646, v25205, v24648, v24649, v24650, v24651, v24652, v24653, v24654, 3, 2, 4) -> f_1401(v24634, v24635, v24636, v24637, v24638, v24639, v24640, v24641, 1, v24643, v24644, 0, v24646, v25205, v24648, v24649, v24650, v24651, v24652, v24653, v24654, 3, 2, 4) :|: TRUE
f_1401(v24634, v24635, v24636, v24637, v24638, v24639, v24640, v24641, 1, v24643, v24644, 0, v24646, v25205, v24648, v24649, v24650, v24651, v24652, v24653, v24654, 3, 2, 4) -> f_1414(v24634, v24635, v24636, v24637, v24638, v24639, v24640, v24641, 1, v24643, v24644, 0, v24646, v25205, v25799, v24649, v24650, v24651, v24652, v24653, v24654, 3, 2, 4) :|: TRUE
f_1414(v24634, v24635, v24636, v24637, v24638, v24639, v24640, v24641, 1, v24643, v24644, 0, v24646, v25205, v25799, v24649, v24650, v24651, v24652, v24653, v24654, 3, 2, 4) -> f_1425(v24634, v24635, v24636, v24637, v24638, v24639, v24640, v24641, 1, v24643, v24644, 0, v24646, v25205, v25799, v24649, v24650, v24651, v24652, v24653, v24654, 3, 2, 4) :|: TRUE
f_1425(v24634, v24635, v24636, v24637, v24638, v24639, v24640, v24641, 1, v24643, v24644, 0, v24646, v25205, v25799, v24649, v24650, v24651, v24652, v24653, v24654, 3, 2, 4) -> f_1437(v24634, v24635, v24636, v24637, v24638, v24639, v24640, v24641, 1, v24643, v24644, 0, v24646, v25205, v25799, v24649, v24650, v24651, v24652, v24653, v24654, 3, 2, 4) :|: TRUE
f_1437(v24634, v24635, v24636, v24637, v24638, v24639, v24640, v24641, 1, v24643, v24644, 0, v24646, v25205, v25799, v24649, v24650, v24651, v24652, v24653, v24654, 3, 2, 4) -> f_1108(v24634, v24635, v24636, v24637, v24638, v24639, v24640, v24641, 1, v24643, v24644, 0, v24646, v24649, v24650, v25205, v25799, v24651, v24652, v24653, v24654, 3, 2, 4) :|: TRUE
f_1108(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15448, v15449, 0, v15451, v15452, v15453, v15454, v15455, v15456, v15457, v15458, v15459, 3, 2, 4) -> f_1118(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15448, v15449, 0, v15451, v15452, v15453, v15454, v15455, v15456, v15457, v15458, v15459, 3, 2, 4) :|: TRUE
f_1118(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15448, v15449, 0, v15451, v15452, v15453, v15454, v15455, v15456, v15457, v15458, v15459, 3, 2, 4) -> f_1129(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15448, v15449, 0, v15451, v15452, v15453, v15454, v15455, v15456, v15457, v15458, v15459, 3, 2, 4) :|: TRUE
f_1129(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15448, v15449, 0, v15451, v15452, v15453, v15454, v15455, v15456, v15457, v15458, v15459, 3, 2, 4) -> f_1140(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15448, v15449, 0, v15451, v15452, v15453, v15454, v15455, v15456, v15457, v15458, v15459, 3, 2, 4) :|: 0 = 0
f_1140(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15448, v15449, 0, v15451, v15452, v15453, v15454, v15455, v15456, v15457, v15458, v15459, 3, 2, 4) -> f_1152(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15448, v15449, 0, v15451, v15452, v15453, v15454, v15455, v15456, v15457, v15458, v15459, 3, 2, 4) :|: 0 = 0
f_1152(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15448, v15449, 0, v15451, v15452, v15453, v15454, v15455, v15456, v15457, v15458, v15459, 3, 2, 4) -> f_1163(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15448, v15449, 0, v15451, v15452, v15453, v15454, v15455, v15456, v15457, v15458, v15459, 3, 2, 4) :|: TRUE
f_1163(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15448, v15449, 0, v15451, v15452, v15453, v15454, v15455, v15456, v15457, v15458, v15459, 3, 2, 4) -> f_1173(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15449, 0, v15451, v15452, v15453, v15448, v15455, v15456, v15457, v15458, v15459, 3, 2, 4) :|: 0 = 0
f_1173(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15449, 0, v15451, v15452, v15453, v15448, v15455, v15456, v15457, v15458, v15459, 3, 2, 4) -> f_1183(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15449, 0, v15451, v15452, v15453, v15448, v15455, v15456, v15457, v15458, v15459, 3, 2, 4) :|: 0 < v15454 && 2 <= v15448 && 2 <= v15444
f_1183(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15449, 0, v15451, v15452, v15453, v15448, v15455, v15456, v15457, v15458, v15459, 3, 2, 4) -> f_1196(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15449, 0, v15451, v15452, v15453, v15448, v15455, v15456, v15457, v15458, v15459, 3, 2, 4) :|: 0 = 0
f_1196(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15449, 0, v15451, v15452, v15453, v15448, v15455, v15456, v15457, v15458, v15459, 3, 2, 4) -> f_1209(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15449, 0, v15451, v15452, v15453, v15448, v15455, v15456, v15457, v15458, v15459, 3, 2, 4) :|: TRUE
f_1209(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15449, 0, v15451, v15452, v15453, v15448, v15455, v15456, v15457, v15458, v15459, 3, 2, 4) -> f_1222(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15455, 0, v15451, v15452, v15453, v15448, v15456, v15457, v15458, v15459, 3, 2, 4) :|: 0 = 0
f_1222(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15455, 0, v15451, v15452, v15453, v15448, v15456, v15457, v15458, v15459, 3, 2, 4) -> f_1233(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15455, 0, v15451, v15452, v15453, v15448, v15456, v15457, v15458, v15459, 3, 2, 4) :|: 0 < v15455
f_1233(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15455, 0, v15451, v15452, v15453, v15448, v15456, v15457, v15458, v15459, 3, 2, 4) -> f_1247(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15455, 0, v15451, v15452, v15453, v15448, v15456, v15457, v15458, v15459, 3, 2, 4) :|: 0 = 0
f_1247(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15455, 0, v15451, v15452, v15453, v15448, v15456, v15457, v15458, v15459, 3, 2, 4) -> f_1260(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15455, 0, v15451, v15452, v15453, v15448, v15456, v15457, v15458, v15459, 3, 2, 4) :|: 0 = 0
f_1260(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15455, 0, v15451, v15452, v15453, v15448, v15456, v15457, v15458, v15459, 3, 2, 4) -> f_1272(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15455, 0, v15451, v15452, v15453, v15448, v15456, v15457, v15458, v15459, 3, 2, 4) :|: TRUE
f_1272(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15455, 0, v15451, v15452, v15453, v15448, v15456, v15457, v15458, v15459, 3, 2, 4) -> f_1281(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15455, v22407, 0, v15451, v15452, v15453, v15448, v15456, v15457, v15458, v15459, 3, 2, 4) :|: TRUE
f_1281(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15455, v22407, 0, v15451, v15452, v15453, v15448, v15456, v15457, v15458, v15459, 3, 2, 4) -> f_1290(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15455, 0, v15451, v15452, v15453, v15448, v15456, v15457, v15458, v15459, 3, 2, 4) :|: v22407 = 0
f_1290(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15455, 0, v15451, v15452, v15453, v15448, v15456, v15457, v15458, v15459, 3, 2, 4) -> f_1300(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15455, 0, v15451, v15452, v15453, v15448, v15456, v15457, v15458, v15459, 3, 2, 4) :|: 0 = 0
f_1300(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15455, 0, v15451, v15452, v15453, v15448, v15456, v15457, v15458, v15459, 3, 2, 4) -> f_1311(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15455, 0, v15451, v15452, v15453, v15448, v15456, v15457, v15458, v15459, 3, 2, 4) :|: TRUE
f_1311(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15455, 0, v15451, v15452, v15453, v15448, v15456, v15457, v15458, v15459, 3, 2, 4) -> f_1320(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15455, 0, v23892, v15452, v15453, v15448, v15456, v15457, v15458, v15459, 3, 2, 4) :|: TRUE
f_1320(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15455, 0, v23892, v15452, v15453, v15448, v15456, v15457, v15458, v15459, 3, 2, 4) -> f_1331(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15455, 0, v23892, v15452, v15453, v15448, v15456, v15457, v15458, v15459, 3, 2, 4) :|: v23892 != 0
f_1320(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15455, 0, v23892, v15452, v15453, v15448, v15456, v15457, v15458, v15459, 3, 2, 4) -> f_1332(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15455, 0, v15452, v15453, v15448, v15456, v15457, v15458, v15459, 3, 2, 4) :|: v23892 = 0
f_1331(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15455, 0, v23892, v15452, v15453, v15448, v15456, v15457, v15458, v15459, 3, 2, 4) -> f_1345(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15455, 0, v23892, v15452, v15453, v15448, v15456, v15457, v15458, v15459, 3, 2, 4) :|: 0 = 0
f_1345(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15455, 0, v23892, v15452, v15453, v15448, v15456, v15457, v15458, v15459, 3, 2, 4) -> f_1359(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15455, 0, v23892, v15452, v15453, v15448, v15456, v15457, v15458, v15459, 3, 2, 4) :|: TRUE
f_1359(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15455, 0, v23892, v15452, v15453, v15448, v15456, v15457, v15458, v15459, 3, 2, 4) -> f_1038(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15455, 0, v23892, v15448, v15455, v15452, v15453, v15456, v15457, v15458, v15459, 3, 2, 4) :|: TRUE
f_1038(v13036, v13037, v13038, v13039, v13040, v13041, v13042, v13043, 1, v13045, v13046, 0, v13048, v13049, v13050, v13051, v13052, v13053, v13054, v13055, v13056, 3, 2, 4) -> f_1364(v13036, v13037, v13038, v13039, v13040, v13041, v13042, v13043, 1, v13045, v13046, 0, v13048, v13049, v13050, v13051, v13052, v13053, v13054, v13055, v13056, 3, 2, 4) :|: TRUE
f_1332(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15455, 0, v15452, v15453, v15448, v15456, v15457, v15458, v15459, 3, 2, 4) -> f_1346(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15455, 0, v15452, v15453, v15448, v15456, v15457, v15458, v15459, 3, 2, 4) :|: 0 = 0
f_1346(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15455, 0, v15452, v15453, v15448, v15456, v15457, v15458, v15459, 3, 2, 4) -> f_1360(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15455, 0, v15452, v15453, v15448, v15456, v15457, v15458, v15459, 3, 2, 4) :|: TRUE
f_1360(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15455, 0, v15452, v15453, v15448, v15456, v15457, v15458, v15459, 3, 2, 4) -> f_1040(v15439, v15440, v15441, v15442, v15443, v15444, v15445, v15446, 1, v15454, v15455, 0, v15448, v15455, v15452, v15453, v15456, v15457, v15458, v15459, 3, 2, 4) :|: TRUE
f_1040(v13109, v13110, v13111, v13112, v13113, v13114, v13115, v13116, 1, v13118, v13119, 0, v13121, v13122, v13123, v13124, v13125, v13126, v13127, v13128, 3, 2, 4) -> f_1366(v13109, v13110, v13111, v13112, v13113, v13114, v13115, v13116, 1, v13118, v13119, 0, v13121, v13122, v13123, v13124, v13125, v13126, v13127, v13128, 3, 2, 4) :|: TRUE
f_1366(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v24731, 1, v24733, v24734, 0, v24736, v24737, v24738, v24739, v24740, v24741, v24742, v24743, 3, 2, 4) -> f_1376(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v24731, 1, v24733, v24734, 0, v24736, v24737, v24739, v24740, v24741, v24742, v24743, 3, 2, 4) :|: 0 = 0
f_1376(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v24731, 1, v24733, v24734, 0, v24736, v24737, v24739, v24740, v24741, v24742, v24743, 3, 2, 4) -> f_1389(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v24731, 1, v24733, v24734, 0, v24736, v24737, v25206, v24740, v24741, v24742, v24743, 3, 2, 4) :|: 1 + v25206 = v24734 && 0 <= v25206
f_1389(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v24731, 1, v24733, v24734, 0, v24736, v24737, v25206, v24740, v24741, v24742, v24743, 3, 2, 4) -> f_1402(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v24731, 1, v24733, v24734, 0, v24736, v24737, v25206, v24740, v24741, v24742, v24743, 3, 2, 4) :|: TRUE
f_1402(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v24731, 1, v24733, v24734, 0, v24736, v24737, v25206, v24740, v24741, v24742, v24743, 3, 2, 4) -> f_1415(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v24731, 1, v24733, v24734, 0, v24736, v24737, v25206, v25800, v24740, v24741, v24742, v24743, 3, 2, 4) :|: TRUE
f_1415(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v24731, 1, v24733, v24734, 0, v24736, v24737, v25206, v25800, v24740, v24741, v24742, v24743, 3, 2, 4) -> f_1426(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v24731, 1, v24733, v24734, 0, v24736, v24737, v25206, v25800, v24740, v24741, v24742, v24743, 3, 2, 4) :|: TRUE
f_1426(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v24731, 1, v24733, v24734, 0, v24736, v24737, v25206, v25800, v24740, v24741, v24742, v24743, 3, 2, 4) -> f_1438(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v24731, 1, v24733, v24734, 0, v24736, v24737, v25206, v25800, v24740, v24741, v24742, v24743, 3, 2, 4) :|: TRUE
f_1438(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v24731, 1, v24733, v24734, 0, v24736, v24737, v25206, v25800, v24740, v24741, v24742, v24743, 3, 2, 4) -> f_1447(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v24731, 1, v24733, v24734, 0, v24736, v24737, v25206, v25800, v24740, v24741, v24742, v24743, 3, 2, 4) :|: TRUE
f_1447(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v24731, 1, v24733, v24734, 0, v24736, v24737, v25206, v25800, v24740, v24741, v24742, v24743, 3, 2, 4) -> f_1456(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v24731, 1, v24733, v24734, 0, v24736, v24737, v25206, v25800, v24740, v24741, v24742, v24743, 3, 2, 4) :|: TRUE
f_1456(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v24731, 1, v24733, v24734, 0, v24736, v24737, v25206, v25800, v24740, v24741, v24742, v24743, 3, 2, 4) -> f_1465(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v24734, 0, v24736, v24737, v25206, v24740, v24741, v24742, v24743, 3, 2, 4) :|: 0 = 0
f_1465(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v24734, 0, v24736, v24737, v25206, v24740, v24741, v24742, v24743, 3, 2, 4) -> f_1475(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v24734, 0, v24736, v24737, v25206, v24740, v24741, v24742, v24743, 3, 2, 4) :|: 0 < v25800
f_1475(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v24734, 0, v24736, v24737, v25206, v24740, v24741, v24742, v24743, 3, 2, 4) -> f_1482(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v24734, 0, v24736, v24737, v25206, v24740, v24741, v24742, v24743, 3, 2, 4) :|: 0 = 0
f_1482(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v24734, 0, v24736, v24737, v25206, v24740, v24741, v24742, v24743, 3, 2, 4) -> f_1489(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v24734, 0, v24736, v24737, v25206, v24740, v24741, v24742, v24743, 3, 2, 4) :|: TRUE
f_1489(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v24734, 0, v24736, v24737, v25206, v24740, v24741, v24742, v24743, 3, 2, 4) -> f_1497(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v24734, 0, v24736, v24737, v25206, v24740, v24741, v24742, v24743, 3, 2, 4) :|: 0 = 0
f_1497(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v24734, 0, v24736, v24737, v25206, v24740, v24741, v24742, v24743, 3, 2, 4) -> f_1508(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v24734, 0, v24736, v24737, v25206, v24740, v24741, v24742, v24743, 3, 2, 4) :|: 0 = 0
f_1508(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v24734, 0, v24736, v24737, v25206, v24740, v24741, v24742, v24743, 3, 2, 4) -> f_1518(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v24734, 0, v24736, v24737, v25206, v24740, v24741, v24742, v24743, 3, 2, 4) :|: TRUE
f_1518(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v24734, 0, v24736, v24737, v25206, v24740, v24741, v24742, v24743, 3, 2, 4) -> f_1528(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v25206, 0, v24736, v24737, v24734, v24740, v24741, v24742, v24743, 3, 2, 4) :|: 0 = 0
f_1528(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v25206, 0, v24736, v24737, v24734, v24740, v24741, v24742, v24743, 3, 2, 4) -> f_1538(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v25206, 0, v24736, v24737, v24734, v24740, v24741, v24742, v24743, 3, 2, 4) :|: 0 < v25206 && 2 <= v24734
f_1538(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v25206, 0, v24736, v24737, v24734, v24740, v24741, v24742, v24743, 3, 2, 4) -> f_1551(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v25206, 0, v24736, v24737, v24734, v24740, v24741, v24742, v24743, 3, 2, 4) :|: 0 = 0
f_1551(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v25206, 0, v24736, v24737, v24734, v24740, v24741, v24742, v24743, 3, 2, 4) -> f_1564(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v25206, 0, v24736, v24737, v24734, v24740, v24741, v24742, v24743, 3, 2, 4) :|: 0 = 0
f_1564(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v25206, 0, v24736, v24737, v24734, v24740, v24741, v24742, v24743, 3, 2, 4) -> f_1576(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v25206, 0, v24736, v24737, v24734, v24740, v24741, v24742, v24743, 3, 2, 4) :|: TRUE
f_1576(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v25206, 0, v24736, v24737, v24734, v24740, v24741, v24742, v24743, 3, 2, 4) -> f_1587(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v25206, v33975, 0, v24736, v24737, v24734, v24740, v24741, v24742, v24743, 3, 2, 4) :|: TRUE
f_1587(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v25206, v33975, 0, v24736, v24737, v24734, v24740, v24741, v24742, v24743, 3, 2, 4) -> f_1599(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v25206, 0, v24736, v24737, v24734, v24740, v24741, v24742, v24743, 3, 2, 4) :|: v33975 = 0
f_1599(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v25206, 0, v24736, v24737, v24734, v24740, v24741, v24742, v24743, 3, 2, 4) -> f_1612(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v25206, 0, v24736, v24737, v24734, v24740, v24741, v24742, v24743, 3, 2, 4) :|: 0 = 0
f_1612(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v25206, 0, v24736, v24737, v24734, v24740, v24741, v24742, v24743, 3, 2, 4) -> f_1625(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v25206, 0, v24736, v24737, v24734, v24740, v24741, v24742, v24743, 3, 2, 4) :|: TRUE
f_1625(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v25206, 0, v24736, v24737, v24734, v24740, v24741, v24742, v24743, 3, 2, 4) -> f_1635(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v25206, 0, v36938, v24736, v24737, v24734, v24740, v24741, v24742, v24743, 3, 2, 4) :|: TRUE
f_1635(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v25206, 0, v36938, v24736, v24737, v24734, v24740, v24741, v24742, v24743, 3, 2, 4) -> f_1649(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v25206, 0, v36938, v24736, v24737, v24734, v24740, v24741, v24742, v24743, 3, 2, 4) :|: v36938 != 0
f_1635(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v25206, 0, v36938, v24736, v24737, v24734, v24740, v24741, v24742, v24743, 3, 2, 4) -> f_1650(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v25206, 0, v24736, v24737, v24734, v24740, v24741, v24742, v24743, 3, 2, 4) :|: v36938 = 0
f_1649(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v25206, 0, v36938, v24736, v24737, v24734, v24740, v24741, v24742, v24743, 3, 2, 4) -> f_1657(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v25206, 0, v36938, v24736, v24737, v24734, v24740, v24741, v24742, v24743, 3, 2, 4) :|: 0 = 0
f_1657(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v25206, 0, v36938, v24736, v24737, v24734, v24740, v24741, v24742, v24743, 3, 2, 4) -> f_1667(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v25206, 0, v36938, v24736, v24737, v24734, v24740, v24741, v24742, v24743, 3, 2, 4) :|: TRUE
f_1667(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v25206, 0, v36938, v24736, v24737, v24734, v24740, v24741, v24742, v24743, 3, 2, 4) -> f_1364(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v25206, 0, v36938, v24736, v24737, v24734, v25206, v24740, v24741, v24742, v24743, 3, 2, 4) :|: TRUE
f_1650(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v25206, 0, v24736, v24737, v24734, v24740, v24741, v24742, v24743, 3, 2, 4) -> f_1658(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v25206, 0, v24736, v24737, v24734, v24740, v24741, v24742, v24743, 3, 2, 4) :|: 0 = 0
f_1658(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v25206, 0, v24736, v24737, v24734, v24740, v24741, v24742, v24743, 3, 2, 4) -> f_1668(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v25206, 0, v24736, v24737, v24734, v24740, v24741, v24742, v24743, 3, 2, 4) :|: TRUE
f_1668(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v25206, 0, v24736, v24737, v24734, v24740, v24741, v24742, v24743, 3, 2, 4) -> f_1366(v24724, v24725, v24726, v24727, v24728, v24729, v24730, v25800, 1, v24733, v25206, 0, v24736, v24737, v24734, v25206, v24740, v24741, v24742, v24743, 3, 2, 4) :|: TRUE
Combined rules. Obtained 6 rulesP rules:
f_1635(v24724:0, v24725:0, v24726:0, v24727:0, v24728:0, v24729:0, v24730:0, v25800:0, 1, v24733:0, v25206:0, 0, v36938:0, v24736:0, v24737:0, v24734:0, v24740:0, v24741:0, v24742:0, v24743:0, 3, 2, 4) -> f_1364(v24724:0, v24725:0, v24726:0, v24727:0, v24728:0, v24729:0, v24730:0, v25800:0, 1, v24733:0, v25206:0, 0, v36938:0, v24736:0, v24737:0, v24734:0, v25206:0, v24740:0, v24741:0, v24742:0, v24743:0, 3, 2, 4) :|: v36938:0 < 0
f_1635(v24724:0, v24725:0, v24726:0, v24727:0, v24728:0, v24729:0, v24730:0, v25800:0, 1, v24733:0, v25206:0, 0, v36938:0, v24736:0, v24737:0, v24734:0, v24740:0, v24741:0, v24742:0, v24743:0, 3, 2, 4) -> f_1364(v24724:0, v24725:0, v24726:0, v24727:0, v24728:0, v24729:0, v24730:0, v25800:0, 1, v24733:0, v25206:0, 0, v36938:0, v24736:0, v24737:0, v24734:0, v25206:0, v24740:0, v24741:0, v24742:0, v24743:0, 3, 2, 4) :|: v36938:0 > 0
f_1364(v24634:0, v24635:0, v24636:0, v24637:0, v24638:0, v24639:0, v24640:0, v24641:0, 1, 1 + v25205:0, v24644:0, 0, v24646:0, v24647:0, v24648:0, v24649:0, v24650:0, v24651:0, v24652:0, v24653:0, v24654:0, 3, 2, 4) -> f_1635(v24634:0, v24635:0, v24636:0, v24637:0, v24638:0, v24639:0, v24640:0, v25800:0, 1, v25205:0, v25206:0, 0, v36938:0, 1 + v25205:0, 1 + v25206:0, 1 + v25206:0, v24651:0, v24652:0, v24653:0, v24654:0, 3, 2, 4) :|: v25205:0 > 0 && v25206:0 > 0 && v25800:0 > 0 && v24639:0 > 1
f_1364(v24634:0, v24635:0, v24636:0, v24637:0, v24638:0, v24639:0, v24640:0, v24641:0, 1, 1 + v25205:0, v24644:0, 0, v24646:0, v24647:0, v24648:0, v24649:0, v24650:0, v24651:0, v24652:0, v24653:0, v24654:0, 3, 2, 4) -> f_1364(v24634:0, v24635:0, v24636:0, v24637:0, v24638:0, v24639:0, v24640:0, v24641:0, 1, v25205:0, v25799:0, 0, v23892:0, 1 + v25205:0, v25799:0, v24649:0, v24650:0, v24651:0, v24652:0, v24653:0, v24654:0, 3, 2, 4) :|: v25205:0 > 0 && v24639:0 > 1 && v23892:0 < 0 && v25799:0 > 0
f_1364(v24634:0, v24635:0, v24636:0, v24637:0, v24638:0, v24639:0, v24640:0, v24641:0, 1, 1 + v25205:0, v24644:0, 0, v24646:0, v24647:0, v24648:0, v24649:0, v24650:0, v24651:0, v24652:0, v24653:0, v24654:0, 3, 2, 4) -> f_1364(v24634:0, v24635:0, v24636:0, v24637:0, v24638:0, v24639:0, v24640:0, v24641:0, 1, v25205:0, v25799:0, 0, v23892:0, 1 + v25205:0, v25799:0, v24649:0, v24650:0, v24651:0, v24652:0, v24653:0, v24654:0, 3, 2, 4) :|: v25205:0 > 0 && v24639:0 > 1 && v23892:0 > 0 && v25799:0 > 0
f_1635(v24724:0, v24725:0, v24726:0, v24727:0, v24728:0, v24729:0, v24730:0, v25800:0, 1, v24733:0, 1 + v25206:1, 0, 0, v24736:0, v24737:0, v24734:0, v24740:0, v24741:0, v24742:0, v24743:0, 3, 2, 4) -> f_1635(v24724:0, v24725:0, v24726:0, v24727:0, v24728:0, v24729:0, v24730:0, v25800:1, 1, v24733:0, v25206:1, 0, v36938:1, v24736:0, v24737:0, 1 + v25206:1, v24740:0, v24741:0, v24742:0, v24743:0, 3, 2, 4) :|: v25206:1 > 0 && v25800:1 > 0
Filtered unneeded arguments:
   f_1635(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23) -> f_1635(x6, x10, x11, x13)
   f_1364(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24) -> f_1364(x6, x10)
Removed division, modulo operations, cleaned up constraints. Obtained 5 rules.P rules:
f_1635(v24729:0, v24733:0, v25206:0, v36938:0) -> f_1364(v24729:0, v24733:0) :|: v36938:0 < 0
f_1635(v24729:0, v24733:0, v25206:0, v36938:0) -> f_1364(v24729:0, v24733:0) :|: v36938:0 > 0
f_1364(v24639:0, sum~cons_1~v25205:0) -> f_1635(v24639:0, v25205:0, v25206:0, v36938:0) :|: v25206:0 > 0 && v24639:0 > 1 && v25205:0 > 0 && sum~cons_1~v25205:0 = 1 + v25205:0
f_1364(v24639:0, sum~cons_1~v25205:0) -> f_1364(v24639:0, v25205:0) :|: v25205:0 > 0 && v24639:0 > 1 && sum~cons_1~v25205:0 = 1 + v25205:0
f_1635(v24729:0, v24733:0, sum~cons_1~v25206:1, cons_0) -> f_1635(v24729:0, v24733:0, v25206:1, v36938:1) :|: v25206:1 > 0 && sum~cons_1~v25206:1 = 1 + v25206:1 && cons_0 = 0

----------------------------------------

(95)
Obligation:
Rules:
f_1635(v24729:0, v24733:0, v25206:0, v36938:0) -> f_1364(v24729:0, v24733:0) :|: v36938:0 < 0
f_1635(x, x1, x2, x3) -> f_1364(x, x1) :|: x3 > 0
f_1364(x4, x5) -> f_1635(x4, x6, x7, x8) :|: x7 > 0 && x4 > 1 && x6 > 0 && x5 = 1 + x6
f_1364(v24639:0, sum~cons_1~v25205:0) -> f_1364(v24639:0, v25205:0) :|: v25205:0 > 0 && v24639:0 > 1 && sum~cons_1~v25205:0 = 1 + v25205:0
f_1635(x9, x10, x11, x12) -> f_1635(x9, x10, x13, x14) :|: x13 > 0 && x11 = 1 + x13 && x12 = 0

----------------------------------------

(96) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(97)
Obligation:
Rules:
f_1635(x:0, x1:0, x2:0, x3:0) -> f_1364(x:0, x1:0) :|: x3:0 > 0
f_1635(x9:0, x10:0, sum~cons_1~x13:0, cons_0) -> f_1635(x9:0, x10:0, x13:0, x14:0) :|: x13:0 > 0 && sum~cons_1~x13:0 = 1 + x13:0 && cons_0 = 0
f_1364(x4:0, sum~cons_1~x6:0) -> f_1635(x4:0, x6:0, x7:0, x8:0) :|: x7:0 > 0 && x4:0 > 1 && x6:0 > 0 && sum~cons_1~x6:0 = 1 + x6:0
f_1364(v24639:0:0, sum~cons_1~v25205:0:0) -> f_1364(v24639:0:0, v25205:0:0) :|: v25205:0:0 > 0 && v24639:0:0 > 1 && sum~cons_1~v25205:0:0 = 1 + v25205:0:0
f_1635(v24729:0:0, v24733:0:0, v25206:0:0, v36938:0:0) -> f_1364(v24729:0:0, v24733:0:0) :|: v36938:0:0 < 0

----------------------------------------

(98) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1635(x, x1, x2, x3)] = -1 + x + x1
[f_1364(x4, x5)] = -1 + x4 + x5

The following rules are decreasing:
f_1364(x4:0, sum~cons_1~x6:0) -> f_1635(x4:0, x6:0, x7:0, x8:0) :|: x7:0 > 0 && x4:0 > 1 && x6:0 > 0 && sum~cons_1~x6:0 = 1 + x6:0
f_1364(v24639:0:0, sum~cons_1~v25205:0:0) -> f_1364(v24639:0:0, v25205:0:0) :|: v25205:0:0 > 0 && v24639:0:0 > 1 && sum~cons_1~v25205:0:0 = 1 + v25205:0:0
The following rules are bounded:
f_1364(x4:0, sum~cons_1~x6:0) -> f_1635(x4:0, x6:0, x7:0, x8:0) :|: x7:0 > 0 && x4:0 > 1 && x6:0 > 0 && sum~cons_1~x6:0 = 1 + x6:0
f_1364(v24639:0:0, sum~cons_1~v25205:0:0) -> f_1364(v24639:0:0, v25205:0:0) :|: v25205:0:0 > 0 && v24639:0:0 > 1 && sum~cons_1~v25205:0:0 = 1 + v25205:0:0

----------------------------------------

(99)
Obligation:
Rules:
f_1635(x:0, x1:0, x2:0, x3:0) -> f_1364(x:0, x1:0) :|: x3:0 > 0
f_1635(x9:0, x10:0, sum~cons_1~x13:0, cons_0) -> f_1635(x9:0, x10:0, x13:0, x14:0) :|: x13:0 > 0 && sum~cons_1~x13:0 = 1 + x13:0 && cons_0 = 0
f_1635(v24729:0:0, v24733:0:0, v25206:0:0, v36938:0:0) -> f_1364(v24729:0:0, v24733:0:0) :|: v36938:0:0 < 0

----------------------------------------

(100) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained one non-trivial SCC.

----------------------------------------

(101)
Obligation:
Rules:
f_1635(x9:0, x10:0, sum~cons_1~x13:0, cons_0) -> f_1635(x9:0, x10:0, x13:0, x14:0) :|: x13:0 > 0 && sum~cons_1~x13:0 = 1 + x13:0 && cons_0 = 0

----------------------------------------

(102) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(103)
Obligation:
Rules:
f_1635(x9:0:0, x10:0:0, sum~cons_1~x13:0:0, cons_0) -> f_1635(x9:0:0, x10:0:0, x13:0:0, x14:0:0) :|: x13:0:0 > 0 && sum~cons_1~x13:0:0 = 1 + x13:0:0 && cons_0 = 0

----------------------------------------

(104) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1635(x1, x2, x3, x4) -> f_1635(x3, x4)

----------------------------------------

(105)
Obligation:
Rules:
f_1635(sum~cons_1~x13:0:0, cons_0) -> f_1635(x13:0:0, x14:0:0) :|: x13:0:0 > 0 && sum~cons_1~x13:0:0 = 1 + x13:0:0 && cons_0 = 0

----------------------------------------

(106) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1635(x, x1)] = x

The following rules are decreasing:
f_1635(sum~cons_1~x13:0:0, cons_0) -> f_1635(x13:0:0, x14:0:0) :|: x13:0:0 > 0 && sum~cons_1~x13:0:0 = 1 + x13:0:0 && cons_0 = 0
The following rules are bounded:
f_1635(sum~cons_1~x13:0:0, cons_0) -> f_1635(x13:0:0, x14:0:0) :|: x13:0:0 > 0 && sum~cons_1~x13:0:0 = 1 + x13:0:0 && cons_0 = 0

----------------------------------------

(107)
YES

----------------------------------------

(108)
Obligation:
SCC
----------------------------------------

(109) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 58 rulesP rules:
f_786(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5710, 1, v5712, v5713, v5714, v5715, v5716, v5717, v5718, v5719, v5720, v5721, 0, 3, 2, 4) -> f_797(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v5714, v5715, v5716, v5710, v5718, v5719, v5720, v5721, 0, 3, 2, 4) :|: 0 = 0
f_797(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v5714, v5715, v5716, v5710, v5718, v5719, v5720, v5721, 0, 3, 2, 4) -> f_808(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v5714, v5715, v5716, v5710, v5718, v5719, v5720, v5721, 0, 3, 2, 4) :|: 0 < v5717 && 2 <= v5710 && 2 <= v5707
f_808(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v5714, v5715, v5716, v5710, v5718, v5719, v5720, v5721, 0, 3, 2, 4) -> f_818(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v5714, v5715, v5716, v5710, v5718, v5719, v5720, v5721, 0, 3, 2, 4) :|: 0 = 0
f_818(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v5714, v5715, v5716, v5710, v5718, v5719, v5720, v5721, 0, 3, 2, 4) -> f_827(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v5714, v5715, v5716, v5710, v5718, v5719, v5720, v5721, 0, 3, 2, 4) :|: TRUE
f_827(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v5714, v5715, v5716, v5710, v5718, v5719, v5720, v5721, 0, 3, 2, 4) -> f_836(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v5714, v5715, v5716, v5710, v5718, v5719, v5720, v5721, 0, 3, 2, 4) :|: 0 = 0
f_836(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v5714, v5715, v5716, v5710, v5718, v5719, v5720, v5721, 0, 3, 2, 4) -> f_847(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v5714, v5715, v5716, v5710, v5718, v5719, v5720, v5721, 0, 3, 2, 4) :|: 0 = 0
f_847(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v5714, v5715, v5716, v5710, v5718, v5719, v5720, v5721, 0, 3, 2, 4) -> f_854(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v5714, v5715, v5716, v5710, v5718, v5719, v5720, v5721, 0, 3, 2, 4) :|: TRUE
f_854(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v5714, v5715, v5716, v5710, v5718, v5719, v5720, v5721, 0, 3, 2, 4) -> f_861(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v5714, v5715, v5716, v5710, v5718, v5719, v5720, v5721, 0, 3, 2, 4) :|: 0 = 0
f_861(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v5714, v5715, v5716, v5710, v5718, v5719, v5720, v5721, 0, 3, 2, 4) -> f_869(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v5714, v5715, v5716, v5710, v5718, v5719, v5720, v5721, 0, 3, 2, 4) :|: 0 = 0
f_869(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v5714, v5715, v5716, v5710, v5718, v5719, v5720, v5721, 0, 3, 2, 4) -> f_878(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v5714, v5715, v5716, v5710, v5718, v5719, v5720, v5721, 0, 3, 2, 4) :|: 0 = 0
f_878(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v5714, v5715, v5716, v5710, v5718, v5719, v5720, v5721, 0, 3, 2, 4) -> f_887(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v5714, v5715, v5716, v5710, v5718, v5719, v5720, v5721, 0, 3, 2, 4) :|: TRUE
f_887(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v5714, v5715, v5716, v5710, v5718, v5719, v5720, v5721, 0, 3, 2, 4) -> f_896(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v9114, v5715, v5716, v5710, v5718, v5719, v5720, v5721, 0, 3, 2, 4) :|: TRUE
f_896(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v9114, v5715, v5716, v5710, v5718, v5719, v5720, v5721, 0, 3, 2, 4) -> f_907(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v9114, v5715, v5716, v5710, v5718, v5719, v5720, v5721, 0, 3, 2, 4) :|: v9114 != 0
f_896(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v9114, v5715, v5716, v5710, v5718, v5719, v5720, v5721, 0, 3, 2, 4) -> f_908(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, 0, v5715, v5716, v5710, v5718, v5719, v5720, v5721, 3, 2, 4) :|: v9114 = 0
f_907(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v9114, v5715, v5716, v5710, v5718, v5719, v5720, v5721, 0, 3, 2, 4) -> f_919(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v9114, v5715, v5716, v5710, v5718, v5719, v5720, v5721, 0, 3, 2, 4) :|: 0 = 0
f_919(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v9114, v5715, v5716, v5710, v5718, v5719, v5720, v5721, 0, 3, 2, 4) -> f_931(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v9114, v5715, v5716, v5710, v5718, v5719, v5720, v5721, 0, 3, 2, 4) :|: TRUE
f_931(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v9114, v5715, v5716, v5710, v5718, v5719, v5720, v5721, 0, 3, 2, 4) -> f_942(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v9114, v5715, v5716, v5718, v5719, v5720, v5721, 0, 3, 2, 4) :|: 0 = 0
f_942(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v9114, v5715, v5716, v5718, v5719, v5720, v5721, 0, 3, 2, 4) -> f_951(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v9114, v5715, v5716, v10865, v5718, v5719, v5720, v5721, 0, 3, 2, 4) :|: 1 + v10865 = v5717 && 0 <= v10865
f_951(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v9114, v5715, v5716, v10865, v5718, v5719, v5720, v5721, 0, 3, 2, 4) -> f_963(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v9114, v5715, v5716, v10865, v5718, v5719, v5720, v5721, 0, 3, 2, 4) :|: TRUE
f_963(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v9114, v5715, v5716, v10865, v5718, v5719, v5720, v5721, 0, 3, 2, 4) -> f_976(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v9114, v5715, v5716, v10865, v5718, v5719, v5720, v5721, 0, 3, 2, 4) :|: TRUE
f_976(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v9114, v5715, v5716, v10865, v5718, v5719, v5720, v5721, 0, 3, 2, 4) -> f_774(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, v9114, v5715, v5716, v10865, v5718, v5719, v5720, v5721, 0, 3, 2, 4) :|: TRUE
f_774(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5710, 1, v5712, v5713, v5714, v5715, v5716, v5717, v5718, v5719, v5720, v5721, 0, 3, 2, 4) -> f_786(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5710, 1, v5712, v5713, v5714, v5715, v5716, v5717, v5718, v5719, v5720, v5721, 0, 3, 2, 4) :|: TRUE
f_908(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, 0, v5715, v5716, v5710, v5718, v5719, v5720, v5721, 3, 2, 4) -> f_920(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, 0, v5715, v5716, v5710, v5718, v5719, v5720, v5721, 3, 2, 4) :|: 0 = 0
f_920(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, 0, v5715, v5716, v5710, v5718, v5719, v5720, v5721, 3, 2, 4) -> f_932(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, 0, v5715, v5716, v5710, v5718, v5719, v5720, v5721, 3, 2, 4) :|: TRUE
f_932(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, 0, v5715, v5716, v5710, v5718, v5719, v5720, v5721, 3, 2, 4) -> f_943(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, 0, v10806, v5716, v5710, v5718, v5719, v5720, v5721, 3, 2, 4) :|: TRUE
f_943(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, 0, v10806, v5716, v5710, v5718, v5719, v5720, v5721, 3, 2, 4) -> f_952(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, 0, v10806, v5716, v5710, v5718, v5719, v5720, v5721, 3, 2, 4) :|: v10806 != 0
f_952(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, 0, v10806, v5716, v5710, v5718, v5719, v5720, v5721, 3, 2, 4) -> f_964(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, 0, v10806, v5716, v5710, v5718, v5719, v5720, v5721, 3, 2, 4) :|: 0 = 0
f_964(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, 0, v10806, v5716, v5710, v5718, v5719, v5720, v5721, 3, 2, 4) -> f_977(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, 0, v10806, v5716, v5710, v5718, v5719, v5720, v5721, 3, 2, 4) :|: TRUE
f_977(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, 0, v10806, v5716, v5710, v5718, v5719, v5720, v5721, 3, 2, 4) -> f_989(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, 0, v10806, v5710, v5718, v5719, v5720, v5721, 3, 2, 4) :|: 0 = 0
f_989(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, 0, v10806, v5710, v5718, v5719, v5720, v5721, 3, 2, 4) -> f_999(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, 0, v10806, v12281, v5710, v5718, v5719, v5720, v5721, 3, 2, 4) :|: 1 + v12281 = v5712 && 0 <= v12281
f_999(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, 0, v10806, v12281, v5710, v5718, v5719, v5720, v5721, 3, 2, 4) -> f_1013(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, 0, v10806, v12281, v5710, v5718, v5719, v5720, v5721, 3, 2, 4) :|: TRUE
f_1013(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, 0, v10806, v12281, v5710, v5718, v5719, v5720, v5721, 3, 2, 4) -> f_1026(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, 0, v10806, v12281, v12381, v5710, v5718, v5719, v5720, v5721, 3, 2, 4) :|: TRUE
f_1026(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, 0, v10806, v12281, v12381, v5710, v5718, v5719, v5720, v5721, 3, 2, 4) -> f_1041(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, 0, v10806, v12281, v12381, v5710, v5718, v5719, v5720, v5721, 3, 2, 4) :|: TRUE
f_1041(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, 0, v10806, v12281, v12381, v5710, v5718, v5719, v5720, v5721, 3, 2, 4) -> f_1050(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, 0, v10806, v12281, v12381, v5710, v5718, v5719, v5720, v5721, 3, 2, 4) :|: TRUE
f_1050(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, 0, v10806, v12281, v12381, v5710, v5718, v5719, v5720, v5721, 3, 2, 4) -> f_1051(v5703, v5704, v5705, v5706, v5707, v5708, v5709, v5717, 1, v5712, v5713, 0, v5710, v10806, v12281, v12381, v5718, v5719, v5720, v5721, 3, 2, 4) :|: TRUE
f_1051(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13435, v13436, 0, v13438, v13439, v13440, v13441, v13442, v13443, v13444, v13445, 3, 2, 4) -> f_1061(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13435, v13436, 0, v13438, v13439, v13440, v13441, v13442, v13443, v13444, v13445, 3, 2, 4) :|: TRUE
f_1061(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13435, v13436, 0, v13438, v13439, v13440, v13441, v13442, v13443, v13444, v13445, 3, 2, 4) -> f_1073(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13435, v13436, 0, v13438, v13439, v13440, v13441, v13442, v13443, v13444, v13445, 3, 2, 4) :|: TRUE
f_1073(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13435, v13436, 0, v13438, v13439, v13440, v13441, v13442, v13443, v13444, v13445, 3, 2, 4) -> f_1085(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13435, v13436, 0, v13438, v13439, v13440, v13441, v13442, v13443, v13444, v13445, 3, 2, 4) :|: 0 = 0
f_1085(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13435, v13436, 0, v13438, v13439, v13440, v13441, v13442, v13443, v13444, v13445, 3, 2, 4) -> f_1096(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13435, v13436, 0, v13438, v13439, v13440, v13441, v13442, v13443, v13444, v13445, 3, 2, 4) :|: 0 = 0
f_1096(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13435, v13436, 0, v13438, v13439, v13440, v13441, v13442, v13443, v13444, v13445, 3, 2, 4) -> f_1110(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13435, v13436, 0, v13438, v13439, v13440, v13441, v13442, v13443, v13444, v13445, 3, 2, 4) :|: TRUE
f_1110(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13435, v13436, 0, v13438, v13439, v13440, v13441, v13442, v13443, v13444, v13445, 3, 2, 4) -> f_1120(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13440, v13436, 0, v13438, v13439, v13435, v13441, v13442, v13443, v13444, v13445, 3, 2, 4) :|: 0 = 0
f_1120(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13440, v13436, 0, v13438, v13439, v13435, v13441, v13442, v13443, v13444, v13445, 3, 2, 4) -> f_1131(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13440, v13436, 0, v13438, v13439, v13435, v13441, v13442, v13443, v13444, v13445, 3, 2, 4) :|: 0 < v13440 && 2 <= v13435 && 2 <= v13431
f_1131(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13440, v13436, 0, v13438, v13439, v13435, v13441, v13442, v13443, v13444, v13445, 3, 2, 4) -> f_1142(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13440, v13436, 0, v13438, v13439, v13435, v13441, v13442, v13443, v13444, v13445, 3, 2, 4) :|: 0 = 0
f_1142(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13440, v13436, 0, v13438, v13439, v13435, v13441, v13442, v13443, v13444, v13445, 3, 2, 4) -> f_1155(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13440, v13436, 0, v13438, v13439, v13435, v13441, v13442, v13443, v13444, v13445, 3, 2, 4) :|: TRUE
f_1155(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13440, v13436, 0, v13438, v13439, v13435, v13441, v13442, v13443, v13444, v13445, 3, 2, 4) -> f_1166(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13440, v13441, 0, v13438, v13439, v13435, v13442, v13443, v13444, v13445, 3, 2, 4) :|: 0 = 0
f_1166(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13440, v13441, 0, v13438, v13439, v13435, v13442, v13443, v13444, v13445, 3, 2, 4) -> f_1176(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13440, v13441, 0, v13438, v13439, v13435, v13442, v13443, v13444, v13445, 3, 2, 4) :|: 0 < v13441
f_1176(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13440, v13441, 0, v13438, v13439, v13435, v13442, v13443, v13444, v13445, 3, 2, 4) -> f_1187(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13440, v13441, 0, v13438, v13439, v13435, v13442, v13443, v13444, v13445, 3, 2, 4) :|: 0 = 0
f_1187(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13440, v13441, 0, v13438, v13439, v13435, v13442, v13443, v13444, v13445, 3, 2, 4) -> f_1199(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13440, v13441, 0, v13438, v13439, v13435, v13442, v13443, v13444, v13445, 3, 2, 4) :|: 0 = 0
f_1199(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13440, v13441, 0, v13438, v13439, v13435, v13442, v13443, v13444, v13445, 3, 2, 4) -> f_1212(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13440, v13441, 0, v13438, v13439, v13435, v13442, v13443, v13444, v13445, 3, 2, 4) :|: TRUE
f_1212(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13440, v13441, 0, v13438, v13439, v13435, v13442, v13443, v13444, v13445, 3, 2, 4) -> f_1225(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13440, v13441, v20370, 0, v13438, v13439, v13435, v13442, v13443, v13444, v13445, 3, 2, 4) :|: TRUE
f_1225(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13440, v13441, v20370, 0, v13438, v13439, v13435, v13442, v13443, v13444, v13445, 3, 2, 4) -> f_1237(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13440, v13441, v20370, 0, v13438, v13439, v13435, v13442, v13443, v13444, v13445, 3, 2, 4) :|: v20370 != 0
f_1225(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13440, v13441, v20370, 0, v13438, v13439, v13435, v13442, v13443, v13444, v13445, 3, 2, 4) -> f_1238(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13440, v13441, 0, v13438, v13439, v13435, v13442, v13443, v13444, v13445, 3, 2, 4) :|: v20370 = 0
f_1237(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13440, v13441, v20370, 0, v13438, v13439, v13435, v13442, v13443, v13444, v13445, 3, 2, 4) -> f_1251(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13440, v13441, v20370, v13438, v13439, v13435, v13442, v13443, v13444, v13445, 0, 3, 2, 4) :|: 0 = 0
f_1251(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13440, v13441, v20370, v13438, v13439, v13435, v13442, v13443, v13444, v13445, 0, 3, 2, 4) -> f_1264(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13440, v13441, v20370, v13438, v13439, v13435, v13442, v13443, v13444, v13445, 0, 3, 2, 4) :|: TRUE
f_1264(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13440, v13441, v20370, v13438, v13439, v13435, v13442, v13443, v13444, v13445, 0, 3, 2, 4) -> f_931(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13440, v13441, v20370, v13439, v13435, v13438, v13442, v13443, v13444, v13445, 0, 3, 2, 4) :|: TRUE
f_1238(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13440, v13441, 0, v13438, v13439, v13435, v13442, v13443, v13444, v13445, 3, 2, 4) -> f_1252(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13440, v13441, 0, v13438, v13439, v13435, v13442, v13443, v13444, v13445, 3, 2, 4) :|: 0 = 0
f_1252(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13440, v13441, 0, v13438, v13439, v13435, v13442, v13443, v13444, v13445, 3, 2, 4) -> f_1265(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13440, v13441, 0, v13438, v13439, v13435, v13442, v13443, v13444, v13445, 3, 2, 4) :|: TRUE
f_1265(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13440, v13441, 0, v13438, v13439, v13435, v13442, v13443, v13444, v13445, 3, 2, 4) -> f_932(v13426, v13427, v13428, v13429, v13430, v13431, v13432, v13433, 1, v13440, v13441, 0, v13439, v13435, v13438, v13442, v13443, v13444, v13445, 3, 2, 4) :|: TRUE
Combined rules. Obtained 8 rulesP rules:
f_1225(v13426:0, v13427:0, v13428:0, v13429:0, v13430:0, v13431:0, v13432:0, 1 + v10865:0, 1, v13440:0, v13441:0, v20370:0, 0, v13438:0, v13439:0, v13435:0, v13442:0, v13443:0, v13444:0, v13445:0, 3, 2, 4) -> f_786(v13426:0, v13427:0, v13428:0, v13429:0, v13430:0, v13431:0, v13432:0, 1 + v10865:0, 1, v13440:0, v13441:0, v20370:0, v13439:0, v13435:0, v10865:0, v13442:0, v13443:0, v13444:0, v13445:0, 0, 3, 2, 4) :|: v20370:0 < 0 && v10865:0 > -1
f_1225(v13426:0, v13427:0, v13428:0, v13429:0, v13430:0, v13431:0, v13432:0, 1 + v10865:0, 1, v13440:0, v13441:0, v20370:0, 0, v13438:0, v13439:0, v13435:0, v13442:0, v13443:0, v13444:0, v13445:0, 3, 2, 4) -> f_786(v13426:0, v13427:0, v13428:0, v13429:0, v13430:0, v13431:0, v13432:0, 1 + v10865:0, 1, v13440:0, v13441:0, v20370:0, v13439:0, v13435:0, v10865:0, v13442:0, v13443:0, v13444:0, v13445:0, 0, 3, 2, 4) :|: v20370:0 > 0 && v10865:0 > -1
f_786(v5703:0, v5704:0, v5705:0, v5706:0, v5707:0, v5708:0, v5709:0, v5710:0, 1, v5712:0, v5713:0, v5714:0, v5715:0, v5716:0, 1 + v10865:0, v5718:0, v5719:0, v5720:0, v5721:0, 0, 3, 2, 4) -> f_786(v5703:0, v5704:0, v5705:0, v5706:0, v5707:0, v5708:0, v5709:0, 1 + v10865:0, 1, v5712:0, v5713:0, v9114:0, v5715:0, v5716:0, v10865:0, v5718:0, v5719:0, v5720:0, v5721:0, 0, 3, 2, 4) :|: v5710:0 > 1 && v10865:0 > -1 && v5707:0 > 1 && v9114:0 < 0
f_786(v5703:0, v5704:0, v5705:0, v5706:0, v5707:0, v5708:0, v5709:0, v5710:0, 1, v5712:0, v5713:0, v5714:0, v5715:0, v5716:0, 1 + v10865:0, v5718:0, v5719:0, v5720:0, v5721:0, 0, 3, 2, 4) -> f_786(v5703:0, v5704:0, v5705:0, v5706:0, v5707:0, v5708:0, v5709:0, 1 + v10865:0, 1, v5712:0, v5713:0, v9114:0, v5715:0, v5716:0, v10865:0, v5718:0, v5719:0, v5720:0, v5721:0, 0, 3, 2, 4) :|: v5710:0 > 1 && v10865:0 > -1 && v5707:0 > 1 && v9114:0 > 0
f_786(v5703:0, v5704:0, v5705:0, v5706:0, v5707:0, v5708:0, v5709:0, v5710:0, 1, 1 + v12281:0, v5713:0, v5714:0, v5715:0, v5716:0, v5717:0, v5718:0, v5719:0, v5720:0, v5721:0, 0, 3, 2, 4) -> f_1225(v5703:0, v5704:0, v5705:0, v5706:0, v5707:0, v5708:0, v5709:0, v5717:0, 1, v12281:0, v12381:0, v20370:0, 0, v5710:0, v10806:0, 1 + v12281:0, v5718:0, v5719:0, v5720:0, v5721:0, 3, 2, 4) :|: v12281:0 > 0 && v5710:0 > 1 && v5717:0 > 0 && v5707:0 > 1 && v10806:0 < 0 && v12381:0 > 0 && v5708:0 > 1
f_786(v5703:0, v5704:0, v5705:0, v5706:0, v5707:0, v5708:0, v5709:0, v5710:0, 1, 1 + v12281:0, v5713:0, v5714:0, v5715:0, v5716:0, v5717:0, v5718:0, v5719:0, v5720:0, v5721:0, 0, 3, 2, 4) -> f_1225(v5703:0, v5704:0, v5705:0, v5706:0, v5707:0, v5708:0, v5709:0, v5717:0, 1, v12281:0, v12381:0, v20370:0, 0, v5710:0, v10806:0, 1 + v12281:0, v5718:0, v5719:0, v5720:0, v5721:0, 3, 2, 4) :|: v12281:0 > 0 && v5710:0 > 1 && v5717:0 > 0 && v5707:0 > 1 && v10806:0 > 0 && v12381:0 > 0 && v5708:0 > 1
f_1225(v13426:0, v13427:0, v13428:0, v13429:0, v13430:0, v13431:0, v13432:0, v13433:0, 1, 1 + v12281:0, v13441:0, 0, 0, v13438:0, v13439:0, v13435:0, v13442:0, v13443:0, v13444:0, v13445:0, 3, 2, 4) -> f_1225(v13426:0, v13427:0, v13428:0, v13429:0, v13430:0, v13431:0, v13432:0, v13433:0, 1, v12281:0, v12381:0, v20370:1, 0, v13438:0, v10806:0, 1 + v12281:0, v13442:0, v13443:0, v13444:0, v13445:0, 3, 2, 4) :|: v12281:0 > 0 && v10806:0 < 0 && v12381:0 > 0 && v13431:0 > 1
f_1225(v13426:0, v13427:0, v13428:0, v13429:0, v13430:0, v13431:0, v13432:0, v13433:0, 1, 1 + v12281:0, v13441:0, 0, 0, v13438:0, v13439:0, v13435:0, v13442:0, v13443:0, v13444:0, v13445:0, 3, 2, 4) -> f_1225(v13426:0, v13427:0, v13428:0, v13429:0, v13430:0, v13431:0, v13432:0, v13433:0, 1, v12281:0, v12381:0, v20370:1, 0, v13438:0, v10806:0, 1 + v12281:0, v13442:0, v13443:0, v13444:0, v13445:0, 3, 2, 4) :|: v12281:0 > 0 && v10806:0 > 0 && v12381:0 > 0 && v13431:0 > 1
Filtered unneeded arguments:
   f_1225(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23) -> f_1225(x5, x6, x8, x10, x12)
   f_786(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23) -> f_786(x5, x6, x8, x10, x15)
Removed division, modulo operations, cleaned up constraints. Obtained 5 rules.P rules:
f_1225(v13430:0, v13431:0, sum~cons_1~v10865:0, v13440:0, v20370:0) -> f_786(v13430:0, v13431:0, 1 + v10865:0, v13440:0, v10865:0) :|: v20370:0 < 0 && v10865:0 > -1 && sum~cons_1~v10865:0 = 1 + v10865:0
f_1225(v13430:0, v13431:0, sum~cons_1~v10865:0, v13440:0, v20370:0) -> f_786(v13430:0, v13431:0, 1 + v10865:0, v13440:0, v10865:0) :|: v20370:0 > 0 && v10865:0 > -1 && sum~cons_1~v10865:0 = 1 + v10865:0
f_786(v5707:0, v5708:0, v5710:0, v5712:0, sum~cons_1~v10865:0) -> f_786(v5707:0, v5708:0, 1 + v10865:0, v5712:0, v10865:0) :|: v10865:0 > -1 && v5707:0 > 1 && v5710:0 > 1 && sum~cons_1~v10865:0 = 1 + v10865:0
f_786(v5707:0, v5708:0, v5710:0, sum~cons_1~v12281:0, v5717:0) -> f_1225(v5707:0, v5708:0, v5717:0, v12281:0, v20370:0) :|: v5710:0 > 1 && v12281:0 > 0 && v5717:0 > 0 && v5708:0 > 1 && v5707:0 > 1 && sum~cons_1~v12281:0 = 1 + v12281:0
f_1225(v13430:0, v13431:0, v13433:0, sum~cons_1~v12281:0, cons_0) -> f_1225(v13430:0, v13431:0, v13433:0, v12281:0, v20370:1) :|: v12281:0 > 0 && v13431:0 > 1 && sum~cons_1~v12281:0 = 1 + v12281:0 && cons_0 = 0

----------------------------------------

(110)
Obligation:
Rules:
f_1225(v13430:0, v13431:0, sum~cons_1~v10865:0, v13440:0, v20370:0) -> f_786(v13430:0, v13431:0, 1 + v10865:0, v13440:0, v10865:0) :|: v20370:0 < 0 && v10865:0 > -1 && sum~cons_1~v10865:0 = 1 + v10865:0
f_1225(x, x1, x2, x3, x4) -> f_786(x, x1, 1 + x5, x3, x5) :|: x4 > 0 && x5 > -1 && x2 = 1 + x5
f_786(x6, x7, x8, x9, x10) -> f_786(x6, x7, 1 + x11, x9, x11) :|: x11 > -1 && x6 > 1 && x8 > 1 && x10 = 1 + x11
f_786(x12, x13, x14, x15, x16) -> f_1225(x12, x13, x16, x17, x18) :|: x14 > 1 && x17 > 0 && x16 > 0 && x13 > 1 && x12 > 1 && x15 = 1 + x17
f_1225(x19, x20, x21, x22, x23) -> f_1225(x19, x20, x21, x24, x25) :|: x24 > 0 && x20 > 1 && x22 = 1 + x24 && x23 = 0

----------------------------------------

(111) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(112)
Obligation:
Rules:
f_1225(x19:0, x20:0, x21:0, sum~cons_1~x24:0, cons_0) -> f_1225(x19:0, x20:0, x21:0, x24:0, x25:0) :|: x24:0 > 0 && x20:0 > 1 && sum~cons_1~x24:0 = 1 + x24:0 && cons_0 = 0
f_786(x6:0, x7:0, x8:0, x9:0, sum~cons_1~x11:0) -> f_786(x6:0, x7:0, 1 + x11:0, x9:0, x11:0) :|: x11:0 > -1 && x6:0 > 1 && x8:0 > 1 && sum~cons_1~x11:0 = 1 + x11:0
f_1225(v13430:0:0, v13431:0:0, sum~cons_1~v10865:0:0, v13440:0:0, v20370:0:0) -> f_786(v13430:0:0, v13431:0:0, 1 + v10865:0:0, v13440:0:0, v10865:0:0) :|: v20370:0:0 < 0 && v10865:0:0 > -1 && sum~cons_1~v10865:0:0 = 1 + v10865:0:0
f_1225(x:0, x1:0, sum~cons_1~x5:0, x3:0, x4:0) -> f_786(x:0, x1:0, 1 + x5:0, x3:0, x5:0) :|: x4:0 > 0 && x5:0 > -1 && sum~cons_1~x5:0 = 1 + x5:0
f_786(x12:0, x13:0, x14:0, sum~cons_1~x17:0, x16:0) -> f_1225(x12:0, x13:0, x16:0, x17:0, x18:0) :|: x13:0 > 1 && x12:0 > 1 && x16:0 > 0 && x17:0 > 0 && x14:0 > 1 && sum~cons_1~x17:0 = 1 + x17:0

----------------------------------------

(113) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1225(x, x1, x2, x3, x4)] = -1 + x2
[f_786(x5, x6, x7, x8, x9)] = x9

The following rules are decreasing:
f_786(x6:0, x7:0, x8:0, x9:0, sum~cons_1~x11:0) -> f_786(x6:0, x7:0, 1 + x11:0, x9:0, x11:0) :|: x11:0 > -1 && x6:0 > 1 && x8:0 > 1 && sum~cons_1~x11:0 = 1 + x11:0
f_786(x12:0, x13:0, x14:0, sum~cons_1~x17:0, x16:0) -> f_1225(x12:0, x13:0, x16:0, x17:0, x18:0) :|: x13:0 > 1 && x12:0 > 1 && x16:0 > 0 && x17:0 > 0 && x14:0 > 1 && sum~cons_1~x17:0 = 1 + x17:0
The following rules are bounded:
f_786(x6:0, x7:0, x8:0, x9:0, sum~cons_1~x11:0) -> f_786(x6:0, x7:0, 1 + x11:0, x9:0, x11:0) :|: x11:0 > -1 && x6:0 > 1 && x8:0 > 1 && sum~cons_1~x11:0 = 1 + x11:0
f_1225(v13430:0:0, v13431:0:0, sum~cons_1~v10865:0:0, v13440:0:0, v20370:0:0) -> f_786(v13430:0:0, v13431:0:0, 1 + v10865:0:0, v13440:0:0, v10865:0:0) :|: v20370:0:0 < 0 && v10865:0:0 > -1 && sum~cons_1~v10865:0:0 = 1 + v10865:0:0
f_1225(x:0, x1:0, sum~cons_1~x5:0, x3:0, x4:0) -> f_786(x:0, x1:0, 1 + x5:0, x3:0, x5:0) :|: x4:0 > 0 && x5:0 > -1 && sum~cons_1~x5:0 = 1 + x5:0
f_786(x12:0, x13:0, x14:0, sum~cons_1~x17:0, x16:0) -> f_1225(x12:0, x13:0, x16:0, x17:0, x18:0) :|: x13:0 > 1 && x12:0 > 1 && x16:0 > 0 && x17:0 > 0 && x14:0 > 1 && sum~cons_1~x17:0 = 1 + x17:0

----------------------------------------

(114)
Obligation:
Rules:
f_1225(x19:0, x20:0, x21:0, sum~cons_1~x24:0, cons_0) -> f_1225(x19:0, x20:0, x21:0, x24:0, x25:0) :|: x24:0 > 0 && x20:0 > 1 && sum~cons_1~x24:0 = 1 + x24:0 && cons_0 = 0
f_1225(v13430:0:0, v13431:0:0, sum~cons_1~v10865:0:0, v13440:0:0, v20370:0:0) -> f_786(v13430:0:0, v13431:0:0, 1 + v10865:0:0, v13440:0:0, v10865:0:0) :|: v20370:0:0 < 0 && v10865:0:0 > -1 && sum~cons_1~v10865:0:0 = 1 + v10865:0:0
f_1225(x:0, x1:0, sum~cons_1~x5:0, x3:0, x4:0) -> f_786(x:0, x1:0, 1 + x5:0, x3:0, x5:0) :|: x4:0 > 0 && x5:0 > -1 && sum~cons_1~x5:0 = 1 + x5:0

----------------------------------------

(115) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained one non-trivial SCC.

----------------------------------------

(116)
Obligation:
Rules:
f_1225(x19:0, x20:0, x21:0, sum~cons_1~x24:0, cons_0) -> f_1225(x19:0, x20:0, x21:0, x24:0, x25:0) :|: x24:0 > 0 && x20:0 > 1 && sum~cons_1~x24:0 = 1 + x24:0 && cons_0 = 0

----------------------------------------

(117) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(118)
Obligation:
Rules:
f_1225(x19:0:0, x20:0:0, x21:0:0, sum~cons_1~x24:0:0, cons_0) -> f_1225(x19:0:0, x20:0:0, x21:0:0, x24:0:0, x25:0:0) :|: x24:0:0 > 0 && x20:0:0 > 1 && sum~cons_1~x24:0:0 = 1 + x24:0:0 && cons_0 = 0

----------------------------------------

(119) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1225(x1, x2, x3, x4, x5) -> f_1225(x2, x4, x5)

----------------------------------------

(120)
Obligation:
Rules:
f_1225(x20:0:0, sum~cons_1~x24:0:0, cons_0) -> f_1225(x20:0:0, x24:0:0, x25:0:0) :|: x24:0:0 > 0 && x20:0:0 > 1 && sum~cons_1~x24:0:0 = 1 + x24:0:0 && cons_0 = 0

----------------------------------------

(121) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1225(x, x1, x2)] = x1

The following rules are decreasing:
f_1225(x20:0:0, sum~cons_1~x24:0:0, cons_0) -> f_1225(x20:0:0, x24:0:0, x25:0:0) :|: x24:0:0 > 0 && x20:0:0 > 1 && sum~cons_1~x24:0:0 = 1 + x24:0:0 && cons_0 = 0
The following rules are bounded:
f_1225(x20:0:0, sum~cons_1~x24:0:0, cons_0) -> f_1225(x20:0:0, x24:0:0, x25:0:0) :|: x24:0:0 > 0 && x20:0:0 > 1 && sum~cons_1~x24:0:0 = 1 + x24:0:0 && cons_0 = 0

----------------------------------------

(122)
YES

----------------------------------------

(123)
Obligation:
SCC
----------------------------------------

(124) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 29 rulesP rules:
f_597(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3138, v3139, 0, v3141, v3142, v3143, v3144, v3145, v3146, v3147, 3, 4) -> f_601(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3138, v3139, 0, v3141, v3142, v3143, v3144, v3145, v3146, v3147, 3, 4) :|: 0 = 0
f_601(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3138, v3139, 0, v3141, v3142, v3143, v3144, v3145, v3146, v3147, 3, 4) -> f_605(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3138, v3139, 0, v3141, v3142, v3143, v3144, v3145, v3146, v3147, 3, 4) :|: 0 = 0
f_605(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3138, v3139, 0, v3141, v3142, v3143, v3144, v3145, v3146, v3147, 3, 4) -> f_610(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3138, v3139, 0, v3141, v3142, v3143, v3144, v3145, v3146, v3147, 3, 4) :|: TRUE
f_610(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3138, v3139, 0, v3141, v3142, v3143, v3144, v3145, v3146, v3147, 3, 4) -> f_615(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3139, 0, v3141, v3138, v3143, v3144, v3145, v3146, v3147, 3, 4) :|: 0 = 0
f_615(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3139, 0, v3141, v3138, v3143, v3144, v3145, v3146, v3147, 3, 4) -> f_620(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3139, 0, v3141, v3138, v3143, v3144, v3145, v3146, v3147, 3, 2, 4) :|: 0 < v3142 && 2 <= v3138 && 2 <= v3135
f_620(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3139, 0, v3141, v3138, v3143, v3144, v3145, v3146, v3147, 3, 2, 4) -> f_627(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3139, 0, v3141, v3138, v3143, v3144, v3145, v3146, v3147, 3, 2, 4) :|: 0 = 0
f_627(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3139, 0, v3141, v3138, v3143, v3144, v3145, v3146, v3147, 3, 2, 4) -> f_633(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3139, 0, v3141, v3138, v3143, v3144, v3145, v3146, v3147, 3, 2, 4) :|: TRUE
f_633(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3139, 0, v3141, v3138, v3143, v3144, v3145, v3146, v3147, 3, 2, 4) -> f_639(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v3141, v3138, v3144, v3145, v3146, v3147, 3, 2, 4) :|: 0 = 0
f_639(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v3141, v3138, v3144, v3145, v3146, v3147, 3, 2, 4) -> f_646(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v3141, v3138, v3144, v3145, v3146, v3147, 3, 2, 4) :|: 0 < v3143
f_646(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v3141, v3138, v3144, v3145, v3146, v3147, 3, 2, 4) -> f_653(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v3141, v3138, v3144, v3145, v3146, v3147, 3, 2, 4) :|: 0 = 0
f_653(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v3141, v3138, v3144, v3145, v3146, v3147, 3, 2, 4) -> f_660(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v3141, v3138, v3144, v3145, v3146, v3147, 3, 2, 4) :|: 0 = 0
f_660(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v3141, v3138, v3144, v3145, v3146, v3147, 3, 2, 4) -> f_667(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v3141, v3138, v3144, v3145, v3146, v3147, 3, 2, 4) :|: TRUE
f_667(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v3141, v3138, v3144, v3145, v3146, v3147, 3, 2, 4) -> f_675(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, v4296, 0, v3141, v3138, v3144, v3145, v3146, v3147, 3, 2, 4) :|: TRUE
f_675(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, v4296, 0, v3141, v3138, v3144, v3145, v3146, v3147, 3, 2, 4) -> f_682(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v3141, v3138, v3144, v3145, v3146, v3147, 3, 2, 4) :|: v4296 = 0
f_682(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v3141, v3138, v3144, v3145, v3146, v3147, 3, 2, 4) -> f_690(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v3141, v3138, v3144, v3145, v3146, v3147, 3, 2, 4) :|: 0 = 0
f_690(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v3141, v3138, v3144, v3145, v3146, v3147, 3, 2, 4) -> f_698(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v3141, v3138, v3144, v3145, v3146, v3147, 3, 2, 4) :|: TRUE
f_698(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v3141, v3138, v3144, v3145, v3146, v3147, 3, 2, 4) -> f_704(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v5149, v3138, v3144, v3145, v3146, v3147, 3, 2, 4) :|: TRUE
f_704(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v5149, v3138, v3144, v3145, v3146, v3147, 3, 2, 4) -> f_712(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v5149, v3138, v3144, v3145, v3146, v3147, 3, 2, 4) :|: v5149 != 0
f_712(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v5149, v3138, v3144, v3145, v3146, v3147, 3, 2, 4) -> f_722(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v5149, v3138, v3144, v3145, v3146, v3147, 3, 2, 4) :|: 0 = 0
f_722(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v5149, v3138, v3144, v3145, v3146, v3147, 3, 2, 4) -> f_732(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v5149, v3138, v3144, v3145, v3146, v3147, 3, 2, 4) :|: TRUE
f_732(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v5149, v3138, v3144, v3145, v3146, v3147, 3, 2, 4) -> f_742(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v5149, v3144, v3145, v3146, v3147, 3, 2, 4) :|: 0 = 0
f_742(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v5149, v3144, v3145, v3146, v3147, 3, 2, 4) -> f_754(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v5149, v5632, v3144, v3145, v3146, v3147, 3, 2, 4) :|: 1 + v5632 = v3142 && 0 <= v5632
f_754(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v5149, v5632, v3144, v3145, v3146, v3147, 3, 2, 4) -> f_767(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v5149, v5632, v3144, v3145, v3146, v3147, 3, 2, 4) :|: TRUE
f_767(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v5149, v5632, v3144, v3145, v3146, v3147, 3, 2, 4) -> f_780(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v5149, v5632, v5965, v3144, v3145, v3146, v3147, 3, 2, 4) :|: TRUE
f_780(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v5149, v5632, v5965, v3144, v3145, v3146, v3147, 3, 2, 4) -> f_791(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v5149, v5632, v5965, v3144, v3145, v3146, v3147, 3, 2, 4) :|: TRUE
f_791(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v5149, v5632, v5965, v3144, v3145, v3146, v3147, 3, 2, 4) -> f_802(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v5149, v5632, v5965, v3144, v3145, v3146, v3147, 3, 2, 4) :|: TRUE
f_802(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v5149, v5632, v5965, v3144, v3145, v3146, v3147, 3, 2, 4) -> f_814(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v5149, v5632, v5965, v3144, v3145, v3146, v3147, 3, 2, 4) :|: TRUE
f_814(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v5149, v5632, v5965, v3144, v3145, v3146, v3147, 3, 2, 4) -> f_593(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3142, v3143, 0, v5149, v5632, v5965, v3144, v3145, v3146, v3147, 3, 4) :|: TRUE
f_593(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3138, v3139, 0, v3141, v3142, v3143, v3144, v3145, v3146, v3147, 3, 4) -> f_597(v3130, v3131, v3132, v3133, v3134, v3135, v3136, 1, v3138, v3139, 0, v3141, v3142, v3143, v3144, v3145, v3146, v3147, 3, 4) :|: TRUE
Combined rules. Obtained 2 rulesP rules:
f_597(v3130:0, v3131:0, v3132:0, v3133:0, v3134:0, v3135:0, v3136:0, 1, v3138:0, v3139:0, 0, v3141:0, 1 + v5632:0, v3143:0, v3144:0, v3145:0, v3146:0, v3147:0, 3, 4) -> f_597(v3130:0, v3131:0, v3132:0, v3133:0, v3134:0, v3135:0, v3136:0, 1, 1 + v5632:0, v3143:0, 0, v5149:0, v5632:0, v5965:0, v3144:0, v3145:0, v3146:0, v3147:0, 3, 4) :|: v3138:0 > 1 && v5632:0 > -1 && v3135:0 > 1 && v3143:0 > 0 && v5149:0 < 0
f_597(v3130:0, v3131:0, v3132:0, v3133:0, v3134:0, v3135:0, v3136:0, 1, v3138:0, v3139:0, 0, v3141:0, 1 + v5632:0, v3143:0, v3144:0, v3145:0, v3146:0, v3147:0, 3, 4) -> f_597(v3130:0, v3131:0, v3132:0, v3133:0, v3134:0, v3135:0, v3136:0, 1, 1 + v5632:0, v3143:0, 0, v5149:0, v5632:0, v5965:0, v3144:0, v3145:0, v3146:0, v3147:0, 3, 4) :|: v3138:0 > 1 && v5632:0 > -1 && v3135:0 > 1 && v3143:0 > 0 && v5149:0 > 0
Filtered unneeded arguments:
   f_597(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20) -> f_597(x6, x9, x13, x14)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_597(v3135:0, v3138:0, sum~cons_1~v5632:0, v3143:0) -> f_597(v3135:0, 1 + v5632:0, v5632:0, v5965:0) :|: v5632:0 > -1 && v3138:0 > 1 && v3143:0 > 0 && v3135:0 > 1 && sum~cons_1~v5632:0 = 1 + v5632:0

----------------------------------------

(125)
Obligation:
Rules:
f_597(v3135:0, v3138:0, sum~cons_1~v5632:0, v3143:0) -> f_597(v3135:0, 1 + v5632:0, v5632:0, v5965:0) :|: v5632:0 > -1 && v3138:0 > 1 && v3143:0 > 0 && v3135:0 > 1 && sum~cons_1~v5632:0 = 1 + v5632:0

----------------------------------------

(126) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(127)
Obligation:
Rules:
f_597(v3135:0:0, v3138:0:0, sum~cons_1~v5632:0:0, v3143:0:0) -> f_597(v3135:0:0, 1 + v5632:0:0, v5632:0:0, v5965:0:0) :|: v3143:0:0 > 0 && v3135:0:0 > 1 && v3138:0:0 > 1 && v5632:0:0 > -1 && sum~cons_1~v5632:0:0 = 1 + v5632:0:0

----------------------------------------

(128) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_597(x, x1, x2, x3)] = x2

The following rules are decreasing:
f_597(v3135:0:0, v3138:0:0, sum~cons_1~v5632:0:0, v3143:0:0) -> f_597(v3135:0:0, 1 + v5632:0:0, v5632:0:0, v5965:0:0) :|: v3143:0:0 > 0 && v3135:0:0 > 1 && v3138:0:0 > 1 && v5632:0:0 > -1 && sum~cons_1~v5632:0:0 = 1 + v5632:0:0
The following rules are bounded:
f_597(v3135:0:0, v3138:0:0, sum~cons_1~v5632:0:0, v3143:0:0) -> f_597(v3135:0:0, 1 + v5632:0:0, v5632:0:0, v5965:0:0) :|: v3143:0:0 > 0 && v3135:0:0 > 1 && v3138:0:0 > 1 && v5632:0:0 > -1 && sum~cons_1~v5632:0:0 = 1 + v5632:0:0

----------------------------------------

(129)
YES

----------------------------------------

(130)
Obligation:
SCC
----------------------------------------

(131) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 29 rulesP rules:
f_594(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, v3092, 0, v3094, v3095, v3096, v3097, v3098, v3099, 3, 4) -> f_598(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, v3092, 0, v3094, v3095, v3096, v3097, v3098, v3099, 3, 4) :|: TRUE
f_598(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, v3092, 0, v3094, v3095, v3096, v3097, v3098, v3099, 3, 4) -> f_602(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3092, 0, v3094, v3096, v3097, v3098, v3099, 3, 4) :|: 0 = 0
f_602(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3092, 0, v3094, v3096, v3097, v3098, v3099, 3, 4) -> f_606(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3092, 0, v3094, v3096, v3097, v3098, v3099, 3, 4) :|: 0 < v3095
f_606(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3092, 0, v3094, v3096, v3097, v3098, v3099, 3, 4) -> f_611(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3092, 0, v3094, v3096, v3097, v3098, v3099, 3, 4) :|: 0 = 0
f_611(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3092, 0, v3094, v3096, v3097, v3098, v3099, 3, 4) -> f_616(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3092, 0, v3094, v3096, v3097, v3098, v3099, 3, 4) :|: TRUE
f_616(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3092, 0, v3094, v3096, v3097, v3098, v3099, 3, 4) -> f_622(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3092, 0, v3094, v3096, v3097, v3098, v3099, 3, 4) :|: 0 = 0
f_622(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3092, 0, v3094, v3096, v3097, v3098, v3099, 3, 4) -> f_629(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3092, 0, v3094, v3096, v3097, v3098, v3099, 3, 4) :|: 0 = 0
f_629(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3092, 0, v3094, v3096, v3097, v3098, v3099, 3, 4) -> f_635(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3092, 0, v3094, v3096, v3097, v3098, v3099, 3, 4) :|: TRUE
f_635(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3092, 0, v3094, v3096, v3097, v3098, v3099, 3, 4) -> f_641(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, 0, v3092, v3096, v3097, v3098, v3099, 3, 4) :|: 0 = 0
f_641(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, 0, v3092, v3096, v3097, v3098, v3099, 3, 4) -> f_648(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, 0, v3092, v3096, v3097, v3098, v3099, 3, 2, 4) :|: 0 < v3094 && 2 <= v3092 && 2 <= v3089
f_648(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, 0, v3092, v3096, v3097, v3098, v3099, 3, 2, 4) -> f_655(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, 0, v3092, v3096, v3097, v3098, v3099, 3, 2, 4) :|: 0 = 0
f_655(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, 0, v3092, v3096, v3097, v3098, v3099, 3, 2, 4) -> f_662(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, 0, v3092, v3096, v3097, v3098, v3099, 3, 2, 4) :|: 0 = 0
f_662(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, 0, v3092, v3096, v3097, v3098, v3099, 3, 2, 4) -> f_669(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, 0, v3092, v3096, v3097, v3098, v3099, 3, 2, 4) :|: TRUE
f_669(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, 0, v3092, v3096, v3097, v3098, v3099, 3, 2, 4) -> f_676(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, v4297, 0, v3092, v3096, v3097, v3098, v3099, 3, 2, 4) :|: TRUE
f_676(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, v4297, 0, v3092, v3096, v3097, v3098, v3099, 3, 2, 4) -> f_684(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, 0, v3092, v3096, v3097, v3098, v3099, 3, 2, 4) :|: v4297 = 0
f_684(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, 0, v3092, v3096, v3097, v3098, v3099, 3, 2, 4) -> f_692(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, 0, v3092, v3096, v3097, v3098, v3099, 3, 2, 4) :|: 0 = 0
f_692(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, 0, v3092, v3096, v3097, v3098, v3099, 3, 2, 4) -> f_700(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, 0, v3092, v3096, v3097, v3098, v3099, 3, 2, 4) :|: TRUE
f_700(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, 0, v3092, v3096, v3097, v3098, v3099, 3, 2, 4) -> f_706(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, 0, v5150, v3092, v3096, v3097, v3098, v3099, 3, 2, 4) :|: TRUE
f_706(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, 0, v5150, v3092, v3096, v3097, v3098, v3099, 3, 2, 4) -> f_716(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, 0, v3092, v3096, v3097, v3098, v3099, 3, 2, 4) :|: v5150 = 0
f_716(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, 0, v3092, v3096, v3097, v3098, v3099, 3, 2, 4) -> f_726(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, 0, v3092, v3096, v3097, v3098, v3099, 3, 2, 4) :|: 0 = 0
f_726(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, 0, v3092, v3096, v3097, v3098, v3099, 3, 2, 4) -> f_736(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, 0, v3092, v3096, v3097, v3098, v3099, 3, 2, 4) :|: TRUE
f_736(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, 0, v3092, v3096, v3097, v3098, v3099, 3, 2, 4) -> f_746(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, 0, v3096, v3097, v3098, v3099, 3, 2, 4) :|: 0 = 0
f_746(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, 0, v3096, v3097, v3098, v3099, 3, 2, 4) -> f_758(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, 0, v5635, v3096, v3097, v3098, v3099, 3, 2, 4) :|: 1 + v5635 = v3094 && 0 <= v5635
f_758(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, 0, v5635, v3096, v3097, v3098, v3099, 3, 2, 4) -> f_772(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, 0, v5635, v3096, v3097, v3098, v3099, 3, 2, 4) :|: TRUE
f_772(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, 0, v5635, v3096, v3097, v3098, v3099, 3, 2, 4) -> f_785(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, 0, v5635, v5968, v3096, v3097, v3098, v3099, 3, 2, 4) :|: TRUE
f_785(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, 0, v5635, v5968, v3096, v3097, v3098, v3099, 3, 2, 4) -> f_796(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, 0, v5635, v5968, v3096, v3097, v3098, v3099, 3, 2, 4) :|: TRUE
f_796(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, 0, v5635, v5968, v3096, v3097, v3098, v3099, 3, 2, 4) -> f_807(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, 0, v5635, v5968, v3096, v3097, v3098, v3099, 3, 2, 4) :|: TRUE
f_807(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, 0, v5635, v5968, v3096, v3097, v3098, v3099, 3, 2, 4) -> f_588(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3095, 1, v3094, 0, v5635, v5968, v3096, v3097, v3098, v3099, 3, 4) :|: TRUE
f_588(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, v3092, 0, v3094, v3095, v3096, v3097, v3098, v3099, 3, 4) -> f_594(v3083, v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, v3092, 0, v3094, v3095, v3096, v3097, v3098, v3099, 3, 4) :|: TRUE
Combined rules. Obtained 1 rulesP rules:
f_594(v3083:0, v3084:0, v3085:0, v3086:0, v3087:0, v3088:0, v3089:0, v3090:0, 1, v3092:0, 0, 1 + v5635:0, v3095:0, v3096:0, v3097:0, v3098:0, v3099:0, 3, 4) -> f_594(v3083:0, v3084:0, v3085:0, v3086:0, v3087:0, v3088:0, v3089:0, v3095:0, 1, 1 + v5635:0, 0, v5635:0, v5968:0, v3096:0, v3097:0, v3098:0, v3099:0, 3, 4) :|: v3095:0 > 0 && v3092:0 > 1 && v5635:0 > -1 && v3089:0 > 1
Filtered unneeded arguments:
   f_594(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19) -> f_594(x7, x10, x12, x13)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_594(v3089:0, v3092:0, sum~cons_1~v5635:0, v3095:0) -> f_594(v3089:0, 1 + v5635:0, v5635:0, v5968:0) :|: v3092:0 > 1 && v3095:0 > 0 && v3089:0 > 1 && v5635:0 > -1 && sum~cons_1~v5635:0 = 1 + v5635:0

----------------------------------------

(132)
Obligation:
Rules:
f_594(v3089:0, v3092:0, sum~cons_1~v5635:0, v3095:0) -> f_594(v3089:0, 1 + v5635:0, v5635:0, v5968:0) :|: v3092:0 > 1 && v3095:0 > 0 && v3089:0 > 1 && v5635:0 > -1 && sum~cons_1~v5635:0 = 1 + v5635:0

----------------------------------------

(133) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(134)
Obligation:
Rules:
f_594(v3089:0:0, v3092:0:0, sum~cons_1~v5635:0:0, v3095:0:0) -> f_594(v3089:0:0, 1 + v5635:0:0, v5635:0:0, v5968:0:0) :|: v3089:0:0 > 1 && v5635:0:0 > -1 && v3095:0:0 > 0 && v3092:0:0 > 1 && sum~cons_1~v5635:0:0 = 1 + v5635:0:0

----------------------------------------

(135) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_594(x, x1, x2, x3)] = x2

The following rules are decreasing:
f_594(v3089:0:0, v3092:0:0, sum~cons_1~v5635:0:0, v3095:0:0) -> f_594(v3089:0:0, 1 + v5635:0:0, v5635:0:0, v5968:0:0) :|: v3089:0:0 > 1 && v5635:0:0 > -1 && v3095:0:0 > 0 && v3092:0:0 > 1 && sum~cons_1~v5635:0:0 = 1 + v5635:0:0
The following rules are bounded:
f_594(v3089:0:0, v3092:0:0, sum~cons_1~v5635:0:0, v3095:0:0) -> f_594(v3089:0:0, 1 + v5635:0:0, v5635:0:0, v5968:0:0) :|: v3089:0:0 > 1 && v5635:0:0 > -1 && v3095:0:0 > 0 && v3092:0:0 > 1 && sum~cons_1~v5635:0:0 = 1 + v5635:0:0

----------------------------------------

(136)
YES

----------------------------------------

(137)
Obligation:
SCC
----------------------------------------

(138) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 21 rulesP rules:
f_445(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v1793, v1791, v1795, v1796, v1797, v1798, 0, 3, 4) -> f_449(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v1793, v1791, v1795, v1796, v1797, v1798, 0, 3, 2, 4) :|: 0 < v1794 && 2 <= v1791 && 2 <= v1788
f_449(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v1793, v1791, v1795, v1796, v1797, v1798, 0, 3, 2, 4) -> f_454(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v1793, v1791, v1795, v1796, v1797, v1798, 0, 3, 2, 4) :|: 0 = 0
f_454(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v1793, v1791, v1795, v1796, v1797, v1798, 0, 3, 2, 4) -> f_459(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v1793, v1791, v1795, v1796, v1797, v1798, 0, 3, 2, 4) :|: TRUE
f_459(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v1793, v1791, v1795, v1796, v1797, v1798, 0, 3, 2, 4) -> f_465(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v1793, v1791, v1795, v1796, v1797, v1798, 0, 3, 2, 4) :|: 0 = 0
f_465(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v1793, v1791, v1795, v1796, v1797, v1798, 0, 3, 2, 4) -> f_471(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v1793, v1791, v1795, v1796, v1797, v1798, 0, 3, 2, 4) :|: 0 = 0
f_471(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v1793, v1791, v1795, v1796, v1797, v1798, 0, 3, 2, 4) -> f_476(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v1793, v1791, v1795, v1796, v1797, v1798, 0, 3, 2, 4) :|: TRUE
f_476(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v1793, v1791, v1795, v1796, v1797, v1798, 0, 3, 2, 4) -> f_481(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v1793, v1791, v1795, v1796, v1797, v1798, 0, 3, 2, 4) :|: 0 = 0
f_481(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v1793, v1791, v1795, v1796, v1797, v1798, 0, 3, 2, 4) -> f_484(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v1793, v1791, v1795, v1796, v1797, v1798, 0, 3, 2, 4) :|: 0 = 0
f_484(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v1793, v1791, v1795, v1796, v1797, v1798, 0, 3, 2, 4) -> f_489(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v1793, v1791, v1795, v1796, v1797, v1798, 0, 3, 2, 4) :|: 0 = 0
f_489(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v1793, v1791, v1795, v1796, v1797, v1798, 0, 3, 2, 4) -> f_494(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v1793, v1791, v1795, v1796, v1797, v1798, 0, 3, 2, 4) :|: TRUE
f_494(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v1793, v1791, v1795, v1796, v1797, v1798, 0, 3, 2, 4) -> f_499(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v2318, v1791, v1795, v1796, v1797, v1798, 0, 3, 2, 4) :|: TRUE
f_499(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v2318, v1791, v1795, v1796, v1797, v1798, 0, 3, 2, 4) -> f_504(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v2318, v1791, v1795, v1796, v1797, v1798, 0, 3, 2, 4) :|: v2318 != 0
f_504(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v2318, v1791, v1795, v1796, v1797, v1798, 0, 3, 2, 4) -> f_512(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v2318, v1791, v1795, v1796, v1797, v1798, 0, 3, 2, 4) :|: 0 = 0
f_512(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v2318, v1791, v1795, v1796, v1797, v1798, 0, 3, 2, 4) -> f_520(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v2318, v1791, v1795, v1796, v1797, v1798, 0, 3, 2, 4) :|: TRUE
f_520(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v2318, v1791, v1795, v1796, v1797, v1798, 0, 3, 2, 4) -> f_528(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v2318, v1795, v1796, v1797, v1798, 0, 3, 2, 4) :|: 0 = 0
f_528(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v2318, v1795, v1796, v1797, v1798, 0, 3, 2, 4) -> f_536(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v2318, v2501, v1795, v1796, v1797, v1798, 0, 3, 2, 4) :|: 1 + v2501 = v1794 && 0 <= v2501
f_536(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v2318, v2501, v1795, v1796, v1797, v1798, 0, 3, 2, 4) -> f_545(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v2318, v2501, v1795, v1796, v1797, v1798, 0, 3, 2, 4) :|: TRUE
f_545(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v2318, v2501, v1795, v1796, v1797, v1798, 0, 3, 2, 4) -> f_556(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v2318, v2501, v1795, v1796, v1797, v1798, 0, 3, 2, 4) :|: TRUE
f_556(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v2318, v2501, v1795, v1796, v1797, v1798, 0, 3, 2, 4) -> f_567(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v2318, v2501, v1795, v1796, v1797, v1798, 0, 3, 2, 4) :|: TRUE
f_567(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v2318, v2501, v1795, v1796, v1797, v1798, 0, 3, 2, 4) -> f_440(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v2318, v2501, v1795, v1796, v1797, v1798, 0, 3, 4) :|: TRUE
f_440(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1791, 1, v1793, v1794, v1795, v1796, v1797, v1798, 0, 3, 4) -> f_445(v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1794, 1, v1793, v1791, v1795, v1796, v1797, v1798, 0, 3, 4) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_445(v1784:0, v1785:0, v1786:0, v1787:0, v1788:0, v1789:0, v1790:0, 1 + v2501:0, 1, v1793:0, v1791:0, v1795:0, v1796:0, v1797:0, v1798:0, 0, 3, 4) -> f_445(v1784:0, v1785:0, v1786:0, v1787:0, v1788:0, v1789:0, v1790:0, v2501:0, 1, v2318:0, 1 + v2501:0, v1795:0, v1796:0, v1797:0, v1798:0, 0, 3, 4) :|: v1791:0 > 1 && v2501:0 > -1 && v1788:0 > 1 && v2318:0 < 0
f_445(v1784:0, v1785:0, v1786:0, v1787:0, v1788:0, v1789:0, v1790:0, 1 + v2501:0, 1, v1793:0, v1791:0, v1795:0, v1796:0, v1797:0, v1798:0, 0, 3, 4) -> f_445(v1784:0, v1785:0, v1786:0, v1787:0, v1788:0, v1789:0, v1790:0, v2501:0, 1, v2318:0, 1 + v2501:0, v1795:0, v1796:0, v1797:0, v1798:0, 0, 3, 4) :|: v1791:0 > 1 && v2501:0 > -1 && v1788:0 > 1 && v2318:0 > 0
Filtered unneeded arguments:
   f_445(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18) -> f_445(x5, x8, x11)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_445(v1788:0, sum~cons_1~v2501:0, v1791:0) -> f_445(v1788:0, v2501:0, 1 + v2501:0) :|: v2501:0 > -1 && v1788:0 > 1 && v1791:0 > 1 && sum~cons_1~v2501:0 = 1 + v2501:0

----------------------------------------

(139)
Obligation:
Rules:
f_445(v1788:0, sum~cons_1~v2501:0, v1791:0) -> f_445(v1788:0, v2501:0, 1 + v2501:0) :|: v2501:0 > -1 && v1788:0 > 1 && v1791:0 > 1 && sum~cons_1~v2501:0 = 1 + v2501:0

----------------------------------------

(140) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(141)
Obligation:
Rules:
f_445(v1788:0:0, sum~cons_1~v2501:0:0, v1791:0:0) -> f_445(v1788:0:0, v2501:0:0, 1 + v2501:0:0) :|: v2501:0:0 > -1 && v1788:0:0 > 1 && v1791:0:0 > 1 && sum~cons_1~v2501:0:0 = 1 + v2501:0:0

----------------------------------------

(142) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_445 ] = f_445_2

The following rules are decreasing:
f_445(v1788:0:0, sum~cons_1~v2501:0:0, v1791:0:0) -> f_445(v1788:0:0, v2501:0:0, 1 + v2501:0:0) :|: v2501:0:0 > -1 && v1788:0:0 > 1 && v1791:0:0 > 1 && sum~cons_1~v2501:0:0 = 1 + v2501:0:0

The following rules are bounded:
f_445(v1788:0:0, sum~cons_1~v2501:0:0, v1791:0:0) -> f_445(v1788:0:0, v2501:0:0, 1 + v2501:0:0) :|: v2501:0:0 > -1 && v1788:0:0 > 1 && v1791:0:0 > 1 && sum~cons_1~v2501:0:0 = 1 + v2501:0:0


----------------------------------------

(143)
YES
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.001s
