YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/dXv6W.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could be proven:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 19 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 4468 ms]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 1 ms]
(6) AND
    (7) LLVM Symbolic Execution SCC
        (8) SCC2IRS [SOUND, 78 ms]
        (9) IntTRS
        (10) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (11) IntTRS
        (12) PolynomialOrderProcessor [EQUIVALENT, 5 ms]
        (13) IntTRS
        (14) TerminationGraphProcessor [EQUIVALENT, 0 ms]
        (15) YES
    (16) LLVM Symbolic Execution SCC
        (17) SCC2IRS [SOUND, 46 ms]
        (18) IntTRS
        (19) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (20) IntTRS
        (21) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
        (22) IntTRS
        (23) PolynomialOrderProcessor [EQUIVALENT, 5 ms]
        (24) YES


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/dXv6W.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/dXv6W.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "cstrreplace" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: (0 *i8, 1 i8 signext, 2 i8 signext) variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 10
	0:
		%4 = alloca *i8, align 8
		%5 = alloca i8, align 1
		%6 = alloca i8, align 1
		%7 = alloca *i8, align 8
		%8 = alloca i32, align 4
		store %0, %4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %4)
		store %1, %5
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i8 %5)
		store %2, %6
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i8 %6)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %7)
		%9 = load %4
		store %9, %7
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %8)
		store 0, %8
		br %10
	10:
		%11 = load %7
		%12 = load %11
		%13 = sext i8 %12 to i32
		%14 = icmp ne %13 0
		br %14, %15, %30
	15:
		%16 = load %7
		%17 = load %16
		%18 = sext i8 %17 to i32
		%19 = load %5
		%20 = sext i8 %19 to i32
		%21 = icmp eq %18 %20
		br %21, %22, %27
	22:
		%23 = load %6
		%24 = load %7
		store %23, %24
		%25 = load %8
		%26 = add i32 %25, 1
		store %26, %8
		br %27
	27:
		%28 = load %7
		%29 = getelementptr %28, 1
		store %29, %7
		br %10
	30:
		%31 = load %8
		ret %31

*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 48
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		%3 = alloca *i8, align 8
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		%4 = call i32 @__VERIFIER_nondet_int()
		store %4, %2
		%5 = load %2
		%6 = icmp slt %5 1
		br %6, %7, %8
	7:
		store 1, %2
		br %8
	8:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %3)
		%9 = load %2
		%10 = sext i32 %9 to i64
		%11 = mul i64 %10, 1
		%12 = alloca i8, numElementsLit: %11, align 16
		store %12, %3
		%13 = load %3
		%14 = load %2
		%15 = sub i32 %14, 1
		%16 = sext i32 %15 to i64
		%17 = getelementptr %13, %16
		store 0, %17
		%18 = load %3
		%19 = call i32 @__VERIFIER_nondet_int()
		%20 = trunc i32 %19 to i8
		%21 = call i32 @__VERIFIER_nondet_int()
		%22 = trunc i32 %21 to i8
		%23 = call i32 @cstrreplace(*i8 %18, i8 signext %20, i8 signext %22)
		ret %23


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 2 SCCs.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC
----------------------------------------

(8) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 63 rulesP rules:
f_953(v5051, v5052, v5053, v5054, v5055, v5056, v5057, v5058, v5059, 1, v5062, v5063, v5064, v5073, v5065, v5074, v5066, v5075, v5070, v5076, v5077, v5078, v5079, v5061, v5080, 0, v5067, v5069, v5071, v5072, 3, 7, 2, 4, 8) -> f_956(v5051, v5052, v5053, v5054, v5055, v5056, v5057, v5058, v5059, 1, v5092, v5062, v5063, v5064, v5073, v5065, v5074, v5066, v5075, v5070, v5076, v5077, v5078, v5079, v5061, v5080, 0, v5067, v5069, v5071, v5072, 3, 7, 2, 4, 8) :|: v5092 = 1 + v5059 && 3 <= v5092
f_956(v5051, v5052, v5053, v5054, v5055, v5056, v5057, v5058, v5059, 1, v5092, v5062, v5063, v5064, v5073, v5065, v5074, v5066, v5075, v5070, v5076, v5077, v5078, v5079, v5061, v5080, 0, v5067, v5069, v5071, v5072, 3, 7, 2, 4, 8) -> f_959(v5051, v5052, v5053, v5054, v5055, v5056, v5057, v5058, v5059, 1, v5092, v5062, v5063, v5064, v5073, v5065, v5074, v5066, v5075, v5070, v5076, v5077, v5078, v5079, v5061, v5080, 0, v5067, v5069, v5071, v5072, 3, 7, 2, 4, 8) :|: TRUE
f_959(v5051, v5052, v5053, v5054, v5055, v5056, v5057, v5058, v5059, 1, v5092, v5062, v5063, v5064, v5073, v5065, v5074, v5066, v5075, v5070, v5076, v5077, v5078, v5079, v5061, v5080, 0, v5067, v5069, v5071, v5072, 3, 7, 2, 4, 8) -> f_962(v5051, v5052, v5053, v5054, v5055, v5056, v5057, v5058, v5059, 1, v5092, v5062, v5063, v5064, v5073, v5065, v5074, v5066, v5075, v5070, v5076, v5077, v5078, v5079, v5061, v5080, 0, v5067, v5069, v5071, v5072, 3, 7, 2, 4, 8) :|: TRUE
f_962(v5051, v5052, v5053, v5054, v5055, v5056, v5057, v5058, v5059, 1, v5092, v5062, v5063, v5064, v5073, v5065, v5074, v5066, v5075, v5070, v5076, v5077, v5078, v5079, v5061, v5080, 0, v5067, v5069, v5071, v5072, 3, 7, 2, 4, 8) -> f_965(v5051, v5052, v5053, v5054, v5055, v5056, v5057, v5058, v5092, 1, v5059, v5062, v5063, v5064, v5073, v5065, v5074, v5066, v5075, v5070, v5076, v5077, v5078, v5079, v5061, v5080, 0, v5067, v5069, v5071, v5072, 3, 7, 2, 4, 8) :|: 0 = 0
f_965(v5051, v5052, v5053, v5054, v5055, v5056, v5057, v5058, v5092, 1, v5059, v5062, v5063, v5064, v5073, v5065, v5074, v5066, v5075, v5070, v5076, v5077, v5078, v5079, v5061, v5080, 0, v5067, v5069, v5071, v5072, 3, 7, 2, 4, 8) -> f_968(v5051, v5052, v5053, v5054, v5055, v5056, v5057, v5058, v5092, v5226, 1, v5059, v5062, v5063, v5064, v5073, v5065, v5074, v5066, v5075, v5070, v5076, v5077, v5078, v5079, v5061, v5080, 0, v5067, v5069, v5071, v5072, 3, 7, 2, 4, 8) :|: TRUE
f_968(v5051, v5052, v5053, v5054, v5055, v5056, v5057, v5058, v5092, v5226, 1, v5059, v5062, v5063, v5064, v5073, v5065, v5074, v5066, v5075, v5070, v5076, v5077, v5078, v5079, v5061, v5080, 0, v5067, v5069, v5071, v5072, 3, 7, 2, 4, 8) -> f_970(v5051, v5052, v5053, v5054, v5055, v5056, v5057, v5058, v5092, v5226, 1, v5059, v5062, v5063, v5064, v5073, v5065, v5074, v5066, v5075, v5070, v5076, v5077, v5078, v5079, v5061, v5080, 0, v5067, v5069, v5071, v5072, 3, 7, 2, 4, 8) :|: 0 = 0
f_970(v5051, v5052, v5053, v5054, v5055, v5056, v5057, v5058, v5092, v5226, 1, v5059, v5062, v5063, v5064, v5073, v5065, v5074, v5066, v5075, v5070, v5076, v5077, v5078, v5079, v5061, v5080, 0, v5067, v5069, v5071, v5072, 3, 7, 2, 4, 8) -> f_972(v5051, v5052, v5053, v5054, v5055, v5056, v5057, v5058, v5092, v5226, 1, v5059, v5062, v5063, v5064, v5073, v5065, v5074, v5066, v5075, v5070, v5076, v5077, v5078, v5079, v5061, v5080, 0, v5067, v5069, v5071, v5072, 3, 7, 2, 4, 8) :|: v5226 != 0 && v5092 < v5070 && 4 <= v5070
f_972(v5051, v5052, v5053, v5054, v5055, v5056, v5057, v5058, v5092, v5226, 1, v5059, v5062, v5063, v5064, v5073, v5065, v5074, v5066, v5075, v5070, v5076, v5077, v5078, v5079, v5061, v5080, 0, v5067, v5069, v5071, v5072, 3, 7, 2, 4, 8) -> f_975(v5051, v5052, v5053, v5054, v5055, v5056, v5057, v5058, v5092, v5226, 1, v5059, v5062, v5063, v5064, v5073, v5065, v5074, v5066, v5075, v5070, v5076, v5077, v5078, v5079, v5061, v5080, 0, v5067, v5069, v5071, v5072, 3, 7, 2, 4, 8) :|: 0 = 0
f_975(v5051, v5052, v5053, v5054, v5055, v5056, v5057, v5058, v5092, v5226, 1, v5059, v5062, v5063, v5064, v5073, v5065, v5074, v5066, v5075, v5070, v5076, v5077, v5078, v5079, v5061, v5080, 0, v5067, v5069, v5071, v5072, 3, 7, 2, 4, 8) -> f_979(v5051, v5052, v5053, v5054, v5055, v5056, v5057, v5058, v5092, v5226, 1, v5059, v5062, v5063, v5064, v5073, v5065, v5074, v5066, v5075, v5070, v5076, v5077, v5078, v5079, v5061, v5080, 0, v5067, v5069, v5071, v5072, 3, 7, 2, 4, 8) :|: TRUE
f_979(v5051, v5052, v5053, v5054, v5055, v5056, v5057, v5058, v5092, v5226, 1, v5059, v5062, v5063, v5064, v5073, v5065, v5074, v5066, v5075, v5070, v5076, v5077, v5078, v5079, v5061, v5080, 0, v5067, v5069, v5071, v5072, 3, 7, 2, 4, 8) -> f_980(v5051, v5052, v5053, v5054, v5055, v5056, v5057, v5058, v5092, v5226, 1, v5059, v5062, v5063, v5064, v5073, v5065, v5074, v5066, v5075, v5070, v5076, v5077, v5078, v5079, 0, v5067, v5273, v5275, v5276, 3, 7, 2, 4, 8) :|: TRUE
f_980(v5254, v5255, v5256, v5257, v5258, v5259, v5260, v5261, v5262, v5263, 1, v5265, v5266, v5267, v5268, v5277, v5269, v5278, v5270, v5279, v5274, v5280, v5281, v5282, v5283, 0, v5271, v5273, v5275, v5276, 3, 7, 2, 4, 8) -> f_982(v5254, v5255, v5256, v5257, v5258, v5259, v5260, v5261, v5262, v5263, 1, v5265, v5266, v5267, v5268, v5277, v5269, v5278, v5270, v5279, v5274, v5280, v5281, v5282, v5283, 0, v5271, v5273, v5275, v5276, 3, 7, 2, 4, 8) :|: 0 = 0
f_982(v5254, v5255, v5256, v5257, v5258, v5259, v5260, v5261, v5262, v5263, 1, v5265, v5266, v5267, v5268, v5277, v5269, v5278, v5270, v5279, v5274, v5280, v5281, v5282, v5283, 0, v5271, v5273, v5275, v5276, 3, 7, 2, 4, 8) -> f_984(v5254, v5255, v5256, v5257, v5258, v5259, v5260, v5261, v5262, v5263, 1, v5265, v5266, v5267, v5268, v5277, v5269, v5278, v5270, v5279, v5274, v5280, v5281, v5282, v5283, 0, v5271, v5273, v5275, v5276, 3, 7, 2, 4, 8) :|: 0 = 0
f_984(v5254, v5255, v5256, v5257, v5258, v5259, v5260, v5261, v5262, v5263, 1, v5265, v5266, v5267, v5268, v5277, v5269, v5278, v5270, v5279, v5274, v5280, v5281, v5282, v5283, 0, v5271, v5273, v5275, v5276, 3, 7, 2, 4, 8) -> f_986(v5254, v5255, v5256, v5257, v5258, v5259, v5260, v5261, v5262, v5263, 1, v5265, v5266, v5267, v5268, v5277, v5269, v5278, v5270, v5279, v5274, v5280, v5281, v5282, v5283, 0, v5271, v5273, v5275, v5276, 3, 7, 2, 4, 8) :|: 0 = 0
f_986(v5254, v5255, v5256, v5257, v5258, v5259, v5260, v5261, v5262, v5263, 1, v5265, v5266, v5267, v5268, v5277, v5269, v5278, v5270, v5279, v5274, v5280, v5281, v5282, v5283, 0, v5271, v5273, v5275, v5276, 3, 7, 2, 4, 8) -> f_987(v5254, v5255, v5256, v5257, v5258, v5259, v5260, v5261, v5262, v5263, 1, v5265, v5266, v5267, v5268, v5277, v5269, v5278, v5270, v5279, v5274, v5280, v5281, v5282, v5283, 0, v5271, v5273, v5275, v5276, 3, 7, 2, 4, 8) :|: 0 = 0
f_987(v5254, v5255, v5256, v5257, v5258, v5259, v5260, v5261, v5262, v5263, 1, v5265, v5266, v5267, v5268, v5277, v5269, v5278, v5270, v5279, v5274, v5280, v5281, v5282, v5283, 0, v5271, v5273, v5275, v5276, 3, 7, 2, 4, 8) -> f_988(v5254, v5255, v5256, v5257, v5258, v5259, v5260, v5261, v5262, v5263, 1, v5265, v5266, v5267, v5268, v5277, v5269, v5278, v5270, v5279, v5274, v5280, v5281, v5282, v5283, 0, v5271, v5273, v5275, v5276, 3, 7, 2, 4, 8) :|: 0 = 0
f_988(v5254, v5255, v5256, v5257, v5258, v5259, v5260, v5261, v5262, v5263, 1, v5265, v5266, v5267, v5268, v5277, v5269, v5278, v5270, v5279, v5274, v5280, v5281, v5282, v5283, 0, v5271, v5273, v5275, v5276, 3, 7, 2, 4, 8) -> f_989(v5254, v5255, v5256, v5257, v5258, v5259, v5260, v5261, v5262, 1, v5265, v5266, v5267, v5268, v5277, v5269, v5278, v5270, v5279, v5274, v5280, v5281, v5282, v5283, 0, v5271, v5273, v5275, v5276, 3, 7, 2, 4, 8) :|: v5263 = v5255
f_988(v5254, v5255, v5256, v5257, v5258, v5259, v5260, v5261, v5262, v5263, 1, v5265, v5266, v5267, v5268, v5277, v5269, v5278, v5270, v5279, v5274, v5280, v5281, v5282, v5283, 0, v5271, v5273, v5275, v5276, 3, 7, 2, 4, 8) -> f_990(v5254, v5255, v5256, v5257, v5258, v5259, v5260, v5261, v5262, v5263, 1, v5265, v5266, v5267, v5268, v5277, v5269, v5278, v5270, v5279, v5274, v5280, v5281, v5282, v5283, 0, v5271, v5273, v5275, v5276, 3, 7, 2, 4, 8) :|: v5263 != v5255
f_989(v5254, v5255, v5256, v5257, v5258, v5259, v5260, v5261, v5262, 1, v5265, v5266, v5267, v5268, v5277, v5269, v5278, v5270, v5279, v5274, v5280, v5281, v5282, v5283, 0, v5271, v5273, v5275, v5276, 3, 7, 2, 4, 8) -> f_991(v5254, v5255, v5256, v5257, v5258, v5259, v5260, v5261, v5262, 1, v5265, v5266, v5267, v5268, v5277, v5269, v5278, v5270, v5279, v5274, v5280, v5281, v5282, v5283, 0, v5271, v5273, v5275, v5276, 3, 7, 2, 4, 8) :|: 0 = 0
f_991(v5254, v5255, v5256, v5257, v5258, v5259, v5260, v5261, v5262, 1, v5265, v5266, v5267, v5268, v5277, v5269, v5278, v5270, v5279, v5274, v5280, v5281, v5282, v5283, 0, v5271, v5273, v5275, v5276, 3, 7, 2, 4, 8) -> f_993(v5254, v5255, v5256, v5257, v5258, v5259, v5260, v5261, v5262, 1, v5265, v5266, v5267, v5268, v5277, v5269, v5278, v5270, v5279, v5274, v5280, v5281, v5282, v5283, 0, v5271, v5273, v5275, v5276, 3, 7, 2, 4, 8) :|: TRUE
f_993(v5254, v5255, v5256, v5257, v5258, v5259, v5260, v5261, v5262, 1, v5265, v5266, v5267, v5268, v5277, v5269, v5278, v5270, v5279, v5274, v5280, v5281, v5282, v5283, 0, v5271, v5273, v5275, v5276, 3, 7, 2, 4, 8) -> f_1027(v5254, v5255, v5256, v5257, v5258, v5259, v5260, v5261, v5262, 1, v5265, v5266, v5267, v5265, v5268, v5277, v5269, v5278, v5270, v5279, v5274, v5280, v5281, v5282, v5283, v5256, 0, v5271, v5682, v5684, v5685, 3, 7, 2, 4, 8) :|: TRUE
f_1027(v5663, v5664, v5665, v5666, v5667, v5668, v5669, v5670, v5671, 1, v5673, v5674, v5675, v5676, v5677, v5686, v5678, v5687, v5679, v5688, v5683, v5689, v5690, v5691, v5692, v5693, 0, v5680, v5682, v5684, v5685, 3, 7, 2, 4, 8) -> f_1030(v5663, v5664, v5665, v5666, v5667, v5668, v5669, v5670, v5671, 1, v5673, v5674, v5675, v5676, v5677, v5686, v5678, v5687, v5679, v5688, v5683, v5689, v5690, v5691, v5692, v5693, 0, v5680, v5682, v5684, v5685, 3, 7, 2, 4, 8) :|: 0 = 0
f_1030(v5663, v5664, v5665, v5666, v5667, v5668, v5669, v5670, v5671, 1, v5673, v5674, v5675, v5676, v5677, v5686, v5678, v5687, v5679, v5688, v5683, v5689, v5690, v5691, v5692, v5693, 0, v5680, v5682, v5684, v5685, 3, 7, 2, 4, 8) -> f_1032(v5663, v5664, v5665, v5666, v5667, v5668, v5669, v5670, v5671, 1, v5674, v5675, v5676, v5677, v5686, v5678, v5687, v5679, v5688, v5683, v5689, v5690, v5691, v5692, v5673, v5693, 0, v5680, v5682, v5684, v5685, 3, 7, 2, 4, 8) :|: 0 = 0
f_1032(v5663, v5664, v5665, v5666, v5667, v5668, v5669, v5670, v5671, 1, v5674, v5675, v5676, v5677, v5686, v5678, v5687, v5679, v5688, v5683, v5689, v5690, v5691, v5692, v5673, v5693, 0, v5680, v5682, v5684, v5685, 3, 7, 2, 4, 8) -> f_1034(v5663, v5664, v5665, v5666, v5667, v5668, v5669, v5670, v5671, 1, v5674, v5675, v5676, v5677, v5686, v5678, v5687, v5679, v5688, v5683, v5689, v5690, v5691, v5692, v5673, v5693, 0, v5680, v5682, v5684, v5685, 3, 7, 2, 4, 8) :|: TRUE
f_1034(v5663, v5664, v5665, v5666, v5667, v5668, v5669, v5670, v5671, 1, v5674, v5675, v5676, v5677, v5686, v5678, v5687, v5679, v5688, v5683, v5689, v5690, v5691, v5692, v5673, v5693, 0, v5680, v5682, v5684, v5685, 3, 7, 2, 4, 8) -> f_1036(v5663, v5664, v5665, v5666, v5667, v5668, v5669, v5670, v5671, 1, v5675, v5676, v5677, v5686, v5678, v5687, v5679, v5688, v5683, v5689, v5690, v5691, v5692, v5673, v5693, 0, v5680, v5682, v5684, v5685, 3, 7, 2, 4, 8) :|: 0 = 0
f_1036(v5663, v5664, v5665, v5666, v5667, v5668, v5669, v5670, v5671, 1, v5675, v5676, v5677, v5686, v5678, v5687, v5679, v5688, v5683, v5689, v5690, v5691, v5692, v5673, v5693, 0, v5680, v5682, v5684, v5685, 3, 7, 2, 4, 8) -> f_1038(v5663, v5664, v5665, v5666, v5667, v5668, v5669, v5670, v5671, 1, v5675, v5826, v5676, v5677, v5686, v5678, v5687, v5679, v5688, v5683, v5689, v5690, v5691, v5692, v5673, v5693, 0, v5680, v5682, v5684, v5685, 3, 7, 2, 4, 8) :|: v5826 = 1 + v5675 && 2 <= v5826
f_1038(v5663, v5664, v5665, v5666, v5667, v5668, v5669, v5670, v5671, 1, v5675, v5826, v5676, v5677, v5686, v5678, v5687, v5679, v5688, v5683, v5689, v5690, v5691, v5692, v5673, v5693, 0, v5680, v5682, v5684, v5685, 3, 7, 2, 4, 8) -> f_1040(v5663, v5664, v5665, v5666, v5667, v5668, v5669, v5670, v5671, 1, v5675, v5826, v5676, v5677, v5686, v5678, v5687, v5679, v5688, v5683, v5689, v5690, v5691, v5692, v5673, v5693, 0, v5680, v5682, v5684, v5685, 3, 7, 2, 4, 8) :|: TRUE
f_1040(v5663, v5664, v5665, v5666, v5667, v5668, v5669, v5670, v5671, 1, v5675, v5826, v5676, v5677, v5686, v5678, v5687, v5679, v5688, v5683, v5689, v5690, v5691, v5692, v5673, v5693, 0, v5680, v5682, v5684, v5685, 3, 7, 2, 4, 8) -> f_1042(v5663, v5664, v5665, v5666, v5667, v5668, v5669, v5670, v5671, 1, v5675, v5826, v5676, v5677, v5686, v5678, v5687, v5679, v5688, v5683, v5689, v5690, v5691, v5692, v5673, v5693, 0, v5680, v5682, v5684, v5685, 3, 7, 2, 4, 8) :|: TRUE
f_1042(v5663, v5664, v5665, v5666, v5667, v5668, v5669, v5670, v5671, 1, v5675, v5826, v5676, v5677, v5686, v5678, v5687, v5679, v5688, v5683, v5689, v5690, v5691, v5692, v5673, v5693, 0, v5680, v5682, v5684, v5685, 3, 7, 2, 4, 8) -> f_951(v5663, v5664, v5665, v5666, v5667, v5668, v5669, v5670, v5671, 1, v5676, v5675, v5826, v5677, v5686, v5678, v5687, v5679, v5688, v5683, v5689, v5690, v5691, v5692, v5693, 0, v5680, v5069, v5071, v5072, 3, 7, 2, 4, 8) :|: TRUE
f_951(v5051, v5052, v5053, v5054, v5055, v5056, v5057, v5058, v5059, 1, v5061, v5062, v5063, v5064, v5073, v5065, v5074, v5066, v5075, v5070, v5076, v5077, v5078, v5079, v5080, 0, v5067, v5069, v5071, v5072, 3, 7, 2, 4, 8) -> f_953(v5051, v5052, v5053, v5054, v5055, v5056, v5057, v5058, v5059, 1, v5062, v5063, v5064, v5073, v5065, v5074, v5066, v5075, v5070, v5076, v5077, v5078, v5079, v5061, v5080, 0, v5067, v5069, v5071, v5072, 3, 7, 2, 4, 8) :|: 0 = 0
f_990(v5254, v5255, v5256, v5257, v5258, v5259, v5260, v5261, v5262, v5263, 1, v5265, v5266, v5267, v5268, v5277, v5269, v5278, v5270, v5279, v5274, v5280, v5281, v5282, v5283, 0, v5271, v5273, v5275, v5276, 3, 7, 2, 4, 8) -> f_992(v5254, v5255, v5256, v5257, v5258, v5259, v5260, v5261, v5262, v5263, 1, 0, v5265, v5266, v5267, v5268, v5277, v5269, v5278, v5270, v5279, v5274, v5280, v5281, v5282, v5283, v5271, v5273, v5275, v5276, 3, 7, 2, 4, 8) :|: 0 = 0
f_992(v5254, v5255, v5256, v5257, v5258, v5259, v5260, v5261, v5262, v5263, 1, 0, v5265, v5266, v5267, v5268, v5277, v5269, v5278, v5270, v5279, v5274, v5280, v5281, v5282, v5283, v5271, v5273, v5275, v5276, 3, 7, 2, 4, 8) -> f_994(v5254, v5255, v5256, v5257, v5258, v5259, v5260, v5261, v5262, v5263, 1, 0, v5265, v5266, v5267, v5268, v5277, v5269, v5278, v5270, v5279, v5274, v5280, v5281, v5282, v5283, v5271, v5273, v5275, v5276, 3, 7, 2, 4, 8) :|: TRUE
f_994(v5254, v5255, v5256, v5257, v5258, v5259, v5260, v5261, v5262, v5263, 1, 0, v5265, v5266, v5267, v5268, v5277, v5269, v5278, v5270, v5279, v5274, v5280, v5281, v5282, v5283, v5271, v5273, v5275, v5276, 3, 7, 2, 4, 8) -> f_1029(v5254, v5255, v5256, v5257, v5258, v5259, v5260, v5261, v5262, v5263, 1, 0, v5265, v5266, v5267, v5265, v5268, v5277, v5269, v5278, v5270, v5279, v5274, v5280, v5281, v5282, v5283, v5256, v5271, v5762, v5764, v5765, 3, 7, 2, 4, 8) :|: TRUE
f_1029(v5742, v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 1, 0, v5754, v5755, v5756, v5757, v5758, v5766, v5759, v5767, v5760, v5768, v5763, v5769, v5770, v5771, v5772, v5773, v5761, v5762, v5764, v5765, 3, 7, 2, 4, 8) -> f_1063(v5742, v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 1, 0, v5754, v5755, v5756, v5757, v5758, v5766, v5759, v5767, v5760, v5768, v5763, v5769, v5770, v5771, v5772, v5773, v5761, v6114, v6116, v6117, 3, 7, 2, 4, 8) :|: TRUE
f_1063(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6102, v6103, 1, 0, v6106, v6107, v6108, v6109, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) -> f_1064(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6102, v6103, 1, 0, v6106, v6107, v6108, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) :|: 0 = 0
f_1064(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6102, v6103, 1, 0, v6106, v6107, v6108, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) -> f_1065(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6102, v6103, 1, 0, v6106, v6107, v6108, v6126, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) :|: v6126 = 1 + v6102 && 3 <= v6126
f_1065(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6102, v6103, 1, 0, v6106, v6107, v6108, v6126, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) -> f_1066(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6102, v6103, 1, 0, v6106, v6107, v6108, v6126, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) :|: TRUE
f_1066(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6102, v6103, 1, 0, v6106, v6107, v6108, v6126, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) -> f_1067(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6102, v6103, 1, 0, v6106, v6107, v6108, v6126, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) :|: TRUE
f_1067(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6102, v6103, 1, 0, v6106, v6107, v6108, v6126, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) -> f_1068(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, v6103, 1, v6102, 0, v6106, v6107, v6108, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) :|: 0 = 0
f_1068(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, v6103, 1, v6102, 0, v6106, v6107, v6108, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) -> f_1069(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, v6177, v6103, 1, v6102, 0, v6106, v6107, v6108, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) :|: TRUE
f_1069(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, v6177, v6103, 1, v6102, 0, v6106, v6107, v6108, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) -> f_1070(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, v6177, 1, v6102, v6103, 0, v6106, v6107, v6108, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) :|: 0 = 0
f_1070(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, v6177, 1, v6102, v6103, 0, v6106, v6107, v6108, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) -> f_1071(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, v6177, 1, v6102, v6103, 0, v6106, v6107, v6108, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) :|: v6177 != 0 && v6126 < v6115 && 4 <= v6115
f_1071(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, v6177, 1, v6102, v6103, 0, v6106, v6107, v6108, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) -> f_1073(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, v6177, 1, v6102, v6103, 0, v6106, v6107, v6108, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) :|: 0 = 0
f_1073(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, v6177, 1, v6102, v6103, 0, v6106, v6107, v6108, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) -> f_1075(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, v6177, 1, v6102, v6103, 0, v6106, v6107, v6108, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) :|: TRUE
f_1075(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, v6177, 1, v6102, v6103, 0, v6106, v6107, v6108, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) -> f_1077(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, v6177, 1, v6103, 0, v6106, v6107, v6108, v6102, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) :|: 0 = 0
f_1077(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, v6177, 1, v6103, 0, v6106, v6107, v6108, v6102, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) -> f_1079(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, v6177, 1, v6103, 0, v6106, v6107, v6108, v6102, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) :|: 0 = 0
f_1079(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, v6177, 1, v6103, 0, v6106, v6107, v6108, v6102, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) -> f_1081(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, v6177, 1, 0, v6106, v6107, v6108, v6102, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6103, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) :|: 0 = 0
f_1081(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, v6177, 1, 0, v6106, v6107, v6108, v6102, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6103, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) -> f_1082(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, v6177, 1, 0, v6106, v6107, v6108, v6102, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6103, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) :|: 0 = 0
f_1082(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, v6177, 1, 0, v6106, v6107, v6108, v6102, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6103, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) -> f_1083(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, v6177, 1, 0, v6106, v6107, v6108, v6102, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6103, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) :|: 0 = 0
f_1083(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, v6177, 1, 0, v6106, v6107, v6108, v6102, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6103, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) -> f_1084(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, 1, 0, v6106, v6107, v6108, v6102, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6103, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) :|: v6177 = v6095
f_1083(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, v6177, 1, 0, v6106, v6107, v6108, v6102, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6103, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) -> f_1085(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, v6177, 1, 0, v6106, v6107, v6108, v6102, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6103, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) :|: v6177 != v6095
f_1084(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, 1, 0, v6106, v6107, v6108, v6102, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6103, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) -> f_1086(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, 1, v6106, v6107, v6108, v6102, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6103, v6109, v6125, 0, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) :|: 0 = 0
f_1086(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, 1, v6106, v6107, v6108, v6102, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6103, v6109, v6125, 0, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) -> f_1088(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, 1, v6106, v6107, v6108, v6102, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6103, v6109, v6125, 0, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) :|: TRUE
f_1088(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, 1, v6106, v6107, v6108, v6102, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6103, v6109, v6125, 0, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) -> f_1090(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, 1, v6106, v6107, v6108, v6102, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6103, v6109, v6125, 0, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) :|: 0 = 0
f_1090(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, 1, v6106, v6107, v6108, v6102, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6103, v6109, v6125, 0, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) -> f_1091(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, 1, v6107, v6108, v6102, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6103, v6106, v6109, v6125, 0, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) :|: 0 = 0
f_1091(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, 1, v6107, v6108, v6102, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6103, v6106, v6109, v6125, 0, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) -> f_1092(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, 1, v6107, v6108, v6102, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6103, v6106, v6109, v6125, 0, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) :|: TRUE
f_1092(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, 1, v6107, v6108, v6102, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6103, v6106, v6109, v6125, 0, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) -> f_1093(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, 1, v6108, v6102, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6103, v6106, v6109, v6125, 0, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) :|: 0 = 0
f_1093(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, 1, v6108, v6102, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6103, v6106, v6109, v6125, 0, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) -> f_1094(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, 1, v6108, v6407, v6102, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6103, v6106, v6109, v6125, 0, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) :|: v6407 = 1 + v6108 && 2 <= v6407
f_1094(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, 1, v6108, v6407, v6102, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6103, v6106, v6109, v6125, 0, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) -> f_1095(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, 1, v6108, v6407, v6102, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6103, v6106, v6109, v6125, 0, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) :|: TRUE
f_1095(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, 1, v6108, v6407, v6102, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6103, v6106, v6109, v6125, 0, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) -> f_1096(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, 1, v6108, v6407, v6102, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6103, v6106, v6109, v6125, 0, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) :|: TRUE
f_1096(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, 1, v6108, v6407, v6102, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6103, v6106, v6109, v6125, 0, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) -> f_951(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, 1, v6102, v6108, v6407, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6103, 0, v6113, v5069, v5071, v5072, 3, 7, 2, 4, 8) :|: TRUE
f_1085(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, v6177, 1, 0, v6106, v6107, v6108, v6102, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6103, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) -> f_1087(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, v6177, 1, 0, v6106, v6107, v6108, v6102, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6103, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) :|: 0 = 0
f_1087(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, v6177, 1, 0, v6106, v6107, v6108, v6102, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6103, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) -> f_1089(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, v6177, 1, 0, v6106, v6107, v6108, v6102, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6103, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) :|: TRUE
f_1089(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, v6177, 1, 0, v6106, v6107, v6108, v6102, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6103, v6109, v6125, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) -> f_1063(v6094, v6095, v6096, v6097, v6098, v6099, v6100, v6101, v6126, v6177, 1, 0, v6106, v6107, v6108, v6102, v6110, v6118, v6111, v6119, v6112, v6120, v6115, v6121, v6122, v6123, v6124, v6103, v6113, v6114, v6116, v6117, 3, 7, 2, 4, 8) :|: TRUE
Combined rules. Obtained 15 rulesP rules:
f_953(v5051:0, v5052:0, v5053:0, v5054:0, v5055:0, v5056:0, v5057:0, v5058:0, v5059:0, 1, v5062:0, v5063:0, v5064:0, v5073:0, v5065:0, v5074:0, v5066:0, v5075:0, v5070:0, v5076:0, v5077:0, v5078:0, v5079:0, v5061:0, v5080:0, 0, v5067:0, v5069:0, v5071:0, v5072:0, 3, 7, 2, 4, 8) -> f_1083(v5051:0, v5052:0, v5053:0, v5054:0, v5055:0, v5056:0, v5057:0, v5058:0, 1 + (1 + v5059:0), v6177:0, 1, 0, v5059:0, v5062:0, v5063:0, 1 + v5059:0, v5064:0, v5073:0, v5065:0, v5074:0, v5066:0, v5075:0, v5070:0, v5076:0, v5077:0, v5078:0, v5079:0, v5226:0, v5059:0, v5053:0, v5067:0, v6114:0, v6116:0, v6117:0, 3, 7, 2, 4, 8) :|: v5059:0 > 1 && v5070:0 > 1 + v5059:0 && v5226:0 < 0 && v5070:0 > 3 && v5226:0 < v5052:0 && v5070:0 > 1 + (1 + v5059:0) && v6177:0 < 0
f_953(v5051:0, v5052:0, v5053:0, v5054:0, v5055:0, v5056:0, v5057:0, v5058:0, v5059:0, 1, v5062:0, v5063:0, v5064:0, v5073:0, v5065:0, v5074:0, v5066:0, v5075:0, v5070:0, v5076:0, v5077:0, v5078:0, v5079:0, v5061:0, v5080:0, 0, v5067:0, v5069:0, v5071:0, v5072:0, 3, 7, 2, 4, 8) -> f_1083(v5051:0, v5052:0, v5053:0, v5054:0, v5055:0, v5056:0, v5057:0, v5058:0, 1 + (1 + v5059:0), v6177:0, 1, 0, v5059:0, v5062:0, v5063:0, 1 + v5059:0, v5064:0, v5073:0, v5065:0, v5074:0, v5066:0, v5075:0, v5070:0, v5076:0, v5077:0, v5078:0, v5079:0, v5226:0, v5059:0, v5053:0, v5067:0, v6114:0, v6116:0, v6117:0, 3, 7, 2, 4, 8) :|: v5059:0 > 1 && v5070:0 > 1 + v5059:0 && v5226:0 < 0 && v5070:0 > 3 && v5226:0 < v5052:0 && v5070:0 > 1 + (1 + v5059:0) && v6177:0 > 0
f_953(v5051:0, v5052:0, v5053:0, v5054:0, v5055:0, v5056:0, v5057:0, v5058:0, v5059:0, 1, v5062:0, v5063:0, v5064:0, v5073:0, v5065:0, v5074:0, v5066:0, v5075:0, v5070:0, v5076:0, v5077:0, v5078:0, v5079:0, v5061:0, v5080:0, 0, v5067:0, v5069:0, v5071:0, v5072:0, 3, 7, 2, 4, 8) -> f_1083(v5051:0, v5052:0, v5053:0, v5054:0, v5055:0, v5056:0, v5057:0, v5058:0, 1 + (1 + v5059:0), v6177:0, 1, 0, v5059:0, v5062:0, v5063:0, 1 + v5059:0, v5064:0, v5073:0, v5065:0, v5074:0, v5066:0, v5075:0, v5070:0, v5076:0, v5077:0, v5078:0, v5079:0, v5226:0, v5059:0, v5053:0, v5067:0, v6114:0, v6116:0, v6117:0, 3, 7, 2, 4, 8) :|: v5059:0 > 1 && v5070:0 > 1 + v5059:0 && v5226:0 < 0 && v5070:0 > 3 && v5226:0 > v5052:0 && v5070:0 > 1 + (1 + v5059:0) && v6177:0 < 0
f_953(v5051:0, v5052:0, v5053:0, v5054:0, v5055:0, v5056:0, v5057:0, v5058:0, v5059:0, 1, v5062:0, v5063:0, v5064:0, v5073:0, v5065:0, v5074:0, v5066:0, v5075:0, v5070:0, v5076:0, v5077:0, v5078:0, v5079:0, v5061:0, v5080:0, 0, v5067:0, v5069:0, v5071:0, v5072:0, 3, 7, 2, 4, 8) -> f_1083(v5051:0, v5052:0, v5053:0, v5054:0, v5055:0, v5056:0, v5057:0, v5058:0, 1 + (1 + v5059:0), v6177:0, 1, 0, v5059:0, v5062:0, v5063:0, 1 + v5059:0, v5064:0, v5073:0, v5065:0, v5074:0, v5066:0, v5075:0, v5070:0, v5076:0, v5077:0, v5078:0, v5079:0, v5226:0, v5059:0, v5053:0, v5067:0, v6114:0, v6116:0, v6117:0, 3, 7, 2, 4, 8) :|: v5059:0 > 1 && v5070:0 > 1 + v5059:0 && v5226:0 < 0 && v5070:0 > 3 && v5226:0 > v5052:0 && v5070:0 > 1 + (1 + v5059:0) && v6177:0 > 0
f_953(v5051:0, v5052:0, v5053:0, v5054:0, v5055:0, v5056:0, v5057:0, v5058:0, v5059:0, 1, v5062:0, v5063:0, v5064:0, v5073:0, v5065:0, v5074:0, v5066:0, v5075:0, v5070:0, v5076:0, v5077:0, v5078:0, v5079:0, v5061:0, v5080:0, 0, v5067:0, v5069:0, v5071:0, v5072:0, 3, 7, 2, 4, 8) -> f_1083(v5051:0, v5052:0, v5053:0, v5054:0, v5055:0, v5056:0, v5057:0, v5058:0, 1 + (1 + v5059:0), v6177:0, 1, 0, v5059:0, v5062:0, v5063:0, 1 + v5059:0, v5064:0, v5073:0, v5065:0, v5074:0, v5066:0, v5075:0, v5070:0, v5076:0, v5077:0, v5078:0, v5079:0, v5226:0, v5059:0, v5053:0, v5067:0, v6114:0, v6116:0, v6117:0, 3, 7, 2, 4, 8) :|: v5059:0 > 1 && v5070:0 > 1 + v5059:0 && v5226:0 > 0 && v5070:0 > 3 && v5226:0 < v5052:0 && v5070:0 > 1 + (1 + v5059:0) && v6177:0 < 0
f_953(v5051:0, v5052:0, v5053:0, v5054:0, v5055:0, v5056:0, v5057:0, v5058:0, v5059:0, 1, v5062:0, v5063:0, v5064:0, v5073:0, v5065:0, v5074:0, v5066:0, v5075:0, v5070:0, v5076:0, v5077:0, v5078:0, v5079:0, v5061:0, v5080:0, 0, v5067:0, v5069:0, v5071:0, v5072:0, 3, 7, 2, 4, 8) -> f_1083(v5051:0, v5052:0, v5053:0, v5054:0, v5055:0, v5056:0, v5057:0, v5058:0, 1 + (1 + v5059:0), v6177:0, 1, 0, v5059:0, v5062:0, v5063:0, 1 + v5059:0, v5064:0, v5073:0, v5065:0, v5074:0, v5066:0, v5075:0, v5070:0, v5076:0, v5077:0, v5078:0, v5079:0, v5226:0, v5059:0, v5053:0, v5067:0, v6114:0, v6116:0, v6117:0, 3, 7, 2, 4, 8) :|: v5059:0 > 1 && v5070:0 > 1 + v5059:0 && v5226:0 > 0 && v5070:0 > 3 && v5226:0 < v5052:0 && v5070:0 > 1 + (1 + v5059:0) && v6177:0 > 0
f_953(v5051:0, v5052:0, v5053:0, v5054:0, v5055:0, v5056:0, v5057:0, v5058:0, v5059:0, 1, v5062:0, v5063:0, v5064:0, v5073:0, v5065:0, v5074:0, v5066:0, v5075:0, v5070:0, v5076:0, v5077:0, v5078:0, v5079:0, v5061:0, v5080:0, 0, v5067:0, v5069:0, v5071:0, v5072:0, 3, 7, 2, 4, 8) -> f_1083(v5051:0, v5052:0, v5053:0, v5054:0, v5055:0, v5056:0, v5057:0, v5058:0, 1 + (1 + v5059:0), v6177:0, 1, 0, v5059:0, v5062:0, v5063:0, 1 + v5059:0, v5064:0, v5073:0, v5065:0, v5074:0, v5066:0, v5075:0, v5070:0, v5076:0, v5077:0, v5078:0, v5079:0, v5226:0, v5059:0, v5053:0, v5067:0, v6114:0, v6116:0, v6117:0, 3, 7, 2, 4, 8) :|: v5059:0 > 1 && v5070:0 > 1 + v5059:0 && v5226:0 > 0 && v5070:0 > 3 && v5226:0 > v5052:0 && v5070:0 > 1 + (1 + v5059:0) && v6177:0 < 0
f_953(v5051:0, v5052:0, v5053:0, v5054:0, v5055:0, v5056:0, v5057:0, v5058:0, v5059:0, 1, v5062:0, v5063:0, v5064:0, v5073:0, v5065:0, v5074:0, v5066:0, v5075:0, v5070:0, v5076:0, v5077:0, v5078:0, v5079:0, v5061:0, v5080:0, 0, v5067:0, v5069:0, v5071:0, v5072:0, 3, 7, 2, 4, 8) -> f_1083(v5051:0, v5052:0, v5053:0, v5054:0, v5055:0, v5056:0, v5057:0, v5058:0, 1 + (1 + v5059:0), v6177:0, 1, 0, v5059:0, v5062:0, v5063:0, 1 + v5059:0, v5064:0, v5073:0, v5065:0, v5074:0, v5066:0, v5075:0, v5070:0, v5076:0, v5077:0, v5078:0, v5079:0, v5226:0, v5059:0, v5053:0, v5067:0, v6114:0, v6116:0, v6117:0, 3, 7, 2, 4, 8) :|: v5059:0 > 1 && v5070:0 > 1 + v5059:0 && v5226:0 > 0 && v5070:0 > 3 && v5226:0 > v5052:0 && v5070:0 > 1 + (1 + v5059:0) && v6177:0 > 0
f_1083(v6094:0, v6095:0, v6096:0, v6097:0, v6098:0, v6099:0, v6100:0, v6101:0, v6126:0, v6177:0, 1, 0, v6106:0, v6107:0, v6108:0, v6102:0, v6110:0, v6118:0, v6111:0, v6119:0, v6112:0, v6120:0, v6115:0, v6121:0, v6122:0, v6123:0, v6124:0, v6103:0, v6109:0, v6125:0, v6113:0, v6114:0, v6116:0, v6117:0, 3, 7, 2, 4, 8) -> f_1083(v6094:0, v6095:0, v6096:0, v6097:0, v6098:0, v6099:0, v6100:0, v6101:0, 1 + v6126:0, v6177:1, 1, 0, v6106:0, v6107:0, v6108:0, v6126:0, v6110:0, v6118:0, v6111:0, v6119:0, v6112:0, v6120:0, v6115:0, v6121:0, v6122:0, v6123:0, v6124:0, v6177:0, v6102:0, v6103:0, v6113:0, v6114:0, v6116:0, v6117:0, 3, 7, 2, 4, 8) :|: v6126:0 > 1 && v6115:0 > 1 + v6126:0 && v6177:1 < 0 && v6177:0 < v6095:0 && v6115:0 > 3
f_1083(v6094:0, v6095:0, v6096:0, v6097:0, v6098:0, v6099:0, v6100:0, v6101:0, v6126:0, v6177:0, 1, 0, v6106:0, v6107:0, v6108:0, v6102:0, v6110:0, v6118:0, v6111:0, v6119:0, v6112:0, v6120:0, v6115:0, v6121:0, v6122:0, v6123:0, v6124:0, v6103:0, v6109:0, v6125:0, v6113:0, v6114:0, v6116:0, v6117:0, 3, 7, 2, 4, 8) -> f_1083(v6094:0, v6095:0, v6096:0, v6097:0, v6098:0, v6099:0, v6100:0, v6101:0, 1 + v6126:0, v6177:1, 1, 0, v6106:0, v6107:0, v6108:0, v6126:0, v6110:0, v6118:0, v6111:0, v6119:0, v6112:0, v6120:0, v6115:0, v6121:0, v6122:0, v6123:0, v6124:0, v6177:0, v6102:0, v6103:0, v6113:0, v6114:0, v6116:0, v6117:0, 3, 7, 2, 4, 8) :|: v6126:0 > 1 && v6115:0 > 1 + v6126:0 && v6177:1 > 0 && v6177:0 < v6095:0 && v6115:0 > 3
f_1083(v6094:0, v6095:0, v6096:0, v6097:0, v6098:0, v6099:0, v6100:0, v6101:0, v6126:0, v6177:0, 1, 0, v6106:0, v6107:0, v6108:0, v6102:0, v6110:0, v6118:0, v6111:0, v6119:0, v6112:0, v6120:0, v6115:0, v6121:0, v6122:0, v6123:0, v6124:0, v6103:0, v6109:0, v6125:0, v6113:0, v6114:0, v6116:0, v6117:0, 3, 7, 2, 4, 8) -> f_1083(v6094:0, v6095:0, v6096:0, v6097:0, v6098:0, v6099:0, v6100:0, v6101:0, 1 + v6126:0, v6177:1, 1, 0, v6106:0, v6107:0, v6108:0, v6126:0, v6110:0, v6118:0, v6111:0, v6119:0, v6112:0, v6120:0, v6115:0, v6121:0, v6122:0, v6123:0, v6124:0, v6177:0, v6102:0, v6103:0, v6113:0, v6114:0, v6116:0, v6117:0, 3, 7, 2, 4, 8) :|: v6126:0 > 1 && v6115:0 > 1 + v6126:0 && v6177:1 < 0 && v6177:0 > v6095:0 && v6115:0 > 3
f_1083(v6094:0, v6095:0, v6096:0, v6097:0, v6098:0, v6099:0, v6100:0, v6101:0, v6126:0, v6177:0, 1, 0, v6106:0, v6107:0, v6108:0, v6102:0, v6110:0, v6118:0, v6111:0, v6119:0, v6112:0, v6120:0, v6115:0, v6121:0, v6122:0, v6123:0, v6124:0, v6103:0, v6109:0, v6125:0, v6113:0, v6114:0, v6116:0, v6117:0, 3, 7, 2, 4, 8) -> f_1083(v6094:0, v6095:0, v6096:0, v6097:0, v6098:0, v6099:0, v6100:0, v6101:0, 1 + v6126:0, v6177:1, 1, 0, v6106:0, v6107:0, v6108:0, v6126:0, v6110:0, v6118:0, v6111:0, v6119:0, v6112:0, v6120:0, v6115:0, v6121:0, v6122:0, v6123:0, v6124:0, v6177:0, v6102:0, v6103:0, v6113:0, v6114:0, v6116:0, v6117:0, 3, 7, 2, 4, 8) :|: v6126:0 > 1 && v6115:0 > 1 + v6126:0 && v6177:1 > 0 && v6177:0 > v6095:0 && v6115:0 > 3
f_953(v5051:0, v5052:0, v5053:0, v5054:0, v5055:0, v5056:0, v5057:0, v5058:0, v5059:0, 1, v5062:0, v5063:0, v5064:0, v5073:0, v5065:0, v5074:0, v5066:0, v5075:0, v5070:0, v5076:0, v5077:0, v5078:0, v5079:0, v5061:0, v5080:0, 0, v5067:0, v5069:0, v5071:0, v5072:0, 3, 7, 2, 4, 8) -> f_953(v5051:0, v5052:0, v5053:0, v5054:0, v5055:0, v5056:0, v5057:0, v5058:0, 1 + v5059:0, 1, v5063:0, 1 + v5063:0, v5064:0, v5073:0, v5065:0, v5074:0, v5066:0, v5075:0, v5070:0, v5076:0, v5077:0, v5078:0, v5079:0, v5059:0, v5053:0, 0, v5067:0, v5069:1, v5071:1, v5072:1, 3, 7, 2, 4, 8) :|: v5059:0 > 1 && v5070:0 > 1 + v5059:0 && v5052:0 < 0 && v5063:0 > 0 && v5070:0 > 3
f_953(v5051:0, v5052:0, v5053:0, v5054:0, v5055:0, v5056:0, v5057:0, v5058:0, v5059:0, 1, v5062:0, v5063:0, v5064:0, v5073:0, v5065:0, v5074:0, v5066:0, v5075:0, v5070:0, v5076:0, v5077:0, v5078:0, v5079:0, v5061:0, v5080:0, 0, v5067:0, v5069:0, v5071:0, v5072:0, 3, 7, 2, 4, 8) -> f_953(v5051:0, v5052:0, v5053:0, v5054:0, v5055:0, v5056:0, v5057:0, v5058:0, 1 + v5059:0, 1, v5063:0, 1 + v5063:0, v5064:0, v5073:0, v5065:0, v5074:0, v5066:0, v5075:0, v5070:0, v5076:0, v5077:0, v5078:0, v5079:0, v5059:0, v5053:0, 0, v5067:0, v5069:1, v5071:1, v5072:1, 3, 7, 2, 4, 8) :|: v5059:0 > 1 && v5070:0 > 1 + v5059:0 && v5052:0 > 0 && v5063:0 > 0 && v5070:0 > 3
f_1083(v6094:0, v6095:0, v6096:0, v6097:0, v6098:0, v6099:0, v6100:0, v6101:0, v6126:0, v6095:0, 1, 0, v6106:0, v6107:0, v6108:0, v6102:0, v6110:0, v6118:0, v6111:0, v6119:0, v6112:0, v6120:0, v6115:0, v6121:0, v6122:0, v6123:0, v6124:0, v6103:0, v6109:0, v6125:0, v6113:0, v6114:0, v6116:0, v6117:0, 3, 7, 2, 4, 8) -> f_953(v6094:0, v6095:0, v6096:0, v6097:0, v6098:0, v6099:0, v6100:0, v6101:0, v6126:0, 1, v6108:0, 1 + v6108:0, v6110:0, v6118:0, v6111:0, v6119:0, v6112:0, v6120:0, v6115:0, v6121:0, v6122:0, v6123:0, v6124:0, v6102:0, v6103:0, 0, v6113:0, v5069:0, v5071:0, v5072:0, 3, 7, 2, 4, 8) :|: v6108:0 > 0
Filtered unneeded arguments:
   f_953(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35) -> f_953(x2, x9, x12, x19)
   f_1083(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39) -> f_1083(x2, x9, x10, x15, x23)
Removed division, modulo operations, cleaned up constraints. Obtained 9 rules.P rules:
f_953(v5052:0, v5059:0, v5063:0, v5070:0) -> f_1083(v5052:0, 1 + (1 + v5059:0), v6177:0, v5063:0, v5070:0) :|: v5070:0 > 1 + v5059:0 && v5059:0 > 1 && v5070:0 > 3 && v6177:0 < 0 && v5070:0 > 1 + (1 + v5059:0)
f_953(v5052:0, v5059:0, v5063:0, v5070:0) -> f_1083(v5052:0, 1 + (1 + v5059:0), v6177:0, v5063:0, v5070:0) :|: v5070:0 > 1 + v5059:0 && v5059:0 > 1 && v5070:0 > 3 && v6177:0 > 0 && v5070:0 > 1 + (1 + v5059:0)
f_1083(v6095:0, v6126:0, v6177:0, v6108:0, v6115:0) -> f_1083(v6095:0, 1 + v6126:0, v6177:1, v6108:0, v6115:0) :|: v6115:0 > 1 + v6126:0 && v6126:0 > 1 && v6177:1 < 0 && v6115:0 > 3 && v6177:0 < v6095:0
f_1083(v6095:0, v6126:0, v6177:0, v6108:0, v6115:0) -> f_1083(v6095:0, 1 + v6126:0, v6177:1, v6108:0, v6115:0) :|: v6115:0 > 1 + v6126:0 && v6126:0 > 1 && v6177:1 > 0 && v6115:0 > 3 && v6177:0 < v6095:0
f_1083(v6095:0, v6126:0, v6177:0, v6108:0, v6115:0) -> f_1083(v6095:0, 1 + v6126:0, v6177:1, v6108:0, v6115:0) :|: v6115:0 > 1 + v6126:0 && v6126:0 > 1 && v6177:1 < 0 && v6115:0 > 3 && v6177:0 > v6095:0
f_1083(v6095:0, v6126:0, v6177:0, v6108:0, v6115:0) -> f_1083(v6095:0, 1 + v6126:0, v6177:1, v6108:0, v6115:0) :|: v6115:0 > 1 + v6126:0 && v6126:0 > 1 && v6177:1 > 0 && v6115:0 > 3 && v6177:0 > v6095:0
f_953(v5052:0, v5059:0, v5063:0, v5070:0) -> f_953(v5052:0, 1 + v5059:0, 1 + v5063:0, v5070:0) :|: v5070:0 > 1 + v5059:0 && v5059:0 > 1 && v5052:0 < 0 && v5070:0 > 3 && v5063:0 > 0
f_953(v5052:0, v5059:0, v5063:0, v5070:0) -> f_953(v5052:0, 1 + v5059:0, 1 + v5063:0, v5070:0) :|: v5070:0 > 1 + v5059:0 && v5059:0 > 1 && v5052:0 > 0 && v5070:0 > 3 && v5063:0 > 0
f_1083(v6095:0, v6126:0, v6095:01, v6108:0, v6115:0) -> f_953(v6095:0, v6126:0, 1 + v6108:0, v6115:0) :|: v6108:0 > 0 && v6095:0 = v6095:01

----------------------------------------

(9)
Obligation:
Rules:
f_953(v5052:0, v5059:0, v5063:0, v5070:0) -> f_1083(v5052:0, 1 + (1 + v5059:0), v6177:0, v5063:0, v5070:0) :|: v5070:0 > 1 + v5059:0 && v5059:0 > 1 && v5070:0 > 3 && v6177:0 < 0 && v5070:0 > 1 + (1 + v5059:0)
f_953(x, x1, x2, x3) -> f_1083(x, 1 + (1 + x1), x4, x2, x3) :|: x3 > 1 + x1 && x1 > 1 && x3 > 3 && x4 > 0 && x3 > 1 + (1 + x1)
f_1083(x5, x6, x7, x8, x9) -> f_1083(x5, 1 + x6, x10, x8, x9) :|: x9 > 1 + x6 && x6 > 1 && x10 < 0 && x9 > 3 && x7 < x5
f_1083(x11, x12, x13, x14, x15) -> f_1083(x11, 1 + x12, x16, x14, x15) :|: x15 > 1 + x12 && x12 > 1 && x16 > 0 && x15 > 3 && x13 < x11
f_1083(x17, x18, x19, x20, x21) -> f_1083(x17, 1 + x18, x22, x20, x21) :|: x21 > 1 + x18 && x18 > 1 && x22 < 0 && x21 > 3 && x19 > x17
f_1083(x23, x24, x25, x26, x27) -> f_1083(x23, 1 + x24, x28, x26, x27) :|: x27 > 1 + x24 && x24 > 1 && x28 > 0 && x27 > 3 && x25 > x23
f_953(x29, x30, x31, x32) -> f_953(x29, 1 + x30, 1 + x31, x32) :|: x32 > 1 + x30 && x30 > 1 && x29 < 0 && x32 > 3 && x31 > 0
f_953(x33, x34, x35, x36) -> f_953(x33, 1 + x34, 1 + x35, x36) :|: x36 > 1 + x34 && x34 > 1 && x33 > 0 && x36 > 3 && x35 > 0
f_1083(v6095:0, v6126:0, v6095:01, v6108:0, v6115:0) -> f_953(v6095:0, v6126:0, 1 + v6108:0, v6115:0) :|: v6108:0 > 0 && v6095:0 = v6095:01

----------------------------------------

(10) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(11)
Obligation:
Rules:
f_1083(x11:0, x12:0, x13:0, x14:0, x15:0) -> f_1083(x11:0, 1 + x12:0, x16:0, x14:0, x15:0) :|: x15:0 > 3 && x13:0 < x11:0 && x16:0 > 0 && x12:0 > 1 && x15:0 > 1 + x12:0
f_953(x29:0, x30:0, x31:0, x32:0) -> f_953(x29:0, 1 + x30:0, 1 + x31:0, x32:0) :|: x32:0 > 3 && x31:0 > 0 && x29:0 < 0 && x30:0 > 1 && x32:0 > 1 + x30:0
f_953(x:0, x1:0, x2:0, x3:0) -> f_1083(x:0, 1 + (1 + x1:0), x4:0, x2:0, x3:0) :|: x4:0 > 0 && x3:0 > 1 + (1 + x1:0) && x3:0 > 3 && x1:0 > 1 && x3:0 > 1 + x1:0
f_1083(x5:0, x6:0, x7:0, x8:0, x9:0) -> f_1083(x5:0, 1 + x6:0, x10:0, x8:0, x9:0) :|: x9:0 > 3 && x7:0 < x5:0 && x10:0 < 0 && x6:0 > 1 && x9:0 > 1 + x6:0
f_1083(x23:0, x24:0, x25:0, x26:0, x27:0) -> f_1083(x23:0, 1 + x24:0, x28:0, x26:0, x27:0) :|: x27:0 > 3 && x25:0 > x23:0 && x28:0 > 0 && x24:0 > 1 && x27:0 > 1 + x24:0
f_953(v5052:0:0, v5059:0:0, v5063:0:0, v5070:0:0) -> f_1083(v5052:0:0, 1 + (1 + v5059:0:0), v6177:0:0, v5063:0:0, v5070:0:0) :|: v6177:0:0 < 0 && v5070:0:0 > 1 + (1 + v5059:0:0) && v5070:0:0 > 3 && v5059:0:0 > 1 && v5070:0:0 > 1 + v5059:0:0
f_953(x33:0, x34:0, x35:0, x36:0) -> f_953(x33:0, 1 + x34:0, 1 + x35:0, x36:0) :|: x36:0 > 3 && x35:0 > 0 && x33:0 > 0 && x34:0 > 1 && x36:0 > 1 + x34:0
f_1083(x17:0, x18:0, x19:0, x20:0, x21:0) -> f_1083(x17:0, 1 + x18:0, x22:0, x20:0, x21:0) :|: x21:0 > 3 && x19:0 > x17:0 && x22:0 < 0 && x18:0 > 1 && x21:0 > 1 + x18:0
f_1083(v6095:01:0, v6126:0:0, v6095:01:01, v6108:0:0, v6115:0:0) -> f_953(v6095:01:0, v6126:0:0, 1 + v6108:0:0, v6115:0:0) :|: v6108:0:0 > 0 && v6095:01:0 = v6095:01:01

----------------------------------------

(12) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1083(x, x1, x2, x3, x4)] = -1 - x1 + x4
[f_953(x5, x6, x7, x8)] = -1 - x6 + x8

The following rules are decreasing:
f_1083(x11:0, x12:0, x13:0, x14:0, x15:0) -> f_1083(x11:0, 1 + x12:0, x16:0, x14:0, x15:0) :|: x15:0 > 3 && x13:0 < x11:0 && x16:0 > 0 && x12:0 > 1 && x15:0 > 1 + x12:0
f_953(x29:0, x30:0, x31:0, x32:0) -> f_953(x29:0, 1 + x30:0, 1 + x31:0, x32:0) :|: x32:0 > 3 && x31:0 > 0 && x29:0 < 0 && x30:0 > 1 && x32:0 > 1 + x30:0
f_953(x:0, x1:0, x2:0, x3:0) -> f_1083(x:0, 1 + (1 + x1:0), x4:0, x2:0, x3:0) :|: x4:0 > 0 && x3:0 > 1 + (1 + x1:0) && x3:0 > 3 && x1:0 > 1 && x3:0 > 1 + x1:0
f_1083(x5:0, x6:0, x7:0, x8:0, x9:0) -> f_1083(x5:0, 1 + x6:0, x10:0, x8:0, x9:0) :|: x9:0 > 3 && x7:0 < x5:0 && x10:0 < 0 && x6:0 > 1 && x9:0 > 1 + x6:0
f_1083(x23:0, x24:0, x25:0, x26:0, x27:0) -> f_1083(x23:0, 1 + x24:0, x28:0, x26:0, x27:0) :|: x27:0 > 3 && x25:0 > x23:0 && x28:0 > 0 && x24:0 > 1 && x27:0 > 1 + x24:0
f_953(v5052:0:0, v5059:0:0, v5063:0:0, v5070:0:0) -> f_1083(v5052:0:0, 1 + (1 + v5059:0:0), v6177:0:0, v5063:0:0, v5070:0:0) :|: v6177:0:0 < 0 && v5070:0:0 > 1 + (1 + v5059:0:0) && v5070:0:0 > 3 && v5059:0:0 > 1 && v5070:0:0 > 1 + v5059:0:0
f_953(x33:0, x34:0, x35:0, x36:0) -> f_953(x33:0, 1 + x34:0, 1 + x35:0, x36:0) :|: x36:0 > 3 && x35:0 > 0 && x33:0 > 0 && x34:0 > 1 && x36:0 > 1 + x34:0
f_1083(x17:0, x18:0, x19:0, x20:0, x21:0) -> f_1083(x17:0, 1 + x18:0, x22:0, x20:0, x21:0) :|: x21:0 > 3 && x19:0 > x17:0 && x22:0 < 0 && x18:0 > 1 && x21:0 > 1 + x18:0
The following rules are bounded:
f_1083(x11:0, x12:0, x13:0, x14:0, x15:0) -> f_1083(x11:0, 1 + x12:0, x16:0, x14:0, x15:0) :|: x15:0 > 3 && x13:0 < x11:0 && x16:0 > 0 && x12:0 > 1 && x15:0 > 1 + x12:0
f_953(x29:0, x30:0, x31:0, x32:0) -> f_953(x29:0, 1 + x30:0, 1 + x31:0, x32:0) :|: x32:0 > 3 && x31:0 > 0 && x29:0 < 0 && x30:0 > 1 && x32:0 > 1 + x30:0
f_953(x:0, x1:0, x2:0, x3:0) -> f_1083(x:0, 1 + (1 + x1:0), x4:0, x2:0, x3:0) :|: x4:0 > 0 && x3:0 > 1 + (1 + x1:0) && x3:0 > 3 && x1:0 > 1 && x3:0 > 1 + x1:0
f_1083(x5:0, x6:0, x7:0, x8:0, x9:0) -> f_1083(x5:0, 1 + x6:0, x10:0, x8:0, x9:0) :|: x9:0 > 3 && x7:0 < x5:0 && x10:0 < 0 && x6:0 > 1 && x9:0 > 1 + x6:0
f_1083(x23:0, x24:0, x25:0, x26:0, x27:0) -> f_1083(x23:0, 1 + x24:0, x28:0, x26:0, x27:0) :|: x27:0 > 3 && x25:0 > x23:0 && x28:0 > 0 && x24:0 > 1 && x27:0 > 1 + x24:0
f_953(v5052:0:0, v5059:0:0, v5063:0:0, v5070:0:0) -> f_1083(v5052:0:0, 1 + (1 + v5059:0:0), v6177:0:0, v5063:0:0, v5070:0:0) :|: v6177:0:0 < 0 && v5070:0:0 > 1 + (1 + v5059:0:0) && v5070:0:0 > 3 && v5059:0:0 > 1 && v5070:0:0 > 1 + v5059:0:0
f_953(x33:0, x34:0, x35:0, x36:0) -> f_953(x33:0, 1 + x34:0, 1 + x35:0, x36:0) :|: x36:0 > 3 && x35:0 > 0 && x33:0 > 0 && x34:0 > 1 && x36:0 > 1 + x34:0
f_1083(x17:0, x18:0, x19:0, x20:0, x21:0) -> f_1083(x17:0, 1 + x18:0, x22:0, x20:0, x21:0) :|: x21:0 > 3 && x19:0 > x17:0 && x22:0 < 0 && x18:0 > 1 && x21:0 > 1 + x18:0

----------------------------------------

(13)
Obligation:
Rules:
f_1083(v6095:01:0, v6126:0:0, v6095:01:01, v6108:0:0, v6115:0:0) -> f_953(v6095:01:0, v6126:0:0, 1 + v6108:0:0, v6115:0:0) :|: v6108:0:0 > 0 && v6095:01:0 = v6095:01:01

----------------------------------------

(14) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained no non-trivial SCC(s).

----------------------------------------

(15)
YES

----------------------------------------

(16)
Obligation:
SCC
----------------------------------------

(17) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 19 rulesP rules:
f_616(v1826, v1827, v1828, v1829, v1830, v1831, v1832, v1833, v1838, v1835, 1, v1834, 0, v1839, v1847, v1840, v1848, v1841, v1849, v1844, v1850, v1851, v1852, v1854, v1842, v1853, v1855, v1843, v1845, v1846, 3, 7, 2, 4, 8) -> f_622(v1826, v1827, v1828, v1829, v1830, v1831, v1832, v1833, v1838, v2102, v1835, 1, v1834, 0, v1839, v1847, v1840, v1848, v1841, v1849, v1844, v1850, v1851, v1852, v1854, v1842, v1853, v1855, v1843, v1845, v1846, 3, 7, 2, 4, 8) :|: TRUE
f_622(v1826, v1827, v1828, v1829, v1830, v1831, v1832, v1833, v1838, v2102, v1835, 1, v1834, 0, v1839, v1847, v1840, v1848, v1841, v1849, v1844, v1850, v1851, v1852, v1854, v1842, v1853, v1855, v1843, v1845, v1846, 3, 7, 2, 4, 8) -> f_627(v1826, v1827, v1828, v1829, v1830, v1831, v1832, v1833, v1838, v2102, 1, v1834, v1835, 0, v1839, v1847, v1840, v1848, v1841, v1849, v1844, v1850, v1851, v1852, v1854, v1842, v1853, v1855, v1843, v1845, v1846, 3, 7, 2, 4, 8) :|: 0 = 0
f_627(v1826, v1827, v1828, v1829, v1830, v1831, v1832, v1833, v1838, v2102, 1, v1834, v1835, 0, v1839, v1847, v1840, v1848, v1841, v1849, v1844, v1850, v1851, v1852, v1854, v1842, v1853, v1855, v1843, v1845, v1846, 3, 7, 2, 4, 8) -> f_632(v1826, v1827, v1828, v1829, v1830, v1831, v1832, v1833, v1838, v2102, 1, v1834, v1835, 0, v1839, v1847, v1840, v1848, v1841, v1849, v1844, v1850, v1851, v1852, v1854, v1842, v1853, v1855, v1843, v1845, v1846, 3, 7, 2, 4, 8) :|: v2102 != 0 && v1838 < v1844 && 4 <= v1844
f_632(v1826, v1827, v1828, v1829, v1830, v1831, v1832, v1833, v1838, v2102, 1, v1834, v1835, 0, v1839, v1847, v1840, v1848, v1841, v1849, v1844, v1850, v1851, v1852, v1854, v1842, v1853, v1855, v1843, v1845, v1846, 3, 7, 2, 4, 8) -> f_636(v1826, v1827, v1828, v1829, v1830, v1831, v1832, v1833, v1838, v2102, 1, v1834, v1835, 0, v1839, v1847, v1840, v1848, v1841, v1849, v1844, v1850, v1851, v1852, v1854, v1842, v1853, v1855, v1843, v1845, v1846, 3, 7, 2, 4, 8) :|: 0 = 0
f_636(v1826, v1827, v1828, v1829, v1830, v1831, v1832, v1833, v1838, v2102, 1, v1834, v1835, 0, v1839, v1847, v1840, v1848, v1841, v1849, v1844, v1850, v1851, v1852, v1854, v1842, v1853, v1855, v1843, v1845, v1846, 3, 7, 2, 4, 8) -> f_640(v1826, v1827, v1828, v1829, v1830, v1831, v1832, v1833, v1838, v2102, 1, v1834, v1835, 0, v1839, v1847, v1840, v1848, v1841, v1849, v1844, v1850, v1851, v1852, v1854, v1842, v1853, v1855, v1843, v1845, v1846, 3, 7, 2, 4, 8) :|: TRUE
f_640(v1826, v1827, v1828, v1829, v1830, v1831, v1832, v1833, v1838, v2102, 1, v1834, v1835, 0, v1839, v1847, v1840, v1848, v1841, v1849, v1844, v1850, v1851, v1852, v1854, v1842, v1853, v1855, v1843, v1845, v1846, 3, 7, 2, 4, 8) -> f_644(v1826, v1827, v1828, v1829, v1830, v1831, v1832, v1833, v1838, v2102, 1, v1835, 0, v1834, v1839, v1847, v1840, v1848, v1841, v1849, v1844, v1850, v1851, v1852, v1854, v1842, v1853, v1855, v1843, v1845, v1846, 3, 7, 2, 4, 8) :|: 0 = 0
f_644(v1826, v1827, v1828, v1829, v1830, v1831, v1832, v1833, v1838, v2102, 1, v1835, 0, v1834, v1839, v1847, v1840, v1848, v1841, v1849, v1844, v1850, v1851, v1852, v1854, v1842, v1853, v1855, v1843, v1845, v1846, 3, 7, 2, 4, 8) -> f_650(v1826, v1827, v1828, v1829, v1830, v1831, v1832, v1833, v1838, v2102, 1, v1835, 0, v1834, v1839, v1847, v1840, v1848, v1841, v1849, v1844, v1850, v1851, v1852, v1854, v1842, v1853, v1855, v1843, v1845, v1846, 3, 7, 2, 4, 8) :|: 0 = 0
f_650(v1826, v1827, v1828, v1829, v1830, v1831, v1832, v1833, v1838, v2102, 1, v1835, 0, v1834, v1839, v1847, v1840, v1848, v1841, v1849, v1844, v1850, v1851, v1852, v1854, v1842, v1853, v1855, v1843, v1845, v1846, 3, 7, 2, 4, 8) -> f_656(v1826, v1827, v1828, v1829, v1830, v1831, v1832, v1833, v1838, v2102, 1, 0, v1834, v1839, v1847, v1840, v1848, v1841, v1849, v1844, v1850, v1851, v1852, v1854, v1835, v1842, v1853, v1855, v1843, v1845, v1846, 3, 7, 2, 4, 8) :|: 0 = 0
f_656(v1826, v1827, v1828, v1829, v1830, v1831, v1832, v1833, v1838, v2102, 1, 0, v1834, v1839, v1847, v1840, v1848, v1841, v1849, v1844, v1850, v1851, v1852, v1854, v1835, v1842, v1853, v1855, v1843, v1845, v1846, 3, 7, 2, 4, 8) -> f_661(v1826, v1827, v1828, v1829, v1830, v1831, v1832, v1833, v1838, v2102, 1, 0, v1834, v1839, v1847, v1840, v1848, v1841, v1849, v1844, v1850, v1851, v1852, v1854, v1835, v1842, v1853, v1855, v1843, v1845, v1846, 3, 7, 2, 4, 8) :|: 0 = 0
f_661(v1826, v1827, v1828, v1829, v1830, v1831, v1832, v1833, v1838, v2102, 1, 0, v1834, v1839, v1847, v1840, v1848, v1841, v1849, v1844, v1850, v1851, v1852, v1854, v1835, v1842, v1853, v1855, v1843, v1845, v1846, 3, 7, 2, 4, 8) -> f_666(v1826, v1827, v1828, v1829, v1830, v1831, v1832, v1833, v1838, v2102, 1, 0, v1834, v1839, v1847, v1840, v1848, v1841, v1849, v1844, v1850, v1851, v1852, v1854, v1835, v1842, v1853, v1855, v1843, v1845, v1846, 3, 7, 2, 4, 8) :|: 0 = 0
f_666(v1826, v1827, v1828, v1829, v1830, v1831, v1832, v1833, v1838, v2102, 1, 0, v1834, v1839, v1847, v1840, v1848, v1841, v1849, v1844, v1850, v1851, v1852, v1854, v1835, v1842, v1853, v1855, v1843, v1845, v1846, 3, 7, 2, 4, 8) -> f_672(v1826, v1827, v1828, v1829, v1830, v1831, v1832, v1833, v1838, v2102, 1, 0, v1834, v1839, v1847, v1840, v1848, v1841, v1849, v1844, v1850, v1851, v1852, v1854, v1835, v1842, v1853, v1855, v1843, v1845, v1846, 3, 7, 2, 4, 8) :|: v2102 != v1827
f_672(v1826, v1827, v1828, v1829, v1830, v1831, v1832, v1833, v1838, v2102, 1, 0, v1834, v1839, v1847, v1840, v1848, v1841, v1849, v1844, v1850, v1851, v1852, v1854, v1835, v1842, v1853, v1855, v1843, v1845, v1846, 3, 7, 2, 4, 8) -> f_678(v1826, v1827, v1828, v1829, v1830, v1831, v1832, v1833, v1838, v2102, 1, 0, v1834, v1839, v1847, v1840, v1848, v1841, v1849, v1844, v1850, v1851, v1852, v1854, v1835, v1842, v1853, v1855, v1843, v1845, v1846, 3, 7, 2, 4, 8) :|: 0 = 0
f_678(v1826, v1827, v1828, v1829, v1830, v1831, v1832, v1833, v1838, v2102, 1, 0, v1834, v1839, v1847, v1840, v1848, v1841, v1849, v1844, v1850, v1851, v1852, v1854, v1835, v1842, v1853, v1855, v1843, v1845, v1846, 3, 7, 2, 4, 8) -> f_685(v1826, v1827, v1828, v1829, v1830, v1831, v1832, v1833, v1838, v2102, 1, 0, v1834, v1839, v1847, v1840, v1848, v1841, v1849, v1844, v1850, v1851, v1852, v1854, v1835, v1842, v1853, v1855, v1843, v1845, v1846, 3, 7, 2, 4, 8) :|: TRUE
f_685(v1826, v1827, v1828, v1829, v1830, v1831, v1832, v1833, v1838, v2102, 1, 0, v1834, v1839, v1847, v1840, v1848, v1841, v1849, v1844, v1850, v1851, v1852, v1854, v1835, v1842, v1853, v1855, v1843, v1845, v1846, 3, 7, 2, 4, 8) -> f_689(v1826, v1827, v1828, v1829, v1830, v1831, v1832, v1833, v1838, v2102, 1, 0, v1839, v1847, v1840, v1848, v1841, v1849, v1844, v1850, v1851, v1852, v1854, v1834, v1835, v1842, v1853, v1855, v1843, v1845, v1846, 3, 7, 2, 4, 8) :|: 0 = 0
f_689(v1826, v1827, v1828, v1829, v1830, v1831, v1832, v1833, v1838, v2102, 1, 0, v1839, v1847, v1840, v1848, v1841, v1849, v1844, v1850, v1851, v1852, v1854, v1834, v1835, v1842, v1853, v1855, v1843, v1845, v1846, 3, 7, 2, 4, 8) -> f_693(v1826, v1827, v1828, v1829, v1830, v1831, v1832, v1833, v1838, v2102, 1, 0, v2618, v1839, v1847, v1840, v1848, v1841, v1849, v1844, v1850, v1851, v1852, v1854, v1834, v1835, v1842, v1853, v1855, v1843, v1845, v1846, 3, 7, 2, 4, 8) :|: v2618 = 1 + v1838 && 4 <= v2618
f_693(v1826, v1827, v1828, v1829, v1830, v1831, v1832, v1833, v1838, v2102, 1, 0, v2618, v1839, v1847, v1840, v1848, v1841, v1849, v1844, v1850, v1851, v1852, v1854, v1834, v1835, v1842, v1853, v1855, v1843, v1845, v1846, 3, 7, 2, 4, 8) -> f_697(v1826, v1827, v1828, v1829, v1830, v1831, v1832, v1833, v1838, v2102, 1, 0, v2618, v1839, v1847, v1840, v1848, v1841, v1849, v1844, v1850, v1851, v1852, v1854, v1834, v1835, v1842, v1853, v1855, v1843, v1845, v1846, 3, 7, 2, 4, 8) :|: TRUE
f_697(v1826, v1827, v1828, v1829, v1830, v1831, v1832, v1833, v1838, v2102, 1, 0, v2618, v1839, v1847, v1840, v1848, v1841, v1849, v1844, v1850, v1851, v1852, v1854, v1834, v1835, v1842, v1853, v1855, v1843, v1845, v1846, 3, 7, 2, 4, 8) -> f_702(v1826, v1827, v1828, v1829, v1830, v1831, v1832, v1833, v1838, v2102, 1, 0, v2618, v1839, v1847, v1840, v1848, v1841, v1849, v1844, v1850, v1851, v1852, v1854, v1834, v1835, v1842, v1853, v1855, v1843, v1845, v1846, 3, 7, 2, 4, 8) :|: TRUE
f_702(v1826, v1827, v1828, v1829, v1830, v1831, v1832, v1833, v1838, v2102, 1, 0, v2618, v1839, v1847, v1840, v1848, v1841, v1849, v1844, v1850, v1851, v1852, v1854, v1834, v1835, v1842, v1853, v1855, v1843, v1845, v1846, 3, 7, 2, 4, 8) -> f_611(v1826, v1827, v1828, v1829, v1830, v1831, v1832, v1833, v1838, v2102, 1, 0, v2618, v1839, v1847, v1840, v1848, v1841, v1849, v1844, v1850, v1851, v1852, v1854, v1842, v1853, v1855, v1843, v1845, v1846, 3, 7, 2, 4, 8) :|: TRUE
f_611(v1826, v1827, v1828, v1829, v1830, v1831, v1832, v1833, v1834, v1835, 1, 0, v1838, v1839, v1847, v1840, v1848, v1841, v1849, v1844, v1850, v1851, v1852, v1854, v1842, v1853, v1855, v1843, v1845, v1846, 3, 7, 2, 4, 8) -> f_616(v1826, v1827, v1828, v1829, v1830, v1831, v1832, v1833, v1838, v1835, 1, v1834, 0, v1839, v1847, v1840, v1848, v1841, v1849, v1844, v1850, v1851, v1852, v1854, v1842, v1853, v1855, v1843, v1845, v1846, 3, 7, 2, 4, 8) :|: 0 = 0
Combined rules. Obtained 4 rulesP rules:
f_616(v1826:0, v1827:0, v1828:0, v1829:0, v1830:0, v1831:0, v1832:0, v1833:0, v1838:0, v1835:0, 1, v1834:0, 0, v1839:0, v1847:0, v1840:0, v1848:0, v1841:0, v1849:0, v1844:0, v1850:0, v1851:0, v1852:0, v1854:0, v1842:0, v1853:0, v1855:0, v1843:0, v1845:0, v1846:0, 3, 7, 2, 4, 8) -> f_616(v1826:0, v1827:0, v1828:0, v1829:0, v1830:0, v1831:0, v1832:0, v1833:0, 1 + v1838:0, v2102:0, 1, v1838:0, 0, v1839:0, v1847:0, v1840:0, v1848:0, v1841:0, v1849:0, v1844:0, v1850:0, v1851:0, v1852:0, v1854:0, v1842:0, v1853:0, v1855:0, v1843:0, v1845:0, v1846:0, 3, 7, 2, 4, 8) :|: v1844:0 > v1838:0 && v2102:0 < 0 && v1844:0 > 3 && v1838:0 > 2 && v2102:0 < v1827:0
f_616(v1826:0, v1827:0, v1828:0, v1829:0, v1830:0, v1831:0, v1832:0, v1833:0, v1838:0, v1835:0, 1, v1834:0, 0, v1839:0, v1847:0, v1840:0, v1848:0, v1841:0, v1849:0, v1844:0, v1850:0, v1851:0, v1852:0, v1854:0, v1842:0, v1853:0, v1855:0, v1843:0, v1845:0, v1846:0, 3, 7, 2, 4, 8) -> f_616(v1826:0, v1827:0, v1828:0, v1829:0, v1830:0, v1831:0, v1832:0, v1833:0, 1 + v1838:0, v2102:0, 1, v1838:0, 0, v1839:0, v1847:0, v1840:0, v1848:0, v1841:0, v1849:0, v1844:0, v1850:0, v1851:0, v1852:0, v1854:0, v1842:0, v1853:0, v1855:0, v1843:0, v1845:0, v1846:0, 3, 7, 2, 4, 8) :|: v1844:0 > v1838:0 && v2102:0 < 0 && v1844:0 > 3 && v1838:0 > 2 && v2102:0 > v1827:0
f_616(v1826:0, v1827:0, v1828:0, v1829:0, v1830:0, v1831:0, v1832:0, v1833:0, v1838:0, v1835:0, 1, v1834:0, 0, v1839:0, v1847:0, v1840:0, v1848:0, v1841:0, v1849:0, v1844:0, v1850:0, v1851:0, v1852:0, v1854:0, v1842:0, v1853:0, v1855:0, v1843:0, v1845:0, v1846:0, 3, 7, 2, 4, 8) -> f_616(v1826:0, v1827:0, v1828:0, v1829:0, v1830:0, v1831:0, v1832:0, v1833:0, 1 + v1838:0, v2102:0, 1, v1838:0, 0, v1839:0, v1847:0, v1840:0, v1848:0, v1841:0, v1849:0, v1844:0, v1850:0, v1851:0, v1852:0, v1854:0, v1842:0, v1853:0, v1855:0, v1843:0, v1845:0, v1846:0, 3, 7, 2, 4, 8) :|: v1844:0 > v1838:0 && v2102:0 > 0 && v1844:0 > 3 && v1838:0 > 2 && v2102:0 < v1827:0
f_616(v1826:0, v1827:0, v1828:0, v1829:0, v1830:0, v1831:0, v1832:0, v1833:0, v1838:0, v1835:0, 1, v1834:0, 0, v1839:0, v1847:0, v1840:0, v1848:0, v1841:0, v1849:0, v1844:0, v1850:0, v1851:0, v1852:0, v1854:0, v1842:0, v1853:0, v1855:0, v1843:0, v1845:0, v1846:0, 3, 7, 2, 4, 8) -> f_616(v1826:0, v1827:0, v1828:0, v1829:0, v1830:0, v1831:0, v1832:0, v1833:0, 1 + v1838:0, v2102:0, 1, v1838:0, 0, v1839:0, v1847:0, v1840:0, v1848:0, v1841:0, v1849:0, v1844:0, v1850:0, v1851:0, v1852:0, v1854:0, v1842:0, v1853:0, v1855:0, v1843:0, v1845:0, v1846:0, 3, 7, 2, 4, 8) :|: v1844:0 > v1838:0 && v2102:0 > 0 && v1844:0 > 3 && v1838:0 > 2 && v2102:0 > v1827:0
Filtered unneeded arguments:
   f_616(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35) -> f_616(x2, x9, x20)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_616(v1827:0, v1838:0, v1844:0) -> f_616(v1827:0, 1 + v1838:0, v1844:0) :|: v1844:0 > 3 && v1838:0 > 2 && v1844:0 > v1838:0

----------------------------------------

(18)
Obligation:
Rules:
f_616(v1827:0, v1838:0, v1844:0) -> f_616(v1827:0, 1 + v1838:0, v1844:0) :|: v1844:0 > 3 && v1838:0 > 2 && v1844:0 > v1838:0

----------------------------------------

(19) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(20)
Obligation:
Rules:
f_616(v1827:0:0, v1838:0:0, v1844:0:0) -> f_616(v1827:0:0, 1 + v1838:0:0, v1844:0:0) :|: v1844:0:0 > 3 && v1838:0:0 > 2 && v1844:0:0 > v1838:0:0

----------------------------------------

(21) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_616(x1, x2, x3) -> f_616(x2, x3)

----------------------------------------

(22)
Obligation:
Rules:
f_616(v1838:0:0, v1844:0:0) -> f_616(1 + v1838:0:0, v1844:0:0) :|: v1844:0:0 > 3 && v1838:0:0 > 2 && v1844:0:0 > v1838:0:0

----------------------------------------

(23) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_616(x, x1)] = -x + x1

The following rules are decreasing:
f_616(v1838:0:0, v1844:0:0) -> f_616(1 + v1838:0:0, v1844:0:0) :|: v1844:0:0 > 3 && v1838:0:0 > 2 && v1844:0:0 > v1838:0:0
The following rules are bounded:
f_616(v1838:0:0, v1844:0:0) -> f_616(1 + v1838:0:0, v1844:0:0) :|: v1844:0:0 > 3 && v1838:0:0 > 2 && v1844:0:0 > v1838:0:0

----------------------------------------

(24)
YES
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.001s
