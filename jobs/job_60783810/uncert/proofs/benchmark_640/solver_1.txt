MAYBE
proof of /hpcwork/ff862203/termcomp25/benchmarks/Uy23e.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could not be shown:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 19 ms]
(2) LLVM problem


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/Uy23e.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/Uy23e.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "llvm.dbg.label" returnParam: BasicVoidType parameters: (BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_error" returnParam: BasicVoidType parameters: () variableLength: true visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_assert" linkageType: EXTERNALLY_VISIBLE returnParam: BasicVoidType parameters: (0 i32) variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 7
	0:
		%2 = alloca i32, align 4
		store %0, %2
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		%3 = load %2
		%4 = icmp ne %3 0
		br %4, %7, %5
	5:
		br %6
	6:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.label()
		Unnamed Call-Instruction = call BasicVoidType (...)* @__VERIFIER_error()
		unreachable
	7:
		ret void

*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 24
	0:
		%1 = alloca i32, align 4
		%2 = alloca [100000 x i32], align 16
		%3 = alloca i32, align 4
		%4 = alloca i32, align 4
		%5 = alloca i32, align 4
		%6 = alloca i32, align 4
		%7 = alloca i32, align 4
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*[100000 x i32] %2)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %4)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %5)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %6)
		%8 = getelementptr %2, 0, 0
		%9 = load %8
		store %9, %4
		%10 = getelementptr %2, 0, 1
		%11 = load %10
		store %11, %5
		%12 = load %4
		%13 = load %5
		%14 = icmp slt %12 %13
		br %14, %15, %19
	15:
		%16 = load %4
		store %16, %6
		%17 = load %5
		store %17, %4
		%18 = load %6
		store %18, %5
		br %19
	19:
		store 2, %3
		br %20
	20:
		%21 = load %3
		%22 = icmp slt %21 100000
		br %22, %23, %53
	23:
		%24 = load %3
		%25 = sext i32 %24 to i64
		%26 = getelementptr %2, 0, %25
		%27 = load %26
		%28 = load %4
		%29 = icmp sge %27 %28
		br %29, %30, %36
	30:
		%31 = load %4
		store %31, %5
		%32 = load %3
		%33 = sext i32 %32 to i64
		%34 = getelementptr %2, 0, %33
		%35 = load %34
		store %35, %4
		br %49
	36:
		%37 = load %3
		%38 = sext i32 %37 to i64
		%39 = getelementptr %2, 0, %38
		%40 = load %39
		%41 = load %5
		%42 = icmp sgt %40 %41
		br %42, %43, %48
	43:
		%44 = load %3
		%45 = sext i32 %44 to i64
		%46 = getelementptr %2, 0, %45
		%47 = load %46
		store %47, %5
		br %48
	48:
		br %49
	49:
		br %50
	50:
		%51 = load %3
		%52 = add i32 %51, 1
		store %52, %3
		br %20
	53:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %7)
		store 0, %7
		br %54
	54:
		%55 = load %7
		%56 = icmp slt %55 100000
		br %56, %57, %68
	57:
		%58 = load %7
		%59 = sext i32 %58 to i64
		%60 = getelementptr %2, 0, %59
		%61 = load %60
		%62 = load %4
		%63 = icmp sle %61 %62
		%64 = zext i1 %63 to i32
		Unnamed Call-Instruction = call BasicVoidType @__VERIFIER_assert(i32 %64)
		br %65
	65:
		%66 = load %7
		%67 = add i32 %66, 1
		store %67, %7
		br %54
	68:
		store 0, %7
		br %69
	69:
		%70 = load %7
		%71 = icmp slt %70 100000
		br %71, %72, %92
	72:
		%73 = load %7
		%74 = sext i32 %73 to i64
		%75 = getelementptr %2, 0, %74
		%76 = load %75
		%77 = load %5
		%78 = icmp sle %76 %77
		br %78, %86, %79
	79:
		%80 = load %7
		%81 = sext i32 %80 to i64
		%82 = getelementptr %2, 0, %81
		%83 = load %82
		%84 = load %4
		%85 = icmp eq %83 %84
		br %86
	86:
		%87 = phi [1, %72], [%85, %79]
		%88 = zext i1 %87 to i32
		Unnamed Call-Instruction = call BasicVoidType @__VERIFIER_assert(i32 %88)
		br %89
	89:
		%90 = load %7
		%91 = add i32 %90, 1
		store %91, %7
		br %69
	92:
		ret 0


Analyze Termination of all function calls matching the pattern:
main()Aborted 1756892650Exec. 4, LLVMToSEGraph with some error. Reason: InconsistentStateException [integerState=vals:
{v40234=[1,+inf){-inf,+inf}, v40235=[1,+inf){-inf,+inf}, v40236=[1,+inf){-inf,+inf}, v40237=[1,+inf){-inf,+inf}, v40238=[1,+inf){-inf,+inf}, v40239=[1,+inf){-inf,+inf}, v40240=[1,+inf){-inf,+inf}, v40241=#, v40242=[5,+inf){0,+inf}, v40243=#, v40247=[399997,+inf){0,+inf}, v40248=#, v40250=[2,+inf){-inf,+inf}, v40251=#, v40252=[4,+inf){0,+inf}, v40253=[400000,+inf){0,+inf}, v40254=[4,+inf){0,+inf}, v40255=[4,+inf){0,+inf}, v40256=[4,+inf){0,+inf}, v40257=[4,+inf){0,+inf}, v40258=[4,+inf){0,+inf}, v40259=[9,+inf){0,+inf}, v40260=#, v57451=[5,+inf){0,+inf}, v59274=#}
associations:
{v40234=0, v40252=0, v40235=1, v40250=1, v40253=1, v40236=2, v40254=2, v40237=3, v40255=3, v40238=4, v40256=4, v40239=5, v40257=5, v40240=6, v40258=6, v40242=1, v40247=1, v40259=1, v57451=1}
association offsets:
{v40234=3, v40252=0, v40235=399999, v40250=3, v40253=0, v40236=3, v40254=0, v40237=3, v40255=0, v40238=3, v40256=0, v40239=3, v40257=0, v40240=3, v40258=0, v40242=3, v40247=3, v40259=3, v57451=3}
rels:
undirected inequalities:
[(v40250 != v57451)]
equations:
