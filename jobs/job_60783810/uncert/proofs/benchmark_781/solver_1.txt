MAYBE
proof of /hpcwork/ff862203/termcomp25/benchmarks/u6Vkm.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could not be shown:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 68 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 667 ms]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) LLVM Symbolic Execution SCC
    (7) SCC2IRS [SOUND, 79 ms]
    (8) IntTRS
        (9) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (10) IntTRS
        (11) IntTRSPeriodicNontermProof [COMPLETE, 4 ms]
        (12) NO
    (13) SCC2IRS [SOUND, 5 ms]
    (14) IntTRS
        (15) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (16) IntTRS
        (17) IntTRSPeriodicNontermProof [COMPLETE, 6 ms]
        (18) NO
(19) SEGraph to IRS [SOUND, 94 ms]
(20) IntTRS
    (21) IRSToKoat [EQUIVALENT, 0 ms]
    (22) Koat Problem
    (23) KoAT2 [EQUIVALENT, 489 ms]
    (24) MAYBE
(25) SEGraph to IRS [SOUND, 84 ms]
(26) IntTRS
    (27) IRSNoOverapproximation [EQUIVALENT, 0 ms]
    (28) MAYBE


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/u6Vkm.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/u6Vkm.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: true visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "f" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: (0 i32) variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 7
	0:
		%2 = alloca i32, align 4
		%3 = alloca i32, align 4
		store %0, %3
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		%4 = load %3
		%5 = icmp sle %4 0
		br %5, %6, %7
	6:
		store 0, %2
		br %14
	7:
		%8 = load %3
		%9 = call i32 @g(i32 %8)
		%10 = load %3
		%11 = add i32 %10, 1
		%12 = call i32 @g(i32 %11)
		%13 = add i32 %9, %12
		store %13, %2
		br %14
	14:
		%15 = load %2
		ret %15

*BasicFunctionTypename: "g" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: (0 i32) variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 27
	0:
		%2 = alloca i32, align 4
		%3 = alloca i32, align 4
		store %0, %3
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		%4 = load %3
		%5 = icmp sle %4 0
		br %5, %6, %7
	6:
		store 0, %2
		br %15
	7:
		%8 = load %3
		%9 = sub i32 %8, 1
		%10 = call i32 @f(i32 %9)
		%11 = load %3
		%12 = sub i32 %11, 2
		%13 = call i32 @f(i32 %12)
		%14 = add i32 %10, %13
		store %14, %2
		br %15
	15:
		%16 = load %2
		ret %16

*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 44
	0:
		%1 = alloca i32, align 4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %1)
		%2 = call i32 (...)* @__VERIFIER_nondet_int()
		store %2, %1
		%3 = load %1
		%4 = call i32 @g(i32 %3)
		ret 0


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 1 SCC.
----------------------------------------

(6)
Obligation:
SCC
----------------------------------------

(7) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 56 rulesP rules:
f_297(v140, v141, v142, 3, 1, 4) -> f_298(v140, v141, v143, v142, v144, 3, 1, 4) :|: 1 <= v143 && v144 = 3 + v143 && 4 <= v144
f_298(v140, v141, v143, v142, v144, 3, 1, 4) -> f_299(v140, v141, v143, v142, v144, 3, 1, 4) :|: TRUE
f_299(v140, v141, v143, v142, v144, 3, 1, 4) -> f_300(v140, v141, v143, v142, v144, 3, 1, 4) :|: TRUE
f_300(v140, v141, v143, v142, v144, 3, 1, 4) -> f_301(v140, v141, v143, v142, v144, 3, 1, 4) :|: 0 = 0
f_301(v140, v141, v143, v142, v144, 3, 1, 4) -> f_303(v140, v141, v143, v142, v144, 3, 1, 4) :|: 0 < v140
f_303(v140, v141, v143, v142, v144, 3, 1, 4) -> f_305(v140, v141, v143, 0, v142, v144, 3, 1, 4) :|: 0 = 0
f_305(v140, v141, v143, 0, v142, v144, 3, 1, 4) -> f_307(v140, v141, v143, 0, v142, v144, 3, 1, 4) :|: TRUE
f_307(v140, v141, v143, 0, v142, v144, 3, 1, 4) -> f_309(v140, v141, v143, 0, v142, v144, 3, 1, 4) :|: 0 = 0
f_309(v140, v141, v143, 0, v142, v144, 3, 1, 4) -> f_311(v140, v141, v143, 0, v146, v142, v144, 3, 1, 4) :|: 1 + v146 = v140 && 0 <= v146
f_311(v140, v141, v143, 0, v146, v142, v144, 3, 1, 4) -> f_313(v146, v141, v142, v143, v144, v140, 0, 3, 1, 4) :|: 0 = 0
f_313(v146, v141, v142, v143, v144, v140, 0, 3, 1, 4) -> f_315(v146, v141, v142, v143, v144, v140, 3, 1, 4, 0) :|: TRUE
f_313(v146, v141, v142, v143, v144, v140, 0, 3, 1, 4) -> f_384(0, v141, v142, v143, v144, 1, 3, 4) :|: TRUE
f_313(v146, v141, v142, v143, v144, v140, 0, 3, 1, 4) -> f_448(v146, 0, v141, v142, v143, v144, v140, 3, 1, 2, 4) :|: TRUE
f_313(v146, v141, v142, v143, v144, v140, 0, 3, 1, 4) -> f_482(v146, 0, v141, v142, v143, v144, v140, 3, 1, 2, 4) :|: TRUE
f_315(v146, v141, v142, v143, v144, v140, 3, 1, 4, 0) -> f_341(v146, v141, v142, v143, v144, v140, 3, 1, 0, 4) :|: TRUE
f_341(v171, v172, v173, v174, v175, v176, 3, 1, 0, 4) -> f_366(v171, 0, 1) :|: TRUE
f_366(v198, 0, 1) -> f_367(v198, v199, v200, 3, 0, 1, 4) :|: 1 <= v199 && v200 = 3 + v199 && 4 <= v200
f_367(v198, v199, v200, 3, 0, 1, 4) -> f_368(v198, v199, v201, v200, v202, 3, 0, 1, 4) :|: 1 <= v201 && v202 = 3 + v201 && 4 <= v202
f_368(v198, v199, v201, v200, v202, 3, 0, 1, 4) -> f_369(v198, v199, v201, v200, v202, 3, 0, 1, 4) :|: TRUE
f_369(v198, v199, v201, v200, v202, 3, 0, 1, 4) -> f_370(v198, v199, v201, v200, v202, 3, 0, 1, 4) :|: TRUE
f_370(v198, v199, v201, v200, v202, 3, 0, 1, 4) -> f_371(v198, v199, v201, v200, v202, 3, 0, 1, 4) :|: 0 = 0
f_371(v198, v199, v201, v200, v202, 3, 0, 1, 4) -> f_373(v198, v199, v201, v200, v202, 3, 1, 4) :|: 0 < v198
f_373(v198, v199, v201, v200, v202, 3, 1, 4) -> f_375(v198, v199, v201, 0, v200, v202, 3, 1, 4) :|: 0 = 0
f_375(v198, v199, v201, 0, v200, v202, 3, 1, 4) -> f_377(v198, v199, v201, 0, v200, v202, 3, 1, 4) :|: TRUE
f_377(v198, v199, v201, 0, v200, v202, 3, 1, 4) -> f_379(v198, v199, v201, 0, v200, v202, 3, 1, 4) :|: 0 = 0
f_379(v198, v199, v201, 0, v200, v202, 3, 1, 4) -> f_381(v198, v199, v200, v201, v202, 0, 3, 1, 4) :|: 0 = 0
f_381(v198, v199, v200, v201, v202, 0, 3, 1, 4) -> f_383(v198, v199, v200, v201, v202, 3, 1, 4) :|: TRUE
f_381(v198, v199, v200, v201, v202, 0, 3, 1, 4) -> f_434(v198, 0, v199, v200, v201, v202, 3, 1, 4) :|: TRUE
f_381(v198, v199, v200, v201, v202, 0, 3, 1, 4) -> f_468(v198, 0, v199, v200, v201, v202, 3, 1, 4) :|: TRUE
f_383(v198, v199, v200, v201, v202, 3, 1, 4) -> f_295(v198) :|: TRUE
f_295(v140) -> f_297(v140, v141, v142, 3, 1, 4) :|: 1 <= v141 && v142 = 3 + v141 && 4 <= v142
f_434(v198, 0, v199, v200, v201, v202, 3, 1, 4) -> f_436(v198, v199, v201, 0, v200, v202, 3, 1, 4) :|: 0 = 0
f_436(v198, v199, v201, 0, v200, v202, 3, 1, 4) -> f_437(v198, v199, v201, 0, v200, v202, 3, 1, 4) :|: 0 = 0
f_437(v198, v199, v201, 0, v200, v202, 3, 1, 4) -> f_438(v198, v199, v201, 0, v295, v200, v202, 3, 1, 4, 2) :|: v295 = 1 + v198 && 2 <= v295
f_438(v198, v199, v201, 0, v295, v200, v202, 3, 1, 4, 2) -> f_439(v295, v199, v200, v201, v202, v198, 0, 3, 1, 4, 2) :|: 0 = 0
f_439(v295, v199, v200, v201, v202, v198, 0, 3, 1, 4, 2) -> f_440(v295, v199, v200, v201, v202, v198, 3, 1, 4, 2) :|: TRUE
f_440(v295, v199, v200, v201, v202, v198, 3, 1, 4, 2) -> f_295(v295) :|: TRUE
f_468(v198, 0, v199, v200, v201, v202, 3, 1, 4) -> f_471(v198, v199, v201, 0, v200, v202, 3, 1, 4) :|: 0 = 0
f_471(v198, v199, v201, 0, v200, v202, 3, 1, 4) -> f_472(v198, v199, v201, 0, v200, v202, 3, 1, 4) :|: 0 = 0
f_472(v198, v199, v201, 0, v200, v202, 3, 1, 4) -> f_473(v198, v199, v201, 0, v364, v200, v202, 3, 1, 4, 2) :|: v364 = 1 + v198 && 2 <= v364
f_473(v198, v199, v201, 0, v364, v200, v202, 3, 1, 4, 2) -> f_474(v364, v199, v200, v201, v202, v198, 0, 3, 1, 4, 2) :|: 0 = 0
f_474(v364, v199, v200, v201, v202, v198, 0, 3, 1, 4, 2) -> f_475(v364, v199, v200, v201, v202, v198, 3, 1, 4, 2) :|: TRUE
f_475(v364, v199, v200, v201, v202, v198, 3, 1, 4, 2) -> f_295(v364) :|: TRUE
f_384(0, v141, v142, v143, v144, 1, 3, 4) -> f_385(1, v141, v143, 0, v142, v144, 3, 4) :|: 0 = 0
f_385(1, v141, v143, 0, v142, v144, 3, 4) -> f_387(1, v141, v143, 0, v142, v144, 3, 4) :|: 0 = 0
f_387(1, v141, v143, 0, v142, v144, 3, 4) -> f_388(1, v141, v143, 0, -1, v142, v144, 3, 4) :|: 0 = 0
f_388(1, v141, v143, 0, -1, v142, v144, 3, 4) -> f_389(-1, v141, v142, v143, v144, 1, 0, 3, 4) :|: 0 = 0
f_389(-1, v141, v142, v143, v144, 1, 0, 3, 4) -> f_390(-1, v141, v142, v143, v144, 1, 3, 4) :|: TRUE
f_390(-1, v141, v142, v143, v144, 1, 3, 4) -> f_366(-1, 0, 1) :|: TRUE
f_448(v146, 0, v141, v142, v143, v144, v140, 3, 1, 2, 4) -> f_450(v140, v141, v143, 0, v146, v142, v144, 3, 1, 2, 4) :|: 0 = 0
f_450(v140, v141, v143, 0, v146, v142, v144, 3, 1, 2, 4) -> f_451(v140, v141, v143, 0, v146, v142, v144, 3, 1, 2, 4) :|: 0 = 0
f_451(v140, v141, v143, 0, v146, v142, v144, 3, 1, 2, 4) -> f_452(v140, v141, v143, 0, v146, v321, v142, v144, 3, 1, 2, 4) :|: 2 + v321 = v140 && 0 <= v321
f_452(v140, v141, v143, 0, v146, v321, v142, v144, 3, 1, 2, 4) -> f_453(v321, v141, v142, v143, v144, v140, 0, v146, 3, 1, 2, 4) :|: 0 = 0
f_453(v321, v141, v142, v143, v144, v140, 0, v146, 3, 1, 2, 4) -> f_454(v321, v141, v142, v143, v144, v140, 3, 2, 1, 4, 0) :|: TRUE
f_454(v321, v141, v142, v143, v144, v140, 3, 2, 1, 4, 0) -> f_366(v321, 0, 1) :|: TRUE
f_482(v146, 0, v141, v142, v143, v144, v140, 3, 1, 2, 4) -> f_448(v146, 0, v141, v142, v143, v144, v140, 3, 1, 2, 4) :|: TRUE
Combined rules. Obtained 4 rulesP rules:
f_297(2 + v321:0, v141:0, v142:0, 3, 1, 4) -> f_381(v321:0, v199:0, 3 + v199:0, v201:0, 3 + v201:0, 0, 3, 1, 4) :|: v321:0 > 0 && v143:0 > 0 && v199:0 > 0 && v201:0 > 0 && 2 + v321:0 = 1 + v146:0 && v146:0 > -1
f_381(v198:0, v199:0, v200:0, v201:0, v202:0, 0, 3, 1, 4) -> f_297(1 + v198:0, v141:0, 3 + v141:0, 3, 1, 4) :|: v198:0 > 0 && v141:0 > 0
f_381(v198:0, v199:0, v200:0, v201:0, v202:0, 0, 3, 1, 4) -> f_297(v198:0, v141:0, 3 + v141:0, 3, 1, 4) :|: v141:0 > 0
f_297(1 + v146:0, v141:0, v142:0, 3, 1, 4) -> f_381(v146:0, v199:0, 3 + v199:0, v201:0, 3 + v201:0, 0, 3, 1, 4) :|: v146:0 > 0 && v143:0 > 0 && v199:0 > 0 && v201:0 > 0
Filtered unneeded arguments:
   f_297(x1, x2, x3, x4, x5, x6) -> f_297(x1)
   f_381(x1, x2, x3, x4, x5, x6, x7, x8, x9) -> f_381(x1)
Removed division, modulo operations, cleaned up constraints. Obtained 4 rules.P rules:
f_297(sum~cons_2~v321:0) -> f_381(v321:0) :|: v321:0 > 0 && sum~cons_2~v321:0 = 2 + v321:0
f_381(v198:0) -> f_297(1 + v198:0) :|: v198:0 > 0
f_381(v198:0) -> f_297(v198:0) :|: TRUE
f_297(sum~cons_1~v146:0) -> f_381(v146:0) :|: v146:0 > 0 && sum~cons_1~v146:0 = 1 + v146:0

----------------------------------------

(8)
Obligation:
Rules:
f_297(sum~cons_2~v321:0) -> f_381(v321:0) :|: v321:0 > 0 && sum~cons_2~v321:0 = 2 + v321:0
f_381(v198:0) -> f_297(1 + v198:0) :|: v198:0 > 0
f_381(x) -> f_297(x) :|: TRUE
f_297(sum~cons_1~v146:0) -> f_381(v146:0) :|: v146:0 > 0 && sum~cons_1~v146:0 = 1 + v146:0

----------------------------------------

(9) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(10)
Obligation:
Rules:
f_381(x:0) -> f_297(x:0) :|: TRUE
f_297(sum~cons_2~v321:0:0) -> f_381(v321:0:0) :|: v321:0:0 > 0 && sum~cons_2~v321:0:0 = 2 + v321:0:0
f_297(sum~cons_1~v146:0:0) -> f_381(v146:0:0) :|: v146:0:0 > 0 && sum~cons_1~v146:0:0 = 1 + v146:0:0
f_381(v198:0:0) -> f_297(1 + v198:0:0) :|: v198:0:0 > 0

----------------------------------------

(11) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, x:0) -> f(2, x:0) :|: pc = 1 && TRUE
f(pc, sum~cons_2~v321:0:0) -> f(1, v321:0:0) :|: pc = 2 && (v321:0:0 > 0 && sum~cons_2~v321:0:0 = 2 + v321:0:0)
f(pc, sum~cons_1~v146:0:0) -> f(1, v146:0:0) :|: pc = 2 && (v146:0:0 > 0 && sum~cons_1~v146:0:0 = 1 + v146:0:0)
f(pc, v198:0:0) -> f(2, 1 + v198:0:0) :|: pc = 1 && v198:0:0 > 0
Witness term starting non-terminating reduction: f(1, 5)
----------------------------------------

(12)
NO

----------------------------------------

(13) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 56 rulesP rules:
f_297(v140, v141, v142, 3, 1, 4) -> f_298(v140, v141, v143, v142, v144, 3, 1, 4) :|: 1 <= v143 && v144 = 3 + v143 && 4 <= v144
f_298(v140, v141, v143, v142, v144, 3, 1, 4) -> f_299(v140, v141, v143, v142, v144, 3, 1, 4) :|: TRUE
f_299(v140, v141, v143, v142, v144, 3, 1, 4) -> f_300(v140, v141, v143, v142, v144, 3, 1, 4) :|: TRUE
f_300(v140, v141, v143, v142, v144, 3, 1, 4) -> f_301(v140, v141, v143, v142, v144, 3, 1, 4) :|: 0 = 0
f_301(v140, v141, v143, v142, v144, 3, 1, 4) -> f_303(v140, v141, v143, v142, v144, 3, 1, 4) :|: 0 < v140
f_303(v140, v141, v143, v142, v144, 3, 1, 4) -> f_305(v140, v141, v143, 0, v142, v144, 3, 1, 4) :|: 0 = 0
f_305(v140, v141, v143, 0, v142, v144, 3, 1, 4) -> f_307(v140, v141, v143, 0, v142, v144, 3, 1, 4) :|: TRUE
f_307(v140, v141, v143, 0, v142, v144, 3, 1, 4) -> f_309(v140, v141, v143, 0, v142, v144, 3, 1, 4) :|: 0 = 0
f_309(v140, v141, v143, 0, v142, v144, 3, 1, 4) -> f_311(v140, v141, v143, 0, v146, v142, v144, 3, 1, 4) :|: 1 + v146 = v140 && 0 <= v146
f_311(v140, v141, v143, 0, v146, v142, v144, 3, 1, 4) -> f_313(v146, v141, v142, v143, v144, v140, 0, 3, 1, 4) :|: 0 = 0
f_313(v146, v141, v142, v143, v144, v140, 0, 3, 1, 4) -> f_315(v146, v141, v142, v143, v144, v140, 3, 1, 4, 0) :|: TRUE
f_313(v146, v141, v142, v143, v144, v140, 0, 3, 1, 4) -> f_384(0, v141, v142, v143, v144, 1, 3, 4) :|: TRUE
f_313(v146, v141, v142, v143, v144, v140, 0, 3, 1, 4) -> f_448(v146, 0, v141, v142, v143, v144, v140, 3, 1, 2, 4) :|: TRUE
f_313(v146, v141, v142, v143, v144, v140, 0, 3, 1, 4) -> f_482(v146, 0, v141, v142, v143, v144, v140, 3, 1, 2, 4) :|: TRUE
f_315(v146, v141, v142, v143, v144, v140, 3, 1, 4, 0) -> f_341(v146, v141, v142, v143, v144, v140, 3, 1, 0, 4) :|: 1 + v146 <= v140 && 0 <= 1 + v146 && 1 <= v141 && 4 <= v142 && 1 <= v143 && 4 <= v144 && 1 <= v140 && v141 <= v142 && v143 <= v144
f_341(v171, v172, v173, v174, v175, v176, 3, 1, 0, 4) -> f_366(v171, 0, 1) :|: 0 <= 1 + v171
f_366(v198, 0, 1) -> f_367(v198, v199, v200, 3, 0, 1, 4) :|: 1 <= v199 && v200 = 3 + v199 && 4 <= v200
f_367(v198, v199, v200, 3, 0, 1, 4) -> f_368(v198, v199, v201, v200, v202, 3, 0, 1, 4) :|: 1 <= v201 && v202 = 3 + v201 && 4 <= v202
f_368(v198, v199, v201, v200, v202, 3, 0, 1, 4) -> f_369(v198, v199, v201, v200, v202, 3, 0, 1, 4) :|: TRUE
f_369(v198, v199, v201, v200, v202, 3, 0, 1, 4) -> f_370(v198, v199, v201, v200, v202, 3, 0, 1, 4) :|: TRUE
f_370(v198, v199, v201, v200, v202, 3, 0, 1, 4) -> f_371(v198, v199, v201, v200, v202, 3, 0, 1, 4) :|: 0 = 0
f_371(v198, v199, v201, v200, v202, 3, 0, 1, 4) -> f_373(v198, v199, v201, v200, v202, 3, 1, 4) :|: 0 < v198
f_373(v198, v199, v201, v200, v202, 3, 1, 4) -> f_375(v198, v199, v201, 0, v200, v202, 3, 1, 4) :|: 0 = 0
f_375(v198, v199, v201, 0, v200, v202, 3, 1, 4) -> f_377(v198, v199, v201, 0, v200, v202, 3, 1, 4) :|: TRUE
f_377(v198, v199, v201, 0, v200, v202, 3, 1, 4) -> f_379(v198, v199, v201, 0, v200, v202, 3, 1, 4) :|: 0 = 0
f_379(v198, v199, v201, 0, v200, v202, 3, 1, 4) -> f_381(v198, v199, v200, v201, v202, 0, 3, 1, 4) :|: 0 = 0
f_381(v198, v199, v200, v201, v202, 0, 3, 1, 4) -> f_383(v198, v199, v200, v201, v202, 3, 1, 4) :|: TRUE
f_381(v198, v199, v200, v201, v202, 0, 3, 1, 4) -> f_434(v198, 0, v199, v200, v201, v202, 3, 1, 4) :|: TRUE
f_381(v198, v199, v200, v201, v202, 0, 3, 1, 4) -> f_468(v198, 0, v199, v200, v201, v202, 3, 1, 4) :|: TRUE
f_383(v198, v199, v200, v201, v202, 3, 1, 4) -> f_295(v198) :|: TRUE
f_295(v140) -> f_297(v140, v141, v142, 3, 1, 4) :|: 1 <= v141 && v142 = 3 + v141 && 4 <= v142
f_434(v198, 0, v199, v200, v201, v202, 3, 1, 4) -> f_436(v198, v199, v201, 0, v200, v202, 3, 1, 4) :|: 0 = 0
f_436(v198, v199, v201, 0, v200, v202, 3, 1, 4) -> f_437(v198, v199, v201, 0, v200, v202, 3, 1, 4) :|: 0 = 0
f_437(v198, v199, v201, 0, v200, v202, 3, 1, 4) -> f_438(v198, v199, v201, 0, v295, v200, v202, 3, 1, 4, 2) :|: v295 = 1 + v198 && 2 <= v295
f_438(v198, v199, v201, 0, v295, v200, v202, 3, 1, 4, 2) -> f_439(v295, v199, v200, v201, v202, v198, 0, 3, 1, 4, 2) :|: 0 = 0
f_439(v295, v199, v200, v201, v202, v198, 0, 3, 1, 4, 2) -> f_440(v295, v199, v200, v201, v202, v198, 3, 1, 4, 2) :|: TRUE
f_440(v295, v199, v200, v201, v202, v198, 3, 1, 4, 2) -> f_295(v295) :|: TRUE
f_468(v198, 0, v199, v200, v201, v202, 3, 1, 4) -> f_471(v198, v199, v201, 0, v200, v202, 3, 1, 4) :|: 0 = 0
f_471(v198, v199, v201, 0, v200, v202, 3, 1, 4) -> f_472(v198, v199, v201, 0, v200, v202, 3, 1, 4) :|: 0 = 0
f_472(v198, v199, v201, 0, v200, v202, 3, 1, 4) -> f_473(v198, v199, v201, 0, v364, v200, v202, 3, 1, 4, 2) :|: v364 = 1 + v198 && 2 <= v364
f_473(v198, v199, v201, 0, v364, v200, v202, 3, 1, 4, 2) -> f_474(v364, v199, v200, v201, v202, v198, 0, 3, 1, 4, 2) :|: 0 = 0
f_474(v364, v199, v200, v201, v202, v198, 0, 3, 1, 4, 2) -> f_475(v364, v199, v200, v201, v202, v198, 3, 1, 4, 2) :|: TRUE
f_475(v364, v199, v200, v201, v202, v198, 3, 1, 4, 2) -> f_295(v364) :|: TRUE
f_384(0, v141, v142, v143, v144, 1, 3, 4) -> f_385(1, v141, v143, 0, v142, v144, 3, 4) :|: 0 = 0
f_385(1, v141, v143, 0, v142, v144, 3, 4) -> f_387(1, v141, v143, 0, v142, v144, 3, 4) :|: 0 = 0
f_387(1, v141, v143, 0, v142, v144, 3, 4) -> f_388(1, v141, v143, 0, -1, v142, v144, 3, 4) :|: 0 = 0
f_388(1, v141, v143, 0, -1, v142, v144, 3, 4) -> f_389(-1, v141, v142, v143, v144, 1, 0, 3, 4) :|: 0 = 0
f_389(-1, v141, v142, v143, v144, 1, 0, 3, 4) -> f_390(-1, v141, v142, v143, v144, 1, 3, 4) :|: TRUE
f_390(-1, v141, v142, v143, v144, 1, 3, 4) -> f_366(-1, 0, 1) :|: 0 <= 1 + -1
f_448(v146, 0, v141, v142, v143, v144, v140, 3, 1, 2, 4) -> f_450(v140, v141, v143, 0, v146, v142, v144, 3, 1, 2, 4) :|: 0 = 0
f_450(v140, v141, v143, 0, v146, v142, v144, 3, 1, 2, 4) -> f_451(v140, v141, v143, 0, v146, v142, v144, 3, 1, 2, 4) :|: 0 = 0
f_451(v140, v141, v143, 0, v146, v142, v144, 3, 1, 2, 4) -> f_452(v140, v141, v143, 0, v146, v321, v142, v144, 3, 1, 2, 4) :|: 2 + v321 = v140 && 0 <= v321
f_452(v140, v141, v143, 0, v146, v321, v142, v144, 3, 1, 2, 4) -> f_453(v321, v141, v142, v143, v144, v140, 0, v146, 3, 1, 2, 4) :|: 0 = 0
f_453(v321, v141, v142, v143, v144, v140, 0, v146, 3, 1, 2, 4) -> f_454(v321, v141, v142, v143, v144, v140, 3, 2, 1, 4, 0) :|: TRUE
f_454(v321, v141, v142, v143, v144, v140, 3, 2, 1, 4, 0) -> f_366(v321, 0, 1) :|: 0 <= 1 + v321
f_482(v146, 0, v141, v142, v143, v144, v140, 3, 1, 2, 4) -> f_448(v146, 0, v141, v142, v143, v144, v140, 3, 1, 2, 4) :|: 2 <= v140 && 1 <= v141 && 4 <= v142 && 1 <= v143 && 4 <= v144 && 1 <= v146 && v141 <= v142 && v143 <= v144
Combined rules. Obtained 5 rulesP rules:
f_297(2 + v321:0, v141:0, v142:0, 3, 1, 4) -> f_381(v321:0, v199:0, 3 + v199:0, v201:0, 3 + v201:0, 0, 3, 1, 4) :|: v321:0 > 0 && v146:0 > 0 && v143:0 > 0 && v141:0 > 0 && v199:0 > 0 && v142:0 > 3 && v201:0 > 0 && 2 + v321:0 = 1 + v146:0 && v143:0 <= 3 + v143:0 && v142:0 >= v141:0
f_381(v198:0, v199:0, v200:0, v201:0, v202:0, 0, 3, 1, 4) -> f_297(1 + v198:0, v141:0, 3 + v141:0, 3, 1, 4) :|: v198:0 > 0 && v141:0 > 0
f_297(2 + v321:0, v141:0, v142:0, 3, 1, 4) -> f_381(v321:0, v199:0, 3 + v199:0, v201:0, 3 + v201:0, 0, 3, 1, 4) :|: v321:0 > 0 && v143:0 > 0 && v199:0 > 0 && v201:0 > 0 && 2 + v321:0 = 1 + v146:0 && v146:0 > -1
f_381(v198:0, v199:0, v200:0, v201:0, v202:0, 0, 3, 1, 4) -> f_297(v198:0, v141:0, 3 + v141:0, 3, 1, 4) :|: v141:0 > 0
f_297(1 + v146:0, v141:0, v142:0, 3, 1, 4) -> f_381(v146:0, v199:0, 3 + v199:0, v201:0, 3 + v201:0, 0, 3, 1, 4) :|: v146:0 > 0 && v143:0 > 0 && v141:0 > 0 && v142:0 > 3 && v142:0 >= v141:0 && v143:0 <= 3 + v143:0 && v199:0 > 0 && v201:0 > 0
Filtered unneeded arguments:
   f_297(x1, x2, x3, x4, x5, x6) -> f_297(x1, x2, x3)
   f_381(x1, x2, x3, x4, x5, x6, x7, x8, x9) -> f_381(x1)
Removed division, modulo operations, cleaned up constraints. Obtained 5 rules.P rules:
f_297(sum~cons_2~v321:0, v141:0, v142:0) -> f_381(v321:0) :|: v141:0 > 0 && v321:0 > 0 && v142:0 >= v141:0 && v142:0 > 3 && sum~cons_2~v321:0 = 2 + v321:0
f_381(v198:0) -> f_297(1 + v198:0, v141:0, 3 + v141:0) :|: v198:0 > 0 && v141:0 > 0
f_297(sum~cons_2~v321:0, v141:0, v142:0) -> f_381(v321:0) :|: v321:0 > 0 && sum~cons_2~v321:0 = 2 + v321:0
f_381(v198:0) -> f_297(v198:0, v141:0, 3 + v141:0) :|: v141:0 > 0
f_297(sum~cons_1~v146:0, v141:0, v142:0) -> f_381(v146:0) :|: v141:0 > 0 && v146:0 > 0 && v142:0 >= v141:0 && v142:0 > 3 && sum~cons_1~v146:0 = 1 + v146:0

----------------------------------------

(14)
Obligation:
Rules:
f_297(sum~cons_2~v321:0, v141:0, v142:0) -> f_381(v321:0) :|: v141:0 > 0 && v321:0 > 0 && v142:0 >= v141:0 && v142:0 > 3 && sum~cons_2~v321:0 = 2 + v321:0
f_381(x) -> f_297(1 + x, x1, 3 + x1) :|: x > 0 && x1 > 0
f_297(x2, x3, x4) -> f_381(x5) :|: x5 > 0 && x2 = 2 + x5
f_381(x6) -> f_297(x6, x7, 3 + x7) :|: x7 > 0
f_297(x8, x9, x10) -> f_381(x11) :|: x9 > 0 && x11 > 0 && x10 >= x9 && x10 > 3 && x8 = 1 + x11

----------------------------------------

(15) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(16)
Obligation:
Rules:
f_381(x:0) -> f_297(1 + x:0, x1:0, 3 + x1:0) :|: x:0 > 0 && x1:0 > 0
f_297(sum~cons_2~x5:0, x3:0, x4:0) -> f_381(x5:0) :|: x5:0 > 0 && sum~cons_2~x5:0 = 2 + x5:0
f_381(x6:0) -> f_297(x6:0, x7:0, 3 + x7:0) :|: x7:0 > 0
f_297(sum~cons_1~x11:0, x9:0, x10:0) -> f_381(x11:0) :|: x9:0 <= x10:0 && x10:0 > 3 && x11:0 > 0 && x9:0 > 0 && sum~cons_1~x11:0 = 1 + x11:0
f_297(sum~cons_2~v321:0:0, v141:0:0, v142:0:0) -> f_381(v321:0:0) :|: v142:0:0 >= v141:0:0 && v142:0:0 > 3 && v321:0:0 > 0 && v141:0:0 > 0 && sum~cons_2~v321:0:0 = 2 + v321:0:0

----------------------------------------

(17) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, x:0, y, y1) -> f(2, 1 + x:0, x1:0, 3 + x1:0) :|: pc = 1 && (x:0 > 0 && x1:0 > 0)
f(pc, sum~cons_2~x5:0, x3:0, x4:0) -> f(1, x5:0, z, z1) :|: pc = 2 && (x5:0 > 0 && sum~cons_2~x5:0 = 2 + x5:0)
f(pc, x6:0, y, y1) -> f(2, x6:0, x7:0, 3 + x7:0) :|: pc = 1 && x7:0 > 0
f(pc, sum~cons_1~x11:0, x9:0, x10:0) -> f(1, x11:0, z, z1) :|: pc = 2 && (x9:0 <= x10:0 && x10:0 > 3 && x11:0 > 0 && x9:0 > 0 && sum~cons_1~x11:0 = 1 + x11:0)
f(pc, sum~cons_2~v321:0:0, v141:0:0, v142:0:0) -> f(1, v321:0:0, z, z1) :|: pc = 2 && (v142:0:0 >= v141:0:0 && v142:0:0 > 3 && v321:0:0 > 0 && v141:0:0 > 0 && sum~cons_2~v321:0:0 = 2 + v321:0:0)
Witness term starting non-terminating reduction: f(2, 4, 4, 7)
----------------------------------------

(18)
NO

----------------------------------------

(19) SEGraph to IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 128 rulesP rules:
f_144 -> f_145(v1, v2, 3, 1, 4) :|: 1 <= v1 && v2 = 3 + v1 && 4 <= v2
f_145(v1, v2, 3, 1, 4) -> f_146(v1, v2, 3, 1, 4) :|: TRUE
f_146(v1, v2, 3, 1, 4) -> f_147(v1, v3, v2, 3, 1, 4) :|: TRUE
f_147(v1, v3, v2, 3, 1, 4) -> f_148(v1, v3, v2, 3, 1, 4) :|: TRUE
f_148(v1, v3, v2, 3, 1, 4) -> f_149(v1, v3, v2, 3, 1, 4) :|: 0 = 0
f_149(v1, v3, v2, 3, 1, 4) -> f_150(v3, v1, v2, 3, 1, 4) :|: 0 = 0
f_150(v3, v1, v2, 3, 1, 4) -> f_151(v3, v1, v2, 3, 1, 4) :|: TRUE
f_150(v3, v1, v2, 3, 1, 4) -> f_314(v3, 0, v1, v2, 3, 1, 4) :|: TRUE
f_150(v3, v1, v2, 3, 1, 4) -> f_433(v3, 0, v1, v2, 3, 1, 4) :|: TRUE
f_150(v3, v1, v2, 3, 1, 4) -> f_467(v3, 0, v1, v2, 3, 1, 4) :|: TRUE
f_151(v3, v1, v2, 3, 1, 4) -> f_190(v3, v1, v2, v3, 3, 1, 4) :|: TRUE
f_190(v33, v34, v35, v36, 3, 1, 4) -> f_230(v33, v34, v35, v36, 3, 1, 4) :|: TRUE
f_230(v67, v68, v69, v70, 3, 1, 4) -> f_295(v67) :|: TRUE
f_295(v140) -> f_297(v140, v141, v142, 3, 1, 4) :|: 1 <= v141 && v142 = 3 + v141 && 4 <= v142
f_297(v140, v141, v142, 3, 1, 4) -> f_298(v140, v141, v143, v142, v144, 3, 1, 4) :|: 1 <= v143 && v144 = 3 + v143 && 4 <= v144
f_298(v140, v141, v143, v142, v144, 3, 1, 4) -> f_299(v140, v141, v143, v142, v144, 3, 1, 4) :|: TRUE
f_299(v140, v141, v143, v142, v144, 3, 1, 4) -> f_300(v140, v141, v143, v142, v144, 3, 1, 4) :|: TRUE
f_300(v140, v141, v143, v142, v144, 3, 1, 4) -> f_301(v140, v141, v143, v142, v144, 3, 1, 4) :|: 0 = 0
f_301(v140, v141, v143, v142, v144, 3, 1, 4) -> f_302(v140, v141, v143, v142, v144, 3, 0, 1, 4) :|: v140 <= 0
f_301(v140, v141, v143, v142, v144, 3, 1, 4) -> f_303(v140, v141, v143, v142, v144, 3, 1, 4) :|: 0 < v140
f_302(v140, v141, v143, v142, v144, 3, 0, 1, 4) -> f_304(v140, v141, v143, 1, v142, v144, 3, 0, 4) :|: 0 = 0
f_303(v140, v141, v143, v142, v144, 3, 1, 4) -> f_305(v140, v141, v143, 0, v142, v144, 3, 1, 4) :|: 0 = 0
f_304(v140, v141, v143, 1, v142, v144, 3, 0, 4) -> f_306(v140, v141, v143, 1, v142, v144, 3, 0, 4) :|: TRUE
f_305(v140, v141, v143, 0, v142, v144, 3, 1, 4) -> f_307(v140, v141, v143, 0, v142, v144, 3, 1, 4) :|: TRUE
f_306(v140, v141, v143, 1, v142, v144, 3, 0, 4) -> f_308(v140, v141, v143, 1, v142, v144, 0, 3, 4) :|: TRUE
f_307(v140, v141, v143, 0, v142, v144, 3, 1, 4) -> f_309(v140, v141, v143, 0, v142, v144, 3, 1, 4) :|: 0 = 0
f_308(v140, v141, v143, 1, v142, v144, 0, 3, 4) -> f_310(v140, v141, v143, 1, v142, v144, 0, 3, 4) :|: TRUE
f_309(v140, v141, v143, 0, v142, v144, 3, 1, 4) -> f_311(v140, v141, v143, 0, v146, v142, v144, 3, 1, 4) :|: 1 + v146 = v140 && 0 <= v146
f_310(v140, v141, v143, 1, v142, v144, 0, 3, 4) -> f_312(v140, v141, v143, 1, 0, v142, v144, 3, 4) :|: 0 = 0
f_311(v140, v141, v143, 0, v146, v142, v144, 3, 1, 4) -> f_313(v146, v141, v142, v143, v144, v140, 0, 3, 1, 4) :|: 0 = 0
f_313(v146, v141, v142, v143, v144, v140, 0, 3, 1, 4) -> f_315(v146, v141, v142, v143, v144, v140, 3, 1, 4, 0) :|: TRUE
f_313(v146, v141, v142, v143, v144, v140, 0, 3, 1, 4) -> f_384(0, v141, v142, v143, v144, 1, 3, 4) :|: TRUE
f_313(v146, v141, v142, v143, v144, v140, 0, 3, 1, 4) -> f_448(v146, 0, v141, v142, v143, v144, v140, 3, 1, 2, 4) :|: TRUE
f_313(v146, v141, v142, v143, v144, v140, 0, 3, 1, 4) -> f_482(v146, 0, v141, v142, v143, v144, v140, 3, 1, 2, 4) :|: TRUE
f_314(v3, 0, v1, v2, 3, 1, 4) -> f_316(v1, v3, 0, v2, 3, 1, 4) :|: 0 = 0
f_315(v146, v141, v142, v143, v144, v140, 3, 1, 4, 0) -> f_341(v146, v141, v142, v143, v144, v140, 3, 1, 0, 4) :|: TRUE
f_341(v171, v172, v173, v174, v175, v176, 3, 1, 0, 4) -> f_366(v171, 0, 1) :|: TRUE
f_366(v198, 0, 1) -> f_367(v198, v199, v200, 3, 0, 1, 4) :|: 1 <= v199 && v200 = 3 + v199 && 4 <= v200
f_367(v198, v199, v200, 3, 0, 1, 4) -> f_368(v198, v199, v201, v200, v202, 3, 0, 1, 4) :|: 1 <= v201 && v202 = 3 + v201 && 4 <= v202
f_368(v198, v199, v201, v200, v202, 3, 0, 1, 4) -> f_369(v198, v199, v201, v200, v202, 3, 0, 1, 4) :|: TRUE
f_369(v198, v199, v201, v200, v202, 3, 0, 1, 4) -> f_370(v198, v199, v201, v200, v202, 3, 0, 1, 4) :|: TRUE
f_370(v198, v199, v201, v200, v202, 3, 0, 1, 4) -> f_371(v198, v199, v201, v200, v202, 3, 0, 1, 4) :|: 0 = 0
f_371(v198, v199, v201, v200, v202, 3, 0, 1, 4) -> f_372(v198, v199, v201, v200, v202, 3, 0, 1, 4) :|: v198 <= 0
f_371(v198, v199, v201, v200, v202, 3, 0, 1, 4) -> f_373(v198, v199, v201, v200, v202, 3, 1, 4) :|: 0 < v198
f_372(v198, v199, v201, v200, v202, 3, 0, 1, 4) -> f_374(v198, v199, v201, 1, v200, v202, 3, 0, 4) :|: 0 = 0
f_373(v198, v199, v201, v200, v202, 3, 1, 4) -> f_375(v198, v199, v201, 0, v200, v202, 3, 1, 4) :|: 0 = 0
f_374(v198, v199, v201, 1, v200, v202, 3, 0, 4) -> f_376(v198, v199, v201, 1, v200, v202, 3, 0, 4) :|: TRUE
f_375(v198, v199, v201, 0, v200, v202, 3, 1, 4) -> f_377(v198, v199, v201, 0, v200, v202, 3, 1, 4) :|: TRUE
f_376(v198, v199, v201, 1, v200, v202, 3, 0, 4) -> f_378(v198, v199, v201, 1, v200, v202, 0, 3, 4) :|: TRUE
f_377(v198, v199, v201, 0, v200, v202, 3, 1, 4) -> f_379(v198, v199, v201, 0, v200, v202, 3, 1, 4) :|: 0 = 0
f_378(v198, v199, v201, 1, v200, v202, 0, 3, 4) -> f_380(v198, v199, v201, 1, v200, v202, 0, 3, 4) :|: TRUE
f_379(v198, v199, v201, 0, v200, v202, 3, 1, 4) -> f_381(v198, v199, v200, v201, v202, 0, 3, 1, 4) :|: 0 = 0
f_380(v198, v199, v201, 1, v200, v202, 0, 3, 4) -> f_382(v198, v199, v201, 1, 0, v200, v202, 3, 4) :|: 0 = 0
f_381(v198, v199, v200, v201, v202, 0, 3, 1, 4) -> f_383(v198, v199, v200, v201, v202, 3, 1, 4) :|: TRUE
f_381(v198, v199, v200, v201, v202, 0, 3, 1, 4) -> f_386(v140, v141, v143, 1, 0, v142, v144, 3, 4) :|: TRUE
f_381(v198, v199, v200, v201, v202, 0, 3, 1, 4) -> f_434(v198, 0, v199, v200, v201, v202, 3, 1, 4) :|: TRUE
f_381(v198, v199, v200, v201, v202, 0, 3, 1, 4) -> f_468(v198, 0, v199, v200, v201, v202, 3, 1, 4) :|: TRUE
f_383(v198, v199, v200, v201, v202, 3, 1, 4) -> f_295(v198) :|: TRUE
f_384(0, v141, v142, v143, v144, 1, 3, 4) -> f_385(1, v141, v143, 0, v142, v144, 3, 4) :|: 0 = 0
f_385(1, v141, v143, 0, v142, v144, 3, 4) -> f_387(1, v141, v143, 0, v142, v144, 3, 4) :|: 0 = 0
f_387(1, v141, v143, 0, v142, v144, 3, 4) -> f_388(1, v141, v143, 0, -1, v142, v144, 3, 4) :|: 0 = 0
f_388(1, v141, v143, 0, -1, v142, v144, 3, 4) -> f_389(-1, v141, v142, v143, v144, 1, 0, 3, 4) :|: 0 = 0
f_389(-1, v141, v142, v143, v144, 1, 0, 3, 4) -> f_390(-1, v141, v142, v143, v144, 1, 3, 4) :|: TRUE
f_389(-1, v141, v142, v143, v144, 1, 0, 3, 4) -> f_391(-1, 0, v141, v142, v143, v144, 1, 3, 4) :|: TRUE
f_389(-1, v141, v142, v143, v144, 1, 0, 3, 4) -> f_413(v198, v199, v201, 0, v229, v200, v202, 3, 1, 4, 2) :|: TRUE
f_389(-1, v141, v142, v143, v144, 1, 0, 3, 4) -> f_449(v198, v199, v201, 0, v295, v200, v202, 3, 1, 4, 2) :|: TRUE
f_389(-1, v141, v142, v143, v144, 1, 0, 3, 4) -> f_483(v198, v199, v201, 0, v295, v200, v202, 3, 1, 4, 2) :|: TRUE
f_390(-1, v141, v142, v143, v144, 1, 3, 4) -> f_366(-1, 0, 1) :|: TRUE
f_391(-1, 0, v141, v142, v143, v144, 1, 3, 4) -> f_392(1, v141, v143, 0, -1, v142, v144, 3, 4) :|: 0 = 0
f_392(1, v141, v143, 0, -1, v142, v144, 3, 4) -> f_393(1, v141, v143, 0, -1, v142, v144, 3, 4) :|: 0 = 0
f_393(1, v141, v143, 0, -1, v142, v144, 3, 4) -> f_394(1, v141, v143, 0, -1, v142, v144, 3, 4) :|: TRUE
f_394(1, v141, v143, 0, -1, v142, v144, 3, 4) -> f_395(1, v141, v143, 0, -1, v142, v144, 3, 4) :|: TRUE
f_395(1, v141, v143, 0, -1, v142, v144, 3, 4) -> f_396(1, v141, v143, 0, -1, v142, v144, 3, 4) :|: 0 = 0
f_396(1, v141, v143, 0, -1, v142, v144, 3, 4) -> f_431(1, v141, v143, 0, 0, -1, v142, v144, 3, 1, 2, 4) :|: TRUE
f_431(v265, v266, v267, 0, v269, v270, v271, v272, 3, 1, 2, 4) -> f_432(v265, v266, v267, 0, v269, v270, v271, v272, 3, 1, 2, 4) :|: TRUE
f_433(v3, 0, v1, v2, 3, 1, 4) -> f_435(v1, v3, 0, v2, 3, 1, 4) :|: 0 = 0
f_434(v198, 0, v199, v200, v201, v202, 3, 1, 4) -> f_436(v198, v199, v201, 0, v200, v202, 3, 1, 4) :|: 0 = 0
f_436(v198, v199, v201, 0, v200, v202, 3, 1, 4) -> f_437(v198, v199, v201, 0, v200, v202, 3, 1, 4) :|: 0 = 0
f_437(v198, v199, v201, 0, v200, v202, 3, 1, 4) -> f_438(v198, v199, v201, 0, v295, v200, v202, 3, 1, 4, 2) :|: v295 = 1 + v198 && 2 <= v295
f_438(v198, v199, v201, 0, v295, v200, v202, 3, 1, 4, 2) -> f_439(v295, v199, v200, v201, v202, v198, 0, 3, 1, 4, 2) :|: 0 = 0
f_439(v295, v199, v200, v201, v202, v198, 0, 3, 1, 4, 2) -> f_440(v295, v199, v200, v201, v202, v198, 3, 1, 4, 2) :|: TRUE
f_439(v295, v199, v200, v201, v202, v198, 0, 3, 1, 4, 2) -> f_441(v140, v141, v143, 1, 0, v142, v144, 3, 4) :|: TRUE
f_439(v295, v199, v200, v201, v202, v198, 0, 3, 1, 4, 2) -> f_442(v295, 0, v199, v200, v201, v202, v198, 3, 1, 4, 2) :|: TRUE
f_439(v295, v199, v200, v201, v202, v198, 0, 3, 1, 4, 2) -> f_469(v295, 0, v199, v200, v201, v202, v198, 3, 1, 4, 2) :|: TRUE
f_440(v295, v199, v200, v201, v202, v198, 3, 1, 4, 2) -> f_295(v295) :|: TRUE
f_442(v295, 0, v199, v200, v201, v202, v198, 3, 1, 4, 2) -> f_443(v198, v199, v201, 0, v295, v200, v202, 3, 1, 4, 2) :|: 0 = 0
f_443(v198, v199, v201, 0, v295, v200, v202, 3, 1, 4, 2) -> f_444(v198, v199, v201, 0, v295, v200, v202, 3, 1, 4, 2) :|: 0 = 0
f_444(v198, v199, v201, 0, v295, v200, v202, 3, 1, 4, 2) -> f_445(v198, v199, v201, 0, v295, v200, v202, 3, 1, 4, 2) :|: TRUE
f_445(v198, v199, v201, 0, v295, v200, v202, 3, 1, 4, 2) -> f_446(v198, v199, v201, 0, v295, v200, v202, 3, 1, 4, 2) :|: TRUE
f_446(v198, v199, v201, 0, v295, v200, v202, 3, 1, 4, 2) -> f_447(v198, v199, v201, 0, v295, v200, v202, 3, 1, 4, 2) :|: 0 = 0
f_448(v146, 0, v141, v142, v143, v144, v140, 3, 1, 2, 4) -> f_450(v140, v141, v143, 0, v146, v142, v144, 3, 1, 2, 4) :|: 0 = 0
f_450(v140, v141, v143, 0, v146, v142, v144, 3, 1, 2, 4) -> f_451(v140, v141, v143, 0, v146, v142, v144, 3, 1, 2, 4) :|: 0 = 0
f_451(v140, v141, v143, 0, v146, v142, v144, 3, 1, 2, 4) -> f_452(v140, v141, v143, 0, v146, v321, v142, v144, 3, 1, 2, 4) :|: 2 + v321 = v140 && 0 <= v321
f_452(v140, v141, v143, 0, v146, v321, v142, v144, 3, 1, 2, 4) -> f_453(v321, v141, v142, v143, v144, v140, 0, v146, 3, 1, 2, 4) :|: 0 = 0
f_453(v321, v141, v142, v143, v144, v140, 0, v146, 3, 1, 2, 4) -> f_454(v321, v141, v142, v143, v144, v140, 3, 2, 1, 4, 0) :|: TRUE
f_453(v321, v141, v142, v143, v144, v140, 0, v146, 3, 1, 2, 4) -> f_455(0, v141, v142, v143, v144, 2, 1, 3, 4) :|: TRUE
f_453(v321, v141, v142, v143, v144, v140, 0, v146, 3, 1, 2, 4) -> f_456(v321, 0, v141, v142, v143, v144, v140, v146, 3, 1, 2, 4) :|: TRUE
f_453(v321, v141, v142, v143, v144, v140, 0, v146, 3, 1, 2, 4) -> f_484(v321, 0, v141, v142, v143, v144, v140, v146, 3, 1, 2, 4) :|: TRUE
f_454(v321, v141, v142, v143, v144, v140, 3, 2, 1, 4, 0) -> f_366(v321, 0, 1) :|: TRUE
f_455(0, v141, v142, v143, v144, 2, 1, 3, 4) -> f_457(2, v141, v143, 0, 1, v142, v144, 3, 4) :|: 0 = 0
f_456(v321, 0, v141, v142, v143, v144, v140, v146, 3, 1, 2, 4) -> f_458(v140, v141, v143, 0, v146, v321, v142, v144, 3, 1, 2, 4) :|: 0 = 0
f_457(2, v141, v143, 0, 1, v142, v144, 3, 4) -> f_459(2, v141, v143, 0, 1, v142, v144, 3, 4) :|: 0 = 0
f_458(v140, v141, v143, 0, v146, v321, v142, v144, 3, 1, 2, 4) -> f_460(v140, v141, v143, 0, v146, v321, v142, v144, 3, 1, 2, 4) :|: 0 = 0
f_459(2, v141, v143, 0, 1, v142, v144, 3, 4) -> f_461(2, v141, v143, 0, 1, v142, v144, 3, 4) :|: TRUE
f_460(v140, v141, v143, 0, v146, v321, v142, v144, 3, 1, 2, 4) -> f_462(v140, v141, v143, 0, v146, v321, v142, v144, 3, 1, 2, 4) :|: TRUE
f_461(2, v141, v143, 0, 1, v142, v144, 3, 4) -> f_463(2, v141, v143, 0, 1, v142, v144, 3, 4) :|: TRUE
f_462(v140, v141, v143, 0, v146, v321, v142, v144, 3, 1, 2, 4) -> f_464(v140, v141, v143, 0, v146, v321, v142, v144, 3, 1, 2, 4) :|: TRUE
f_463(2, v141, v143, 0, 1, v142, v144, 3, 4) -> f_465(2, v141, v143, 0, 1, v142, v144, 3, 4) :|: 0 = 0
f_464(v140, v141, v143, 0, v146, v321, v142, v144, 3, 1, 2, 4) -> f_466(v140, v141, v143, 0, v146, v321, v142, v144, 3, 1, 2, 4) :|: 0 = 0
f_465(2, v141, v143, 0, 1, v142, v144, 3, 4) -> f_432(2, v141, v143, 0, 1, 0, v142, v144, 3, 1, 2, 4) :|: TRUE
f_466(v140, v141, v143, 0, v146, v321, v142, v144, 3, 1, 2, 4) -> f_432(v140, v141, v143, 0, v146, v321, v142, v144, 3, 1, 2, 4) :|: TRUE
f_467(v3, 0, v1, v2, 3, 1, 4) -> f_470(v1, v3, 0, v2, 3, 1, 4) :|: 0 = 0
f_468(v198, 0, v199, v200, v201, v202, 3, 1, 4) -> f_471(v198, v199, v201, 0, v200, v202, 3, 1, 4) :|: 0 = 0
f_469(v295, 0, v199, v200, v201, v202, v198, 3, 1, 4, 2) -> f_442(v295, 0, v199, v200, v201, v202, v198, 3, 1, 4, 2) :|: TRUE
f_471(v198, v199, v201, 0, v200, v202, 3, 1, 4) -> f_472(v198, v199, v201, 0, v200, v202, 3, 1, 4) :|: 0 = 0
f_472(v198, v199, v201, 0, v200, v202, 3, 1, 4) -> f_473(v198, v199, v201, 0, v364, v200, v202, 3, 1, 4, 2) :|: v364 = 1 + v198 && 2 <= v364
f_473(v198, v199, v201, 0, v364, v200, v202, 3, 1, 4, 2) -> f_474(v364, v199, v200, v201, v202, v198, 0, 3, 1, 4, 2) :|: 0 = 0
f_474(v364, v199, v200, v201, v202, v198, 0, 3, 1, 4, 2) -> f_475(v364, v199, v200, v201, v202, v198, 3, 1, 4, 2) :|: TRUE
f_474(v364, v199, v200, v201, v202, v198, 0, 3, 1, 4, 2) -> f_476(v140, v141, v143, 1, 0, v142, v144, 3, 4) :|: TRUE
f_474(v364, v199, v200, v201, v202, v198, 0, 3, 1, 4, 2) -> f_477(v364, 0, v199, v200, v201, v202, v198, 3, 1, 4, 2) :|: TRUE
f_475(v364, v199, v200, v201, v202, v198, 3, 1, 4, 2) -> f_295(v364) :|: TRUE
f_477(v364, 0, v199, v200, v201, v202, v198, 3, 1, 4, 2) -> f_478(v198, v199, v201, 0, v364, v200, v202, 3, 1, 4, 2) :|: 0 = 0
f_478(v198, v199, v201, 0, v364, v200, v202, 3, 1, 4, 2) -> f_479(v198, v199, v201, 0, v364, v200, v202, 3, 1, 4, 2) :|: 0 = 0
f_479(v198, v199, v201, 0, v364, v200, v202, 3, 1, 4, 2) -> f_480(v198, v199, v201, 0, v364, v200, v202, 3, 1, 4, 2) :|: TRUE
f_480(v198, v199, v201, 0, v364, v200, v202, 3, 1, 4, 2) -> f_481(v198, v199, v201, 0, v364, v200, v202, 3, 1, 4, 2) :|: TRUE
f_481(v198, v199, v201, 0, v364, v200, v202, 3, 1, 4, 2) -> f_446(v198, v199, v201, 0, v364, v200, v202, 3, 1, 4, 2) :|: TRUE
f_482(v146, 0, v141, v142, v143, v144, v140, 3, 1, 2, 4) -> f_448(v146, 0, v141, v142, v143, v144, v140, 3, 1, 2, 4) :|: TRUE
f_484(v321, 0, v141, v142, v143, v144, v140, v146, 3, 1, 2, 4) -> f_456(v321, 0, v141, v142, v143, v144, v140, v146, 3, 1, 2, 4) :|: TRUE
Combined rules. Obtained 22 rulesP rules:
f_371(v198:0, v199:0, v201:0, v200:0, v202:0, 3, 0, 1, 4) -> f_386(v140:0, v141:0, v143:0, 1, 0, v142:0, v144:0, 3, 4) :|: v198:0 > 0
f_371(v198:0, v199:0, v201:0, v200:0, v202:0, 3, 0, 1, 4) -> f_447(v198:0, v199:0, v201:0, 0, 1 + v198:0, v200:0, v202:0, 3, 1, 4, 2) :|: v198:0 > 0
f_301(1 + v146:0, v141:0, v143:0, v142:0, v144:0, 3, 1, 4) -> f_483(v198:0, v199:0, v201:0, 0, v295:0, v200:0, v202:0, 3, 1, 4, 2) :|: v146:0 > -1
f_301(v140:0, v141:0, v143:0, v142:0, v144:0, 3, 1, 4) -> f_312(v140:0, v141:0, v143:0, 1, 0, v142:0, v144:0, 3, 4) :|: v140:0 < 1
f_453(v321:0, v141:0, v142:0, v143:0, v144:0, v140:0, 0, v146:0, 3, 1, 2, 4) -> f_371(v321:0, v199:0, v201:0, 3 + v199:0, 3 + v201:0, 3, 0, 1, 4) :|: v199:0 > 0 && v201:0 > 0
f_301(2 + v321:0, v141:0, v143:0, v142:0, v144:0, 3, 1, 4) -> f_453(v321:0, v141:0, v142:0, v143:0, v144:0, 2 + v321:0, 0, v146:0, 3, 1, 2, 4) :|: v321:0 > -1 && 2 + v321:0 = 1 + v146:0 && v146:0 > -1
f_144 -> f_301(v3:0, v141:0, v143:0, 3 + v141:0, 3 + v143:0, 3, 1, 4) :|: v1:0 > 0 && v141:0 > 0 && v143:0 > 0
f_301(1 + v146:0, v141:0, v143:0, v142:0, v144:0, 3, 1, 4) -> f_432(1, v141:0, v143:0, 0, 0, -1, v142:0, v144:0, 3, 1, 2, 4) :|: v146:0 > -1
f_144 -> f_435(v1:0, v3:0, 0, 3 + v1:0, 3, 1, 4) :|: v1:0 > 0
f_144 -> f_470(v1:0, v3:0, 0, 3 + v1:0, 3, 1, 4) :|: v1:0 > 0
f_301(1 + v146:0, v141:0, v143:0, v142:0, v144:0, 3, 1, 4) -> f_449(v198:0, v199:0, v201:0, 0, v295:0, v200:0, v202:0, 3, 1, 4, 2) :|: v146:0 > -1
f_301(1 + v146:0, v141:0, v143:0, v142:0, v144:0, 3, 1, 4) -> f_413(v198:0, v199:0, v201:0, 0, v229:0, v200:0, v202:0, 3, 1, 4, 2) :|: v146:0 > -1
f_453(v321:0, v141:0, v142:0, v143:0, v144:0, v140:0, 0, v146:0, 3, 1, 2, 4) -> f_432(2, v141:0, v143:0, 0, 1, 0, v142:0, v144:0, 3, 1, 2, 4) :|: TRUE
f_453(v321:0, v141:0, v142:0, v143:0, v144:0, v140:0, 0, v146:0, 3, 1, 2, 4) -> f_432(v140:0, v141:0, v143:0, 0, v146:0, v321:0, v142:0, v144:0, 3, 1, 2, 4) :|: TRUE
f_144 -> f_316(v1:0, v3:0, 0, 3 + v1:0, 3, 1, 4) :|: v1:0 > 0
f_301(1 + v146:0, v141:0, v143:0, v142:0, v144:0, 3, 1, 4) -> f_371(v146:0, v199:0, v201:0, 3 + v199:0, 3 + v201:0, 3, 0, 1, 4) :|: v146:0 > -1 && v199:0 > 0 && v201:0 > 0
f_371(v198:0, v199:0, v201:0, v200:0, v202:0, 3, 0, 1, 4) -> f_301(v198:0, v141:0, v143:0, 3 + v141:0, 3 + v143:0, 3, 1, 4) :|: v141:0 > 0 && v143:0 > 0 && v198:0 > 0
f_301(1 + v146:0, v141:0, v143:0, v142:0, v144:0, 3, 1, 4) -> f_371(-1, v199:0, v201:0, 3 + v199:0, 3 + v201:0, 3, 0, 1, 4) :|: v146:0 > -1 && v199:0 > 0 && v201:0 > 0
f_371(v198:0, v199:0, v201:0, v200:0, v202:0, 3, 0, 1, 4) -> f_441(v140:0, v141:0, v143:0, 1, 0, v142:0, v144:0, 3, 4) :|: v198:0 > 0
f_371(v198:0, v199:0, v201:0, v200:0, v202:0, 3, 0, 1, 4) -> f_476(v140:0, v141:0, v143:0, 1, 0, v142:0, v144:0, 3, 4) :|: v198:0 > 0
f_371(v198:0, v199:0, v201:0, v200:0, v202:0, 3, 0, 1, 4) -> f_382(v198:0, v199:0, v201:0, 1, 0, v200:0, v202:0, 3, 4) :|: v198:0 < 1
f_371(v198:0, v199:0, v201:0, v200:0, v202:0, 3, 0, 1, 4) -> f_301(1 + v198:0, v141:0, v143:0, 3 + v141:0, 3 + v143:0, 3, 1, 4) :|: v198:0 > 0 && v141:0 > 0 && v143:0 > 0
Filtered unneeded arguments:
   f_371(x1, x2, x3, x4, x5, x6, x7, x8, x9) -> f_371(x1)
   f_301(x1, x2, x3, x4, x5, x6, x7, x8) -> f_301(x1)
   f_453(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12) -> f_453(x1)
Removed division, modulo operations, cleaned up constraints. Obtained 22 rules.P rules:
f_371(v198:0) -> f_386(v140:0, v141:0, v143:0, 1, 0, v142:0, v144:0, 3, 4) :|: v198:0 > 0
f_371(v198:0) -> f_447(v198:0, v199:0, v201:0, 0, 1 + v198:0, v200:0, v202:0, 3, 1, 4, 2) :|: v198:0 > 0
f_301(sum~cons_1~v146:0) -> f_483(v198:0, v199:0, v201:0, 0, v295:0, v200:0, v202:0, 3, 1, 4, 2) :|: v146:0 > -1 && sum~cons_1~v146:0 = 1 + v146:0
f_301(v140:0) -> f_312(v140:0, v141:0, v143:0, 1, 0, v142:0, v144:0, 3, 4) :|: v140:0 < 1
f_453(v321:0) -> f_371(v321:0) :|: TRUE
f_301(sum~cons_2~v321:0) -> f_453(v321:0) :|: v321:0 > -1 && sum~cons_2~v321:0 = 2 + v321:0
f_144 -> f_301(v3:0) :|: TRUE
f_301(sum~cons_1~v146:0) -> f_432(1, v141:0, v143:0, 0, 0, -1, v142:0, v144:0, 3, 1, 2, 4) :|: v146:0 > -1 && sum~cons_1~v146:0 = 1 + v146:0
f_144 -> f_435(v1:0, v3:0, 0, 3 + v1:0, 3, 1, 4) :|: v1:0 > 0
f_144 -> f_470(v1:0, v3:0, 0, 3 + v1:0, 3, 1, 4) :|: v1:0 > 0
f_301(sum~cons_1~v146:0) -> f_449(v198:0, v199:0, v201:0, 0, v295:0, v200:0, v202:0, 3, 1, 4, 2) :|: v146:0 > -1 && sum~cons_1~v146:0 = 1 + v146:0
f_301(sum~cons_1~v146:0) -> f_413(v198:0, v199:0, v201:0, 0, v229:0, v200:0, v202:0, 3, 1, 4, 2) :|: v146:0 > -1 && sum~cons_1~v146:0 = 1 + v146:0
f_453(v321:0) -> f_432(2, v141:0, v143:0, 0, 1, 0, v142:0, v144:0, 3, 1, 2, 4) :|: TRUE
f_453(v321:0) -> f_432(v140:0, v141:0, v143:0, 0, v146:0, v321:0, v142:0, v144:0, 3, 1, 2, 4) :|: TRUE
f_144 -> f_316(v1:0, v3:0, 0, 3 + v1:0, 3, 1, 4) :|: v1:0 > 0
f_301(sum~cons_1~v146:0) -> f_371(v146:0) :|: v146:0 > -1 && sum~cons_1~v146:0 = 1 + v146:0
f_371(v198:0) -> f_301(v198:0) :|: v198:0 > 0
f_301(sum~cons_1~v146:0) -> f_371(-1) :|: v146:0 > -1 && sum~cons_1~v146:0 = 1 + v146:0
f_371(v198:0) -> f_441(v140:0, v141:0, v143:0, 1, 0, v142:0, v144:0, 3, 4) :|: v198:0 > 0
f_371(v198:0) -> f_476(v140:0, v141:0, v143:0, 1, 0, v142:0, v144:0, 3, 4) :|: v198:0 > 0
f_371(v198:0) -> f_382(v198:0, v199:0, v201:0, 1, 0, v200:0, v202:0, 3, 4) :|: v198:0 < 1
f_371(v198:0) -> f_301(1 + v198:0) :|: v198:0 > 0

----------------------------------------

(20)
Obligation:
Rules:
f_371(v198:0) -> f_386(v140:0, v141:0, v143:0, 1, 0, v142:0, v144:0, 3, 4) :|: v198:0 > 0
f_371(x) -> f_447(x, x1, x2, 0, 1 + x, x3, x4, 3, 1, 4, 2) :|: x > 0
f_301(x5) -> f_483(x6, x7, x8, 0, x9, x10, x11, 3, 1, 4, 2) :|: x12 > -1 && x5 = 1 + x12
f_301(x13) -> f_312(x13, x14, x15, 1, 0, x16, x17, 3, 4) :|: x13 < 1
f_453(v321:0) -> f_371(v321:0) :|: TRUE
f_301(x18) -> f_453(x19) :|: x19 > -1 && x18 = 2 + x19
f_144 -> f_301(v3:0) :|: TRUE
f_301(x20) -> f_432(1, x21, x22, 0, 0, -1, x23, x24, 3, 1, 2, 4) :|: x25 > -1 && x20 = 1 + x25
f_144 -> f_435(x26, x27, 0, 3 + x26, 3, 1, 4) :|: x26 > 0
f_144 -> f_470(x28, x29, 0, 3 + x28, 3, 1, 4) :|: x28 > 0
f_301(x30) -> f_449(x31, x32, x33, 0, x34, x35, x36, 3, 1, 4, 2) :|: x37 > -1 && x30 = 1 + x37
f_301(x38) -> f_413(x39, x40, x41, 0, x42, x43, x44, 3, 1, 4, 2) :|: x45 > -1 && x38 = 1 + x45
f_453(x46) -> f_432(2, x47, x48, 0, 1, 0, x49, x50, 3, 1, 2, 4) :|: TRUE
f_453(x51) -> f_432(x52, x53, x54, 0, x55, x51, x56, x57, 3, 1, 2, 4) :|: TRUE
f_144 -> f_316(x58, x59, 0, 3 + x58, 3, 1, 4) :|: x58 > 0
f_301(sum~cons_1~v146:0) -> f_371(v146:0) :|: v146:0 > -1 && sum~cons_1~v146:0 = 1 + v146:0
f_371(x60) -> f_301(x60) :|: x60 > 0
f_301(x61) -> f_371(-1) :|: x62 > -1 && x61 = 1 + x62
f_371(x63) -> f_441(x64, x65, x66, 1, 0, x67, x68, 3, 4) :|: x63 > 0
f_371(x69) -> f_476(x70, x71, x72, 1, 0, x73, x74, 3, 4) :|: x69 > 0
f_371(x75) -> f_382(x75, x76, x77, 1, 0, x78, x79, 3, 4) :|: x75 < 1
f_371(x80) -> f_301(1 + x80) :|: x80 > 0
Start term: f_144

----------------------------------------

(21) IRSToKoat (EQUIVALENT)
Convert an IRS to a koat problem
----------------------------------------

(22)
Obligation:
(GOAL COMPLEXITY)
(STARTTERM (FUNCTIONSYMBOLS f_144))
(VAR x290 x160 x281 x280 x162 x283 x161 x282 x164 x285 x163 x284 x166 x287 x165 x286 x168 x289 x167 x288 x169 x270 x151 x272 x150 x271 x153 x274 x152 x273 x155 x276 x154 x275 x157 x278 x156 x277 x159 x158 x279 x140 x261 x260 x142 x263 x141 x262 x144 x265 x143 x264 x146 x267 x145 x266 x148 x269 x147 x268 x149 x250 x131 x252 x130 x251 x133 x254 x132 x253 x135 x256 x134 x255 x137 x258 x136 x257 x139 x138 x259 x193 x192 x195 x194 x197 x196 x199 x198 x'' k14 k15 k16 k17 k10 k11 k12 k13 x191 x190 x182 x181 x184 x183 x186 x185 x188 x187 x189 x180 x171 x292 x170 x291 x173 x294 x172 x293 x175 x296 x174 x295 x177 x298 x176 x297 x179 x178 x299 k36 k37 k38 k39 k32 k33 k34 k35 k30 k31 k29 k25 k26 k27 k28 k21 k22 k23 k24 k20 k18 k19 k58 k59 k54 k55 k56 k57 k50 k51 k52 k53 k47 k48 k49 k43 k44 k45 k46 k40 k41 k42 k76 k77 k78 k79 k72 k73 k74 k75 k70 k71 x k69 k65 k66 k67 k68 k61 k62 k63 k64 k60 x28 x29 x24 x25 x26 x27 x20 x21 x22 x23 k83 k84 k85 k80 k81 k82 x17 x18 x19 x13 x14 x15 x16 x10 x11 x12 x46 x47 x48 x49 x42 x43 x44 x45 x40 x41 x39 x35 x36 x37 x38 x31 x32 x33 x34 x30 x70 x68 x69 x64 x65 x66 x67 x60 x61 x62 x63 k7 k8 k5 k6 k9 k0 k3 k4 k1 k2 x57 x58 x59 x53 x54 x55 x56 x50 x51 x52 x90 x91 x92 x86 x87 x88 x89 x82 x83 x84 x85 x80 x81 x79 x75 x76 x77 x78 x71 x72 x73 x74 x97 x98 x99 x93 x94 x95 x96 x209 x208 x329 x320 x201 x322 x200 x321 x203 x324 x202 x323 x205 x326 x204 x325 x207 x328 x206 x327 x319 x318 x311 x310 x313 x312 x315 x314 x317 x316 x308 x307 x309 x300 x302 x301 x304 x303 x306 x305 x120 x241 x240 x122 x243 x121 x242 x124 x245 x123 x244 x126 x247 x125 x246 x128 x249 x127 x248 x129 x230 x351 x350 x111 x232 x353 x110 x231 x352 x113 x234 x112 x233 x354 x115 x236 x114 x235 x117 x238 x116 x237 x119 x118 x239 x109 x4 x5 x2 x3 x8 x340 x9 x6 x100 x221 x342 x7 x220 x341 x102 x223 x344 x101 x222 x343 x104 x225 x346 x103 x224 x345 x106 x227 x348 x1 x105 x226 x347 x108 x229 x107 x228 x349 x219 x' x210 x331 x330 x212 x333 x211 x332 x214 x335 x213 x334 x216 x337 x215 x336 x218 x339 x217 x338)
(RULES
  f_301(k68, x72, x73, x74, x75, x76, x77, x78, x79, x80, x81, x82) -> f_312(k68, k70, k72, 1, 0, k74, k65, 3, 4, x83, x84, x85) :|: k68 < 1
  f_453(k1, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32) -> f_432(2, k2, k3, 0, 1, 0, k4, k82, 3, 1, 2, 4) :|: 0 = 0
  f_371(k8, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20) -> f_447(k8, k62, k41, 0, 1 + k8, k42, k36, 3, 1, 4, 2, x21) :|: k8 > 0
  f_301(k38, x, x', x'', x1, x2, x3, x4, x5, x6, x7, x8) -> f_483(k48, k50, k43, 0, k46, k76, k78, 3, 1, 4, 2, x9) :|: x12 > -1 && k38 = 1 + x12
  f_371(k64, x223, x224, x225, x226, x227, x228, x229, x230, x231, x232, x233) -> f_441(k53, k55, k57, 1, 0, k59, k45, 3, 4, x234, x235, x236) :|: k64 > 0
  f_371(k47, x237, x238, x239, x240, x241, x242, x243, x244, x245, x246, x247) -> f_476(k35, k29, k30, 1, 0, k32, k34, 3, 4, x248, x249, x250) :|: k47 > 0
  f_144(x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65, x66) -> f_435(k49, k51, 0, 3 + k49, 3, 1, 4, x67, x68, x69, x70, x71) :|: k49 > 0
  f_371(k61, x175, x176, x177, x178, x179, x180, x181, x182, x183, x184, x185) -> f_386(k23, k81, k84, 1, 0, k28, k31, 3, 4, x186, x187, x188) :|: k61 > 0
  f_371(k20, x251, x252, x253, x254, x255, x256, x257, x258, x259, x260, x261) -> f_382(k20, k22, k25, 1, 0, k27, k16, 3, 4, x262, x263, x264) :|: k20 < 1
  f_453(k9, x86, x87, x88, x89, x90, x91, x92, x93, x94, x95, x96) -> f_371(k9, x97, x98, x99, x100, x101, x102, x103, x104, x105, x106, x107) :|: 0 = 0
  f_453(k83, x305, x306, x307, x308, x309, x310, x311, x312, x313, x314, x315) -> f_432(k85, k75, k77, 0, k79, k83, k80, k69, 3, 1, 2, 4) :|: 0 = 0
  f_301(k66, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43) -> f_453(k67, x44, x45, x46, x47, x48, x49, x50, x51, x52, x53, x54) :|: k67 > -1 && k66 = 2 + k67
  f_371(k60, x201, x202, x203, x204, x205, x206, x207, x208, x209, x210, x211) -> f_301(k60, x212, x213, x214, x215, x216, x217, x218, x219, x220, x221, x222) :|: k60 > 0
  f_301(k10, x108, x109, x110, x111, x112, x113, x114, x115, x116, x117, x118) -> f_371(k0, x119, x120, x121, x122, x123, x124, x125, x126, x127, x128, x129) :|: k0 > -1 && k10 = 1 + k0
  f_301(k52, x152, x153, x154, x155, x156, x157, x158, x159, x160, x161, x162) -> f_432(1, k54, k56, 0, 0, -1, k58, k44, 3, 1, 2, 4) :|: x25 > -1 && k52 = 1 + x25
  f_144(x265, x266, x267, x268, x269, x270, x271, x272, x273, x274, x275, x276) -> f_301(k39, x277, x278, x279, x280, x281, x282, x283, x284, x285, x286, x287) :|: 0 = 0
  f_301(k33, x163, x164, x165, x166, x167, x168, x169, x170, x171, x172, x173) -> f_449(k19, k21, k24, 0, k26, k15, k17, 3, 1, 4, 2, x174) :|: x37 > -1 && k33 = 1 + x37
  f_144(x288, x289, x290, x291, x292, x293, x294, x295, x296, x297, x298, x299) -> f_470(k37, k40, 0, 3 + k37, 3, 1, 4, x300, x301, x302, x303, x304) :|: k37 > 0
  f_301(k63, x333, x334, x335, x336, x337, x338, x339, x340, x341, x342, x343) -> f_371(-1, x344, x345, x346, x347, x348, x349, x350, x351, x352, x353, x354) :|: x62 > -1 && k63 = 1 + x62
  f_144(x316, x317, x318, x319, x320, x321, x322, x323, x324, x325, x326, x327) -> f_316(k71, k73, 0, 3 + k71, 3, 1, 4, x328, x329, x330, x331, x332) :|: k71 > 0
  f_371(k13, x130, x131, x132, x133, x134, x135, x136, x137, x138, x139, x140) -> f_301(1 + k13, x141, x142, x143, x144, x145, x146, x147, x148, x149, x150, x151) :|: k13 > 0
  f_301(k18, x189, x190, x191, x192, x193, x194, x195, x196, x197, x198, x199) -> f_413(k14, k11, k12, 0, k5, k6, k7, 3, 1, 4, 2, x200) :|: x45 > -1 && k18 = 1 + x45
)

----------------------------------------

(23) KoAT2 (EQUIVALENT)
KoAT2 was called with the following command:

/aprove/bin/koat2 analyse --termination --cfr=pe -d5 --local=mprf,twn -rtermcomp -i /tmp/aprove.InputModules.Programs.koat2_2643496584261506364.koat 

KoAT2's output was:

MAYBE

----------------------------------------

(24)
MAYBE

----------------------------------------

(25) SEGraph to IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 128 rulesP rules:
f_144 -> f_145(v1, v2, 3, 1, 4) :|: 1 <= v1 && v2 = 3 + v1 && 4 <= v2
f_145(v1, v2, 3, 1, 4) -> f_146(v1, v2, 3, 1, 4) :|: TRUE
f_146(v1, v2, 3, 1, 4) -> f_147(v1, v3, v2, 3, 1, 4) :|: TRUE
f_147(v1, v3, v2, 3, 1, 4) -> f_148(v1, v3, v2, 3, 1, 4) :|: TRUE
f_148(v1, v3, v2, 3, 1, 4) -> f_149(v1, v3, v2, 3, 1, 4) :|: 0 = 0
f_149(v1, v3, v2, 3, 1, 4) -> f_150(v3, v1, v2, 3, 1, 4) :|: 0 = 0
f_150(v3, v1, v2, 3, 1, 4) -> f_151(v3, v1, v2, 3, 1, 4) :|: TRUE
f_150(v3, v1, v2, 3, 1, 4) -> f_314(v3, 0, v1, v2, 3, 1, 4) :|: TRUE
f_150(v3, v1, v2, 3, 1, 4) -> f_433(v3, 0, v1, v2, 3, 1, 4) :|: TRUE
f_150(v3, v1, v2, 3, 1, 4) -> f_467(v3, 0, v1, v2, 3, 1, 4) :|: TRUE
f_151(v3, v1, v2, 3, 1, 4) -> f_190(v3, v1, v2, v3, 3, 1, 4) :|: TRUE
f_190(v33, v34, v35, v36, 3, 1, 4) -> f_230(v33, v34, v35, v36, 3, 1, 4) :|: TRUE
f_230(v67, v68, v69, v70, 3, 1, 4) -> f_295(v67) :|: TRUE
f_295(v140) -> f_297(v140, v141, v142, 3, 1, 4) :|: 1 <= v141 && v142 = 3 + v141 && 4 <= v142
f_297(v140, v141, v142, 3, 1, 4) -> f_298(v140, v141, v143, v142, v144, 3, 1, 4) :|: 1 <= v143 && v144 = 3 + v143 && 4 <= v144
f_298(v140, v141, v143, v142, v144, 3, 1, 4) -> f_299(v140, v141, v143, v142, v144, 3, 1, 4) :|: TRUE
f_299(v140, v141, v143, v142, v144, 3, 1, 4) -> f_300(v140, v141, v143, v142, v144, 3, 1, 4) :|: TRUE
f_300(v140, v141, v143, v142, v144, 3, 1, 4) -> f_301(v140, v141, v143, v142, v144, 3, 1, 4) :|: 0 = 0
f_301(v140, v141, v143, v142, v144, 3, 1, 4) -> f_302(v140, v141, v143, v142, v144, 3, 0, 1, 4) :|: v140 <= 0
f_301(v140, v141, v143, v142, v144, 3, 1, 4) -> f_303(v140, v141, v143, v142, v144, 3, 1, 4) :|: 0 < v140
f_302(v140, v141, v143, v142, v144, 3, 0, 1, 4) -> f_304(v140, v141, v143, 1, v142, v144, 3, 0, 4) :|: 0 = 0
f_303(v140, v141, v143, v142, v144, 3, 1, 4) -> f_305(v140, v141, v143, 0, v142, v144, 3, 1, 4) :|: 0 = 0
f_304(v140, v141, v143, 1, v142, v144, 3, 0, 4) -> f_306(v140, v141, v143, 1, v142, v144, 3, 0, 4) :|: TRUE
f_305(v140, v141, v143, 0, v142, v144, 3, 1, 4) -> f_307(v140, v141, v143, 0, v142, v144, 3, 1, 4) :|: TRUE
f_306(v140, v141, v143, 1, v142, v144, 3, 0, 4) -> f_308(v140, v141, v143, 1, v142, v144, 0, 3, 4) :|: TRUE
f_307(v140, v141, v143, 0, v142, v144, 3, 1, 4) -> f_309(v140, v141, v143, 0, v142, v144, 3, 1, 4) :|: 0 = 0
f_308(v140, v141, v143, 1, v142, v144, 0, 3, 4) -> f_310(v140, v141, v143, 1, v142, v144, 0, 3, 4) :|: TRUE
f_309(v140, v141, v143, 0, v142, v144, 3, 1, 4) -> f_311(v140, v141, v143, 0, v146, v142, v144, 3, 1, 4) :|: 1 + v146 = v140 && 0 <= v146
f_310(v140, v141, v143, 1, v142, v144, 0, 3, 4) -> f_312(v140, v141, v143, 1, 0, v142, v144, 3, 4) :|: 0 = 0
f_311(v140, v141, v143, 0, v146, v142, v144, 3, 1, 4) -> f_313(v146, v141, v142, v143, v144, v140, 0, 3, 1, 4) :|: 0 = 0
f_313(v146, v141, v142, v143, v144, v140, 0, 3, 1, 4) -> f_315(v146, v141, v142, v143, v144, v140, 3, 1, 4, 0) :|: TRUE
f_313(v146, v141, v142, v143, v144, v140, 0, 3, 1, 4) -> f_384(0, v141, v142, v143, v144, 1, 3, 4) :|: TRUE
f_313(v146, v141, v142, v143, v144, v140, 0, 3, 1, 4) -> f_448(v146, 0, v141, v142, v143, v144, v140, 3, 1, 2, 4) :|: TRUE
f_313(v146, v141, v142, v143, v144, v140, 0, 3, 1, 4) -> f_482(v146, 0, v141, v142, v143, v144, v140, 3, 1, 2, 4) :|: TRUE
f_314(v3, 0, v1, v2, 3, 1, 4) -> f_316(v1, v3, 0, v2, 3, 1, 4) :|: 0 = 0
f_315(v146, v141, v142, v143, v144, v140, 3, 1, 4, 0) -> f_341(v146, v141, v142, v143, v144, v140, 3, 1, 0, 4) :|: TRUE
f_341(v171, v172, v173, v174, v175, v176, 3, 1, 0, 4) -> f_366(v171, 0, 1) :|: TRUE
f_366(v198, 0, 1) -> f_367(v198, v199, v200, 3, 0, 1, 4) :|: 1 <= v199 && v200 = 3 + v199 && 4 <= v200
f_367(v198, v199, v200, 3, 0, 1, 4) -> f_368(v198, v199, v201, v200, v202, 3, 0, 1, 4) :|: 1 <= v201 && v202 = 3 + v201 && 4 <= v202
f_368(v198, v199, v201, v200, v202, 3, 0, 1, 4) -> f_369(v198, v199, v201, v200, v202, 3, 0, 1, 4) :|: TRUE
f_369(v198, v199, v201, v200, v202, 3, 0, 1, 4) -> f_370(v198, v199, v201, v200, v202, 3, 0, 1, 4) :|: TRUE
f_370(v198, v199, v201, v200, v202, 3, 0, 1, 4) -> f_371(v198, v199, v201, v200, v202, 3, 0, 1, 4) :|: 0 = 0
f_371(v198, v199, v201, v200, v202, 3, 0, 1, 4) -> f_372(v198, v199, v201, v200, v202, 3, 0, 1, 4) :|: v198 <= 0
f_371(v198, v199, v201, v200, v202, 3, 0, 1, 4) -> f_373(v198, v199, v201, v200, v202, 3, 1, 4) :|: 0 < v198
f_372(v198, v199, v201, v200, v202, 3, 0, 1, 4) -> f_374(v198, v199, v201, 1, v200, v202, 3, 0, 4) :|: 0 = 0
f_373(v198, v199, v201, v200, v202, 3, 1, 4) -> f_375(v198, v199, v201, 0, v200, v202, 3, 1, 4) :|: 0 = 0
f_374(v198, v199, v201, 1, v200, v202, 3, 0, 4) -> f_376(v198, v199, v201, 1, v200, v202, 3, 0, 4) :|: TRUE
f_375(v198, v199, v201, 0, v200, v202, 3, 1, 4) -> f_377(v198, v199, v201, 0, v200, v202, 3, 1, 4) :|: TRUE
f_376(v198, v199, v201, 1, v200, v202, 3, 0, 4) -> f_378(v198, v199, v201, 1, v200, v202, 0, 3, 4) :|: TRUE
f_377(v198, v199, v201, 0, v200, v202, 3, 1, 4) -> f_379(v198, v199, v201, 0, v200, v202, 3, 1, 4) :|: 0 = 0
f_378(v198, v199, v201, 1, v200, v202, 0, 3, 4) -> f_380(v198, v199, v201, 1, v200, v202, 0, 3, 4) :|: TRUE
f_379(v198, v199, v201, 0, v200, v202, 3, 1, 4) -> f_381(v198, v199, v200, v201, v202, 0, 3, 1, 4) :|: 0 = 0
f_380(v198, v199, v201, 1, v200, v202, 0, 3, 4) -> f_382(v198, v199, v201, 1, 0, v200, v202, 3, 4) :|: 0 = 0
f_381(v198, v199, v200, v201, v202, 0, 3, 1, 4) -> f_383(v198, v199, v200, v201, v202, 3, 1, 4) :|: TRUE
f_381(v198, v199, v200, v201, v202, 0, 3, 1, 4) -> f_386(v140, v141, v143, 1, 0, v142, v144, 3, 4) :|: TRUE
f_381(v198, v199, v200, v201, v202, 0, 3, 1, 4) -> f_434(v198, 0, v199, v200, v201, v202, 3, 1, 4) :|: TRUE
f_381(v198, v199, v200, v201, v202, 0, 3, 1, 4) -> f_468(v198, 0, v199, v200, v201, v202, 3, 1, 4) :|: TRUE
f_383(v198, v199, v200, v201, v202, 3, 1, 4) -> f_295(v198) :|: TRUE
f_384(0, v141, v142, v143, v144, 1, 3, 4) -> f_385(1, v141, v143, 0, v142, v144, 3, 4) :|: 0 = 0
f_385(1, v141, v143, 0, v142, v144, 3, 4) -> f_387(1, v141, v143, 0, v142, v144, 3, 4) :|: 0 = 0
f_387(1, v141, v143, 0, v142, v144, 3, 4) -> f_388(1, v141, v143, 0, -1, v142, v144, 3, 4) :|: 0 = 0
f_388(1, v141, v143, 0, -1, v142, v144, 3, 4) -> f_389(-1, v141, v142, v143, v144, 1, 0, 3, 4) :|: 0 = 0
f_389(-1, v141, v142, v143, v144, 1, 0, 3, 4) -> f_390(-1, v141, v142, v143, v144, 1, 3, 4) :|: TRUE
f_389(-1, v141, v142, v143, v144, 1, 0, 3, 4) -> f_391(-1, 0, v141, v142, v143, v144, 1, 3, 4) :|: TRUE
f_389(-1, v141, v142, v143, v144, 1, 0, 3, 4) -> f_413(v198, v199, v201, 0, v229, v200, v202, 3, 1, 4, 2) :|: TRUE
f_389(-1, v141, v142, v143, v144, 1, 0, 3, 4) -> f_449(v198, v199, v201, 0, v295, v200, v202, 3, 1, 4, 2) :|: TRUE
f_389(-1, v141, v142, v143, v144, 1, 0, 3, 4) -> f_483(v198, v199, v201, 0, v295, v200, v202, 3, 1, 4, 2) :|: TRUE
f_390(-1, v141, v142, v143, v144, 1, 3, 4) -> f_366(-1, 0, 1) :|: TRUE
f_391(-1, 0, v141, v142, v143, v144, 1, 3, 4) -> f_392(1, v141, v143, 0, -1, v142, v144, 3, 4) :|: 0 = 0
f_392(1, v141, v143, 0, -1, v142, v144, 3, 4) -> f_393(1, v141, v143, 0, -1, v142, v144, 3, 4) :|: 0 = 0
f_393(1, v141, v143, 0, -1, v142, v144, 3, 4) -> f_394(1, v141, v143, 0, -1, v142, v144, 3, 4) :|: TRUE
f_394(1, v141, v143, 0, -1, v142, v144, 3, 4) -> f_395(1, v141, v143, 0, -1, v142, v144, 3, 4) :|: TRUE
f_395(1, v141, v143, 0, -1, v142, v144, 3, 4) -> f_396(1, v141, v143, 0, -1, v142, v144, 3, 4) :|: 0 = 0
f_396(1, v141, v143, 0, -1, v142, v144, 3, 4) -> f_431(1, v141, v143, 0, 0, -1, v142, v144, 3, 1, 2, 4) :|: TRUE
f_431(v265, v266, v267, 0, v269, v270, v271, v272, 3, 1, 2, 4) -> f_432(v265, v266, v267, 0, v269, v270, v271, v272, 3, 1, 2, 4) :|: TRUE
f_433(v3, 0, v1, v2, 3, 1, 4) -> f_435(v1, v3, 0, v2, 3, 1, 4) :|: 0 = 0
f_434(v198, 0, v199, v200, v201, v202, 3, 1, 4) -> f_436(v198, v199, v201, 0, v200, v202, 3, 1, 4) :|: 0 = 0
f_436(v198, v199, v201, 0, v200, v202, 3, 1, 4) -> f_437(v198, v199, v201, 0, v200, v202, 3, 1, 4) :|: 0 = 0
f_437(v198, v199, v201, 0, v200, v202, 3, 1, 4) -> f_438(v198, v199, v201, 0, v295, v200, v202, 3, 1, 4, 2) :|: v295 = 1 + v198 && 2 <= v295
f_438(v198, v199, v201, 0, v295, v200, v202, 3, 1, 4, 2) -> f_439(v295, v199, v200, v201, v202, v198, 0, 3, 1, 4, 2) :|: 0 = 0
f_439(v295, v199, v200, v201, v202, v198, 0, 3, 1, 4, 2) -> f_440(v295, v199, v200, v201, v202, v198, 3, 1, 4, 2) :|: TRUE
f_439(v295, v199, v200, v201, v202, v198, 0, 3, 1, 4, 2) -> f_441(v140, v141, v143, 1, 0, v142, v144, 3, 4) :|: TRUE
f_439(v295, v199, v200, v201, v202, v198, 0, 3, 1, 4, 2) -> f_442(v295, 0, v199, v200, v201, v202, v198, 3, 1, 4, 2) :|: TRUE
f_439(v295, v199, v200, v201, v202, v198, 0, 3, 1, 4, 2) -> f_469(v295, 0, v199, v200, v201, v202, v198, 3, 1, 4, 2) :|: TRUE
f_440(v295, v199, v200, v201, v202, v198, 3, 1, 4, 2) -> f_295(v295) :|: TRUE
f_442(v295, 0, v199, v200, v201, v202, v198, 3, 1, 4, 2) -> f_443(v198, v199, v201, 0, v295, v200, v202, 3, 1, 4, 2) :|: 0 = 0
f_443(v198, v199, v201, 0, v295, v200, v202, 3, 1, 4, 2) -> f_444(v198, v199, v201, 0, v295, v200, v202, 3, 1, 4, 2) :|: 0 = 0
f_444(v198, v199, v201, 0, v295, v200, v202, 3, 1, 4, 2) -> f_445(v198, v199, v201, 0, v295, v200, v202, 3, 1, 4, 2) :|: TRUE
f_445(v198, v199, v201, 0, v295, v200, v202, 3, 1, 4, 2) -> f_446(v198, v199, v201, 0, v295, v200, v202, 3, 1, 4, 2) :|: TRUE
f_446(v198, v199, v201, 0, v295, v200, v202, 3, 1, 4, 2) -> f_447(v198, v199, v201, 0, v295, v200, v202, 3, 1, 4, 2) :|: 0 = 0
f_448(v146, 0, v141, v142, v143, v144, v140, 3, 1, 2, 4) -> f_450(v140, v141, v143, 0, v146, v142, v144, 3, 1, 2, 4) :|: 0 = 0
f_450(v140, v141, v143, 0, v146, v142, v144, 3, 1, 2, 4) -> f_451(v140, v141, v143, 0, v146, v142, v144, 3, 1, 2, 4) :|: 0 = 0
f_451(v140, v141, v143, 0, v146, v142, v144, 3, 1, 2, 4) -> f_452(v140, v141, v143, 0, v146, v321, v142, v144, 3, 1, 2, 4) :|: 2 + v321 = v140 && 0 <= v321
f_452(v140, v141, v143, 0, v146, v321, v142, v144, 3, 1, 2, 4) -> f_453(v321, v141, v142, v143, v144, v140, 0, v146, 3, 1, 2, 4) :|: 0 = 0
f_453(v321, v141, v142, v143, v144, v140, 0, v146, 3, 1, 2, 4) -> f_454(v321, v141, v142, v143, v144, v140, 3, 2, 1, 4, 0) :|: TRUE
f_453(v321, v141, v142, v143, v144, v140, 0, v146, 3, 1, 2, 4) -> f_455(0, v141, v142, v143, v144, 2, 1, 3, 4) :|: TRUE
f_453(v321, v141, v142, v143, v144, v140, 0, v146, 3, 1, 2, 4) -> f_456(v321, 0, v141, v142, v143, v144, v140, v146, 3, 1, 2, 4) :|: TRUE
f_453(v321, v141, v142, v143, v144, v140, 0, v146, 3, 1, 2, 4) -> f_484(v321, 0, v141, v142, v143, v144, v140, v146, 3, 1, 2, 4) :|: TRUE
f_454(v321, v141, v142, v143, v144, v140, 3, 2, 1, 4, 0) -> f_366(v321, 0, 1) :|: TRUE
f_455(0, v141, v142, v143, v144, 2, 1, 3, 4) -> f_457(2, v141, v143, 0, 1, v142, v144, 3, 4) :|: 0 = 0
f_456(v321, 0, v141, v142, v143, v144, v140, v146, 3, 1, 2, 4) -> f_458(v140, v141, v143, 0, v146, v321, v142, v144, 3, 1, 2, 4) :|: 0 = 0
f_457(2, v141, v143, 0, 1, v142, v144, 3, 4) -> f_459(2, v141, v143, 0, 1, v142, v144, 3, 4) :|: 0 = 0
f_458(v140, v141, v143, 0, v146, v321, v142, v144, 3, 1, 2, 4) -> f_460(v140, v141, v143, 0, v146, v321, v142, v144, 3, 1, 2, 4) :|: 0 = 0
f_459(2, v141, v143, 0, 1, v142, v144, 3, 4) -> f_461(2, v141, v143, 0, 1, v142, v144, 3, 4) :|: TRUE
f_460(v140, v141, v143, 0, v146, v321, v142, v144, 3, 1, 2, 4) -> f_462(v140, v141, v143, 0, v146, v321, v142, v144, 3, 1, 2, 4) :|: TRUE
f_461(2, v141, v143, 0, 1, v142, v144, 3, 4) -> f_463(2, v141, v143, 0, 1, v142, v144, 3, 4) :|: TRUE
f_462(v140, v141, v143, 0, v146, v321, v142, v144, 3, 1, 2, 4) -> f_464(v140, v141, v143, 0, v146, v321, v142, v144, 3, 1, 2, 4) :|: TRUE
f_463(2, v141, v143, 0, 1, v142, v144, 3, 4) -> f_465(2, v141, v143, 0, 1, v142, v144, 3, 4) :|: 0 = 0
f_464(v140, v141, v143, 0, v146, v321, v142, v144, 3, 1, 2, 4) -> f_466(v140, v141, v143, 0, v146, v321, v142, v144, 3, 1, 2, 4) :|: 0 = 0
f_465(2, v141, v143, 0, 1, v142, v144, 3, 4) -> f_432(2, v141, v143, 0, 1, 0, v142, v144, 3, 1, 2, 4) :|: TRUE
f_466(v140, v141, v143, 0, v146, v321, v142, v144, 3, 1, 2, 4) -> f_432(v140, v141, v143, 0, v146, v321, v142, v144, 3, 1, 2, 4) :|: TRUE
f_467(v3, 0, v1, v2, 3, 1, 4) -> f_470(v1, v3, 0, v2, 3, 1, 4) :|: 0 = 0
f_468(v198, 0, v199, v200, v201, v202, 3, 1, 4) -> f_471(v198, v199, v201, 0, v200, v202, 3, 1, 4) :|: 0 = 0
f_469(v295, 0, v199, v200, v201, v202, v198, 3, 1, 4, 2) -> f_442(v295, 0, v199, v200, v201, v202, v198, 3, 1, 4, 2) :|: TRUE
f_471(v198, v199, v201, 0, v200, v202, 3, 1, 4) -> f_472(v198, v199, v201, 0, v200, v202, 3, 1, 4) :|: 0 = 0
f_472(v198, v199, v201, 0, v200, v202, 3, 1, 4) -> f_473(v198, v199, v201, 0, v364, v200, v202, 3, 1, 4, 2) :|: v364 = 1 + v198 && 2 <= v364
f_473(v198, v199, v201, 0, v364, v200, v202, 3, 1, 4, 2) -> f_474(v364, v199, v200, v201, v202, v198, 0, 3, 1, 4, 2) :|: 0 = 0
f_474(v364, v199, v200, v201, v202, v198, 0, 3, 1, 4, 2) -> f_475(v364, v199, v200, v201, v202, v198, 3, 1, 4, 2) :|: TRUE
f_474(v364, v199, v200, v201, v202, v198, 0, 3, 1, 4, 2) -> f_476(v140, v141, v143, 1, 0, v142, v144, 3, 4) :|: TRUE
f_474(v364, v199, v200, v201, v202, v198, 0, 3, 1, 4, 2) -> f_477(v364, 0, v199, v200, v201, v202, v198, 3, 1, 4, 2) :|: TRUE
f_475(v364, v199, v200, v201, v202, v198, 3, 1, 4, 2) -> f_295(v364) :|: TRUE
f_477(v364, 0, v199, v200, v201, v202, v198, 3, 1, 4, 2) -> f_478(v198, v199, v201, 0, v364, v200, v202, 3, 1, 4, 2) :|: 0 = 0
f_478(v198, v199, v201, 0, v364, v200, v202, 3, 1, 4, 2) -> f_479(v198, v199, v201, 0, v364, v200, v202, 3, 1, 4, 2) :|: 0 = 0
f_479(v198, v199, v201, 0, v364, v200, v202, 3, 1, 4, 2) -> f_480(v198, v199, v201, 0, v364, v200, v202, 3, 1, 4, 2) :|: TRUE
f_480(v198, v199, v201, 0, v364, v200, v202, 3, 1, 4, 2) -> f_481(v198, v199, v201, 0, v364, v200, v202, 3, 1, 4, 2) :|: TRUE
f_481(v198, v199, v201, 0, v364, v200, v202, 3, 1, 4, 2) -> f_446(v198, v199, v201, 0, v364, v200, v202, 3, 1, 4, 2) :|: TRUE
f_482(v146, 0, v141, v142, v143, v144, v140, 3, 1, 2, 4) -> f_448(v146, 0, v141, v142, v143, v144, v140, 3, 1, 2, 4) :|: TRUE
f_484(v321, 0, v141, v142, v143, v144, v140, v146, 3, 1, 2, 4) -> f_456(v321, 0, v141, v142, v143, v144, v140, v146, 3, 1, 2, 4) :|: TRUE
Combined rules. Obtained 22 rulesP rules:
f_371(v198:0, v199:0, v201:0, v200:0, v202:0, 3, 0, 1, 4) -> f_386(v140:0, v141:0, v143:0, 1, 0, v142:0, v144:0, 3, 4) :|: v198:0 > 0
f_371(v198:0, v199:0, v201:0, v200:0, v202:0, 3, 0, 1, 4) -> f_447(v198:0, v199:0, v201:0, 0, 1 + v198:0, v200:0, v202:0, 3, 1, 4, 2) :|: v198:0 > 0
f_301(1 + v146:0, v141:0, v143:0, v142:0, v144:0, 3, 1, 4) -> f_483(v198:0, v199:0, v201:0, 0, v295:0, v200:0, v202:0, 3, 1, 4, 2) :|: v146:0 > -1
f_301(v140:0, v141:0, v143:0, v142:0, v144:0, 3, 1, 4) -> f_312(v140:0, v141:0, v143:0, 1, 0, v142:0, v144:0, 3, 4) :|: v140:0 < 1
f_453(v321:0, v141:0, v142:0, v143:0, v144:0, v140:0, 0, v146:0, 3, 1, 2, 4) -> f_371(v321:0, v199:0, v201:0, 3 + v199:0, 3 + v201:0, 3, 0, 1, 4) :|: v199:0 > 0 && v201:0 > 0
f_301(2 + v321:0, v141:0, v143:0, v142:0, v144:0, 3, 1, 4) -> f_453(v321:0, v141:0, v142:0, v143:0, v144:0, 2 + v321:0, 0, v146:0, 3, 1, 2, 4) :|: v321:0 > -1 && 2 + v321:0 = 1 + v146:0 && v146:0 > -1
f_144 -> f_301(v3:0, v141:0, v143:0, 3 + v141:0, 3 + v143:0, 3, 1, 4) :|: v1:0 > 0 && v141:0 > 0 && v143:0 > 0
f_301(1 + v146:0, v141:0, v143:0, v142:0, v144:0, 3, 1, 4) -> f_432(1, v141:0, v143:0, 0, 0, -1, v142:0, v144:0, 3, 1, 2, 4) :|: v146:0 > -1
f_144 -> f_435(v1:0, v3:0, 0, 3 + v1:0, 3, 1, 4) :|: v1:0 > 0
f_144 -> f_470(v1:0, v3:0, 0, 3 + v1:0, 3, 1, 4) :|: v1:0 > 0
f_301(1 + v146:0, v141:0, v143:0, v142:0, v144:0, 3, 1, 4) -> f_449(v198:0, v199:0, v201:0, 0, v295:0, v200:0, v202:0, 3, 1, 4, 2) :|: v146:0 > -1
f_301(1 + v146:0, v141:0, v143:0, v142:0, v144:0, 3, 1, 4) -> f_413(v198:0, v199:0, v201:0, 0, v229:0, v200:0, v202:0, 3, 1, 4, 2) :|: v146:0 > -1
f_453(v321:0, v141:0, v142:0, v143:0, v144:0, v140:0, 0, v146:0, 3, 1, 2, 4) -> f_432(2, v141:0, v143:0, 0, 1, 0, v142:0, v144:0, 3, 1, 2, 4) :|: TRUE
f_453(v321:0, v141:0, v142:0, v143:0, v144:0, v140:0, 0, v146:0, 3, 1, 2, 4) -> f_432(v140:0, v141:0, v143:0, 0, v146:0, v321:0, v142:0, v144:0, 3, 1, 2, 4) :|: TRUE
f_144 -> f_316(v1:0, v3:0, 0, 3 + v1:0, 3, 1, 4) :|: v1:0 > 0
f_301(1 + v146:0, v141:0, v143:0, v142:0, v144:0, 3, 1, 4) -> f_371(v146:0, v199:0, v201:0, 3 + v199:0, 3 + v201:0, 3, 0, 1, 4) :|: v146:0 > -1 && v199:0 > 0 && v201:0 > 0
f_371(v198:0, v199:0, v201:0, v200:0, v202:0, 3, 0, 1, 4) -> f_301(v198:0, v141:0, v143:0, 3 + v141:0, 3 + v143:0, 3, 1, 4) :|: v141:0 > 0 && v143:0 > 0 && v198:0 > 0
f_301(1 + v146:0, v141:0, v143:0, v142:0, v144:0, 3, 1, 4) -> f_371(-1, v199:0, v201:0, 3 + v199:0, 3 + v201:0, 3, 0, 1, 4) :|: v146:0 > -1 && v199:0 > 0 && v201:0 > 0
f_371(v198:0, v199:0, v201:0, v200:0, v202:0, 3, 0, 1, 4) -> f_441(v140:0, v141:0, v143:0, 1, 0, v142:0, v144:0, 3, 4) :|: v198:0 > 0
f_371(v198:0, v199:0, v201:0, v200:0, v202:0, 3, 0, 1, 4) -> f_476(v140:0, v141:0, v143:0, 1, 0, v142:0, v144:0, 3, 4) :|: v198:0 > 0
f_371(v198:0, v199:0, v201:0, v200:0, v202:0, 3, 0, 1, 4) -> f_382(v198:0, v199:0, v201:0, 1, 0, v200:0, v202:0, 3, 4) :|: v198:0 < 1
f_371(v198:0, v199:0, v201:0, v200:0, v202:0, 3, 0, 1, 4) -> f_301(1 + v198:0, v141:0, v143:0, 3 + v141:0, 3 + v143:0, 3, 1, 4) :|: v198:0 > 0 && v141:0 > 0 && v143:0 > 0
Filtered unneeded arguments:
   f_371(x1, x2, x3, x4, x5, x6, x7, x8, x9) -> f_371(x1)
   f_301(x1, x2, x3, x4, x5, x6, x7, x8) -> f_301(x1)
   f_453(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12) -> f_453(x1)
Removed division, modulo operations, cleaned up constraints. Obtained 22 rules.P rules:
f_371(v198:0) -> f_386(v140:0, v141:0, v143:0, 1, 0, v142:0, v144:0, 3, 4) :|: v198:0 > 0
f_371(v198:0) -> f_447(v198:0, v199:0, v201:0, 0, 1 + v198:0, v200:0, v202:0, 3, 1, 4, 2) :|: v198:0 > 0
f_301(sum~cons_1~v146:0) -> f_483(v198:0, v199:0, v201:0, 0, v295:0, v200:0, v202:0, 3, 1, 4, 2) :|: v146:0 > -1 && sum~cons_1~v146:0 = 1 + v146:0
f_301(v140:0) -> f_312(v140:0, v141:0, v143:0, 1, 0, v142:0, v144:0, 3, 4) :|: v140:0 < 1
f_453(v321:0) -> f_371(v321:0) :|: TRUE
f_301(sum~cons_2~v321:0) -> f_453(v321:0) :|: v321:0 > -1 && sum~cons_2~v321:0 = 2 + v321:0
f_144 -> f_301(v3:0) :|: TRUE
f_301(sum~cons_1~v146:0) -> f_432(1, v141:0, v143:0, 0, 0, -1, v142:0, v144:0, 3, 1, 2, 4) :|: v146:0 > -1 && sum~cons_1~v146:0 = 1 + v146:0
f_144 -> f_435(v1:0, v3:0, 0, 3 + v1:0, 3, 1, 4) :|: v1:0 > 0
f_144 -> f_470(v1:0, v3:0, 0, 3 + v1:0, 3, 1, 4) :|: v1:0 > 0
f_301(sum~cons_1~v146:0) -> f_449(v198:0, v199:0, v201:0, 0, v295:0, v200:0, v202:0, 3, 1, 4, 2) :|: v146:0 > -1 && sum~cons_1~v146:0 = 1 + v146:0
f_301(sum~cons_1~v146:0) -> f_413(v198:0, v199:0, v201:0, 0, v229:0, v200:0, v202:0, 3, 1, 4, 2) :|: v146:0 > -1 && sum~cons_1~v146:0 = 1 + v146:0
f_453(v321:0) -> f_432(2, v141:0, v143:0, 0, 1, 0, v142:0, v144:0, 3, 1, 2, 4) :|: TRUE
f_453(v321:0) -> f_432(v140:0, v141:0, v143:0, 0, v146:0, v321:0, v142:0, v144:0, 3, 1, 2, 4) :|: TRUE
f_144 -> f_316(v1:0, v3:0, 0, 3 + v1:0, 3, 1, 4) :|: v1:0 > 0
f_301(sum~cons_1~v146:0) -> f_371(v146:0) :|: v146:0 > -1 && sum~cons_1~v146:0 = 1 + v146:0
f_371(v198:0) -> f_301(v198:0) :|: v198:0 > 0
f_301(sum~cons_1~v146:0) -> f_371(-1) :|: v146:0 > -1 && sum~cons_1~v146:0 = 1 + v146:0
f_371(v198:0) -> f_441(v140:0, v141:0, v143:0, 1, 0, v142:0, v144:0, 3, 4) :|: v198:0 > 0
f_371(v198:0) -> f_476(v140:0, v141:0, v143:0, 1, 0, v142:0, v144:0, 3, 4) :|: v198:0 > 0
f_371(v198:0) -> f_382(v198:0, v199:0, v201:0, 1, 0, v200:0, v202:0, 3, 4) :|: v198:0 < 1
f_371(v198:0) -> f_301(1 + v198:0) :|: v198:0 > 0

----------------------------------------

(26)
Obligation:
Rules:
f_371(v198:0) -> f_386(v140:0, v141:0, v143:0, 1, 0, v142:0, v144:0, 3, 4) :|: v198:0 > 0
f_371(x) -> f_447(x, x1, x2, 0, 1 + x, x3, x4, 3, 1, 4, 2) :|: x > 0
f_301(x5) -> f_483(x6, x7, x8, 0, x9, x10, x11, 3, 1, 4, 2) :|: x12 > -1 && x5 = 1 + x12
f_301(x13) -> f_312(x13, x14, x15, 1, 0, x16, x17, 3, 4) :|: x13 < 1
f_453(v321:0) -> f_371(v321:0) :|: TRUE
f_301(x18) -> f_453(x19) :|: x19 > -1 && x18 = 2 + x19
f_144 -> f_301(v3:0) :|: TRUE
f_301(x20) -> f_432(1, x21, x22, 0, 0, -1, x23, x24, 3, 1, 2, 4) :|: x25 > -1 && x20 = 1 + x25
f_144 -> f_435(x26, x27, 0, 3 + x26, 3, 1, 4) :|: x26 > 0
f_144 -> f_470(x28, x29, 0, 3 + x28, 3, 1, 4) :|: x28 > 0
f_301(x30) -> f_449(x31, x32, x33, 0, x34, x35, x36, 3, 1, 4, 2) :|: x37 > -1 && x30 = 1 + x37
f_301(x38) -> f_413(x39, x40, x41, 0, x42, x43, x44, 3, 1, 4, 2) :|: x45 > -1 && x38 = 1 + x45
f_453(x46) -> f_432(2, x47, x48, 0, 1, 0, x49, x50, 3, 1, 2, 4) :|: TRUE
f_453(x51) -> f_432(x52, x53, x54, 0, x55, x51, x56, x57, 3, 1, 2, 4) :|: TRUE
f_144 -> f_316(x58, x59, 0, 3 + x58, 3, 1, 4) :|: x58 > 0
f_301(sum~cons_1~v146:0) -> f_371(v146:0) :|: v146:0 > -1 && sum~cons_1~v146:0 = 1 + v146:0
f_371(x60) -> f_301(x60) :|: x60 > 0
f_301(x61) -> f_371(-1) :|: x62 > -1 && x61 = 1 + x62
f_371(x63) -> f_441(x64, x65, x66, 1, 0, x67, x68, 3, 4) :|: x63 > 0
f_371(x69) -> f_476(x70, x71, x72, 1, 0, x73, x74, 3, 4) :|: x69 > 0
f_371(x75) -> f_382(x75, x76, x77, 1, 0, x78, x79, 3, 4) :|: x75 < 1
f_371(x80) -> f_301(1 + x80) :|: x80 > 0
Start term: f_144

----------------------------------------

(27) IRSNoOverapproximation (EQUIVALENT)
Proof of non-termination is aborted since the IRSProblem over-approximates
----------------------------------------

(28)
MAYBE
/hpcwork/ff862203/termcomp25/benchmarks/u6Vkm.c:11:15: warning: implicit declaration of function 'g' is invalid in C99 [-Wimplicit-function-declaration]
  else return g(x) + g(x + 1); 
              ^
1 warning generated.

Graph finished, checking  consistency
Graph finished, checked consistency, took 0.001s
