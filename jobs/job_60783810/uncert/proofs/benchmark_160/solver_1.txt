YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/BPJ9K.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could be proven:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 17 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 1101 ms]
(4) LLVM Symbolic Execution Graph
(5) SEGraph to IRS [SOUND, 191 ms]
(6) IntTRS
(7) IRSToKoat [EQUIVALENT, 0 ms]
(8) Koat Problem
(9) KoAT2 [EQUIVALENT, 557 ms]
(10) YES


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/BPJ9K.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/BPJ9K.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 7
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		%3 = alloca i32, align 4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %1)
		%4 = call i32 @__VERIFIER_nondet_int()
		store %4, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		%5 = call i32 @__VERIFIER_nondet_int()
		store %5, %2
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		%6 = call i32 @__VERIFIER_nondet_int()
		store %6, %3
		%7 = call i32 @random()
		%8 = call i32 @random()
		%9 = call i32 @random()
		Unnamed Call-Instruction = call BasicVoidType @loop(i32 %7, i32 %8, i32 %9)
		ret 0

*BasicFunctionTypename: "loop" linkageType: EXTERNALLY_VISIBLE returnParam: BasicVoidType parameters: (0 i32, 1 i32, 2 i32) variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 26
	0:
		%4 = alloca i32, align 4
		%5 = alloca i32, align 4
		%6 = alloca i32, align 4
		%7 = alloca i32, align 4
		store %0, %4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %4)
		store %1, %5
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %5)
		store %2, %6
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %6)
		%8 = load %5
		%9 = load %6
		%10 = sub i32 %8, %9
		%11 = icmp sge %10 1
		br %11, %12, %26
	12:
		%13 = load %4
		%14 = load %6
		%15 = icmp eq %13 %14
		br %15, %16, %26
	16:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %7)
		%17 = call i32 @random()
		store %17, %7
		store 10, %5
		%18 = load %6
		%19 = add i32 %18, 1
		%20 = load %7
		%21 = add i32 %19, %20
		store %21, %6
		%22 = load %6
		store %22, %4
		%23 = load %4
		%24 = load %5
		%25 = load %6
		Unnamed Call-Instruction = call BasicVoidType @loop(i32 %23, i32 %24, i32 %25)
		br %26
	26:
		ret void

*BasicFunctionTypename: "random" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 63
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		%3 = call i32 @__VERIFIER_nondet_int()
		store %3, %2
		%4 = load %2
		%5 = icmp slt %4 0
		br %5, %6, %9
	6:
		%7 = load %2
		%8 = sub i32 0, %7
		store %8, %1
		br %11
	9:
		%10 = load %2
		store %10, %1
		br %11
	11:
		%12 = load %1
		ret %12


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SEGraph to IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 218 rulesP rules:
f_216 -> f_217(v1, v2, 3, 1, 4) :|: 1 <= v1 && v2 = 3 + v1 && 4 <= v2
f_217(v1, v2, 3, 1, 4) -> f_218(v1, v3, v2, v4, 3, 1, 4) :|: 1 <= v3 && v4 = 3 + v3 && 4 <= v4
f_218(v1, v3, v2, v4, 3, 1, 4) -> f_219(v1, v3, v5, v2, v4, v6, 3, 1, 4) :|: 1 <= v5 && v6 = 3 + v5 && 4 <= v6
f_219(v1, v3, v5, v2, v4, v6, 3, 1, 4) -> f_220(v1, v3, v5, v2, v4, v6, 3, 1, 4) :|: TRUE
f_220(v1, v3, v5, v2, v4, v6, 3, 1, 4) -> f_221(v1, v3, v5, v7, v2, v4, v6, 3, 1, 4) :|: TRUE
f_221(v1, v3, v5, v7, v2, v4, v6, 3, 1, 4) -> f_222(v1, v3, v5, v7, v2, v4, v6, 3, 1, 4) :|: TRUE
f_222(v1, v3, v5, v7, v2, v4, v6, 3, 1, 4) -> f_223(v1, v3, v5, v7, v2, v4, v6, 3, 1, 4) :|: TRUE
f_223(v1, v3, v5, v7, v2, v4, v6, 3, 1, 4) -> f_224(v1, v3, v5, v7, v9, v2, v4, v6, 3, 1, 4) :|: TRUE
f_224(v1, v3, v5, v7, v9, v2, v4, v6, 3, 1, 4) -> f_225(v1, v3, v5, v7, v9, v2, v4, v6, 3, 1, 4) :|: TRUE
f_225(v1, v3, v5, v7, v9, v2, v4, v6, 3, 1, 4) -> f_226(v1, v3, v5, v7, v9, v2, v4, v6, 3, 1, 4) :|: TRUE
f_226(v1, v3, v5, v7, v9, v2, v4, v6, 3, 1, 4) -> f_227(v1, v3, v5, v7, v9, v11, v2, v4, v6, 3, 1, 4) :|: TRUE
f_227(v1, v3, v5, v7, v9, v11, v2, v4, v6, 3, 1, 4) -> f_228(v1, v3, v5, v7, v9, v11, v2, v4, v6, 3, 1, 4) :|: TRUE
f_228(v1, v3, v5, v7, v9, v11, v2, v4, v6, 3, 1, 4) -> f_229(v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4) :|: TRUE
f_229(v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4) -> f_230(v13, v1, v2, v3, v4, v5, v6, v14, v7, v9, v11, 3, 1, 4) :|: 1 <= v13 && v14 = 3 + v13 && 4 <= v14
f_230(v13, v1, v2, v3, v4, v5, v6, v14, v7, v9, v11, 3, 1, 4) -> f_231(v13, v15, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) :|: 1 <= v15 && v16 = 3 + v15 && 4 <= v16
f_231(v13, v15, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) -> f_232(v13, v15, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) :|: TRUE
f_232(v13, v15, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) -> f_233(v13, v15, v17, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) :|: TRUE
f_233(v13, v15, v17, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) -> f_234(v13, v15, v17, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) :|: TRUE
f_234(v13, v15, v17, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) -> f_235(v13, v15, v17, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) :|: 0 = 0
f_235(v13, v15, v17, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) -> f_236(v13, v15, v17, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4, 0) :|: v17 < 0
f_235(v13, v15, v17, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) -> f_237(v13, v15, v17, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4, 0) :|: 0 <= v17
f_236(v13, v15, v17, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4, 0) -> f_238(v13, v15, v17, 1, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 4, 0) :|: 0 = 0
f_237(v13, v15, v17, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4, 0) -> f_239(v13, v15, v17, 0, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) :|: 0 = 0
f_238(v13, v15, v17, 1, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 4, 0) -> f_240(v13, v15, v17, 1, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 4, 0) :|: TRUE
f_239(v13, v15, v17, 0, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) -> f_241(v13, v15, v17, 0, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) :|: TRUE
f_240(v13, v15, v17, 1, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 4, 0) -> f_242(v13, v15, v17, 1, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 4, 0) :|: 0 = 0
f_241(v13, v15, v17, 0, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) -> f_243(v13, v15, v17, 0, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) :|: 0 = 0
f_242(v13, v15, v17, 1, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 4, 0) -> f_244(v13, v15, v17, 1, v19, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 0, 4) :|: v19 + v17 = 0 && 1 <= v19
f_243(v13, v15, v17, 0, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) -> f_245(v13, v15, v17, 0, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) :|: TRUE
f_244(v13, v15, v17, 1, v19, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 0, 4) -> f_246(v13, v15, v17, 1, v19, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 0, 4) :|: TRUE
f_245(v13, v15, v17, 0, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) -> f_247(v13, v15, v17, 0, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) :|: TRUE
f_246(v13, v15, v17, 1, v19, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 0, 4) -> f_248(v13, v15, v17, 1, v19, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 0, 4) :|: TRUE
f_247(v13, v15, v17, 0, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) -> f_249(v13, v15, v17, 0, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) :|: 0 = 0
f_248(v13, v15, v17, 1, v19, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 0, 4) -> f_250(v13, v15, v17, 1, v19, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 0, 4) :|: 0 = 0
f_249(v13, v15, v17, 0, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) -> f_251(v1, v3, v5, v7, v9, v11, v17, v2, v4, v6, 3, 1, 4, 0) :|: 0 = 0
f_250(v13, v15, v17, 1, v19, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 0, 4) -> f_252(v1, v3, v5, v7, v9, v11, v19, v2, v4, v6, 3, 1, 4) :|: 0 = 0
f_251(v1, v3, v5, v7, v9, v11, v17, v2, v4, v6, 3, 1, 4, 0) -> f_253(v1, v2, v3, v4, v5, v6, v7, v9, v11, v17, 3, 1, 4, 0) :|: TRUE
f_252(v1, v3, v5, v7, v9, v11, v19, v2, v4, v6, 3, 1, 4) -> f_254(v1, v2, v3, v4, v5, v6, v7, v9, v11, v19, 3, 1, 4) :|: TRUE
f_253(v1, v2, v3, v4, v5, v6, v7, v9, v11, v17, 3, 1, 4, 0) -> f_255(v32, v1, v2, v3, v4, v5, v6, v33, v7, v9, v11, v17, 3, 1, 4, 0) :|: 1 <= v32 && v33 = 3 + v32 && 4 <= v33
f_254(v1, v2, v3, v4, v5, v6, v7, v9, v11, v19, 3, 1, 4) -> f_253(v1, v2, v3, v4, v5, v6, v7, v9, v11, v17, 3, 1, 4, 0) :|: TRUE
f_255(v32, v1, v2, v3, v4, v5, v6, v33, v7, v9, v11, v17, 3, 1, 4, 0) -> f_256(v32, v34, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4, 0) :|: 1 <= v34 && v35 = 3 + v34 && 4 <= v35
f_256(v32, v34, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4, 0) -> f_257(v32, v34, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4, 0) :|: TRUE
f_257(v32, v34, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4, 0) -> f_258(v32, v34, v36, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4, 0) :|: TRUE
f_258(v32, v34, v36, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4, 0) -> f_259(v32, v34, v36, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4, 0) :|: TRUE
f_259(v32, v34, v36, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4, 0) -> f_260(v32, v34, v36, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4, 0) :|: 0 = 0
f_260(v32, v34, v36, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4, 0) -> f_261(v32, v34, v36, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4, 0) :|: v36 < 0
f_260(v32, v34, v36, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4, 0) -> f_262(v32, v34, v36, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4, 0) :|: 0 <= v36
f_261(v32, v34, v36, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4, 0) -> f_263(v32, v34, v36, 1, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 4, 0) :|: 0 = 0
f_262(v32, v34, v36, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4, 0) -> f_264(v32, v34, v36, 0, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4) :|: 0 = 0
f_263(v32, v34, v36, 1, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 4, 0) -> f_265(v32, v34, v36, 1, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 4, 0) :|: TRUE
f_264(v32, v34, v36, 0, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4) -> f_266(v32, v34, v36, 0, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4) :|: TRUE
f_265(v32, v34, v36, 1, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 4, 0) -> f_267(v32, v34, v36, 1, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 4, 0) :|: 0 = 0
f_266(v32, v34, v36, 0, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4) -> f_268(v32, v34, v36, 0, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4) :|: 0 = 0
f_267(v32, v34, v36, 1, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 4, 0) -> f_269(v32, v34, v36, 1, v38, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 0, 4) :|: v38 + v36 = 0 && 1 <= v38
f_268(v32, v34, v36, 0, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4) -> f_270(v32, v34, v36, 0, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4) :|: TRUE
f_269(v32, v34, v36, 1, v38, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 0, 4) -> f_271(v32, v34, v36, 1, v38, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 0, 4) :|: TRUE
f_270(v32, v34, v36, 0, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4) -> f_272(v32, v34, v36, 0, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4) :|: TRUE
f_271(v32, v34, v36, 1, v38, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 0, 4) -> f_273(v32, v34, v36, 1, v38, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 0, 4) :|: TRUE
f_272(v32, v34, v36, 0, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4) -> f_274(v32, v34, v36, 0, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4) :|: 0 = 0
f_273(v32, v34, v36, 1, v38, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 0, 4) -> f_275(v32, v34, v36, 1, v38, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 0, 4) :|: 0 = 0
f_274(v32, v34, v36, 0, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4) -> f_276(v1, v3, v5, v7, v9, v11, v17, v36, v2, v4, v6, 3, 1, 4, 0) :|: 0 = 0
f_275(v32, v34, v36, 1, v38, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 0, 4) -> f_277(v1, v3, v5, v7, v9, v11, v17, v38, v2, v4, v6, 3, 1, 4, 0) :|: 0 = 0
f_276(v1, v3, v5, v7, v9, v11, v17, v36, v2, v4, v6, 3, 1, 4, 0) -> f_278(v1, v2, v3, v4, v5, v6, v7, v9, v11, v17, v36, 3, 1, 4, 0) :|: TRUE
f_277(v1, v3, v5, v7, v9, v11, v17, v38, v2, v4, v6, 3, 1, 4, 0) -> f_279(v1, v2, v3, v4, v5, v6, v7, v9, v11, v17, v38, 3, 1, 4, 0) :|: TRUE
f_278(v1, v2, v3, v4, v5, v6, v7, v9, v11, v17, v36, 3, 1, 4, 0) -> f_280(v63, v1, v2, v3, v4, v5, v6, v64, v7, v9, v11, v17, v36, 3, 1, 4, 0) :|: 1 <= v63 && v64 = 3 + v63 && 4 <= v64
f_279(v1, v2, v3, v4, v5, v6, v7, v9, v11, v17, v38, 3, 1, 4, 0) -> f_278(v1, v2, v3, v4, v5, v6, v7, v9, v11, v17, v36, 3, 1, 4, 0) :|: TRUE
f_280(v63, v1, v2, v3, v4, v5, v6, v64, v7, v9, v11, v17, v36, 3, 1, 4, 0) -> f_281(v63, v65, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 1, 4, 0) :|: 1 <= v65 && v66 = 3 + v65 && 4 <= v66
f_281(v63, v65, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 1, 4, 0) -> f_282(v63, v65, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 1, 4, 0) :|: TRUE
f_282(v63, v65, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 1, 4, 0) -> f_283(v63, v65, v67, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 1, 4, 0) :|: TRUE
f_283(v63, v65, v67, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 1, 4, 0) -> f_284(v63, v65, v67, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 1, 4, 0) :|: TRUE
f_284(v63, v65, v67, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 1, 4, 0) -> f_285(v63, v65, v67, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 1, 4, 0) :|: 0 = 0
f_285(v63, v65, v67, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 1, 4, 0) -> f_286(v63, v65, v67, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 1, 4, 0) :|: v67 < 0
f_285(v63, v65, v67, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 1, 4, 0) -> f_287(v63, v65, v67, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 1, 4, 0) :|: 0 <= v67
f_286(v63, v65, v67, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 1, 4, 0) -> f_288(v63, v65, v67, 1, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 4, 0) :|: 0 = 0
f_287(v63, v65, v67, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 1, 4, 0) -> f_289(v63, v65, v67, 0, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 1, 4) :|: 0 = 0
f_288(v63, v65, v67, 1, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 4, 0) -> f_290(v63, v65, v67, 1, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 4, 0) :|: TRUE
f_289(v63, v65, v67, 0, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 1, 4) -> f_291(v63, v65, v67, 0, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 1, 4) :|: TRUE
f_290(v63, v65, v67, 1, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 4, 0) -> f_292(v63, v65, v67, 1, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 4, 0) :|: 0 = 0
f_291(v63, v65, v67, 0, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 1, 4) -> f_293(v63, v65, v67, 0, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 1, 4) :|: 0 = 0
f_292(v63, v65, v67, 1, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 4, 0) -> f_294(v63, v65, v67, 1, v77, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 0, 4) :|: v77 + v67 = 0 && 1 <= v77
f_293(v63, v65, v67, 0, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 1, 4) -> f_295(v63, v65, v67, 0, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 1, 4) :|: TRUE
f_294(v63, v65, v67, 1, v77, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 0, 4) -> f_296(v63, v65, v67, 1, v77, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 0, 4) :|: TRUE
f_295(v63, v65, v67, 0, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 1, 4) -> f_297(v63, v65, v67, 0, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 1, 4) :|: TRUE
f_296(v63, v65, v67, 1, v77, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 0, 4) -> f_298(v63, v65, v67, 1, v77, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 0, 4) :|: TRUE
f_297(v63, v65, v67, 0, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 1, 4) -> f_299(v63, v65, v67, 0, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 1, 4) :|: 0 = 0
f_298(v63, v65, v67, 1, v77, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 0, 4) -> f_300(v63, v65, v67, 1, v77, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 0, 4) :|: 0 = 0
f_299(v63, v65, v67, 0, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 1, 4) -> f_301(v1, v3, v5, v7, v9, v11, v17, v36, v67, v2, v4, v6, 3, 1, 4, 0) :|: 0 = 0
f_300(v63, v65, v67, 1, v77, v1, v2, v3, v4, v5, v6, v64, v66, v7, v9, v11, v17, v36, 3, 0, 4) -> f_302(v1, v3, v5, v7, v9, v11, v17, v36, v77, v2, v4, v6, 3, 1, 4, 0) :|: 0 = 0
f_301(v1, v3, v5, v7, v9, v11, v17, v36, v67, v2, v4, v6, 3, 1, 4, 0) -> f_303(v17, v36, v67, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) :|: 0 = 0
f_302(v1, v3, v5, v7, v9, v11, v17, v36, v77, v2, v4, v6, 3, 1, 4, 0) -> f_304(v17, v36, v77, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) :|: 0 = 0
f_303(v17, v36, v67, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) -> f_305(v17, v36, v67, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) :|: TRUE
f_303(v17, v36, v67, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) -> f_327(v17, v36, v67, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) :|: TRUE
f_303(v17, v36, v67, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) -> f_339(v17, v36, v67, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) :|: TRUE
f_303(v17, v36, v67, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) -> f_411(v67, v36, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) :|: TRUE
f_303(v17, v36, v67, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) -> f_418(v67, v36, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) :|: TRUE
f_304(v17, v36, v77, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) -> f_306(v17, v36, v77, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) :|: TRUE
f_304(v17, v36, v77, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) -> f_328(v17, v36, v77, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) :|: TRUE
f_304(v17, v36, v77, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) -> f_340(v17, v36, v77, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) :|: TRUE
f_304(v17, v36, v77, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) -> f_404(v77, v36, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4) :|: TRUE
f_304(v17, v36, v77, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) -> f_412(v77, v36, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4) :|: TRUE
f_304(v17, v36, v77, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) -> f_419(v77, v36, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4) :|: TRUE
f_305(v17, v36, v67, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) -> f_307(v17, v36, v67, v118, v1, v2, v3, v4, v5, v6, v119, v7, v9, v11, 3, 1, 4, 0) :|: 1 <= v118 && v119 = 3 + v118 && 4 <= v119
f_306(v17, v36, v77, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) -> f_305(v17, v36, v77, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) :|: TRUE
f_307(v17, v36, v67, v118, v1, v2, v3, v4, v5, v6, v119, v7, v9, v11, 3, 1, 4, 0) -> f_308(v17, v36, v67, v118, v120, v1, v2, v3, v4, v5, v6, v119, v121, v7, v9, v11, 3, 1, 4, 0) :|: 1 <= v120 && v121 = 3 + v120 && 4 <= v121
f_308(v17, v36, v67, v118, v120, v1, v2, v3, v4, v5, v6, v119, v121, v7, v9, v11, 3, 1, 4, 0) -> f_309(v17, v36, v67, v118, v120, v122, v1, v2, v3, v4, v5, v6, v119, v121, v123, v7, v9, v11, 3, 1, 4, 0) :|: 1 <= v122 && v123 = 3 + v122 && 4 <= v123
f_309(v17, v36, v67, v118, v120, v122, v1, v2, v3, v4, v5, v6, v119, v121, v123, v7, v9, v11, 3, 1, 4, 0) -> f_310(v17, v36, v67, v118, v120, v122, v124, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 1, 4, 0) :|: 1 <= v124 && v125 = 3 + v124 && 4 <= v125
f_310(v17, v36, v67, v118, v120, v122, v124, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 1, 4, 0) -> f_311(v17, v36, v67, v118, v120, v122, v124, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 1, 4, 0) :|: TRUE
f_311(v17, v36, v67, v118, v120, v122, v124, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 1, 4, 0) -> f_312(v17, v36, v67, v118, v120, v122, v124, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 1, 4, 0) :|: TRUE
f_312(v17, v36, v67, v118, v120, v122, v124, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 1, 4, 0) -> f_313(v17, v36, v67, v118, v120, v122, v124, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 1, 4, 0) :|: TRUE
f_313(v17, v36, v67, v118, v120, v122, v124, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 1, 4, 0) -> f_314(v17, v36, v67, v118, v120, v122, v124, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 1, 4, 0) :|: TRUE
f_314(v17, v36, v67, v118, v120, v122, v124, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 1, 4, 0) -> f_315(v17, v36, v67, v118, v120, v122, v124, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 1, 4, 0) :|: TRUE
f_315(v17, v36, v67, v118, v120, v122, v124, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 1, 4, 0) -> f_316(v17, v36, v67, v118, v120, v122, v124, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 1, 4, 0) :|: TRUE
f_316(v17, v36, v67, v118, v120, v122, v124, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 1, 4, 0) -> f_317(v17, v36, v67, v118, v120, v122, v124, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 1, 4, 0) :|: 0 = 0
f_317(v17, v36, v67, v118, v120, v122, v124, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 1, 4, 0) -> f_318(v17, v36, v67, v118, v120, v122, v124, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 1, 4, 0) :|: 0 = 0
f_318(v17, v36, v67, v118, v120, v122, v124, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 1, 4, 0) -> f_319(v17, v36, v67, v118, v120, v122, v124, v129, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 1, 4, 0) :|: v129 + v67 = v36
f_319(v17, v36, v67, v118, v120, v122, v124, v129, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 1, 4, 0) -> f_320(v17, v36, v67, v118, v120, v122, v124, v129, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 1, 4, 0) :|: 1 <= v129 && 1 <= v36
f_319(v17, v36, v67, v118, v120, v122, v124, v129, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 1, 4, 0) -> f_321(v17, v36, v67, v118, v120, v122, v124, v129, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 1, 4, 0) :|: v129 < 1
f_320(v17, v36, v67, v118, v120, v122, v124, v129, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 1, 4, 0) -> f_322(v17, v36, v67, v118, v120, v122, v124, v129, 1, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) :|: 0 = 0
f_321(v17, v36, v67, v118, v120, v122, v124, v129, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 1, 4, 0) -> f_323(v17, v36, v67, v118, v120, v122, v124, v129, 0, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 1, 4) :|: 0 = 0
f_322(v17, v36, v67, v118, v120, v122, v124, v129, 1, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) -> f_324(v17, v36, v67, v118, v120, v122, v124, v129, 1, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) :|: TRUE
f_323(v17, v36, v67, v118, v120, v122, v124, v129, 0, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 1, 4) -> f_325(v17, v36, v67, v118, v120, v122, v124, v129, 0, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 1, 4) :|: TRUE
f_324(v17, v36, v67, v118, v120, v122, v124, v129, 1, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) -> f_326(v17, v36, v67, v118, v120, v122, v124, v129, 1, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) :|: 0 = 0
f_326(v17, v36, v67, v118, v120, v122, v124, v129, 1, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) -> f_329(v17, v36, v67, v118, v120, v122, v124, v129, 1, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) :|: 0 = 0
f_327(v17, v36, v67, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) -> f_330(v1, v3, v5, v7, v9, v11, v17, v36, v67, v2, v4, v6, 3, 1, 4, 0) :|: TRUE
f_328(v17, v36, v77, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) -> f_331(v1, v3, v5, v7, v9, v11, v17, v36, v77, v2, v4, v6, 3, 1, 4, 0) :|: TRUE
f_329(v17, v36, v67, v118, v120, v122, v124, v129, 1, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) -> f_332(v67, v36, v118, v120, v122, v124, v129, 1, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) :|: v17 = v67
f_329(v17, v36, v67, v118, v120, v122, v124, v129, 1, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) -> f_333(v17, v36, v67, v118, v120, v122, v124, v129, 1, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) :|: v17 != v67
f_332(v67, v36, v118, v120, v122, v124, v129, 1, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) -> f_334(v67, v36, v118, v120, v122, v124, v129, 1, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) :|: 0 = 0
f_333(v17, v36, v67, v118, v120, v122, v124, v129, 1, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) -> f_335(v17, v36, v67, v118, v120, v122, v124, v129, 1, 0, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4) :|: 0 = 0
f_334(v67, v36, v118, v120, v122, v124, v129, 1, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) -> f_336(v67, v36, v118, v120, v122, v124, v129, 1, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) :|: TRUE
f_335(v17, v36, v67, v118, v120, v122, v124, v129, 1, 0, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4) -> f_337(v17, v36, v67, v118, v120, v122, v124, v129, 1, 0, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4) :|: TRUE
f_336(v67, v36, v118, v120, v122, v124, v129, 1, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) -> f_338(v67, v36, v118, v120, v122, v124, v129, 1, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) :|: TRUE
f_338(v67, v36, v118, v120, v122, v124, v129, 1, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) -> f_341(v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v67, v36, v129, 1, 3, 4, 0) :|: TRUE
f_339(v17, v36, v67, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) -> f_342(v1, v3, v5, v7, v9, v11, v17, v36, v67, v2, v4, v6, 3, 1, 4, 0) :|: TRUE
f_340(v17, v36, v77, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) -> f_343(v1, v3, v5, v7, v9, v11, v17, v36, v77, v2, v4, v6, 3, 1, 4, 0) :|: TRUE
f_341(v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v67, v36, v129, 1, 3, 4, 0) -> f_344(v214, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v7, v9, v11, v67, v36, v129, 1, 3, 4, 0) :|: 1 <= v214 && v215 = 3 + v214 && 4 <= v215
f_344(v214, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v7, v9, v11, v67, v36, v129, 1, 3, 4, 0) -> f_345(v214, v216, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 1, 3, 4, 0) :|: 1 <= v216 && v217 = 3 + v216 && 4 <= v217
f_345(v214, v216, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 1, 3, 4, 0) -> f_346(v214, v216, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 1, 3, 4, 0) :|: TRUE
f_346(v214, v216, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 1, 3, 4, 0) -> f_347(v214, v216, v218, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 1, 3, 4, 0) :|: TRUE
f_347(v214, v216, v218, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 1, 3, 4, 0) -> f_348(v214, v216, v218, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 1, 3, 4, 0) :|: TRUE
f_348(v214, v216, v218, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 1, 3, 4, 0) -> f_349(v214, v216, v218, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 1, 3, 4, 0) :|: 0 = 0
f_349(v214, v216, v218, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 1, 3, 4, 0) -> f_350(v214, v216, v218, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 1, 3, 4, 0) :|: v218 < 0
f_349(v214, v216, v218, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 1, 3, 4, 0) -> f_351(v214, v216, v218, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 1, 3, 4, 0) :|: 0 <= v218
f_350(v214, v216, v218, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 1, 3, 4, 0) -> f_352(v214, v216, v218, 1, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 3, 4, 0) :|: 0 = 0
f_351(v214, v216, v218, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 1, 3, 4, 0) -> f_353(v214, v216, v218, 0, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 1, 3, 4) :|: 0 = 0
f_352(v214, v216, v218, 1, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 3, 4, 0) -> f_354(v214, v216, v218, 1, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 3, 4, 0) :|: TRUE
f_353(v214, v216, v218, 0, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 1, 3, 4) -> f_355(v214, v216, v218, 0, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 1, 3, 4) :|: TRUE
f_354(v214, v216, v218, 1, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 3, 4, 0) -> f_356(v214, v216, v218, 1, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 3, 4, 0) :|: 0 = 0
f_355(v214, v216, v218, 0, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 1, 3, 4) -> f_357(v214, v216, v218, 0, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 1, 3, 4) :|: 0 = 0
f_356(v214, v216, v218, 1, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 3, 4, 0) -> f_358(v214, v216, v218, 1, v236, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 3, 0, 4) :|: v236 + v218 = 0 && 1 <= v236
f_357(v214, v216, v218, 0, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 1, 3, 4) -> f_359(v214, v216, v218, 0, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 1, 3, 4) :|: TRUE
f_358(v214, v216, v218, 1, v236, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 3, 0, 4) -> f_360(v214, v216, v218, 1, v236, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 3, 0, 4) :|: TRUE
f_359(v214, v216, v218, 0, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 1, 3, 4) -> f_361(v214, v216, v218, 0, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 1, 3, 4) :|: TRUE
f_360(v214, v216, v218, 1, v236, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 3, 0, 4) -> f_362(v214, v216, v218, 1, v236, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 3, 0, 4) :|: TRUE
f_361(v214, v216, v218, 0, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 1, 3, 4) -> f_363(v214, v216, v218, 0, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 1, 3, 4) :|: 0 = 0
f_362(v214, v216, v218, 1, v236, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 3, 0, 4) -> f_364(v214, v216, v218, 1, v236, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 3, 0, 4) :|: 0 = 0
f_363(v214, v216, v218, 0, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 1, 3, 4) -> f_365(v67, v36, v118, v120, v122, v124, v129, 1, v218, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) :|: 0 = 0
f_364(v214, v216, v218, 1, v236, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v215, v217, v7, v9, v11, v67, v36, v129, 3, 0, 4) -> f_366(v67, v36, v118, v120, v122, v124, v129, 1, v236, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) :|: 0 = 0
f_365(v67, v36, v118, v120, v122, v124, v129, 1, v218, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) -> f_367(v67, v36, v118, v120, v122, v124, v129, 1, v218, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) :|: TRUE
f_366(v67, v36, v118, v120, v122, v124, v129, 1, v236, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) -> f_368(v67, v36, v118, v120, v122, v124, v129, 1, v236, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) :|: TRUE
f_367(v67, v36, v118, v120, v122, v124, v129, 1, v218, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) -> f_369(v67, v36, v118, v120, v122, v124, v129, 1, v218, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 10, 3, 4, 0) :|: TRUE
f_368(v67, v36, v118, v120, v122, v124, v129, 1, v236, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) -> f_370(v67, v36, v118, v120, v122, v124, v129, 1, v236, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 10, 3, 4, 0) :|: TRUE
f_369(v67, v36, v118, v120, v122, v124, v129, 1, v218, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 10, 3, 4, 0) -> f_371(v67, v36, v118, v120, v122, v124, v129, 1, v218, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 10, 3, 4, 0) :|: 0 = 0
f_370(v67, v36, v118, v120, v122, v124, v129, 1, v236, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 10, 3, 4, 0) -> f_372(v67, v36, v118, v120, v122, v124, v129, 1, v236, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 10, 3, 4, 0) :|: 0 = 0
f_371(v67, v36, v118, v120, v122, v124, v129, 1, v218, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 10, 3, 4, 0) -> f_373(v67, v36, v118, v120, v122, v124, v129, 1, v218, v282, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 10, 3, 4, 0) :|: v282 = 1 + v67 && 1 <= v282
f_372(v67, v36, v118, v120, v122, v124, v129, 1, v236, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 10, 3, 4, 0) -> f_374(v67, v36, v118, v120, v122, v124, v129, 1, v236, v283, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 10, 3, 4, 0) :|: v283 = 1 + v67 && 1 <= v283
f_373(v67, v36, v118, v120, v122, v124, v129, 1, v218, v282, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 10, 3, 4, 0) -> f_375(v67, v36, v118, v120, v122, v124, v129, 1, v218, v282, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 10, 3, 4, 0) :|: 0 = 0
f_374(v67, v36, v118, v120, v122, v124, v129, 1, v236, v283, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 10, 3, 4, 0) -> f_376(v67, v36, v118, v120, v122, v124, v129, 1, v236, v283, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 10, 3, 4, 0) :|: 0 = 0
f_375(v67, v36, v118, v120, v122, v124, v129, 1, v218, v282, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 10, 3, 4, 0) -> f_377(v67, v36, v118, v120, v122, v124, v129, 1, v218, v282, v284, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 10, 3, 4, 0) :|: v284 = v282 + v218 && 1 <= v284
f_376(v67, v36, v118, v120, v122, v124, v129, 1, v236, v283, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 10, 3, 4, 0) -> f_378(v67, v36, v118, v120, v122, v124, v129, 1, v236, v283, v285, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 10, 3, 4, 0, 2) :|: v285 = v283 + v236 && 2 <= v285
f_377(v67, v36, v118, v120, v122, v124, v129, 1, v218, v282, v284, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 10, 3, 4, 0) -> f_379(v67, v36, v118, v120, v122, v124, v129, 1, v218, v282, v284, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 10, 3, 4, 0) :|: TRUE
f_378(v67, v36, v118, v120, v122, v124, v129, 1, v236, v283, v285, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 10, 3, 4, 0, 2) -> f_380(v67, v36, v118, v120, v122, v124, v129, 1, v236, v283, v285, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 10, 3, 4, 0, 2) :|: TRUE
f_379(v67, v36, v118, v120, v122, v124, v129, 1, v218, v282, v284, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 10, 3, 4, 0) -> f_381(v67, v36, v118, v120, v122, v124, v129, 1, v218, v282, v284, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 10, 3, 4, 0) :|: 0 = 0
f_380(v67, v36, v118, v120, v122, v124, v129, 1, v236, v283, v285, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 10, 3, 4, 0, 2) -> f_382(v67, v36, v118, v120, v122, v124, v129, 1, v236, v283, v285, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 10, 3, 4, 0, 2) :|: 0 = 0
f_381(v67, v36, v118, v120, v122, v124, v129, 1, v218, v282, v284, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 10, 3, 4, 0) -> f_383(v67, v36, v118, v120, v122, v124, v129, 1, v218, v282, v284, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 10, 3, 4, 0) :|: TRUE
f_382(v67, v36, v118, v120, v122, v124, v129, 1, v236, v283, v285, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 10, 3, 4, 0, 2) -> f_384(v67, v36, v118, v120, v122, v124, v129, 1, v236, v283, v285, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 10, 3, 4, 0, 2) :|: TRUE
f_383(v67, v36, v118, v120, v122, v124, v129, 1, v218, v282, v284, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 10, 3, 4, 0) -> f_385(v67, v36, v118, v120, v122, v124, v129, 1, v218, v282, v284, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 10, 3, 4, 0) :|: 0 = 0
f_384(v67, v36, v118, v120, v122, v124, v129, 1, v236, v283, v285, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 10, 3, 4, 0, 2) -> f_386(v67, v36, v118, v120, v122, v124, v129, 1, v236, v283, v285, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 10, 3, 4, 0, 2) :|: 0 = 0
f_385(v67, v36, v118, v120, v122, v124, v129, 1, v218, v282, v284, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 10, 3, 4, 0) -> f_387(v67, v36, v118, v120, v122, v124, v129, 1, v218, v282, v284, 10, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) :|: 0 = 0
f_386(v67, v36, v118, v120, v122, v124, v129, 1, v236, v283, v285, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 10, 3, 4, 0, 2) -> f_388(v67, v36, v118, v120, v122, v124, v129, 1, v236, v283, v285, 10, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0, 2) :|: 0 = 0
f_387(v67, v36, v118, v120, v122, v124, v129, 1, v218, v282, v284, 10, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) -> f_389(v67, v36, v118, v120, v122, v124, v129, 1, v218, v282, v284, 10, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) :|: 0 = 0
f_388(v67, v36, v118, v120, v122, v124, v129, 1, v236, v283, v285, 10, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0, 2) -> f_390(v67, v36, v118, v120, v122, v124, v129, 1, v236, v283, v285, 10, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0, 2) :|: 0 = 0
f_389(v67, v36, v118, v120, v122, v124, v129, 1, v218, v282, v284, 10, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) -> f_391(v284, 10, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v218, v67, v36, v129, 1, v282, 3, 4, 0) :|: 0 = 0
f_390(v67, v36, v118, v120, v122, v124, v129, 1, v236, v283, v285, 10, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0, 2) -> f_392(v285, 10, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v236, v67, v36, v129, 1, v283, 3, 4, 0, 2) :|: 0 = 0
f_391(v284, 10, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v218, v67, v36, v129, 1, v282, 3, 4, 0) -> f_393(v284, 10, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v218, 3, 1, 4, 0) :|: TRUE
f_391(v284, 10, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v218, v67, v36, v129, 1, v282, 3, 4, 0) -> f_395(v284, 10, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v218, v67, v36, v129, 1, v282, 3, 4, 0) :|: TRUE
f_391(v284, 10, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v218, v67, v36, v129, 1, v282, 3, 4, 0) -> f_396(v17, v36, v67, v118, v120, v122, v124, v129, 1, 0, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4) :|: TRUE
f_391(v284, 10, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v218, v67, v36, v129, 1, v282, 3, 4, 0) -> f_405(v284, 10, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v218, v67, v36, v129, 1, v282, 3, 4, 0) :|: TRUE
f_391(v284, 10, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v218, v67, v36, v129, 1, v282, 3, 4, 0) -> f_413(v284, 10, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v218, v67, v36, v129, 1, v282, 3, 4, 0) :|: TRUE
f_391(v284, 10, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v218, v67, v36, v129, 1, v282, 3, 4, 0) -> f_420(v284, 10, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v218, v67, v36, v129, 1, v282, 3, 4, 0) :|: TRUE
f_392(v285, 10, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v236, v67, v36, v129, 1, v283, 3, 4, 0, 2) -> f_394(v285, 10, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v236, 3, 1, 4, 2) :|: TRUE
f_392(v285, 10, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v236, v67, v36, v129, 1, v283, 3, 4, 0, 2) -> f_397(v285, 10, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v236, v67, v36, v129, 1, v283, 3, 4, 0, 2) :|: TRUE
f_392(v285, 10, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v236, v67, v36, v129, 1, v283, 3, 4, 0, 2) -> f_398(v17, v36, v67, v118, v120, v122, v124, v129, 1, 0, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4) :|: TRUE
f_392(v285, 10, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v236, v67, v36, v129, 1, v283, 3, 4, 0, 2) -> f_406(v285, 10, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v236, v67, v36, v129, 1, v283, 3, 4, 0, 2) :|: TRUE
f_392(v285, 10, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v236, v67, v36, v129, 1, v283, 3, 4, 0, 2) -> f_414(v285, 10, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v236, v67, v36, v129, 1, v283, 3, 4, 0, 2) :|: TRUE
f_392(v285, 10, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v236, v67, v36, v129, 1, v283, 3, 4, 0, 2) -> f_421(v285, 10, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v236, v67, v36, v129, 1, v283, 3, 4, 0, 2) :|: TRUE
f_393(v284, 10, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v218, 3, 1, 4, 0) -> f_305(v284, 10, v284, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) :|: TRUE
f_394(v285, 10, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v236, 3, 1, 4, 2) -> f_305(v285, 10, v285, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) :|: TRUE
f_395(v284, 10, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v218, v67, v36, v129, 1, v282, 3, 4, 0) -> f_399(v67, v36, v118, v120, v122, v124, v129, 1, v218, v282, v284, 10, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) :|: TRUE
f_397(v285, 10, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v236, v67, v36, v129, 1, v283, 3, 4, 0, 2) -> f_400(v67, v36, v118, v120, v122, v124, v129, 1, v236, v283, v285, 10, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0, 2) :|: TRUE
f_399(v67, v36, v118, v120, v122, v124, v129, 1, v218, v282, v284, 10, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) -> f_401(v67, v36, v118, v120, v122, v124, v129, 1, v218, v282, v284, 10, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) :|: TRUE
f_400(v67, v36, v118, v120, v122, v124, v129, 1, v236, v283, v285, 10, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0, 2) -> f_402(v67, v36, v118, v120, v122, v124, v129, 1, v236, v283, v285, 10, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0, 2) :|: TRUE
f_402(v67, v36, v118, v120, v122, v124, v129, 1, v236, v283, v285, 10, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0, 2) -> f_401(v67, v36, v118, v120, v122, v124, v129, 1, v236, v283, v285, 10, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) :|: TRUE
f_404(v77, v36, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4) -> f_408(v1, v3, v5, v7, v9, v11, v77, v36, v2, v4, v6, 3, 1, 4) :|: TRUE
f_405(v284, 10, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v218, v67, v36, v129, 1, v282, 3, 4, 0) -> f_409(v67, v36, v118, v120, v122, v124, v129, 1, v218, v282, v284, 10, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) :|: TRUE
f_406(v285, 10, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v236, v67, v36, v129, 1, v283, 3, 4, 0, 2) -> f_410(v67, v36, v118, v120, v122, v124, v129, 1, v236, v283, v285, 10, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0, 2) :|: TRUE
f_409(v67, v36, v118, v120, v122, v124, v129, 1, v218, v282, v284, 10, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) -> f_415(v67, v36, v118, v120, v122, v124, v129, 1, v218, v282, v284, 10, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) :|: TRUE
f_410(v67, v36, v118, v120, v122, v124, v129, 1, v236, v283, v285, 10, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0, 2) -> f_416(v67, v36, v118, v120, v122, v124, v129, 1, v236, v283, v285, 10, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0, 2) :|: TRUE
f_411(v67, v36, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) -> f_417(v1, v3, v5, v7, v9, v11, v67, v36, v2, v4, v6, 3, 1, 4, 0) :|: TRUE
f_412(v77, v36, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4) -> f_404(v77, v36, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4) :|: TRUE
f_413(v284, 10, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v218, v67, v36, v129, 1, v282, 3, 4, 0) -> f_405(v284, 10, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v218, v67, v36, v129, 1, v282, 3, 4, 0) :|: TRUE
f_414(v285, 10, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v236, v67, v36, v129, 1, v283, 3, 4, 0, 2) -> f_406(v285, 10, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v236, v67, v36, v129, 1, v283, 3, 4, 0, 2) :|: TRUE
f_415(v67, v36, v118, v120, v122, v124, v129, 1, v218, v282, v284, 10, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) -> f_401(v67, v36, v118, v120, v122, v124, v129, 1, v218, v282, v284, 10, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) :|: TRUE
f_416(v67, v36, v118, v120, v122, v124, v129, 1, v236, v283, v285, 10, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0, 2) -> f_401(v67, v36, v118, v120, v122, v124, v129, 1, v236, v283, v285, 10, v1, v2, v3, v4, v5, v6, v119, v121, v123, v125, v7, v9, v11, 3, 4, 0) :|: TRUE
f_418(v67, v36, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) -> f_411(v67, v36, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) :|: TRUE
f_419(v77, v36, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4) -> f_412(v77, v36, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4) :|: TRUE
f_420(v284, 10, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v218, v67, v36, v129, 1, v282, 3, 4, 0) -> f_413(v284, 10, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v218, v67, v36, v129, 1, v282, 3, 4, 0) :|: TRUE
f_421(v285, 10, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v236, v67, v36, v129, 1, v283, 3, 4, 0, 2) -> f_414(v285, 10, v1, v2, v3, v4, v5, v6, v118, v119, v120, v121, v122, v123, v124, v125, v7, v9, v11, v236, v67, v36, v129, 1, v283, 3, 4, 0, 2) :|: TRUE
Combined rules. Obtained 21 rulesP rules:
f_285(v63:0, v65:0, v67:0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v64:0, v66:0, v7:0, v9:0, v11:0, v17:0, v36:0, 3, 1, 4, 0) -> f_417(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v67:0, v36:0, v2:0, v4:0, v6:0, 3, 1, 4, 0) :|: v67:0 > -1
f_285(v63:0, v65:0, v67:0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v64:0, v66:0, v7:0, v9:0, v11:0, v17:0, v129:0 + v77:0, 3, 1, 4, 0) -> f_319(v17:0, v129:0 + v77:0, v77:0, v118:0, v120:0, v122:0, v124:0, v129:0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, 3 + v118:0, 3 + v120:0, 3 + v122:0, 3 + v124:0, v7:0, v9:0, v11:0, 3, 1, 4, 0) :|: v67:0 < 0 && v77:0 > 0 && v77:0 + v67:0 = 0 && v118:0 > 0 && v120:0 > 0 && v122:0 > 0 && v124:0 > 0
f_319(v17:0, v36:0, v67:0, v118:0, v120:0, v122:0, v124:0, v129:0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v119:0, v121:0, v123:0, v125:0, v7:0, v9:0, v11:0, 3, 1, 4, 0) -> f_325(v17:0, v36:0, v67:0, v118:0, v120:0, v122:0, v124:0, v129:0, 0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v119:0, v121:0, v123:0, v125:0, v7:0, v9:0, v11:0, 3, 1, 4) :|: v129:0 < 1
f_285(v63:0, v65:0, v67:0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v64:0, v66:0, v7:0, v9:0, v11:0, v17:0, v36:0, 3, 1, 4, 0) -> f_408(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v77:0, v36:0, v2:0, v4:0, v6:0, 3, 1, 4) :|: v67:0 < 0 && v77:0 + v67:0 = 0 && v77:0 > 0
f_319(v17:0, v36:0, v17:0, v118:0, v120:0, v122:0, v124:0, v129:0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v119:0, v121:0, v123:0, v125:0, v7:0, v9:0, v11:0, 3, 1, 4, 0) -> f_401(v17:0, v36:0, v118:0, v120:0, v122:0, v124:0, v129:0, 1, v218:0, 1 + v17:0, 1 + v17:0 + v218:0, 10, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v119:0, v121:0, v123:0, v125:0, v7:0, v9:0, v11:0, 3, 4, 0) :|: v36:0 > 0 && v129:0 > 0 && v214:0 > 0 && v216:0 > 0 && v218:0 > -1 && 1 + v17:0 + v218:0 > 0 && v17:0 > -1
f_285(v63:0, v65:0, v67:0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v64:0, v66:0, v7:0, v9:0, v11:0, v17:0, v36:0, 3, 1, 4, 0) -> f_331(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v17:0, v36:0, v77:0, v2:0, v4:0, v6:0, 3, 1, 4, 0) :|: v67:0 < 0 && v77:0 + v67:0 = 0 && v77:0 > 0
f_285(v63:0, v65:0, v67:0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v64:0, v66:0, v7:0, v9:0, v11:0, v17:0, v36:0, 3, 1, 4, 0) -> f_330(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v17:0, v36:0, v67:0, v2:0, v4:0, v6:0, 3, 1, 4, 0) :|: v67:0 > -1
f_285(v63:0, v65:0, v67:0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v64:0, v66:0, v7:0, v9:0, v11:0, v17:0, v129:0 + v67:0, 3, 1, 4, 0) -> f_319(v17:0, v129:0 + v67:0, v67:0, v118:0, v120:0, v122:0, v124:0, v129:0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, 3 + v118:0, 3 + v120:0, 3 + v122:0, 3 + v124:0, v7:0, v9:0, v11:0, 3, 1, 4, 0) :|: v67:0 > -1 && v118:0 > 0 && v120:0 > 0 && v122:0 > 0 && v124:0 > 0
f_285(v63:0, v65:0, v67:0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v64:0, v66:0, v7:0, v9:0, v11:0, v17:0, v36:0, 3, 1, 4, 0) -> f_342(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v17:0, v36:0, v67:0, v2:0, v4:0, v6:0, 3, 1, 4, 0) :|: v67:0 > -1
f_319(v17:0, v36:0, v17:0, v118:0, v120:0, v122:0, v124:0, v129:0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v119:0, v121:0, v123:0, v125:0, v7:0, v9:0, v11:0, 3, 1, 4, 0) -> f_398(v17:1, v36:0, v17:0, v118:0, v120:0, v122:0, v124:0, v129:0, 1, 0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v119:0, v121:0, v123:0, v125:0, v7:0, v9:0, v11:0, 3, 4) :|: v36:0 > 0 && v129:0 > 0 && v214:0 > 0 && v216:0 > 0 && v218:0 < 0 && v236:0 > 0 && v236:0 + v218:0 = 0 && 1 + v17:0 + v236:0 > 1 && v17:0 > -1
f_285(v63:0, v65:0, v67:0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v64:0, v66:0, v7:0, v9:0, v11:0, v17:0, v36:0, 3, 1, 4, 0) -> f_343(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v17:0, v36:0, v77:0, v2:0, v4:0, v6:0, 3, 1, 4, 0) :|: v67:0 < 0 && v77:0 + v67:0 = 0 && v77:0 > 0
f_260(v32:0, v34:0, v36:0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v33:0, v35:0, v7:0, v9:0, v11:0, v17:0, 3, 1, 4, 0) -> f_285(v63:0, v65:0, v67:0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, 3 + v63:0, 3 + v65:0, v7:0, v9:0, v11:0, v17:0, v36:0, 3, 1, 4, 0) :|: v36:0 > -1 && v63:0 > 0 && v65:0 > 0
f_319(v17:0, v36:0, v17:0, v118:0, v120:0, v122:0, v124:0, v129:0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v119:0, v121:0, v123:0, v125:0, v7:0, v9:0, v11:0, 3, 1, 4, 0) -> f_401(v17:0, v36:0, v118:0, v120:0, v122:0, v124:0, v129:0, 1, v236:0, 1 + v17:0, 1 + v17:0 + v236:0, 10, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v119:0, v121:0, v123:0, v125:0, v7:0, v9:0, v11:0, 3, 4, 0) :|: v36:0 > 0 && v129:0 > 0 && v214:0 > 0 && v216:0 > 0 && v218:0 < 0 && v236:0 > 0 && v236:0 + v218:0 = 0 && 1 + v17:0 + v236:0 > 1 && v17:0 > -1
f_216 -> f_260(v32:0, v34:0, v36:0, v1:0, 3 + v1:0, v3:0, 3 + v3:0, v5:0, 3 + v5:0, 3 + v32:0, 3 + v34:0, v7:0, v9:0, v11:0, v17:0, 3, 1, 4, 0) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v13:0 > 0 && v15:0 > 0 && v17:1 < 0 && v19:0 > 0 && v19:0 + v17:1 = 0 && v32:0 > 0 && v34:0 > 0
f_319(v17:0, v36:0, v67:0, v118:0, v120:0, v122:0, v124:0, v129:0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v119:0, v121:0, v123:0, v125:0, v7:0, v9:0, v11:0, 3, 1, 4, 0) -> f_337(v17:0, v36:0, v67:0, v118:0, v120:0, v122:0, v124:0, v129:0, 1, 0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v119:0, v121:0, v123:0, v125:0, v7:0, v9:0, v11:0, 3, 4) :|: v36:0 > 0 && v67:0 > v17:0 && v129:0 > 0
f_319(v17:0, v36:0, v67:0, v118:0, v120:0, v122:0, v124:0, v129:0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v119:0, v121:0, v123:0, v125:0, v7:0, v9:0, v11:0, 3, 1, 4, 0) -> f_337(v17:0, v36:0, v67:0, v118:0, v120:0, v122:0, v124:0, v129:0, 1, 0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v119:0, v121:0, v123:0, v125:0, v7:0, v9:0, v11:0, 3, 4) :|: v36:0 > 0 && v67:0 < v17:0 && v129:0 > 0
f_319(v17:0, v36:0, v17:0, v118:0, v120:0, v122:0, v124:0, v129:0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v119:0, v121:0, v123:0, v125:0, v7:0, v9:0, v11:0, 3, 1, 4, 0) -> f_396(v17:1, v36:0, v17:0, v118:0, v120:0, v122:0, v124:0, v129:0, 1, 0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v119:0, v121:0, v123:0, v125:0, v7:0, v9:0, v11:0, 3, 4) :|: v36:0 > 0 && v129:0 > 0 && v214:0 > 0 && v216:0 > 0 && v218:0 > -1 && 1 + v17:0 + v218:0 > 0 && v17:0 > -1
f_319(v17:0, v36:0, v17:0, v118:0, v120:0, v122:0, v124:0, v129:0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v119:0, v121:0, v123:0, v125:0, v7:0, v9:0, v11:0, 3, 1, 4, 0) -> f_319(1 + v17:0 + v236:0, 10, 1 + v17:0 + v236:0, v118:1, v120:1, v122:1, v124:1, v129:1, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, 3 + v118:1, 3 + v120:1, 3 + v122:1, 3 + v124:1, v7:0, v9:0, v11:0, 3, 1, 4, 0) :|: v36:0 > 0 && v129:0 > 0 && v214:0 > 0 && v216:0 > 0 && v218:0 < 0 && v236:0 > 0 && v236:0 + v218:0 = 0 && v118:1 > 0 && v120:1 > 0 && v122:1 > 0 && v124:1 > 0 && v17:0 > -1 && v129:1 + (1 + v17:0 + v236:0) = 10 && 1 + v17:0 + v236:0 > 1
f_216 -> f_260(v32:0, v34:0, v36:0, v1:0, 3 + v1:0, v3:0, 3 + v3:0, v5:0, 3 + v5:0, 3 + v32:0, 3 + v34:0, v7:0, v9:0, v11:0, v17:0, 3, 1, 4, 0) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v13:0 > 0 && v15:0 > 0 && v17:0 > -1 && v32:0 > 0 && v34:0 > 0
f_319(v17:0, v36:0, v17:0, v118:0, v120:0, v122:0, v124:0, v129:0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v119:0, v121:0, v123:0, v125:0, v7:0, v9:0, v11:0, 3, 1, 4, 0) -> f_319(1 + v17:0 + v218:0, 10, 1 + v17:0 + v218:0, v118:1, v120:1, v122:1, v124:1, v129:1, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, 3 + v118:1, 3 + v120:1, 3 + v122:1, 3 + v124:1, v7:0, v9:0, v11:0, 3, 1, 4, 0) :|: v36:0 > 0 && v129:0 > 0 && v214:0 > 0 && v216:0 > 0 && v218:0 > -1 && v118:1 > 0 && v120:1 > 0 && v122:1 > 0 && v124:1 > 0 && v17:0 > -1 && v129:1 + (1 + v17:0 + v218:0) = 10 && 1 + v17:0 + v218:0 > 0
f_260(v32:0, v34:0, v36:0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v33:0, v35:0, v7:0, v9:0, v11:0, v17:0, 3, 1, 4, 0) -> f_285(v63:0, v65:0, v67:0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, 3 + v63:0, 3 + v65:0, v7:0, v9:0, v11:0, v17:0, v36:1, 3, 1, 4, 0) :|: v36:0 < 0 && v38:0 > 0 && v38:0 + v36:0 = 0 && v63:0 > 0 && v65:0 > 0
Filtered unneeded arguments:
   f_285(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20) -> f_285(x3, x15, x16)
   f_319(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25) -> f_319(x1, x2, x3, x8)
   f_260(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19) -> f_260(x3, x15)
Removed division, modulo operations, cleaned up constraints. Obtained 21 rules.P rules:
f_285(v67:0, v17:0, v36:0) -> f_417(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v67:0, v36:0, v2:0, v4:0, v6:0, 3, 1, 4, 0) :|: v67:0 > -1
f_285(v67:0, v17:0, sum~v129:0~v77:0) -> f_319(v17:0, v129:0 + v77:0, v77:0, v129:0) :|: v77:0 > 0 && v77:0 + v67:0 = 0 && v67:0 < 0 && sum~v129:0~v77:0 = v129:0 + v77:0
f_319(v17:0, v36:0, v67:0, v129:0) -> f_325(v17:0, v36:0, v67:0, v118:0, v120:0, v122:0, v124:0, v129:0, 0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v119:0, v121:0, v123:0, v125:0, v7:0, v9:0, v11:0, 3, 1, 4) :|: v129:0 < 1
f_285(v67:0, v17:0, v36:0) -> f_408(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v77:0, v36:0, v2:0, v4:0, v6:0, 3, 1, 4) :|: v77:0 + v67:0 = 0 && v77:0 > 0 && v67:0 < 0
f_319(v17:0, v36:0, v17:01, v129:0) -> f_401(v17:0, v36:0, v118:0, v120:0, v122:0, v124:0, v129:0, 1, v218:0, 1 + v17:0, 1 + v17:0 + v218:0, 10, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v119:0, v121:0, v123:0, v125:0, v7:0, v9:0, v11:0, 3, 4, 0) :|: v129:0 > 0 && v36:0 > 0 && v218:0 > -1 && v17:0 > -1 && 1 + v17:0 + v218:0 > 0 && v17:0 = v17:01
f_285(v67:0, v17:0, v36:0) -> f_331(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v17:0, v36:0, v77:0, v2:0, v4:0, v6:0, 3, 1, 4, 0) :|: v77:0 + v67:0 = 0 && v77:0 > 0 && v67:0 < 0
f_285(v67:0, v17:0, v36:0) -> f_330(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v17:0, v36:0, v67:0, v2:0, v4:0, v6:0, 3, 1, 4, 0) :|: v67:0 > -1
f_285(v67:0, v17:0, sum~v129:0~v67:0) -> f_319(v17:0, v129:0 + v67:0, v67:0, v129:0) :|: v67:0 > -1 && sum~v129:0~v67:0 = v129:0 + v67:0
f_285(v67:0, v17:0, v36:0) -> f_342(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v17:0, v36:0, v67:0, v2:0, v4:0, v6:0, 3, 1, 4, 0) :|: v67:0 > -1
f_319(v17:0, v36:0, v17:01, v129:0) -> f_398(v17:1, v36:0, v17:0, v118:0, v120:0, v122:0, v124:0, v129:0, 1, 0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v119:0, v121:0, v123:0, v125:0, v7:0, v9:0, v11:0, 3, 4) :|: v129:0 > 0 && v17:0 > -1 && v36:0 > 0 && v17:0 = v17:01
f_285(v67:0, v17:0, v36:0) -> f_343(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v17:0, v36:0, v77:0, v2:0, v4:0, v6:0, 3, 1, 4, 0) :|: v77:0 + v67:0 = 0 && v77:0 > 0 && v67:0 < 0
f_260(v36:0, v17:0) -> f_285(v67:0, v17:0, v36:0) :|: v36:0 > -1
f_319(v17:0, v36:0, v17:01, v129:0) -> f_401(v17:0, v36:0, v118:0, v120:0, v122:0, v124:0, v129:0, 1, v236:0, 1 + v17:0, 1 + v17:0 + v236:0, 10, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v119:0, v121:0, v123:0, v125:0, v7:0, v9:0, v11:0, 3, 4, 0) :|: v129:0 > 0 && v36:0 > 0 && v236:0 > 0 && v17:0 > -1 && 1 + v17:0 + v236:0 > 1 && v17:0 = v17:01
f_216 -> f_260(v36:0, v17:0) :|: TRUE
f_319(v17:0, v36:0, v67:0, v129:0) -> f_337(v17:0, v36:0, v67:0, v118:0, v120:0, v122:0, v124:0, v129:0, 1, 0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v119:0, v121:0, v123:0, v125:0, v7:0, v9:0, v11:0, 3, 4) :|: v67:0 > v17:0 && v129:0 > 0 && v36:0 > 0
f_319(v17:0, v36:0, v67:0, v129:0) -> f_337(v17:0, v36:0, v67:0, v118:0, v120:0, v122:0, v124:0, v129:0, 1, 0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v119:0, v121:0, v123:0, v125:0, v7:0, v9:0, v11:0, 3, 4) :|: v67:0 < v17:0 && v129:0 > 0 && v36:0 > 0
f_319(v17:0, v36:0, v17:01, v129:0) -> f_396(v17:1, v36:0, v17:0, v118:0, v120:0, v122:0, v124:0, v129:0, 1, 0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v119:0, v121:0, v123:0, v125:0, v7:0, v9:0, v11:0, 3, 4) :|: v129:0 > 0 && v17:0 > -1 && v36:0 > 0 && v17:0 = v17:01
f_319(v17:0, v36:0, v17:01, v129:0) -> f_319(1 + v17:0 + v236:0, 10, 1 + v17:0 + v236:0, v129:1) :|: v129:0 > 0 && v36:0 > 0 && v236:0 > 0 && v17:0 > -1 && 1 + v17:0 + v236:0 > 1 && v129:1 + (1 + v17:0 + v236:0) = 10 && v17:0 = v17:01
f_216 -> f_260(v36:0, v17:0) :|: v17:0 > -1
f_319(v17:0, v36:0, v17:01, v129:0) -> f_319(1 + v17:0 + v218:0, 10, 1 + v17:0 + v218:0, v129:1) :|: v129:0 > 0 && v36:0 > 0 && v218:0 > -1 && v17:0 > -1 && 1 + v17:0 + v218:0 > 0 && v129:1 + (1 + v17:0 + v218:0) = 10 && v17:0 = v17:01
f_260(v36:0, v17:0) -> f_285(v67:0, v17:0, v36:1) :|: v36:0 < 0

----------------------------------------

(6)
Obligation:
Rules:
f_285(v67:0, v17:0, v36:0) -> f_417(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v67:0, v36:0, v2:0, v4:0, v6:0, 3, 1, 4, 0) :|: v67:0 > -1
f_285(x, x1, x2) -> f_319(x1, x3 + x4, x4, x3) :|: x4 > 0 && x4 + x = 0 && x < 0 && x2 = x3 + x4
f_319(x5, x6, x7, x8) -> f_325(x5, x6, x7, x9, x10, x11, x12, x8, 0, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, 3, 1, 4) :|: x8 < 1
f_285(x26, x27, x28) -> f_408(x29, x30, x31, x32, x33, x34, x35, x28, x36, x37, x38, 3, 1, 4) :|: x35 + x26 = 0 && x35 > 0 && x26 < 0
f_319(x39, x40, x41, x42) -> f_401(x39, x40, x43, x44, x45, x46, x42, 1, x47, 1 + x39, 1 + x39 + x47, 10, x48, x49, x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, 3, 4, 0) :|: x42 > 0 && x40 > 0 && x47 > -1 && x39 > -1 && 1 + x39 + x47 > 0 && x39 = x41
f_285(x61, x62, x63) -> f_331(x64, x65, x66, x67, x68, x69, x62, x63, x70, x71, x72, x73, 3, 1, 4, 0) :|: x70 + x61 = 0 && x70 > 0 && x61 < 0
f_285(x74, x75, x76) -> f_330(x77, x78, x79, x80, x81, x82, x75, x76, x74, x83, x84, x85, 3, 1, 4, 0) :|: x74 > -1
f_285(x86, x87, x88) -> f_319(x87, x89 + x86, x86, x89) :|: x86 > -1 && x88 = x89 + x86
f_285(x90, x91, x92) -> f_342(x93, x94, x95, x96, x97, x98, x91, x92, x90, x99, x100, x101, 3, 1, 4, 0) :|: x90 > -1
f_319(x102, x103, x104, x105) -> f_398(x106, x103, x102, x107, x108, x109, x110, x105, 1, 0, x111, x112, x113, x114, x115, x116, x117, x118, x119, x120, x121, x122, x123, 3, 4) :|: x105 > 0 && x102 > -1 && x103 > 0 && x102 = x104
f_285(x124, x125, x126) -> f_343(x127, x128, x129, x130, x131, x132, x125, x126, x133, x134, x135, x136, 3, 1, 4, 0) :|: x133 + x124 = 0 && x133 > 0 && x124 < 0
f_260(x137, x138) -> f_285(x139, x138, x137) :|: x137 > -1
f_319(x140, x141, x142, x143) -> f_401(x140, x141, x144, x145, x146, x147, x143, 1, x148, 1 + x140, 1 + x140 + x148, 10, x149, x150, x151, x152, x153, x154, x155, x156, x157, x158, x159, x160, x161, 3, 4, 0) :|: x143 > 0 && x141 > 0 && x148 > 0 && x140 > -1 && 1 + x140 + x148 > 1 && x140 = x142
f_216 -> f_260(x162, x163) :|: TRUE
f_319(x164, x165, x166, x167) -> f_337(x164, x165, x166, x168, x169, x170, x171, x167, 1, 0, x172, x173, x174, x175, x176, x177, x178, x179, x180, x181, x182, x183, x184, 3, 4) :|: x166 > x164 && x167 > 0 && x165 > 0
f_319(x185, x186, x187, x188) -> f_337(x185, x186, x187, x189, x190, x191, x192, x188, 1, 0, x193, x194, x195, x196, x197, x198, x199, x200, x201, x202, x203, x204, x205, 3, 4) :|: x187 < x185 && x188 > 0 && x186 > 0
f_319(x206, x207, x208, x209) -> f_396(x210, x207, x206, x211, x212, x213, x214, x209, 1, 0, x215, x216, x217, x218, x219, x220, x221, x222, x223, x224, x225, x226, x227, 3, 4) :|: x209 > 0 && x206 > -1 && x207 > 0 && x206 = x208
f_319(x228, x229, x230, x231) -> f_319(1 + x228 + x232, 10, 1 + x228 + x232, x233) :|: x231 > 0 && x229 > 0 && x232 > 0 && x228 > -1 && 1 + x228 + x232 > 1 && x233 + (1 + x228 + x232) = 10 && x228 = x230
f_216 -> f_260(x234, x235) :|: x235 > -1
f_319(x236, x237, x238, x239) -> f_319(1 + x236 + x240, 10, 1 + x236 + x240, x241) :|: x239 > 0 && x237 > 0 && x240 > -1 && x236 > -1 && 1 + x236 + x240 > 0 && x241 + (1 + x236 + x240) = 10 && x236 = x238
f_260(x242, x243) -> f_285(x244, x243, x245) :|: x242 < 0
Start term: f_216

----------------------------------------

(7) IRSToKoat (EQUIVALENT)
Convert an IRS to a koat problem
----------------------------------------

(8)
Obligation:
(GOAL COMPLEXITY)
(STARTTERM (FUNCTIONSYMBOLS f_216))
(VAR x160 x162 x161 x164 x163 x166 x165 x168 x167 x169 x391 x390 x151 x393 x150 x392 x153 x395 x152 x394 x155 x397 x154 x396 x157 x399 x156 x398 x159 x158 x380 x140 x382 x381 x142 x384 x141 x383 x144 x386 x143 x385 x146 x388 x145 x387 x148 x147 x389 x149 x371 x370 x131 x373 x130 x372 x133 x375 x132 x374 x135 x377 x134 x376 x137 x379 x136 x378 x139 x138 x193 x192 x195 x194 x197 x196 x199 x198 x191 x190 x182 x181 x184 x183 x186 x185 x188 x187 x189 x180 x171 x170 x173 x172 x175 x174 x177 x176 x179 x178 x803 x802 x805 x804 x807 x806 x809 x808 x801 x800 x605 x604 x607 x606 x609 x608 x601 x600 x603 x602 k7 k8 k5 k6 k9 k0 k3 k4 k1 k2 x407 x649 x406 x648 x409 x408 k239 k238 k237 k236 k231 x641 k230 x640 x401 x643 x400 x642 x403 x645 k235 k234 x402 x644 x405 k233 x647 k232 x404 x646 x638 x637 x639 k228 k227 k226 k225 k229 x630 k220 x632 x631 k224 x634 k223 x633 k222 x636 k221 x635 x627 x626 x629 x628 k217 k216 k215 k214 k219 k218 x621 x620 k213 x623 k212 x622 x625 k211 k210 x624 x616 x615 x618 x617 x619 k206 k205 k204 k203 k209 k208 k207 x610 k202 x612 x611 k201 x614 k200 x613 x209 x208 x681 x680 x441 x683 x440 x682 x201 x443 x685 x200 x442 x684 x203 x445 x687 x202 x444 x686 x205 x447 x689 x204 x446 x688 x207 x449 x206 x448 x439 x670 x430 x672 x671 x432 x674 x431 x673 x434 x676 x433 x675 x436 x678 x435 x677 x438 x437 x679 x429 x428 x661 x660 x421 k253 x663 x420 k252 x662 x423 k251 x665 x422 k250 x664 x425 k257 x667 x424 k256 x666 x427 k255 x669 x426 k254 x668 x418 x417 x659 x419 k249 k248 k247 x650 x410 k242 x652 k241 x651 x412 k240 x654 x411 x653 x414 k246 x656 x413 k245 x655 x416 k244 x658 x415 k243 x657 x481 x480 x241 x483 x240 x482 x243 x485 x242 x484 x245 x487 x244 x486 x247 x489 x246 x488 x249 x248 x470 x230 x472 x471 x232 x474 x231 x473 x234 x476 x233 x475 x236 x478 x235 x477 x238 x237 x479 x239 x4 x5 x2 x3 x8 x461 x9 x460 x6 x221 x463 x7 x220 x462 x223 x465 x222 x464 x225 x467 x224 x466 x227 x469 x1 x226 x468 x229 x228 x219 x' x690 x450 x692 x691 x210 x452 x694 x451 x693 x212 x454 x696 x211 x453 x695 x214 x456 x698 x213 x455 x697 x216 x458 x215 x457 x699 x218 x217 x459 x290 x281 x280 x283 x282 x285 x284 x287 x286 x289 x288 x270 x272 x271 x274 x273 x276 x275 x278 x277 x279 x261 x260 x263 x262 x265 x264 x267 x266 x269 x268 x490 x250 x492 x491 x252 x494 x251 x493 x254 x496 x253 x495 x256 x498 x255 x497 x258 x257 x499 x259 x'' k14 k15 k16 k17 k10 k11 k12 k13 x292 x291 x294 x293 x296 x295 x298 x297 x299 k36 k37 k38 k39 k32 k33 k34 k35 k30 k31 k29 k25 k26 k27 k28 k21 k22 k23 k24 k20 k18 k19 k58 k59 k54 k55 k56 k57 k50 k51 k52 k53 k47 k48 k49 k43 k44 k45 k46 k40 k41 k42 k76 k77 k78 k79 k72 k73 k74 k75 k70 k71 x k69 k65 k66 k67 k68 k61 k62 k63 k64 k60 k98 k99 k94 k95 k96 k97 k90 k91 k92 k93 x28 x29 x24 x25 x26 x27 x20 x21 x22 x23 k87 k88 k89 k83 k84 k85 k86 k80 k81 k82 x17 x18 x19 x13 x14 x15 x16 x10 x11 x12 x726 x725 x728 x727 x729 x46 x47 x48 x49 x42 x43 x44 x720 x45 x722 x721 x40 x724 x41 x723 x715 x714 x717 x716 x719 x718 x39 x35 x36 x37 x38 x31 x32 x33 x34 x711 x710 x713 x30 x712 x704 x703 x706 x70 x705 x708 x707 x709 x68 x69 x64 x65 x66 x67 x60 x700 x61 x62 x702 x63 x701 x57 x58 x59 x53 x54 x55 x56 x50 x51 x52 x528 x90 x527 x769 x91 x92 x529 k118 k117 k116 k115 x760 k119 k110 x86 x520 x762 x87 x761 x88 x522 x764 x89 x521 x763 x82 k114 x524 x766 x83 k113 x523 x765 k112 x84 x526 x768 k111 x85 x525 x767 x517 x759 x516 x758 x80 x519 x81 x518 k107 k106 k105 k104 x79 k109 k108 x75 x751 x76 x750 x77 x511 x753 x78 x510 x752 k103 x71 x513 x755 x72 k102 x512 x754 x73 k101 x515 x757 x74 k100 x514 x756 x506 x748 x505 x747 x508 x507 x749 x509 x740 x500 x742 x741 x502 x744 x501 x743 x504 x746 x503 x745 x737 x736 x739 x738 x97 x98 x99 x731 x730 x93 x733 x94 x732 x95 x735 x96 x734 x329 k150 k159 x560 x320 x562 x561 x322 k154 x564 x321 k153 x563 x324 k152 x566 x323 k151 x565 x326 x568 k158 x325 x567 k157 x328 k156 x327 k155 x569 x319 x318 k149 k148 x791 x790 x551 x793 x550 x792 k143 x311 x553 x795 k142 x310 x552 x794 k141 x313 x555 x797 k140 x312 x554 x796 x315 k147 x557 x799 x314 k146 x556 x798 k145 x317 x559 k144 x316 x558 x308 x307 x549 x309 k139 k138 k137 x780 x540 x782 x781 x300 k132 x542 x784 k131 x541 x783 x302 k130 x544 x786 x301 x543 x785 x304 k136 x546 x788 x303 k135 x545 x787 x306 k134 x548 x305 k133 x547 x789 x539 x538 k129 k128 k127 k126 x771 x770 k121 x531 x773 k120 x530 x772 x533 x775 x532 x774 k125 x535 x777 k124 x534 x776 x537 k123 x779 k122 x536 x778 k190 k194 k193 k192 k191 x360 x120 x362 x361 x122 x364 x121 x363 x124 k198 x366 x123 k197 x365 x126 k196 x368 x125 k195 x367 x128 x127 x369 x129 k199 k183 k182 k181 k180 x591 x590 x351 x593 x350 x592 x111 x353 x595 x110 x352 x594 x113 k187 x355 x597 x112 x354 x596 k186 x115 k185 x357 x599 x114 k184 x356 x598 x117 x359 x116 x358 x119 k189 x118 k188 x109 k172 k171 k170 x580 x340 x582 x581 x100 x342 x584 x341 x583 x102 k176 x344 x586 x101 k175 x343 x585 x104 k174 x346 x588 x103 k173 x345 x587 x106 x348 x105 k179 x347 x589 x108 k178 x107 x349 k177 k161 k160 x571 x570 x331 x573 x330 x572 k165 x333 x575 x332 k164 x574 k163 x335 x577 x334 k162 x576 k169 x337 x579 x336 k168 x578 k167 x339 x338 k166)
(RULES
  f_285(k84, k85, k86, x150, x151, x152, x153, x154, x155, x156, x157, x158, x159, x160, x161, x162, x163, x164, x165, x166, x167, x168, x169, x170, x171, x172, x173, x174) -> f_342(k142, k143, k144, k145, k137, k139, k85, k86, k84, k141, k212, k221, 3, 1, 4, 0, x175, x176, x177, x178, x179, x180, x181, x182, x183, x184, x185, x186) :|: k84 > -1
  f_319(k237, k235, k178, k182, x685, x686, x687, x688, x689, x690, x691, x692, x693, x694, x695, x696, x697, x698, x699, x700, x701, x702, x703, x704, x705, x706, x707, x708) -> f_319(1 + k237 + k180, 10, 1 + k237 + k180, k186, x709, x710, x711, x712, x713, x714, x715, x716, x717, x718, x719, x720, x721, x722, x723, x724, x725, x726, x727, x728, x729, x730, x731, x732) :|: k182 > 0 && k235 > 0 && k180 > 0 && k237 > -1 && 1 + k237 + k180 > 1 && k186 + (1 + k237 + k180) = 10 && k237 = k178
  f_260(k76, k81, x634, x635, x636, x637, x638, x639, x640, x641, x642, x643, x644, x645, x646, x647, x648, x649, x650, x651, x652, x653, x654, x655, x656, x657, x658, x659) -> f_285(k79, k81, k76, x660, x661, x662, x663, x664, x665, x666, x667, x668, x669, x670, x671, x672, x673, x674, x675, x676, x677, x678, x679, x680, x681, x682, x683, x684) :|: k76 > -1
  f_285(k59, k61, k62, x59, x60, x61, x62, x63, x64, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74, x75, x76, x77, x78, x79, x80, x81, x82, x83) -> f_331(k50, k52, k54, k56, k43, k45, k61, k62, k40, k112, k113, k114, 3, 1, 4, 0, x84, x85, x86, x87, x88, x89, x90, x91, x92, x93, x94, x95) :|: k40 + k59 = 0 && k40 > 0 && k59 < 0
  f_260(k166, k164, x502, x503, x504, x505, x506, x507, x508, x509, x510, x511, x512, x513, x514, x515, x516, x517, x518, x519, x520, x521, x522, x523, x524, x525, x526, x527) -> f_285(k170, k164, k168, x528, x529, x530, x531, x532, x533, x534, x535, x536, x537, x538, x539, x540, x541, x542, x543, x544, x545, x546, x547, x548, x549, x550, x551, x552) :|: k166 < 0
  f_285(k211, k215, k200, x771, x772, x773, x774, x775, x776, x777, x778, x779, x780, x781, x782, x783, x784, x785, x786, x787, x788, x789, x790, x791, x792, x793, x794, x795) -> f_408(k203, k39, k31, k33, k35, k37, k23, k200, k25, k27, k29, 3, 1, 4, x796, x797, x798, x799, x800, x801, x802, x803, x804, x805, x806, x807, x808, x809) :|: k23 + k211 = 0 && k23 > 0 && k211 < 0
  f_285(k173, k231, k204, x211, x212, x213, x214, x215, x216, x217, x218, x219, x220, x221, x222, x223, x224, x225, x226, x227, x228, x229, x230, x231, x232, x233, x234, x235) -> f_319(k231, k205 + k199, k199, k205, x236, x237, x238, x239, x240, x241, x242, x243, x244, x245, x246, x247, x248, x249, x250, x251, x252, x253, x254, x255, x256, x257, x258, x259) :|: k199 > 0 && k199 + k173 = 0 && k173 < 0 && k204 = k205 + k199
  f_216(x96, x97, x98, x99, x100, x101, x102, x103, x104, x105, x106, x107, x108, x109, x110, x111, x112, x113, x114, x115, x116, x117, x118, x119, x120, x121, x122, x123) -> f_260(k184, k190, x124, x125, x126, x127, x128, x129, x130, x131, x132, x133, x134, x135, x136, x137, x138, x139, x140, x141, x142, x143, x144, x145, x146, x147, x148, x149) :|: k190 > -1
  f_319(k20, k18, k19, k11, x, x', x'', x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21) -> f_401(k20, k18, k13, k15, k16, k3, k11, 1, k5, 1 + k20, 1 + k20 + k5, 10, k7, k9, k80, k82, k83, k71, k73, k75, k77, k64, k66, k68, k58, 3, 4, 0) :|: k11 > 0 && k18 > 0 && k5 > -1 && k20 > -1 && 1 + k20 + k5 > 0 && k20 = k19
  f_319(k202, k210, k214, k206, x607, x608, x609, x610, x611, x612, x613, x614, x615, x616, x617, x618, x619, x620, x621, x622, x623, x624, x625, x626, x627, x628, x629, x630) -> f_325(k202, k210, k214, k208, k248, k250, k252, k206, 0, k242, k243, k244, k246, k239, k240, k241, k217, k220, k223, k226, k207, k209, 3, 1, 4, x631, x632, x633) :|: k206 < 1
  f_319(k42, k46, k44, k49, x187, x188, x189, x190, x191, x192, x193, x194, x195, x196, x197, x198, x199, x200, x201, x202, x203, x204, x205, x206, x207, x208, x209, x210) -> f_401(k42, k46, k47, k53, k51, k57, k49, 1, k55, 1 + k42, 1 + k42 + k55, 10, k60, k22, k21, k26, k24, k30, k28, k34, k32, k38, k36, k0, k2, 3, 4, 0) :|: k49 > 0 && k46 > 0 && k55 > 0 && k42 > -1 && 1 + k42 + k55 > 1 && k42 = k44
  f_319(k218, k227, k224, k232, x260, x261, x262, x263, x264, x265, x266, x267, x268, x269, x270, x271, x272, x273, x274, x275, x276, x277, x278, x279, x280, x281, x282, x283) -> f_398(k229, k227, k218, k236, k234, k198, k181, k232, 1, 0, k179, k185, k183, k189, k187, k193, k191, k196, k195, k160, k165, k163, k169, 3, 4, x284, x285, x286) :|: k232 > 0 && k218 > -1 && k227 > 0 && k218 = k224
  f_319(k4, k10, k8, k14, x287, x288, x289, x290, x291, x292, x293, x294, x295, x296, x297, x298, x299, x300, x301, x302, x303, x304, x305, x306, x307, x308, x309, x310) -> f_337(k4, k10, k8, k12, k17, k130, k129, k14, 1, 0, k132, k131, k134, k133, k136, k135, k140, k138, k128, k119, k118, k121, k120, 3, 4, x311, x312, x313) :|: k8 > k4 && k14 > 0 && k10 > 0
  f_319(k188, k194, k192, k197, x351, x352, x353, x354, x355, x356, x357, x358, x359, x360, x361, x362, x363, x364, x365, x366, x367, x368, x369, x370, x371, x372, x373, x374) -> f_319(1 + k188 + k162, 10, 1 + k188 + k162, k161, x375, x376, x377, x378, x379, x380, x381, x382, x383, x384, x385, x386, x387, x388, x389, x390, x391, x392, x393, x394, x395, x396, x397, x398) :|: k197 > 0 && k194 > 0 && k162 > -1 && k188 > -1 && 1 + k188 + k162 > 0 && k161 + (1 + k188 + k162) = 10 && k188 = k192
  f_216(x553, x554, x555, x556, x557, x558, x559, x560, x561, x562, x563, x564, x565, x566, x567, x568, x569, x570, x571, x572, x573, x574, x575, x576, x577, x578, x579, x580) -> f_260(k1, k6, x581, x582, x583, x584, x585, x586, x587, x588, x589, x590, x591, x592, x593, x594, x595, x596, x597, x598, x599, x600, x601, x602, x603, x604, x605, x606) :|: 0 = 0
  f_285(k167, k172, k171, x314, x315, x316, x317, x318, x319, x320, x321, x322, x323, x324, x325, x326, x327, x328, x329, x330, x331, x332, x333, x334, x335, x336, x337, x338) -> f_343(k175, k174, k176, k67, k65, k70, k172, k171, k69, k74, k72, k78, 3, 1, 4, 0, x339, x340, x341, x342, x343, x344, x345, x346, x347, x348, x349, x350) :|: k69 + k167 = 0 && k69 > 0 && k167 < 0
  f_285(k87, k41, k177, x733, x734, x735, x736, x737, x738, x739, x740, x741, x742, x743, x744, x745, x746, x747, x748, x749, x750, x751, x752, x753, x754, x755, x756, x757) -> f_417(k63, k201, k158, k123, k48, k157, k87, k177, k159, k148, k88, 3, 1, 4, 0, x758, x759, x760, x761, x762, x763, x764, x765, x766, x767, x768, x769, x770) :|: k87 > -1
  f_319(k156, k155, k147, k146, x475, x476, x477, x478, x479, x480, x481, x482, x483, x484, x485, x486, x487, x488, x489, x490, x491, x492, x493, x494, x495, x496, x497, x498) -> f_396(k245, k155, k156, k249, k247, k253, k251, k146, 1, 0, k255, k254, k257, k256, k238, k216, k213, k222, k219, k228, k225, k233, k230, 3, 4, x499, x500, x501) :|: k146 > 0 && k156 > -1 && k155 > 0 && k156 = k147
  f_285(k89, k90, k91, x426, x427, x428, x429, x430, x431, x432, x433, x434, x435, x436, x437, x438, x439, x440, x441, x442, x443, x444, x445, x446, x447, x448, x449, x450) -> f_319(k90, k92 + k89, k89, k92, x451, x452, x453, x454, x455, x456, x457, x458, x459, x460, x461, x462, x463, x464, x465, x466, x467, x468, x469, x470, x471, x472, x473, x474) :|: k89 > -1 && k91 = k92 + k89
  f_285(k115, k108, k109, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46) -> f_330(k110, k111, k103, k97, k98, k93, k108, k109, k115, k94, k95, k96, 3, 1, 4, 0, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, x57, x58) :|: k115 > -1
  f_319(k124, k122, k126, k125, x399, x400, x401, x402, x403, x404, x405, x406, x407, x408, x409, x410, x411, x412, x413, x414, x415, x416, x417, x418, x419, x420, x421, x422) -> f_337(k124, k122, k126, k127, k117, k116, k100, k125, 1, 0, k99, k102, k101, k105, k104, k107, k106, k150, k149, k152, k151, k154, k153, 3, 4, x423, x424, x425) :|: k126 < k124 && k125 > 0 && k122 > 0
)

----------------------------------------

(9) KoAT2 (EQUIVALENT)
KoAT2 was called with the following command:

/aprove/bin/koat2 analyse --termination --cfr=pe -d5 --local=mprf,twn -rtermcomp -i /tmp/aprove.InputModules.Programs.koat2_13425422186164346547.koat 

KoAT2's output was:

YES

----------------------------------------

(10)
YES
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.002s
