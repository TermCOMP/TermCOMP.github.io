MAYBE
proof of /hpcwork/ff862203/termcomp25/benchmarks/BnR8d.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could not be shown:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 20 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 1859 ms]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) LLVM Symbolic Execution SCC
    (7) SCC2IRS [SOUND, 59 ms]
    (8) IntTRS
        (9) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (10) IntTRS
        (11) IntTRSPeriodicNontermProof [COMPLETE, 31 ms]
        (12) NO
    (13) SCC2IRS [SOUND, 0 ms]
    (14) IntTRS
        (15) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (16) IntTRS
        (17) IntTRSPeriodicNontermProof [COMPLETE, 38 ms]
        (18) NO
(19) SEGraph to IRS [SOUND, 125 ms]
(20) IntTRS
    (21) IRSToKoat [EQUIVALENT, 0 ms]
    (22) Koat Problem
    (23) KoAT2 [EQUIVALENT, 2719 ms]
    (24) MAYBE
(25) SEGraph to IRS [SOUND, 144 ms]
(26) IntTRS
    (27) IRSNoOverapproximation [EQUIVALENT, 0 ms]
    (28) MAYBE


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/BnR8d.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/BnR8d.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: true visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "bsearch" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: (0 i32, 1 i32) variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 7
	0:
		%3 = alloca i32, align 4
		%4 = alloca i32, align 4
		%5 = alloca i32, align 4
		%6 = alloca i32, align 4
		store %0, %4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %4)
		store %1, %5
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %5)
		%7 = load %4
		%8 = load %5
		%9 = icmp sge %7 %8
		br %9, %10, %12
	10:
		%11 = load %4
		store %11, %3
		br %28
	12:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %6)
		%13 = load %4
		%14 = load %5
		%15 = add i32 %13, %14
		%16 = sdiv i32 %15, 2
		store %16, %6
		%17 = call i32 (...)* @__VERIFIER_nondet_int()
		%18 = icmp ne %17 0
		br %18, %19, %23
	19:
		%20 = load %4
		%21 = load %6
		%22 = call i32 @bsearch(i32 %20, i32 %21)
		store %22, %3
		br %28
	23:
		%24 = load %6
		%25 = add i32 %24, 1
		%26 = load %5
		%27 = call i32 @bsearch(i32 %25, i32 %26)
		store %27, %3
		br %28
	28:
		%29 = load %3
		ret %29

*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 42
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %1)
		%3 = call i32 (...)* @__VERIFIER_nondet_int()
		store %3, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		%4 = call i32 (...)* @__VERIFIER_nondet_int()
		store %4, %2
		%5 = load %1
		%6 = load %2
		%7 = call i32 @bsearch(i32 %5, i32 %6)
		ret 0


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 1 SCC.
----------------------------------------

(6)
Obligation:
SCC
----------------------------------------

(7) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 37 rulesP rules:
f_257(v99, v100, v107, v101, v102, v103, v104, v108, v105, v106, 3, 1, 4) -> f_258(v99, v100, v107, v109, v101, v102, v103, v104, v108, v110, v105, v106, 3, 1, 4) :|: 1 <= v109 && v110 = 3 + v109 && 4 <= v110
f_258(v99, v100, v107, v109, v101, v102, v103, v104, v108, v110, v105, v106, 3, 1, 4) -> f_259(v99, v100, v107, v109, v111, v101, v102, v103, v104, v108, v110, v112, v105, v106, 3, 1, 4) :|: 1 <= v111 && v112 = 3 + v111 && 4 <= v112
f_259(v99, v100, v107, v109, v111, v101, v102, v103, v104, v108, v110, v112, v105, v106, 3, 1, 4) -> f_260(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: 1 <= v113 && v114 = 3 + v113 && 4 <= v114
f_260(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_261(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: TRUE
f_261(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_262(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: TRUE
f_262(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_263(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: TRUE
f_263(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_264(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: TRUE
f_264(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_265(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: 0 = 0
f_265(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_266(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: 0 = 0
f_266(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_268(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: v99 < v100
f_268(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_270(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: 0 = 0
f_270(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_272(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: TRUE
f_272(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_274(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: TRUE
f_274(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_276(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: 0 = 0
f_276(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_278(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: 0 = 0
f_278(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_280(v99, v100, v107, v109, v111, v113, 0, v118, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: v118 = v99 + v100
f_280(v99, v100, v107, v109, v111, v113, 0, v118, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_282(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: v135 = v118 / 2
f_282(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_284(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: TRUE
f_284(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_285(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: TRUE
f_285(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_286(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: v137 != 0
f_285(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_287(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: v137 = 0
f_286(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_288(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: 0 = 0
f_288(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_290(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: TRUE
f_290(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_292(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: 0 = 0
f_292(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_294(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: 0 = 0
f_294(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_296(v99, v135, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) :|: 0 = 0
f_296(v99, v135, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) -> f_298(v99, v135, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 3, 1, 4) :|: TRUE
f_298(v99, v135, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 3, 1, 4) -> f_255(v99, v135, v101, v102, v103, v104, v105, v106, 3, 1, 4) :|: TRUE
f_255(v99, v100, v101, v102, v103, v104, v105, v106, 3, 1, 4) -> f_257(v99, v100, v107, v101, v102, v103, v104, v108, v105, v106, 3, 1, 4) :|: 1 <= v107 && v108 = 3 + v107 && 4 <= v108
f_287(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_289(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: 0 = 0
f_289(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_291(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: TRUE
f_291(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_293(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: 0 = 0
f_293(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_295(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: v138 = 1 + v135
f_295(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_297(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: 0 = 0
f_297(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_299(v138, v100, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) :|: 0 = 0
f_299(v138, v100, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) -> f_300(v138, v100, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 3, 1, 4) :|: TRUE
f_300(v138, v100, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 3, 1, 4) -> f_255(v138, v100, v101, v102, v103, v104, v105, v106, 3, 1, 4) :|: TRUE
Combined rules. Obtained 3 rulesP rules:
f_257(v99:0, v100:0, v107:0, v101:0, v102:0, v103:0, v104:0, v108:0, v105:0, v106:0, 3, 1, 4) -> f_257(1 + v135:0, v100:0, v107:1, v101:0, v102:0, v103:0, v104:0, 3 + v107:1, v105:0, v106:0, 3, 1, 4) :|: v111:0 > 0 && v109:0 > 0 && v113:0 > 0 && v99:0 < v100:0 && (v99:0 + v100:0) / 2 = v135:0 && v107:1 > 0
f_257(v99:0, v100:0, v107:0, v101:0, v102:0, v103:0, v104:0, v108:0, v105:0, v106:0, 3, 1, 4) -> f_257(v99:0, v135:0, v107:1, v101:0, v102:0, v103:0, v104:0, 3 + v107:1, v105:0, v106:0, 3, 1, 4) :|: v111:0 > 0 && v109:0 > 0 && v113:0 > 0 && v99:0 < v100:0 && (v99:0 + v100:0) / 2 = v135:0 && v137:0 < 0 && v107:1 > 0
f_257(v99:0, v100:0, v107:0, v101:0, v102:0, v103:0, v104:0, v108:0, v105:0, v106:0, 3, 1, 4) -> f_257(v99:0, v135:0, v107:1, v101:0, v102:0, v103:0, v104:0, 3 + v107:1, v105:0, v106:0, 3, 1, 4) :|: v111:0 > 0 && v109:0 > 0 && v113:0 > 0 && v99:0 < v100:0 && (v99:0 + v100:0) / 2 = v135:0 && v137:0 > 0 && v107:1 > 0
Filtered unneeded arguments:
   f_257(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13) -> f_257(x1, x2)
Removed division, modulo operations, cleaned up constraints. Obtained 5 rules.P rules:
f_257(v99:0, v100:0) -> f_257'(v99:0, v100:0) :|: v99:0 < v100:0
f_257'(v99:0, v100:0) -> f_257(1 + div, v100:0) :|: v99:0 + v100:0 < 0 && v99:0 < v100:0 && v99:0 + v100:0 - 2 * div <= 0 && v99:0 + v100:0 - 2 * div > -2
f_257'(v99:0, v100:0) -> f_257(1 + div, v100:0) :|: v99:0 + v100:0 >= 0 && v99:0 < v100:0 && v99:0 + v100:0 - 2 * div < 2 && v99:0 + v100:0 - 2 * div >= 0
f_257'(v99:0, v100:0) -> f_257(v99:0, div) :|: v99:0 + v100:0 < 0 && v99:0 + v100:0 - 2 * div > -2 && v99:0 + v100:0 - 2 * div <= 0 && v99:0 < v100:0
f_257'(v99:0, v100:0) -> f_257(v99:0, div) :|: v99:0 + v100:0 >= 0 && v99:0 + v100:0 - 2 * div >= 0 && v99:0 + v100:0 - 2 * div < 2 && v99:0 < v100:0

----------------------------------------

(8)
Obligation:
Rules:
f_257(v99:0, v100:0) -> f_257'(v99:0, v100:0) :|: v99:0 < v100:0
f_257'(x, x1) -> f_257(1 + x2, x1) :|: x + x1 < 0 && x < x1 && x + x1 - 2 * x2 <= 0 && x + x1 - 2 * x2 > -2
f_257'(x3, x4) -> f_257(1 + x5, x4) :|: x3 + x4 >= 0 && x3 < x4 && x3 + x4 - 2 * x5 < 2 && x3 + x4 - 2 * x5 >= 0
f_257'(x6, x7) -> f_257(x6, x8) :|: x6 + x7 < 0 && x6 + x7 - 2 * x8 > -2 && x6 + x7 - 2 * x8 <= 0 && x6 < x7
f_257'(x9, x10) -> f_257(x9, x11) :|: x9 + x10 >= 0 && x9 + x10 - 2 * x11 >= 0 && x9 + x10 - 2 * x11 < 2 && x9 < x10

----------------------------------------

(9) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(10)
Obligation:
Rules:
f_257(v99:0:0, v100:0:0) -> f_257(1 + x2:0, v100:0:0) :|: v99:0:0 + v100:0:0 - 2 * x2:0 > -2 && v99:0:0 + v100:0:0 - 2 * x2:0 <= 0 && v99:0:0 < v100:0:0 && v99:0:0 + v100:0:0 < 0
f_257(x, x1) -> f_257(x, x2) :|: x < x1 && x + x1 - 2 * x2 <= 0 && x + x1 - 2 * x2 > -2 && x + x1 < 0
f_257(x3, x4) -> f_257(x3, x5) :|: x3 < x4 && x3 + x4 - 2 * x5 < 2 && x3 + x4 - 2 * x5 >= 0 && x3 + x4 >= 0
f_257(x6, x7) -> f_257(1 + x8, x7) :|: x6 + x7 - 2 * x8 >= 0 && x6 + x7 - 2 * x8 < 2 && x6 < x7 && x6 + x7 >= 0

----------------------------------------

(11) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, v99:0:0, v100:0:0) -> f(1, 1 + x2:0, v100:0:0) :|: pc = 1 && (v99:0:0 + v100:0:0 - 2 * x2:0 > -2 && v99:0:0 + v100:0:0 - 2 * x2:0 <= 0 && v99:0:0 < v100:0:0 && v99:0:0 + v100:0:0 < 0)
f(pc, x, x1) -> f(1, x, x2) :|: pc = 1 && (x < x1 && x + x1 - 2 * x2 <= 0 && x + x1 - 2 * x2 > -2 && x + x1 < 0)
f(pc, x3, x4) -> f(1, x3, x5) :|: pc = 1 && (x3 < x4 && x3 + x4 - 2 * x5 < 2 && x3 + x4 - 2 * x5 >= 0 && x3 + x4 >= 0)
f(pc, x6, x7) -> f(1, 1 + x8, x7) :|: pc = 1 && (x6 + x7 - 2 * x8 >= 0 && x6 + x7 - 2 * x8 < 2 && x6 < x7 && x6 + x7 >= 0)
Witness term starting non-terminating reduction: f(1, -8, -7)
----------------------------------------

(12)
NO

----------------------------------------

(13) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 37 rulesP rules:
f_257(v99, v100, v107, v101, v102, v103, v104, v108, v105, v106, 3, 1, 4) -> f_258(v99, v100, v107, v109, v101, v102, v103, v104, v108, v110, v105, v106, 3, 1, 4) :|: 1 <= v109 && v110 = 3 + v109 && 4 <= v110
f_258(v99, v100, v107, v109, v101, v102, v103, v104, v108, v110, v105, v106, 3, 1, 4) -> f_259(v99, v100, v107, v109, v111, v101, v102, v103, v104, v108, v110, v112, v105, v106, 3, 1, 4) :|: 1 <= v111 && v112 = 3 + v111 && 4 <= v112
f_259(v99, v100, v107, v109, v111, v101, v102, v103, v104, v108, v110, v112, v105, v106, 3, 1, 4) -> f_260(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: 1 <= v113 && v114 = 3 + v113 && 4 <= v114
f_260(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_261(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: TRUE
f_261(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_262(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: TRUE
f_262(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_263(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: TRUE
f_263(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_264(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: TRUE
f_264(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_265(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: 0 = 0
f_265(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_266(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: 0 = 0
f_266(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_268(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: v99 < v100
f_268(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_270(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: 0 = 0
f_270(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_272(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: TRUE
f_272(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_274(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: TRUE
f_274(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_276(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: 0 = 0
f_276(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_278(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: 0 = 0
f_278(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_280(v99, v100, v107, v109, v111, v113, 0, v118, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: v118 = v99 + v100
f_280(v99, v100, v107, v109, v111, v113, 0, v118, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_282(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: v135 = v118 / 2
f_282(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_284(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: TRUE
f_284(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_285(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: TRUE
f_285(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_286(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: v137 != 0
f_285(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_287(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: v137 = 0
f_286(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_288(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: 0 = 0
f_288(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_290(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: TRUE
f_290(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_292(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: 0 = 0
f_292(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_294(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: 0 = 0
f_294(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_296(v99, v135, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) :|: 0 = 0
f_296(v99, v135, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) -> f_298(v99, v135, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 3, 1, 4) :|: TRUE
f_298(v99, v135, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 3, 1, 4) -> f_255(v99, v135, v101, v102, v103, v104, v105, v106, 3, 1, 4) :|: 1 <= v101 && 4 <= v102 && 1 <= v103 && 4 <= v104 && v101 <= v102 && v103 <= v104
f_255(v99, v100, v101, v102, v103, v104, v105, v106, 3, 1, 4) -> f_257(v99, v100, v107, v101, v102, v103, v104, v108, v105, v106, 3, 1, 4) :|: 1 <= v107 && v108 = 3 + v107 && 4 <= v108
f_287(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_289(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: 0 = 0
f_289(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_291(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: TRUE
f_291(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_293(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: 0 = 0
f_293(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_295(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: v138 = 1 + v135
f_295(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_297(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: 0 = 0
f_297(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_299(v138, v100, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) :|: 0 = 0
f_299(v138, v100, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) -> f_300(v138, v100, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 3, 1, 4) :|: TRUE
f_300(v138, v100, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 3, 1, 4) -> f_255(v138, v100, v101, v102, v103, v104, v105, v106, 3, 1, 4) :|: 1 <= v101 && 4 <= v102 && 1 <= v103 && 4 <= v104 && v101 <= v102 && v103 <= v104
Combined rules. Obtained 3 rulesP rules:
f_257(v99:0, v100:0, v107:0, v101:0, v102:0, v103:0, v104:0, v108:0, v105:0, v106:0, 3, 1, 4) -> f_257(v99:0, v135:0, v107:1, v101:0, v102:0, v103:0, v104:0, 3 + v107:1, v105:0, v106:0, 3, 1, 4) :|: v111:0 > 0 && v109:0 > 0 && v113:0 > 0 && v99:0 < v100:0 && (v99:0 + v100:0) / 2 = v135:0 && v137:0 < 0 && v102:0 > 3 && v101:0 > 0 && v103:0 > 0 && v104:0 > 3 && v102:0 >= v101:0 && v107:1 > 0 && v104:0 >= v103:0
f_257(v99:0, v100:0, v107:0, v101:0, v102:0, v103:0, v104:0, v108:0, v105:0, v106:0, 3, 1, 4) -> f_257(v99:0, v135:0, v107:1, v101:0, v102:0, v103:0, v104:0, 3 + v107:1, v105:0, v106:0, 3, 1, 4) :|: v111:0 > 0 && v109:0 > 0 && v113:0 > 0 && v99:0 < v100:0 && (v99:0 + v100:0) / 2 = v135:0 && v137:0 > 0 && v102:0 > 3 && v101:0 > 0 && v103:0 > 0 && v104:0 > 3 && v102:0 >= v101:0 && v107:1 > 0 && v104:0 >= v103:0
f_257(v99:0, v100:0, v107:0, v101:0, v102:0, v103:0, v104:0, v108:0, v105:0, v106:0, 3, 1, 4) -> f_257(1 + v135:0, v100:0, v107:1, v101:0, v102:0, v103:0, v104:0, 3 + v107:1, v105:0, v106:0, 3, 1, 4) :|: v111:0 > 0 && v109:0 > 0 && v113:0 > 0 && v99:0 < v100:0 && (v99:0 + v100:0) / 2 = v135:0 && v102:0 > 3 && v101:0 > 0 && v103:0 > 0 && v104:0 > 3 && v107:1 > 0 && v102:0 >= v101:0 && v104:0 >= v103:0
Filtered unneeded arguments:
   f_257(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13) -> f_257(x1, x2, x4, x5, x6, x7)
Removed division, modulo operations, cleaned up constraints. Obtained 5 rules.P rules:
f_257(v99:0, v100:0, v101:0, v102:0, v103:0, v104:0) -> f_257'(v99:0, v100:0, v101:0, v102:0, v103:0, v104:0) :|: v99:0 < v100:0 && v102:0 > 3 && v101:0 > 0 && v103:0 > 0 && v104:0 > 3 && v104:0 >= v103:0 && v102:0 >= v101:0
f_257'(v99:0, v100:0, v101:0, v102:0, v103:0, v104:0) -> f_257(v99:0, div, v101:0, v102:0, v103:0, v104:0) :|: v99:0 < v100:0 && v102:0 > 3 && v101:0 > 0 && v103:0 > 0 && v104:0 > 3 && v99:0 + v100:0 < 0 && v102:0 >= v101:0 && v99:0 + v100:0 - 2 * div > -2 && v99:0 + v100:0 - 2 * div <= 0 && v104:0 >= v103:0
f_257'(v99:0, v100:0, v101:0, v102:0, v103:0, v104:0) -> f_257(v99:0, div, v101:0, v102:0, v103:0, v104:0) :|: v99:0 < v100:0 && v102:0 > 3 && v101:0 > 0 && v103:0 > 0 && v104:0 > 3 && v99:0 + v100:0 >= 0 && v102:0 >= v101:0 && v99:0 + v100:0 - 2 * div >= 0 && v99:0 + v100:0 - 2 * div < 2 && v104:0 >= v103:0
f_257'(v99:0, v100:0, v101:0, v102:0, v103:0, v104:0) -> f_257(1 + div, v100:0, v101:0, v102:0, v103:0, v104:0) :|: v99:0 < v100:0 && v102:0 > 3 && v101:0 > 0 && v103:0 > 0 && v104:0 > 3 && v102:0 >= v101:0 && v99:0 + v100:0 < 0 && v104:0 >= v103:0 && v99:0 + v100:0 - 2 * div <= 0 && v99:0 + v100:0 - 2 * div > -2
f_257'(v99:0, v100:0, v101:0, v102:0, v103:0, v104:0) -> f_257(1 + div, v100:0, v101:0, v102:0, v103:0, v104:0) :|: v99:0 < v100:0 && v102:0 > 3 && v101:0 > 0 && v103:0 > 0 && v104:0 > 3 && v102:0 >= v101:0 && v99:0 + v100:0 >= 0 && v104:0 >= v103:0 && v99:0 + v100:0 - 2 * div < 2 && v99:0 + v100:0 - 2 * div >= 0

----------------------------------------

(14)
Obligation:
Rules:
f_257(v99:0, v100:0, v101:0, v102:0, v103:0, v104:0) -> f_257'(v99:0, v100:0, v101:0, v102:0, v103:0, v104:0) :|: v99:0 < v100:0 && v102:0 > 3 && v101:0 > 0 && v103:0 > 0 && v104:0 > 3 && v104:0 >= v103:0 && v102:0 >= v101:0
f_257'(x, x1, x2, x3, x4, x5) -> f_257(x, x6, x2, x3, x4, x5) :|: x < x1 && x3 > 3 && x2 > 0 && x4 > 0 && x5 > 3 && x + x1 < 0 && x3 >= x2 && x + x1 - 2 * x6 > -2 && x + x1 - 2 * x6 <= 0 && x5 >= x4
f_257'(x7, x8, x9, x10, x11, x12) -> f_257(x7, x13, x9, x10, x11, x12) :|: x7 < x8 && x10 > 3 && x9 > 0 && x11 > 0 && x12 > 3 && x7 + x8 >= 0 && x10 >= x9 && x7 + x8 - 2 * x13 >= 0 && x7 + x8 - 2 * x13 < 2 && x12 >= x11
f_257'(x14, x15, x16, x17, x18, x19) -> f_257(1 + x20, x15, x16, x17, x18, x19) :|: x14 < x15 && x17 > 3 && x16 > 0 && x18 > 0 && x19 > 3 && x17 >= x16 && x14 + x15 < 0 && x19 >= x18 && x14 + x15 - 2 * x20 <= 0 && x14 + x15 - 2 * x20 > -2
f_257'(x21, x22, x23, x24, x25, x26) -> f_257(1 + x27, x22, x23, x24, x25, x26) :|: x21 < x22 && x24 > 3 && x23 > 0 && x25 > 0 && x26 > 3 && x24 >= x23 && x21 + x22 >= 0 && x26 >= x25 && x21 + x22 - 2 * x27 < 2 && x21 + x22 - 2 * x27 >= 0

----------------------------------------

(15) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(16)
Obligation:
Rules:
f_257(v99:0:0, v100:0:0, v101:0:0, v102:0:0, v103:0:0, v104:0:0) -> f_257(1 + x27:0, v100:0:0, v101:0:0, v102:0:0, v103:0:0, v104:0:0) :|: v99:0:0 + v100:0:0 - 2 * x27:0 >= 0 && v99:0:0 + v100:0:0 - 2 * x27:0 < 2 && v104:0:0 >= v103:0:0 && v99:0:0 + v100:0:0 >= 0 && v102:0:0 >= v101:0:0 && v104:0:0 > 3 && v103:0:0 > 0 && v101:0:0 > 0 && v102:0:0 > 3 && v99:0:0 < v100:0:0
f_257(x, x1, x2, x3, x4, x5) -> f_257(x, x6, x2, x3, x4, x5) :|: x5 >= x4 && x + x1 - 2 * x6 <= 0 && x + x1 - 2 * x6 > -2 && x3 >= x2 && x + x1 < 0 && x5 > 3 && x4 > 0 && x2 > 0 && x3 > 3 && x < x1
f_257(x7, x8, x9, x10, x11, x12) -> f_257(1 + x13, x8, x9, x10, x11, x12) :|: x7 + x8 - 2 * x13 > -2 && x7 + x8 - 2 * x13 <= 0 && x12 >= x11 && x7 + x8 < 0 && x10 >= x9 && x12 > 3 && x11 > 0 && x9 > 0 && x10 > 3 && x7 < x8
f_257(x14, x15, x16, x17, x18, x19) -> f_257(x14, x20, x16, x17, x18, x19) :|: x19 >= x18 && x14 + x15 - 2 * x20 < 2 && x14 + x15 - 2 * x20 >= 0 && x17 >= x16 && x14 + x15 >= 0 && x19 > 3 && x18 > 0 && x16 > 0 && x17 > 3 && x14 < x15

----------------------------------------

(17) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, v99:0:0, v100:0:0, v101:0:0, v102:0:0, v103:0:0, v104:0:0) -> f(1, 1 + x27:0, v100:0:0, v101:0:0, v102:0:0, v103:0:0, v104:0:0) :|: pc = 1 && (v99:0:0 + v100:0:0 - 2 * x27:0 >= 0 && v99:0:0 + v100:0:0 - 2 * x27:0 < 2 && v104:0:0 >= v103:0:0 && v99:0:0 + v100:0:0 >= 0 && v102:0:0 >= v101:0:0 && v104:0:0 > 3 && v103:0:0 > 0 && v101:0:0 > 0 && v102:0:0 > 3 && v99:0:0 < v100:0:0)
f(pc, x, x1, x2, x3, x4, x5) -> f(1, x, x6, x2, x3, x4, x5) :|: pc = 1 && (x5 >= x4 && x + x1 - 2 * x6 <= 0 && x + x1 - 2 * x6 > -2 && x3 >= x2 && x + x1 < 0 && x5 > 3 && x4 > 0 && x2 > 0 && x3 > 3 && x < x1)
f(pc, x7, x8, x9, x10, x11, x12) -> f(1, 1 + x13, x8, x9, x10, x11, x12) :|: pc = 1 && (x7 + x8 - 2 * x13 > -2 && x7 + x8 - 2 * x13 <= 0 && x12 >= x11 && x7 + x8 < 0 && x10 >= x9 && x12 > 3 && x11 > 0 && x9 > 0 && x10 > 3 && x7 < x8)
f(pc, x14, x15, x16, x17, x18, x19) -> f(1, x14, x20, x16, x17, x18, x19) :|: pc = 1 && (x19 >= x18 && x14 + x15 - 2 * x20 < 2 && x14 + x15 - 2 * x20 >= 0 && x17 >= x16 && x14 + x15 >= 0 && x19 > 3 && x18 > 0 && x16 > 0 && x17 > 3 && x14 < x15)
Witness term starting non-terminating reduction: f(1, -8, -7, 4, 6, 2, 6)
----------------------------------------

(18)
NO

----------------------------------------

(19) SEGraph to IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 144 rulesP rules:
f_152 -> f_153(v1, v2, 3, 1, 4) :|: 1 <= v1 && v2 = 3 + v1 && 4 <= v2
f_153(v1, v2, 3, 1, 4) -> f_154(v1, v3, v2, v4, 3, 1, 4) :|: 1 <= v3 && v4 = 3 + v3 && 4 <= v4
f_154(v1, v3, v2, v4, 3, 1, 4) -> f_155(v1, v3, v2, v4, 3, 1, 4) :|: TRUE
f_155(v1, v3, v2, v4, 3, 1, 4) -> f_156(v1, v3, v5, v2, v4, 3, 1, 4) :|: TRUE
f_156(v1, v3, v5, v2, v4, 3, 1, 4) -> f_157(v1, v3, v5, v2, v4, 3, 1, 4) :|: TRUE
f_157(v1, v3, v5, v2, v4, 3, 1, 4) -> f_158(v1, v3, v5, v2, v4, 3, 1, 4) :|: TRUE
f_158(v1, v3, v5, v2, v4, 3, 1, 4) -> f_159(v1, v3, v5, v7, v2, v4, 3, 1, 4) :|: TRUE
f_159(v1, v3, v5, v7, v2, v4, 3, 1, 4) -> f_160(v1, v3, v5, v7, v2, v4, 3, 1, 4) :|: TRUE
f_160(v1, v3, v5, v7, v2, v4, 3, 1, 4) -> f_161(v1, v3, v5, v7, v2, v4, 3, 1, 4) :|: 0 = 0
f_161(v1, v3, v5, v7, v2, v4, 3, 1, 4) -> f_162(v1, v3, v5, v7, v2, v4, 3, 1, 4) :|: 0 = 0
f_162(v1, v3, v5, v7, v2, v4, 3, 1, 4) -> f_163(v5, v7, v1, v2, v3, v4, 3, 1, 4) :|: 0 = 0
f_163(v5, v7, v1, v2, v3, v4, 3, 1, 4) -> f_164(v5, v7, v1, v2, v3, v4, 3, 1, 4) :|: TRUE
f_163(v5, v7, v1, v2, v3, v4, 3, 1, 4) -> f_281(v5, v7, v1, v2, v3, v4, 3, 1, 4) :|: TRUE
f_163(v5, v7, v1, v2, v3, v4, 3, 1, 4) -> f_368(v5, v7, v964, v1, v2, v3, v4, 3, 1, 4) :|: TRUE
f_163(v5, v7, v1, v2, v3, v4, 3, 1, 4) -> f_389(v5, v7, v1255, v1, v2, v3, v4, 3, 1, 4) :|: TRUE
f_163(v5, v7, v1, v2, v3, v4, 3, 1, 4) -> f_392(v5, v7, v964, v1, v2, v3, v4, 3, 1, 4) :|: TRUE
f_163(v5, v7, v1, v2, v3, v4, 3, 1, 4) -> f_402(v5, v7, v1413, v1, v2, v3, v4, 3, 1, 4) :|: TRUE
f_163(v5, v7, v1, v2, v3, v4, 3, 1, 4) -> f_405(v5, v7, v1455, v1, v2, v3, v4, 3, 1, 4) :|: TRUE
f_163(v5, v7, v1, v2, v3, v4, 3, 1, 4) -> f_422(v5, v7, v1413, v1, v2, v3, v4, 3, 1, 4) :|: TRUE
f_163(v5, v7, v1, v2, v3, v4, 3, 1, 4) -> f_425(v5, v7, v1455, v1, v2, v3, v4, 3, 1, 4) :|: TRUE
f_164(v5, v7, v1, v2, v3, v4, 3, 1, 4) -> f_208(v5, v7, v1, v2, v3, v4, v7, 3, 1, 4) :|: TRUE
f_208(v39, v40, v41, v42, v43, v44, v45, 3, 1, 4) -> f_255(v39, v40, v41, v42, v43, v44, v39, v45, 3, 1, 4) :|: TRUE
f_255(v99, v100, v101, v102, v103, v104, v105, v106, 3, 1, 4) -> f_257(v99, v100, v107, v101, v102, v103, v104, v108, v105, v106, 3, 1, 4) :|: 1 <= v107 && v108 = 3 + v107 && 4 <= v108
f_257(v99, v100, v107, v101, v102, v103, v104, v108, v105, v106, 3, 1, 4) -> f_258(v99, v100, v107, v109, v101, v102, v103, v104, v108, v110, v105, v106, 3, 1, 4) :|: 1 <= v109 && v110 = 3 + v109 && 4 <= v110
f_258(v99, v100, v107, v109, v101, v102, v103, v104, v108, v110, v105, v106, 3, 1, 4) -> f_259(v99, v100, v107, v109, v111, v101, v102, v103, v104, v108, v110, v112, v105, v106, 3, 1, 4) :|: 1 <= v111 && v112 = 3 + v111 && 4 <= v112
f_259(v99, v100, v107, v109, v111, v101, v102, v103, v104, v108, v110, v112, v105, v106, 3, 1, 4) -> f_260(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: 1 <= v113 && v114 = 3 + v113 && 4 <= v114
f_260(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_261(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: TRUE
f_261(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_262(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: TRUE
f_262(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_263(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: TRUE
f_263(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_264(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: TRUE
f_264(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_265(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: 0 = 0
f_265(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_266(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: 0 = 0
f_266(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_267(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: v100 <= v99
f_266(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_268(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: v99 < v100
f_267(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_269(v99, v100, v107, v109, v111, v113, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 4) :|: 0 = 0
f_268(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_270(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: 0 = 0
f_269(v99, v100, v107, v109, v111, v113, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 4) -> f_271(v99, v100, v107, v109, v111, v113, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 4) :|: TRUE
f_270(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_272(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: TRUE
f_271(v99, v100, v107, v109, v111, v113, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 4) -> f_273(v99, v100, v107, v109, v111, v113, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 4) :|: 0 = 0
f_272(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_274(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: TRUE
f_273(v99, v100, v107, v109, v111, v113, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 4) -> f_275(v99, v100, v107, v109, v111, v113, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 4) :|: TRUE
f_274(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_276(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: 0 = 0
f_275(v99, v100, v107, v109, v111, v113, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 4) -> f_277(v99, v100, v107, v109, v111, v113, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 4) :|: TRUE
f_276(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_278(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: 0 = 0
f_277(v99, v100, v107, v109, v111, v113, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 4) -> f_279(v99, v100, v107, v109, v111, v113, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 4) :|: 0 = 0
f_278(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_280(v99, v100, v107, v109, v111, v113, 0, v118, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: v118 = v99 + v100
f_280(v99, v100, v107, v109, v111, v113, 0, v118, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_282(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: v135 = v118 / 2
f_281(v5, v7, v1, v2, v3, v4, 3, 1, 4) -> f_283(v1, v3, v5, v7, v2, v4, 3, 1, 4) :|: 0 = 0
f_282(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_284(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: TRUE
f_284(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_285(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: TRUE
f_285(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_286(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: v137 != 0
f_285(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_287(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: v137 = 0
f_286(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_288(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: 0 = 0
f_287(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_289(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: 0 = 0
f_288(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_290(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: TRUE
f_289(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_291(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: TRUE
f_290(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_292(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: 0 = 0
f_291(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_293(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: 0 = 0
f_292(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_294(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: 0 = 0
f_293(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_295(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: v138 = 1 + v135
f_294(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_296(v99, v135, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) :|: 0 = 0
f_295(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_297(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: 0 = 0
f_296(v99, v135, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) -> f_298(v99, v135, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 3, 1, 4) :|: TRUE
f_296(v99, v135, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) -> f_301(v99, v135, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) :|: TRUE
f_296(v99, v135, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) -> f_369(v99, v135, v978, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) :|: TRUE
f_296(v99, v135, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) -> f_390(v99, v135, v1269, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) :|: TRUE
f_296(v99, v135, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) -> f_393(v99, v135, v978, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) :|: TRUE
f_296(v99, v135, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) -> f_403(v99, v135, v1427, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) :|: TRUE
f_296(v99, v135, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) -> f_406(v99, v135, v1469, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) :|: TRUE
f_296(v99, v135, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) -> f_423(v99, v135, v1427, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) :|: TRUE
f_296(v99, v135, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) -> f_426(v99, v135, v1469, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) :|: TRUE
f_297(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_299(v138, v100, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) :|: 0 = 0
f_298(v99, v135, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 3, 1, 4) -> f_255(v99, v135, v101, v102, v103, v104, v105, v106, 3, 1, 4) :|: TRUE
f_299(v138, v100, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) -> f_300(v138, v100, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 3, 1, 4) :|: TRUE
f_299(v138, v100, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) -> f_303(v138, v100, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) :|: TRUE
f_299(v138, v100, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) -> f_370(v138, v100, v992, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) :|: TRUE
f_299(v138, v100, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) -> f_391(v138, v100, v1283, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) :|: TRUE
f_299(v138, v100, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) -> f_394(v138, v100, v992, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) :|: TRUE
f_299(v138, v100, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) -> f_404(v138, v100, v1441, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) :|: TRUE
f_299(v138, v100, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) -> f_407(v138, v100, v1483, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) :|: TRUE
f_299(v138, v100, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) -> f_424(v138, v100, v1441, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) :|: TRUE
f_299(v138, v100, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) -> f_427(v138, v100, v1483, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) :|: TRUE
f_300(v138, v100, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 3, 1, 4) -> f_255(v138, v100, v101, v102, v103, v104, v105, v106, 3, 1, 4) :|: TRUE
f_301(v99, v135, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) -> f_302(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: 0 = 0
f_302(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_304(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: TRUE
f_303(v138, v100, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) -> f_305(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: 0 = 0
f_304(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_306(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: TRUE
f_305(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_307(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: TRUE
f_306(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_308(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: 0 = 0
f_307(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_309(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: TRUE
f_308(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_333(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v108, v110, v112, v114, v101, v102, v103, v104, v105, v106, 3, 2, 4) :|: TRUE
f_309(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_313(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: 0 = 0
f_313(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_334(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v108, v110, v112, v114, v101, v102, v103, v104, v105, v106, 3, 2, 1, 4) :|: TRUE
f_333(v511, v512, v513, v514, v515, v516, 0, v518, v519, v520, 1, v522, v523, v524, v525, v526, v527, v528, v529, v530, v531, 3, 2, 4) -> f_361(v511, v512, v513, v514, v515, v516, 0, v518, v519, v520, 1, v522, v523, v524, v525, 3, 2, 4) :|: TRUE
f_334(v532, v533, v534, v535, v536, v537, 0, v539, v540, v541, v542, v543, v544, v545, v546, v547, v548, v549, v550, v551, 3, 2, 1, 4) -> f_362(v532, v533, v534, v535, v536, v537, 0, v539, v540, v541, v542, v543, v544, v545, 3, 2, 1, 4) :|: TRUE
f_361(v853, v854, v855, v856, v857, v858, 0, v860, v861, v862, 1, v864, v865, v866, v867, 3, 2, 4) -> f_363(v853, v854, v855, v856, v857, v858, 0, v860, v861, v862, 1, v853, v864, v865, v866, v867, 3, 2, 4) :|: TRUE
f_362(v868, v869, v870, v871, v872, v873, 0, v875, v876, v877, v878, v879, v880, v881, 3, 2, 1, 4) -> f_364(v868, v869, v870, v871, v872, v873, 0, v875, v876, v877, v877, v878, v879, v880, v881, 3, 2, 1, 4) :|: TRUE
f_368(v5, v7, v964, v1, v2, v3, v4, 3, 1, 4) -> f_374(v1, v3, v5, v7, v964, v2, v4, 3, 1, 4) :|: 0 = 0
f_369(v99, v135, v978, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) -> f_375(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v978, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: 0 = 0
f_370(v138, v100, v992, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) -> f_376(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v992, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: 0 = 0
f_375(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v978, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_379(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v978, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: TRUE
f_376(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v992, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_380(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v992, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: TRUE
f_379(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v978, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_383(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v978, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: TRUE
f_380(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v992, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_384(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v992, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: TRUE
f_383(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v978, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_387(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v978, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: 0 = 0
f_384(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v992, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_388(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v992, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: 0 = 0
f_387(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v978, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_363(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v978, v108, v110, v112, v114, 3, 2, 4) :|: TRUE
f_388(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v992, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_364(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v992, v108, v110, v112, v114, 3, 2, 1, 4) :|: TRUE
f_389(v5, v7, v1255, v1, v2, v3, v4, 3, 1, 4) -> f_395(v1, v3, v5, v7, v1255, v2, v4, 3, 1, 4) :|: 0 = 0
f_390(v99, v135, v1269, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) -> f_396(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1269, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: 0 = 0
f_391(v138, v100, v1283, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) -> f_397(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1283, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: 0 = 0
f_392(v5, v7, v964, v1, v2, v3, v4, 3, 1, 4) -> f_368(v5, v7, v964, v1, v2, v3, v4, 3, 1, 4) :|: TRUE
f_393(v99, v135, v978, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) -> f_369(v99, v135, v978, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) :|: TRUE
f_394(v138, v100, v992, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) -> f_370(v138, v100, v992, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) :|: TRUE
f_396(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1269, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_398(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1269, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: TRUE
f_397(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1283, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_399(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1283, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: TRUE
f_398(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1269, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_400(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1269, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: TRUE
f_399(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1283, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_401(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1283, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: TRUE
f_400(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1269, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_383(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1269, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: TRUE
f_401(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1283, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_384(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1283, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: TRUE
f_402(v5, v7, v1413, v1, v2, v3, v4, 3, 1, 4) -> f_408(v1, v3, v5, v7, v1413, v2, v4, 3, 1, 4) :|: 0 = 0
f_403(v99, v135, v1427, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) -> f_409(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1427, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: 0 = 0
f_404(v138, v100, v1441, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) -> f_410(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1441, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: 0 = 0
f_405(v5, v7, v1455, v1, v2, v3, v4, 3, 1, 4) -> f_411(v1, v3, v5, v7, v1455, v2, v4, 3, 1, 4) :|: 0 = 0
f_406(v99, v135, v1469, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) -> f_412(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1469, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: 0 = 0
f_407(v138, v100, v1483, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) -> f_413(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1483, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: 0 = 0
f_409(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1427, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_414(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1427, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: TRUE
f_410(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1441, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_415(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1441, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: TRUE
f_412(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1469, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_416(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1469, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: TRUE
f_413(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1483, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_417(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1483, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: TRUE
f_414(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1427, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_418(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1427, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: TRUE
f_415(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1441, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_419(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1441, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: TRUE
f_416(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1469, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_420(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1469, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: TRUE
f_417(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1483, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_421(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1483, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: TRUE
f_418(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1427, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_383(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1427, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: TRUE
f_419(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1441, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_384(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1441, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: TRUE
f_420(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1469, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_383(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1469, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: TRUE
f_421(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1483, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_384(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1483, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: TRUE
f_422(v5, v7, v1413, v1, v2, v3, v4, 3, 1, 4) -> f_402(v5, v7, v1413, v1, v2, v3, v4, 3, 1, 4) :|: TRUE
f_423(v99, v135, v1427, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) -> f_403(v99, v135, v1427, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) :|: TRUE
f_424(v138, v100, v1441, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) -> f_404(v138, v100, v1441, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) :|: TRUE
f_425(v5, v7, v1455, v1, v2, v3, v4, 3, 1, 4) -> f_405(v5, v7, v1455, v1, v2, v3, v4, 3, 1, 4) :|: TRUE
f_426(v99, v135, v1469, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) -> f_406(v99, v135, v1469, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) :|: TRUE
f_427(v138, v100, v1483, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) -> f_407(v138, v100, v1483, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) :|: TRUE
Combined rules. Obtained 16 rulesP rules:
f_152 -> f_408(v1:0, v3:0, v5:0, v7:0, v1413:0, 3 + v1:0, 3 + v3:0, 3, 1, 4) :|: v3:0 > 0 && v1:0 > 0
f_266(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, v101:0, v102:0, v103:0, v104:0, v108:0, v110:0, v112:0, v114:0, v105:0, v106:0, 3, 1, 4) -> f_364(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 0, v99:0 + v100:0, v135:0, 1 + v135:0, 1 + v135:0, v108:0, v110:0, v112:0, v114:0, 3, 2, 1, 4) :|: (v99:0 + v100:0) / 2 = v135:0 && v99:0 < v100:0
f_266(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, v101:0, v102:0, v103:0, v104:0, v108:0, v110:0, v112:0, v114:0, v105:0, v106:0, 3, 1, 4) -> f_363(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 0, v99:0 + v100:0, v135:0, v137:0, 1, v978:0, v108:0, v110:0, v112:0, v114:0, 3, 2, 4) :|: v99:0 < v100:0 && v137:0 < 0 && (v99:0 + v100:0) / 2 = v135:0
f_266(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, v101:0, v102:0, v103:0, v104:0, v108:0, v110:0, v112:0, v114:0, v105:0, v106:0, 3, 1, 4) -> f_363(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 0, v99:0 + v100:0, v135:0, v137:0, 1, v978:0, v108:0, v110:0, v112:0, v114:0, 3, 2, 4) :|: v99:0 < v100:0 && v137:0 > 0 && (v99:0 + v100:0) / 2 = v135:0
f_266(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, v101:0, v102:0, v103:0, v104:0, v108:0, v110:0, v112:0, v114:0, v105:0, v106:0, 3, 1, 4) -> f_266(v99:0, v135:0, v107:1, v109:1, v111:1, v113:1, v101:0, v102:0, v103:0, v104:0, 3 + v107:1, 3 + v109:1, 3 + v111:1, 3 + v113:1, v105:0, v106:0, 3, 1, 4) :|: v99:0 < v100:0 && v107:1 > 0 && v109:1 > 0 && v111:1 > 0 && (v99:0 + v100:0) / 2 = v135:0 && v113:1 > 0 && v137:0 < 0
f_266(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, v101:0, v102:0, v103:0, v104:0, v108:0, v110:0, v112:0, v114:0, v105:0, v106:0, 3, 1, 4) -> f_266(v99:0, v135:0, v107:1, v109:1, v111:1, v113:1, v101:0, v102:0, v103:0, v104:0, 3 + v107:1, 3 + v109:1, 3 + v111:1, 3 + v113:1, v105:0, v106:0, 3, 1, 4) :|: v99:0 < v100:0 && v107:1 > 0 && v109:1 > 0 && v111:1 > 0 && (v99:0 + v100:0) / 2 = v135:0 && v113:1 > 0 && v137:0 > 0
f_152 -> f_411(v1:0, v3:0, v5:0, v7:0, v1455:0, 3 + v1:0, 3 + v3:0, 3, 1, 4) :|: v3:0 > 0 && v1:0 > 0
f_152 -> f_374(v1:0, v3:0, v5:0, v7:0, v964:0, 3 + v1:0, 3 + v3:0, 3, 1, 4) :|: v3:0 > 0 && v1:0 > 0
f_266(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, v101:0, v102:0, v103:0, v104:0, v108:0, v110:0, v112:0, v114:0, v105:0, v106:0, 3, 1, 4) -> f_364(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 0, v99:0 + v100:0, v135:0, 1 + v135:0, v992:0, v108:0, v110:0, v112:0, v114:0, 3, 2, 1, 4) :|: (v99:0 + v100:0) / 2 = v135:0 && v99:0 < v100:0
f_152 -> f_283(v1:0, v3:0, v5:0, v7:0, 3 + v1:0, 3 + v3:0, 3, 1, 4) :|: v3:0 > 0 && v1:0 > 0
f_266(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, v101:0, v102:0, v103:0, v104:0, v108:0, v110:0, v112:0, v114:0, v105:0, v106:0, 3, 1, 4) -> f_363(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 0, v99:0 + v100:0, v135:0, v137:0, 1, v99:0, v108:0, v110:0, v112:0, v114:0, 3, 2, 4) :|: v99:0 < v100:0 && v137:0 < 0 && (v99:0 + v100:0) / 2 = v135:0
f_266(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, v101:0, v102:0, v103:0, v104:0, v108:0, v110:0, v112:0, v114:0, v105:0, v106:0, 3, 1, 4) -> f_363(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 0, v99:0 + v100:0, v135:0, v137:0, 1, v99:0, v108:0, v110:0, v112:0, v114:0, 3, 2, 4) :|: v99:0 < v100:0 && v137:0 > 0 && (v99:0 + v100:0) / 2 = v135:0
f_152 -> f_395(v1:0, v3:0, v5:0, v7:0, v1255:0, 3 + v1:0, 3 + v3:0, 3, 1, 4) :|: v3:0 > 0 && v1:0 > 0
f_152 -> f_266(v5:0, v7:0, v107:0, v109:0, v111:0, v113:0, v1:0, 3 + v1:0, v3:0, 3 + v3:0, 3 + v107:0, 3 + v109:0, 3 + v111:0, 3 + v113:0, v5:0, v7:0, 3, 1, 4) :|: v3:0 > 0 && v1:0 > 0 && v107:0 > 0 && v109:0 > 0 && v111:0 > 0 && v113:0 > 0
f_266(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, v101:0, v102:0, v103:0, v104:0, v108:0, v110:0, v112:0, v114:0, v105:0, v106:0, 3, 1, 4) -> f_266(1 + v135:0, v100:0, v107:1, v109:1, v111:1, v113:1, v101:0, v102:0, v103:0, v104:0, 3 + v107:1, 3 + v109:1, 3 + v111:1, 3 + v113:1, v105:0, v106:0, 3, 1, 4) :|: v99:0 < v100:0 && v107:1 > 0 && v109:1 > 0 && (v99:0 + v100:0) / 2 = v135:0 && v111:1 > 0 && v113:1 > 0
f_266(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, v101:0, v102:0, v103:0, v104:0, v108:0, v110:0, v112:0, v114:0, v105:0, v106:0, 3, 1, 4) -> f_279(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 1, v101:0, v102:0, v103:0, v104:0, v108:0, v110:0, v112:0, v114:0, v105:0, v106:0, 3, 4) :|: v99:0 >= v100:0
Filtered unneeded arguments:
   f_266(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19) -> f_266(x1, x2)
Removed division, modulo operations, cleaned up constraints. Obtained 26 rules.P rules:
f_152 -> f_408(v1:0, v3:0, v5:0, v7:0, v1413:0, 3 + v1:0, 3 + v3:0, 3, 1, 4) :|: v3:0 > 0 && v1:0 > 0
f_266(v99:0, v100:0) -> f_266'(v99:0, v100:0) :|: v99:0 < v100:0
f_266'(v99:0, v100:0) -> f_364(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 0, v99:0 + v100:0, div, 1 + div, 1 + div, v108:0, v110:0, v112:0, v114:0, 3, 2, 1, 4) :|: v99:0 < v100:0 && v99:0 + v100:0 < 0 && v99:0 + v100:0 - 2 * div <= 0 && v99:0 + v100:0 - 2 * div > -2
f_266'(v99:0, v100:0) -> f_364(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 0, v99:0 + v100:0, div, 1 + div, 1 + div, v108:0, v110:0, v112:0, v114:0, 3, 2, 1, 4) :|: v99:0 < v100:0 && v99:0 + v100:0 >= 0 && v99:0 + v100:0 - 2 * div < 2 && v99:0 + v100:0 - 2 * div >= 0
f_266(v99:0, v100:0) -> f_266'(v99:0, v100:0) :|: v99:0 < v100:0 && v137:0 < 0
f_266'(v99:0, v100:0) -> f_363(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 0, v99:0 + v100:0, div, v137:0, 1, v978:0, v108:0, v110:0, v112:0, v114:0, 3, 2, 4) :|: v137:0 < 0 && v99:0 < v100:0 && v99:0 + v100:0 < 0 && v99:0 + v100:0 - 2 * div <= 0 && v99:0 + v100:0 - 2 * div > -2
f_266'(v99:0, v100:0) -> f_363(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 0, v99:0 + v100:0, div, v137:0, 1, v978:0, v108:0, v110:0, v112:0, v114:0, 3, 2, 4) :|: v137:0 < 0 && v99:0 < v100:0 && v99:0 + v100:0 >= 0 && v99:0 + v100:0 - 2 * div < 2 && v99:0 + v100:0 - 2 * div >= 0
f_266(v99:0, v100:0) -> f_266'(v99:0, v100:0) :|: v99:0 < v100:0 && v137:0 > 0
f_266'(v99:0, v100:0) -> f_363(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 0, v99:0 + v100:0, div, v137:0, 1, v978:0, v108:0, v110:0, v112:0, v114:0, 3, 2, 4) :|: v137:0 > 0 && v99:0 < v100:0 && v99:0 + v100:0 < 0 && v99:0 + v100:0 - 2 * div <= 0 && v99:0 + v100:0 - 2 * div > -2
f_266'(v99:0, v100:0) -> f_363(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 0, v99:0 + v100:0, div, v137:0, 1, v978:0, v108:0, v110:0, v112:0, v114:0, 3, 2, 4) :|: v137:0 > 0 && v99:0 < v100:0 && v99:0 + v100:0 >= 0 && v99:0 + v100:0 - 2 * div < 2 && v99:0 + v100:0 - 2 * div >= 0
f_266'(v99:0, v100:0) -> f_266(v99:0, div) :|: v99:0 + v100:0 < 0 && v99:0 + v100:0 - 2 * div > -2 && v99:0 + v100:0 - 2 * div <= 0 && v99:0 < v100:0
f_266'(v99:0, v100:0) -> f_266(v99:0, div) :|: v99:0 + v100:0 >= 0 && v99:0 + v100:0 - 2 * div >= 0 && v99:0 + v100:0 - 2 * div < 2 && v99:0 < v100:0
f_152 -> f_411(v1:0, v3:0, v5:0, v7:0, v1455:0, 3 + v1:0, 3 + v3:0, 3, 1, 4) :|: v3:0 > 0 && v1:0 > 0
f_152 -> f_374(v1:0, v3:0, v5:0, v7:0, v964:0, 3 + v1:0, 3 + v3:0, 3, 1, 4) :|: v3:0 > 0 && v1:0 > 0
f_266'(v99:0, v100:0) -> f_364(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 0, v99:0 + v100:0, div, 1 + div, v992:0, v108:0, v110:0, v112:0, v114:0, 3, 2, 1, 4) :|: v99:0 < v100:0 && v99:0 + v100:0 < 0 && v99:0 + v100:0 - 2 * div <= 0 && v99:0 + v100:0 - 2 * div > -2
f_266'(v99:0, v100:0) -> f_364(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 0, v99:0 + v100:0, div, 1 + div, v992:0, v108:0, v110:0, v112:0, v114:0, 3, 2, 1, 4) :|: v99:0 < v100:0 && v99:0 + v100:0 >= 0 && v99:0 + v100:0 - 2 * div < 2 && v99:0 + v100:0 - 2 * div >= 0
f_152 -> f_283(v1:0, v3:0, v5:0, v7:0, 3 + v1:0, 3 + v3:0, 3, 1, 4) :|: v3:0 > 0 && v1:0 > 0
f_266'(v99:0, v100:0) -> f_363(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 0, v99:0 + v100:0, div, v137:0, 1, v99:0, v108:0, v110:0, v112:0, v114:0, 3, 2, 4) :|: v137:0 < 0 && v99:0 < v100:0 && v99:0 + v100:0 < 0 && v99:0 + v100:0 - 2 * div <= 0 && v99:0 + v100:0 - 2 * div > -2
f_266'(v99:0, v100:0) -> f_363(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 0, v99:0 + v100:0, div, v137:0, 1, v99:0, v108:0, v110:0, v112:0, v114:0, 3, 2, 4) :|: v137:0 < 0 && v99:0 < v100:0 && v99:0 + v100:0 >= 0 && v99:0 + v100:0 - 2 * div < 2 && v99:0 + v100:0 - 2 * div >= 0
f_266'(v99:0, v100:0) -> f_363(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 0, v99:0 + v100:0, div, v137:0, 1, v99:0, v108:0, v110:0, v112:0, v114:0, 3, 2, 4) :|: v137:0 > 0 && v99:0 < v100:0 && v99:0 + v100:0 < 0 && v99:0 + v100:0 - 2 * div <= 0 && v99:0 + v100:0 - 2 * div > -2
f_266'(v99:0, v100:0) -> f_363(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 0, v99:0 + v100:0, div, v137:0, 1, v99:0, v108:0, v110:0, v112:0, v114:0, 3, 2, 4) :|: v137:0 > 0 && v99:0 < v100:0 && v99:0 + v100:0 >= 0 && v99:0 + v100:0 - 2 * div < 2 && v99:0 + v100:0 - 2 * div >= 0
f_152 -> f_395(v1:0, v3:0, v5:0, v7:0, v1255:0, 3 + v1:0, 3 + v3:0, 3, 1, 4) :|: v3:0 > 0 && v1:0 > 0
f_152 -> f_266(v5:0, v7:0) :|: TRUE
f_266'(v99:0, v100:0) -> f_266(1 + div, v100:0) :|: v99:0 + v100:0 < 0 && v99:0 < v100:0 && v99:0 + v100:0 - 2 * div <= 0 && v99:0 + v100:0 - 2 * div > -2
f_266'(v99:0, v100:0) -> f_266(1 + div, v100:0) :|: v99:0 + v100:0 >= 0 && v99:0 < v100:0 && v99:0 + v100:0 - 2 * div < 2 && v99:0 + v100:0 - 2 * div >= 0
f_266(v99:0, v100:0) -> f_279(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 1, v101:0, v102:0, v103:0, v104:0, v108:0, v110:0, v112:0, v114:0, v105:0, v106:0, 3, 4) :|: v99:0 >= v100:0

----------------------------------------

(20)
Obligation:
Rules:
f_152 -> f_408(v1:0, v3:0, v5:0, v7:0, v1413:0, 3 + v1:0, 3 + v3:0, 3, 1, 4) :|: v3:0 > 0 && v1:0 > 0
f_266(v99:0, v100:0) -> f_266'(v99:0, v100:0) :|: v99:0 < v100:0
f_266'(x, x1) -> f_364(x, x1, x2, x3, x4, x5, 0, x + x1, x6, 1 + x6, 1 + x6, x7, x8, x9, x10, 3, 2, 1, 4) :|: x < x1 && x + x1 < 0 && x + x1 - 2 * x6 <= 0 && x + x1 - 2 * x6 > -2
f_266'(x11, x12) -> f_364(x11, x12, x13, x14, x15, x16, 0, x11 + x12, x17, 1 + x17, 1 + x17, x18, x19, x20, x21, 3, 2, 1, 4) :|: x11 < x12 && x11 + x12 >= 0 && x11 + x12 - 2 * x17 < 2 && x11 + x12 - 2 * x17 >= 0
f_266(x22, x23) -> f_266'(x22, x23) :|: x22 < x23 && x24 < 0
f_266'(x25, x26) -> f_363(x25, x26, x27, x28, x29, x30, 0, x25 + x26, x31, x32, 1, x33, x34, x35, x36, x37, 3, 2, 4) :|: x32 < 0 && x25 < x26 && x25 + x26 < 0 && x25 + x26 - 2 * x31 <= 0 && x25 + x26 - 2 * x31 > -2
f_266'(x38, x39) -> f_363(x38, x39, x40, x41, x42, x43, 0, x38 + x39, x44, x45, 1, x46, x47, x48, x49, x50, 3, 2, 4) :|: x45 < 0 && x38 < x39 && x38 + x39 >= 0 && x38 + x39 - 2 * x44 < 2 && x38 + x39 - 2 * x44 >= 0
f_266(x51, x52) -> f_266'(x51, x52) :|: x51 < x52 && x53 > 0
f_266'(x54, x55) -> f_363(x54, x55, x56, x57, x58, x59, 0, x54 + x55, x60, x61, 1, x62, x63, x64, x65, x66, 3, 2, 4) :|: x61 > 0 && x54 < x55 && x54 + x55 < 0 && x54 + x55 - 2 * x60 <= 0 && x54 + x55 - 2 * x60 > -2
f_266'(x67, x68) -> f_363(x67, x68, x69, x70, x71, x72, 0, x67 + x68, x73, x74, 1, x75, x76, x77, x78, x79, 3, 2, 4) :|: x74 > 0 && x67 < x68 && x67 + x68 >= 0 && x67 + x68 - 2 * x73 < 2 && x67 + x68 - 2 * x73 >= 0
f_266'(x80, x81) -> f_266(x80, x82) :|: x80 + x81 < 0 && x80 + x81 - 2 * x82 > -2 && x80 + x81 - 2 * x82 <= 0 && x80 < x81
f_266'(x83, x84) -> f_266(x83, x85) :|: x83 + x84 >= 0 && x83 + x84 - 2 * x85 >= 0 && x83 + x84 - 2 * x85 < 2 && x83 < x84
f_152 -> f_411(x86, x87, x88, x89, x90, 3 + x86, 3 + x87, 3, 1, 4) :|: x87 > 0 && x86 > 0
f_152 -> f_374(x91, x92, x93, x94, x95, 3 + x91, 3 + x92, 3, 1, 4) :|: x92 > 0 && x91 > 0
f_266'(x96, x97) -> f_364(x96, x97, x98, x99, x100, x101, 0, x96 + x97, x102, 1 + x102, x103, x104, x105, x106, x107, 3, 2, 1, 4) :|: x96 < x97 && x96 + x97 < 0 && x96 + x97 - 2 * x102 <= 0 && x96 + x97 - 2 * x102 > -2
f_266'(x108, x109) -> f_364(x108, x109, x110, x111, x112, x113, 0, x108 + x109, x114, 1 + x114, x115, x116, x117, x118, x119, 3, 2, 1, 4) :|: x108 < x109 && x108 + x109 >= 0 && x108 + x109 - 2 * x114 < 2 && x108 + x109 - 2 * x114 >= 0
f_152 -> f_283(x120, x121, x122, x123, 3 + x120, 3 + x121, 3, 1, 4) :|: x121 > 0 && x120 > 0
f_266'(x124, x125) -> f_363(x124, x125, x126, x127, x128, x129, 0, x124 + x125, x130, x131, 1, x124, x132, x133, x134, x135, 3, 2, 4) :|: x131 < 0 && x124 < x125 && x124 + x125 < 0 && x124 + x125 - 2 * x130 <= 0 && x124 + x125 - 2 * x130 > -2
f_266'(x136, x137) -> f_363(x136, x137, x138, x139, x140, x141, 0, x136 + x137, x142, x143, 1, x136, x144, x145, x146, x147, 3, 2, 4) :|: x143 < 0 && x136 < x137 && x136 + x137 >= 0 && x136 + x137 - 2 * x142 < 2 && x136 + x137 - 2 * x142 >= 0
f_266'(x148, x149) -> f_363(x148, x149, x150, x151, x152, x153, 0, x148 + x149, x154, x155, 1, x148, x156, x157, x158, x159, 3, 2, 4) :|: x155 > 0 && x148 < x149 && x148 + x149 < 0 && x148 + x149 - 2 * x154 <= 0 && x148 + x149 - 2 * x154 > -2
f_266'(x160, x161) -> f_363(x160, x161, x162, x163, x164, x165, 0, x160 + x161, x166, x167, 1, x160, x168, x169, x170, x171, 3, 2, 4) :|: x167 > 0 && x160 < x161 && x160 + x161 >= 0 && x160 + x161 - 2 * x166 < 2 && x160 + x161 - 2 * x166 >= 0
f_152 -> f_395(x172, x173, x174, x175, x176, 3 + x172, 3 + x173, 3, 1, 4) :|: x173 > 0 && x172 > 0
f_152 -> f_266(x177, x178) :|: TRUE
f_266'(x179, x180) -> f_266(1 + x181, x180) :|: x179 + x180 < 0 && x179 < x180 && x179 + x180 - 2 * x181 <= 0 && x179 + x180 - 2 * x181 > -2
f_266'(x182, x183) -> f_266(1 + x184, x183) :|: x182 + x183 >= 0 && x182 < x183 && x182 + x183 - 2 * x184 < 2 && x182 + x183 - 2 * x184 >= 0
f_266(x185, x186) -> f_279(x185, x186, x187, x188, x189, x190, 1, x191, x192, x193, x194, x195, x196, x197, x198, x199, x200, 3, 4) :|: x185 >= x186
Start term: f_152

----------------------------------------

(21) IRSToKoat (EQUIVALENT)
Convert an IRS to a koat problem
----------------------------------------

(22)
Obligation:
(GOAL COMPLEXITY)
(STARTTERM (FUNCTIONSYMBOLS f_152))
(VAR x160 x162 x161 x164 x163 x166 x165 x168 x167 x169 x391 x390 x151 x393 x150 x392 x153 x395 x152 x394 x155 x397 x154 x396 x157 x399 x156 x398 x159 x158 x380 x140 x382 x381 x142 x384 x141 x383 x144 x386 x143 x385 x146 x388 x145 x387 x148 x147 x389 x149 x371 x370 x131 x373 x130 x372 x133 x375 x132 x374 x135 x377 x134 x376 x137 x379 x136 x378 x139 x138 x193 x192 x195 x194 x197 x196 x199 x198 x191 x190 x182 x181 x184 x183 x186 x185 x188 x187 x189 x180 x171 x170 x173 x172 x175 x174 x177 x176 x179 x178 x605 x604 x607 x606 x609 x608 x601 x600 x603 x602 k7 k8 k5 k6 k9 k0 k3 k4 k1 k2 x407 x406 x409 x408 x401 x400 x403 x402 x405 x404 x630 x632 x631 x633 x627 x626 x629 x628 x621 x620 x623 x622 x625 x624 x616 x615 x618 x617 x619 k205 k204 k203 x610 k202 x612 k201 x611 k200 x614 x613 x209 x208 x441 x440 x201 x443 x200 x442 x203 x445 x202 x444 x205 x447 x204 x446 x207 x449 x206 x448 x439 x430 x432 x431 x434 x433 x436 x435 x438 x437 x429 x428 x421 x420 x423 x422 x425 x424 x427 x426 x418 x417 x419 x410 x412 x411 x414 x413 x416 x415 x481 x480 x241 x483 x240 x482 x243 x485 x242 x484 x245 x487 x244 x486 x247 x489 x246 x488 x249 x248 x470 x230 x472 x471 x232 x474 x231 x473 x234 x476 x233 x475 x236 x478 x235 x477 x238 x237 x479 x239 x4 x5 x2 x3 x8 x461 x9 x460 x6 x221 x463 x7 x220 x462 x223 x465 x222 x464 x225 x467 x224 x466 x227 x469 x1 x226 x468 x229 x228 x219 x' x450 x210 x452 x451 x212 x454 x211 x453 x214 x456 x213 x455 x216 x458 x215 x457 x218 x217 x459 x290 x281 x280 x283 x282 x285 x284 x287 x286 x289 x288 x270 x272 x271 x274 x273 x276 x275 x278 x277 x279 x261 x260 x263 x262 x265 x264 x267 x266 x269 x268 x490 x250 x492 x491 x252 x494 x251 x493 x254 x496 x253 x495 x256 x498 x255 x497 x258 x257 x499 x259 x'' k14 k15 k16 k17 k10 k11 k12 k13 x292 x291 x294 x293 x296 x295 x298 x297 x299 k36 k37 k38 k39 k32 k33 k34 k35 k30 k31 k29 k25 k26 k27 k28 k21 k22 k23 k24 k20 k18 k19 k58 k59 k54 k55 k56 k57 k50 k51 k52 k53 k47 k48 k49 k43 k44 k45 k46 k40 k41 k42 k76 k77 k78 k79 k72 k73 k74 k75 k70 k71 x k69 k65 k66 k67 k68 k61 k62 k63 k64 k60 k98 k99 k94 k95 k96 k97 k90 k91 k92 k93 x28 x29 x24 x25 x26 x27 x20 x21 x22 x23 k87 k88 k89 k83 k84 k85 k86 k80 k81 k82 x17 x18 x19 x13 x14 x15 x16 x10 x11 x12 x46 x47 x48 x49 x42 x43 x44 x45 x40 x41 x39 x35 x36 x37 x38 x31 x32 x33 x34 x30 x70 x68 x69 x64 x65 x66 x67 x60 x61 x62 x63 x57 x58 x59 x53 x54 x55 x56 x50 x51 x52 x528 x90 x527 x91 x92 x529 k118 k117 k116 k115 k119 k110 x86 x520 x87 x88 x522 x89 x521 x82 k114 x524 x83 k113 x523 k112 x84 x526 k111 x85 x525 x517 x516 x80 x519 x81 x518 k107 k106 k105 k104 x79 k109 k108 x75 x76 x77 x511 x78 x510 x71 k103 x513 x72 k102 x512 x73 k101 x515 x74 k100 x514 x506 x505 x508 x507 x509 x500 x502 x501 x504 x503 x97 x98 x99 x93 x94 x95 x96 x329 k150 k159 x560 x320 x562 x561 x322 k154 x564 k153 x321 x563 x324 k152 x566 x323 k151 x565 x326 x568 k158 x325 x567 k157 x328 k156 x327 k155 x569 x319 x318 k149 k148 x551 x550 k143 x311 x553 k142 x310 x552 x313 k141 x555 x312 k140 x554 x315 k147 x557 x314 k146 x556 x317 x559 k145 k144 x316 x558 x308 x307 x549 x309 k139 k138 k137 x540 k132 x300 x542 k131 x541 x302 k130 x544 x301 x543 k136 x304 x546 k135 x303 x545 k134 x306 x548 x305 k133 x547 x539 x538 k129 k128 k127 k126 k121 x531 x530 k120 x533 x532 k125 x535 k124 x534 k123 x537 k122 x536 k190 k194 k193 k192 k191 x360 x120 x362 x361 x122 x364 x121 x363 x124 x366 k198 x123 x365 k197 x126 x368 k196 x125 k195 x367 x128 x127 x369 x129 k199 k183 k182 k181 k180 x591 x590 x351 x593 x350 x592 x111 x353 x595 x110 x352 x594 x113 k187 x355 x597 x112 k186 x354 x596 x115 x357 k185 x599 x114 k184 x356 x598 x117 x359 x116 x358 x119 k189 x118 k188 x109 k172 k171 k170 x580 x340 x582 x581 x100 x342 x584 x341 x583 x102 k176 x344 x586 x101 k175 x343 x585 x104 k174 x346 x588 x103 k173 x345 x587 x106 x348 x105 x347 k179 x589 x108 k178 x107 x349 k177 k161 k160 x571 x570 x331 x573 x330 x572 x333 x575 k165 x332 x574 k164 x335 x577 k163 x334 x576 k162 x337 x579 k169 k168 x336 x578 x339 k167 x338 k166)
(RULES
  f_152(x606, x607, x608, x609, x610, x611, x612, x613, x614, x615, x616, x617, x618, x619, x620, x621, x622, x623, x624) -> f_408(k62, k170, k145, k120, k63, 3 + k62, 3 + k170, 3, 1, 4, x625, x626, x627, x628, x629, x630, x631, x632, x633) :|: k170 > 0 && k62 > 0
  f_266'(k115, k118, x538, x539, x540, x541, x542, x543, x544, x545, x546, x547, x548, x549, x550, x551, x552, x553, x554) -> f_266(1 + k117, k118, x555, x556, x557, x558, x559, x560, x561, x562, x563, x564, x565, x566, x567, x568, x569, x570, x571) :|: k115 + k118 >= 0 && k115 < k118 && k115 + k118 - 2 * k117 < 2 && k115 + k118 - 2 * k117 >= 0
  f_266'(k135, k125, x179, x180, x181, x182, x183, x184, x185, x186, x187, x188, x189, x190, x191, x192, x193, x194, x195) -> f_266(1 + k116, k125, x196, x197, x198, x199, x200, x201, x202, x203, x204, x205, x206, x207, x208, x209, x210, x211, x212) :|: k135 + k125 < 0 && k135 < k125 && k135 + k125 - 2 * k116 <= 0 && k135 + k125 - 2 * k116 > -2
  f_266(k121, k119, x94, x95, x96, x97, x98, x99, x100, x101, x102, x103, x104, x105, x106, x107, x108, x109, x110) -> f_279(k121, k119, k123, k122, k124, k114, 1, k113, k97, k96, k99, k98, k102, k101, k104, k103, k144, 3, 4) :|: k121 >= k119
  f_152(x264, x265, x266, x267, x268, x269, x270, x271, x272, x273, x274, x275, x276, x277, x278, x279, x280, x281, x282) -> f_266(k132, k137, x283, x284, x285, x286, x287, x288, x289, x290, x291, x292, x293, x294, x295, x296, x297, x298, x299) :|: 0 = 0
  f_266(k187, k189, x300, x301, x302, x303, x304, x305, x306, x307, x308, x309, x310, x311, x312, x313, x314, x315, x316) -> f_266'(k187, k189, x317, x318, x319, x320, x321, x322, x323, x324, x325, x326, x327, x328, x329, x330, x331, x332, x333) :|: k187 < k189 && x24 < 0
  f_266'(k91, k92, x368, x369, x370, x371, x372, x373, x374, x375, x376, x377, x378, x379, x380, x381, x382, x383, x384) -> f_266(k91, k93, x385, x386, x387, x388, x389, x390, x391, x392, x393, x394, x395, x396, x397, x398, x399, x400, x401) :|: k91 + k92 >= 0 && k91 + k92 - 2 * k93 >= 0 && k91 + k92 - 2 * k93 < 2 && k91 < k92
  f_266'(k72, k74, x77, x78, x79, x80, x81, x82, x83, x84, x85, x86, x87, x88, x89, x90, x91, x92, x93) -> f_363(k72, k74, k76, k64, k66, k68, 0, k72 + k74, k57, k58, 1, k60, k61, k49, k51, k53, 3, 2, 4) :|: k58 > 0 && k72 < k74 && k72 + k74 < 0 && k72 + k74 - 2 * k57 <= 0 && k72 + k74 - 2 * k57 > -2
  f_152(x510, x511, x512, x513, x514, x515, x516, x517, x518, x519, x520, x521, x522, x523, x524, x525, x526, x527, x528) -> f_395(k129, k128, k131, k130, k133, 3 + k129, 3 + k128, 3, 1, 4, x529, x530, x531, x532, x533, x534, x535, x536, x537) :|: k128 > 0 && k129 > 0
  f_266'(k77, k75, x230, x231, x232, x233, x234, x235, x236, x237, x238, x239, x240, x241, x242, x243, x244, x245, x246) -> f_363(k77, k75, k80, k78, k42, k46, 0, k77 + k75, k44, k48, 1, k77, k47, k52, k50, k56, 3, 2, 4) :|: k48 < 0 && k77 < k75 && k77 + k75 >= 0 && k77 + k75 - 2 * k44 < 2 && k77 + k75 - 2 * k44 >= 0
  f_266'(k0, k2, x111, x112, x113, x114, x115, x116, x117, x118, x119, x120, x121, x122, x123, x124, x125, x126, x127) -> f_363(k0, k2, k1, k6, k4, k10, 0, k0 + k2, k8, k14, 1, k0, k12, k17, k127, k126, 3, 2, 4) :|: k14 > 0 && k0 < k2 && k0 + k2 >= 0 && k0 + k2 - 2 * k8 < 2 && k0 + k2 - 2 * k8 >= 0
  f_266'(k142, k134, x213, x214, x215, x216, x217, x218, x219, x220, x221, x222, x223, x224, x225, x226, x227, x228, x229) -> f_364(k142, k134, k136, k138, k180, k186, 0, k142 + k134, k184, 1 + k184, k190, k188, k193, k191, k195, 3, 2, 1, 4) :|: k142 < k134 && k142 + k134 < 0 && k142 + k134 - 2 * k184 <= 0 && k142 + k134 - 2 * k184 > -2
  f_152(x482, x483, x484, x485, x486, x487, x488, x489, x490, x491, x492, x493, x494, x495, x496, x497, x498, x499, x500) -> f_374(k84, k85, k139, k140, k141, 3 + k84, 3 + k85, 3, 1, 4, x501, x502, x503, x504, x505, x506, x507, x508, x509) :|: k85 > 0 && k84 > 0
  f_266'(k204, k205, x448, x449, x450, x451, x452, x453, x454, x455, x456, x457, x458, x459, x460, x461, x462, x463, x464) -> f_364(k204, k205, k199, k200, k201, k202, 0, k204 + k205, k196, 1 + k196, 1 + k196, k197, k198, k183, k185, 3, 2, 1, 4) :|: k204 < k205 && k204 + k205 >= 0 && k204 + k205 - 2 * k196 < 2 && k204 + k205 - 2 * k196 >= 0
  f_266'(k94, k95, x145, x146, x147, x148, x149, x150, x151, x152, x153, x154, x155, x156, x157, x158, x159, x160, x161) -> f_266(k94, k90, x162, x163, x164, x165, x166, x167, x168, x169, x170, x171, x172, x173, x174, x175, x176, x177, x178) :|: k94 + k95 < 0 && k94 + k95 - 2 * k90 > -2 && k94 + k95 - 2 * k90 <= 0 && k94 < k95
  f_266(k20, k143, x, x', x'', x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14) -> f_266'(k20, k143, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31) :|: k20 < k143
  f_266'(k153, k192, x128, x129, x130, x131, x132, x133, x134, x135, x136, x137, x138, x139, x140, x141, x142, x143, x144) -> f_364(k153, k192, k173, k174, k168, k171, 0, k153 + k192, k178, 1 + k178, 1 + k178, k181, k175, k176, k203, 3, 2, 1, 4) :|: k153 < k192 && k153 + k192 < 0 && k153 + k192 - 2 * k178 <= 0 && k153 + k192 - 2 * k178 > -2
  f_266'(k30, k21, x247, x248, x249, x250, x251, x252, x253, x254, x255, x256, x257, x258, x259, x260, x261, x262, x263) -> f_363(k30, k21, k18, k19, k11, k13, 0, k30 + k21, k15, k16, 1, k3, k5, k7, k9, k79, 3, 2, 4) :|: k16 < 0 && k30 < k21 && k30 + k21 >= 0 && k30 + k21 - 2 * k15 < 2 && k30 + k21 - 2 * k15 >= 0
  f_266'(k177, k179, x572, x573, x574, x575, x576, x577, x578, x579, x580, x581, x582, x583, x584, x585, x586, x587, x588) -> f_363(k177, k179, k182, k169, k172, k40, 0, k177 + k179, k32, k34, 1, k36, k38, k24, k26, k28, 3, 2, 4) :|: k34 < 0 && k177 < k179 && k177 + k179 < 0 && k177 + k179 - 2 * k32 <= 0 && k177 + k179 - 2 * k32 > -2
  f_266'(k149, k152, x402, x403, x404, x405, x406, x407, x408, x409, x410, x411, x412, x413, x414, x415, x416, x417, x418) -> f_363(k149, k152, k151, k155, k154, k156, 0, k149 + k152, k67, k65, 1, k149, k70, k69, k73, k71, 3, 2, 4) :|: k65 < 0 && k149 < k152 && k149 + k152 < 0 && k149 + k152 - 2 * k67 <= 0 && k149 + k152 - 2 * k67 > -2
  f_266'(k55, k43, x60, x61, x62, x63, x64, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74, x75, x76) -> f_363(k55, k43, k45, k41, k109, k110, 0, k55 + k43, k111, k112, 1, k105, k106, k107, k108, k100, 3, 2, 4) :|: k112 > 0 && k55 < k43 && k55 + k43 >= 0 && k55 + k43 - 2 * k111 < 2 && k55 + k43 - 2 * k111 >= 0
  f_266'(k194, k167, x589, x590, x591, x592, x593, x594, x595, x596, x597, x598, x599, x600, x601, x602, x603, x604, x605) -> f_364(k194, k167, k158, k157, k160, k159, 0, k194 + k167, k162, 1 + k162, k161, k164, k163, k166, k165, 3, 2, 1, 4) :|: k194 < k167 && k194 + k167 >= 0 && k194 + k167 - 2 * k162 < 2 && k194 + k167 - 2 * k162 >= 0
  f_152(x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49, x50) -> f_411(k86, k87, k88, k89, k83, 3 + k86, 3 + k87, 3, 1, 4, x51, x52, x53, x54, x55, x56, x57, x58, x59) :|: k87 > 0 && k86 > 0
  f_152(x419, x420, x421, x422, x423, x424, x425, x426, x427, x428, x429, x430, x431, x432, x433, x434, x435, x436, x437) -> f_283(k146, k148, k147, k150, 3 + k146, 3 + k148, 3, 1, 4, x438, x439, x440, x441, x442, x443, x444, x445, x446, x447) :|: k148 > 0 && k146 > 0
  f_266(k81, k82, x334, x335, x336, x337, x338, x339, x340, x341, x342, x343, x344, x345, x346, x347, x348, x349, x350) -> f_266'(k81, k82, x351, x352, x353, x354, x355, x356, x357, x358, x359, x360, x361, x362, x363, x364, x365, x366, x367) :|: k81 < k82 && x53 > 0
  f_266'(k54, k59, x465, x466, x467, x468, x469, x470, x471, x472, x473, x474, x475, x476, x477, x478, x479, x480, x481) -> f_363(k54, k59, k23, k22, k27, k25, 0, k54 + k59, k31, k29, 1, k54, k35, k33, k39, k37, 3, 2, 4) :|: k29 > 0 && k54 < k59 && k54 + k59 < 0 && k54 + k59 - 2 * k31 <= 0 && k54 + k59 - 2 * k31 > -2
)

----------------------------------------

(23) KoAT2 (EQUIVALENT)
KoAT2 was called with the following command:

/aprove/bin/koat2 analyse --termination --cfr=pe -d5 --local=mprf,twn -rtermcomp -i /tmp/aprove.InputModules.Programs.koat2_14929970312523138169.koat 

KoAT2's output was:

MAYBE

----------------------------------------

(24)
MAYBE

----------------------------------------

(25) SEGraph to IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 144 rulesP rules:
f_152 -> f_153(v1, v2, 3, 1, 4) :|: 1 <= v1 && v2 = 3 + v1 && 4 <= v2
f_153(v1, v2, 3, 1, 4) -> f_154(v1, v3, v2, v4, 3, 1, 4) :|: 1 <= v3 && v4 = 3 + v3 && 4 <= v4
f_154(v1, v3, v2, v4, 3, 1, 4) -> f_155(v1, v3, v2, v4, 3, 1, 4) :|: TRUE
f_155(v1, v3, v2, v4, 3, 1, 4) -> f_156(v1, v3, v5, v2, v4, 3, 1, 4) :|: TRUE
f_156(v1, v3, v5, v2, v4, 3, 1, 4) -> f_157(v1, v3, v5, v2, v4, 3, 1, 4) :|: TRUE
f_157(v1, v3, v5, v2, v4, 3, 1, 4) -> f_158(v1, v3, v5, v2, v4, 3, 1, 4) :|: TRUE
f_158(v1, v3, v5, v2, v4, 3, 1, 4) -> f_159(v1, v3, v5, v7, v2, v4, 3, 1, 4) :|: TRUE
f_159(v1, v3, v5, v7, v2, v4, 3, 1, 4) -> f_160(v1, v3, v5, v7, v2, v4, 3, 1, 4) :|: TRUE
f_160(v1, v3, v5, v7, v2, v4, 3, 1, 4) -> f_161(v1, v3, v5, v7, v2, v4, 3, 1, 4) :|: 0 = 0
f_161(v1, v3, v5, v7, v2, v4, 3, 1, 4) -> f_162(v1, v3, v5, v7, v2, v4, 3, 1, 4) :|: 0 = 0
f_162(v1, v3, v5, v7, v2, v4, 3, 1, 4) -> f_163(v5, v7, v1, v2, v3, v4, 3, 1, 4) :|: 0 = 0
f_163(v5, v7, v1, v2, v3, v4, 3, 1, 4) -> f_164(v5, v7, v1, v2, v3, v4, 3, 1, 4) :|: TRUE
f_163(v5, v7, v1, v2, v3, v4, 3, 1, 4) -> f_281(v5, v7, v1, v2, v3, v4, 3, 1, 4) :|: TRUE
f_163(v5, v7, v1, v2, v3, v4, 3, 1, 4) -> f_368(v5, v7, v964, v1, v2, v3, v4, 3, 1, 4) :|: TRUE
f_163(v5, v7, v1, v2, v3, v4, 3, 1, 4) -> f_389(v5, v7, v1255, v1, v2, v3, v4, 3, 1, 4) :|: TRUE
f_163(v5, v7, v1, v2, v3, v4, 3, 1, 4) -> f_392(v5, v7, v964, v1, v2, v3, v4, 3, 1, 4) :|: TRUE
f_163(v5, v7, v1, v2, v3, v4, 3, 1, 4) -> f_402(v5, v7, v1413, v1, v2, v3, v4, 3, 1, 4) :|: TRUE
f_163(v5, v7, v1, v2, v3, v4, 3, 1, 4) -> f_405(v5, v7, v1455, v1, v2, v3, v4, 3, 1, 4) :|: TRUE
f_163(v5, v7, v1, v2, v3, v4, 3, 1, 4) -> f_422(v5, v7, v1413, v1, v2, v3, v4, 3, 1, 4) :|: TRUE
f_163(v5, v7, v1, v2, v3, v4, 3, 1, 4) -> f_425(v5, v7, v1455, v1, v2, v3, v4, 3, 1, 4) :|: TRUE
f_164(v5, v7, v1, v2, v3, v4, 3, 1, 4) -> f_208(v5, v7, v1, v2, v3, v4, v7, 3, 1, 4) :|: TRUE
f_208(v39, v40, v41, v42, v43, v44, v45, 3, 1, 4) -> f_255(v39, v40, v41, v42, v43, v44, v39, v45, 3, 1, 4) :|: TRUE
f_255(v99, v100, v101, v102, v103, v104, v105, v106, 3, 1, 4) -> f_257(v99, v100, v107, v101, v102, v103, v104, v108, v105, v106, 3, 1, 4) :|: 1 <= v107 && v108 = 3 + v107 && 4 <= v108
f_257(v99, v100, v107, v101, v102, v103, v104, v108, v105, v106, 3, 1, 4) -> f_258(v99, v100, v107, v109, v101, v102, v103, v104, v108, v110, v105, v106, 3, 1, 4) :|: 1 <= v109 && v110 = 3 + v109 && 4 <= v110
f_258(v99, v100, v107, v109, v101, v102, v103, v104, v108, v110, v105, v106, 3, 1, 4) -> f_259(v99, v100, v107, v109, v111, v101, v102, v103, v104, v108, v110, v112, v105, v106, 3, 1, 4) :|: 1 <= v111 && v112 = 3 + v111 && 4 <= v112
f_259(v99, v100, v107, v109, v111, v101, v102, v103, v104, v108, v110, v112, v105, v106, 3, 1, 4) -> f_260(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: 1 <= v113 && v114 = 3 + v113 && 4 <= v114
f_260(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_261(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: TRUE
f_261(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_262(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: TRUE
f_262(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_263(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: TRUE
f_263(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_264(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: TRUE
f_264(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_265(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: 0 = 0
f_265(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_266(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: 0 = 0
f_266(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_267(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: v100 <= v99
f_266(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_268(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: v99 < v100
f_267(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_269(v99, v100, v107, v109, v111, v113, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 4) :|: 0 = 0
f_268(v99, v100, v107, v109, v111, v113, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_270(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: 0 = 0
f_269(v99, v100, v107, v109, v111, v113, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 4) -> f_271(v99, v100, v107, v109, v111, v113, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 4) :|: TRUE
f_270(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_272(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: TRUE
f_271(v99, v100, v107, v109, v111, v113, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 4) -> f_273(v99, v100, v107, v109, v111, v113, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 4) :|: 0 = 0
f_272(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_274(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: TRUE
f_273(v99, v100, v107, v109, v111, v113, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 4) -> f_275(v99, v100, v107, v109, v111, v113, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 4) :|: TRUE
f_274(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_276(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: 0 = 0
f_275(v99, v100, v107, v109, v111, v113, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 4) -> f_277(v99, v100, v107, v109, v111, v113, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 4) :|: TRUE
f_276(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_278(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: 0 = 0
f_277(v99, v100, v107, v109, v111, v113, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 4) -> f_279(v99, v100, v107, v109, v111, v113, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 4) :|: 0 = 0
f_278(v99, v100, v107, v109, v111, v113, 0, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_280(v99, v100, v107, v109, v111, v113, 0, v118, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) :|: v118 = v99 + v100
f_280(v99, v100, v107, v109, v111, v113, 0, v118, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 1, 4) -> f_282(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: v135 = v118 / 2
f_281(v5, v7, v1, v2, v3, v4, 3, 1, 4) -> f_283(v1, v3, v5, v7, v2, v4, 3, 1, 4) :|: 0 = 0
f_282(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_284(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: TRUE
f_284(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_285(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: TRUE
f_285(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_286(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: v137 != 0
f_285(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_287(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: v137 = 0
f_286(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_288(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: 0 = 0
f_287(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_289(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: 0 = 0
f_288(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_290(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: TRUE
f_289(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_291(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: TRUE
f_290(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_292(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: 0 = 0
f_291(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_293(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: 0 = 0
f_292(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_294(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: 0 = 0
f_293(v99, v100, v107, v109, v111, v113, 0, v118, v135, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_295(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: v138 = 1 + v135
f_294(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_296(v99, v135, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) :|: 0 = 0
f_295(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_297(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: 0 = 0
f_296(v99, v135, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) -> f_298(v99, v135, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 3, 1, 4) :|: TRUE
f_296(v99, v135, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) -> f_301(v99, v135, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) :|: TRUE
f_296(v99, v135, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) -> f_369(v99, v135, v978, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) :|: TRUE
f_296(v99, v135, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) -> f_390(v99, v135, v1269, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) :|: TRUE
f_296(v99, v135, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) -> f_393(v99, v135, v978, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) :|: TRUE
f_296(v99, v135, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) -> f_403(v99, v135, v1427, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) :|: TRUE
f_296(v99, v135, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) -> f_406(v99, v135, v1469, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) :|: TRUE
f_296(v99, v135, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) -> f_423(v99, v135, v1427, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) :|: TRUE
f_296(v99, v135, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) -> f_426(v99, v135, v1469, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) :|: TRUE
f_297(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_299(v138, v100, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) :|: 0 = 0
f_298(v99, v135, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 3, 1, 4) -> f_255(v99, v135, v101, v102, v103, v104, v105, v106, 3, 1, 4) :|: TRUE
f_299(v138, v100, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) -> f_300(v138, v100, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 3, 1, 4) :|: TRUE
f_299(v138, v100, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) -> f_303(v138, v100, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) :|: TRUE
f_299(v138, v100, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) -> f_370(v138, v100, v992, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) :|: TRUE
f_299(v138, v100, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) -> f_391(v138, v100, v1283, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) :|: TRUE
f_299(v138, v100, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) -> f_394(v138, v100, v992, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) :|: TRUE
f_299(v138, v100, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) -> f_404(v138, v100, v1441, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) :|: TRUE
f_299(v138, v100, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) -> f_407(v138, v100, v1483, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) :|: TRUE
f_299(v138, v100, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) -> f_424(v138, v100, v1441, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) :|: TRUE
f_299(v138, v100, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) -> f_427(v138, v100, v1483, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) :|: TRUE
f_300(v138, v100, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 3, 1, 4) -> f_255(v138, v100, v101, v102, v103, v104, v105, v106, 3, 1, 4) :|: TRUE
f_301(v99, v135, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) -> f_302(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: 0 = 0
f_302(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_304(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: TRUE
f_303(v138, v100, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) -> f_305(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: 0 = 0
f_304(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_306(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: TRUE
f_305(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_307(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: TRUE
f_306(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_308(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: 0 = 0
f_307(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_309(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: TRUE
f_308(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_333(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v108, v110, v112, v114, v101, v102, v103, v104, v105, v106, 3, 2, 4) :|: TRUE
f_309(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_313(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: 0 = 0
f_313(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_334(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v108, v110, v112, v114, v101, v102, v103, v104, v105, v106, 3, 2, 1, 4) :|: TRUE
f_333(v511, v512, v513, v514, v515, v516, 0, v518, v519, v520, 1, v522, v523, v524, v525, v526, v527, v528, v529, v530, v531, 3, 2, 4) -> f_361(v511, v512, v513, v514, v515, v516, 0, v518, v519, v520, 1, v522, v523, v524, v525, 3, 2, 4) :|: TRUE
f_334(v532, v533, v534, v535, v536, v537, 0, v539, v540, v541, v542, v543, v544, v545, v546, v547, v548, v549, v550, v551, 3, 2, 1, 4) -> f_362(v532, v533, v534, v535, v536, v537, 0, v539, v540, v541, v542, v543, v544, v545, 3, 2, 1, 4) :|: TRUE
f_361(v853, v854, v855, v856, v857, v858, 0, v860, v861, v862, 1, v864, v865, v866, v867, 3, 2, 4) -> f_363(v853, v854, v855, v856, v857, v858, 0, v860, v861, v862, 1, v853, v864, v865, v866, v867, 3, 2, 4) :|: TRUE
f_362(v868, v869, v870, v871, v872, v873, 0, v875, v876, v877, v878, v879, v880, v881, 3, 2, 1, 4) -> f_364(v868, v869, v870, v871, v872, v873, 0, v875, v876, v877, v877, v878, v879, v880, v881, 3, 2, 1, 4) :|: TRUE
f_368(v5, v7, v964, v1, v2, v3, v4, 3, 1, 4) -> f_374(v1, v3, v5, v7, v964, v2, v4, 3, 1, 4) :|: 0 = 0
f_369(v99, v135, v978, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) -> f_375(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v978, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: 0 = 0
f_370(v138, v100, v992, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) -> f_376(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v992, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: 0 = 0
f_375(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v978, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_379(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v978, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: TRUE
f_376(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v992, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_380(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v992, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: TRUE
f_379(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v978, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_383(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v978, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: TRUE
f_380(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v992, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_384(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v992, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: TRUE
f_383(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v978, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_387(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v978, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: 0 = 0
f_384(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v992, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_388(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v992, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: 0 = 0
f_387(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v978, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_363(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v978, v108, v110, v112, v114, 3, 2, 4) :|: TRUE
f_388(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v992, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_364(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v992, v108, v110, v112, v114, 3, 2, 1, 4) :|: TRUE
f_389(v5, v7, v1255, v1, v2, v3, v4, 3, 1, 4) -> f_395(v1, v3, v5, v7, v1255, v2, v4, 3, 1, 4) :|: 0 = 0
f_390(v99, v135, v1269, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) -> f_396(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1269, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: 0 = 0
f_391(v138, v100, v1283, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) -> f_397(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1283, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: 0 = 0
f_392(v5, v7, v964, v1, v2, v3, v4, 3, 1, 4) -> f_368(v5, v7, v964, v1, v2, v3, v4, 3, 1, 4) :|: TRUE
f_393(v99, v135, v978, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) -> f_369(v99, v135, v978, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) :|: TRUE
f_394(v138, v100, v992, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) -> f_370(v138, v100, v992, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) :|: TRUE
f_396(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1269, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_398(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1269, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: TRUE
f_397(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1283, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_399(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1283, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: TRUE
f_398(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1269, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_400(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1269, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: TRUE
f_399(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1283, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_401(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1283, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: TRUE
f_400(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1269, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_383(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1269, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: TRUE
f_401(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1283, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_384(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1283, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: TRUE
f_402(v5, v7, v1413, v1, v2, v3, v4, 3, 1, 4) -> f_408(v1, v3, v5, v7, v1413, v2, v4, 3, 1, 4) :|: 0 = 0
f_403(v99, v135, v1427, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) -> f_409(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1427, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: 0 = 0
f_404(v138, v100, v1441, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) -> f_410(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1441, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: 0 = 0
f_405(v5, v7, v1455, v1, v2, v3, v4, 3, 1, 4) -> f_411(v1, v3, v5, v7, v1455, v2, v4, 3, 1, 4) :|: 0 = 0
f_406(v99, v135, v1469, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) -> f_412(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1469, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: 0 = 0
f_407(v138, v100, v1483, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) -> f_413(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1483, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: 0 = 0
f_409(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1427, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_414(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1427, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: TRUE
f_410(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1441, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_415(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1441, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: TRUE
f_412(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1469, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_416(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1469, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: TRUE
f_413(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1483, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_417(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1483, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: TRUE
f_414(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1427, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_418(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1427, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: TRUE
f_415(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1441, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_419(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1441, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: TRUE
f_416(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1469, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_420(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1469, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: TRUE
f_417(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1483, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_421(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1483, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: TRUE
f_418(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1427, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_383(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1427, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: TRUE
f_419(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1441, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_384(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1441, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: TRUE
f_420(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1469, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) -> f_383(v99, v100, v107, v109, v111, v113, 0, v118, v135, v137, 1, v1469, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 4) :|: TRUE
f_421(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1483, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) -> f_384(v99, v100, v107, v109, v111, v113, 0, v118, v135, v138, v1483, v101, v102, v103, v104, v108, v110, v112, v114, v105, v106, 3, 2, 1, 4) :|: TRUE
f_422(v5, v7, v1413, v1, v2, v3, v4, 3, 1, 4) -> f_402(v5, v7, v1413, v1, v2, v3, v4, 3, 1, 4) :|: TRUE
f_423(v99, v135, v1427, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) -> f_403(v99, v135, v1427, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) :|: TRUE
f_424(v138, v100, v1441, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) -> f_404(v138, v100, v1441, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) :|: TRUE
f_425(v5, v7, v1455, v1, v2, v3, v4, 3, 1, 4) -> f_405(v5, v7, v1455, v1, v2, v3, v4, 3, 1, 4) :|: TRUE
f_426(v99, v135, v1469, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) -> f_406(v99, v135, v1469, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v100, 0, v118, v137, 1, 3, 2, 4) :|: TRUE
f_427(v138, v100, v1483, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) -> f_407(v138, v100, v1483, v101, v102, v103, v104, v107, v108, v109, v110, v111, v112, v113, v114, v105, v106, v99, v135, 0, v118, 3, 2, 1, 4) :|: TRUE
Combined rules. Obtained 16 rulesP rules:
f_152 -> f_408(v1:0, v3:0, v5:0, v7:0, v1413:0, 3 + v1:0, 3 + v3:0, 3, 1, 4) :|: v3:0 > 0 && v1:0 > 0
f_266(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, v101:0, v102:0, v103:0, v104:0, v108:0, v110:0, v112:0, v114:0, v105:0, v106:0, 3, 1, 4) -> f_364(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 0, v99:0 + v100:0, v135:0, 1 + v135:0, 1 + v135:0, v108:0, v110:0, v112:0, v114:0, 3, 2, 1, 4) :|: (v99:0 + v100:0) / 2 = v135:0 && v99:0 < v100:0
f_266(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, v101:0, v102:0, v103:0, v104:0, v108:0, v110:0, v112:0, v114:0, v105:0, v106:0, 3, 1, 4) -> f_363(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 0, v99:0 + v100:0, v135:0, v137:0, 1, v978:0, v108:0, v110:0, v112:0, v114:0, 3, 2, 4) :|: v99:0 < v100:0 && v137:0 < 0 && (v99:0 + v100:0) / 2 = v135:0
f_266(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, v101:0, v102:0, v103:0, v104:0, v108:0, v110:0, v112:0, v114:0, v105:0, v106:0, 3, 1, 4) -> f_363(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 0, v99:0 + v100:0, v135:0, v137:0, 1, v978:0, v108:0, v110:0, v112:0, v114:0, 3, 2, 4) :|: v99:0 < v100:0 && v137:0 > 0 && (v99:0 + v100:0) / 2 = v135:0
f_266(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, v101:0, v102:0, v103:0, v104:0, v108:0, v110:0, v112:0, v114:0, v105:0, v106:0, 3, 1, 4) -> f_266(v99:0, v135:0, v107:1, v109:1, v111:1, v113:1, v101:0, v102:0, v103:0, v104:0, 3 + v107:1, 3 + v109:1, 3 + v111:1, 3 + v113:1, v105:0, v106:0, 3, 1, 4) :|: v99:0 < v100:0 && v107:1 > 0 && v109:1 > 0 && v111:1 > 0 && (v99:0 + v100:0) / 2 = v135:0 && v113:1 > 0 && v137:0 < 0
f_266(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, v101:0, v102:0, v103:0, v104:0, v108:0, v110:0, v112:0, v114:0, v105:0, v106:0, 3, 1, 4) -> f_266(v99:0, v135:0, v107:1, v109:1, v111:1, v113:1, v101:0, v102:0, v103:0, v104:0, 3 + v107:1, 3 + v109:1, 3 + v111:1, 3 + v113:1, v105:0, v106:0, 3, 1, 4) :|: v99:0 < v100:0 && v107:1 > 0 && v109:1 > 0 && v111:1 > 0 && (v99:0 + v100:0) / 2 = v135:0 && v113:1 > 0 && v137:0 > 0
f_152 -> f_411(v1:0, v3:0, v5:0, v7:0, v1455:0, 3 + v1:0, 3 + v3:0, 3, 1, 4) :|: v3:0 > 0 && v1:0 > 0
f_152 -> f_374(v1:0, v3:0, v5:0, v7:0, v964:0, 3 + v1:0, 3 + v3:0, 3, 1, 4) :|: v3:0 > 0 && v1:0 > 0
f_266(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, v101:0, v102:0, v103:0, v104:0, v108:0, v110:0, v112:0, v114:0, v105:0, v106:0, 3, 1, 4) -> f_364(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 0, v99:0 + v100:0, v135:0, 1 + v135:0, v992:0, v108:0, v110:0, v112:0, v114:0, 3, 2, 1, 4) :|: (v99:0 + v100:0) / 2 = v135:0 && v99:0 < v100:0
f_152 -> f_283(v1:0, v3:0, v5:0, v7:0, 3 + v1:0, 3 + v3:0, 3, 1, 4) :|: v3:0 > 0 && v1:0 > 0
f_266(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, v101:0, v102:0, v103:0, v104:0, v108:0, v110:0, v112:0, v114:0, v105:0, v106:0, 3, 1, 4) -> f_363(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 0, v99:0 + v100:0, v135:0, v137:0, 1, v99:0, v108:0, v110:0, v112:0, v114:0, 3, 2, 4) :|: v99:0 < v100:0 && v137:0 < 0 && (v99:0 + v100:0) / 2 = v135:0
f_266(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, v101:0, v102:0, v103:0, v104:0, v108:0, v110:0, v112:0, v114:0, v105:0, v106:0, 3, 1, 4) -> f_363(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 0, v99:0 + v100:0, v135:0, v137:0, 1, v99:0, v108:0, v110:0, v112:0, v114:0, 3, 2, 4) :|: v99:0 < v100:0 && v137:0 > 0 && (v99:0 + v100:0) / 2 = v135:0
f_152 -> f_395(v1:0, v3:0, v5:0, v7:0, v1255:0, 3 + v1:0, 3 + v3:0, 3, 1, 4) :|: v3:0 > 0 && v1:0 > 0
f_152 -> f_266(v5:0, v7:0, v107:0, v109:0, v111:0, v113:0, v1:0, 3 + v1:0, v3:0, 3 + v3:0, 3 + v107:0, 3 + v109:0, 3 + v111:0, 3 + v113:0, v5:0, v7:0, 3, 1, 4) :|: v3:0 > 0 && v1:0 > 0 && v107:0 > 0 && v109:0 > 0 && v111:0 > 0 && v113:0 > 0
f_266(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, v101:0, v102:0, v103:0, v104:0, v108:0, v110:0, v112:0, v114:0, v105:0, v106:0, 3, 1, 4) -> f_266(1 + v135:0, v100:0, v107:1, v109:1, v111:1, v113:1, v101:0, v102:0, v103:0, v104:0, 3 + v107:1, 3 + v109:1, 3 + v111:1, 3 + v113:1, v105:0, v106:0, 3, 1, 4) :|: v99:0 < v100:0 && v107:1 > 0 && v109:1 > 0 && (v99:0 + v100:0) / 2 = v135:0 && v111:1 > 0 && v113:1 > 0
f_266(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, v101:0, v102:0, v103:0, v104:0, v108:0, v110:0, v112:0, v114:0, v105:0, v106:0, 3, 1, 4) -> f_279(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 1, v101:0, v102:0, v103:0, v104:0, v108:0, v110:0, v112:0, v114:0, v105:0, v106:0, 3, 4) :|: v99:0 >= v100:0
Filtered unneeded arguments:
   f_266(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19) -> f_266(x1, x2)
Removed division, modulo operations, cleaned up constraints. Obtained 26 rules.P rules:
f_152 -> f_408(v1:0, v3:0, v5:0, v7:0, v1413:0, 3 + v1:0, 3 + v3:0, 3, 1, 4) :|: v3:0 > 0 && v1:0 > 0
f_266(v99:0, v100:0) -> f_266'(v99:0, v100:0) :|: v99:0 < v100:0
f_266'(v99:0, v100:0) -> f_364(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 0, v99:0 + v100:0, div, 1 + div, 1 + div, v108:0, v110:0, v112:0, v114:0, 3, 2, 1, 4) :|: v99:0 < v100:0 && v99:0 + v100:0 < 0 && v99:0 + v100:0 - 2 * div <= 0 && v99:0 + v100:0 - 2 * div > -2
f_266'(v99:0, v100:0) -> f_364(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 0, v99:0 + v100:0, div, 1 + div, 1 + div, v108:0, v110:0, v112:0, v114:0, 3, 2, 1, 4) :|: v99:0 < v100:0 && v99:0 + v100:0 >= 0 && v99:0 + v100:0 - 2 * div < 2 && v99:0 + v100:0 - 2 * div >= 0
f_266(v99:0, v100:0) -> f_266'(v99:0, v100:0) :|: v99:0 < v100:0 && v137:0 < 0
f_266'(v99:0, v100:0) -> f_363(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 0, v99:0 + v100:0, div, v137:0, 1, v978:0, v108:0, v110:0, v112:0, v114:0, 3, 2, 4) :|: v137:0 < 0 && v99:0 < v100:0 && v99:0 + v100:0 < 0 && v99:0 + v100:0 - 2 * div <= 0 && v99:0 + v100:0 - 2 * div > -2
f_266'(v99:0, v100:0) -> f_363(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 0, v99:0 + v100:0, div, v137:0, 1, v978:0, v108:0, v110:0, v112:0, v114:0, 3, 2, 4) :|: v137:0 < 0 && v99:0 < v100:0 && v99:0 + v100:0 >= 0 && v99:0 + v100:0 - 2 * div < 2 && v99:0 + v100:0 - 2 * div >= 0
f_266(v99:0, v100:0) -> f_266'(v99:0, v100:0) :|: v99:0 < v100:0 && v137:0 > 0
f_266'(v99:0, v100:0) -> f_363(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 0, v99:0 + v100:0, div, v137:0, 1, v978:0, v108:0, v110:0, v112:0, v114:0, 3, 2, 4) :|: v137:0 > 0 && v99:0 < v100:0 && v99:0 + v100:0 < 0 && v99:0 + v100:0 - 2 * div <= 0 && v99:0 + v100:0 - 2 * div > -2
f_266'(v99:0, v100:0) -> f_363(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 0, v99:0 + v100:0, div, v137:0, 1, v978:0, v108:0, v110:0, v112:0, v114:0, 3, 2, 4) :|: v137:0 > 0 && v99:0 < v100:0 && v99:0 + v100:0 >= 0 && v99:0 + v100:0 - 2 * div < 2 && v99:0 + v100:0 - 2 * div >= 0
f_266'(v99:0, v100:0) -> f_266(v99:0, div) :|: v99:0 + v100:0 < 0 && v99:0 + v100:0 - 2 * div > -2 && v99:0 + v100:0 - 2 * div <= 0 && v99:0 < v100:0
f_266'(v99:0, v100:0) -> f_266(v99:0, div) :|: v99:0 + v100:0 >= 0 && v99:0 + v100:0 - 2 * div >= 0 && v99:0 + v100:0 - 2 * div < 2 && v99:0 < v100:0
f_152 -> f_411(v1:0, v3:0, v5:0, v7:0, v1455:0, 3 + v1:0, 3 + v3:0, 3, 1, 4) :|: v3:0 > 0 && v1:0 > 0
f_152 -> f_374(v1:0, v3:0, v5:0, v7:0, v964:0, 3 + v1:0, 3 + v3:0, 3, 1, 4) :|: v3:0 > 0 && v1:0 > 0
f_266'(v99:0, v100:0) -> f_364(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 0, v99:0 + v100:0, div, 1 + div, v992:0, v108:0, v110:0, v112:0, v114:0, 3, 2, 1, 4) :|: v99:0 < v100:0 && v99:0 + v100:0 < 0 && v99:0 + v100:0 - 2 * div <= 0 && v99:0 + v100:0 - 2 * div > -2
f_266'(v99:0, v100:0) -> f_364(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 0, v99:0 + v100:0, div, 1 + div, v992:0, v108:0, v110:0, v112:0, v114:0, 3, 2, 1, 4) :|: v99:0 < v100:0 && v99:0 + v100:0 >= 0 && v99:0 + v100:0 - 2 * div < 2 && v99:0 + v100:0 - 2 * div >= 0
f_152 -> f_283(v1:0, v3:0, v5:0, v7:0, 3 + v1:0, 3 + v3:0, 3, 1, 4) :|: v3:0 > 0 && v1:0 > 0
f_266'(v99:0, v100:0) -> f_363(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 0, v99:0 + v100:0, div, v137:0, 1, v99:0, v108:0, v110:0, v112:0, v114:0, 3, 2, 4) :|: v137:0 < 0 && v99:0 < v100:0 && v99:0 + v100:0 < 0 && v99:0 + v100:0 - 2 * div <= 0 && v99:0 + v100:0 - 2 * div > -2
f_266'(v99:0, v100:0) -> f_363(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 0, v99:0 + v100:0, div, v137:0, 1, v99:0, v108:0, v110:0, v112:0, v114:0, 3, 2, 4) :|: v137:0 < 0 && v99:0 < v100:0 && v99:0 + v100:0 >= 0 && v99:0 + v100:0 - 2 * div < 2 && v99:0 + v100:0 - 2 * div >= 0
f_266'(v99:0, v100:0) -> f_363(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 0, v99:0 + v100:0, div, v137:0, 1, v99:0, v108:0, v110:0, v112:0, v114:0, 3, 2, 4) :|: v137:0 > 0 && v99:0 < v100:0 && v99:0 + v100:0 < 0 && v99:0 + v100:0 - 2 * div <= 0 && v99:0 + v100:0 - 2 * div > -2
f_266'(v99:0, v100:0) -> f_363(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 0, v99:0 + v100:0, div, v137:0, 1, v99:0, v108:0, v110:0, v112:0, v114:0, 3, 2, 4) :|: v137:0 > 0 && v99:0 < v100:0 && v99:0 + v100:0 >= 0 && v99:0 + v100:0 - 2 * div < 2 && v99:0 + v100:0 - 2 * div >= 0
f_152 -> f_395(v1:0, v3:0, v5:0, v7:0, v1255:0, 3 + v1:0, 3 + v3:0, 3, 1, 4) :|: v3:0 > 0 && v1:0 > 0
f_152 -> f_266(v5:0, v7:0) :|: TRUE
f_266'(v99:0, v100:0) -> f_266(1 + div, v100:0) :|: v99:0 + v100:0 < 0 && v99:0 < v100:0 && v99:0 + v100:0 - 2 * div <= 0 && v99:0 + v100:0 - 2 * div > -2
f_266'(v99:0, v100:0) -> f_266(1 + div, v100:0) :|: v99:0 + v100:0 >= 0 && v99:0 < v100:0 && v99:0 + v100:0 - 2 * div < 2 && v99:0 + v100:0 - 2 * div >= 0
f_266(v99:0, v100:0) -> f_279(v99:0, v100:0, v107:0, v109:0, v111:0, v113:0, 1, v101:0, v102:0, v103:0, v104:0, v108:0, v110:0, v112:0, v114:0, v105:0, v106:0, 3, 4) :|: v99:0 >= v100:0

----------------------------------------

(26)
Obligation:
Rules:
f_152 -> f_408(v1:0, v3:0, v5:0, v7:0, v1413:0, 3 + v1:0, 3 + v3:0, 3, 1, 4) :|: v3:0 > 0 && v1:0 > 0
f_266(v99:0, v100:0) -> f_266'(v99:0, v100:0) :|: v99:0 < v100:0
f_266'(x, x1) -> f_364(x, x1, x2, x3, x4, x5, 0, x + x1, x6, 1 + x6, 1 + x6, x7, x8, x9, x10, 3, 2, 1, 4) :|: x < x1 && x + x1 < 0 && x + x1 - 2 * x6 <= 0 && x + x1 - 2 * x6 > -2
f_266'(x11, x12) -> f_364(x11, x12, x13, x14, x15, x16, 0, x11 + x12, x17, 1 + x17, 1 + x17, x18, x19, x20, x21, 3, 2, 1, 4) :|: x11 < x12 && x11 + x12 >= 0 && x11 + x12 - 2 * x17 < 2 && x11 + x12 - 2 * x17 >= 0
f_266(x22, x23) -> f_266'(x22, x23) :|: x22 < x23 && x24 < 0
f_266'(x25, x26) -> f_363(x25, x26, x27, x28, x29, x30, 0, x25 + x26, x31, x32, 1, x33, x34, x35, x36, x37, 3, 2, 4) :|: x32 < 0 && x25 < x26 && x25 + x26 < 0 && x25 + x26 - 2 * x31 <= 0 && x25 + x26 - 2 * x31 > -2
f_266'(x38, x39) -> f_363(x38, x39, x40, x41, x42, x43, 0, x38 + x39, x44, x45, 1, x46, x47, x48, x49, x50, 3, 2, 4) :|: x45 < 0 && x38 < x39 && x38 + x39 >= 0 && x38 + x39 - 2 * x44 < 2 && x38 + x39 - 2 * x44 >= 0
f_266(x51, x52) -> f_266'(x51, x52) :|: x51 < x52 && x53 > 0
f_266'(x54, x55) -> f_363(x54, x55, x56, x57, x58, x59, 0, x54 + x55, x60, x61, 1, x62, x63, x64, x65, x66, 3, 2, 4) :|: x61 > 0 && x54 < x55 && x54 + x55 < 0 && x54 + x55 - 2 * x60 <= 0 && x54 + x55 - 2 * x60 > -2
f_266'(x67, x68) -> f_363(x67, x68, x69, x70, x71, x72, 0, x67 + x68, x73, x74, 1, x75, x76, x77, x78, x79, 3, 2, 4) :|: x74 > 0 && x67 < x68 && x67 + x68 >= 0 && x67 + x68 - 2 * x73 < 2 && x67 + x68 - 2 * x73 >= 0
f_266'(x80, x81) -> f_266(x80, x82) :|: x80 + x81 < 0 && x80 + x81 - 2 * x82 > -2 && x80 + x81 - 2 * x82 <= 0 && x80 < x81
f_266'(x83, x84) -> f_266(x83, x85) :|: x83 + x84 >= 0 && x83 + x84 - 2 * x85 >= 0 && x83 + x84 - 2 * x85 < 2 && x83 < x84
f_152 -> f_411(x86, x87, x88, x89, x90, 3 + x86, 3 + x87, 3, 1, 4) :|: x87 > 0 && x86 > 0
f_152 -> f_374(x91, x92, x93, x94, x95, 3 + x91, 3 + x92, 3, 1, 4) :|: x92 > 0 && x91 > 0
f_266'(x96, x97) -> f_364(x96, x97, x98, x99, x100, x101, 0, x96 + x97, x102, 1 + x102, x103, x104, x105, x106, x107, 3, 2, 1, 4) :|: x96 < x97 && x96 + x97 < 0 && x96 + x97 - 2 * x102 <= 0 && x96 + x97 - 2 * x102 > -2
f_266'(x108, x109) -> f_364(x108, x109, x110, x111, x112, x113, 0, x108 + x109, x114, 1 + x114, x115, x116, x117, x118, x119, 3, 2, 1, 4) :|: x108 < x109 && x108 + x109 >= 0 && x108 + x109 - 2 * x114 < 2 && x108 + x109 - 2 * x114 >= 0
f_152 -> f_283(x120, x121, x122, x123, 3 + x120, 3 + x121, 3, 1, 4) :|: x121 > 0 && x120 > 0
f_266'(x124, x125) -> f_363(x124, x125, x126, x127, x128, x129, 0, x124 + x125, x130, x131, 1, x124, x132, x133, x134, x135, 3, 2, 4) :|: x131 < 0 && x124 < x125 && x124 + x125 < 0 && x124 + x125 - 2 * x130 <= 0 && x124 + x125 - 2 * x130 > -2
f_266'(x136, x137) -> f_363(x136, x137, x138, x139, x140, x141, 0, x136 + x137, x142, x143, 1, x136, x144, x145, x146, x147, 3, 2, 4) :|: x143 < 0 && x136 < x137 && x136 + x137 >= 0 && x136 + x137 - 2 * x142 < 2 && x136 + x137 - 2 * x142 >= 0
f_266'(x148, x149) -> f_363(x148, x149, x150, x151, x152, x153, 0, x148 + x149, x154, x155, 1, x148, x156, x157, x158, x159, 3, 2, 4) :|: x155 > 0 && x148 < x149 && x148 + x149 < 0 && x148 + x149 - 2 * x154 <= 0 && x148 + x149 - 2 * x154 > -2
f_266'(x160, x161) -> f_363(x160, x161, x162, x163, x164, x165, 0, x160 + x161, x166, x167, 1, x160, x168, x169, x170, x171, 3, 2, 4) :|: x167 > 0 && x160 < x161 && x160 + x161 >= 0 && x160 + x161 - 2 * x166 < 2 && x160 + x161 - 2 * x166 >= 0
f_152 -> f_395(x172, x173, x174, x175, x176, 3 + x172, 3 + x173, 3, 1, 4) :|: x173 > 0 && x172 > 0
f_152 -> f_266(x177, x178) :|: TRUE
f_266'(x179, x180) -> f_266(1 + x181, x180) :|: x179 + x180 < 0 && x179 < x180 && x179 + x180 - 2 * x181 <= 0 && x179 + x180 - 2 * x181 > -2
f_266'(x182, x183) -> f_266(1 + x184, x183) :|: x182 + x183 >= 0 && x182 < x183 && x182 + x183 - 2 * x184 < 2 && x182 + x183 - 2 * x184 >= 0
f_266(x185, x186) -> f_279(x185, x186, x187, x188, x189, x190, 1, x191, x192, x193, x194, x195, x196, x197, x198, x199, x200, 3, 4) :|: x185 >= x186
Start term: f_152

----------------------------------------

(27) IRSNoOverapproximation (EQUIVALENT)
Proof of non-termination is aborted since the IRSProblem over-approximates
----------------------------------------

(28)
MAYBE
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.001s
