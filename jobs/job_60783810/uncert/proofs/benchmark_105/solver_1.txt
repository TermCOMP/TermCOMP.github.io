MAYBE
proof of /hpcwork/ff862203/termcomp25/benchmarks/9pQO4.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could not be shown:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 36 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 17.9 s]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) LLVM Symbolic Execution SCC
        (8) SCC2IRS [SOUND, 46 ms]
        (9) IntTRS
            (10) IntTRSPeriodicNontermProof [COMPLETE, 1 ms]
            (11) NO
        (12) SCC2IRS [SOUND, 38 ms]
        (13) IntTRS
    (14) LLVM Symbolic Execution SCC
        (15) SCC2IRS [SOUND, 34 ms]
        (16) IntTRS
            (17) IntTRSPeriodicNontermProof [COMPLETE, 2 ms]
            (18) NO
        (19) SCC2IRS [SOUND, 57 ms]
        (20) IntTRS
            (21) IntTRSCompressionProof [EQUIVALENT, 0 ms]
            (22) IntTRS
    (23) LLVM Symbolic Execution SCC
        (24) SCC2IRS [SOUND, 27 ms]
        (25) IntTRS
            (26) IntTRSPeriodicNontermProof [COMPLETE, 1 ms]
            (27) NO
        (28) SCC2IRS [SOUND, 54 ms]
        (29) IntTRS
            (30) IntTRSCompressionProof [EQUIVALENT, 0 ms]
            (31) IntTRS
            (32) IntTRSPeriodicNontermProof [COMPLETE, 10 ms]
            (33) NO
    (34) LLVM Symbolic Execution SCC
        (35) SCC2IRS [SOUND, 46 ms]
        (36) IntTRS
        (37) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (38) IntTRS
        (39) RankingReductionPairProof [EQUIVALENT, 2 ms]
        (40) YES
    (41) LLVM Symbolic Execution SCC
        (42) SCC2IRS [SOUND, 23 ms]
        (43) IntTRS
            (44) IntTRSNonPeriodicNontermProof [COMPLETE, 4 ms]
            (45) NO
        (46) SCC2IRS [SOUND, 0 ms]
        (47) IntTRS
    (48) LLVM Symbolic Execution SCC
        (49) SCC2IRS [SOUND, 40 ms]
        (50) IntTRS
        (51) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (52) IntTRS
        (53) PolynomialOrderProcessor [EQUIVALENT, 2 ms]
        (54) YES
    (55) LLVM Symbolic Execution SCC
        (56) SCC2IRS [SOUND, 31 ms]
        (57) IntTRS
            (58) IntTRSNonPeriodicNontermProof [COMPLETE, 2 ms]
            (59) NO
        (60) SCC2IRS [SOUND, 0 ms]
        (61) IntTRS


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/9pQO4.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/9pQO4.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "cstrncat" linkageType: EXTERNALLY_VISIBLE returnParam: *i8 parameters: (0 *i8, 1 *i8, 2 i64) variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 10
	0:
		%4 = alloca *i8, align 8
		%5 = alloca *i8, align 8
		%6 = alloca i64, align 8
		%7 = alloca *i8, align 8
		%8 = alloca *i8, align 8
		store %0, %4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %4)
		store %1, %5
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %5)
		store %2, %6
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i64 %6)
		%9 = load %6
		%10 = icmp ne %9 0
		br %10, %11, %40
	11:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %7)
		%12 = load %4
		store %12, %7
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %8)
		%13 = load %5
		store %13, %8
		br %14
	14:
		%15 = load %7
		%16 = load %15
		%17 = sext i8 %16 to i32
		%18 = icmp ne %17 0
		br %18, %19, %22
	19:
		%20 = load %7
		%21 = getelementptr %20, 1
		store %21, %7
		br %14
	22:
		br %23
	23:
		%24 = load %8
		%25 = getelementptr %24, 1
		store %25, %8
		%26 = load %24
		%27 = load %7
		store %26, %27
		%28 = sext i8 %26 to i32
		%29 = icmp eq %28 0
		br %29, %30, %31
	30:
		br %38
	31:
		%32 = load %7
		%33 = getelementptr %32, 1
		store %33, %7
		br %34
	34:
		%35 = load %6
		%36 = add i64 %35, -1
		store %36, %6
		%37 = icmp ne %36 0
		br %37, %23, %38
	38:
		%39 = load %7
		store 0, %39
		br %40
	40:
		%41 = load %4
		ret %41

*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 64
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		%3 = alloca i32, align 4
		%4 = alloca i32, align 4
		%5 = alloca *i8, align 8
		%6 = alloca *i8, align 8
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		%7 = call i32 @__VERIFIER_nondet_int()
		store %7, %2
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		%8 = call i32 @__VERIFIER_nondet_int()
		store %8, %3
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %4)
		%9 = call i32 @__VERIFIER_nondet_int()
		store %9, %4
		%10 = load %2
		%11 = icmp slt %10 1
		br %11, %12, %13
	12:
		store 1, %2
		br %13
	13:
		%14 = load %3
		%15 = icmp slt %14 1
		br %15, %16, %17
	16:
		store 1, %3
		br %17
	17:
		%18 = load %4
		%19 = icmp slt %18 1
		br %19, %20, %21
	20:
		store 1, %4
		br %21
	21:
		%22 = load %2
		%23 = load %4
		%24 = icmp slt %22 %23
		br %24, %31, %25
	25:
		%26 = load %2
		%27 = load %4
		%28 = sub i32 %26, %27
		%29 = load %3
		%30 = icmp slt %28 %29
		br %30, %31, %32
	31:
		store 0, %1
		br %58
	32:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %5)
		%33 = load %2
		%34 = sext i32 %33 to i64
		%35 = mul i64 %34, 1
		%36 = alloca i8, numElementsLit: %35, align 16
		store %36, %5
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %6)
		%37 = load %3
		%38 = sext i32 %37 to i64
		%39 = mul i64 %38, 1
		%40 = alloca i8, numElementsLit: %39, align 16
		store %40, %6
		%41 = load %5
		%42 = load %2
		%43 = load %4
		%44 = sub i32 %42, %43
		%45 = sub i32 %44, 1
		%46 = sext i32 %45 to i64
		%47 = getelementptr %41, %46
		store 0, %47
		%48 = load %6
		%49 = load %3
		%50 = sub i32 %49, 1
		%51 = sext i32 %50 to i64
		%52 = getelementptr %48, %51
		store 0, %52
		%53 = load %5
		%54 = load %6
		%55 = load %4
		%56 = sext i32 %55 to i64
		%57 = call *i8 @cstrncat(*i8 %53, *i8 %54, i64 %56)
		store 0, %1
		br %58
	58:
		%59 = load %1
		ret %59


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 7 SCCs.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC
----------------------------------------

(8) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 21 rulesP rules:
f_1636(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16031, v16032, v16033, v16034, v16035, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1637(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16032, v16033, v16034, v16035, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: v16073 = 1 + v16071 && 1 <= v16073
f_1637(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16032, v16033, v16034, v16035, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1638(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16032, v16033, v16034, v16035, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: TRUE
f_1638(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16032, v16033, v16034, v16035, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1639(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16033, v16032, v16034, v16035, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: TRUE
f_1639(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16033, v16032, v16034, v16035, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1640(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16032, v16034, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: 0 = 0
f_1640(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16032, v16034, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1641(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16032, v16034, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: TRUE
f_1641(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16032, v16034, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1642(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16034, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: 0 = 0
f_1642(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16034, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1644(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16034, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: v16075 != 0
f_1644(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16034, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1646(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16034, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: 0 = 0
f_1646(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16034, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1648(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16034, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: TRUE
f_1648(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16034, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1650(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: TRUE
f_1650(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1652(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16346, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: v16346 = 1 + v16342 && 1 <= v16346
f_1652(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16346, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1654(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16346, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: TRUE
f_1654(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16346, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1656(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16346, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: TRUE
f_1656(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16346, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1658(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16346, v16550, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: TRUE
f_1658(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16346, v16550, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1660(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16346, v16550, v16552, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: 1 + v16552 = v16550
f_1660(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16346, v16550, v16552, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1662(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16346, v16550, v16552, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: TRUE
f_1662(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16346, v16550, v16552, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1664(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16346, v16550, v16552, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: v16552 != 0
f_1664(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16346, v16550, v16552, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1667(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16346, v16550, v16552, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: 0 = 0
f_1667(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16346, v16550, v16552, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1669(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16346, v16550, v16552, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: TRUE
f_1669(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16346, v16550, v16552, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1635(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16346, v16550, v16552, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: TRUE
f_1635(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16030, v16031, v16032, v16033, v16034, v16035, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1636(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16031, v16032, v16033, v16034, v16035, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: TRUE
Combined rules. Obtained 4 rulesP rules:
f_1636(v16018:0, v16019:0, v16020:0, v16021:0, v16022:0, v16023:0, v16024:0, v16025:0, 1, v16027:0, 0, v16029:0, v16071:0, v16031:0, v16032:0, v16033:0, v16034:0, v16035:0, v16036:0, v16037:0, v16038:0, v16058:0, v16039:0, v16059:0, v16040:0, v16060:0, v16041:0, v16061:0, v16042:0, v16062:0, v16043:0, v16063:0, v16050:0, v16064:0, v16051:0, v16065:0, v16066:0, v16067:0, v16068:0, v16069:0, v16070:0, v16044:0, v16045:0, v16046:0, v16047:0, v16048:0, v16049:0, v16052:0, v16053:0, v16054:0, v16055:0, v16056:0, v16057:0, 3, 7, 2, 4, 8) -> f_1636(v16018:0, v16019:0, v16020:0, v16021:0, v16022:0, v16023:0, v16024:0, v16025:0, 1, v16027:0, 0, v16029:0, v16071:1, 1 + v16071:0, v16075:0, v16035:0, v16342:0, 1 + v16342:0, 1 + v16552:0, v16552:0, v16038:0, v16058:0, v16039:0, v16059:0, v16040:0, v16060:0, v16041:0, v16061:0, v16042:0, v16062:0, v16043:0, v16063:0, v16050:0, v16064:0, v16051:0, v16065:0, v16066:0, v16067:0, v16068:0, v16069:0, v16070:0, v16044:0, v16045:0, v16046:0, v16047:0, v16048:0, v16049:0, v16052:0, v16053:0, v16054:0, v16055:0, v16056:0, v16057:0, 3, 7, 2, 4, 8) :|: v16071:0 > -1 && v16075:0 < 0 && v16552:0 < 0 && v16342:0 > -1
f_1636(v16018:0, v16019:0, v16020:0, v16021:0, v16022:0, v16023:0, v16024:0, v16025:0, 1, v16027:0, 0, v16029:0, v16071:0, v16031:0, v16032:0, v16033:0, v16034:0, v16035:0, v16036:0, v16037:0, v16038:0, v16058:0, v16039:0, v16059:0, v16040:0, v16060:0, v16041:0, v16061:0, v16042:0, v16062:0, v16043:0, v16063:0, v16050:0, v16064:0, v16051:0, v16065:0, v16066:0, v16067:0, v16068:0, v16069:0, v16070:0, v16044:0, v16045:0, v16046:0, v16047:0, v16048:0, v16049:0, v16052:0, v16053:0, v16054:0, v16055:0, v16056:0, v16057:0, 3, 7, 2, 4, 8) -> f_1636(v16018:0, v16019:0, v16020:0, v16021:0, v16022:0, v16023:0, v16024:0, v16025:0, 1, v16027:0, 0, v16029:0, v16071:1, 1 + v16071:0, v16075:0, v16035:0, v16342:0, 1 + v16342:0, 1 + v16552:0, v16552:0, v16038:0, v16058:0, v16039:0, v16059:0, v16040:0, v16060:0, v16041:0, v16061:0, v16042:0, v16062:0, v16043:0, v16063:0, v16050:0, v16064:0, v16051:0, v16065:0, v16066:0, v16067:0, v16068:0, v16069:0, v16070:0, v16044:0, v16045:0, v16046:0, v16047:0, v16048:0, v16049:0, v16052:0, v16053:0, v16054:0, v16055:0, v16056:0, v16057:0, 3, 7, 2, 4, 8) :|: v16071:0 > -1 && v16075:0 < 0 && v16552:0 > 0 && v16342:0 > -1
f_1636(v16018:0, v16019:0, v16020:0, v16021:0, v16022:0, v16023:0, v16024:0, v16025:0, 1, v16027:0, 0, v16029:0, v16071:0, v16031:0, v16032:0, v16033:0, v16034:0, v16035:0, v16036:0, v16037:0, v16038:0, v16058:0, v16039:0, v16059:0, v16040:0, v16060:0, v16041:0, v16061:0, v16042:0, v16062:0, v16043:0, v16063:0, v16050:0, v16064:0, v16051:0, v16065:0, v16066:0, v16067:0, v16068:0, v16069:0, v16070:0, v16044:0, v16045:0, v16046:0, v16047:0, v16048:0, v16049:0, v16052:0, v16053:0, v16054:0, v16055:0, v16056:0, v16057:0, 3, 7, 2, 4, 8) -> f_1636(v16018:0, v16019:0, v16020:0, v16021:0, v16022:0, v16023:0, v16024:0, v16025:0, 1, v16027:0, 0, v16029:0, v16071:1, 1 + v16071:0, v16075:0, v16035:0, v16342:0, 1 + v16342:0, 1 + v16552:0, v16552:0, v16038:0, v16058:0, v16039:0, v16059:0, v16040:0, v16060:0, v16041:0, v16061:0, v16042:0, v16062:0, v16043:0, v16063:0, v16050:0, v16064:0, v16051:0, v16065:0, v16066:0, v16067:0, v16068:0, v16069:0, v16070:0, v16044:0, v16045:0, v16046:0, v16047:0, v16048:0, v16049:0, v16052:0, v16053:0, v16054:0, v16055:0, v16056:0, v16057:0, 3, 7, 2, 4, 8) :|: v16071:0 > -1 && v16075:0 > 0 && v16552:0 < 0 && v16342:0 > -1
f_1636(v16018:0, v16019:0, v16020:0, v16021:0, v16022:0, v16023:0, v16024:0, v16025:0, 1, v16027:0, 0, v16029:0, v16071:0, v16031:0, v16032:0, v16033:0, v16034:0, v16035:0, v16036:0, v16037:0, v16038:0, v16058:0, v16039:0, v16059:0, v16040:0, v16060:0, v16041:0, v16061:0, v16042:0, v16062:0, v16043:0, v16063:0, v16050:0, v16064:0, v16051:0, v16065:0, v16066:0, v16067:0, v16068:0, v16069:0, v16070:0, v16044:0, v16045:0, v16046:0, v16047:0, v16048:0, v16049:0, v16052:0, v16053:0, v16054:0, v16055:0, v16056:0, v16057:0, 3, 7, 2, 4, 8) -> f_1636(v16018:0, v16019:0, v16020:0, v16021:0, v16022:0, v16023:0, v16024:0, v16025:0, 1, v16027:0, 0, v16029:0, v16071:1, 1 + v16071:0, v16075:0, v16035:0, v16342:0, 1 + v16342:0, 1 + v16552:0, v16552:0, v16038:0, v16058:0, v16039:0, v16059:0, v16040:0, v16060:0, v16041:0, v16061:0, v16042:0, v16062:0, v16043:0, v16063:0, v16050:0, v16064:0, v16051:0, v16065:0, v16066:0, v16067:0, v16068:0, v16069:0, v16070:0, v16044:0, v16045:0, v16046:0, v16047:0, v16048:0, v16049:0, v16052:0, v16053:0, v16054:0, v16055:0, v16056:0, v16057:0, 3, 7, 2, 4, 8) :|: v16071:0 > -1 && v16075:0 > 0 && v16552:0 > 0 && v16342:0 > -1
Filtered unneeded arguments:
   f_1636(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, x57, x58) -> f_1636(x13)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1636(v16071:0) -> f_1636(v16071:1) :|: v16071:0 > -1

----------------------------------------

(9)
Obligation:
Rules:
f_1636(v16071:0) -> f_1636(v16071:1) :|: v16071:0 > -1

----------------------------------------

(10) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, v16071:0) -> f(1, v16071:1) :|: pc = 1 && v16071:0 > -1
Witness term starting non-terminating reduction: f(1, 0)
----------------------------------------

(11)
NO

----------------------------------------

(12) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 21 rulesP rules:
f_1636(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16031, v16032, v16033, v16034, v16035, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1637(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16032, v16033, v16034, v16035, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: v16073 = 1 + v16071 && 1 <= v16073
f_1637(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16032, v16033, v16034, v16035, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1638(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16032, v16033, v16034, v16035, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: TRUE
f_1638(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16032, v16033, v16034, v16035, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1639(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16033, v16032, v16034, v16035, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: TRUE
f_1639(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16033, v16032, v16034, v16035, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1640(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16032, v16034, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: 0 = 0
f_1640(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16032, v16034, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1641(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16032, v16034, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: TRUE
f_1641(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16032, v16034, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1642(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16034, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: 0 = 0
f_1642(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16034, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1644(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16034, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: v16075 != 0
f_1644(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16034, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1646(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16034, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: 0 = 0
f_1646(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16034, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1648(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16034, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: TRUE
f_1648(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16034, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1650(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: TRUE
f_1650(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1652(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16346, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: v16346 = 1 + v16342 && 1 <= v16346
f_1652(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16346, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1654(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16346, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: TRUE
f_1654(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16346, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1656(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16346, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: TRUE
f_1656(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16346, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1658(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16346, v16550, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: TRUE
f_1658(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16346, v16550, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1660(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16346, v16550, v16552, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: 1 + v16552 = v16550
f_1660(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16346, v16550, v16552, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1662(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16346, v16550, v16552, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: TRUE
f_1662(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16346, v16550, v16552, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1664(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16346, v16550, v16552, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: v16552 != 0
f_1664(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16346, v16550, v16552, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1667(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16346, v16550, v16552, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: 0 = 0
f_1667(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16346, v16550, v16552, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1669(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16346, v16550, v16552, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: TRUE
f_1669(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16346, v16550, v16552, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1635(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16073, v16075, v16035, v16342, v16346, v16550, v16552, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: v16018 <= v16029 && v16045 <= v16048 && v16049 <= v16048 && v16050 + v16044 <= 1 + v16064 && v16051 + v16049 <= 1 + v16065 && 0 <= v16018 && 0 <= v16019 && 1 <= v16021 && 1 <= v16022 && 1 <= v16023 && 1 <= v16024 && 1 <= v16025 && 1 <= v16027 && 0 <= v16029 && 0 <= v16071 && 1 <= v16073 && 1 <= v16035 && 0 <= v16342 && 1 <= v16346 && 1 <= v16038 && 1 <= v16039 && 1 <= v16040 && 1 <= v16041 && 1 <= v16042 && 1 <= v16043 && 2 <= v16044 && 1 <= v16046 && 0 <= v16047 && v16047 <= 1 && 1 <= v16048 && 1 <= v16049 && 1 <= v16050 && 1 <= v16051 && 0 <= v16052 && 1 <= v16053 && 0 <= v16054 && 0 <= v16057 && 4 <= v16058 && 4 <= v16059 && 4 <= v16060 && 4 <= v16061 && 8 <= v16062 && 8 <= v16063 && 2 <= v16064 && 1 <= v16065 && 8 <= v16066 && 8 <= v16067 && 8 <= v16068 && 8 <= v16069 && 8 <= v16070 && v16038 <= v16058 && v16039 <= v16059 && v16040 <= v16060 && v16041 <= v16061 && v16042 <= v16062 && v16043 <= v16063 && v16050 <= v16064 && v16051 <= v16065 && v16021 <= v16066 && v16022 <= v16067 && v16023 <= v16068 && v16024 <= v16069 && v16025 <= v16070
f_1635(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16030, v16031, v16032, v16033, v16034, v16035, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) -> f_1636(v16018, v16019, v16020, v16021, v16022, v16023, v16024, v16025, 1, v16027, 0, v16029, v16071, v16031, v16032, v16033, v16034, v16035, v16036, v16037, v16038, v16058, v16039, v16059, v16040, v16060, v16041, v16061, v16042, v16062, v16043, v16063, v16050, v16064, v16051, v16065, v16066, v16067, v16068, v16069, v16070, v16044, v16045, v16046, v16047, v16048, v16049, v16052, v16053, v16054, v16055, v16056, v16057, 3, 7, 2, 4, 8) :|: TRUE
Combined rules. Obtained 4 rulesP rules:
f_1636(v16018:0, v16019:0, v16020:0, v16021:0, v16022:0, v16023:0, v16024:0, v16025:0, 1, v16027:0, 0, v16029:0, v16071:0, v16031:0, v16032:0, v16033:0, v16034:0, v16035:0, v16036:0, v16037:0, v16038:0, v16058:0, v16039:0, v16059:0, v16040:0, v16060:0, v16041:0, v16061:0, v16042:0, v16062:0, v16043:0, v16063:0, v16050:0, v16064:0, v16051:0, v16065:0, v16066:0, v16067:0, v16068:0, v16069:0, v16070:0, v16044:0, v16045:0, v16046:0, v16047:0, v16048:0, v16049:0, v16052:0, v16053:0, v16054:0, v16055:0, v16056:0, v16057:0, 3, 7, 2, 4, 8) -> f_1636(v16018:0, v16019:0, v16020:0, v16021:0, v16022:0, v16023:0, v16024:0, v16025:0, 1, v16027:0, 0, v16029:0, v16071:1, 1 + v16071:0, v16075:0, v16035:0, v16342:0, 1 + v16342:0, 1 + v16552:0, v16552:0, v16038:0, v16058:0, v16039:0, v16059:0, v16040:0, v16060:0, v16041:0, v16061:0, v16042:0, v16062:0, v16043:0, v16063:0, v16050:0, v16064:0, v16051:0, v16065:0, v16066:0, v16067:0, v16068:0, v16069:0, v16070:0, v16044:0, v16045:0, v16046:0, v16047:0, v16048:0, v16049:0, v16052:0, v16053:0, v16054:0, v16055:0, v16056:0, v16057:0, 3, 7, 2, 4, 8) :|: v16048:0 >= v16045:0 && v16029:0 >= v16018:0 && v16049:0 <= v16048:0 && v16050:0 + v16044:0 <= 1 + v16064:0 && v16051:0 + v16049:0 <= 1 + v16065:0 && v16018:0 > -1 && v16019:0 > -1 && v16021:0 > 0 && v16022:0 > 0 && v16023:0 > 0 && v16024:0 > 0 && v16025:0 > 0 && v16027:0 > 0 && v16029:0 > -1 && v16071:0 > -1 && v16035:0 > 0 && v16342:0 > -1 && v16038:0 > 0 && v16039:0 > 0 && v16040:0 > 0 && v16041:0 > 0 && v16042:0 > 0 && v16043:0 > 0 && v16044:0 > 1 && v16046:0 > 0 && v16047:0 > -1 && v16047:0 < 2 && v16048:0 > 0 && v16049:0 > 0 && v16050:0 > 0 && v16051:0 > 0 && v16052:0 > -1 && v16053:0 > 0 && v16054:0 > -1 && v16057:0 > -1 && v16058:0 > 3 && v16059:0 > 3 && v16060:0 > 3 && v16061:0 > 3 && v16062:0 > 7 && v16063:0 > 7 && v16064:0 > 1 && v16065:0 > 0 && v16066:0 > 7 && v16067:0 > 7 && v16068:0 > 7 && v16069:0 > 7 && v16070:0 > 7 && v16058:0 >= v16038:0 && v16075:0 < 0 && v16059:0 >= v16039:0 && v16060:0 >= v16040:0 && v16061:0 >= v16041:0 && v16062:0 >= v16042:0 && v16063:0 >= v16043:0 && v16064:0 >= v16050:0 && v16065:0 >= v16051:0 && v16066:0 >= v16021:0 && v16067:0 >= v16022:0 && v16068:0 >= v16023:0 && v16552:0 < 0 && v16070:0 >= v16025:0 && v16069:0 >= v16024:0
f_1636(v16018:0, v16019:0, v16020:0, v16021:0, v16022:0, v16023:0, v16024:0, v16025:0, 1, v16027:0, 0, v16029:0, v16071:0, v16031:0, v16032:0, v16033:0, v16034:0, v16035:0, v16036:0, v16037:0, v16038:0, v16058:0, v16039:0, v16059:0, v16040:0, v16060:0, v16041:0, v16061:0, v16042:0, v16062:0, v16043:0, v16063:0, v16050:0, v16064:0, v16051:0, v16065:0, v16066:0, v16067:0, v16068:0, v16069:0, v16070:0, v16044:0, v16045:0, v16046:0, v16047:0, v16048:0, v16049:0, v16052:0, v16053:0, v16054:0, v16055:0, v16056:0, v16057:0, 3, 7, 2, 4, 8) -> f_1636(v16018:0, v16019:0, v16020:0, v16021:0, v16022:0, v16023:0, v16024:0, v16025:0, 1, v16027:0, 0, v16029:0, v16071:1, 1 + v16071:0, v16075:0, v16035:0, v16342:0, 1 + v16342:0, 1 + v16552:0, v16552:0, v16038:0, v16058:0, v16039:0, v16059:0, v16040:0, v16060:0, v16041:0, v16061:0, v16042:0, v16062:0, v16043:0, v16063:0, v16050:0, v16064:0, v16051:0, v16065:0, v16066:0, v16067:0, v16068:0, v16069:0, v16070:0, v16044:0, v16045:0, v16046:0, v16047:0, v16048:0, v16049:0, v16052:0, v16053:0, v16054:0, v16055:0, v16056:0, v16057:0, 3, 7, 2, 4, 8) :|: v16048:0 >= v16045:0 && v16029:0 >= v16018:0 && v16049:0 <= v16048:0 && v16050:0 + v16044:0 <= 1 + v16064:0 && v16051:0 + v16049:0 <= 1 + v16065:0 && v16018:0 > -1 && v16019:0 > -1 && v16021:0 > 0 && v16022:0 > 0 && v16023:0 > 0 && v16024:0 > 0 && v16025:0 > 0 && v16027:0 > 0 && v16029:0 > -1 && v16071:0 > -1 && v16035:0 > 0 && v16342:0 > -1 && v16038:0 > 0 && v16039:0 > 0 && v16040:0 > 0 && v16041:0 > 0 && v16042:0 > 0 && v16043:0 > 0 && v16044:0 > 1 && v16046:0 > 0 && v16047:0 > -1 && v16047:0 < 2 && v16048:0 > 0 && v16049:0 > 0 && v16050:0 > 0 && v16051:0 > 0 && v16052:0 > -1 && v16053:0 > 0 && v16054:0 > -1 && v16057:0 > -1 && v16058:0 > 3 && v16059:0 > 3 && v16060:0 > 3 && v16061:0 > 3 && v16062:0 > 7 && v16063:0 > 7 && v16064:0 > 1 && v16065:0 > 0 && v16066:0 > 7 && v16067:0 > 7 && v16068:0 > 7 && v16069:0 > 7 && v16070:0 > 7 && v16058:0 >= v16038:0 && v16075:0 < 0 && v16059:0 >= v16039:0 && v16060:0 >= v16040:0 && v16061:0 >= v16041:0 && v16062:0 >= v16042:0 && v16063:0 >= v16043:0 && v16064:0 >= v16050:0 && v16065:0 >= v16051:0 && v16066:0 >= v16021:0 && v16067:0 >= v16022:0 && v16068:0 >= v16023:0 && v16552:0 > 0 && v16070:0 >= v16025:0 && v16069:0 >= v16024:0
f_1636(v16018:0, v16019:0, v16020:0, v16021:0, v16022:0, v16023:0, v16024:0, v16025:0, 1, v16027:0, 0, v16029:0, v16071:0, v16031:0, v16032:0, v16033:0, v16034:0, v16035:0, v16036:0, v16037:0, v16038:0, v16058:0, v16039:0, v16059:0, v16040:0, v16060:0, v16041:0, v16061:0, v16042:0, v16062:0, v16043:0, v16063:0, v16050:0, v16064:0, v16051:0, v16065:0, v16066:0, v16067:0, v16068:0, v16069:0, v16070:0, v16044:0, v16045:0, v16046:0, v16047:0, v16048:0, v16049:0, v16052:0, v16053:0, v16054:0, v16055:0, v16056:0, v16057:0, 3, 7, 2, 4, 8) -> f_1636(v16018:0, v16019:0, v16020:0, v16021:0, v16022:0, v16023:0, v16024:0, v16025:0, 1, v16027:0, 0, v16029:0, v16071:1, 1 + v16071:0, v16075:0, v16035:0, v16342:0, 1 + v16342:0, 1 + v16552:0, v16552:0, v16038:0, v16058:0, v16039:0, v16059:0, v16040:0, v16060:0, v16041:0, v16061:0, v16042:0, v16062:0, v16043:0, v16063:0, v16050:0, v16064:0, v16051:0, v16065:0, v16066:0, v16067:0, v16068:0, v16069:0, v16070:0, v16044:0, v16045:0, v16046:0, v16047:0, v16048:0, v16049:0, v16052:0, v16053:0, v16054:0, v16055:0, v16056:0, v16057:0, 3, 7, 2, 4, 8) :|: v16048:0 >= v16045:0 && v16029:0 >= v16018:0 && v16049:0 <= v16048:0 && v16050:0 + v16044:0 <= 1 + v16064:0 && v16051:0 + v16049:0 <= 1 + v16065:0 && v16018:0 > -1 && v16019:0 > -1 && v16021:0 > 0 && v16022:0 > 0 && v16023:0 > 0 && v16024:0 > 0 && v16025:0 > 0 && v16027:0 > 0 && v16029:0 > -1 && v16071:0 > -1 && v16035:0 > 0 && v16342:0 > -1 && v16038:0 > 0 && v16039:0 > 0 && v16040:0 > 0 && v16041:0 > 0 && v16042:0 > 0 && v16043:0 > 0 && v16044:0 > 1 && v16046:0 > 0 && v16047:0 > -1 && v16047:0 < 2 && v16048:0 > 0 && v16049:0 > 0 && v16050:0 > 0 && v16051:0 > 0 && v16052:0 > -1 && v16053:0 > 0 && v16054:0 > -1 && v16057:0 > -1 && v16058:0 > 3 && v16059:0 > 3 && v16060:0 > 3 && v16061:0 > 3 && v16062:0 > 7 && v16063:0 > 7 && v16064:0 > 1 && v16065:0 > 0 && v16066:0 > 7 && v16067:0 > 7 && v16068:0 > 7 && v16069:0 > 7 && v16070:0 > 7 && v16058:0 >= v16038:0 && v16075:0 > 0 && v16059:0 >= v16039:0 && v16060:0 >= v16040:0 && v16061:0 >= v16041:0 && v16062:0 >= v16042:0 && v16063:0 >= v16043:0 && v16064:0 >= v16050:0 && v16065:0 >= v16051:0 && v16066:0 >= v16021:0 && v16067:0 >= v16022:0 && v16068:0 >= v16023:0 && v16552:0 < 0 && v16070:0 >= v16025:0 && v16069:0 >= v16024:0
f_1636(v16018:0, v16019:0, v16020:0, v16021:0, v16022:0, v16023:0, v16024:0, v16025:0, 1, v16027:0, 0, v16029:0, v16071:0, v16031:0, v16032:0, v16033:0, v16034:0, v16035:0, v16036:0, v16037:0, v16038:0, v16058:0, v16039:0, v16059:0, v16040:0, v16060:0, v16041:0, v16061:0, v16042:0, v16062:0, v16043:0, v16063:0, v16050:0, v16064:0, v16051:0, v16065:0, v16066:0, v16067:0, v16068:0, v16069:0, v16070:0, v16044:0, v16045:0, v16046:0, v16047:0, v16048:0, v16049:0, v16052:0, v16053:0, v16054:0, v16055:0, v16056:0, v16057:0, 3, 7, 2, 4, 8) -> f_1636(v16018:0, v16019:0, v16020:0, v16021:0, v16022:0, v16023:0, v16024:0, v16025:0, 1, v16027:0, 0, v16029:0, v16071:1, 1 + v16071:0, v16075:0, v16035:0, v16342:0, 1 + v16342:0, 1 + v16552:0, v16552:0, v16038:0, v16058:0, v16039:0, v16059:0, v16040:0, v16060:0, v16041:0, v16061:0, v16042:0, v16062:0, v16043:0, v16063:0, v16050:0, v16064:0, v16051:0, v16065:0, v16066:0, v16067:0, v16068:0, v16069:0, v16070:0, v16044:0, v16045:0, v16046:0, v16047:0, v16048:0, v16049:0, v16052:0, v16053:0, v16054:0, v16055:0, v16056:0, v16057:0, 3, 7, 2, 4, 8) :|: v16048:0 >= v16045:0 && v16029:0 >= v16018:0 && v16049:0 <= v16048:0 && v16050:0 + v16044:0 <= 1 + v16064:0 && v16051:0 + v16049:0 <= 1 + v16065:0 && v16018:0 > -1 && v16019:0 > -1 && v16021:0 > 0 && v16022:0 > 0 && v16023:0 > 0 && v16024:0 > 0 && v16025:0 > 0 && v16027:0 > 0 && v16029:0 > -1 && v16071:0 > -1 && v16035:0 > 0 && v16342:0 > -1 && v16038:0 > 0 && v16039:0 > 0 && v16040:0 > 0 && v16041:0 > 0 && v16042:0 > 0 && v16043:0 > 0 && v16044:0 > 1 && v16046:0 > 0 && v16047:0 > -1 && v16047:0 < 2 && v16048:0 > 0 && v16049:0 > 0 && v16050:0 > 0 && v16051:0 > 0 && v16052:0 > -1 && v16053:0 > 0 && v16054:0 > -1 && v16057:0 > -1 && v16058:0 > 3 && v16059:0 > 3 && v16060:0 > 3 && v16061:0 > 3 && v16062:0 > 7 && v16063:0 > 7 && v16064:0 > 1 && v16065:0 > 0 && v16066:0 > 7 && v16067:0 > 7 && v16068:0 > 7 && v16069:0 > 7 && v16070:0 > 7 && v16058:0 >= v16038:0 && v16075:0 > 0 && v16059:0 >= v16039:0 && v16060:0 >= v16040:0 && v16061:0 >= v16041:0 && v16062:0 >= v16042:0 && v16063:0 >= v16043:0 && v16064:0 >= v16050:0 && v16065:0 >= v16051:0 && v16066:0 >= v16021:0 && v16067:0 >= v16022:0 && v16068:0 >= v16023:0 && v16552:0 > 0 && v16070:0 >= v16025:0 && v16069:0 >= v16024:0
Filtered unneeded arguments:
   f_1636(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, x57, x58) -> f_1636(x1, x2, x4, x5, x6, x7, x8, x10, x12, x13, x18, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49, x50, x53)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1636(v16018:0, v16019:0, v16021:0, v16022:0, v16023:0, v16024:0, v16025:0, v16027:0, v16029:0, v16071:0, v16035:0, v16038:0, v16058:0, v16039:0, v16059:0, v16040:0, v16060:0, v16041:0, v16061:0, v16042:0, v16062:0, v16043:0, v16063:0, v16050:0, v16064:0, v16051:0, v16065:0, v16066:0, v16067:0, v16068:0, v16069:0, v16070:0, v16044:0, v16045:0, v16046:0, v16047:0, v16048:0, v16049:0, v16052:0, v16053:0, v16054:0, v16057:0) -> f_1636(v16018:0, v16019:0, v16021:0, v16022:0, v16023:0, v16024:0, v16025:0, v16027:0, v16029:0, v16071:1, 1 + v16342:0, v16038:0, v16058:0, v16039:0, v16059:0, v16040:0, v16060:0, v16041:0, v16061:0, v16042:0, v16062:0, v16043:0, v16063:0, v16050:0, v16064:0, v16051:0, v16065:0, v16066:0, v16067:0, v16068:0, v16069:0, v16070:0, v16044:0, v16045:0, v16046:0, v16047:0, v16048:0, v16049:0, v16052:0, v16053:0, v16054:0, v16057:0) :|: v16029:0 >= v16018:0 && v16048:0 >= v16045:0 && v16049:0 <= v16048:0 && v16050:0 + v16044:0 <= 1 + v16064:0 && v16051:0 + v16049:0 <= 1 + v16065:0 && v16018:0 > -1 && v16019:0 > -1 && v16021:0 > 0 && v16022:0 > 0 && v16023:0 > 0 && v16024:0 > 0 && v16025:0 > 0 && v16027:0 > 0 && v16029:0 > -1 && v16071:0 > -1 && v16035:0 > 0 && v16342:0 > -1 && v16038:0 > 0 && v16039:0 > 0 && v16040:0 > 0 && v16041:0 > 0 && v16042:0 > 0 && v16043:0 > 0 && v16044:0 > 1 && v16046:0 > 0 && v16047:0 > -1 && v16047:0 < 2 && v16048:0 > 0 && v16049:0 > 0 && v16050:0 > 0 && v16051:0 > 0 && v16052:0 > -1 && v16053:0 > 0 && v16054:0 > -1 && v16057:0 > -1 && v16058:0 > 3 && v16059:0 > 3 && v16060:0 > 3 && v16061:0 > 3 && v16062:0 > 7 && v16063:0 > 7 && v16064:0 > 1 && v16065:0 > 0 && v16066:0 > 7 && v16067:0 > 7 && v16068:0 > 7 && v16069:0 > 7 && v16070:0 > 7 && v16058:0 >= v16038:0 && v16059:0 >= v16039:0 && v16060:0 >= v16040:0 && v16061:0 >= v16041:0 && v16062:0 >= v16042:0 && v16063:0 >= v16043:0 && v16064:0 >= v16050:0 && v16065:0 >= v16051:0 && v16066:0 >= v16021:0 && v16067:0 >= v16022:0 && v16068:0 >= v16023:0 && v16069:0 >= v16024:0 && v16070:0 >= v16025:0

----------------------------------------

(13)
Obligation:
Rules:
f_1636(v16018:0, v16019:0, v16021:0, v16022:0, v16023:0, v16024:0, v16025:0, v16027:0, v16029:0, v16071:0, v16035:0, v16038:0, v16058:0, v16039:0, v16059:0, v16040:0, v16060:0, v16041:0, v16061:0, v16042:0, v16062:0, v16043:0, v16063:0, v16050:0, v16064:0, v16051:0, v16065:0, v16066:0, v16067:0, v16068:0, v16069:0, v16070:0, v16044:0, v16045:0, v16046:0, v16047:0, v16048:0, v16049:0, v16052:0, v16053:0, v16054:0, v16057:0) -> f_1636(v16018:0, v16019:0, v16021:0, v16022:0, v16023:0, v16024:0, v16025:0, v16027:0, v16029:0, v16071:1, 1 + v16342:0, v16038:0, v16058:0, v16039:0, v16059:0, v16040:0, v16060:0, v16041:0, v16061:0, v16042:0, v16062:0, v16043:0, v16063:0, v16050:0, v16064:0, v16051:0, v16065:0, v16066:0, v16067:0, v16068:0, v16069:0, v16070:0, v16044:0, v16045:0, v16046:0, v16047:0, v16048:0, v16049:0, v16052:0, v16053:0, v16054:0, v16057:0) :|: v16029:0 >= v16018:0 && v16048:0 >= v16045:0 && v16049:0 <= v16048:0 && v16050:0 + v16044:0 <= 1 + v16064:0 && v16051:0 + v16049:0 <= 1 + v16065:0 && v16018:0 > -1 && v16019:0 > -1 && v16021:0 > 0 && v16022:0 > 0 && v16023:0 > 0 && v16024:0 > 0 && v16025:0 > 0 && v16027:0 > 0 && v16029:0 > -1 && v16071:0 > -1 && v16035:0 > 0 && v16342:0 > -1 && v16038:0 > 0 && v16039:0 > 0 && v16040:0 > 0 && v16041:0 > 0 && v16042:0 > 0 && v16043:0 > 0 && v16044:0 > 1 && v16046:0 > 0 && v16047:0 > -1 && v16047:0 < 2 && v16048:0 > 0 && v16049:0 > 0 && v16050:0 > 0 && v16051:0 > 0 && v16052:0 > -1 && v16053:0 > 0 && v16054:0 > -1 && v16057:0 > -1 && v16058:0 > 3 && v16059:0 > 3 && v16060:0 > 3 && v16061:0 > 3 && v16062:0 > 7 && v16063:0 > 7 && v16064:0 > 1 && v16065:0 > 0 && v16066:0 > 7 && v16067:0 > 7 && v16068:0 > 7 && v16069:0 > 7 && v16070:0 > 7 && v16058:0 >= v16038:0 && v16059:0 >= v16039:0 && v16060:0 >= v16040:0 && v16061:0 >= v16041:0 && v16062:0 >= v16042:0 && v16063:0 >= v16043:0 && v16064:0 >= v16050:0 && v16065:0 >= v16051:0 && v16066:0 >= v16021:0 && v16067:0 >= v16022:0 && v16068:0 >= v16023:0 && v16069:0 >= v16024:0 && v16070:0 >= v16025:0

----------------------------------------

(14)
Obligation:
SCC
----------------------------------------

(15) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 21 rulesP rules:
f_1422(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v8864, v8865, v8866, v8867, v8868, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1431(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v8865, v8866, v8867, v8868, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: v9273 = 1 + v9042 && 1 <= v9273
f_1431(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v8865, v8866, v8867, v8868, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1439(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v8865, v8866, v8867, v8868, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: TRUE
f_1439(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v8865, v8866, v8867, v8868, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1447(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8866, v8865, v8867, v8868, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: TRUE
f_1447(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8866, v8865, v8867, v8868, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1455(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v8865, v8867, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: 0 = 0
f_1455(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v8865, v8867, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1463(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v8865, v8867, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: TRUE
f_1463(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v8865, v8867, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1474(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v8867, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: 0 = 0
f_1474(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v8867, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1487(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v8867, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: v9564 != 0
f_1487(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v8867, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1498(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v8867, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: 0 = 0
f_1498(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v8867, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1509(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v8867, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: TRUE
f_1509(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v8867, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1518(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: TRUE
f_1518(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1527(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v11371, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: v11371 = 1 + v11296 && 1 <= v11371
f_1527(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v11371, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1536(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v11371, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: TRUE
f_1536(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v11371, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1545(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v11371, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: TRUE
f_1545(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v11371, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1554(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v11371, v12016, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: TRUE
f_1554(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v11371, v12016, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1563(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v11371, v12016, v12240, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: 1 + v12240 = v12016
f_1563(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v11371, v12016, v12240, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1572(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v11371, v12016, v12240, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: TRUE
f_1572(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v11371, v12016, v12240, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1580(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v11371, v12016, v12240, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: v12240 != 0
f_1580(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v11371, v12016, v12240, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1587(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v11371, v12016, v12240, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: 0 = 0
f_1587(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v11371, v12016, v12240, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1593(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v11371, v12016, v12240, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: TRUE
f_1593(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v11371, v12016, v12240, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1413(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v11371, v12016, v12240, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: TRUE
f_1413(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v8863, v8864, v8865, v8866, v8867, v8868, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1422(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v8864, v8865, v8866, v8867, v8868, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: TRUE
Combined rules. Obtained 4 rulesP rules:
f_1422(v8853:0, v8854:0, v8855:0, v8856:0, v8857:0, v8858:0, v8859:0, v8860:0, 1, 0, v9042:0, v8864:0, v8865:0, v8866:0, v8867:0, v8868:0, v8869:0, v8870:0, v8871:0, v8889:0, v8872:0, v8890:0, v8873:0, v8891:0, v8874:0, v8892:0, v8875:0, v8893:0, v8876:0, v8894:0, v8881:0, v8895:0, v8882:0, v8896:0, v8897:0, v8898:0, v8899:0, v8900:0, v8877:0, v8878:0, v8879:0, v8880:0, v8883:0, v8884:0, v8885:0, v8886:0, v8887:0, v8888:0, 3, 7, 2, 4, 8) -> f_1422(v8853:0, v8854:0, v8855:0, v8856:0, v8857:0, v8858:0, v8859:0, v8860:0, 1, 0, v9042:1, 1 + v9042:0, v9564:0, v8868:0, v11296:0, 1 + v11296:0, 1 + v12240:0, v12240:0, v8871:0, v8889:0, v8872:0, v8890:0, v8873:0, v8891:0, v8874:0, v8892:0, v8875:0, v8893:0, v8876:0, v8894:0, v8881:0, v8895:0, v8882:0, v8896:0, v8897:0, v8898:0, v8899:0, v8900:0, v8877:0, v8878:0, v8879:0, v8880:0, v8883:0, v8884:0, v8885:0, v8886:0, v8887:0, v8888:0, 3, 7, 2, 4, 8) :|: v9042:0 > -1 && v9564:0 < 0 && v12240:0 < 0 && v11296:0 > -1
f_1422(v8853:0, v8854:0, v8855:0, v8856:0, v8857:0, v8858:0, v8859:0, v8860:0, 1, 0, v9042:0, v8864:0, v8865:0, v8866:0, v8867:0, v8868:0, v8869:0, v8870:0, v8871:0, v8889:0, v8872:0, v8890:0, v8873:0, v8891:0, v8874:0, v8892:0, v8875:0, v8893:0, v8876:0, v8894:0, v8881:0, v8895:0, v8882:0, v8896:0, v8897:0, v8898:0, v8899:0, v8900:0, v8877:0, v8878:0, v8879:0, v8880:0, v8883:0, v8884:0, v8885:0, v8886:0, v8887:0, v8888:0, 3, 7, 2, 4, 8) -> f_1422(v8853:0, v8854:0, v8855:0, v8856:0, v8857:0, v8858:0, v8859:0, v8860:0, 1, 0, v9042:1, 1 + v9042:0, v9564:0, v8868:0, v11296:0, 1 + v11296:0, 1 + v12240:0, v12240:0, v8871:0, v8889:0, v8872:0, v8890:0, v8873:0, v8891:0, v8874:0, v8892:0, v8875:0, v8893:0, v8876:0, v8894:0, v8881:0, v8895:0, v8882:0, v8896:0, v8897:0, v8898:0, v8899:0, v8900:0, v8877:0, v8878:0, v8879:0, v8880:0, v8883:0, v8884:0, v8885:0, v8886:0, v8887:0, v8888:0, 3, 7, 2, 4, 8) :|: v9042:0 > -1 && v9564:0 < 0 && v12240:0 > 0 && v11296:0 > -1
f_1422(v8853:0, v8854:0, v8855:0, v8856:0, v8857:0, v8858:0, v8859:0, v8860:0, 1, 0, v9042:0, v8864:0, v8865:0, v8866:0, v8867:0, v8868:0, v8869:0, v8870:0, v8871:0, v8889:0, v8872:0, v8890:0, v8873:0, v8891:0, v8874:0, v8892:0, v8875:0, v8893:0, v8876:0, v8894:0, v8881:0, v8895:0, v8882:0, v8896:0, v8897:0, v8898:0, v8899:0, v8900:0, v8877:0, v8878:0, v8879:0, v8880:0, v8883:0, v8884:0, v8885:0, v8886:0, v8887:0, v8888:0, 3, 7, 2, 4, 8) -> f_1422(v8853:0, v8854:0, v8855:0, v8856:0, v8857:0, v8858:0, v8859:0, v8860:0, 1, 0, v9042:1, 1 + v9042:0, v9564:0, v8868:0, v11296:0, 1 + v11296:0, 1 + v12240:0, v12240:0, v8871:0, v8889:0, v8872:0, v8890:0, v8873:0, v8891:0, v8874:0, v8892:0, v8875:0, v8893:0, v8876:0, v8894:0, v8881:0, v8895:0, v8882:0, v8896:0, v8897:0, v8898:0, v8899:0, v8900:0, v8877:0, v8878:0, v8879:0, v8880:0, v8883:0, v8884:0, v8885:0, v8886:0, v8887:0, v8888:0, 3, 7, 2, 4, 8) :|: v9042:0 > -1 && v9564:0 > 0 && v12240:0 < 0 && v11296:0 > -1
f_1422(v8853:0, v8854:0, v8855:0, v8856:0, v8857:0, v8858:0, v8859:0, v8860:0, 1, 0, v9042:0, v8864:0, v8865:0, v8866:0, v8867:0, v8868:0, v8869:0, v8870:0, v8871:0, v8889:0, v8872:0, v8890:0, v8873:0, v8891:0, v8874:0, v8892:0, v8875:0, v8893:0, v8876:0, v8894:0, v8881:0, v8895:0, v8882:0, v8896:0, v8897:0, v8898:0, v8899:0, v8900:0, v8877:0, v8878:0, v8879:0, v8880:0, v8883:0, v8884:0, v8885:0, v8886:0, v8887:0, v8888:0, 3, 7, 2, 4, 8) -> f_1422(v8853:0, v8854:0, v8855:0, v8856:0, v8857:0, v8858:0, v8859:0, v8860:0, 1, 0, v9042:1, 1 + v9042:0, v9564:0, v8868:0, v11296:0, 1 + v11296:0, 1 + v12240:0, v12240:0, v8871:0, v8889:0, v8872:0, v8890:0, v8873:0, v8891:0, v8874:0, v8892:0, v8875:0, v8893:0, v8876:0, v8894:0, v8881:0, v8895:0, v8882:0, v8896:0, v8897:0, v8898:0, v8899:0, v8900:0, v8877:0, v8878:0, v8879:0, v8880:0, v8883:0, v8884:0, v8885:0, v8886:0, v8887:0, v8888:0, 3, 7, 2, 4, 8) :|: v9042:0 > -1 && v9564:0 > 0 && v12240:0 > 0 && v11296:0 > -1
Filtered unneeded arguments:
   f_1422(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49, x50, x51, x52, x53) -> f_1422(x11)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1422(v9042:0) -> f_1422(v9042:1) :|: v9042:0 > -1

----------------------------------------

(16)
Obligation:
Rules:
f_1422(v9042:0) -> f_1422(v9042:1) :|: v9042:0 > -1

----------------------------------------

(17) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, v9042:0) -> f(1, v9042:1) :|: pc = 1 && v9042:0 > -1
Witness term starting non-terminating reduction: f(1, 0)
----------------------------------------

(18)
NO

----------------------------------------

(19) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 21 rulesP rules:
f_1422(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v8864, v8865, v8866, v8867, v8868, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1431(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v8865, v8866, v8867, v8868, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: v9273 = 1 + v9042 && 1 <= v9273
f_1431(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v8865, v8866, v8867, v8868, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1439(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v8865, v8866, v8867, v8868, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: TRUE
f_1439(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v8865, v8866, v8867, v8868, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1447(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8866, v8865, v8867, v8868, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: TRUE
f_1447(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8866, v8865, v8867, v8868, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1455(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v8865, v8867, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: 0 = 0
f_1455(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v8865, v8867, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1463(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v8865, v8867, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: TRUE
f_1463(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v8865, v8867, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1474(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v8867, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: 0 = 0
f_1474(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v8867, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1487(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v8867, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: v9564 != 0
f_1487(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v8867, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1498(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v8867, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: 0 = 0
f_1498(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v8867, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1509(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v8867, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: TRUE
f_1509(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v8867, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1518(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: TRUE
f_1518(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1527(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v11371, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: v11371 = 1 + v11296 && 1 <= v11371
f_1527(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v11371, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1536(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v11371, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: TRUE
f_1536(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v11371, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1545(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v11371, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: TRUE
f_1545(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v11371, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1554(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v11371, v12016, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: TRUE
f_1554(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v11371, v12016, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1563(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v11371, v12016, v12240, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: 1 + v12240 = v12016
f_1563(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v11371, v12016, v12240, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1572(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v11371, v12016, v12240, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: TRUE
f_1572(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v11371, v12016, v12240, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1580(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v11371, v12016, v12240, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: v12240 != 0
f_1580(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v11371, v12016, v12240, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1587(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v11371, v12016, v12240, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: 0 = 0
f_1587(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v11371, v12016, v12240, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1593(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v11371, v12016, v12240, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: TRUE
f_1593(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v11371, v12016, v12240, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1413(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v9273, v9564, v8868, v11296, v11371, v12016, v12240, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: v8881 + v8877 <= 1 + v8895 && 0 <= v8853 && 0 <= v8854 && 1 <= v8856 && 1 <= v8857 && 1 <= v8858 && 1 <= v8859 && 1 <= v8860 && 0 <= v9042 && 1 <= v9273 && 0 <= v8868 && 0 <= v11296 && 1 <= v11371 && 1 <= v8871 && 1 <= v8872 && 1 <= v8873 && 1 <= v8874 && 1 <= v8875 && 1 <= v8876 && 2 <= v8877 && v8878 <= 0 && 1 <= v8879 && 1 <= v8880 && 1 <= v8881 && 1 <= v8882 && 0 <= v8883 && 1 <= v8884 && 0 <= v8885 && 0 <= v8888 && 4 <= v8889 && 4 <= v8890 && 4 <= v8891 && 4 <= v8892 && 8 <= v8893 && 8 <= v8894 && 2 <= v8895 && 8 <= v8896 && 8 <= v8897 && 8 <= v8898 && 8 <= v8899 && 8 <= v8900 && v8871 <= v8889 && v8872 <= v8890 && v8873 <= v8891 && v8874 <= v8892 && v8875 <= v8893 && v8876 <= v8894 && v8881 <= v8895 && 0 <= 0 && v8856 <= v8896 && v8857 <= v8897 && v8858 <= v8898 && v8859 <= v8899 && v8860 <= v8900
f_1413(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v8863, v8864, v8865, v8866, v8867, v8868, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) -> f_1422(v8853, v8854, v8855, v8856, v8857, v8858, v8859, v8860, 1, 0, v9042, v8864, v8865, v8866, v8867, v8868, v8869, v8870, v8871, v8889, v8872, v8890, v8873, v8891, v8874, v8892, v8875, v8893, v8876, v8894, v8881, v8895, v8882, v8896, v8897, v8898, v8899, v8900, v8877, v8878, v8879, v8880, v8883, v8884, v8885, v8886, v8887, v8888, 3, 7, 2, 4, 8) :|: TRUE
Combined rules. Obtained 4 rulesP rules:
f_1422(v8853:0, v8854:0, v8855:0, v8856:0, v8857:0, v8858:0, v8859:0, v8860:0, 1, 0, v9042:0, v8864:0, v8865:0, v8866:0, v8867:0, v8868:0, v8869:0, v8870:0, v8871:0, v8889:0, v8872:0, v8890:0, v8873:0, v8891:0, v8874:0, v8892:0, v8875:0, v8893:0, v8876:0, v8894:0, v8881:0, v8895:0, v8882:0, v8896:0, v8897:0, v8898:0, v8899:0, v8900:0, v8877:0, v8878:0, v8879:0, v8880:0, v8883:0, v8884:0, v8885:0, v8886:0, v8887:0, v8888:0, 3, 7, 2, 4, 8) -> f_1422(v8853:0, v8854:0, v8855:0, v8856:0, v8857:0, v8858:0, v8859:0, v8860:0, 1, 0, v9042:1, 1 + v9042:0, v9564:0, v8868:0, v11296:0, 1 + v11296:0, 1 + v12240:0, v12240:0, v8871:0, v8889:0, v8872:0, v8890:0, v8873:0, v8891:0, v8874:0, v8892:0, v8875:0, v8893:0, v8876:0, v8894:0, v8881:0, v8895:0, v8882:0, v8896:0, v8897:0, v8898:0, v8899:0, v8900:0, v8877:0, v8878:0, v8879:0, v8880:0, v8883:0, v8884:0, v8885:0, v8886:0, v8887:0, v8888:0, 3, 7, 2, 4, 8) :|: v8853:0 > -1 && v8881:0 + v8877:0 <= 1 + v8895:0 && v8854:0 > -1 && v8856:0 > 0 && v8857:0 > 0 && v8858:0 > 0 && v8859:0 > 0 && v8860:0 > 0 && v9042:0 > -1 && v8868:0 > -1 && v11296:0 > -1 && v8871:0 > 0 && v8872:0 > 0 && v8873:0 > 0 && v8874:0 > 0 && v8875:0 > 0 && v8876:0 > 0 && v8877:0 > 1 && v8878:0 < 1 && v8879:0 > 0 && v8880:0 > 0 && v8881:0 > 0 && v8882:0 > 0 && v8883:0 > -1 && v8884:0 > 0 && v8885:0 > -1 && v8888:0 > -1 && v8889:0 > 3 && v8890:0 > 3 && v8891:0 > 3 && v8892:0 > 3 && v8893:0 > 7 && v8894:0 > 7 && v8895:0 > 1 && v8896:0 > 7 && v8897:0 > 7 && v8898:0 > 7 && v8899:0 > 7 && v8900:0 > 7 && v8889:0 >= v8871:0 && v9564:0 < 0 && v8890:0 >= v8872:0 && v8891:0 >= v8873:0 && v8892:0 >= v8874:0 && v8893:0 >= v8875:0 && v8894:0 >= v8876:0 && v8895:0 >= v8881:0 && v8896:0 >= v8856:0 && v8897:0 >= v8857:0 && v8898:0 >= v8858:0 && v12240:0 < 0 && v8900:0 >= v8860:0 && v8899:0 >= v8859:0
f_1422(v8853:0, v8854:0, v8855:0, v8856:0, v8857:0, v8858:0, v8859:0, v8860:0, 1, 0, v9042:0, v8864:0, v8865:0, v8866:0, v8867:0, v8868:0, v8869:0, v8870:0, v8871:0, v8889:0, v8872:0, v8890:0, v8873:0, v8891:0, v8874:0, v8892:0, v8875:0, v8893:0, v8876:0, v8894:0, v8881:0, v8895:0, v8882:0, v8896:0, v8897:0, v8898:0, v8899:0, v8900:0, v8877:0, v8878:0, v8879:0, v8880:0, v8883:0, v8884:0, v8885:0, v8886:0, v8887:0, v8888:0, 3, 7, 2, 4, 8) -> f_1422(v8853:0, v8854:0, v8855:0, v8856:0, v8857:0, v8858:0, v8859:0, v8860:0, 1, 0, v9042:1, 1 + v9042:0, v9564:0, v8868:0, v11296:0, 1 + v11296:0, 1 + v12240:0, v12240:0, v8871:0, v8889:0, v8872:0, v8890:0, v8873:0, v8891:0, v8874:0, v8892:0, v8875:0, v8893:0, v8876:0, v8894:0, v8881:0, v8895:0, v8882:0, v8896:0, v8897:0, v8898:0, v8899:0, v8900:0, v8877:0, v8878:0, v8879:0, v8880:0, v8883:0, v8884:0, v8885:0, v8886:0, v8887:0, v8888:0, 3, 7, 2, 4, 8) :|: v8853:0 > -1 && v8881:0 + v8877:0 <= 1 + v8895:0 && v8854:0 > -1 && v8856:0 > 0 && v8857:0 > 0 && v8858:0 > 0 && v8859:0 > 0 && v8860:0 > 0 && v9042:0 > -1 && v8868:0 > -1 && v11296:0 > -1 && v8871:0 > 0 && v8872:0 > 0 && v8873:0 > 0 && v8874:0 > 0 && v8875:0 > 0 && v8876:0 > 0 && v8877:0 > 1 && v8878:0 < 1 && v8879:0 > 0 && v8880:0 > 0 && v8881:0 > 0 && v8882:0 > 0 && v8883:0 > -1 && v8884:0 > 0 && v8885:0 > -1 && v8888:0 > -1 && v8889:0 > 3 && v8890:0 > 3 && v8891:0 > 3 && v8892:0 > 3 && v8893:0 > 7 && v8894:0 > 7 && v8895:0 > 1 && v8896:0 > 7 && v8897:0 > 7 && v8898:0 > 7 && v8899:0 > 7 && v8900:0 > 7 && v8889:0 >= v8871:0 && v9564:0 < 0 && v8890:0 >= v8872:0 && v8891:0 >= v8873:0 && v8892:0 >= v8874:0 && v8893:0 >= v8875:0 && v8894:0 >= v8876:0 && v8895:0 >= v8881:0 && v8896:0 >= v8856:0 && v8897:0 >= v8857:0 && v8898:0 >= v8858:0 && v12240:0 > 0 && v8900:0 >= v8860:0 && v8899:0 >= v8859:0
f_1422(v8853:0, v8854:0, v8855:0, v8856:0, v8857:0, v8858:0, v8859:0, v8860:0, 1, 0, v9042:0, v8864:0, v8865:0, v8866:0, v8867:0, v8868:0, v8869:0, v8870:0, v8871:0, v8889:0, v8872:0, v8890:0, v8873:0, v8891:0, v8874:0, v8892:0, v8875:0, v8893:0, v8876:0, v8894:0, v8881:0, v8895:0, v8882:0, v8896:0, v8897:0, v8898:0, v8899:0, v8900:0, v8877:0, v8878:0, v8879:0, v8880:0, v8883:0, v8884:0, v8885:0, v8886:0, v8887:0, v8888:0, 3, 7, 2, 4, 8) -> f_1422(v8853:0, v8854:0, v8855:0, v8856:0, v8857:0, v8858:0, v8859:0, v8860:0, 1, 0, v9042:1, 1 + v9042:0, v9564:0, v8868:0, v11296:0, 1 + v11296:0, 1 + v12240:0, v12240:0, v8871:0, v8889:0, v8872:0, v8890:0, v8873:0, v8891:0, v8874:0, v8892:0, v8875:0, v8893:0, v8876:0, v8894:0, v8881:0, v8895:0, v8882:0, v8896:0, v8897:0, v8898:0, v8899:0, v8900:0, v8877:0, v8878:0, v8879:0, v8880:0, v8883:0, v8884:0, v8885:0, v8886:0, v8887:0, v8888:0, 3, 7, 2, 4, 8) :|: v8853:0 > -1 && v8881:0 + v8877:0 <= 1 + v8895:0 && v8854:0 > -1 && v8856:0 > 0 && v8857:0 > 0 && v8858:0 > 0 && v8859:0 > 0 && v8860:0 > 0 && v9042:0 > -1 && v8868:0 > -1 && v11296:0 > -1 && v8871:0 > 0 && v8872:0 > 0 && v8873:0 > 0 && v8874:0 > 0 && v8875:0 > 0 && v8876:0 > 0 && v8877:0 > 1 && v8878:0 < 1 && v8879:0 > 0 && v8880:0 > 0 && v8881:0 > 0 && v8882:0 > 0 && v8883:0 > -1 && v8884:0 > 0 && v8885:0 > -1 && v8888:0 > -1 && v8889:0 > 3 && v8890:0 > 3 && v8891:0 > 3 && v8892:0 > 3 && v8893:0 > 7 && v8894:0 > 7 && v8895:0 > 1 && v8896:0 > 7 && v8897:0 > 7 && v8898:0 > 7 && v8899:0 > 7 && v8900:0 > 7 && v8889:0 >= v8871:0 && v9564:0 > 0 && v8890:0 >= v8872:0 && v8891:0 >= v8873:0 && v8892:0 >= v8874:0 && v8893:0 >= v8875:0 && v8894:0 >= v8876:0 && v8895:0 >= v8881:0 && v8896:0 >= v8856:0 && v8897:0 >= v8857:0 && v8898:0 >= v8858:0 && v12240:0 < 0 && v8900:0 >= v8860:0 && v8899:0 >= v8859:0
f_1422(v8853:0, v8854:0, v8855:0, v8856:0, v8857:0, v8858:0, v8859:0, v8860:0, 1, 0, v9042:0, v8864:0, v8865:0, v8866:0, v8867:0, v8868:0, v8869:0, v8870:0, v8871:0, v8889:0, v8872:0, v8890:0, v8873:0, v8891:0, v8874:0, v8892:0, v8875:0, v8893:0, v8876:0, v8894:0, v8881:0, v8895:0, v8882:0, v8896:0, v8897:0, v8898:0, v8899:0, v8900:0, v8877:0, v8878:0, v8879:0, v8880:0, v8883:0, v8884:0, v8885:0, v8886:0, v8887:0, v8888:0, 3, 7, 2, 4, 8) -> f_1422(v8853:0, v8854:0, v8855:0, v8856:0, v8857:0, v8858:0, v8859:0, v8860:0, 1, 0, v9042:1, 1 + v9042:0, v9564:0, v8868:0, v11296:0, 1 + v11296:0, 1 + v12240:0, v12240:0, v8871:0, v8889:0, v8872:0, v8890:0, v8873:0, v8891:0, v8874:0, v8892:0, v8875:0, v8893:0, v8876:0, v8894:0, v8881:0, v8895:0, v8882:0, v8896:0, v8897:0, v8898:0, v8899:0, v8900:0, v8877:0, v8878:0, v8879:0, v8880:0, v8883:0, v8884:0, v8885:0, v8886:0, v8887:0, v8888:0, 3, 7, 2, 4, 8) :|: v8853:0 > -1 && v8881:0 + v8877:0 <= 1 + v8895:0 && v8854:0 > -1 && v8856:0 > 0 && v8857:0 > 0 && v8858:0 > 0 && v8859:0 > 0 && v8860:0 > 0 && v9042:0 > -1 && v8868:0 > -1 && v11296:0 > -1 && v8871:0 > 0 && v8872:0 > 0 && v8873:0 > 0 && v8874:0 > 0 && v8875:0 > 0 && v8876:0 > 0 && v8877:0 > 1 && v8878:0 < 1 && v8879:0 > 0 && v8880:0 > 0 && v8881:0 > 0 && v8882:0 > 0 && v8883:0 > -1 && v8884:0 > 0 && v8885:0 > -1 && v8888:0 > -1 && v8889:0 > 3 && v8890:0 > 3 && v8891:0 > 3 && v8892:0 > 3 && v8893:0 > 7 && v8894:0 > 7 && v8895:0 > 1 && v8896:0 > 7 && v8897:0 > 7 && v8898:0 > 7 && v8899:0 > 7 && v8900:0 > 7 && v8889:0 >= v8871:0 && v9564:0 > 0 && v8890:0 >= v8872:0 && v8891:0 >= v8873:0 && v8892:0 >= v8874:0 && v8893:0 >= v8875:0 && v8894:0 >= v8876:0 && v8895:0 >= v8881:0 && v8896:0 >= v8856:0 && v8897:0 >= v8857:0 && v8898:0 >= v8858:0 && v12240:0 > 0 && v8900:0 >= v8860:0 && v8899:0 >= v8859:0
Filtered unneeded arguments:
   f_1422(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49, x50, x51, x52, x53) -> f_1422(x1, x2, x4, x5, x6, x7, x8, x11, x16, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x48)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1422(v8853:0, v8854:0, v8856:0, v8857:0, v8858:0, v8859:0, v8860:0, v9042:0, v8868:0, v8871:0, v8889:0, v8872:0, v8890:0, v8873:0, v8891:0, v8874:0, v8892:0, v8875:0, v8893:0, v8876:0, v8894:0, v8881:0, v8895:0, v8882:0, v8896:0, v8897:0, v8898:0, v8899:0, v8900:0, v8877:0, v8878:0, v8879:0, v8880:0, v8883:0, v8884:0, v8885:0, v8888:0) -> f_1422(v8853:0, v8854:0, v8856:0, v8857:0, v8858:0, v8859:0, v8860:0, v9042:1, 1 + v11296:0, v8871:0, v8889:0, v8872:0, v8890:0, v8873:0, v8891:0, v8874:0, v8892:0, v8875:0, v8893:0, v8876:0, v8894:0, v8881:0, v8895:0, v8882:0, v8896:0, v8897:0, v8898:0, v8899:0, v8900:0, v8877:0, v8878:0, v8879:0, v8880:0, v8883:0, v8884:0, v8885:0, v8888:0) :|: v8881:0 + v8877:0 <= 1 + v8895:0 && v8853:0 > -1 && v8854:0 > -1 && v8856:0 > 0 && v8857:0 > 0 && v8858:0 > 0 && v8859:0 > 0 && v8860:0 > 0 && v9042:0 > -1 && v8868:0 > -1 && v11296:0 > -1 && v8871:0 > 0 && v8872:0 > 0 && v8873:0 > 0 && v8874:0 > 0 && v8875:0 > 0 && v8876:0 > 0 && v8877:0 > 1 && v8878:0 < 1 && v8879:0 > 0 && v8880:0 > 0 && v8881:0 > 0 && v8882:0 > 0 && v8883:0 > -1 && v8884:0 > 0 && v8885:0 > -1 && v8888:0 > -1 && v8889:0 > 3 && v8890:0 > 3 && v8891:0 > 3 && v8892:0 > 3 && v8893:0 > 7 && v8894:0 > 7 && v8895:0 > 1 && v8896:0 > 7 && v8897:0 > 7 && v8898:0 > 7 && v8899:0 > 7 && v8900:0 > 7 && v8889:0 >= v8871:0 && v8890:0 >= v8872:0 && v8891:0 >= v8873:0 && v8892:0 >= v8874:0 && v8893:0 >= v8875:0 && v8894:0 >= v8876:0 && v8895:0 >= v8881:0 && v8896:0 >= v8856:0 && v8897:0 >= v8857:0 && v8898:0 >= v8858:0 && v8899:0 >= v8859:0 && v8900:0 >= v8860:0

----------------------------------------

(20)
Obligation:
Rules:
f_1422(v8853:0, v8854:0, v8856:0, v8857:0, v8858:0, v8859:0, v8860:0, v9042:0, v8868:0, v8871:0, v8889:0, v8872:0, v8890:0, v8873:0, v8891:0, v8874:0, v8892:0, v8875:0, v8893:0, v8876:0, v8894:0, v8881:0, v8895:0, v8882:0, v8896:0, v8897:0, v8898:0, v8899:0, v8900:0, v8877:0, v8878:0, v8879:0, v8880:0, v8883:0, v8884:0, v8885:0, v8888:0) -> f_1422(v8853:0, v8854:0, v8856:0, v8857:0, v8858:0, v8859:0, v8860:0, v9042:1, 1 + v11296:0, v8871:0, v8889:0, v8872:0, v8890:0, v8873:0, v8891:0, v8874:0, v8892:0, v8875:0, v8893:0, v8876:0, v8894:0, v8881:0, v8895:0, v8882:0, v8896:0, v8897:0, v8898:0, v8899:0, v8900:0, v8877:0, v8878:0, v8879:0, v8880:0, v8883:0, v8884:0, v8885:0, v8888:0) :|: v8881:0 + v8877:0 <= 1 + v8895:0 && v8853:0 > -1 && v8854:0 > -1 && v8856:0 > 0 && v8857:0 > 0 && v8858:0 > 0 && v8859:0 > 0 && v8860:0 > 0 && v9042:0 > -1 && v8868:0 > -1 && v11296:0 > -1 && v8871:0 > 0 && v8872:0 > 0 && v8873:0 > 0 && v8874:0 > 0 && v8875:0 > 0 && v8876:0 > 0 && v8877:0 > 1 && v8878:0 < 1 && v8879:0 > 0 && v8880:0 > 0 && v8881:0 > 0 && v8882:0 > 0 && v8883:0 > -1 && v8884:0 > 0 && v8885:0 > -1 && v8888:0 > -1 && v8889:0 > 3 && v8890:0 > 3 && v8891:0 > 3 && v8892:0 > 3 && v8893:0 > 7 && v8894:0 > 7 && v8895:0 > 1 && v8896:0 > 7 && v8897:0 > 7 && v8898:0 > 7 && v8899:0 > 7 && v8900:0 > 7 && v8889:0 >= v8871:0 && v8890:0 >= v8872:0 && v8891:0 >= v8873:0 && v8892:0 >= v8874:0 && v8893:0 >= v8875:0 && v8894:0 >= v8876:0 && v8895:0 >= v8881:0 && v8896:0 >= v8856:0 && v8897:0 >= v8857:0 && v8898:0 >= v8858:0 && v8899:0 >= v8859:0 && v8900:0 >= v8860:0

----------------------------------------

(21) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(22)
Obligation:
Rules:
f_1422(v8853:0:0, v8854:0:0, v8856:0:0, v8857:0:0, v8858:0:0, v8859:0:0, v8860:0:0, v9042:0:0, v8868:0:0, v8871:0:0, v8889:0:0, v8872:0:0, v8890:0:0, v8873:0:0, v8891:0:0, v8874:0:0, v8892:0:0, v8875:0:0, v8893:0:0, v8876:0:0, v8894:0:0, v8881:0:0, v8895:0:0, v8882:0:0, v8896:0:0, v8897:0:0, v8898:0:0, v8899:0:0, v8900:0:0, v8877:0:0, v8878:0:0, v8879:0:0, v8880:0:0, v8883:0:0, v8884:0:0, v8885:0:0, v8888:0:0) -> f_1422(v8853:0:0, v8854:0:0, v8856:0:0, v8857:0:0, v8858:0:0, v8859:0:0, v8860:0:0, v9042:1:0, 1 + v11296:0:0, v8871:0:0, v8889:0:0, v8872:0:0, v8890:0:0, v8873:0:0, v8891:0:0, v8874:0:0, v8892:0:0, v8875:0:0, v8893:0:0, v8876:0:0, v8894:0:0, v8881:0:0, v8895:0:0, v8882:0:0, v8896:0:0, v8897:0:0, v8898:0:0, v8899:0:0, v8900:0:0, v8877:0:0, v8878:0:0, v8879:0:0, v8880:0:0, v8883:0:0, v8884:0:0, v8885:0:0, v8888:0:0) :|: v8899:0:0 >= v8859:0:0 && v8900:0:0 >= v8860:0:0 && v8898:0:0 >= v8858:0:0 && v8897:0:0 >= v8857:0:0 && v8896:0:0 >= v8856:0:0 && v8895:0:0 >= v8881:0:0 && v8894:0:0 >= v8876:0:0 && v8893:0:0 >= v8875:0:0 && v8892:0:0 >= v8874:0:0 && v8891:0:0 >= v8873:0:0 && v8890:0:0 >= v8872:0:0 && v8889:0:0 >= v8871:0:0 && v8900:0:0 > 7 && v8899:0:0 > 7 && v8898:0:0 > 7 && v8897:0:0 > 7 && v8896:0:0 > 7 && v8895:0:0 > 1 && v8894:0:0 > 7 && v8893:0:0 > 7 && v8892:0:0 > 3 && v8891:0:0 > 3 && v8890:0:0 > 3 && v8889:0:0 > 3 && v8888:0:0 > -1 && v8885:0:0 > -1 && v8884:0:0 > 0 && v8883:0:0 > -1 && v8882:0:0 > 0 && v8881:0:0 > 0 && v8880:0:0 > 0 && v8879:0:0 > 0 && v8878:0:0 < 1 && v8877:0:0 > 1 && v8876:0:0 > 0 && v8875:0:0 > 0 && v8874:0:0 > 0 && v8873:0:0 > 0 && v8872:0:0 > 0 && v8871:0:0 > 0 && v11296:0:0 > -1 && v8868:0:0 > -1 && v9042:0:0 > -1 && v8860:0:0 > 0 && v8859:0:0 > 0 && v8858:0:0 > 0 && v8857:0:0 > 0 && v8856:0:0 > 0 && v8854:0:0 > -1 && v8853:0:0 > -1 && v8881:0:0 + v8877:0:0 <= 1 + v8895:0:0

----------------------------------------

(23)
Obligation:
SCC
----------------------------------------

(24) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 21 rulesP rules:
f_1408(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8366, v8367, v8368, v8369, v8370, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1418(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v8367, v8368, v8369, v8370, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: v8979 = 1 + v8599 && 1 <= v8979
f_1418(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v8367, v8368, v8369, v8370, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1427(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v8367, v8368, v8369, v8370, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: TRUE
f_1427(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v8367, v8368, v8369, v8370, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1435(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8368, v8367, v8369, v8370, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: TRUE
f_1435(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8368, v8367, v8369, v8370, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1443(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v8367, v8369, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: 0 = 0
f_1443(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v8367, v8369, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1451(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v8367, v8369, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: TRUE
f_1451(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v8367, v8369, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1459(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v8369, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: 0 = 0
f_1459(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v8369, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1470(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v8369, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: v9338 != 0
f_1470(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v8369, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1481(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v8369, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: 0 = 0
f_1481(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v8369, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1493(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v8369, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: TRUE
f_1493(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v8369, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1504(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: TRUE
f_1504(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1514(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v11190, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: v11190 = 1 + v10777 && 1 <= v11190
f_1514(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v11190, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1523(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v11190, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: TRUE
f_1523(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v11190, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1532(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v11190, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: TRUE
f_1532(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v11190, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1541(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v11190, v11836, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: TRUE
f_1541(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v11190, v11836, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1550(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v11190, v11836, v12013, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: 1 + v12013 = v11836
f_1550(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v11190, v11836, v12013, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1559(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v11190, v11836, v12013, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: TRUE
f_1559(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v11190, v11836, v12013, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1567(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v11190, v11836, v12013, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: v12013 != 0
f_1567(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v11190, v11836, v12013, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1575(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v11190, v11836, v12013, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: 0 = 0
f_1575(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v11190, v11836, v12013, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1583(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v11190, v11836, v12013, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: TRUE
f_1583(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v11190, v11836, v12013, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1397(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v11190, v11836, v12013, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: TRUE
f_1397(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8365, v8366, v8367, v8368, v8369, v8370, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1408(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8366, v8367, v8368, v8369, v8370, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: TRUE
Combined rules. Obtained 4 rulesP rules:
f_1408(v8355:0, v8356:0, v8357:0, v8358:0, v8359:0, v8360:0, v8361:0, v8362:0, 1, 0, v8599:0, v8366:0, v8367:0, v8368:0, v8369:0, v8370:0, v8371:0, v8372:0, v8373:0, v8391:0, v8374:0, v8392:0, v8375:0, v8393:0, v8376:0, v8394:0, v8377:0, v8395:0, v8378:0, v8396:0, v8383:0, v8397:0, v8384:0, v8398:0, v8399:0, v8400:0, v8401:0, v8402:0, v8403:0, v8379:0, v8380:0, v8381:0, v8382:0, v8385:0, v8386:0, v8387:0, v8388:0, v8389:0, v8390:0, 3, 7, 2, 4, 8) -> f_1408(v8355:0, v8356:0, v8357:0, v8358:0, v8359:0, v8360:0, v8361:0, v8362:0, 1, 0, v8599:1, 1 + v8599:0, v9338:0, v8370:0, v10777:0, 1 + v10777:0, 1 + v12013:0, v12013:0, v8373:0, v8391:0, v8374:0, v8392:0, v8375:0, v8393:0, v8376:0, v8394:0, v8377:0, v8395:0, v8378:0, v8396:0, v8383:0, v8397:0, v8384:0, v8398:0, v8399:0, v8400:0, v8401:0, v8402:0, v8403:0, v8379:0, v8380:0, v8381:0, v8382:0, v8385:0, v8386:0, v8387:0, v8388:0, v8389:0, v8390:0, 3, 7, 2, 4, 8) :|: v8599:0 > -1 && v9338:0 < 0 && v12013:0 < 0 && v10777:0 > -1
f_1408(v8355:0, v8356:0, v8357:0, v8358:0, v8359:0, v8360:0, v8361:0, v8362:0, 1, 0, v8599:0, v8366:0, v8367:0, v8368:0, v8369:0, v8370:0, v8371:0, v8372:0, v8373:0, v8391:0, v8374:0, v8392:0, v8375:0, v8393:0, v8376:0, v8394:0, v8377:0, v8395:0, v8378:0, v8396:0, v8383:0, v8397:0, v8384:0, v8398:0, v8399:0, v8400:0, v8401:0, v8402:0, v8403:0, v8379:0, v8380:0, v8381:0, v8382:0, v8385:0, v8386:0, v8387:0, v8388:0, v8389:0, v8390:0, 3, 7, 2, 4, 8) -> f_1408(v8355:0, v8356:0, v8357:0, v8358:0, v8359:0, v8360:0, v8361:0, v8362:0, 1, 0, v8599:1, 1 + v8599:0, v9338:0, v8370:0, v10777:0, 1 + v10777:0, 1 + v12013:0, v12013:0, v8373:0, v8391:0, v8374:0, v8392:0, v8375:0, v8393:0, v8376:0, v8394:0, v8377:0, v8395:0, v8378:0, v8396:0, v8383:0, v8397:0, v8384:0, v8398:0, v8399:0, v8400:0, v8401:0, v8402:0, v8403:0, v8379:0, v8380:0, v8381:0, v8382:0, v8385:0, v8386:0, v8387:0, v8388:0, v8389:0, v8390:0, 3, 7, 2, 4, 8) :|: v8599:0 > -1 && v9338:0 < 0 && v12013:0 > 0 && v10777:0 > -1
f_1408(v8355:0, v8356:0, v8357:0, v8358:0, v8359:0, v8360:0, v8361:0, v8362:0, 1, 0, v8599:0, v8366:0, v8367:0, v8368:0, v8369:0, v8370:0, v8371:0, v8372:0, v8373:0, v8391:0, v8374:0, v8392:0, v8375:0, v8393:0, v8376:0, v8394:0, v8377:0, v8395:0, v8378:0, v8396:0, v8383:0, v8397:0, v8384:0, v8398:0, v8399:0, v8400:0, v8401:0, v8402:0, v8403:0, v8379:0, v8380:0, v8381:0, v8382:0, v8385:0, v8386:0, v8387:0, v8388:0, v8389:0, v8390:0, 3, 7, 2, 4, 8) -> f_1408(v8355:0, v8356:0, v8357:0, v8358:0, v8359:0, v8360:0, v8361:0, v8362:0, 1, 0, v8599:1, 1 + v8599:0, v9338:0, v8370:0, v10777:0, 1 + v10777:0, 1 + v12013:0, v12013:0, v8373:0, v8391:0, v8374:0, v8392:0, v8375:0, v8393:0, v8376:0, v8394:0, v8377:0, v8395:0, v8378:0, v8396:0, v8383:0, v8397:0, v8384:0, v8398:0, v8399:0, v8400:0, v8401:0, v8402:0, v8403:0, v8379:0, v8380:0, v8381:0, v8382:0, v8385:0, v8386:0, v8387:0, v8388:0, v8389:0, v8390:0, 3, 7, 2, 4, 8) :|: v8599:0 > -1 && v9338:0 > 0 && v12013:0 < 0 && v10777:0 > -1
f_1408(v8355:0, v8356:0, v8357:0, v8358:0, v8359:0, v8360:0, v8361:0, v8362:0, 1, 0, v8599:0, v8366:0, v8367:0, v8368:0, v8369:0, v8370:0, v8371:0, v8372:0, v8373:0, v8391:0, v8374:0, v8392:0, v8375:0, v8393:0, v8376:0, v8394:0, v8377:0, v8395:0, v8378:0, v8396:0, v8383:0, v8397:0, v8384:0, v8398:0, v8399:0, v8400:0, v8401:0, v8402:0, v8403:0, v8379:0, v8380:0, v8381:0, v8382:0, v8385:0, v8386:0, v8387:0, v8388:0, v8389:0, v8390:0, 3, 7, 2, 4, 8) -> f_1408(v8355:0, v8356:0, v8357:0, v8358:0, v8359:0, v8360:0, v8361:0, v8362:0, 1, 0, v8599:1, 1 + v8599:0, v9338:0, v8370:0, v10777:0, 1 + v10777:0, 1 + v12013:0, v12013:0, v8373:0, v8391:0, v8374:0, v8392:0, v8375:0, v8393:0, v8376:0, v8394:0, v8377:0, v8395:0, v8378:0, v8396:0, v8383:0, v8397:0, v8384:0, v8398:0, v8399:0, v8400:0, v8401:0, v8402:0, v8403:0, v8379:0, v8380:0, v8381:0, v8382:0, v8385:0, v8386:0, v8387:0, v8388:0, v8389:0, v8390:0, 3, 7, 2, 4, 8) :|: v8599:0 > -1 && v9338:0 > 0 && v12013:0 > 0 && v10777:0 > -1
Filtered unneeded arguments:
   f_1408(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49, x50, x51, x52, x53, x54) -> f_1408(x11)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1408(v8599:0) -> f_1408(v8599:1) :|: v8599:0 > -1

----------------------------------------

(25)
Obligation:
Rules:
f_1408(v8599:0) -> f_1408(v8599:1) :|: v8599:0 > -1

----------------------------------------

(26) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, v8599:0) -> f(1, v8599:1) :|: pc = 1 && v8599:0 > -1
Witness term starting non-terminating reduction: f(1, 0)
----------------------------------------

(27)
NO

----------------------------------------

(28) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 21 rulesP rules:
f_1408(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8366, v8367, v8368, v8369, v8370, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1418(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v8367, v8368, v8369, v8370, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: v8979 = 1 + v8599 && 1 <= v8979
f_1418(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v8367, v8368, v8369, v8370, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1427(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v8367, v8368, v8369, v8370, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: TRUE
f_1427(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v8367, v8368, v8369, v8370, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1435(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8368, v8367, v8369, v8370, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: TRUE
f_1435(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8368, v8367, v8369, v8370, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1443(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v8367, v8369, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: 0 = 0
f_1443(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v8367, v8369, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1451(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v8367, v8369, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: TRUE
f_1451(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v8367, v8369, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1459(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v8369, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: 0 = 0
f_1459(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v8369, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1470(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v8369, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: v9338 != 0
f_1470(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v8369, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1481(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v8369, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: 0 = 0
f_1481(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v8369, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1493(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v8369, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: TRUE
f_1493(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v8369, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1504(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: TRUE
f_1504(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1514(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v11190, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: v11190 = 1 + v10777 && 1 <= v11190
f_1514(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v11190, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1523(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v11190, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: TRUE
f_1523(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v11190, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1532(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v11190, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: TRUE
f_1532(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v11190, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1541(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v11190, v11836, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: TRUE
f_1541(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v11190, v11836, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1550(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v11190, v11836, v12013, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: 1 + v12013 = v11836
f_1550(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v11190, v11836, v12013, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1559(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v11190, v11836, v12013, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: TRUE
f_1559(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v11190, v11836, v12013, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1567(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v11190, v11836, v12013, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: v12013 != 0
f_1567(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v11190, v11836, v12013, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1575(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v11190, v11836, v12013, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: 0 = 0
f_1575(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v11190, v11836, v12013, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1583(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v11190, v11836, v12013, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: TRUE
f_1583(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v11190, v11836, v12013, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1397(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8979, v9338, v8370, v10777, v11190, v11836, v12013, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: v8380 <= v8382 && v8383 + v8379 <= 1 + v8397 && v8384 + v8380 <= 1 + v8398 && 0 <= v8355 && 0 <= v8356 && 1 <= v8358 && 1 <= v8359 && 1 <= v8360 && 1 <= v8361 && 1 <= v8362 && 0 <= v8599 && 1 <= v8979 && 0 <= v8370 && 0 <= v10777 && 1 <= v11190 && 1 <= v8373 && 1 <= v8374 && 1 <= v8375 && 1 <= v8376 && 1 <= v8377 && 1 <= v8378 && 2 <= v8379 && 1 <= v8380 && 1 <= v8381 && 1 <= v8382 && 1 <= v8383 && 1 <= v8384 && 0 <= v8385 && 1 <= v8386 && 0 <= v8387 && 0 <= v8390 && 4 <= v8391 && 4 <= v8392 && 4 <= v8393 && 4 <= v8394 && 8 <= v8395 && 8 <= v8396 && 2 <= v8397 && 1 <= v8398 && 8 <= v8399 && 8 <= v8400 && 8 <= v8401 && 8 <= v8402 && 8 <= v8403 && v8373 <= v8391 && v8374 <= v8392 && v8375 <= v8393 && v8376 <= v8394 && v8377 <= v8395 && v8378 <= v8396 && v8383 <= v8397 && v8384 <= v8398 && v8358 <= v8399 && v8359 <= v8400 && v8360 <= v8401 && v8361 <= v8402 && v8362 <= v8403
f_1397(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8365, v8366, v8367, v8368, v8369, v8370, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) -> f_1408(v8355, v8356, v8357, v8358, v8359, v8360, v8361, v8362, 1, 0, v8599, v8366, v8367, v8368, v8369, v8370, v8371, v8372, v8373, v8391, v8374, v8392, v8375, v8393, v8376, v8394, v8377, v8395, v8378, v8396, v8383, v8397, v8384, v8398, v8399, v8400, v8401, v8402, v8403, v8379, v8380, v8381, v8382, v8385, v8386, v8387, v8388, v8389, v8390, 3, 7, 2, 4, 8) :|: TRUE
Combined rules. Obtained 4 rulesP rules:
f_1408(v8355:0, v8356:0, v8357:0, v8358:0, v8359:0, v8360:0, v8361:0, v8362:0, 1, 0, v8599:0, v8366:0, v8367:0, v8368:0, v8369:0, v8370:0, v8371:0, v8372:0, v8373:0, v8391:0, v8374:0, v8392:0, v8375:0, v8393:0, v8376:0, v8394:0, v8377:0, v8395:0, v8378:0, v8396:0, v8383:0, v8397:0, v8384:0, v8398:0, v8399:0, v8400:0, v8401:0, v8402:0, v8403:0, v8379:0, v8380:0, v8381:0, v8382:0, v8385:0, v8386:0, v8387:0, v8388:0, v8389:0, v8390:0, 3, 7, 2, 4, 8) -> f_1408(v8355:0, v8356:0, v8357:0, v8358:0, v8359:0, v8360:0, v8361:0, v8362:0, 1, 0, v8599:1, 1 + v8599:0, v9338:0, v8370:0, v10777:0, 1 + v10777:0, 1 + v12013:0, v12013:0, v8373:0, v8391:0, v8374:0, v8392:0, v8375:0, v8393:0, v8376:0, v8394:0, v8377:0, v8395:0, v8378:0, v8396:0, v8383:0, v8397:0, v8384:0, v8398:0, v8399:0, v8400:0, v8401:0, v8402:0, v8403:0, v8379:0, v8380:0, v8381:0, v8382:0, v8385:0, v8386:0, v8387:0, v8388:0, v8389:0, v8390:0, 3, 7, 2, 4, 8) :|: v8383:0 + v8379:0 <= 1 + v8397:0 && v8382:0 >= v8380:0 && v8384:0 + v8380:0 <= 1 + v8398:0 && v8355:0 > -1 && v8356:0 > -1 && v8358:0 > 0 && v8359:0 > 0 && v8360:0 > 0 && v8361:0 > 0 && v8362:0 > 0 && v8599:0 > -1 && v8370:0 > -1 && v10777:0 > -1 && v8373:0 > 0 && v8374:0 > 0 && v8375:0 > 0 && v8376:0 > 0 && v8377:0 > 0 && v8378:0 > 0 && v8379:0 > 1 && v8380:0 > 0 && v8381:0 > 0 && v8382:0 > 0 && v8383:0 > 0 && v8384:0 > 0 && v8385:0 > -1 && v8386:0 > 0 && v8387:0 > -1 && v8390:0 > -1 && v8391:0 > 3 && v8392:0 > 3 && v8393:0 > 3 && v8394:0 > 3 && v8395:0 > 7 && v8396:0 > 7 && v8397:0 > 1 && v8398:0 > 0 && v8399:0 > 7 && v8400:0 > 7 && v8401:0 > 7 && v8402:0 > 7 && v8403:0 > 7 && v8391:0 >= v8373:0 && v9338:0 < 0 && v8392:0 >= v8374:0 && v8393:0 >= v8375:0 && v8394:0 >= v8376:0 && v8395:0 >= v8377:0 && v8396:0 >= v8378:0 && v8397:0 >= v8383:0 && v8398:0 >= v8384:0 && v8399:0 >= v8358:0 && v8400:0 >= v8359:0 && v8401:0 >= v8360:0 && v12013:0 < 0 && v8403:0 >= v8362:0 && v8402:0 >= v8361:0
f_1408(v8355:0, v8356:0, v8357:0, v8358:0, v8359:0, v8360:0, v8361:0, v8362:0, 1, 0, v8599:0, v8366:0, v8367:0, v8368:0, v8369:0, v8370:0, v8371:0, v8372:0, v8373:0, v8391:0, v8374:0, v8392:0, v8375:0, v8393:0, v8376:0, v8394:0, v8377:0, v8395:0, v8378:0, v8396:0, v8383:0, v8397:0, v8384:0, v8398:0, v8399:0, v8400:0, v8401:0, v8402:0, v8403:0, v8379:0, v8380:0, v8381:0, v8382:0, v8385:0, v8386:0, v8387:0, v8388:0, v8389:0, v8390:0, 3, 7, 2, 4, 8) -> f_1408(v8355:0, v8356:0, v8357:0, v8358:0, v8359:0, v8360:0, v8361:0, v8362:0, 1, 0, v8599:1, 1 + v8599:0, v9338:0, v8370:0, v10777:0, 1 + v10777:0, 1 + v12013:0, v12013:0, v8373:0, v8391:0, v8374:0, v8392:0, v8375:0, v8393:0, v8376:0, v8394:0, v8377:0, v8395:0, v8378:0, v8396:0, v8383:0, v8397:0, v8384:0, v8398:0, v8399:0, v8400:0, v8401:0, v8402:0, v8403:0, v8379:0, v8380:0, v8381:0, v8382:0, v8385:0, v8386:0, v8387:0, v8388:0, v8389:0, v8390:0, 3, 7, 2, 4, 8) :|: v8383:0 + v8379:0 <= 1 + v8397:0 && v8382:0 >= v8380:0 && v8384:0 + v8380:0 <= 1 + v8398:0 && v8355:0 > -1 && v8356:0 > -1 && v8358:0 > 0 && v8359:0 > 0 && v8360:0 > 0 && v8361:0 > 0 && v8362:0 > 0 && v8599:0 > -1 && v8370:0 > -1 && v10777:0 > -1 && v8373:0 > 0 && v8374:0 > 0 && v8375:0 > 0 && v8376:0 > 0 && v8377:0 > 0 && v8378:0 > 0 && v8379:0 > 1 && v8380:0 > 0 && v8381:0 > 0 && v8382:0 > 0 && v8383:0 > 0 && v8384:0 > 0 && v8385:0 > -1 && v8386:0 > 0 && v8387:0 > -1 && v8390:0 > -1 && v8391:0 > 3 && v8392:0 > 3 && v8393:0 > 3 && v8394:0 > 3 && v8395:0 > 7 && v8396:0 > 7 && v8397:0 > 1 && v8398:0 > 0 && v8399:0 > 7 && v8400:0 > 7 && v8401:0 > 7 && v8402:0 > 7 && v8403:0 > 7 && v8391:0 >= v8373:0 && v9338:0 < 0 && v8392:0 >= v8374:0 && v8393:0 >= v8375:0 && v8394:0 >= v8376:0 && v8395:0 >= v8377:0 && v8396:0 >= v8378:0 && v8397:0 >= v8383:0 && v8398:0 >= v8384:0 && v8399:0 >= v8358:0 && v8400:0 >= v8359:0 && v8401:0 >= v8360:0 && v12013:0 > 0 && v8403:0 >= v8362:0 && v8402:0 >= v8361:0
f_1408(v8355:0, v8356:0, v8357:0, v8358:0, v8359:0, v8360:0, v8361:0, v8362:0, 1, 0, v8599:0, v8366:0, v8367:0, v8368:0, v8369:0, v8370:0, v8371:0, v8372:0, v8373:0, v8391:0, v8374:0, v8392:0, v8375:0, v8393:0, v8376:0, v8394:0, v8377:0, v8395:0, v8378:0, v8396:0, v8383:0, v8397:0, v8384:0, v8398:0, v8399:0, v8400:0, v8401:0, v8402:0, v8403:0, v8379:0, v8380:0, v8381:0, v8382:0, v8385:0, v8386:0, v8387:0, v8388:0, v8389:0, v8390:0, 3, 7, 2, 4, 8) -> f_1408(v8355:0, v8356:0, v8357:0, v8358:0, v8359:0, v8360:0, v8361:0, v8362:0, 1, 0, v8599:1, 1 + v8599:0, v9338:0, v8370:0, v10777:0, 1 + v10777:0, 1 + v12013:0, v12013:0, v8373:0, v8391:0, v8374:0, v8392:0, v8375:0, v8393:0, v8376:0, v8394:0, v8377:0, v8395:0, v8378:0, v8396:0, v8383:0, v8397:0, v8384:0, v8398:0, v8399:0, v8400:0, v8401:0, v8402:0, v8403:0, v8379:0, v8380:0, v8381:0, v8382:0, v8385:0, v8386:0, v8387:0, v8388:0, v8389:0, v8390:0, 3, 7, 2, 4, 8) :|: v8383:0 + v8379:0 <= 1 + v8397:0 && v8382:0 >= v8380:0 && v8384:0 + v8380:0 <= 1 + v8398:0 && v8355:0 > -1 && v8356:0 > -1 && v8358:0 > 0 && v8359:0 > 0 && v8360:0 > 0 && v8361:0 > 0 && v8362:0 > 0 && v8599:0 > -1 && v8370:0 > -1 && v10777:0 > -1 && v8373:0 > 0 && v8374:0 > 0 && v8375:0 > 0 && v8376:0 > 0 && v8377:0 > 0 && v8378:0 > 0 && v8379:0 > 1 && v8380:0 > 0 && v8381:0 > 0 && v8382:0 > 0 && v8383:0 > 0 && v8384:0 > 0 && v8385:0 > -1 && v8386:0 > 0 && v8387:0 > -1 && v8390:0 > -1 && v8391:0 > 3 && v8392:0 > 3 && v8393:0 > 3 && v8394:0 > 3 && v8395:0 > 7 && v8396:0 > 7 && v8397:0 > 1 && v8398:0 > 0 && v8399:0 > 7 && v8400:0 > 7 && v8401:0 > 7 && v8402:0 > 7 && v8403:0 > 7 && v8391:0 >= v8373:0 && v9338:0 > 0 && v8392:0 >= v8374:0 && v8393:0 >= v8375:0 && v8394:0 >= v8376:0 && v8395:0 >= v8377:0 && v8396:0 >= v8378:0 && v8397:0 >= v8383:0 && v8398:0 >= v8384:0 && v8399:0 >= v8358:0 && v8400:0 >= v8359:0 && v8401:0 >= v8360:0 && v12013:0 < 0 && v8403:0 >= v8362:0 && v8402:0 >= v8361:0
f_1408(v8355:0, v8356:0, v8357:0, v8358:0, v8359:0, v8360:0, v8361:0, v8362:0, 1, 0, v8599:0, v8366:0, v8367:0, v8368:0, v8369:0, v8370:0, v8371:0, v8372:0, v8373:0, v8391:0, v8374:0, v8392:0, v8375:0, v8393:0, v8376:0, v8394:0, v8377:0, v8395:0, v8378:0, v8396:0, v8383:0, v8397:0, v8384:0, v8398:0, v8399:0, v8400:0, v8401:0, v8402:0, v8403:0, v8379:0, v8380:0, v8381:0, v8382:0, v8385:0, v8386:0, v8387:0, v8388:0, v8389:0, v8390:0, 3, 7, 2, 4, 8) -> f_1408(v8355:0, v8356:0, v8357:0, v8358:0, v8359:0, v8360:0, v8361:0, v8362:0, 1, 0, v8599:1, 1 + v8599:0, v9338:0, v8370:0, v10777:0, 1 + v10777:0, 1 + v12013:0, v12013:0, v8373:0, v8391:0, v8374:0, v8392:0, v8375:0, v8393:0, v8376:0, v8394:0, v8377:0, v8395:0, v8378:0, v8396:0, v8383:0, v8397:0, v8384:0, v8398:0, v8399:0, v8400:0, v8401:0, v8402:0, v8403:0, v8379:0, v8380:0, v8381:0, v8382:0, v8385:0, v8386:0, v8387:0, v8388:0, v8389:0, v8390:0, 3, 7, 2, 4, 8) :|: v8383:0 + v8379:0 <= 1 + v8397:0 && v8382:0 >= v8380:0 && v8384:0 + v8380:0 <= 1 + v8398:0 && v8355:0 > -1 && v8356:0 > -1 && v8358:0 > 0 && v8359:0 > 0 && v8360:0 > 0 && v8361:0 > 0 && v8362:0 > 0 && v8599:0 > -1 && v8370:0 > -1 && v10777:0 > -1 && v8373:0 > 0 && v8374:0 > 0 && v8375:0 > 0 && v8376:0 > 0 && v8377:0 > 0 && v8378:0 > 0 && v8379:0 > 1 && v8380:0 > 0 && v8381:0 > 0 && v8382:0 > 0 && v8383:0 > 0 && v8384:0 > 0 && v8385:0 > -1 && v8386:0 > 0 && v8387:0 > -1 && v8390:0 > -1 && v8391:0 > 3 && v8392:0 > 3 && v8393:0 > 3 && v8394:0 > 3 && v8395:0 > 7 && v8396:0 > 7 && v8397:0 > 1 && v8398:0 > 0 && v8399:0 > 7 && v8400:0 > 7 && v8401:0 > 7 && v8402:0 > 7 && v8403:0 > 7 && v8391:0 >= v8373:0 && v9338:0 > 0 && v8392:0 >= v8374:0 && v8393:0 >= v8375:0 && v8394:0 >= v8376:0 && v8395:0 >= v8377:0 && v8396:0 >= v8378:0 && v8397:0 >= v8383:0 && v8398:0 >= v8384:0 && v8399:0 >= v8358:0 && v8400:0 >= v8359:0 && v8401:0 >= v8360:0 && v12013:0 > 0 && v8403:0 >= v8362:0 && v8402:0 >= v8361:0
Filtered unneeded arguments:
   f_1408(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49, x50, x51, x52, x53, x54) -> f_1408(x1, x2, x4, x5, x6, x7, x8, x11, x16, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x49)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1408(v8355:0, v8356:0, v8358:0, v8359:0, v8360:0, v8361:0, v8362:0, v8599:0, v8370:0, v8373:0, v8391:0, v8374:0, v8392:0, v8375:0, v8393:0, v8376:0, v8394:0, v8377:0, v8395:0, v8378:0, v8396:0, v8383:0, v8397:0, v8384:0, v8398:0, v8399:0, v8400:0, v8401:0, v8402:0, v8403:0, v8379:0, v8380:0, v8381:0, v8382:0, v8385:0, v8386:0, v8387:0, v8390:0) -> f_1408(v8355:0, v8356:0, v8358:0, v8359:0, v8360:0, v8361:0, v8362:0, v8599:1, 1 + v10777:0, v8373:0, v8391:0, v8374:0, v8392:0, v8375:0, v8393:0, v8376:0, v8394:0, v8377:0, v8395:0, v8378:0, v8396:0, v8383:0, v8397:0, v8384:0, v8398:0, v8399:0, v8400:0, v8401:0, v8402:0, v8403:0, v8379:0, v8380:0, v8381:0, v8382:0, v8385:0, v8386:0, v8387:0, v8390:0) :|: v8382:0 >= v8380:0 && v8383:0 + v8379:0 <= 1 + v8397:0 && v8384:0 + v8380:0 <= 1 + v8398:0 && v8355:0 > -1 && v8356:0 > -1 && v8358:0 > 0 && v8359:0 > 0 && v8360:0 > 0 && v8361:0 > 0 && v8362:0 > 0 && v8599:0 > -1 && v8370:0 > -1 && v10777:0 > -1 && v8373:0 > 0 && v8374:0 > 0 && v8375:0 > 0 && v8376:0 > 0 && v8377:0 > 0 && v8378:0 > 0 && v8379:0 > 1 && v8380:0 > 0 && v8381:0 > 0 && v8382:0 > 0 && v8383:0 > 0 && v8384:0 > 0 && v8385:0 > -1 && v8386:0 > 0 && v8387:0 > -1 && v8390:0 > -1 && v8391:0 > 3 && v8392:0 > 3 && v8393:0 > 3 && v8394:0 > 3 && v8395:0 > 7 && v8396:0 > 7 && v8397:0 > 1 && v8398:0 > 0 && v8399:0 > 7 && v8400:0 > 7 && v8401:0 > 7 && v8402:0 > 7 && v8403:0 > 7 && v8391:0 >= v8373:0 && v8392:0 >= v8374:0 && v8393:0 >= v8375:0 && v8394:0 >= v8376:0 && v8395:0 >= v8377:0 && v8396:0 >= v8378:0 && v8397:0 >= v8383:0 && v8398:0 >= v8384:0 && v8399:0 >= v8358:0 && v8400:0 >= v8359:0 && v8401:0 >= v8360:0 && v8402:0 >= v8361:0 && v8403:0 >= v8362:0

----------------------------------------

(29)
Obligation:
Rules:
f_1408(v8355:0, v8356:0, v8358:0, v8359:0, v8360:0, v8361:0, v8362:0, v8599:0, v8370:0, v8373:0, v8391:0, v8374:0, v8392:0, v8375:0, v8393:0, v8376:0, v8394:0, v8377:0, v8395:0, v8378:0, v8396:0, v8383:0, v8397:0, v8384:0, v8398:0, v8399:0, v8400:0, v8401:0, v8402:0, v8403:0, v8379:0, v8380:0, v8381:0, v8382:0, v8385:0, v8386:0, v8387:0, v8390:0) -> f_1408(v8355:0, v8356:0, v8358:0, v8359:0, v8360:0, v8361:0, v8362:0, v8599:1, 1 + v10777:0, v8373:0, v8391:0, v8374:0, v8392:0, v8375:0, v8393:0, v8376:0, v8394:0, v8377:0, v8395:0, v8378:0, v8396:0, v8383:0, v8397:0, v8384:0, v8398:0, v8399:0, v8400:0, v8401:0, v8402:0, v8403:0, v8379:0, v8380:0, v8381:0, v8382:0, v8385:0, v8386:0, v8387:0, v8390:0) :|: v8382:0 >= v8380:0 && v8383:0 + v8379:0 <= 1 + v8397:0 && v8384:0 + v8380:0 <= 1 + v8398:0 && v8355:0 > -1 && v8356:0 > -1 && v8358:0 > 0 && v8359:0 > 0 && v8360:0 > 0 && v8361:0 > 0 && v8362:0 > 0 && v8599:0 > -1 && v8370:0 > -1 && v10777:0 > -1 && v8373:0 > 0 && v8374:0 > 0 && v8375:0 > 0 && v8376:0 > 0 && v8377:0 > 0 && v8378:0 > 0 && v8379:0 > 1 && v8380:0 > 0 && v8381:0 > 0 && v8382:0 > 0 && v8383:0 > 0 && v8384:0 > 0 && v8385:0 > -1 && v8386:0 > 0 && v8387:0 > -1 && v8390:0 > -1 && v8391:0 > 3 && v8392:0 > 3 && v8393:0 > 3 && v8394:0 > 3 && v8395:0 > 7 && v8396:0 > 7 && v8397:0 > 1 && v8398:0 > 0 && v8399:0 > 7 && v8400:0 > 7 && v8401:0 > 7 && v8402:0 > 7 && v8403:0 > 7 && v8391:0 >= v8373:0 && v8392:0 >= v8374:0 && v8393:0 >= v8375:0 && v8394:0 >= v8376:0 && v8395:0 >= v8377:0 && v8396:0 >= v8378:0 && v8397:0 >= v8383:0 && v8398:0 >= v8384:0 && v8399:0 >= v8358:0 && v8400:0 >= v8359:0 && v8401:0 >= v8360:0 && v8402:0 >= v8361:0 && v8403:0 >= v8362:0

----------------------------------------

(30) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(31)
Obligation:
Rules:
f_1408(v8355:0:0, v8356:0:0, v8358:0:0, v8359:0:0, v8360:0:0, v8361:0:0, v8362:0:0, v8599:0:0, v8370:0:0, v8373:0:0, v8391:0:0, v8374:0:0, v8392:0:0, v8375:0:0, v8393:0:0, v8376:0:0, v8394:0:0, v8377:0:0, v8395:0:0, v8378:0:0, v8396:0:0, v8383:0:0, v8397:0:0, v8384:0:0, v8398:0:0, v8399:0:0, v8400:0:0, v8401:0:0, v8402:0:0, v8403:0:0, v8379:0:0, v8380:0:0, v8381:0:0, v8382:0:0, v8385:0:0, v8386:0:0, v8387:0:0, v8390:0:0) -> f_1408(v8355:0:0, v8356:0:0, v8358:0:0, v8359:0:0, v8360:0:0, v8361:0:0, v8362:0:0, v8599:1:0, 1 + v10777:0:0, v8373:0:0, v8391:0:0, v8374:0:0, v8392:0:0, v8375:0:0, v8393:0:0, v8376:0:0, v8394:0:0, v8377:0:0, v8395:0:0, v8378:0:0, v8396:0:0, v8383:0:0, v8397:0:0, v8384:0:0, v8398:0:0, v8399:0:0, v8400:0:0, v8401:0:0, v8402:0:0, v8403:0:0, v8379:0:0, v8380:0:0, v8381:0:0, v8382:0:0, v8385:0:0, v8386:0:0, v8387:0:0, v8390:0:0) :|: v8402:0:0 >= v8361:0:0 && v8403:0:0 >= v8362:0:0 && v8401:0:0 >= v8360:0:0 && v8400:0:0 >= v8359:0:0 && v8399:0:0 >= v8358:0:0 && v8398:0:0 >= v8384:0:0 && v8397:0:0 >= v8383:0:0 && v8396:0:0 >= v8378:0:0 && v8395:0:0 >= v8377:0:0 && v8394:0:0 >= v8376:0:0 && v8393:0:0 >= v8375:0:0 && v8392:0:0 >= v8374:0:0 && v8391:0:0 >= v8373:0:0 && v8403:0:0 > 7 && v8402:0:0 > 7 && v8401:0:0 > 7 && v8400:0:0 > 7 && v8399:0:0 > 7 && v8398:0:0 > 0 && v8397:0:0 > 1 && v8396:0:0 > 7 && v8395:0:0 > 7 && v8394:0:0 > 3 && v8393:0:0 > 3 && v8392:0:0 > 3 && v8391:0:0 > 3 && v8390:0:0 > -1 && v8387:0:0 > -1 && v8386:0:0 > 0 && v8385:0:0 > -1 && v8384:0:0 > 0 && v8383:0:0 > 0 && v8382:0:0 > 0 && v8381:0:0 > 0 && v8380:0:0 > 0 && v8379:0:0 > 1 && v8378:0:0 > 0 && v8377:0:0 > 0 && v8376:0:0 > 0 && v8375:0:0 > 0 && v8374:0:0 > 0 && v8373:0:0 > 0 && v10777:0:0 > -1 && v8370:0:0 > -1 && v8599:0:0 > -1 && v8362:0:0 > 0 && v8361:0:0 > 0 && v8360:0:0 > 0 && v8359:0:0 > 0 && v8358:0:0 > 0 && v8356:0:0 > -1 && v8355:0:0 > -1 && v8384:0:0 + v8380:0:0 <= 1 + v8398:0:0 && v8383:0:0 + v8379:0:0 <= 1 + v8397:0:0 && v8382:0:0 >= v8380:0:0

----------------------------------------

(32) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, v8355:0:0, v8356:0:0, v8358:0:0, v8359:0:0, v8360:0:0, v8361:0:0, v8362:0:0, v8599:0:0, v8370:0:0, v8373:0:0, v8391:0:0, v8374:0:0, v8392:0:0, v8375:0:0, v8393:0:0, v8376:0:0, v8394:0:0, v8377:0:0, v8395:0:0, v8378:0:0, v8396:0:0, v8383:0:0, v8397:0:0, v8384:0:0, v8398:0:0, v8399:0:0, v8400:0:0, v8401:0:0, v8402:0:0, v8403:0:0, v8379:0:0, v8380:0:0, v8381:0:0, v8382:0:0, v8385:0:0, v8386:0:0, v8387:0:0, v8390:0:0) -> f(1, v8355:0:0, v8356:0:0, v8358:0:0, v8359:0:0, v8360:0:0, v8361:0:0, v8362:0:0, v8599:1:0, 1 + v10777:0:0, v8373:0:0, v8391:0:0, v8374:0:0, v8392:0:0, v8375:0:0, v8393:0:0, v8376:0:0, v8394:0:0, v8377:0:0, v8395:0:0, v8378:0:0, v8396:0:0, v8383:0:0, v8397:0:0, v8384:0:0, v8398:0:0, v8399:0:0, v8400:0:0, v8401:0:0, v8402:0:0, v8403:0:0, v8379:0:0, v8380:0:0, v8381:0:0, v8382:0:0, v8385:0:0, v8386:0:0, v8387:0:0, v8390:0:0) :|: pc = 1 && (v8402:0:0 >= v8361:0:0 && v8403:0:0 >= v8362:0:0 && v8401:0:0 >= v8360:0:0 && v8400:0:0 >= v8359:0:0 && v8399:0:0 >= v8358:0:0 && v8398:0:0 >= v8384:0:0 && v8397:0:0 >= v8383:0:0 && v8396:0:0 >= v8378:0:0 && v8395:0:0 >= v8377:0:0 && v8394:0:0 >= v8376:0:0 && v8393:0:0 >= v8375:0:0 && v8392:0:0 >= v8374:0:0 && v8391:0:0 >= v8373:0:0 && v8403:0:0 > 7 && v8402:0:0 > 7 && v8401:0:0 > 7 && v8400:0:0 > 7 && v8399:0:0 > 7 && v8398:0:0 > 0 && v8397:0:0 > 1 && v8396:0:0 > 7 && v8395:0:0 > 7 && v8394:0:0 > 3 && v8393:0:0 > 3 && v8392:0:0 > 3 && v8391:0:0 > 3 && v8390:0:0 > -1 && v8387:0:0 > -1 && v8386:0:0 > 0 && v8385:0:0 > -1 && v8384:0:0 > 0 && v8383:0:0 > 0 && v8382:0:0 > 0 && v8381:0:0 > 0 && v8380:0:0 > 0 && v8379:0:0 > 1 && v8378:0:0 > 0 && v8377:0:0 > 0 && v8376:0:0 > 0 && v8375:0:0 > 0 && v8374:0:0 > 0 && v8373:0:0 > 0 && v10777:0:0 > -1 && v8370:0:0 > -1 && v8599:0:0 > -1 && v8362:0:0 > 0 && v8361:0:0 > 0 && v8360:0:0 > 0 && v8359:0:0 > 0 && v8358:0:0 > 0 && v8356:0:0 > -1 && v8355:0:0 > -1 && v8384:0:0 + v8380:0:0 <= 1 + v8398:0:0 && v8383:0:0 + v8379:0:0 <= 1 + v8397:0:0 && v8382:0:0 >= v8380:0:0)
Witness term starting non-terminating reduction: f(1, 0, 0, 1, 4, 1, 1, 4, 0, 8, 1, 5, 1, 15, 16, 18, 4, 14, 1, 12, 4, 22, 1, 16, 5, 13, 23, 14, 19, 23, 14, 16, 1, 1, 15, 0, 1, 0, 0)
----------------------------------------

(33)
NO

----------------------------------------

(34)
Obligation:
SCC
----------------------------------------

(35) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 11 rulesP rules:
f_1329(v6536, v6537, 1, v6539, v6540, v6541, v6542, v6543, v6546, v6545, v6544, v6547, v6562, v6548, v6563, v6549, v6564, v6550, v6565, v6551, v6566, v6552, v6567, v6568, v6561, v6569, v6570, v6571, v6572, v6573, v6575, 0, v6553, v6554, v6559, v6574, v6576, v6555, v6557, v6558, v6560, 3, 7, 2, 4, 8) -> f_1340(v6536, v6537, 1, v6539, v6540, v6541, v6542, v6543, v6546, v7238, v6545, v6544, v6547, v6562, v6548, v6563, v6549, v6564, v6550, v6565, v6551, v6566, v6552, v6567, v6568, v6561, v6569, v6570, v6571, v6572, v6573, v6575, 0, v6553, v6554, v6559, v6574, v6576, v6555, v6557, v6558, v6560, 3, 7, 2, 4, 8) :|: TRUE
f_1340(v6536, v6537, 1, v6539, v6540, v6541, v6542, v6543, v6546, v7238, v6545, v6544, v6547, v6562, v6548, v6563, v6549, v6564, v6550, v6565, v6551, v6566, v6552, v6567, v6568, v6561, v6569, v6570, v6571, v6572, v6573, v6575, 0, v6553, v6554, v6559, v6574, v6576, v6555, v6557, v6558, v6560, 3, 7, 2, 4, 8) -> f_1349(v6536, v6537, 1, v6539, v6540, v6541, v6542, v6543, v6546, v7238, v6544, v6547, v6562, v6548, v6563, v6549, v6564, v6550, v6565, v6551, v6566, v6552, v6567, v6568, v6561, v6569, v6570, v6571, v6572, v6573, v6575, v6545, 0, v6553, v6554, v6559, v6574, v6576, v6555, v6557, v6558, v6560, 3, 7, 2, 4, 8) :|: 0 = 0
f_1349(v6536, v6537, 1, v6539, v6540, v6541, v6542, v6543, v6546, v7238, v6544, v6547, v6562, v6548, v6563, v6549, v6564, v6550, v6565, v6551, v6566, v6552, v6567, v6568, v6561, v6569, v6570, v6571, v6572, v6573, v6575, v6545, 0, v6553, v6554, v6559, v6574, v6576, v6555, v6557, v6558, v6560, 3, 7, 2, 4, 8) -> f_1358(v6536, v6537, 1, v6539, v6540, v6541, v6542, v6543, v6546, v7238, v6544, v6547, v6562, v6548, v6563, v6549, v6564, v6550, v6565, v6551, v6566, v6552, v6567, v6568, v6561, v6569, v6570, v6571, v6572, v6573, v6575, v6545, 0, v6553, v6554, v6559, v6574, v6576, v6555, v6557, v6558, v6560, 3, 7, 2, 4, 8) :|: v7238 != 0 && v6546 < v6559 && 4 <= v6559
f_1358(v6536, v6537, 1, v6539, v6540, v6541, v6542, v6543, v6546, v7238, v6544, v6547, v6562, v6548, v6563, v6549, v6564, v6550, v6565, v6551, v6566, v6552, v6567, v6568, v6561, v6569, v6570, v6571, v6572, v6573, v6575, v6545, 0, v6553, v6554, v6559, v6574, v6576, v6555, v6557, v6558, v6560, 3, 7, 2, 4, 8) -> f_1368(v6536, v6537, 1, v6539, v6540, v6541, v6542, v6543, v6546, v7238, v6544, v6547, v6562, v6548, v6563, v6549, v6564, v6550, v6565, v6551, v6566, v6552, v6567, v6568, v6561, v6569, v6570, v6571, v6572, v6573, v6575, v6545, 0, v6553, v6554, v6559, v6574, v6576, v6555, v6557, v6558, v6560, 3, 7, 2, 4, 8) :|: 0 = 0
f_1368(v6536, v6537, 1, v6539, v6540, v6541, v6542, v6543, v6546, v7238, v6544, v6547, v6562, v6548, v6563, v6549, v6564, v6550, v6565, v6551, v6566, v6552, v6567, v6568, v6561, v6569, v6570, v6571, v6572, v6573, v6575, v6545, 0, v6553, v6554, v6559, v6574, v6576, v6555, v6557, v6558, v6560, 3, 7, 2, 4, 8) -> f_1379(v6536, v6537, 1, v6539, v6540, v6541, v6542, v6543, v6546, v7238, v6544, v6547, v6562, v6548, v6563, v6549, v6564, v6550, v6565, v6551, v6566, v6552, v6567, v6568, v6561, v6569, v6570, v6571, v6572, v6573, v6575, v6545, 0, v6553, v6554, v6559, v6574, v6576, v6555, v6557, v6558, v6560, 3, 7, 2, 4, 8) :|: TRUE
f_1379(v6536, v6537, 1, v6539, v6540, v6541, v6542, v6543, v6546, v7238, v6544, v6547, v6562, v6548, v6563, v6549, v6564, v6550, v6565, v6551, v6566, v6552, v6567, v6568, v6561, v6569, v6570, v6571, v6572, v6573, v6575, v6545, 0, v6553, v6554, v6559, v6574, v6576, v6555, v6557, v6558, v6560, 3, 7, 2, 4, 8) -> f_1392(v6536, v6537, 1, v6539, v6540, v6541, v6542, v6543, v6546, v7238, v6547, v6562, v6548, v6563, v6549, v6564, v6550, v6565, v6551, v6566, v6552, v6567, v6568, v6561, v6569, v6570, v6571, v6572, v6573, v6575, v6544, v6545, 0, v6553, v6554, v6559, v6574, v6576, v6555, v6557, v6558, v6560, 3, 7, 2, 4, 8) :|: 0 = 0
f_1392(v6536, v6537, 1, v6539, v6540, v6541, v6542, v6543, v6546, v7238, v6547, v6562, v6548, v6563, v6549, v6564, v6550, v6565, v6551, v6566, v6552, v6567, v6568, v6561, v6569, v6570, v6571, v6572, v6573, v6575, v6544, v6545, 0, v6553, v6554, v6559, v6574, v6576, v6555, v6557, v6558, v6560, 3, 7, 2, 4, 8) -> f_1404(v6536, v6537, 1, v6539, v6540, v6541, v6542, v6543, v6546, v7238, v8546, v6547, v6562, v6548, v6563, v6549, v6564, v6550, v6565, v6551, v6566, v6552, v6567, v6568, v6561, v6569, v6570, v6571, v6572, v6573, v6575, v6544, v6545, 0, v6553, v6554, v6559, v6574, v6576, v6555, v6557, v6558, v6560, 3, 7, 2, 4, 8) :|: v8546 = 1 + v6546 && 4 <= v8546
f_1404(v6536, v6537, 1, v6539, v6540, v6541, v6542, v6543, v6546, v7238, v8546, v6547, v6562, v6548, v6563, v6549, v6564, v6550, v6565, v6551, v6566, v6552, v6567, v6568, v6561, v6569, v6570, v6571, v6572, v6573, v6575, v6544, v6545, 0, v6553, v6554, v6559, v6574, v6576, v6555, v6557, v6558, v6560, 3, 7, 2, 4, 8) -> f_1414(v6536, v6537, 1, v6539, v6540, v6541, v6542, v6543, v6546, v7238, v8546, v6547, v6562, v6548, v6563, v6549, v6564, v6550, v6565, v6551, v6566, v6552, v6567, v6568, v6561, v6569, v6570, v6571, v6572, v6573, v6575, v6544, v6545, 0, v6553, v6554, v6559, v6574, v6576, v6555, v6557, v6558, v6560, 3, 7, 2, 4, 8) :|: TRUE
f_1414(v6536, v6537, 1, v6539, v6540, v6541, v6542, v6543, v6546, v7238, v8546, v6547, v6562, v6548, v6563, v6549, v6564, v6550, v6565, v6551, v6566, v6552, v6567, v6568, v6561, v6569, v6570, v6571, v6572, v6573, v6575, v6544, v6545, 0, v6553, v6554, v6559, v6574, v6576, v6555, v6557, v6558, v6560, 3, 7, 2, 4, 8) -> f_1423(v6536, v6537, 1, v6539, v6540, v6541, v6542, v6543, v6546, v7238, v8546, v6547, v6562, v6548, v6563, v6549, v6564, v6550, v6565, v6551, v6566, v6552, v6567, v6568, v6561, v6569, v6570, v6571, v6572, v6573, v6575, v6544, v6545, 0, v6553, v6554, v6559, v6574, v6576, v6555, v6557, v6558, v6560, 3, 7, 2, 4, 8) :|: TRUE
f_1423(v6536, v6537, 1, v6539, v6540, v6541, v6542, v6543, v6546, v7238, v8546, v6547, v6562, v6548, v6563, v6549, v6564, v6550, v6565, v6551, v6566, v6552, v6567, v6568, v6561, v6569, v6570, v6571, v6572, v6573, v6575, v6544, v6545, 0, v6553, v6554, v6559, v6574, v6576, v6555, v6557, v6558, v6560, 3, 7, 2, 4, 8) -> f_1317(v6536, v6537, 1, v6539, v6540, v6541, v6542, v6543, v6546, v7238, v8546, v6547, v6562, v6548, v6563, v6549, v6564, v6550, v6565, v6551, v6566, v6552, v6567, v6568, v6561, v6569, v6570, v6571, v6572, v6573, v6575, 0, v6553, v6554, v6559, v6574, v6576, v6555, v6557, v6558, v6560, 3, 7, 2, 4, 8) :|: TRUE
f_1317(v6536, v6537, 1, v6539, v6540, v6541, v6542, v6543, v6544, v6545, v6546, v6547, v6562, v6548, v6563, v6549, v6564, v6550, v6565, v6551, v6566, v6552, v6567, v6568, v6561, v6569, v6570, v6571, v6572, v6573, v6575, 0, v6553, v6554, v6559, v6574, v6576, v6555, v6557, v6558, v6560, 3, 7, 2, 4, 8) -> f_1329(v6536, v6537, 1, v6539, v6540, v6541, v6542, v6543, v6546, v6545, v6544, v6547, v6562, v6548, v6563, v6549, v6564, v6550, v6565, v6551, v6566, v6552, v6567, v6568, v6561, v6569, v6570, v6571, v6572, v6573, v6575, 0, v6553, v6554, v6559, v6574, v6576, v6555, v6557, v6558, v6560, 3, 7, 2, 4, 8) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_1329(v6536:0, v6537:0, 1, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6546:0, v6545:0, v6544:0, v6547:0, v6562:0, v6548:0, v6563:0, v6549:0, v6564:0, v6550:0, v6565:0, v6551:0, v6566:0, v6552:0, v6567:0, v6568:0, v6561:0, v6569:0, v6570:0, v6571:0, v6572:0, v6573:0, v6575:0, 0, v6553:0, v6554:0, v6559:0, v6574:0, v6576:0, v6555:0, v6557:0, v6558:0, v6560:0, 3, 7, 2, 4, 8) -> f_1329(v6536:0, v6537:0, 1, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, 1 + v6546:0, v7238:0, v6546:0, v6547:0, v6562:0, v6548:0, v6563:0, v6549:0, v6564:0, v6550:0, v6565:0, v6551:0, v6566:0, v6552:0, v6567:0, v6568:0, v6561:0, v6569:0, v6570:0, v6571:0, v6572:0, v6573:0, v6575:0, 0, v6553:0, v6554:0, v6559:0, v6574:0, v6576:0, v6555:0, v6557:0, v6558:0, v6560:0, 3, 7, 2, 4, 8) :|: v6559:0 > v6546:0 && v7238:0 < 0 && v6546:0 > 2 && v6559:0 > 3
f_1329(v6536:0, v6537:0, 1, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6546:0, v6545:0, v6544:0, v6547:0, v6562:0, v6548:0, v6563:0, v6549:0, v6564:0, v6550:0, v6565:0, v6551:0, v6566:0, v6552:0, v6567:0, v6568:0, v6561:0, v6569:0, v6570:0, v6571:0, v6572:0, v6573:0, v6575:0, 0, v6553:0, v6554:0, v6559:0, v6574:0, v6576:0, v6555:0, v6557:0, v6558:0, v6560:0, 3, 7, 2, 4, 8) -> f_1329(v6536:0, v6537:0, 1, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, 1 + v6546:0, v7238:0, v6546:0, v6547:0, v6562:0, v6548:0, v6563:0, v6549:0, v6564:0, v6550:0, v6565:0, v6551:0, v6566:0, v6552:0, v6567:0, v6568:0, v6561:0, v6569:0, v6570:0, v6571:0, v6572:0, v6573:0, v6575:0, 0, v6553:0, v6554:0, v6559:0, v6574:0, v6576:0, v6555:0, v6557:0, v6558:0, v6560:0, 3, 7, 2, 4, 8) :|: v6559:0 > v6546:0 && v7238:0 > 0 && v6546:0 > 2 && v6559:0 > 3
Filtered unneeded arguments:
   f_1329(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46) -> f_1329(x9, x35)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1329(v6546:0, v6559:0) -> f_1329(1 + v6546:0, v6559:0) :|: v6546:0 > 2 && v6559:0 > 3 && v6559:0 > v6546:0

----------------------------------------

(36)
Obligation:
Rules:
f_1329(v6546:0, v6559:0) -> f_1329(1 + v6546:0, v6559:0) :|: v6546:0 > 2 && v6559:0 > 3 && v6559:0 > v6546:0

----------------------------------------

(37) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(38)
Obligation:
Rules:
f_1329(v6546:0:0, v6559:0:0) -> f_1329(1 + v6546:0:0, v6559:0:0) :|: v6546:0:0 > 2 && v6559:0:0 > 3 && v6559:0:0 > v6546:0:0

----------------------------------------

(39) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1329 ] = -1*f_1329_1 + f_1329_2

The following rules are decreasing:
f_1329(v6546:0:0, v6559:0:0) -> f_1329(1 + v6546:0:0, v6559:0:0) :|: v6546:0:0 > 2 && v6559:0:0 > 3 && v6559:0:0 > v6546:0:0

The following rules are bounded:
f_1329(v6546:0:0, v6559:0:0) -> f_1329(1 + v6546:0:0, v6559:0:0) :|: v6546:0:0 > 2 && v6559:0:0 > 3 && v6559:0:0 > v6546:0:0


----------------------------------------

(40)
YES

----------------------------------------

(41)
Obligation:
SCC
----------------------------------------

(42) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 11 rulesP rules:
f_1222(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4723, v4722, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) -> f_1233(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4992, v4723, v4722, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) :|: TRUE
f_1233(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4992, v4723, v4722, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) -> f_1246(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4992, v4722, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) :|: 0 = 0
f_1246(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4992, v4722, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) -> f_1259(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4992, v4722, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) :|: v4992 != 0
f_1259(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4992, v4722, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) -> f_1273(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4992, v4722, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) :|: 0 = 0
f_1273(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4992, v4722, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) -> f_1286(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4992, v4722, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) :|: TRUE
f_1286(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4992, v4722, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) -> f_1299(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4992, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) :|: 0 = 0
f_1299(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4992, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) -> f_1312(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4992, v6400, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) :|: v6400 = 1 + v4724 && 2 <= v6400
f_1312(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4992, v6400, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) -> f_1325(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4992, v6400, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) :|: TRUE
f_1325(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4992, v6400, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) -> f_1336(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4992, v6400, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) :|: TRUE
f_1336(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4992, v6400, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) -> f_1211(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4992, v6400, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) :|: TRUE
f_1211(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4722, v4723, v4724, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) -> f_1222(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4723, v4722, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_1222(v4713:0, v4714:0, v4715:0, v4716:0, v4717:0, v4718:0, v4719:0, v4720:0, 1, v4724:0, v4723:0, v4722:0, v4725:0, v4744:0, v4726:0, v4745:0, v4727:0, v4746:0, v4728:0, v4747:0, v4729:0, v4748:0, v4730:0, v4749:0, v4736:0, v4750:0, v4737:0, v4751:0, v4752:0, v4753:0, v4754:0, v4755:0, v4731:0, v4732:0, v4733:0, 0, v4735:0, v4738:0, v4739:0, v4740:0, v4741:0, v4742:0, v4743:0, 3, 7, 2, 4, 8) -> f_1222(v4713:0, v4714:0, v4715:0, v4716:0, v4717:0, v4718:0, v4719:0, v4720:0, 1, 1 + v4724:0, v4992:0, v4724:0, v4725:0, v4744:0, v4726:0, v4745:0, v4727:0, v4746:0, v4728:0, v4747:0, v4729:0, v4748:0, v4730:0, v4749:0, v4736:0, v4750:0, v4737:0, v4751:0, v4752:0, v4753:0, v4754:0, v4755:0, v4731:0, v4732:0, v4733:0, 0, v4735:0, v4738:0, v4739:0, v4740:0, v4741:0, v4742:0, v4743:0, 3, 7, 2, 4, 8) :|: v4724:0 > 0 && v4992:0 < 0
f_1222(v4713:0, v4714:0, v4715:0, v4716:0, v4717:0, v4718:0, v4719:0, v4720:0, 1, v4724:0, v4723:0, v4722:0, v4725:0, v4744:0, v4726:0, v4745:0, v4727:0, v4746:0, v4728:0, v4747:0, v4729:0, v4748:0, v4730:0, v4749:0, v4736:0, v4750:0, v4737:0, v4751:0, v4752:0, v4753:0, v4754:0, v4755:0, v4731:0, v4732:0, v4733:0, 0, v4735:0, v4738:0, v4739:0, v4740:0, v4741:0, v4742:0, v4743:0, 3, 7, 2, 4, 8) -> f_1222(v4713:0, v4714:0, v4715:0, v4716:0, v4717:0, v4718:0, v4719:0, v4720:0, 1, 1 + v4724:0, v4992:0, v4724:0, v4725:0, v4744:0, v4726:0, v4745:0, v4727:0, v4746:0, v4728:0, v4747:0, v4729:0, v4748:0, v4730:0, v4749:0, v4736:0, v4750:0, v4737:0, v4751:0, v4752:0, v4753:0, v4754:0, v4755:0, v4731:0, v4732:0, v4733:0, 0, v4735:0, v4738:0, v4739:0, v4740:0, v4741:0, v4742:0, v4743:0, 3, 7, 2, 4, 8) :|: v4724:0 > 0 && v4992:0 > 0
Filtered unneeded arguments:
   f_1222(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48) -> f_1222(x10)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1222(v4724:0) -> f_1222(1 + v4724:0) :|: v4724:0 > 0

----------------------------------------

(43)
Obligation:
Rules:
f_1222(v4724:0) -> f_1222(1 + v4724:0) :|: v4724:0 > 0

----------------------------------------

(44) IntTRSNonPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, v4724:0) -> f(1, 1 + v4724:0) :|: pc = 1 && v4724:0 > 0
Proved unsatisfiability of the following formula, indicating that the system is never left after entering:
(((run2_0 = ((1 * 1)) and run2_1 = ((1 * 1) + (run1_1 * 1))) and (((run1_0 * 1)) = ((1 * 1)) and ((run1_1 * 1)) > 0)) and !(((run2_0 * 1)) = ((1 * 1)) and ((run2_1 * 1)) > 0))
Proved satisfiability of the following formula, indicating that the system is entered at least once:
((run2_0 = ((1 * 1)) and run2_1 = ((1 * 1) + (run1_1 * 1))) and (((run1_0 * 1)) = ((1 * 1)) and ((run1_1 * 1)) > 0))

----------------------------------------

(45)
NO

----------------------------------------

(46) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 11 rulesP rules:
f_1222(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4723, v4722, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) -> f_1233(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4992, v4723, v4722, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) :|: TRUE
f_1233(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4992, v4723, v4722, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) -> f_1246(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4992, v4722, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) :|: 0 = 0
f_1246(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4992, v4722, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) -> f_1259(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4992, v4722, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) :|: v4992 != 0
f_1259(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4992, v4722, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) -> f_1273(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4992, v4722, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) :|: 0 = 0
f_1273(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4992, v4722, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) -> f_1286(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4992, v4722, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) :|: TRUE
f_1286(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4992, v4722, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) -> f_1299(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4992, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) :|: 0 = 0
f_1299(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4992, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) -> f_1312(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4992, v6400, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) :|: v6400 = 1 + v4724 && 2 <= v6400
f_1312(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4992, v6400, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) -> f_1325(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4992, v6400, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) :|: TRUE
f_1325(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4992, v6400, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) -> f_1336(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4992, v6400, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) :|: TRUE
f_1336(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4992, v6400, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) -> f_1211(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4992, v6400, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) :|: v4713 <= v4724 && v4736 + v4731 <= 1 + v4750 && 0 <= v4713 && 0 <= v4714 && 1 <= v4716 && 1 <= v4717 && 1 <= v4718 && 1 <= v4719 && 1 <= v4720 && 0 <= v4724 && 1 <= v6400 && 1 <= v4725 && 1 <= v4726 && 1 <= v4727 && 1 <= v4728 && 1 <= v4729 && 1 <= v4730 && 2 <= v4731 && v4732 <= 0 && 1 <= v4733 && 1 <= v4735 && 1 <= v4736 && 1 <= v4737 && 0 <= v4738 && 1 <= v4739 && 0 <= v4740 && 0 <= v4743 && 4 <= v4744 && 4 <= v4745 && 4 <= v4746 && 4 <= v4747 && 8 <= v4748 && 8 <= v4749 && 2 <= v4750 && 8 <= v4751 && 8 <= v4752 && 8 <= v4753 && 8 <= v4754 && 8 <= v4755 && v4725 <= v4744 && v4726 <= v4745 && v4727 <= v4746 && v4728 <= v4747 && v4729 <= v4748 && v4730 <= v4749 && v4736 <= v4750 && 0 <= 0 && v4716 <= v4751 && v4717 <= v4752 && v4718 <= v4753 && v4719 <= v4754 && v4720 <= v4755
f_1211(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4722, v4723, v4724, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) -> f_1222(v4713, v4714, v4715, v4716, v4717, v4718, v4719, v4720, 1, v4724, v4723, v4722, v4725, v4744, v4726, v4745, v4727, v4746, v4728, v4747, v4729, v4748, v4730, v4749, v4736, v4750, v4737, v4751, v4752, v4753, v4754, v4755, v4731, v4732, v4733, 0, v4735, v4738, v4739, v4740, v4741, v4742, v4743, 3, 7, 2, 4, 8) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_1222(v4713:0, v4714:0, v4715:0, v4716:0, v4717:0, v4718:0, v4719:0, v4720:0, 1, v4724:0, v4723:0, v4722:0, v4725:0, v4744:0, v4726:0, v4745:0, v4727:0, v4746:0, v4728:0, v4747:0, v4729:0, v4748:0, v4730:0, v4749:0, v4736:0, v4750:0, v4737:0, v4751:0, v4752:0, v4753:0, v4754:0, v4755:0, v4731:0, v4732:0, v4733:0, 0, v4735:0, v4738:0, v4739:0, v4740:0, v4741:0, v4742:0, v4743:0, 3, 7, 2, 4, 8) -> f_1222(v4713:0, v4714:0, v4715:0, v4716:0, v4717:0, v4718:0, v4719:0, v4720:0, 1, 1 + v4724:0, v4992:0, v4724:0, v4725:0, v4744:0, v4726:0, v4745:0, v4727:0, v4746:0, v4728:0, v4747:0, v4729:0, v4748:0, v4730:0, v4749:0, v4736:0, v4750:0, v4737:0, v4751:0, v4752:0, v4753:0, v4754:0, v4755:0, v4731:0, v4732:0, v4733:0, 0, v4735:0, v4738:0, v4739:0, v4740:0, v4741:0, v4742:0, v4743:0, 3, 7, 2, 4, 8) :|: v4724:0 > 0 && v4736:0 + v4731:0 <= 1 + v4750:0 && v4724:0 >= v4713:0 && v4713:0 > -1 && v4714:0 > -1 && v4716:0 > 0 && v4717:0 > 0 && v4718:0 > 0 && v4719:0 > 0 && v4720:0 > 0 && v4725:0 > 0 && v4726:0 > 0 && v4727:0 > 0 && v4728:0 > 0 && v4729:0 > 0 && v4730:0 > 0 && v4731:0 > 1 && v4732:0 < 1 && v4733:0 > 0 && v4735:0 > 0 && v4736:0 > 0 && v4737:0 > 0 && v4738:0 > -1 && v4739:0 > 0 && v4740:0 > -1 && v4743:0 > -1 && v4744:0 > 3 && v4745:0 > 3 && v4746:0 > 3 && v4747:0 > 3 && v4748:0 > 7 && v4749:0 > 7 && v4750:0 > 1 && v4751:0 > 7 && v4752:0 > 7 && v4753:0 > 7 && v4754:0 > 7 && v4755:0 > 7 && v4744:0 >= v4725:0 && v4745:0 >= v4726:0 && v4746:0 >= v4727:0 && v4747:0 >= v4728:0 && v4748:0 >= v4729:0 && v4749:0 >= v4730:0 && v4750:0 >= v4736:0 && v4992:0 < 0 && v4751:0 >= v4716:0 && v4752:0 >= v4717:0 && v4753:0 >= v4718:0 && v4755:0 >= v4720:0 && v4754:0 >= v4719:0
f_1222(v4713:0, v4714:0, v4715:0, v4716:0, v4717:0, v4718:0, v4719:0, v4720:0, 1, v4724:0, v4723:0, v4722:0, v4725:0, v4744:0, v4726:0, v4745:0, v4727:0, v4746:0, v4728:0, v4747:0, v4729:0, v4748:0, v4730:0, v4749:0, v4736:0, v4750:0, v4737:0, v4751:0, v4752:0, v4753:0, v4754:0, v4755:0, v4731:0, v4732:0, v4733:0, 0, v4735:0, v4738:0, v4739:0, v4740:0, v4741:0, v4742:0, v4743:0, 3, 7, 2, 4, 8) -> f_1222(v4713:0, v4714:0, v4715:0, v4716:0, v4717:0, v4718:0, v4719:0, v4720:0, 1, 1 + v4724:0, v4992:0, v4724:0, v4725:0, v4744:0, v4726:0, v4745:0, v4727:0, v4746:0, v4728:0, v4747:0, v4729:0, v4748:0, v4730:0, v4749:0, v4736:0, v4750:0, v4737:0, v4751:0, v4752:0, v4753:0, v4754:0, v4755:0, v4731:0, v4732:0, v4733:0, 0, v4735:0, v4738:0, v4739:0, v4740:0, v4741:0, v4742:0, v4743:0, 3, 7, 2, 4, 8) :|: v4724:0 > 0 && v4736:0 + v4731:0 <= 1 + v4750:0 && v4724:0 >= v4713:0 && v4713:0 > -1 && v4714:0 > -1 && v4716:0 > 0 && v4717:0 > 0 && v4718:0 > 0 && v4719:0 > 0 && v4720:0 > 0 && v4725:0 > 0 && v4726:0 > 0 && v4727:0 > 0 && v4728:0 > 0 && v4729:0 > 0 && v4730:0 > 0 && v4731:0 > 1 && v4732:0 < 1 && v4733:0 > 0 && v4735:0 > 0 && v4736:0 > 0 && v4737:0 > 0 && v4738:0 > -1 && v4739:0 > 0 && v4740:0 > -1 && v4743:0 > -1 && v4744:0 > 3 && v4745:0 > 3 && v4746:0 > 3 && v4747:0 > 3 && v4748:0 > 7 && v4749:0 > 7 && v4750:0 > 1 && v4751:0 > 7 && v4752:0 > 7 && v4753:0 > 7 && v4754:0 > 7 && v4755:0 > 7 && v4744:0 >= v4725:0 && v4745:0 >= v4726:0 && v4746:0 >= v4727:0 && v4747:0 >= v4728:0 && v4748:0 >= v4729:0 && v4749:0 >= v4730:0 && v4750:0 >= v4736:0 && v4992:0 > 0 && v4751:0 >= v4716:0 && v4752:0 >= v4717:0 && v4753:0 >= v4718:0 && v4755:0 >= v4720:0 && v4754:0 >= v4719:0
Filtered unneeded arguments:
   f_1222(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48) -> f_1222(x1, x2, x4, x5, x6, x7, x8, x10, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x37, x38, x39, x40, x43)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1222(v4713:0, v4714:0, v4716:0, v4717:0, v4718:0, v4719:0, v4720:0, v4724:0, v4725:0, v4744:0, v4726:0, v4745:0, v4727:0, v4746:0, v4728:0, v4747:0, v4729:0, v4748:0, v4730:0, v4749:0, v4736:0, v4750:0, v4737:0, v4751:0, v4752:0, v4753:0, v4754:0, v4755:0, v4731:0, v4732:0, v4733:0, v4735:0, v4738:0, v4739:0, v4740:0, v4743:0) -> f_1222(v4713:0, v4714:0, v4716:0, v4717:0, v4718:0, v4719:0, v4720:0, 1 + v4724:0, v4725:0, v4744:0, v4726:0, v4745:0, v4727:0, v4746:0, v4728:0, v4747:0, v4729:0, v4748:0, v4730:0, v4749:0, v4736:0, v4750:0, v4737:0, v4751:0, v4752:0, v4753:0, v4754:0, v4755:0, v4731:0, v4732:0, v4733:0, v4735:0, v4738:0, v4739:0, v4740:0, v4743:0) :|: v4736:0 + v4731:0 <= 1 + v4750:0 && v4724:0 > 0 && v4724:0 >= v4713:0 && v4713:0 > -1 && v4714:0 > -1 && v4716:0 > 0 && v4717:0 > 0 && v4718:0 > 0 && v4719:0 > 0 && v4720:0 > 0 && v4725:0 > 0 && v4726:0 > 0 && v4727:0 > 0 && v4728:0 > 0 && v4729:0 > 0 && v4730:0 > 0 && v4731:0 > 1 && v4732:0 < 1 && v4733:0 > 0 && v4735:0 > 0 && v4736:0 > 0 && v4737:0 > 0 && v4738:0 > -1 && v4739:0 > 0 && v4740:0 > -1 && v4743:0 > -1 && v4744:0 > 3 && v4745:0 > 3 && v4746:0 > 3 && v4747:0 > 3 && v4748:0 > 7 && v4749:0 > 7 && v4750:0 > 1 && v4751:0 > 7 && v4752:0 > 7 && v4753:0 > 7 && v4754:0 > 7 && v4755:0 > 7 && v4744:0 >= v4725:0 && v4745:0 >= v4726:0 && v4746:0 >= v4727:0 && v4747:0 >= v4728:0 && v4748:0 >= v4729:0 && v4749:0 >= v4730:0 && v4750:0 >= v4736:0 && v4751:0 >= v4716:0 && v4752:0 >= v4717:0 && v4753:0 >= v4718:0 && v4754:0 >= v4719:0 && v4755:0 >= v4720:0

----------------------------------------

(47)
Obligation:
Rules:
f_1222(v4713:0, v4714:0, v4716:0, v4717:0, v4718:0, v4719:0, v4720:0, v4724:0, v4725:0, v4744:0, v4726:0, v4745:0, v4727:0, v4746:0, v4728:0, v4747:0, v4729:0, v4748:0, v4730:0, v4749:0, v4736:0, v4750:0, v4737:0, v4751:0, v4752:0, v4753:0, v4754:0, v4755:0, v4731:0, v4732:0, v4733:0, v4735:0, v4738:0, v4739:0, v4740:0, v4743:0) -> f_1222(v4713:0, v4714:0, v4716:0, v4717:0, v4718:0, v4719:0, v4720:0, 1 + v4724:0, v4725:0, v4744:0, v4726:0, v4745:0, v4727:0, v4746:0, v4728:0, v4747:0, v4729:0, v4748:0, v4730:0, v4749:0, v4736:0, v4750:0, v4737:0, v4751:0, v4752:0, v4753:0, v4754:0, v4755:0, v4731:0, v4732:0, v4733:0, v4735:0, v4738:0, v4739:0, v4740:0, v4743:0) :|: v4736:0 + v4731:0 <= 1 + v4750:0 && v4724:0 > 0 && v4724:0 >= v4713:0 && v4713:0 > -1 && v4714:0 > -1 && v4716:0 > 0 && v4717:0 > 0 && v4718:0 > 0 && v4719:0 > 0 && v4720:0 > 0 && v4725:0 > 0 && v4726:0 > 0 && v4727:0 > 0 && v4728:0 > 0 && v4729:0 > 0 && v4730:0 > 0 && v4731:0 > 1 && v4732:0 < 1 && v4733:0 > 0 && v4735:0 > 0 && v4736:0 > 0 && v4737:0 > 0 && v4738:0 > -1 && v4739:0 > 0 && v4740:0 > -1 && v4743:0 > -1 && v4744:0 > 3 && v4745:0 > 3 && v4746:0 > 3 && v4747:0 > 3 && v4748:0 > 7 && v4749:0 > 7 && v4750:0 > 1 && v4751:0 > 7 && v4752:0 > 7 && v4753:0 > 7 && v4754:0 > 7 && v4755:0 > 7 && v4744:0 >= v4725:0 && v4745:0 >= v4726:0 && v4746:0 >= v4727:0 && v4747:0 >= v4728:0 && v4748:0 >= v4729:0 && v4749:0 >= v4730:0 && v4750:0 >= v4736:0 && v4751:0 >= v4716:0 && v4752:0 >= v4717:0 && v4753:0 >= v4718:0 && v4754:0 >= v4719:0 && v4755:0 >= v4720:0

----------------------------------------

(48)
Obligation:
SCC
----------------------------------------

(49) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 11 rulesP rules:
f_1221(v4533, v4534, 1, v4536, v4537, v4538, v4539, v4540, v4543, v4542, v4541, v4544, v4557, v4545, v4558, v4546, v4559, v4547, v4560, v4548, v4561, v4549, v4562, v4563, v4564, v4565, v4566, v4567, v4568, v4569, 0, v4550, v4556, v4551, v4552, v4554, v4555, 3, 7, 2, 4, 8) -> f_1232(v4533, v4534, 1, v4536, v4537, v4538, v4539, v4540, v4543, v4990, v4542, v4541, v4544, v4557, v4545, v4558, v4546, v4559, v4547, v4560, v4548, v4561, v4549, v4562, v4563, v4564, v4565, v4566, v4567, v4568, v4569, 0, v4550, v4556, v4551, v4552, v4554, v4555, 3, 7, 2, 4, 8) :|: TRUE
f_1232(v4533, v4534, 1, v4536, v4537, v4538, v4539, v4540, v4543, v4990, v4542, v4541, v4544, v4557, v4545, v4558, v4546, v4559, v4547, v4560, v4548, v4561, v4549, v4562, v4563, v4564, v4565, v4566, v4567, v4568, v4569, 0, v4550, v4556, v4551, v4552, v4554, v4555, 3, 7, 2, 4, 8) -> f_1245(v4533, v4534, 1, v4536, v4537, v4538, v4539, v4540, v4543, v4990, v4541, v4544, v4557, v4545, v4558, v4546, v4559, v4547, v4560, v4548, v4561, v4549, v4562, v4563, v4564, v4565, v4566, v4567, v4568, v4569, 0, v4542, v4550, v4556, v4551, v4552, v4554, v4555, 3, 7, 2, 4, 8) :|: 0 = 0
f_1245(v4533, v4534, 1, v4536, v4537, v4538, v4539, v4540, v4543, v4990, v4541, v4544, v4557, v4545, v4558, v4546, v4559, v4547, v4560, v4548, v4561, v4549, v4562, v4563, v4564, v4565, v4566, v4567, v4568, v4569, 0, v4542, v4550, v4556, v4551, v4552, v4554, v4555, 3, 7, 2, 4, 8) -> f_1257(v4533, v4534, 1, v4536, v4537, v4538, v4539, v4540, v4543, v4990, v4541, v4544, v4557, v4545, v4558, v4546, v4559, v4547, v4560, v4548, v4561, v4549, v4562, v4563, v4564, v4565, v4566, v4567, v4568, v4569, 0, v4542, v4550, v4556, v4551, v4552, v4554, v4555, 3, 7, 2, 4, 8) :|: v4990 != 0 && v4543 < v4556 && 3 <= v4556
f_1257(v4533, v4534, 1, v4536, v4537, v4538, v4539, v4540, v4543, v4990, v4541, v4544, v4557, v4545, v4558, v4546, v4559, v4547, v4560, v4548, v4561, v4549, v4562, v4563, v4564, v4565, v4566, v4567, v4568, v4569, 0, v4542, v4550, v4556, v4551, v4552, v4554, v4555, 3, 7, 2, 4, 8) -> f_1271(v4533, v4534, 1, v4536, v4537, v4538, v4539, v4540, v4543, v4990, v4541, v4544, v4557, v4545, v4558, v4546, v4559, v4547, v4560, v4548, v4561, v4549, v4562, v4563, v4564, v4565, v4566, v4567, v4568, v4569, 0, v4542, v4550, v4556, v4551, v4552, v4554, v4555, 3, 7, 2, 4, 8) :|: 0 = 0
f_1271(v4533, v4534, 1, v4536, v4537, v4538, v4539, v4540, v4543, v4990, v4541, v4544, v4557, v4545, v4558, v4546, v4559, v4547, v4560, v4548, v4561, v4549, v4562, v4563, v4564, v4565, v4566, v4567, v4568, v4569, 0, v4542, v4550, v4556, v4551, v4552, v4554, v4555, 3, 7, 2, 4, 8) -> f_1284(v4533, v4534, 1, v4536, v4537, v4538, v4539, v4540, v4543, v4990, v4541, v4544, v4557, v4545, v4558, v4546, v4559, v4547, v4560, v4548, v4561, v4549, v4562, v4563, v4564, v4565, v4566, v4567, v4568, v4569, 0, v4542, v4550, v4556, v4551, v4552, v4554, v4555, 3, 7, 2, 4, 8) :|: TRUE
f_1284(v4533, v4534, 1, v4536, v4537, v4538, v4539, v4540, v4543, v4990, v4541, v4544, v4557, v4545, v4558, v4546, v4559, v4547, v4560, v4548, v4561, v4549, v4562, v4563, v4564, v4565, v4566, v4567, v4568, v4569, 0, v4542, v4550, v4556, v4551, v4552, v4554, v4555, 3, 7, 2, 4, 8) -> f_1297(v4533, v4534, 1, v4536, v4537, v4538, v4539, v4540, v4543, v4990, v4544, v4557, v4545, v4558, v4546, v4559, v4547, v4560, v4548, v4561, v4549, v4562, v4563, v4564, v4565, v4566, v4567, v4568, v4569, 0, v4541, v4542, v4550, v4556, v4551, v4552, v4554, v4555, 3, 7, 2, 4, 8) :|: 0 = 0
f_1297(v4533, v4534, 1, v4536, v4537, v4538, v4539, v4540, v4543, v4990, v4544, v4557, v4545, v4558, v4546, v4559, v4547, v4560, v4548, v4561, v4549, v4562, v4563, v4564, v4565, v4566, v4567, v4568, v4569, 0, v4541, v4542, v4550, v4556, v4551, v4552, v4554, v4555, 3, 7, 2, 4, 8) -> f_1310(v4533, v4534, 1, v4536, v4537, v4538, v4539, v4540, v4543, v4990, v6399, v4544, v4557, v4545, v4558, v4546, v4559, v4547, v4560, v4548, v4561, v4549, v4562, v4563, v4564, v4565, v4566, v4567, v4568, v4569, 0, v4541, v4542, v4550, v4556, v4551, v4552, v4554, v4555, 3, 7, 2, 4, 8) :|: v6399 = 1 + v4543 && 3 <= v6399
f_1310(v4533, v4534, 1, v4536, v4537, v4538, v4539, v4540, v4543, v4990, v6399, v4544, v4557, v4545, v4558, v4546, v4559, v4547, v4560, v4548, v4561, v4549, v4562, v4563, v4564, v4565, v4566, v4567, v4568, v4569, 0, v4541, v4542, v4550, v4556, v4551, v4552, v4554, v4555, 3, 7, 2, 4, 8) -> f_1323(v4533, v4534, 1, v4536, v4537, v4538, v4539, v4540, v4543, v4990, v6399, v4544, v4557, v4545, v4558, v4546, v4559, v4547, v4560, v4548, v4561, v4549, v4562, v4563, v4564, v4565, v4566, v4567, v4568, v4569, 0, v4541, v4542, v4550, v4556, v4551, v4552, v4554, v4555, 3, 7, 2, 4, 8) :|: TRUE
f_1323(v4533, v4534, 1, v4536, v4537, v4538, v4539, v4540, v4543, v4990, v6399, v4544, v4557, v4545, v4558, v4546, v4559, v4547, v4560, v4548, v4561, v4549, v4562, v4563, v4564, v4565, v4566, v4567, v4568, v4569, 0, v4541, v4542, v4550, v4556, v4551, v4552, v4554, v4555, 3, 7, 2, 4, 8) -> f_1334(v4533, v4534, 1, v4536, v4537, v4538, v4539, v4540, v4543, v4990, v6399, v4544, v4557, v4545, v4558, v4546, v4559, v4547, v4560, v4548, v4561, v4549, v4562, v4563, v4564, v4565, v4566, v4567, v4568, v4569, 0, v4541, v4542, v4550, v4556, v4551, v4552, v4554, v4555, 3, 7, 2, 4, 8) :|: TRUE
f_1334(v4533, v4534, 1, v4536, v4537, v4538, v4539, v4540, v4543, v4990, v6399, v4544, v4557, v4545, v4558, v4546, v4559, v4547, v4560, v4548, v4561, v4549, v4562, v4563, v4564, v4565, v4566, v4567, v4568, v4569, 0, v4541, v4542, v4550, v4556, v4551, v4552, v4554, v4555, 3, 7, 2, 4, 8) -> f_1209(v4533, v4534, 1, v4536, v4537, v4538, v4539, v4540, v4543, v4990, v6399, v4544, v4557, v4545, v4558, v4546, v4559, v4547, v4560, v4548, v4561, v4549, v4562, v4563, v4564, v4565, v4566, v4567, v4568, v4569, 0, v4550, v4556, v4551, v4552, v4554, v4555, 3, 7, 2, 4, 8) :|: TRUE
f_1209(v4533, v4534, 1, v4536, v4537, v4538, v4539, v4540, v4541, v4542, v4543, v4544, v4557, v4545, v4558, v4546, v4559, v4547, v4560, v4548, v4561, v4549, v4562, v4563, v4564, v4565, v4566, v4567, v4568, v4569, 0, v4550, v4556, v4551, v4552, v4554, v4555, 3, 7, 2, 4, 8) -> f_1221(v4533, v4534, 1, v4536, v4537, v4538, v4539, v4540, v4543, v4542, v4541, v4544, v4557, v4545, v4558, v4546, v4559, v4547, v4560, v4548, v4561, v4549, v4562, v4563, v4564, v4565, v4566, v4567, v4568, v4569, 0, v4550, v4556, v4551, v4552, v4554, v4555, 3, 7, 2, 4, 8) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_1221(v4533:0, v4534:0, 1, v4536:0, v4537:0, v4538:0, v4539:0, v4540:0, v4543:0, v4542:0, v4541:0, v4544:0, v4557:0, v4545:0, v4558:0, v4546:0, v4559:0, v4547:0, v4560:0, v4548:0, v4561:0, v4549:0, v4562:0, v4563:0, v4564:0, v4565:0, v4566:0, v4567:0, v4568:0, v4569:0, 0, v4550:0, v4556:0, v4551:0, v4552:0, v4554:0, v4555:0, 3, 7, 2, 4, 8) -> f_1221(v4533:0, v4534:0, 1, v4536:0, v4537:0, v4538:0, v4539:0, v4540:0, 1 + v4543:0, v4990:0, v4543:0, v4544:0, v4557:0, v4545:0, v4558:0, v4546:0, v4559:0, v4547:0, v4560:0, v4548:0, v4561:0, v4549:0, v4562:0, v4563:0, v4564:0, v4565:0, v4566:0, v4567:0, v4568:0, v4569:0, 0, v4550:0, v4556:0, v4551:0, v4552:0, v4554:0, v4555:0, 3, 7, 2, 4, 8) :|: v4556:0 > v4543:0 && v4990:0 < 0 && v4543:0 > 1 && v4556:0 > 2
f_1221(v4533:0, v4534:0, 1, v4536:0, v4537:0, v4538:0, v4539:0, v4540:0, v4543:0, v4542:0, v4541:0, v4544:0, v4557:0, v4545:0, v4558:0, v4546:0, v4559:0, v4547:0, v4560:0, v4548:0, v4561:0, v4549:0, v4562:0, v4563:0, v4564:0, v4565:0, v4566:0, v4567:0, v4568:0, v4569:0, 0, v4550:0, v4556:0, v4551:0, v4552:0, v4554:0, v4555:0, 3, 7, 2, 4, 8) -> f_1221(v4533:0, v4534:0, 1, v4536:0, v4537:0, v4538:0, v4539:0, v4540:0, 1 + v4543:0, v4990:0, v4543:0, v4544:0, v4557:0, v4545:0, v4558:0, v4546:0, v4559:0, v4547:0, v4560:0, v4548:0, v4561:0, v4549:0, v4562:0, v4563:0, v4564:0, v4565:0, v4566:0, v4567:0, v4568:0, v4569:0, 0, v4550:0, v4556:0, v4551:0, v4552:0, v4554:0, v4555:0, 3, 7, 2, 4, 8) :|: v4556:0 > v4543:0 && v4990:0 > 0 && v4543:0 > 1 && v4556:0 > 2
Filtered unneeded arguments:
   f_1221(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42) -> f_1221(x9, x33)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1221(v4543:0, v4556:0) -> f_1221(1 + v4543:0, v4556:0) :|: v4543:0 > 1 && v4556:0 > 2 && v4556:0 > v4543:0

----------------------------------------

(50)
Obligation:
Rules:
f_1221(v4543:0, v4556:0) -> f_1221(1 + v4543:0, v4556:0) :|: v4543:0 > 1 && v4556:0 > 2 && v4556:0 > v4543:0

----------------------------------------

(51) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(52)
Obligation:
Rules:
f_1221(v4543:0:0, v4556:0:0) -> f_1221(1 + v4543:0:0, v4556:0:0) :|: v4543:0:0 > 1 && v4556:0:0 > 2 && v4556:0:0 > v4543:0:0

----------------------------------------

(53) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1221(x, x1)] = -1 - x + x1

The following rules are decreasing:
f_1221(v4543:0:0, v4556:0:0) -> f_1221(1 + v4543:0:0, v4556:0:0) :|: v4543:0:0 > 1 && v4556:0:0 > 2 && v4556:0:0 > v4543:0:0
The following rules are bounded:
f_1221(v4543:0:0, v4556:0:0) -> f_1221(1 + v4543:0:0, v4556:0:0) :|: v4543:0:0 > 1 && v4556:0:0 > 2 && v4556:0:0 > v4543:0:0

----------------------------------------

(54)
YES

----------------------------------------

(55)
Obligation:
SCC
----------------------------------------

(56) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 11 rulesP rules:
f_1205(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4278, v4277, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) -> f_1218(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4845, v4278, v4277, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) :|: TRUE
f_1218(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4845, v4278, v4277, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) -> f_1229(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4845, v4277, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) :|: 0 = 0
f_1229(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4845, v4277, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) -> f_1241(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4845, v4277, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) :|: v4845 != 0
f_1241(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4845, v4277, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) -> f_1253(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4845, v4277, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) :|: 0 = 0
f_1253(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4845, v4277, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) -> f_1267(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4845, v4277, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) :|: TRUE
f_1267(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4845, v4277, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) -> f_1280(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4845, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) :|: 0 = 0
f_1280(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4845, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) -> f_1293(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4845, v6028, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) :|: v6028 = 1 + v4279 && 2 <= v6028
f_1293(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4845, v6028, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) -> f_1306(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4845, v6028, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) :|: TRUE
f_1306(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4845, v6028, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) -> f_1319(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4845, v6028, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) :|: TRUE
f_1319(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4845, v6028, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) -> f_1192(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4845, v6028, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) :|: TRUE
f_1192(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4277, v4278, v4279, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) -> f_1205(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4278, v4277, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_1205(v4268:0, v4269:0, v4270:0, v4271:0, v4272:0, v4273:0, v4274:0, v4275:0, 1, v4279:0, v4278:0, v4277:0, v4280:0, v4299:0, v4281:0, v4300:0, v4282:0, v4301:0, v4283:0, v4302:0, v4284:0, v4303:0, v4285:0, v4304:0, v4291:0, v4305:0, v4292:0, v4306:0, v4307:0, v4308:0, v4309:0, v4310:0, v4311:0, v4286:0, v4287:0, v4288:0, 0, v4290:0, v4293:0, v4294:0, v4295:0, v4296:0, v4297:0, v4298:0, 3, 7, 2, 4, 8) -> f_1205(v4268:0, v4269:0, v4270:0, v4271:0, v4272:0, v4273:0, v4274:0, v4275:0, 1, 1 + v4279:0, v4845:0, v4279:0, v4280:0, v4299:0, v4281:0, v4300:0, v4282:0, v4301:0, v4283:0, v4302:0, v4284:0, v4303:0, v4285:0, v4304:0, v4291:0, v4305:0, v4292:0, v4306:0, v4307:0, v4308:0, v4309:0, v4310:0, v4311:0, v4286:0, v4287:0, v4288:0, 0, v4290:0, v4293:0, v4294:0, v4295:0, v4296:0, v4297:0, v4298:0, 3, 7, 2, 4, 8) :|: v4279:0 > 0 && v4845:0 < 0
f_1205(v4268:0, v4269:0, v4270:0, v4271:0, v4272:0, v4273:0, v4274:0, v4275:0, 1, v4279:0, v4278:0, v4277:0, v4280:0, v4299:0, v4281:0, v4300:0, v4282:0, v4301:0, v4283:0, v4302:0, v4284:0, v4303:0, v4285:0, v4304:0, v4291:0, v4305:0, v4292:0, v4306:0, v4307:0, v4308:0, v4309:0, v4310:0, v4311:0, v4286:0, v4287:0, v4288:0, 0, v4290:0, v4293:0, v4294:0, v4295:0, v4296:0, v4297:0, v4298:0, 3, 7, 2, 4, 8) -> f_1205(v4268:0, v4269:0, v4270:0, v4271:0, v4272:0, v4273:0, v4274:0, v4275:0, 1, 1 + v4279:0, v4845:0, v4279:0, v4280:0, v4299:0, v4281:0, v4300:0, v4282:0, v4301:0, v4283:0, v4302:0, v4284:0, v4303:0, v4285:0, v4304:0, v4291:0, v4305:0, v4292:0, v4306:0, v4307:0, v4308:0, v4309:0, v4310:0, v4311:0, v4286:0, v4287:0, v4288:0, 0, v4290:0, v4293:0, v4294:0, v4295:0, v4296:0, v4297:0, v4298:0, 3, 7, 2, 4, 8) :|: v4279:0 > 0 && v4845:0 > 0
Filtered unneeded arguments:
   f_1205(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49) -> f_1205(x10)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1205(v4279:0) -> f_1205(1 + v4279:0) :|: v4279:0 > 0

----------------------------------------

(57)
Obligation:
Rules:
f_1205(v4279:0) -> f_1205(1 + v4279:0) :|: v4279:0 > 0

----------------------------------------

(58) IntTRSNonPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, v4279:0) -> f(1, 1 + v4279:0) :|: pc = 1 && v4279:0 > 0
Proved unsatisfiability of the following formula, indicating that the system is never left after entering:
(((run2_0 = ((1 * 1)) and run2_1 = ((1 * 1) + (run1_1 * 1))) and (((run1_0 * 1)) = ((1 * 1)) and ((run1_1 * 1)) > 0)) and !(((run2_0 * 1)) = ((1 * 1)) and ((run2_1 * 1)) > 0))
Proved satisfiability of the following formula, indicating that the system is entered at least once:
((run2_0 = ((1 * 1)) and run2_1 = ((1 * 1) + (run1_1 * 1))) and (((run1_0 * 1)) = ((1 * 1)) and ((run1_1 * 1)) > 0))

----------------------------------------

(59)
NO

----------------------------------------

(60) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 11 rulesP rules:
f_1205(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4278, v4277, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) -> f_1218(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4845, v4278, v4277, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) :|: TRUE
f_1218(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4845, v4278, v4277, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) -> f_1229(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4845, v4277, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) :|: 0 = 0
f_1229(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4845, v4277, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) -> f_1241(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4845, v4277, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) :|: v4845 != 0
f_1241(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4845, v4277, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) -> f_1253(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4845, v4277, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) :|: 0 = 0
f_1253(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4845, v4277, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) -> f_1267(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4845, v4277, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) :|: TRUE
f_1267(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4845, v4277, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) -> f_1280(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4845, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) :|: 0 = 0
f_1280(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4845, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) -> f_1293(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4845, v6028, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) :|: v6028 = 1 + v4279 && 2 <= v6028
f_1293(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4845, v6028, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) -> f_1306(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4845, v6028, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) :|: TRUE
f_1306(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4845, v6028, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) -> f_1319(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4845, v6028, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) :|: TRUE
f_1319(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4845, v6028, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) -> f_1192(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4845, v6028, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) :|: v4268 <= v4279 && v4287 <= v4290 && v4291 + v4286 <= 1 + v4305 && v4292 + v4287 <= 1 + v4306 && 0 <= v4268 && 0 <= v4269 && 1 <= v4271 && 1 <= v4272 && 1 <= v4273 && 1 <= v4274 && 1 <= v4275 && 0 <= v4279 && 1 <= v6028 && 1 <= v4280 && 1 <= v4281 && 1 <= v4282 && 1 <= v4283 && 1 <= v4284 && 1 <= v4285 && 2 <= v4286 && 1 <= v4287 && 1 <= v4288 && 1 <= v4290 && 1 <= v4291 && 1 <= v4292 && 0 <= v4293 && 1 <= v4294 && 0 <= v4295 && 0 <= v4298 && 4 <= v4299 && 4 <= v4300 && 4 <= v4301 && 4 <= v4302 && 8 <= v4303 && 8 <= v4304 && 2 <= v4305 && 1 <= v4306 && 8 <= v4307 && 8 <= v4308 && 8 <= v4309 && 8 <= v4310 && 8 <= v4311 && v4280 <= v4299 && v4281 <= v4300 && v4282 <= v4301 && v4283 <= v4302 && v4284 <= v4303 && v4285 <= v4304 && v4291 <= v4305 && v4292 <= v4306 && v4271 <= v4307 && v4272 <= v4308 && v4273 <= v4309 && v4274 <= v4310 && v4275 <= v4311
f_1192(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4277, v4278, v4279, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) -> f_1205(v4268, v4269, v4270, v4271, v4272, v4273, v4274, v4275, 1, v4279, v4278, v4277, v4280, v4299, v4281, v4300, v4282, v4301, v4283, v4302, v4284, v4303, v4285, v4304, v4291, v4305, v4292, v4306, v4307, v4308, v4309, v4310, v4311, v4286, v4287, v4288, 0, v4290, v4293, v4294, v4295, v4296, v4297, v4298, 3, 7, 2, 4, 8) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_1205(v4268:0, v4269:0, v4270:0, v4271:0, v4272:0, v4273:0, v4274:0, v4275:0, 1, v4279:0, v4278:0, v4277:0, v4280:0, v4299:0, v4281:0, v4300:0, v4282:0, v4301:0, v4283:0, v4302:0, v4284:0, v4303:0, v4285:0, v4304:0, v4291:0, v4305:0, v4292:0, v4306:0, v4307:0, v4308:0, v4309:0, v4310:0, v4311:0, v4286:0, v4287:0, v4288:0, 0, v4290:0, v4293:0, v4294:0, v4295:0, v4296:0, v4297:0, v4298:0, 3, 7, 2, 4, 8) -> f_1205(v4268:0, v4269:0, v4270:0, v4271:0, v4272:0, v4273:0, v4274:0, v4275:0, 1, 1 + v4279:0, v4845:0, v4279:0, v4280:0, v4299:0, v4281:0, v4300:0, v4282:0, v4301:0, v4283:0, v4302:0, v4284:0, v4303:0, v4285:0, v4304:0, v4291:0, v4305:0, v4292:0, v4306:0, v4307:0, v4308:0, v4309:0, v4310:0, v4311:0, v4286:0, v4287:0, v4288:0, 0, v4290:0, v4293:0, v4294:0, v4295:0, v4296:0, v4297:0, v4298:0, 3, 7, 2, 4, 8) :|: v4279:0 > 0 && v4290:0 >= v4287:0 && v4279:0 >= v4268:0 && v4291:0 + v4286:0 <= 1 + v4305:0 && v4292:0 + v4287:0 <= 1 + v4306:0 && v4268:0 > -1 && v4269:0 > -1 && v4271:0 > 0 && v4272:0 > 0 && v4273:0 > 0 && v4274:0 > 0 && v4275:0 > 0 && v4280:0 > 0 && v4281:0 > 0 && v4282:0 > 0 && v4283:0 > 0 && v4284:0 > 0 && v4285:0 > 0 && v4286:0 > 1 && v4287:0 > 0 && v4288:0 > 0 && v4290:0 > 0 && v4291:0 > 0 && v4292:0 > 0 && v4293:0 > -1 && v4294:0 > 0 && v4295:0 > -1 && v4298:0 > -1 && v4299:0 > 3 && v4300:0 > 3 && v4301:0 > 3 && v4302:0 > 3 && v4303:0 > 7 && v4304:0 > 7 && v4305:0 > 1 && v4306:0 > 0 && v4307:0 > 7 && v4308:0 > 7 && v4309:0 > 7 && v4310:0 > 7 && v4311:0 > 7 && v4299:0 >= v4280:0 && v4300:0 >= v4281:0 && v4301:0 >= v4282:0 && v4302:0 >= v4283:0 && v4303:0 >= v4284:0 && v4304:0 >= v4285:0 && v4305:0 >= v4291:0 && v4845:0 < 0 && v4306:0 >= v4292:0 && v4307:0 >= v4271:0 && v4308:0 >= v4272:0 && v4309:0 >= v4273:0 && v4311:0 >= v4275:0 && v4310:0 >= v4274:0
f_1205(v4268:0, v4269:0, v4270:0, v4271:0, v4272:0, v4273:0, v4274:0, v4275:0, 1, v4279:0, v4278:0, v4277:0, v4280:0, v4299:0, v4281:0, v4300:0, v4282:0, v4301:0, v4283:0, v4302:0, v4284:0, v4303:0, v4285:0, v4304:0, v4291:0, v4305:0, v4292:0, v4306:0, v4307:0, v4308:0, v4309:0, v4310:0, v4311:0, v4286:0, v4287:0, v4288:0, 0, v4290:0, v4293:0, v4294:0, v4295:0, v4296:0, v4297:0, v4298:0, 3, 7, 2, 4, 8) -> f_1205(v4268:0, v4269:0, v4270:0, v4271:0, v4272:0, v4273:0, v4274:0, v4275:0, 1, 1 + v4279:0, v4845:0, v4279:0, v4280:0, v4299:0, v4281:0, v4300:0, v4282:0, v4301:0, v4283:0, v4302:0, v4284:0, v4303:0, v4285:0, v4304:0, v4291:0, v4305:0, v4292:0, v4306:0, v4307:0, v4308:0, v4309:0, v4310:0, v4311:0, v4286:0, v4287:0, v4288:0, 0, v4290:0, v4293:0, v4294:0, v4295:0, v4296:0, v4297:0, v4298:0, 3, 7, 2, 4, 8) :|: v4279:0 > 0 && v4290:0 >= v4287:0 && v4279:0 >= v4268:0 && v4291:0 + v4286:0 <= 1 + v4305:0 && v4292:0 + v4287:0 <= 1 + v4306:0 && v4268:0 > -1 && v4269:0 > -1 && v4271:0 > 0 && v4272:0 > 0 && v4273:0 > 0 && v4274:0 > 0 && v4275:0 > 0 && v4280:0 > 0 && v4281:0 > 0 && v4282:0 > 0 && v4283:0 > 0 && v4284:0 > 0 && v4285:0 > 0 && v4286:0 > 1 && v4287:0 > 0 && v4288:0 > 0 && v4290:0 > 0 && v4291:0 > 0 && v4292:0 > 0 && v4293:0 > -1 && v4294:0 > 0 && v4295:0 > -1 && v4298:0 > -1 && v4299:0 > 3 && v4300:0 > 3 && v4301:0 > 3 && v4302:0 > 3 && v4303:0 > 7 && v4304:0 > 7 && v4305:0 > 1 && v4306:0 > 0 && v4307:0 > 7 && v4308:0 > 7 && v4309:0 > 7 && v4310:0 > 7 && v4311:0 > 7 && v4299:0 >= v4280:0 && v4300:0 >= v4281:0 && v4301:0 >= v4282:0 && v4302:0 >= v4283:0 && v4303:0 >= v4284:0 && v4304:0 >= v4285:0 && v4305:0 >= v4291:0 && v4845:0 > 0 && v4306:0 >= v4292:0 && v4307:0 >= v4271:0 && v4308:0 >= v4272:0 && v4309:0 >= v4273:0 && v4311:0 >= v4275:0 && v4310:0 >= v4274:0
Filtered unneeded arguments:
   f_1205(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49) -> f_1205(x1, x2, x4, x5, x6, x7, x8, x10, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x38, x39, x40, x41, x44)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1205(v4268:0, v4269:0, v4271:0, v4272:0, v4273:0, v4274:0, v4275:0, v4279:0, v4280:0, v4299:0, v4281:0, v4300:0, v4282:0, v4301:0, v4283:0, v4302:0, v4284:0, v4303:0, v4285:0, v4304:0, v4291:0, v4305:0, v4292:0, v4306:0, v4307:0, v4308:0, v4309:0, v4310:0, v4311:0, v4286:0, v4287:0, v4288:0, v4290:0, v4293:0, v4294:0, v4295:0, v4298:0) -> f_1205(v4268:0, v4269:0, v4271:0, v4272:0, v4273:0, v4274:0, v4275:0, 1 + v4279:0, v4280:0, v4299:0, v4281:0, v4300:0, v4282:0, v4301:0, v4283:0, v4302:0, v4284:0, v4303:0, v4285:0, v4304:0, v4291:0, v4305:0, v4292:0, v4306:0, v4307:0, v4308:0, v4309:0, v4310:0, v4311:0, v4286:0, v4287:0, v4288:0, v4290:0, v4293:0, v4294:0, v4295:0, v4298:0) :|: v4290:0 >= v4287:0 && v4279:0 > 0 && v4279:0 >= v4268:0 && v4291:0 + v4286:0 <= 1 + v4305:0 && v4292:0 + v4287:0 <= 1 + v4306:0 && v4268:0 > -1 && v4269:0 > -1 && v4271:0 > 0 && v4272:0 > 0 && v4273:0 > 0 && v4274:0 > 0 && v4275:0 > 0 && v4280:0 > 0 && v4281:0 > 0 && v4282:0 > 0 && v4283:0 > 0 && v4284:0 > 0 && v4285:0 > 0 && v4286:0 > 1 && v4287:0 > 0 && v4288:0 > 0 && v4290:0 > 0 && v4291:0 > 0 && v4292:0 > 0 && v4293:0 > -1 && v4294:0 > 0 && v4295:0 > -1 && v4298:0 > -1 && v4299:0 > 3 && v4300:0 > 3 && v4301:0 > 3 && v4302:0 > 3 && v4303:0 > 7 && v4304:0 > 7 && v4305:0 > 1 && v4306:0 > 0 && v4307:0 > 7 && v4308:0 > 7 && v4309:0 > 7 && v4310:0 > 7 && v4311:0 > 7 && v4299:0 >= v4280:0 && v4300:0 >= v4281:0 && v4301:0 >= v4282:0 && v4302:0 >= v4283:0 && v4303:0 >= v4284:0 && v4304:0 >= v4285:0 && v4305:0 >= v4291:0 && v4306:0 >= v4292:0 && v4307:0 >= v4271:0 && v4308:0 >= v4272:0 && v4309:0 >= v4273:0 && v4310:0 >= v4274:0 && v4311:0 >= v4275:0

----------------------------------------

(61)
Obligation:
Rules:
f_1205(v4268:0, v4269:0, v4271:0, v4272:0, v4273:0, v4274:0, v4275:0, v4279:0, v4280:0, v4299:0, v4281:0, v4300:0, v4282:0, v4301:0, v4283:0, v4302:0, v4284:0, v4303:0, v4285:0, v4304:0, v4291:0, v4305:0, v4292:0, v4306:0, v4307:0, v4308:0, v4309:0, v4310:0, v4311:0, v4286:0, v4287:0, v4288:0, v4290:0, v4293:0, v4294:0, v4295:0, v4298:0) -> f_1205(v4268:0, v4269:0, v4271:0, v4272:0, v4273:0, v4274:0, v4275:0, 1 + v4279:0, v4280:0, v4299:0, v4281:0, v4300:0, v4282:0, v4301:0, v4283:0, v4302:0, v4284:0, v4303:0, v4285:0, v4304:0, v4291:0, v4305:0, v4292:0, v4306:0, v4307:0, v4308:0, v4309:0, v4310:0, v4311:0, v4286:0, v4287:0, v4288:0, v4290:0, v4293:0, v4294:0, v4295:0, v4298:0) :|: v4290:0 >= v4287:0 && v4279:0 > 0 && v4279:0 >= v4268:0 && v4291:0 + v4286:0 <= 1 + v4305:0 && v4292:0 + v4287:0 <= 1 + v4306:0 && v4268:0 > -1 && v4269:0 > -1 && v4271:0 > 0 && v4272:0 > 0 && v4273:0 > 0 && v4274:0 > 0 && v4275:0 > 0 && v4280:0 > 0 && v4281:0 > 0 && v4282:0 > 0 && v4283:0 > 0 && v4284:0 > 0 && v4285:0 > 0 && v4286:0 > 1 && v4287:0 > 0 && v4288:0 > 0 && v4290:0 > 0 && v4291:0 > 0 && v4292:0 > 0 && v4293:0 > -1 && v4294:0 > 0 && v4295:0 > -1 && v4298:0 > -1 && v4299:0 > 3 && v4300:0 > 3 && v4301:0 > 3 && v4302:0 > 3 && v4303:0 > 7 && v4304:0 > 7 && v4305:0 > 1 && v4306:0 > 0 && v4307:0 > 7 && v4308:0 > 7 && v4309:0 > 7 && v4310:0 > 7 && v4311:0 > 7 && v4299:0 >= v4280:0 && v4300:0 >= v4281:0 && v4301:0 >= v4282:0 && v4302:0 >= v4283:0 && v4303:0 >= v4284:0 && v4304:0 >= v4285:0 && v4305:0 >= v4291:0 && v4306:0 >= v4292:0 && v4307:0 >= v4271:0 && v4308:0 >= v4272:0 && v4309:0 >= v4273:0 && v4310:0 >= v4274:0 && v4311:0 >= v4275:0
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.002s
Aborted 1756892249Exec. 6, LLVMSEGraphToIntTRS with some error. Reason: java.lang.NullPointerException: Cannot read field "x" because "allocationIndex.x" is null.
Aborted 1756892249Exec. 5, LLVMSEGraphToIntTRS with some error. Reason: java.lang.NullPointerException: Cannot read field "x" because "allocationIndex.x" is null.
            aprove.InputModules.Programs.llvm.internalStructures.instructions.LLVMStoreInstruction.isOverapproximation(LLVMStoreInstruction.java:407)
            aprove.InputModules.Programs.llvm.internalStructures.instructions.LLVMStoreInstruction.isOverapproximation(LLVMStoreInstruction.java:407)
            aprove.InputModules.Programs.llvm.states.LLVMAbstractState.isOverapproximation(LLVMAbstractState.java:1401)
            aprove.InputModules.Programs.llvm.states.LLVMAbstractState.isOverapproximation(LLVMAbstractState.java:1401)
            aprove.InputModules.Programs.llvm.processors.LLVMSEGraphToIntTRSProcessor.containsOverapproximation(LLVMSEGraphToIntTRSProcessor.java:48)
            aprove.InputModules.Programs.llvm.processors.LLVMSEGraphToIntTRSProcessor.containsOverapproximation(LLVMSEGraphToIntTRSProcessor.java:48)
