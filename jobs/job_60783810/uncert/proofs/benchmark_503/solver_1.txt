YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/NNiQM.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could be proven:

(0) C Problem
(1) CToIRSProof [EQUIVALENT, 18 ms]
(2) IntTRS
(3) TerminationGraphProcessor [SOUND, 28 ms]
(4) IntTRS
(5) IntTRSCompressionProof [EQUIVALENT, 0 ms]
(6) IntTRS
(7) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
(8) IntTRS
(9) CaseAnalysis [EQUIVALENT, 7 ms]
(10) AND
    (11) IntTRS
        (12) TerminationGraphProcessor [EQUIVALENT, 7 ms]
        (13) IntTRS
        (14) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (15) IntTRS
        (16) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (17) YES
    (18) IntTRS
        (19) TerminationGraphProcessor [EQUIVALENT, 5 ms]
        (20) IntTRS
        (21) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (22) IntTRS
        (23) PolynomialOrderProcessor [EQUIVALENT, 1 ms]
        (24) YES


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/NNiQM.c
----------------------------------------

(1) CToIRSProof (EQUIVALENT)
Parsed C Integer Program as IRS.
----------------------------------------

(2)
Obligation:
Rules:
f1(c, x, y) -> f2(c, x_1, y) :|: TRUE
f2(x1, x2, x3) -> f3(x1, x2, x4) :|: TRUE
f3(x5, x6, x7) -> f4(0, x6, x7) :|: TRUE
f6(x8, x9, x10) -> f9(x8, x9, arith) :|: TRUE && arith = x10 + 1
f7(x38, x39, x40) -> f10(x38, x41, x40) :|: TRUE && x41 = x39 + 1
f5(x14, x15, x16) -> f6(x14, x15, x16) :|: x15 > x16
f5(x17, x18, x19) -> f7(x17, x18, x19) :|: x18 <= x19
f9(x20, x21, x22) -> f8(x20, x21, x22) :|: TRUE
f10(x23, x24, x25) -> f8(x23, x24, x25) :|: TRUE
f8(x42, x43, x44) -> f11(x45, x43, x44) :|: TRUE && x45 = x42 + 1
f4(x29, x30, x31) -> f5(x29, x30, x31) :|: x30 < x31
f4(x46, x47, x48) -> f5(x46, x47, x48) :|: x47 > x48
f11(x32, x33, x34) -> f4(x32, x33, x34) :|: TRUE
f4(x35, x36, x37) -> f12(x35, x36, x37) :|: x36 = x37
Start term: f1(c, x, y)

----------------------------------------

(3) TerminationGraphProcessor (SOUND)
Constructed the termination graph and obtained one non-trivial SCC.

----------------------------------------

(4)
Obligation:
Rules:
f4(x29, x30, x31) -> f5(x29, x30, x31) :|: x30 < x31
f11(x32, x33, x34) -> f4(x32, x33, x34) :|: TRUE
f8(x42, x43, x44) -> f11(x45, x43, x44) :|: TRUE && x45 = x42 + 1
f9(x20, x21, x22) -> f8(x20, x21, x22) :|: TRUE
f6(x8, x9, x10) -> f9(x8, x9, arith) :|: TRUE && arith = x10 + 1
f5(x14, x15, x16) -> f6(x14, x15, x16) :|: x15 > x16
f4(x46, x47, x48) -> f5(x46, x47, x48) :|: x47 > x48
f10(x23, x24, x25) -> f8(x23, x24, x25) :|: TRUE
f7(x38, x39, x40) -> f10(x38, x41, x40) :|: TRUE && x41 = x39 + 1
f5(x17, x18, x19) -> f7(x17, x18, x19) :|: x18 <= x19

----------------------------------------

(5) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(6)
Obligation:
Rules:
f8(x42:0, x43:0, x44:0) -> f5(x42:0 + 1, x43:0, x44:0) :|: x44:0 < x43:0
f5(x17:0, x18:0, x19:0) -> f8(x17:0, x18:0 + 1, x19:0) :|: x19:0 >= x18:0
f8(x, x1, x2) -> f5(x + 1, x1, x2) :|: x2 > x1
f5(x14:0, x15:0, x16:0) -> f8(x14:0, x15:0, x16:0 + 1) :|: x16:0 < x15:0

----------------------------------------

(7) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f8(x1, x2, x3) -> f8(x2, x3)
   f5(x1, x2, x3) -> f5(x2, x3)

----------------------------------------

(8)
Obligation:
Rules:
f8(x43:0, x44:0) -> f5(x43:0, x44:0) :|: x44:0 < x43:0
f5(x18:0, x19:0) -> f8(x18:0 + 1, x19:0) :|: x19:0 >= x18:0
f8(x1, x2) -> f5(x1, x2) :|: x2 > x1
f5(x15:0, x16:0) -> f8(x15:0, x16:0 + 1) :|: x16:0 < x15:0

----------------------------------------

(9) CaseAnalysis (EQUIVALENT)
Found the following inductive condition: 
f8(x, x1): 3*x - 3*x1>=0
f5(x2, x3): 3*x2 - 3*x3>=0

----------------------------------------

(10)
Complex Obligation (AND)

----------------------------------------

(11)
Obligation:
Rules:
f8(x43:0, x44:0) -> f5(x43:0, x44:0) :|: x44:0 < x43:0 && 3 * x43:0 + -3 * x44:0 >= 0
f5(x18:0, x19:0) -> f8(x18:0 + 1, x19:0) :|: x19:0 >= x18:0 && 3 * x18:0 + -3 * x19:0 >= 0
f8(x1, x2) -> f5(x1, x2) :|: x2 > x1 && 3 * x1 + -3 * x2 >= 0
f5(x15:0, x16:0) -> f8(x15:0, x16:0 + 1) :|: x16:0 < x15:0 && 3 * x15:0 + -3 * x16:0 >= 0

----------------------------------------

(12) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained one non-trivial SCC.

----------------------------------------

(13)
Obligation:
Rules:
f8(x43:0, x44:0) -> f5(x43:0, x44:0) :|: x44:0 < x43:0 && 3 * x43:0 + -3 * x44:0 >= 0
f5(x18:0, x19:0) -> f8(x18:0 + 1, x19:0) :|: x19:0 >= x18:0 && 3 * x18:0 + -3 * x19:0 >= 0
f5(x15:0, x16:0) -> f8(x15:0, x16:0 + 1) :|: x16:0 < x15:0 && 3 * x15:0 + -3 * x16:0 >= 0

----------------------------------------

(14) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(15)
Obligation:
Rules:
f8(x43:0:0, x44:0:0) -> f8(x43:0:0, x44:0:0 + 1) :|: 3 * x43:0:0 + -3 * x44:0:0 >= 0 && x44:0:0 < x43:0:0

----------------------------------------

(16) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f8(x, x1)] = x - x1

The following rules are decreasing:
f8(x43:0:0, x44:0:0) -> f8(x43:0:0, x44:0:0 + 1) :|: 3 * x43:0:0 + -3 * x44:0:0 >= 0 && x44:0:0 < x43:0:0
The following rules are bounded:
f8(x43:0:0, x44:0:0) -> f8(x43:0:0, x44:0:0 + 1) :|: 3 * x43:0:0 + -3 * x44:0:0 >= 0 && x44:0:0 < x43:0:0

----------------------------------------

(17)
YES

----------------------------------------

(18)
Obligation:
Rules:
f8(x43:0, x44:0) -> f5(x43:0, x44:0) :|: x44:0 < x43:0 && 3 * x43:0 + -3 * x44:0 < 0
f5(x18:0, x19:0) -> f8(x18:0 + 1, x19:0) :|: x19:0 >= x18:0 && 3 * x18:0 + -3 * x19:0 < 0
f8(x1, x2) -> f5(x1, x2) :|: x2 > x1 && 3 * x1 + -3 * x2 < 0
f5(x15:0, x16:0) -> f8(x15:0, x16:0 + 1) :|: x16:0 < x15:0 && 3 * x15:0 + -3 * x16:0 < 0

----------------------------------------

(19) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained one non-trivial SCC.

----------------------------------------

(20)
Obligation:
Rules:
f5(x18:0, x19:0) -> f8(x18:0 + 1, x19:0) :|: x19:0 >= x18:0 && 3 * x18:0 + -3 * x19:0 < 0
f8(x1, x2) -> f5(x1, x2) :|: x2 > x1 && 3 * x1 + -3 * x2 < 0

----------------------------------------

(21) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(22)
Obligation:
Rules:
f5(x18:0:0, x19:0:0) -> f5(x18:0:0 + 1, x19:0:0) :|: 3 * x18:0:0 + -3 * x19:0:0 < 0 && x19:0:0 >= x18:0:0 && 3 * (x18:0:0 + 1) + -3 * x19:0:0 < 0 && x19:0:0 > x18:0:0 + 1

----------------------------------------

(23) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f5(x, x1)] = -x + x1

The following rules are decreasing:
f5(x18:0:0, x19:0:0) -> f5(x18:0:0 + 1, x19:0:0) :|: 3 * x18:0:0 + -3 * x19:0:0 < 0 && x19:0:0 >= x18:0:0 && 3 * (x18:0:0 + 1) + -3 * x19:0:0 < 0 && x19:0:0 > x18:0:0 + 1
The following rules are bounded:
f5(x18:0:0, x19:0:0) -> f5(x18:0:0 + 1, x19:0:0) :|: 3 * x18:0:0 + -3 * x19:0:0 < 0 && x19:0:0 >= x18:0:0 && 3 * (x18:0:0 + 1) + -3 * x19:0:0 < 0 && x19:0:0 > x18:0:0 + 1

----------------------------------------

(24)
YES
