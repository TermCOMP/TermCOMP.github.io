YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/yQoF3.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could be proven:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 53 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 7298 ms]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) LLVM Symbolic Execution SCC
        (8) SCC2IRS [SOUND, 28 ms]
        (9) IntTRS
        (10) RankingReductionPairProof [EQUIVALENT, 10 ms]
        (11) YES
    (12) LLVM Symbolic Execution SCC
        (13) SCC2IRS [SOUND, 40 ms]
        (14) IntTRS
        (15) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (16) IntTRS
        (17) RankingReductionPairProof [EQUIVALENT, 7 ms]
        (18) YES
    (19) LLVM Symbolic Execution SCC
        (20) SCC2IRS [SOUND, 32 ms]
        (21) IntTRS
        (22) PolynomialOrderProcessor [EQUIVALENT, 1 ms]
        (23) YES


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/yQoF3.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/yQoF3.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 7
	0:
		%1 = alloca i32, align 4
		%2 = alloca *i32, align 8
		%3 = alloca *i32, align 8
		%4 = alloca *i32, align 8
		%5 = alloca *i32, align 8
		%6 = alloca *i32, align 8
		%7 = alloca *i32, align 8
		%8 = alloca *i32, align 8
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i32 %2)
		%9 = alloca i8, numElementsLit: 4, align 16
		%10 = bitcast *i8 %9 to *i32
		store %10, %2
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i32 %3)
		%11 = alloca i8, numElementsLit: 4, align 16
		%12 = bitcast *i8 %11 to *i32
		store %12, %3
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i32 %4)
		%13 = alloca i8, numElementsLit: 4, align 16
		%14 = bitcast *i8 %13 to *i32
		store %14, %4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i32 %5)
		%15 = alloca i8, numElementsLit: 4, align 16
		%16 = bitcast *i8 %15 to *i32
		store %16, %5
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i32 %6)
		%17 = alloca i8, numElementsLit: 4, align 16
		%18 = bitcast *i8 %17 to *i32
		store %18, %6
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i32 %7)
		%19 = alloca i8, numElementsLit: 4, align 16
		%20 = bitcast *i8 %19 to *i32
		store %20, %7
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i32 %8)
		%21 = alloca i8, numElementsLit: 4, align 16
		%22 = bitcast *i8 %21 to *i32
		store %22, %8
		%23 = load %3
		%24 = load %23
		%25 = load %2
		store %24, %25
		%26 = load %5
		%27 = load %26
		%28 = load %4
		store %27, %28
		%29 = load %7
		%30 = load %29
		%31 = load %6
		store %30, %31
		%32 = load %8
		store 0, %32
		br %33
	33:
		%34 = load %3
		%35 = load %34
		%36 = load %5
		%37 = load %36
		%38 = icmp sge %35 %37
		br %38, %39, %64
	39:
		%40 = load %8
		%41 = load %40
		%42 = add i32 %41, 1
		%43 = load %8
		store %42, %43
		%44 = load %7
		%45 = load %44
		%46 = icmp sgt %45 1
		br %46, %47, %58
	47:
		%48 = load %7
		%49 = load %48
		%50 = sub i32 %49, 1
		%51 = load %7
		store %50, %51
		%52 = load %3
		%53 = load %52
		%54 = load %7
		%55 = load %54
		%56 = add i32 %53, %55
		%57 = load %3
		store %56, %57
		br %63
	58:
		%59 = load %5
		%60 = load %59
		%61 = add i32 %60, 1
		%62 = load %5
		store %61, %62
		br %63
	63:
		br %33
	64:
		%65 = load %1
		ret %65


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 3 SCCs.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC
----------------------------------------

(8) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 24 rulesP rules:
f_962(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2769, 1, v2771, v2772, 0, 2, v2775, v2776, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) -> f_963(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2769, 1, v2771, v2772, 0, 2, v2775, v2776, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) :|: 0 = 0
f_963(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2769, 1, v2771, v2772, 0, 2, v2775, v2776, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) -> f_964(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2769, 1, v2771, v2772, 0, 2, v2775, v2776, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) :|: 0 = 0
f_964(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2769, 1, v2771, v2772, 0, 2, v2775, v2776, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) -> f_965(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2769, 1, v2771, v2772, 0, 2, v2775, v2776, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) :|: 0 = 0
f_965(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2769, 1, v2771, v2772, 0, 2, v2775, v2776, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) -> f_966(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2771, v2772, 0, 2, v2775, v2769, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) :|: 0 = 0
f_966(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2771, v2772, 0, 2, v2775, v2769, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) -> f_967(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2771, v2772, 0, 2, v2775, v2769, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) :|: v2776 <= v2768
f_967(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2771, v2772, 0, 2, v2775, v2769, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) -> f_969(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2771, v2772, 0, 2, v2775, v2769, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) :|: 0 = 0
f_969(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2771, v2772, 0, 2, v2775, v2769, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) -> f_971(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2771, v2772, 0, 2, v2775, v2769, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) :|: TRUE
f_971(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2771, v2772, 0, 2, v2775, v2769, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) -> f_973(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2771, v2772, 0, 2, v2775, v2769, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) :|: 0 = 0
f_973(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2771, v2772, 0, 2, v2775, v2769, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) -> f_975(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2772, 0, 2, v2775, v2769, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) :|: 0 = 0
f_975(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2772, 0, 2, v2775, v2769, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) -> f_976(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2772, v2903, 0, 2, v2775, v2769, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) :|: v2903 = 1 + v2772 && 3 <= v2903
f_976(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2772, v2903, 0, 2, v2775, v2769, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) -> f_977(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2772, v2903, 0, 2, v2775, v2769, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) :|: 0 = 0
f_977(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2772, v2903, 0, 2, v2775, v2769, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) -> f_978(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2772, v2903, 0, 2, v2775, v2769, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) :|: TRUE
f_978(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2772, v2903, 0, 2, v2775, v2769, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) -> f_979(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2772, v2903, 0, 2, v2775, v2769, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) :|: 0 = 0
f_979(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2772, v2903, 0, 2, v2775, v2769, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) -> f_980(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2772, v2903, 0, 2, v2775, v2769, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) :|: 0 = 0
f_980(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2772, v2903, 0, 2, v2775, v2769, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) -> f_981(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2772, v2903, 0, 2, v2775, v2769, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) :|: 0 = 0
f_981(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2772, v2903, 0, 2, v2775, v2769, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) -> f_982(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2772, v2903, 0, 2, v2775, v2769, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) :|: TRUE
f_982(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2772, v2903, 0, 2, v2775, v2769, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) -> f_983(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2772, v2903, 0, 2, v2775, v2769, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) :|: 0 = 0
f_983(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2772, v2903, 0, 2, v2775, v2769, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) -> f_984(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2772, v2903, 0, 2, v2775, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) :|: 0 = 0
f_984(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2772, v2903, 0, 2, v2775, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) -> f_985(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2772, v2903, 0, 2, v2775, v2942, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) :|: v2942 = 1 + v2776
f_985(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2772, v2903, 0, 2, v2775, v2942, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) -> f_986(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2772, v2903, 0, 2, v2775, v2942, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) :|: 0 = 0
f_986(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2772, v2903, 0, 2, v2775, v2942, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) -> f_987(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2772, v2903, 0, 2, v2775, v2942, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) :|: TRUE
f_987(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2772, v2903, 0, 2, v2775, v2942, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) -> f_988(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2772, v2903, 0, 2, v2775, v2942, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) :|: TRUE
f_988(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2772, v2903, 0, 2, v2775, v2942, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) -> f_961(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2776, 1, v2772, v2903, 0, 2, v2775, v2942, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) :|: TRUE
f_961(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2769, 1, v2771, v2772, 0, 2, v2775, v2776, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) -> f_962(v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, v2761, v2762, v2763, v2764, v2765, v2766, v2767, v2768, v2769, 1, v2771, v2772, 0, 2, v2775, v2776, v2777, v2778, v2779, v2780, v2781, v2782, v2783, v2784, v2785, v2786, v2787, v2788, v2789, v2790, v2791, 3, 7, 4, 8) :|: TRUE
Combined rules. Obtained 1 rulesP rules:
f_962(v2750:0, v2751:0, v2752:0, v2753:0, v2754:0, v2755:0, v2756:0, v2757:0, v2758:0, v2759:0, v2760:0, v2761:0, v2762:0, v2763:0, v2764:0, v2765:0, v2766:0, v2767:0, v2768:0, v2769:0, 1, v2771:0, v2772:0, 0, 2, v2775:0, v2776:0, v2777:0, v2778:0, v2779:0, v2780:0, v2781:0, v2782:0, v2783:0, v2784:0, v2785:0, v2786:0, v2787:0, v2788:0, v2789:0, v2790:0, v2791:0, 3, 7, 4, 8) -> f_962(v2750:0, v2751:0, v2752:0, v2753:0, v2754:0, v2755:0, v2756:0, v2757:0, v2758:0, v2759:0, v2760:0, v2761:0, v2762:0, v2763:0, v2764:0, v2765:0, v2766:0, v2767:0, v2768:0, v2776:0, 1, v2772:0, 1 + v2772:0, 0, 2, v2775:0, 1 + v2776:0, v2777:0, v2778:0, v2779:0, v2780:0, v2781:0, v2782:0, v2783:0, v2784:0, v2785:0, v2786:0, v2787:0, v2788:0, v2789:0, v2790:0, v2791:0, 3, 7, 4, 8) :|: v2772:0 > 1 && v2776:0 <= v2768:0
Filtered unneeded arguments:
   f_962(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46) -> f_962(x19, x23, x27)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_962(v2768:0, v2772:0, v2776:0) -> f_962(v2768:0, 1 + v2772:0, 1 + v2776:0) :|: v2772:0 > 1 && v2776:0 <= v2768:0

----------------------------------------

(9)
Obligation:
Rules:
f_962(v2768:0, v2772:0, v2776:0) -> f_962(v2768:0, 1 + v2772:0, 1 + v2776:0) :|: v2772:0 > 1 && v2776:0 <= v2768:0

----------------------------------------

(10) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_962 ] = -1*f_962_3 + f_962_1

The following rules are decreasing:
f_962(v2768:0, v2772:0, v2776:0) -> f_962(v2768:0, 1 + v2772:0, 1 + v2776:0) :|: v2772:0 > 1 && v2776:0 <= v2768:0

The following rules are bounded:
f_962(v2768:0, v2772:0, v2776:0) -> f_962(v2768:0, 1 + v2772:0, 1 + v2776:0) :|: v2772:0 > 1 && v2776:0 <= v2768:0


----------------------------------------

(11)
YES

----------------------------------------

(12)
Obligation:
SCC
----------------------------------------

(13) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 32 rulesP rules:
f_862(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1982, 1, v1984, v1985, v1986, v1987, v1988, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) -> f_863(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1982, 1, v1984, v1985, v1986, v1987, v1988, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_863(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1982, 1, v1984, v1985, v1986, v1987, v1988, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) -> f_864(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1984, v1985, v1986, v1987, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_864(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1984, v1985, v1986, v1987, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) -> f_865(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1984, v1985, v1986, v1987, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_865(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1984, v1985, v1986, v1987, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) -> f_866(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1984, v1985, v1986, v1987, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_866(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1984, v1985, v1986, v1987, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) -> f_867(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1984, v1985, v1986, v1987, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) :|: v1980 <= v1988
f_867(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1984, v1985, v1986, v1987, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) -> f_869(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1984, v1985, v1986, v1987, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_869(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1984, v1985, v1986, v1987, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) -> f_871(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1984, v1985, v1986, v1987, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) :|: TRUE
f_871(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1984, v1985, v1986, v1987, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) -> f_873(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1984, v1985, v1986, v1987, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_873(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1984, v1985, v1986, v1987, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) -> f_875(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v1986, v1987, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_875(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v1986, v1987, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) -> f_876(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1986, v1987, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) :|: v2103 = 1 + v1985 && 2 <= v2103
f_876(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1986, v1987, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) -> f_877(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1986, v1987, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_877(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1986, v1987, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) -> f_878(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1986, v1987, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) :|: TRUE
f_878(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1986, v1987, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) -> f_879(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1986, v1987, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_879(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1986, v1987, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) -> f_880(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1987, v1986, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_880(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1987, v1986, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) -> f_881(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1987, v1986, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) :|: 1 < v1987 && 3 <= v1986 && 3 <= v1981
f_881(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1987, v1986, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) -> f_883(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1987, v1986, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_883(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1987, v1986, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) -> f_885(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1987, v1986, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) :|: TRUE
f_885(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1987, v1986, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) -> f_887(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1987, v1986, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_887(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1987, v1986, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) -> f_889(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1987, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_889(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1987, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) -> f_891(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1987, v2122, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) :|: 1 + v2122 = v1987 && 1 <= v2122
f_891(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1987, v2122, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) -> f_893(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1987, v2122, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_893(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1987, v2122, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) -> f_895(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1987, v2122, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) :|: TRUE
f_895(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1987, v2122, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) -> f_897(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1987, v2122, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_897(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1987, v2122, v1982, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) -> f_899(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1987, v2122, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_899(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1987, v2122, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) -> f_901(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1987, v2122, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_901(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1987, v2122, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) -> f_903(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1987, v2122, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_903(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1987, v2122, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) -> f_905(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1987, v2122, v2224, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) :|: v2224 = v1988 + v2122
f_905(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1987, v2122, v2224, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) -> f_907(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1987, v2122, v2224, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_907(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1987, v2122, v2224, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) -> f_909(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1987, v2122, v2224, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) :|: TRUE
f_909(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1987, v2122, v2224, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) -> f_912(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1987, v2122, v2224, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) :|: TRUE
f_912(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1987, v2122, v2224, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) -> f_861(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1988, 1, v1985, v2103, v1987, v2122, v2224, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) :|: TRUE
f_861(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1982, 1, v1984, v1985, v1986, v1987, v1988, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) -> f_862(v1964, v1965, v1966, v1967, v1968, v1969, v1970, v1971, v1972, v1973, v1974, v1975, v1976, v1977, v1978, v1979, v1980, v1981, v1982, 1, v1984, v1985, v1986, v1987, v1988, v1989, v1990, v1991, v1992, v1993, v1994, v1995, v1996, v1997, v1998, v1999, v2000, v2001, v2002, v2003, 0, 3, 7, 2, 4, 8) :|: TRUE
Combined rules. Obtained 1 rulesP rules:
f_862(v1964:0, v1965:0, v1966:0, v1967:0, v1968:0, v1969:0, v1970:0, v1971:0, v1972:0, v1973:0, v1974:0, v1975:0, v1976:0, v1977:0, v1978:0, v1979:0, v1980:0, v1981:0, v1982:0, 1, v1984:0, v1985:0, v1986:0, 1 + v2122:0, v1988:0, v1989:0, v1990:0, v1991:0, v1992:0, v1993:0, v1994:0, v1995:0, v1996:0, v1997:0, v1998:0, v1999:0, v2000:0, v2001:0, v2002:0, v2003:0, 0, 3, 7, 2, 4, 8) -> f_862(v1964:0, v1965:0, v1966:0, v1967:0, v1968:0, v1969:0, v1970:0, v1971:0, v1972:0, v1973:0, v1974:0, v1975:0, v1976:0, v1977:0, v1978:0, v1979:0, v1980:0, v1981:0, v1988:0, 1, v1985:0, 1 + v1985:0, 1 + v2122:0, v2122:0, v1988:0 + v2122:0, v1989:0, v1990:0, v1991:0, v1992:0, v1993:0, v1994:0, v1995:0, v1996:0, v1997:0, v1998:0, v1999:0, v2000:0, v2001:0, v2002:0, v2003:0, 0, 3, 7, 2, 4, 8) :|: v1988:0 >= v1980:0 && v1985:0 > 0 && v1986:0 > 2 && v2122:0 > 0 && v1981:0 > 2
Filtered unneeded arguments:
   f_862(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46) -> f_862(x17, x18, x22, x23, x24, x25)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_862(v1980:0, v1981:0, v1985:0, v1986:0, sum~cons_1~v2122:0, v1988:0) -> f_862(v1980:0, v1981:0, 1 + v1985:0, 1 + v2122:0, v2122:0, v1988:0 + v2122:0) :|: v1985:0 > 0 && v1988:0 >= v1980:0 && v1986:0 > 2 && v1981:0 > 2 && v2122:0 > 0 && sum~cons_1~v2122:0 = 1 + v2122:0

----------------------------------------

(14)
Obligation:
Rules:
f_862(v1980:0, v1981:0, v1985:0, v1986:0, sum~cons_1~v2122:0, v1988:0) -> f_862(v1980:0, v1981:0, 1 + v1985:0, 1 + v2122:0, v2122:0, v1988:0 + v2122:0) :|: v1985:0 > 0 && v1988:0 >= v1980:0 && v1986:0 > 2 && v1981:0 > 2 && v2122:0 > 0 && sum~cons_1~v2122:0 = 1 + v2122:0

----------------------------------------

(15) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(16)
Obligation:
Rules:
f_862(v1980:0:0, v1981:0:0, v1985:0:0, v1986:0:0, sum~cons_1~v2122:0:0, v1988:0:0) -> f_862(v1980:0:0, v1981:0:0, 1 + v1985:0:0, 1 + v2122:0:0, v2122:0:0, v1988:0:0 + v2122:0:0) :|: v1981:0:0 > 2 && v2122:0:0 > 0 && v1986:0:0 > 2 && v1988:0:0 >= v1980:0:0 && v1985:0:0 > 0 && sum~cons_1~v2122:0:0 = 1 + v2122:0:0

----------------------------------------

(17) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_862 ] = f_862_5

The following rules are decreasing:
f_862(v1980:0:0, v1981:0:0, v1985:0:0, v1986:0:0, sum~cons_1~v2122:0:0, v1988:0:0) -> f_862(v1980:0:0, v1981:0:0, 1 + v1985:0:0, 1 + v2122:0:0, v2122:0:0, v1988:0:0 + v2122:0:0) :|: v1981:0:0 > 2 && v2122:0:0 > 0 && v1986:0:0 > 2 && v1988:0:0 >= v1980:0:0 && v1985:0:0 > 0 && sum~cons_1~v2122:0:0 = 1 + v2122:0:0

The following rules are bounded:
f_862(v1980:0:0, v1981:0:0, v1985:0:0, v1986:0:0, sum~cons_1~v2122:0:0, v1988:0:0) -> f_862(v1980:0:0, v1981:0:0, 1 + v1985:0:0, 1 + v2122:0:0, v2122:0:0, v1988:0:0 + v2122:0:0) :|: v1981:0:0 > 2 && v2122:0:0 > 0 && v1986:0:0 > 2 && v1988:0:0 >= v1980:0:0 && v1985:0:0 > 0 && sum~cons_1~v2122:0:0 = 1 + v2122:0:0


----------------------------------------

(18)
YES

----------------------------------------

(19)
Obligation:
SCC
----------------------------------------

(20) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 24 rulesP rules:
f_746(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1473, 1, v1475, v1476, 0, v1478, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8) -> f_748(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1473, 1, v1475, v1476, 0, v1478, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8) :|: 0 = 0
f_748(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1473, 1, v1475, v1476, 0, v1478, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8) -> f_750(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1473, 1, v1475, v1476, 0, v1478, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8) :|: 0 = 0
f_750(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1473, 1, v1475, v1476, 0, v1478, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8) -> f_752(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1475, v1476, 0, v1473, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8) :|: 0 = 0
f_752(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1475, v1476, 0, v1473, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8) -> f_754(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1475, v1476, 0, v1473, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8) :|: v1478 <= v1470
f_754(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1475, v1476, 0, v1473, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8) -> f_758(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1475, v1476, 0, v1473, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8) :|: 0 = 0
f_758(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1475, v1476, 0, v1473, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8) -> f_762(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1475, v1476, 0, v1473, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8) :|: TRUE
f_762(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1475, v1476, 0, v1473, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8) -> f_766(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1475, v1476, 0, v1473, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8) :|: 0 = 0
f_766(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1475, v1476, 0, v1473, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8) -> f_770(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1476, 0, v1473, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8) :|: 0 = 0
f_770(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1476, 0, v1473, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8) -> f_773(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1476, v1554, 0, v1473, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8, 2) :|: v1554 = 1 + v1476 && 2 <= v1554
f_773(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1476, v1554, 0, v1473, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8, 2) -> f_776(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1476, v1554, 0, v1473, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8, 2) :|: 0 = 0
f_776(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1476, v1554, 0, v1473, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8, 2) -> f_779(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1476, v1554, 0, v1473, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8, 2) :|: TRUE
f_779(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1476, v1554, 0, v1473, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8, 2) -> f_782(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1476, v1554, 0, v1473, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8, 2) :|: 0 = 0
f_782(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1476, v1554, 0, v1473, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8, 2) -> f_785(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1476, v1554, 0, v1473, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8, 2) :|: 0 = 0
f_785(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1476, v1554, 0, v1473, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8, 2) -> f_788(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1476, v1554, 0, v1473, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8, 2) :|: 0 = 0
f_788(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1476, v1554, 0, v1473, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8, 2) -> f_791(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1476, v1554, 0, v1473, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8, 2) :|: TRUE
f_791(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1476, v1554, 0, v1473, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8, 2) -> f_794(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1476, v1554, 0, v1473, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8, 2) :|: 0 = 0
f_794(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1476, v1554, 0, v1473, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8, 2) -> f_797(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1476, v1554, 0, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8, 2) :|: 0 = 0
f_797(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1476, v1554, 0, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8, 2) -> f_800(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1476, v1554, 0, v1650, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8, 2) :|: v1650 = 1 + v1478
f_800(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1476, v1554, 0, v1650, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8, 2) -> f_804(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1476, v1554, 0, v1650, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8, 2) :|: 0 = 0
f_804(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1476, v1554, 0, v1650, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8, 2) -> f_807(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1476, v1554, 0, v1650, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8, 2) :|: TRUE
f_807(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1476, v1554, 0, v1650, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8, 2) -> f_809(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1476, v1554, 0, v1650, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8, 2) :|: TRUE
f_809(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1476, v1554, 0, v1650, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8, 2) -> f_811(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1476, v1554, 0, v1650, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8, 2) :|: TRUE
f_811(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1476, v1554, 0, v1650, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8, 2) -> f_744(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1478, 1, v1476, v1554, 0, v1650, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8) :|: TRUE
f_744(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1473, 1, v1475, v1476, 0, v1478, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8) -> f_746(v1455, v1456, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1473, 1, v1475, v1476, 0, v1478, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, v1489, v1490, v1491, v1492, v1493, 3, 7, 4, 8) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_746(v1455:0, v1456:0, v1457:0, v1458:0, v1459:0, v1460:0, v1461:0, v1462:0, v1463:0, v1464:0, v1465:0, v1466:0, v1467:0, v1468:0, v1469:0, v1470:0, v1471:0, v1472:0, v1473:0, 1, v1475:0, v1476:0, 0, v1478:0, v1479:0, v1480:0, v1481:0, v1482:0, v1483:0, v1484:0, v1485:0, v1486:0, v1487:0, v1488:0, v1489:0, v1490:0, v1491:0, v1492:0, v1493:0, 3, 7, 4, 8) -> f_746(v1455:0, v1456:0, v1457:0, v1458:0, v1459:0, v1460:0, v1461:0, v1462:0, v1463:0, v1464:0, v1465:0, v1466:0, v1467:0, v1468:0, v1469:0, v1470:0, v1471:0, v1472:0, v1478:0, 1, v1476:0, 1 + v1476:0, 0, 1 + v1478:0, v1479:0, v1480:0, v1481:0, v1482:0, v1483:0, v1484:0, v1485:0, v1486:0, v1487:0, v1488:0, v1489:0, v1490:0, v1491:0, v1492:0, v1493:0, 3, 7, 4, 8) :|: v1476:0 > 0 && v1478:0 <= v1470:0
Filtered unneeded arguments:
   f_746(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43) -> f_746(x16, x22, x24)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_746(v1470:0, v1476:0, v1478:0) -> f_746(v1470:0, 1 + v1476:0, 1 + v1478:0) :|: v1476:0 > 0 && v1478:0 <= v1470:0

----------------------------------------

(21)
Obligation:
Rules:
f_746(v1470:0, v1476:0, v1478:0) -> f_746(v1470:0, 1 + v1476:0, 1 + v1478:0) :|: v1476:0 > 0 && v1478:0 <= v1470:0

----------------------------------------

(22) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_746(x, x1, x2)] = x - x2

The following rules are decreasing:
f_746(v1470:0, v1476:0, v1478:0) -> f_746(v1470:0, 1 + v1476:0, 1 + v1478:0) :|: v1476:0 > 0 && v1478:0 <= v1470:0
The following rules are bounded:
f_746(v1470:0, v1476:0, v1478:0) -> f_746(v1470:0, 1 + v1476:0, 1 + v1478:0) :|: v1476:0 > 0 && v1478:0 <= v1470:0

----------------------------------------

(23)
YES
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.001s
