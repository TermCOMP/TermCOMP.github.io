MAYBE
proof of /hpcwork/ff862203/termcomp25/benchmarks/f0XAN.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could not be shown:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 53 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 9628 ms]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) LLVM Symbolic Execution SCC
        (8) SCC2IRS [SOUND, 17 ms]
        (9) IntTRS
        (10) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (11) IntTRS
        (12) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
        (13) IntTRS
        (14) IntTRSPeriodicNontermProof [COMPLETE, 3 ms]
        (15) NO
    (16) LLVM Symbolic Execution SCC
        (17) SCC2IRS [SOUND, 14 ms]
        (18) IntTRS
            (19) IntTRSCompressionProof [EQUIVALENT, 0 ms]
            (20) IntTRS
            (21) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
            (22) IntTRS
            (23) IntTRSPeriodicNontermProof [COMPLETE, 0 ms]
            (24) NO
        (25) SCC2IRS [SOUND, 58 ms]
        (26) IntTRS
    (27) LLVM Symbolic Execution SCC
        (28) SCC2IRS [SOUND, 32 ms]
        (29) IntTRS
            (30) IntTRSNonPeriodicNontermProof [COMPLETE, 1 ms]
            (31) NO
        (32) SCC2IRS [SOUND, 15 ms]
        (33) IntTRS
    (34) LLVM Symbolic Execution SCC
        (35) SCC2IRS [SOUND, 19 ms]
        (36) IntTRS
            (37) IntTRSPeriodicNontermProof [COMPLETE, 3 ms]
            (38) NO
        (39) SCC2IRS [SOUND, 6 ms]
        (40) IntTRS
            (41) IntTRSCompressionProof [EQUIVALENT, 0 ms]
            (42) IntTRS
            (43) IntTRSPeriodicNontermProof [COMPLETE, 8 ms]
            (44) NO
    (45) LLVM Symbolic Execution SCC
        (46) SCC2IRS [SOUND, 17 ms]
        (47) IntTRS
            (48) IntTRSNonPeriodicNontermProof [COMPLETE, 5 ms]
            (49) NO
        (50) SCC2IRS [SOUND, 12 ms]
        (51) IntTRS


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/f0XAN.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/f0XAN.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "cstrcat" linkageType: EXTERNALLY_VISIBLE returnParam: *i8 parameters: (0 *i8, 1 *i8) variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 10
	0:
		%3 = alloca *i8, align 8
		%4 = alloca *i8, align 8
		%5 = alloca *i8, align 8
		store %0, %3
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %3)
		store %1, %4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %4)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %5)
		%6 = load %3
		store %6, %5
		br %7
	7:
		%8 = load %5
		%9 = load %8
		%10 = sext i8 %9 to i32
		%11 = icmp ne %10 0
		br %11, %12, %15
	12:
		%13 = load %5
		%14 = getelementptr %13, 1
		store %14, %5
		br %7
	15:
		br %16
	16:
		%17 = load %4
		%18 = getelementptr %17, 1
		store %18, %4
		%19 = load %17
		%20 = load %5
		%21 = getelementptr %20, 1
		store %21, %5
		store %19, %20
		%22 = sext i8 %19 to i32
		%23 = icmp ne %22 0
		br %23, %24, %25
	24:
		br %16
	25:
		%26 = load %3
		ret %26

*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 40
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		%3 = alloca i32, align 4
		%4 = alloca i32, align 4
		%5 = alloca *i8, align 8
		%6 = alloca *i8, align 8
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		%7 = call i32 @__VERIFIER_nondet_int()
		store %7, %2
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		%8 = call i32 @__VERIFIER_nondet_int()
		store %8, %3
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %4)
		%9 = call i32 @__VERIFIER_nondet_int()
		store %9, %4
		%10 = load %2
		%11 = icmp slt %10 1
		br %11, %12, %13
	12:
		store 1, %2
		br %13
	13:
		%14 = load %3
		%15 = icmp slt %14 2
		br %15, %16, %17
	16:
		store 2, %3
		br %17
	17:
		%18 = load %4
		%19 = icmp slt %18 1
		br %19, %20, %21
	20:
		store 1, %4
		br %21
	21:
		%22 = load %3
		%23 = load %4
		%24 = sub i32 %22, %23
		%25 = load %2
		%26 = icmp slt %24 %25
		br %26, %31, %27
	27:
		%28 = load %4
		%29 = load %3
		%30 = icmp sgt %28 %29
		br %30, %31, %32
	31:
		store 0, %1
		br %54
	32:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %5)
		%33 = load %2
		%34 = sext i32 %33 to i64
		%35 = mul i64 %34, 1
		%36 = alloca i8, numElementsLit: %35, align 16
		store %36, %5
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %6)
		%37 = load %3
		%38 = sext i32 %37 to i64
		%39 = mul i64 %38, 1
		%40 = alloca i8, numElementsLit: %39, align 16
		store %40, %6
		%41 = load %5
		%42 = load %2
		%43 = sub i32 %42, 1
		%44 = sext i32 %43 to i64
		%45 = getelementptr %41, %44
		store 0, %45
		%46 = load %6
		%47 = load %4
		%48 = sub i32 %47, 1
		%49 = sext i32 %48 to i64
		%50 = getelementptr %46, %49
		store 0, %50
		%51 = load %6
		%52 = load %5
		%53 = call *i8 @cstrcat(*i8 %51, *i8 %52)
		store 0, %1
		br %54
	54:
		%55 = load %1
		ret %55


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 5 SCCs.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC
----------------------------------------

(8) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 15 rulesP rules:
f_1421(v7564, v7565, v7566, v7567, v7568, v7569, 0, v7571, v7572, v7573, v7574, v7575, v7576, 1, v7578, v7596, v7579, v7597, v7580, v7598, v7581, v7599, v7582, v7600, v7583, v7601, v7590, v7593, v7591, v7602, v7603, v7604, v7605, v7584, v7585, v7586, v7587, v7588, v7589, v7592, v7594, v7595, 3, 7, 2, 4, 8) -> f_1422(v7564, v7565, v7566, v7567, v7568, v7569, 0, v7571, v7572, v7573, v7574, v7575, v7576, 1, v7578, v7596, v7579, v7597, v7580, v7598, v7581, v7599, v7582, v7600, v7583, v7601, v7590, v7593, v7591, v7602, v7603, v7604, v7605, v7805, v7806, v7807, v7808, v7809, v7810, v7813, v7815, v7816, 3, 7, 2, 4, 8) :|: TRUE
f_1422(v7785, v7786, v7787, v7788, v7789, v7790, 0, v7792, v7793, v7794, v7795, v7796, v7797, 1, v7799, v7817, v7800, v7818, v7801, v7819, v7802, v7820, v7803, v7821, v7804, v7822, v7811, v7814, v7812, v7823, v7824, v7825, v7826, v7805, v7806, v7807, v7808, v7809, v7810, v7813, v7815, v7816, 3, 7, 2, 4, 8) -> f_1424(v7785, v7786, v7787, v7788, v7789, v7790, 0, v7792, v7827, v7794, v7795, v7796, v7797, 1, v7799, v7817, v7800, v7818, v7801, v7819, v7802, v7820, v7803, v7821, v7804, v7822, v7811, v7814, v7812, v7823, v7824, v7825, v7826, v7805, v7806, v7807, v7808, v7809, v7810, v7813, v7815, v7816, 3, 7, 2, 4, 8) :|: TRUE
f_1424(v7785, v7786, v7787, v7788, v7789, v7790, 0, v7792, v7827, v7794, v7795, v7796, v7797, 1, v7799, v7817, v7800, v7818, v7801, v7819, v7802, v7820, v7803, v7821, v7804, v7822, v7811, v7814, v7812, v7823, v7824, v7825, v7826, v7805, v7806, v7807, v7808, v7809, v7810, v7813, v7815, v7816, 3, 7, 2, 4, 8) -> f_1426(v7785, v7786, v7787, v7788, v7789, v7790, 0, v7792, v7827, v7829, v7795, v7796, v7797, 1, v7799, v7817, v7800, v7818, v7801, v7819, v7802, v7820, v7803, v7821, v7804, v7822, v7811, v7814, v7812, v7823, v7824, v7825, v7826, v7805, v7806, v7807, v7808, v7809, v7810, v7813, v7815, v7816, 3, 7, 2, 4, 8) :|: v7829 = 1 + v7827 && 1 <= v7829
f_1426(v7785, v7786, v7787, v7788, v7789, v7790, 0, v7792, v7827, v7829, v7795, v7796, v7797, 1, v7799, v7817, v7800, v7818, v7801, v7819, v7802, v7820, v7803, v7821, v7804, v7822, v7811, v7814, v7812, v7823, v7824, v7825, v7826, v7805, v7806, v7807, v7808, v7809, v7810, v7813, v7815, v7816, 3, 7, 2, 4, 8) -> f_1428(v7785, v7786, v7787, v7788, v7789, v7790, 0, v7792, v7827, v7829, v7795, v7796, v7797, 1, v7799, v7817, v7800, v7818, v7801, v7819, v7802, v7820, v7803, v7821, v7804, v7822, v7811, v7814, v7812, v7823, v7824, v7825, v7826, v7805, v7806, v7807, v7808, v7809, v7810, v7813, v7815, v7816, 3, 7, 2, 4, 8) :|: TRUE
f_1428(v7785, v7786, v7787, v7788, v7789, v7790, 0, v7792, v7827, v7829, v7795, v7796, v7797, 1, v7799, v7817, v7800, v7818, v7801, v7819, v7802, v7820, v7803, v7821, v7804, v7822, v7811, v7814, v7812, v7823, v7824, v7825, v7826, v7805, v7806, v7807, v7808, v7809, v7810, v7813, v7815, v7816, 3, 7, 2, 4, 8) -> f_1430(v7785, v7786, v7787, v7788, v7789, v7790, 0, v7792, v7827, v7829, v7936, v7796, v7797, v7795, 1, v7799, v7817, v7800, v7818, v7801, v7819, v7802, v7820, v7803, v7821, v7804, v7822, v7811, v7814, v7812, v7823, v7824, v7825, v7826, v7805, v7806, v7807, v7808, v7809, v7810, v7813, v7815, v7816, 3, 7, 2, 4, 8) :|: TRUE
f_1430(v7785, v7786, v7787, v7788, v7789, v7790, 0, v7792, v7827, v7829, v7936, v7796, v7797, v7795, 1, v7799, v7817, v7800, v7818, v7801, v7819, v7802, v7820, v7803, v7821, v7804, v7822, v7811, v7814, v7812, v7823, v7824, v7825, v7826, v7805, v7806, v7807, v7808, v7809, v7810, v7813, v7815, v7816, 3, 7, 2, 4, 8) -> f_1431(v7785, v7786, v7787, v7788, v7789, v7790, 0, v7792, v7827, v7829, v7936, v7938, v7797, v7795, 1, v7799, v7817, v7800, v7818, v7801, v7819, v7802, v7820, v7803, v7821, v7804, v7822, v7811, v7814, v7812, v7823, v7824, v7825, v7826, v7805, v7806, v7807, v7808, v7809, v7810, v7813, v7815, v7816, 3, 7, 2, 4, 8) :|: TRUE
f_1431(v7785, v7786, v7787, v7788, v7789, v7790, 0, v7792, v7827, v7829, v7936, v7938, v7797, v7795, 1, v7799, v7817, v7800, v7818, v7801, v7819, v7802, v7820, v7803, v7821, v7804, v7822, v7811, v7814, v7812, v7823, v7824, v7825, v7826, v7805, v7806, v7807, v7808, v7809, v7810, v7813, v7815, v7816, 3, 7, 2, 4, 8) -> f_1432(v7785, v7786, v7787, v7788, v7789, v7790, 0, v7792, v7827, v7829, v7936, v7938, v7940, v7795, 1, v7799, v7817, v7800, v7818, v7801, v7819, v7802, v7820, v7803, v7821, v7804, v7822, v7811, v7814, v7812, v7823, v7824, v7825, v7826, v7805, v7806, v7807, v7808, v7809, v7810, v7813, v7815, v7816, 3, 7, 2, 4, 8) :|: v7940 = 1 + v7938 && 1 <= v7940
f_1432(v7785, v7786, v7787, v7788, v7789, v7790, 0, v7792, v7827, v7829, v7936, v7938, v7940, v7795, 1, v7799, v7817, v7800, v7818, v7801, v7819, v7802, v7820, v7803, v7821, v7804, v7822, v7811, v7814, v7812, v7823, v7824, v7825, v7826, v7805, v7806, v7807, v7808, v7809, v7810, v7813, v7815, v7816, 3, 7, 2, 4, 8) -> f_1433(v7785, v7786, v7787, v7788, v7789, v7790, 0, v7792, v7827, v7829, v7936, v7938, v7940, v7795, 1, v7799, v7817, v7800, v7818, v7801, v7819, v7802, v7820, v7803, v7821, v7804, v7822, v7811, v7814, v7812, v7823, v7824, v7825, v7826, v7805, v7806, v7807, v7808, v7809, v7810, v7813, v7815, v7816, 3, 7, 2, 4, 8) :|: TRUE
f_1433(v7785, v7786, v7787, v7788, v7789, v7790, 0, v7792, v7827, v7829, v7936, v7938, v7940, v7795, 1, v7799, v7817, v7800, v7818, v7801, v7819, v7802, v7820, v7803, v7821, v7804, v7822, v7811, v7814, v7812, v7823, v7824, v7825, v7826, v7805, v7806, v7807, v7808, v7809, v7810, v7813, v7815, v7816, 3, 7, 2, 4, 8) -> f_1434(v7785, v7786, v7787, v7788, v7789, v7790, 0, v7792, v7827, v7829, v7936, v7938, v7940, v7795, 1, v7799, v7817, v7800, v7818, v7801, v7819, v7802, v7820, v7803, v7821, v7804, v7822, v7811, v7814, v7812, v7823, v7824, v7825, v7826, v7805, v7806, v7807, v7808, v7809, v7810, v7813, v7815, v7816, 3, 7, 2, 4, 8) :|: TRUE
f_1434(v7785, v7786, v7787, v7788, v7789, v7790, 0, v7792, v7827, v7829, v7936, v7938, v7940, v7795, 1, v7799, v7817, v7800, v7818, v7801, v7819, v7802, v7820, v7803, v7821, v7804, v7822, v7811, v7814, v7812, v7823, v7824, v7825, v7826, v7805, v7806, v7807, v7808, v7809, v7810, v7813, v7815, v7816, 3, 7, 2, 4, 8) -> f_1435(v7785, v7786, v7787, v7788, v7789, v7790, 0, v7792, v7827, v7829, v7936, v7938, v7940, 1, v7799, v7817, v7800, v7818, v7801, v7819, v7802, v7820, v7803, v7821, v7804, v7822, v7811, v7814, v7812, v7823, v7824, v7825, v7826, v7805, v7806, v7807, v7808, v7809, v7810, v7813, v7815, v7816, 3, 7, 2, 4, 8) :|: 0 = 0
f_1435(v7785, v7786, v7787, v7788, v7789, v7790, 0, v7792, v7827, v7829, v7936, v7938, v7940, 1, v7799, v7817, v7800, v7818, v7801, v7819, v7802, v7820, v7803, v7821, v7804, v7822, v7811, v7814, v7812, v7823, v7824, v7825, v7826, v7805, v7806, v7807, v7808, v7809, v7810, v7813, v7815, v7816, 3, 7, 2, 4, 8) -> f_1436(v7785, v7786, v7787, v7788, v7789, v7790, 0, v7792, v7827, v7829, v7936, v7938, v7940, 1, v7799, v7817, v7800, v7818, v7801, v7819, v7802, v7820, v7803, v7821, v7804, v7822, v7811, v7814, v7812, v7823, v7824, v7825, v7826, v7805, v7806, v7807, v7808, v7809, v7810, v7813, v7815, v7816, 3, 7, 2, 4, 8) :|: v7936 != 0
f_1436(v7785, v7786, v7787, v7788, v7789, v7790, 0, v7792, v7827, v7829, v7936, v7938, v7940, 1, v7799, v7817, v7800, v7818, v7801, v7819, v7802, v7820, v7803, v7821, v7804, v7822, v7811, v7814, v7812, v7823, v7824, v7825, v7826, v7805, v7806, v7807, v7808, v7809, v7810, v7813, v7815, v7816, 3, 7, 2, 4, 8) -> f_1438(v7785, v7786, v7787, v7788, v7789, v7790, 0, v7792, v7827, v7829, v7936, v7938, v7940, 1, v7799, v7817, v7800, v7818, v7801, v7819, v7802, v7820, v7803, v7821, v7804, v7822, v7811, v7814, v7812, v7823, v7824, v7825, v7826, v7805, v7806, v7807, v7808, v7809, v7810, v7813, v7815, v7816, 3, 7, 2, 4, 8) :|: 0 = 0
f_1438(v7785, v7786, v7787, v7788, v7789, v7790, 0, v7792, v7827, v7829, v7936, v7938, v7940, 1, v7799, v7817, v7800, v7818, v7801, v7819, v7802, v7820, v7803, v7821, v7804, v7822, v7811, v7814, v7812, v7823, v7824, v7825, v7826, v7805, v7806, v7807, v7808, v7809, v7810, v7813, v7815, v7816, 3, 7, 2, 4, 8) -> f_1440(v7785, v7786, v7787, v7788, v7789, v7790, 0, v7792, v7827, v7829, v7936, v7938, v7940, 1, v7799, v7817, v7800, v7818, v7801, v7819, v7802, v7820, v7803, v7821, v7804, v7822, v7811, v7814, v7812, v7823, v7824, v7825, v7826, v7805, v7806, v7807, v7808, v7809, v7810, v7813, v7815, v7816, 3, 7, 2, 4, 8) :|: TRUE
f_1440(v7785, v7786, v7787, v7788, v7789, v7790, 0, v7792, v7827, v7829, v7936, v7938, v7940, 1, v7799, v7817, v7800, v7818, v7801, v7819, v7802, v7820, v7803, v7821, v7804, v7822, v7811, v7814, v7812, v7823, v7824, v7825, v7826, v7805, v7806, v7807, v7808, v7809, v7810, v7813, v7815, v7816, 3, 7, 2, 4, 8) -> f_1418(v7785, v7786, v7787, v7788, v7789, v7790, 0, v7792, v7827, v7829, v7936, v7938, v7940, 1, v7799, v7817, v7800, v7818, v7801, v7819, v7802, v7820, v7803, v7821, v7804, v7822, v7811, v7814, v7812, v7823, v7824, v7825, v7826, v7584, v7585, v7586, v7587, v7588, v7589, v7592, v7594, v7595, 3, 7, 2, 4, 8) :|: TRUE
f_1418(v7564, v7565, v7566, v7567, v7568, v7569, 0, v7571, v7572, v7573, v7574, v7575, v7576, 1, v7578, v7596, v7579, v7597, v7580, v7598, v7581, v7599, v7582, v7600, v7583, v7601, v7590, v7593, v7591, v7602, v7603, v7604, v7605, v7584, v7585, v7586, v7587, v7588, v7589, v7592, v7594, v7595, 3, 7, 2, 4, 8) -> f_1421(v7564, v7565, v7566, v7567, v7568, v7569, 0, v7571, v7572, v7573, v7574, v7575, v7576, 1, v7578, v7596, v7579, v7597, v7580, v7598, v7581, v7599, v7582, v7600, v7583, v7601, v7590, v7593, v7591, v7602, v7603, v7604, v7605, v7584, v7585, v7586, v7587, v7588, v7589, v7592, v7594, v7595, 3, 7, 2, 4, 8) :|: TRUE
Combined rules. Obtained 2 rulesP rules:
f_1421(v7564:0, v7565:0, v7566:0, v7567:0, v7568:0, v7569:0, 0, v7571:0, v7572:0, v7573:0, v7574:0, v7575:0, v7576:0, 1, v7578:0, v7596:0, v7579:0, v7597:0, v7580:0, v7598:0, v7581:0, v7599:0, v7582:0, v7600:0, v7583:0, v7601:0, v7590:0, v7593:0, v7591:0, v7602:0, v7603:0, v7604:0, v7605:0, v7584:0, v7585:0, v7586:0, v7587:0, v7588:0, v7589:0, v7592:0, v7594:0, v7595:0, 3, 7, 2, 4, 8) -> f_1421(v7564:0, v7565:0, v7566:0, v7567:0, v7568:0, v7569:0, 0, v7571:0, v7827:0, 1 + v7827:0, v7936:0, v7938:0, 1 + v7938:0, 1, v7578:0, v7596:0, v7579:0, v7597:0, v7580:0, v7598:0, v7581:0, v7599:0, v7582:0, v7600:0, v7583:0, v7601:0, v7590:0, v7593:0, v7591:0, v7602:0, v7603:0, v7604:0, v7605:0, v7584:1, v7585:1, v7586:1, v7587:1, v7588:1, v7589:1, v7592:1, v7594:1, v7595:1, 3, 7, 2, 4, 8) :|: v7827:0 > -1 && v7936:0 < 0 && v7938:0 > -1
f_1421(v7564:0, v7565:0, v7566:0, v7567:0, v7568:0, v7569:0, 0, v7571:0, v7572:0, v7573:0, v7574:0, v7575:0, v7576:0, 1, v7578:0, v7596:0, v7579:0, v7597:0, v7580:0, v7598:0, v7581:0, v7599:0, v7582:0, v7600:0, v7583:0, v7601:0, v7590:0, v7593:0, v7591:0, v7602:0, v7603:0, v7604:0, v7605:0, v7584:0, v7585:0, v7586:0, v7587:0, v7588:0, v7589:0, v7592:0, v7594:0, v7595:0, 3, 7, 2, 4, 8) -> f_1421(v7564:0, v7565:0, v7566:0, v7567:0, v7568:0, v7569:0, 0, v7571:0, v7827:0, 1 + v7827:0, v7936:0, v7938:0, 1 + v7938:0, 1, v7578:0, v7596:0, v7579:0, v7597:0, v7580:0, v7598:0, v7581:0, v7599:0, v7582:0, v7600:0, v7583:0, v7601:0, v7590:0, v7593:0, v7591:0, v7602:0, v7603:0, v7604:0, v7605:0, v7584:1, v7585:1, v7586:1, v7587:1, v7588:1, v7589:1, v7592:1, v7594:1, v7595:1, 3, 7, 2, 4, 8) :|: v7827:0 > -1 && v7936:0 > 0 && v7938:0 > -1
Removed division, modulo operations, cleaned up constraints. Obtained 2 rules.P rules:
f_1421(v7564:0, v7565:0, v7566:0, v7567:0, v7568:0, v7569:0, cons_0, v7571:0, v7572:0, v7573:0, v7574:0, v7575:0, v7576:0, cons_1, v7578:0, v7596:0, v7579:0, v7597:0, v7580:0, v7598:0, v7581:0, v7599:0, v7582:0, v7600:0, v7583:0, v7601:0, v7590:0, v7593:0, v7591:0, v7602:0, v7603:0, v7604:0, v7605:0, v7584:0, v7585:0, v7586:0, v7587:0, v7588:0, v7589:0, v7592:0, v7594:0, v7595:0, cons_3, cons_7, cons_2, cons_4, cons_8) -> f_1421(v7564:0, v7565:0, v7566:0, v7567:0, v7568:0, v7569:0, 0, v7571:0, v7827:0, 1 + v7827:0, v7936:0, v7938:0, 1 + v7938:0, 1, v7578:0, v7596:0, v7579:0, v7597:0, v7580:0, v7598:0, v7581:0, v7599:0, v7582:0, v7600:0, v7583:0, v7601:0, v7590:0, v7593:0, v7591:0, v7602:0, v7603:0, v7604:0, v7605:0, v7584:1, v7585:1, v7586:1, v7587:1, v7588:1, v7589:1, v7592:1, v7594:1, v7595:1, 3, 7, 2, 4, 8) :|: v7936:0 < 0 && v7938:0 > -1 && v7827:0 > -1 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_2 = 2 && cons_4 = 4 && cons_8 = 8
f_1421(v7564:0, v7565:0, v7566:0, v7567:0, v7568:0, v7569:0, cons_0, v7571:0, v7572:0, v7573:0, v7574:0, v7575:0, v7576:0, cons_1, v7578:0, v7596:0, v7579:0, v7597:0, v7580:0, v7598:0, v7581:0, v7599:0, v7582:0, v7600:0, v7583:0, v7601:0, v7590:0, v7593:0, v7591:0, v7602:0, v7603:0, v7604:0, v7605:0, v7584:0, v7585:0, v7586:0, v7587:0, v7588:0, v7589:0, v7592:0, v7594:0, v7595:0, cons_3, cons_7, cons_2, cons_4, cons_8) -> f_1421(v7564:0, v7565:0, v7566:0, v7567:0, v7568:0, v7569:0, 0, v7571:0, v7827:0, 1 + v7827:0, v7936:0, v7938:0, 1 + v7938:0, 1, v7578:0, v7596:0, v7579:0, v7597:0, v7580:0, v7598:0, v7581:0, v7599:0, v7582:0, v7600:0, v7583:0, v7601:0, v7590:0, v7593:0, v7591:0, v7602:0, v7603:0, v7604:0, v7605:0, v7584:1, v7585:1, v7586:1, v7587:1, v7588:1, v7589:1, v7592:1, v7594:1, v7595:1, 3, 7, 2, 4, 8) :|: v7936:0 > 0 && v7938:0 > -1 && v7827:0 > -1 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_2 = 2 && cons_4 = 4 && cons_8 = 8

----------------------------------------

(9)
Obligation:
Rules:
f_1421(v7564:0, v7565:0, v7566:0, v7567:0, v7568:0, v7569:0, cons_0, v7571:0, v7572:0, v7573:0, v7574:0, v7575:0, v7576:0, cons_1, v7578:0, v7596:0, v7579:0, v7597:0, v7580:0, v7598:0, v7581:0, v7599:0, v7582:0, v7600:0, v7583:0, v7601:0, v7590:0, v7593:0, v7591:0, v7602:0, v7603:0, v7604:0, v7605:0, v7584:0, v7585:0, v7586:0, v7587:0, v7588:0, v7589:0, v7592:0, v7594:0, v7595:0, cons_3, cons_7, cons_2, cons_4, cons_8) -> f_1421(v7564:0, v7565:0, v7566:0, v7567:0, v7568:0, v7569:0, 0, v7571:0, v7827:0, 1 + v7827:0, v7936:0, v7938:0, 1 + v7938:0, 1, v7578:0, v7596:0, v7579:0, v7597:0, v7580:0, v7598:0, v7581:0, v7599:0, v7582:0, v7600:0, v7583:0, v7601:0, v7590:0, v7593:0, v7591:0, v7602:0, v7603:0, v7604:0, v7605:0, v7584:1, v7585:1, v7586:1, v7587:1, v7588:1, v7589:1, v7592:1, v7594:1, v7595:1, 3, 7, 2, 4, 8) :|: v7936:0 < 0 && v7938:0 > -1 && v7827:0 > -1 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_2 = 2 && cons_4 = 4 && cons_8 = 8
f_1421(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46) -> f_1421(x, x1, x2, x3, x4, x5, 0, x7, x47, 1 + x47, x48, x49, 1 + x49, 1, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x50, x51, x52, x53, x54, x55, x56, x57, x58, 3, 7, 2, 4, 8) :|: x48 > 0 && x49 > -1 && x47 > -1 && x6 = 0 && x13 = 1 && x42 = 3 && x43 = 7 && x44 = 2 && x45 = 4 && x46 = 8

----------------------------------------

(10) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(11)
Obligation:
Rules:
f_1421(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, cons_0, x7:0, x8:0, x9:0, x10:0, x11:0, x12:0, cons_1, x14:0, x15:0, x16:0, x17:0, x18:0, x19:0, x20:0, x21:0, x22:0, x23:0, x24:0, x25:0, x26:0, x27:0, x28:0, x29:0, x30:0, x31:0, x32:0, x33:0, x34:0, x35:0, x36:0, x37:0, x38:0, x39:0, x40:0, x41:0, cons_3, cons_7, cons_2, cons_4, cons_8) -> f_1421(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, 0, x7:0, x47:0, 1 + x47:0, x48:0, x49:0, 1 + x49:0, 1, x14:0, x15:0, x16:0, x17:0, x18:0, x19:0, x20:0, x21:0, x22:0, x23:0, x24:0, x25:0, x26:0, x27:0, x28:0, x29:0, x30:0, x31:0, x32:0, x50:0, x51:0, x52:0, x53:0, x54:0, x55:0, x56:0, x57:0, x58:0, 3, 7, 2, 4, 8) :|: x48:0 > 0 && x49:0 > -1 && x47:0 > -1 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_2 = 2 && cons_4 = 4 && cons_8 = 8
f_1421(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46) -> f_1421(x, x1, x2, x3, x4, x5, 0, x7, x47, 1 + x47, x48, x49, 1 + x49, 1, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x50, x51, x52, x53, x54, x55, x56, x57, x58, 3, 7, 2, 4, 8) :|: x48 < 0 && x49 > -1 && x47 > -1 && x6 = 0 && x13 = 1 && x42 = 3 && x43 = 7 && x44 = 2 && x45 = 4 && x46 = 8

----------------------------------------

(12) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1421(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47) -> f_1421(x7, x14, x43, x44, x45, x46, x47)

----------------------------------------

(13)
Obligation:
Rules:
f_1421(cons_0, cons_1, cons_3, cons_7, cons_2, cons_4, cons_8) -> f_1421(0, 1, 3, 7, 2, 4, 8) :|: x48:0 > 0 && x49:0 > -1 && x47:0 > -1 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_2 = 2 && cons_4 = 4 && cons_8 = 8
f_1421(x6, x13, x42, x43, x44, x45, x46) -> f_1421(0, 1, 3, 7, 2, 4, 8) :|: x48 < 0 && x49 > -1 && x47 > -1 && x6 = 0 && x13 = 1 && x42 = 3 && x43 = 7 && x44 = 2 && x45 = 4 && x46 = 8

----------------------------------------

(14) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, cons_0, cons_1, cons_3, cons_7, cons_2, cons_4, cons_8) -> f(1, 0, 1, 3, 7, 2, 4, 8) :|: pc = 1 && (x48:0 > 0 && x49:0 > -1 && x47:0 > -1 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_2 = 2 && cons_4 = 4 && cons_8 = 8)
f(pc, x6, x13, x42, x43, x44, x45, x46) -> f(1, 0, 1, 3, 7, 2, 4, 8) :|: pc = 1 && (x48 < 0 && x49 > -1 && x47 > -1 && x6 = 0 && x13 = 1 && x42 = 3 && x43 = 7 && x44 = 2 && x45 = 4 && x46 = 8)
Witness term starting non-terminating reduction: f(1, 0, 1, 3, 7, 2, 4, 8)
----------------------------------------

(15)
NO

----------------------------------------

(16)
Obligation:
SCC
----------------------------------------

(17) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 15 rulesP rules:
f_1380(v6333, v6334, v6335, v6336, v6337, 0, v6339, v6340, v6341, v6342, v6343, 1, v6345, v6363, v6346, v6364, v6347, v6365, v6348, v6366, v6349, v6367, v6350, v6368, v6357, v6360, v6358, v6369, v6370, v6371, v6372, v6351, v6352, v6353, v6354, v6355, v6356, v6359, v6361, v6362, 3, 7, 2, 4, 8) -> f_1381(v6333, v6334, v6335, v6336, v6337, 0, v6339, v6340, v6341, v6342, v6343, 1, v6345, v6363, v6346, v6364, v6347, v6365, v6348, v6366, v6349, v6367, v6350, v6368, v6357, v6360, v6358, v6369, v6370, v6371, v6372, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) :|: TRUE
f_1381(v6770, v6771, v6772, v6773, v6774, 0, v6776, v6777, v6778, v6779, v6780, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) -> f_1385(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6777, v6778, v6779, v6780, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) :|: TRUE
f_1385(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6777, v6778, v6779, v6780, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) -> f_1388(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v6778, v6779, v6780, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) :|: v6995 = 1 + v6991 && 1 <= v6995
f_1388(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v6778, v6779, v6780, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) -> f_1391(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v6778, v6779, v6780, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) :|: TRUE
f_1391(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v6778, v6779, v6780, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) -> f_1394(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v7115, v6779, v6780, v6778, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) :|: TRUE
f_1394(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v7115, v6779, v6780, v6778, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) -> f_1397(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v7115, v7119, v6780, v6778, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) :|: TRUE
f_1397(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v7115, v7119, v6780, v6778, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) -> f_1399(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v7115, v7119, v7123, v6778, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) :|: v7123 = 1 + v7119 && 1 <= v7123
f_1399(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v7115, v7119, v7123, v6778, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) -> f_1401(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v7115, v7119, v7123, v6778, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) :|: TRUE
f_1401(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v7115, v7119, v7123, v6778, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) -> f_1403(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v7115, v7119, v7123, v6778, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) :|: TRUE
f_1403(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v7115, v7119, v7123, v6778, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) -> f_1405(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v7115, v7119, v7123, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) :|: 0 = 0
f_1405(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v7115, v7119, v7123, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) -> f_1407(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v7115, v7119, v7123, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) :|: v7115 != 0
f_1407(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v7115, v7119, v7123, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) -> f_1411(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v7115, v7119, v7123, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) :|: 0 = 0
f_1411(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v7115, v7119, v7123, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) -> f_1415(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v7115, v7119, v7123, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) :|: TRUE
f_1415(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v7115, v7119, v7123, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) -> f_1375(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v7115, v7119, v7123, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6351, v6352, v6353, v6354, v6355, v6356, v6359, v6361, v6362, 3, 7, 2, 4, 8) :|: TRUE
f_1375(v6333, v6334, v6335, v6336, v6337, 0, v6339, v6340, v6341, v6342, v6343, 1, v6345, v6363, v6346, v6364, v6347, v6365, v6348, v6366, v6349, v6367, v6350, v6368, v6357, v6360, v6358, v6369, v6370, v6371, v6372, v6351, v6352, v6353, v6354, v6355, v6356, v6359, v6361, v6362, 3, 7, 2, 4, 8) -> f_1380(v6333, v6334, v6335, v6336, v6337, 0, v6339, v6340, v6341, v6342, v6343, 1, v6345, v6363, v6346, v6364, v6347, v6365, v6348, v6366, v6349, v6367, v6350, v6368, v6357, v6360, v6358, v6369, v6370, v6371, v6372, v6351, v6352, v6353, v6354, v6355, v6356, v6359, v6361, v6362, 3, 7, 2, 4, 8) :|: TRUE
Combined rules. Obtained 2 rulesP rules:
f_1380(v6333:0, v6334:0, v6335:0, v6336:0, v6337:0, 0, v6339:0, v6340:0, v6341:0, v6342:0, v6343:0, 1, v6345:0, v6363:0, v6346:0, v6364:0, v6347:0, v6365:0, v6348:0, v6366:0, v6349:0, v6367:0, v6350:0, v6368:0, v6357:0, v6360:0, v6358:0, v6369:0, v6370:0, v6371:0, v6372:0, v6351:0, v6352:0, v6353:0, v6354:0, v6355:0, v6356:0, v6359:0, v6361:0, v6362:0, 3, 7, 2, 4, 8) -> f_1380(v6333:0, v6334:0, v6335:0, v6336:0, v6337:0, 0, v6991:0, 1 + v6991:0, v7115:0, v7119:0, 1 + v7119:0, 1, v6345:0, v6363:0, v6346:0, v6364:0, v6347:0, v6365:0, v6348:0, v6366:0, v6349:0, v6367:0, v6350:0, v6368:0, v6357:0, v6360:0, v6358:0, v6369:0, v6370:0, v6371:0, v6372:0, v6351:1, v6352:1, v6353:1, v6354:1, v6355:1, v6356:1, v6359:1, v6361:1, v6362:1, 3, 7, 2, 4, 8) :|: v6991:0 > -1 && v7115:0 < 0 && v7119:0 > -1
f_1380(v6333:0, v6334:0, v6335:0, v6336:0, v6337:0, 0, v6339:0, v6340:0, v6341:0, v6342:0, v6343:0, 1, v6345:0, v6363:0, v6346:0, v6364:0, v6347:0, v6365:0, v6348:0, v6366:0, v6349:0, v6367:0, v6350:0, v6368:0, v6357:0, v6360:0, v6358:0, v6369:0, v6370:0, v6371:0, v6372:0, v6351:0, v6352:0, v6353:0, v6354:0, v6355:0, v6356:0, v6359:0, v6361:0, v6362:0, 3, 7, 2, 4, 8) -> f_1380(v6333:0, v6334:0, v6335:0, v6336:0, v6337:0, 0, v6991:0, 1 + v6991:0, v7115:0, v7119:0, 1 + v7119:0, 1, v6345:0, v6363:0, v6346:0, v6364:0, v6347:0, v6365:0, v6348:0, v6366:0, v6349:0, v6367:0, v6350:0, v6368:0, v6357:0, v6360:0, v6358:0, v6369:0, v6370:0, v6371:0, v6372:0, v6351:1, v6352:1, v6353:1, v6354:1, v6355:1, v6356:1, v6359:1, v6361:1, v6362:1, 3, 7, 2, 4, 8) :|: v6991:0 > -1 && v7115:0 > 0 && v7119:0 > -1
Removed division, modulo operations, cleaned up constraints. Obtained 2 rules.P rules:
f_1380(v6333:0, v6334:0, v6335:0, v6336:0, v6337:0, cons_0, v6339:0, v6340:0, v6341:0, v6342:0, v6343:0, cons_1, v6345:0, v6363:0, v6346:0, v6364:0, v6347:0, v6365:0, v6348:0, v6366:0, v6349:0, v6367:0, v6350:0, v6368:0, v6357:0, v6360:0, v6358:0, v6369:0, v6370:0, v6371:0, v6372:0, v6351:0, v6352:0, v6353:0, v6354:0, v6355:0, v6356:0, v6359:0, v6361:0, v6362:0, cons_3, cons_7, cons_2, cons_4, cons_8) -> f_1380(v6333:0, v6334:0, v6335:0, v6336:0, v6337:0, 0, v6991:0, 1 + v6991:0, v7115:0, v7119:0, 1 + v7119:0, 1, v6345:0, v6363:0, v6346:0, v6364:0, v6347:0, v6365:0, v6348:0, v6366:0, v6349:0, v6367:0, v6350:0, v6368:0, v6357:0, v6360:0, v6358:0, v6369:0, v6370:0, v6371:0, v6372:0, v6351:1, v6352:1, v6353:1, v6354:1, v6355:1, v6356:1, v6359:1, v6361:1, v6362:1, 3, 7, 2, 4, 8) :|: v7115:0 < 0 && v7119:0 > -1 && v6991:0 > -1 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_2 = 2 && cons_4 = 4 && cons_8 = 8
f_1380(v6333:0, v6334:0, v6335:0, v6336:0, v6337:0, cons_0, v6339:0, v6340:0, v6341:0, v6342:0, v6343:0, cons_1, v6345:0, v6363:0, v6346:0, v6364:0, v6347:0, v6365:0, v6348:0, v6366:0, v6349:0, v6367:0, v6350:0, v6368:0, v6357:0, v6360:0, v6358:0, v6369:0, v6370:0, v6371:0, v6372:0, v6351:0, v6352:0, v6353:0, v6354:0, v6355:0, v6356:0, v6359:0, v6361:0, v6362:0, cons_3, cons_7, cons_2, cons_4, cons_8) -> f_1380(v6333:0, v6334:0, v6335:0, v6336:0, v6337:0, 0, v6991:0, 1 + v6991:0, v7115:0, v7119:0, 1 + v7119:0, 1, v6345:0, v6363:0, v6346:0, v6364:0, v6347:0, v6365:0, v6348:0, v6366:0, v6349:0, v6367:0, v6350:0, v6368:0, v6357:0, v6360:0, v6358:0, v6369:0, v6370:0, v6371:0, v6372:0, v6351:1, v6352:1, v6353:1, v6354:1, v6355:1, v6356:1, v6359:1, v6361:1, v6362:1, 3, 7, 2, 4, 8) :|: v7115:0 > 0 && v7119:0 > -1 && v6991:0 > -1 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_2 = 2 && cons_4 = 4 && cons_8 = 8

----------------------------------------

(18)
Obligation:
Rules:
f_1380(v6333:0, v6334:0, v6335:0, v6336:0, v6337:0, cons_0, v6339:0, v6340:0, v6341:0, v6342:0, v6343:0, cons_1, v6345:0, v6363:0, v6346:0, v6364:0, v6347:0, v6365:0, v6348:0, v6366:0, v6349:0, v6367:0, v6350:0, v6368:0, v6357:0, v6360:0, v6358:0, v6369:0, v6370:0, v6371:0, v6372:0, v6351:0, v6352:0, v6353:0, v6354:0, v6355:0, v6356:0, v6359:0, v6361:0, v6362:0, cons_3, cons_7, cons_2, cons_4, cons_8) -> f_1380(v6333:0, v6334:0, v6335:0, v6336:0, v6337:0, 0, v6991:0, 1 + v6991:0, v7115:0, v7119:0, 1 + v7119:0, 1, v6345:0, v6363:0, v6346:0, v6364:0, v6347:0, v6365:0, v6348:0, v6366:0, v6349:0, v6367:0, v6350:0, v6368:0, v6357:0, v6360:0, v6358:0, v6369:0, v6370:0, v6371:0, v6372:0, v6351:1, v6352:1, v6353:1, v6354:1, v6355:1, v6356:1, v6359:1, v6361:1, v6362:1, 3, 7, 2, 4, 8) :|: v7115:0 < 0 && v7119:0 > -1 && v6991:0 > -1 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_2 = 2 && cons_4 = 4 && cons_8 = 8
f_1380(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44) -> f_1380(x, x1, x2, x3, x4, 0, x45, 1 + x45, x46, x47, 1 + x47, 1, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x48, x49, x50, x51, x52, x53, x54, x55, x56, 3, 7, 2, 4, 8) :|: x46 > 0 && x47 > -1 && x45 > -1 && x5 = 0 && x11 = 1 && x40 = 3 && x41 = 7 && x42 = 2 && x43 = 4 && x44 = 8

----------------------------------------

(19) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(20)
Obligation:
Rules:
f_1380(v6333:0:0, v6334:0:0, v6335:0:0, v6336:0:0, v6337:0:0, cons_0, v6339:0:0, v6340:0:0, v6341:0:0, v6342:0:0, v6343:0:0, cons_1, v6345:0:0, v6363:0:0, v6346:0:0, v6364:0:0, v6347:0:0, v6365:0:0, v6348:0:0, v6366:0:0, v6349:0:0, v6367:0:0, v6350:0:0, v6368:0:0, v6357:0:0, v6360:0:0, v6358:0:0, v6369:0:0, v6370:0:0, v6371:0:0, v6372:0:0, v6351:0:0, v6352:0:0, v6353:0:0, v6354:0:0, v6355:0:0, v6356:0:0, v6359:0:0, v6361:0:0, v6362:0:0, cons_3, cons_7, cons_2, cons_4, cons_8) -> f_1380(v6333:0:0, v6334:0:0, v6335:0:0, v6336:0:0, v6337:0:0, 0, v6991:0:0, 1 + v6991:0:0, v7115:0:0, v7119:0:0, 1 + v7119:0:0, 1, v6345:0:0, v6363:0:0, v6346:0:0, v6364:0:0, v6347:0:0, v6365:0:0, v6348:0:0, v6366:0:0, v6349:0:0, v6367:0:0, v6350:0:0, v6368:0:0, v6357:0:0, v6360:0:0, v6358:0:0, v6369:0:0, v6370:0:0, v6371:0:0, v6372:0:0, v6351:1:0, v6352:1:0, v6353:1:0, v6354:1:0, v6355:1:0, v6356:1:0, v6359:1:0, v6361:1:0, v6362:1:0, 3, 7, 2, 4, 8) :|: v7115:0:0 < 0 && v7119:0:0 > -1 && v6991:0:0 > -1 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_2 = 2 && cons_4 = 4 && cons_8 = 8
f_1380(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44) -> f_1380(x, x1, x2, x3, x4, 0, x45, 1 + x45, x46, x47, 1 + x47, 1, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x48, x49, x50, x51, x52, x53, x54, x55, x56, 3, 7, 2, 4, 8) :|: x46 > 0 && x47 > -1 && x45 > -1 && x5 = 0 && x11 = 1 && x40 = 3 && x41 = 7 && x42 = 2 && x43 = 4 && x44 = 8

----------------------------------------

(21) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1380(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45) -> f_1380(x6, x12, x41, x42, x43, x44, x45)

----------------------------------------

(22)
Obligation:
Rules:
f_1380(cons_0, cons_1, cons_3, cons_7, cons_2, cons_4, cons_8) -> f_1380(0, 1, 3, 7, 2, 4, 8) :|: v7115:0:0 < 0 && v7119:0:0 > -1 && v6991:0:0 > -1 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_2 = 2 && cons_4 = 4 && cons_8 = 8
f_1380(x5, x11, x40, x41, x42, x43, x44) -> f_1380(0, 1, 3, 7, 2, 4, 8) :|: x46 > 0 && x47 > -1 && x45 > -1 && x5 = 0 && x11 = 1 && x40 = 3 && x41 = 7 && x42 = 2 && x43 = 4 && x44 = 8

----------------------------------------

(23) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, cons_0, cons_1, cons_3, cons_7, cons_2, cons_4, cons_8) -> f(1, 0, 1, 3, 7, 2, 4, 8) :|: pc = 1 && (v7115:0:0 < 0 && v7119:0:0 > -1 && v6991:0:0 > -1 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_2 = 2 && cons_4 = 4 && cons_8 = 8)
f(pc, x5, x11, x40, x41, x42, x43, x44) -> f(1, 0, 1, 3, 7, 2, 4, 8) :|: pc = 1 && (x46 > 0 && x47 > -1 && x45 > -1 && x5 = 0 && x11 = 1 && x40 = 3 && x41 = 7 && x42 = 2 && x43 = 4 && x44 = 8)
Witness term starting non-terminating reduction: f(1, 0, 1, 3, 7, 2, 4, 8)
----------------------------------------

(24)
NO

----------------------------------------

(25) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 15 rulesP rules:
f_1380(v6333, v6334, v6335, v6336, v6337, 0, v6339, v6340, v6341, v6342, v6343, 1, v6345, v6363, v6346, v6364, v6347, v6365, v6348, v6366, v6349, v6367, v6350, v6368, v6357, v6360, v6358, v6369, v6370, v6371, v6372, v6351, v6352, v6353, v6354, v6355, v6356, v6359, v6361, v6362, 3, 7, 2, 4, 8) -> f_1381(v6333, v6334, v6335, v6336, v6337, 0, v6339, v6340, v6341, v6342, v6343, 1, v6345, v6363, v6346, v6364, v6347, v6365, v6348, v6366, v6349, v6367, v6350, v6368, v6357, v6360, v6358, v6369, v6370, v6371, v6372, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) :|: v6791 < v6360 && v6790 <= 1 + v6798 && v6788 <= v6793 && v6357 + v6788 <= 1 + v6360 && v6358 + v6789 <= 1 + v6369 && v6791 <= v6333 && v6791 <= v6334 && 0 <= v6333 && 0 <= v6334 && 1 <= v6335 && 1 <= v6336 && 1 <= v6337 && 0 <= v6339 && 1 <= v6340 && 0 <= v6342 && 1 <= v6343 && 1 <= v6345 && 1 <= v6346 && 1 <= v6347 && 1 <= v6348 && 1 <= v6349 && 1 <= v6350 && 1 <= v6788 && 2 <= v6789 && 0 <= v6791 && v6791 <= 1 && 1 <= v6792 && 1 <= v6793 && 1 <= v6357 && 1 <= v6358 && 0 <= v6796 && 1 <= v6360 && 0 <= v6798 && 1 <= v6799 && 4 <= v6363 && 4 <= v6364 && 4 <= v6365 && 4 <= v6366 && 8 <= v6367 && 8 <= v6368 && 2 <= v6369 && 8 <= v6370 && 8 <= v6371 && 8 <= v6372 && v6345 <= v6363 && v6346 <= v6364 && v6347 <= v6365 && v6348 <= v6366 && v6349 <= v6367 && v6350 <= v6368 && v6357 <= v6360 && v6358 <= v6369 && v6335 <= v6370 && v6336 <= v6371 && v6337 <= v6372
f_1381(v6770, v6771, v6772, v6773, v6774, 0, v6776, v6777, v6778, v6779, v6780, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) -> f_1385(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6777, v6778, v6779, v6780, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) :|: TRUE
f_1385(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6777, v6778, v6779, v6780, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) -> f_1388(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v6778, v6779, v6780, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) :|: v6995 = 1 + v6991 && 1 <= v6995
f_1388(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v6778, v6779, v6780, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) -> f_1391(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v6778, v6779, v6780, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) :|: TRUE
f_1391(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v6778, v6779, v6780, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) -> f_1394(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v7115, v6779, v6780, v6778, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) :|: TRUE
f_1394(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v7115, v6779, v6780, v6778, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) -> f_1397(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v7115, v7119, v6780, v6778, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) :|: TRUE
f_1397(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v7115, v7119, v6780, v6778, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) -> f_1399(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v7115, v7119, v7123, v6778, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) :|: v7123 = 1 + v7119 && 1 <= v7123
f_1399(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v7115, v7119, v7123, v6778, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) -> f_1401(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v7115, v7119, v7123, v6778, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) :|: TRUE
f_1401(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v7115, v7119, v7123, v6778, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) -> f_1403(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v7115, v7119, v7123, v6778, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) :|: TRUE
f_1403(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v7115, v7119, v7123, v6778, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) -> f_1405(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v7115, v7119, v7123, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) :|: 0 = 0
f_1405(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v7115, v7119, v7123, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) -> f_1407(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v7115, v7119, v7123, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) :|: v7115 != 0
f_1407(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v7115, v7119, v7123, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) -> f_1411(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v7115, v7119, v7123, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) :|: 0 = 0
f_1411(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v7115, v7119, v7123, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) -> f_1415(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v7115, v7119, v7123, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) :|: TRUE
f_1415(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v7115, v7119, v7123, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6788, v6789, v6790, v6791, v6792, v6793, v6796, v6798, v6799, 3, 7, 2, 4, 8) -> f_1375(v6770, v6771, v6772, v6773, v6774, 0, v6991, v6995, v7115, v7119, v7123, 1, v6782, v6800, v6783, v6801, v6784, v6802, v6785, v6803, v6786, v6804, v6787, v6805, v6794, v6797, v6795, v6806, v6807, v6808, v6809, v6351, v6352, v6353, v6354, v6355, v6356, v6359, v6361, v6362, 3, 7, 2, 4, 8) :|: v6354 < v6797 && v6353 <= 1 + v6361 && v6351 <= v6356 && v6794 + v6351 <= 1 + v6797 && v6795 + v6352 <= 1 + v6806 && v6354 <= v6770 && v6354 <= v6771 && 0 <= v6770 && 0 <= v6771 && 1 <= v6772 && 1 <= v6773 && 1 <= v6774 && 0 <= v6991 && 1 <= v6995 && 0 <= v7119 && 1 <= v7123 && 1 <= v6782 && 1 <= v6783 && 1 <= v6784 && 1 <= v6785 && 1 <= v6786 && 1 <= v6787 && 1 <= v6351 && 2 <= v6352 && 0 <= v6354 && v6354 <= 1 && 1 <= v6355 && 1 <= v6356 && 1 <= v6794 && 1 <= v6795 && 0 <= v6359 && 1 <= v6797 && 0 <= v6361 && 1 <= v6362 && 4 <= v6800 && 4 <= v6801 && 4 <= v6802 && 4 <= v6803 && 8 <= v6804 && 8 <= v6805 && 2 <= v6806 && 8 <= v6807 && 8 <= v6808 && 8 <= v6809 && v6782 <= v6800 && v6783 <= v6801 && v6784 <= v6802 && v6785 <= v6803 && v6786 <= v6804 && v6787 <= v6805 && v6794 <= v6797 && v6795 <= v6806 && v6772 <= v6807 && v6773 <= v6808 && v6774 <= v6809
f_1375(v6333, v6334, v6335, v6336, v6337, 0, v6339, v6340, v6341, v6342, v6343, 1, v6345, v6363, v6346, v6364, v6347, v6365, v6348, v6366, v6349, v6367, v6350, v6368, v6357, v6360, v6358, v6369, v6370, v6371, v6372, v6351, v6352, v6353, v6354, v6355, v6356, v6359, v6361, v6362, 3, 7, 2, 4, 8) -> f_1380(v6333, v6334, v6335, v6336, v6337, 0, v6339, v6340, v6341, v6342, v6343, 1, v6345, v6363, v6346, v6364, v6347, v6365, v6348, v6366, v6349, v6367, v6350, v6368, v6357, v6360, v6358, v6369, v6370, v6371, v6372, v6351, v6352, v6353, v6354, v6355, v6356, v6359, v6361, v6362, 3, 7, 2, 4, 8) :|: TRUE
Combined rules. Obtained 2 rulesP rules:
f_1380(v6333:0, v6334:0, v6335:0, v6336:0, v6337:0, 0, v6339:0, v6340:0, v6341:0, v6342:0, v6343:0, 1, v6345:0, v6363:0, v6346:0, v6364:0, v6347:0, v6365:0, v6348:0, v6366:0, v6349:0, v6367:0, v6350:0, v6368:0, v6357:0, v6360:0, v6358:0, v6369:0, v6370:0, v6371:0, v6372:0, v6351:0, v6352:0, v6353:0, v6354:0, v6355:0, v6356:0, v6359:0, v6361:0, v6362:0, 3, 7, 2, 4, 8) -> f_1380(v6333:0, v6334:0, v6335:0, v6336:0, v6337:0, 0, v6991:0, 1 + v6991:0, v7115:0, v7119:0, 1 + v7119:0, 1, v6345:0, v6363:0, v6346:0, v6364:0, v6347:0, v6365:0, v6348:0, v6366:0, v6349:0, v6367:0, v6350:0, v6368:0, v6357:0, v6360:0, v6358:0, v6369:0, v6370:0, v6371:0, v6372:0, v6351:1, v6352:1, v6353:1, v6354:1, v6355:1, v6356:1, v6359:1, v6361:1, v6362:1, 3, 7, 2, 4, 8) :|: v6790:0 <= 1 + v6798:0 && v6791:0 < v6360:0 && v6793:0 >= v6788:0 && v6357:0 + v6788:0 <= 1 + v6360:0 && v6358:0 + v6789:0 <= 1 + v6369:0 && v6791:0 <= v6333:0 && v6791:0 <= v6334:0 && v6333:0 > -1 && v6334:0 > -1 && v6335:0 > 0 && v6336:0 > 0 && v6337:0 > 0 && v6339:0 > -1 && v6353:1 <= 1 + v6361:1 && v6360:0 > v6354:1 && v6340:0 > 0 && v6356:1 >= v6351:1 && v6342:0 > -1 && v6357:0 + v6351:1 <= 1 + v6360:0 && v6343:0 > 0 && v6358:0 + v6352:1 <= 1 + v6369:0 && v6345:0 > 0 && v6354:1 <= v6333:0 && v6346:0 > 0 && v6354:1 <= v6334:0 && v6347:0 > 0 && v6348:0 > 0 && v6349:0 > 0 && v6350:0 > 0 && v6788:0 > 0 && v6789:0 > 1 && v6991:0 > -1 && v6791:0 > -1 && v6791:0 < 2 && v7119:0 > -1 && v6792:0 > 0 && v6793:0 > 0 && v6357:0 > 0 && v6358:0 > 0 && v6796:0 > -1 && v6360:0 > 0 && v6798:0 > -1 && v6799:0 > 0 && v6351:1 > 0 && v6363:0 > 3 && v6352:1 > 1 && v6364:0 > 3 && v6354:1 > -1 && v6365:0 > 3 && v6354:1 < 2 && v6366:0 > 3 && v6355:1 > 0 && v6367:0 > 7 && v6356:1 > 0 && v6368:0 > 7 && v6369:0 > 1 && v6370:0 > 7 && v6359:1 > -1 && v6371:0 > 7 && v6372:0 > 7 && v6361:1 > -1 && v6363:0 >= v6345:0 && v6362:1 > 0 && v6364:0 >= v6346:0 && v6365:0 >= v6347:0 && v6366:0 >= v6348:0 && v6367:0 >= v6349:0 && v6368:0 >= v6350:0 && v6360:0 >= v6357:0 && v6369:0 >= v6358:0 && v6370:0 >= v6335:0 && v6371:0 >= v6336:0 && v6372:0 >= v6337:0 && v7115:0 < 0
f_1380(v6333:0, v6334:0, v6335:0, v6336:0, v6337:0, 0, v6339:0, v6340:0, v6341:0, v6342:0, v6343:0, 1, v6345:0, v6363:0, v6346:0, v6364:0, v6347:0, v6365:0, v6348:0, v6366:0, v6349:0, v6367:0, v6350:0, v6368:0, v6357:0, v6360:0, v6358:0, v6369:0, v6370:0, v6371:0, v6372:0, v6351:0, v6352:0, v6353:0, v6354:0, v6355:0, v6356:0, v6359:0, v6361:0, v6362:0, 3, 7, 2, 4, 8) -> f_1380(v6333:0, v6334:0, v6335:0, v6336:0, v6337:0, 0, v6991:0, 1 + v6991:0, v7115:0, v7119:0, 1 + v7119:0, 1, v6345:0, v6363:0, v6346:0, v6364:0, v6347:0, v6365:0, v6348:0, v6366:0, v6349:0, v6367:0, v6350:0, v6368:0, v6357:0, v6360:0, v6358:0, v6369:0, v6370:0, v6371:0, v6372:0, v6351:1, v6352:1, v6353:1, v6354:1, v6355:1, v6356:1, v6359:1, v6361:1, v6362:1, 3, 7, 2, 4, 8) :|: v6790:0 <= 1 + v6798:0 && v6791:0 < v6360:0 && v6793:0 >= v6788:0 && v6357:0 + v6788:0 <= 1 + v6360:0 && v6358:0 + v6789:0 <= 1 + v6369:0 && v6791:0 <= v6333:0 && v6791:0 <= v6334:0 && v6333:0 > -1 && v6334:0 > -1 && v6335:0 > 0 && v6336:0 > 0 && v6337:0 > 0 && v6339:0 > -1 && v6353:1 <= 1 + v6361:1 && v6360:0 > v6354:1 && v6340:0 > 0 && v6356:1 >= v6351:1 && v6342:0 > -1 && v6357:0 + v6351:1 <= 1 + v6360:0 && v6343:0 > 0 && v6358:0 + v6352:1 <= 1 + v6369:0 && v6345:0 > 0 && v6354:1 <= v6333:0 && v6346:0 > 0 && v6354:1 <= v6334:0 && v6347:0 > 0 && v6348:0 > 0 && v6349:0 > 0 && v6350:0 > 0 && v6788:0 > 0 && v6789:0 > 1 && v6991:0 > -1 && v6791:0 > -1 && v6791:0 < 2 && v7119:0 > -1 && v6792:0 > 0 && v6793:0 > 0 && v6357:0 > 0 && v6358:0 > 0 && v6796:0 > -1 && v6360:0 > 0 && v6798:0 > -1 && v6799:0 > 0 && v6351:1 > 0 && v6363:0 > 3 && v6352:1 > 1 && v6364:0 > 3 && v6354:1 > -1 && v6365:0 > 3 && v6354:1 < 2 && v6366:0 > 3 && v6355:1 > 0 && v6367:0 > 7 && v6356:1 > 0 && v6368:0 > 7 && v6369:0 > 1 && v6370:0 > 7 && v6359:1 > -1 && v6371:0 > 7 && v6372:0 > 7 && v6361:1 > -1 && v6363:0 >= v6345:0 && v6362:1 > 0 && v6364:0 >= v6346:0 && v6365:0 >= v6347:0 && v6366:0 >= v6348:0 && v6367:0 >= v6349:0 && v6368:0 >= v6350:0 && v6360:0 >= v6357:0 && v6369:0 >= v6358:0 && v6370:0 >= v6335:0 && v6371:0 >= v6336:0 && v6372:0 >= v6337:0 && v7115:0 > 0
Filtered unneeded arguments:
   f_1380(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45) -> f_1380(x1, x2, x3, x4, x5, x7, x8, x10, x11, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1380(v6333:0, v6334:0, v6335:0, v6336:0, v6337:0, v6339:0, v6340:0, v6342:0, v6343:0, v6345:0, v6363:0, v6346:0, v6364:0, v6347:0, v6365:0, v6348:0, v6366:0, v6349:0, v6367:0, v6350:0, v6368:0, v6357:0, v6360:0, v6358:0, v6369:0, v6370:0, v6371:0, v6372:0) -> f_1380(v6333:0, v6334:0, v6335:0, v6336:0, v6337:0, v6991:0, 1 + v6991:0, v7119:0, 1 + v7119:0, v6345:0, v6363:0, v6346:0, v6364:0, v6347:0, v6365:0, v6348:0, v6366:0, v6349:0, v6367:0, v6350:0, v6368:0, v6357:0, v6360:0, v6358:0, v6369:0, v6370:0, v6371:0, v6372:0) :|: v6334:0 > -1 && v6333:0 > -1 && v6335:0 > 0 && v6336:0 > 0 && v6337:0 > 0 && v6339:0 > -1 && v6340:0 > 0 && v6342:0 > -1 && v6343:0 > 0 && v6345:0 > 0 && v6346:0 > 0 && v6347:0 > 0 && v6348:0 > 0 && v6349:0 > 0 && v6350:0 > 0 && v6991:0 > -1 && v7119:0 > -1 && v6357:0 > 0 && v6358:0 > 0 && v6360:0 > 0 && v6363:0 > 3 && v6364:0 > 3 && v6365:0 > 3 && v6366:0 > 3 && v6367:0 > 7 && v6368:0 > 7 && v6369:0 > 1 && v6370:0 > 7 && v6371:0 > 7 && v6372:0 > 7 && v6363:0 >= v6345:0 && v6364:0 >= v6346:0 && v6365:0 >= v6347:0 && v6366:0 >= v6348:0 && v6367:0 >= v6349:0 && v6368:0 >= v6350:0 && v6360:0 >= v6357:0 && v6369:0 >= v6358:0 && v6370:0 >= v6335:0 && v6372:0 >= v6337:0 && v6371:0 >= v6336:0

----------------------------------------

(26)
Obligation:
Rules:
f_1380(v6333:0, v6334:0, v6335:0, v6336:0, v6337:0, v6339:0, v6340:0, v6342:0, v6343:0, v6345:0, v6363:0, v6346:0, v6364:0, v6347:0, v6365:0, v6348:0, v6366:0, v6349:0, v6367:0, v6350:0, v6368:0, v6357:0, v6360:0, v6358:0, v6369:0, v6370:0, v6371:0, v6372:0) -> f_1380(v6333:0, v6334:0, v6335:0, v6336:0, v6337:0, v6991:0, 1 + v6991:0, v7119:0, 1 + v7119:0, v6345:0, v6363:0, v6346:0, v6364:0, v6347:0, v6365:0, v6348:0, v6366:0, v6349:0, v6367:0, v6350:0, v6368:0, v6357:0, v6360:0, v6358:0, v6369:0, v6370:0, v6371:0, v6372:0) :|: v6334:0 > -1 && v6333:0 > -1 && v6335:0 > 0 && v6336:0 > 0 && v6337:0 > 0 && v6339:0 > -1 && v6340:0 > 0 && v6342:0 > -1 && v6343:0 > 0 && v6345:0 > 0 && v6346:0 > 0 && v6347:0 > 0 && v6348:0 > 0 && v6349:0 > 0 && v6350:0 > 0 && v6991:0 > -1 && v7119:0 > -1 && v6357:0 > 0 && v6358:0 > 0 && v6360:0 > 0 && v6363:0 > 3 && v6364:0 > 3 && v6365:0 > 3 && v6366:0 > 3 && v6367:0 > 7 && v6368:0 > 7 && v6369:0 > 1 && v6370:0 > 7 && v6371:0 > 7 && v6372:0 > 7 && v6363:0 >= v6345:0 && v6364:0 >= v6346:0 && v6365:0 >= v6347:0 && v6366:0 >= v6348:0 && v6367:0 >= v6349:0 && v6368:0 >= v6350:0 && v6360:0 >= v6357:0 && v6369:0 >= v6358:0 && v6370:0 >= v6335:0 && v6372:0 >= v6337:0 && v6371:0 >= v6336:0

----------------------------------------

(27)
Obligation:
SCC
----------------------------------------

(28) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 11 rulesP rules:
f_1253(v4095, v4096, v4097, v4098, v4099, v4103, v4101, 1, v4100, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) -> f_1261(v4095, v4096, v4097, v4098, v4099, v4103, v4281, v4101, 1, v4100, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) :|: TRUE
f_1261(v4095, v4096, v4097, v4098, v4099, v4103, v4281, v4101, 1, v4100, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) -> f_1268(v4095, v4096, v4097, v4098, v4099, v4103, v4281, 1, v4100, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) :|: 0 = 0
f_1268(v4095, v4096, v4097, v4098, v4099, v4103, v4281, 1, v4100, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) -> f_1277(v4095, v4096, v4097, v4098, v4099, v4103, v4281, 1, v4100, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) :|: v4281 != 0
f_1277(v4095, v4096, v4097, v4098, v4099, v4103, v4281, 1, v4100, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) -> f_1287(v4095, v4096, v4097, v4098, v4099, v4103, v4281, 1, v4100, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) :|: 0 = 0
f_1287(v4095, v4096, v4097, v4098, v4099, v4103, v4281, 1, v4100, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) -> f_1297(v4095, v4096, v4097, v4098, v4099, v4103, v4281, 1, v4100, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) :|: TRUE
f_1297(v4095, v4096, v4097, v4098, v4099, v4103, v4281, 1, v4100, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) -> f_1308(v4095, v4096, v4097, v4098, v4099, v4103, v4281, 1, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) :|: 0 = 0
f_1308(v4095, v4096, v4097, v4098, v4099, v4103, v4281, 1, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) -> f_1316(v4095, v4096, v4097, v4098, v4099, v4103, v4281, 1, v5518, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) :|: v5518 = 1 + v4103 && 3 <= v5518
f_1316(v4095, v4096, v4097, v4098, v4099, v4103, v4281, 1, v5518, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) -> f_1324(v4095, v4096, v4097, v4098, v4099, v4103, v4281, 1, v5518, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) :|: TRUE
f_1324(v4095, v4096, v4097, v4098, v4099, v4103, v4281, 1, v5518, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) -> f_1332(v4095, v4096, v4097, v4098, v4099, v4103, v4281, 1, v5518, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) :|: TRUE
f_1332(v4095, v4096, v4097, v4098, v4099, v4103, v4281, 1, v5518, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) -> f_1245(v4095, v4096, v4097, v4098, v4099, v4103, v4281, 1, v5518, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) :|: TRUE
f_1245(v4095, v4096, v4097, v4098, v4099, v4100, v4101, 1, v4103, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) -> f_1253(v4095, v4096, v4097, v4098, v4099, v4103, v4101, 1, v4100, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_1253(v4095:0, v4096:0, v4097:0, v4098:0, v4099:0, v4103:0, v4101:0, 1, v4100:0, v4104:0, v4121:0, v4105:0, v4122:0, v4106:0, v4123:0, v4107:0, v4124:0, v4108:0, v4125:0, v4109:0, v4126:0, v4115:0, v4118:0, v4116:0, v4127:0, v4128:0, v4129:0, v4130:0, v4110:0, v4111:0, v4112:0, 0, v4114:0, v4117:0, v4119:0, v4120:0, 3, 7, 2, 4, 8) -> f_1253(v4095:0, v4096:0, v4097:0, v4098:0, v4099:0, 1 + v4103:0, v4281:0, 1, v4103:0, v4104:0, v4121:0, v4105:0, v4122:0, v4106:0, v4123:0, v4107:0, v4124:0, v4108:0, v4125:0, v4109:0, v4126:0, v4115:0, v4118:0, v4116:0, v4127:0, v4128:0, v4129:0, v4130:0, v4110:0, v4111:0, v4112:0, 0, v4114:0, v4117:0, v4119:0, v4120:0, 3, 7, 2, 4, 8) :|: v4103:0 > 1 && v4281:0 < 0
f_1253(v4095:0, v4096:0, v4097:0, v4098:0, v4099:0, v4103:0, v4101:0, 1, v4100:0, v4104:0, v4121:0, v4105:0, v4122:0, v4106:0, v4123:0, v4107:0, v4124:0, v4108:0, v4125:0, v4109:0, v4126:0, v4115:0, v4118:0, v4116:0, v4127:0, v4128:0, v4129:0, v4130:0, v4110:0, v4111:0, v4112:0, 0, v4114:0, v4117:0, v4119:0, v4120:0, 3, 7, 2, 4, 8) -> f_1253(v4095:0, v4096:0, v4097:0, v4098:0, v4099:0, 1 + v4103:0, v4281:0, 1, v4103:0, v4104:0, v4121:0, v4105:0, v4122:0, v4106:0, v4123:0, v4107:0, v4124:0, v4108:0, v4125:0, v4109:0, v4126:0, v4115:0, v4118:0, v4116:0, v4127:0, v4128:0, v4129:0, v4130:0, v4110:0, v4111:0, v4112:0, 0, v4114:0, v4117:0, v4119:0, v4120:0, 3, 7, 2, 4, 8) :|: v4103:0 > 1 && v4281:0 > 0
Filtered unneeded arguments:
   f_1253(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41) -> f_1253(x6)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1253(v4103:0) -> f_1253(1 + v4103:0) :|: v4103:0 > 1

----------------------------------------

(29)
Obligation:
Rules:
f_1253(v4103:0) -> f_1253(1 + v4103:0) :|: v4103:0 > 1

----------------------------------------

(30) IntTRSNonPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, v4103:0) -> f(1, 1 + v4103:0) :|: pc = 1 && v4103:0 > 1
Proved unsatisfiability of the following formula, indicating that the system is never left after entering:
(((run2_0 = ((1 * 1)) and run2_1 = ((1 * 1) + (run1_1 * 1))) and (((run1_0 * 1)) = ((1 * 1)) and ((run1_1 * 1)) > ((1 * 1)))) and !(((run2_0 * 1)) = ((1 * 1)) and ((run2_1 * 1)) > ((1 * 1))))
Proved satisfiability of the following formula, indicating that the system is entered at least once:
((run2_0 = ((1 * 1)) and run2_1 = ((1 * 1) + (run1_1 * 1))) and (((run1_0 * 1)) = ((1 * 1)) and ((run1_1 * 1)) > ((1 * 1))))

----------------------------------------

(31)
NO

----------------------------------------

(32) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 11 rulesP rules:
f_1253(v4095, v4096, v4097, v4098, v4099, v4103, v4101, 1, v4100, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) -> f_1261(v4095, v4096, v4097, v4098, v4099, v4103, v4281, v4101, 1, v4100, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) :|: TRUE
f_1261(v4095, v4096, v4097, v4098, v4099, v4103, v4281, v4101, 1, v4100, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) -> f_1268(v4095, v4096, v4097, v4098, v4099, v4103, v4281, 1, v4100, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) :|: 0 = 0
f_1268(v4095, v4096, v4097, v4098, v4099, v4103, v4281, 1, v4100, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) -> f_1277(v4095, v4096, v4097, v4098, v4099, v4103, v4281, 1, v4100, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) :|: v4281 != 0
f_1277(v4095, v4096, v4097, v4098, v4099, v4103, v4281, 1, v4100, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) -> f_1287(v4095, v4096, v4097, v4098, v4099, v4103, v4281, 1, v4100, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) :|: 0 = 0
f_1287(v4095, v4096, v4097, v4098, v4099, v4103, v4281, 1, v4100, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) -> f_1297(v4095, v4096, v4097, v4098, v4099, v4103, v4281, 1, v4100, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) :|: TRUE
f_1297(v4095, v4096, v4097, v4098, v4099, v4103, v4281, 1, v4100, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) -> f_1308(v4095, v4096, v4097, v4098, v4099, v4103, v4281, 1, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) :|: 0 = 0
f_1308(v4095, v4096, v4097, v4098, v4099, v4103, v4281, 1, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) -> f_1316(v4095, v4096, v4097, v4098, v4099, v4103, v4281, 1, v5518, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) :|: v5518 = 1 + v4103 && 3 <= v5518
f_1316(v4095, v4096, v4097, v4098, v4099, v4103, v4281, 1, v5518, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) -> f_1324(v4095, v4096, v4097, v4098, v4099, v4103, v4281, 1, v5518, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) :|: TRUE
f_1324(v4095, v4096, v4097, v4098, v4099, v4103, v4281, 1, v5518, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) -> f_1332(v4095, v4096, v4097, v4098, v4099, v4103, v4281, 1, v5518, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) :|: TRUE
f_1332(v4095, v4096, v4097, v4098, v4099, v4103, v4281, 1, v5518, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) -> f_1245(v4095, v4096, v4097, v4098, v4099, v4103, v4281, 1, v5518, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) :|: v4110 <= v4114 && v4115 + v4110 <= 1 + v4118 && v4116 + v4111 <= 1 + v4127 && 0 <= v4095 && 0 <= v4096 && 1 <= v4097 && 1 <= v4098 && 1 <= v4099 && 1 <= v4103 && 2 <= v5518 && 1 <= v4104 && 1 <= v4105 && 1 <= v4106 && 1 <= v4107 && 1 <= v4108 && 1 <= v4109 && 1 <= v4110 && 2 <= v4111 && 1 <= v4112 && 1 <= v4114 && 1 <= v4115 && 1 <= v4116 && 0 <= v4117 && 1 <= v4118 && 0 <= v4119 && 1 <= v4120 && 4 <= v4121 && 4 <= v4122 && 4 <= v4123 && 4 <= v4124 && 8 <= v4125 && 8 <= v4126 && 2 <= v4127 && 8 <= v4128 && 8 <= v4129 && 8 <= v4130 && v4104 <= v4121 && v4105 <= v4122 && v4106 <= v4123 && v4107 <= v4124 && v4108 <= v4125 && v4109 <= v4126 && v4115 <= v4118 && v4116 <= v4127 && v4097 <= v4128 && v4098 <= v4129 && v4099 <= v4130
f_1245(v4095, v4096, v4097, v4098, v4099, v4100, v4101, 1, v4103, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) -> f_1253(v4095, v4096, v4097, v4098, v4099, v4103, v4101, 1, v4100, v4104, v4121, v4105, v4122, v4106, v4123, v4107, v4124, v4108, v4125, v4109, v4126, v4115, v4118, v4116, v4127, v4128, v4129, v4130, v4110, v4111, v4112, 0, v4114, v4117, v4119, v4120, 3, 7, 2, 4, 8) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_1253(v4095:0, v4096:0, v4097:0, v4098:0, v4099:0, v4103:0, v4101:0, 1, v4100:0, v4104:0, v4121:0, v4105:0, v4122:0, v4106:0, v4123:0, v4107:0, v4124:0, v4108:0, v4125:0, v4109:0, v4126:0, v4115:0, v4118:0, v4116:0, v4127:0, v4128:0, v4129:0, v4130:0, v4110:0, v4111:0, v4112:0, 0, v4114:0, v4117:0, v4119:0, v4120:0, 3, 7, 2, 4, 8) -> f_1253(v4095:0, v4096:0, v4097:0, v4098:0, v4099:0, 1 + v4103:0, v4281:0, 1, v4103:0, v4104:0, v4121:0, v4105:0, v4122:0, v4106:0, v4123:0, v4107:0, v4124:0, v4108:0, v4125:0, v4109:0, v4126:0, v4115:0, v4118:0, v4116:0, v4127:0, v4128:0, v4129:0, v4130:0, v4110:0, v4111:0, v4112:0, 0, v4114:0, v4117:0, v4119:0, v4120:0, 3, 7, 2, 4, 8) :|: v4103:0 > 1 && v4115:0 + v4110:0 <= 1 + v4118:0 && v4114:0 >= v4110:0 && v4116:0 + v4111:0 <= 1 + v4127:0 && v4095:0 > -1 && v4096:0 > -1 && v4097:0 > 0 && v4098:0 > 0 && v4099:0 > 0 && v4104:0 > 0 && v4105:0 > 0 && v4106:0 > 0 && v4107:0 > 0 && v4108:0 > 0 && v4109:0 > 0 && v4110:0 > 0 && v4111:0 > 1 && v4112:0 > 0 && v4114:0 > 0 && v4115:0 > 0 && v4116:0 > 0 && v4117:0 > -1 && v4118:0 > 0 && v4119:0 > -1 && v4120:0 > 0 && v4121:0 > 3 && v4122:0 > 3 && v4123:0 > 3 && v4124:0 > 3 && v4125:0 > 7 && v4126:0 > 7 && v4127:0 > 1 && v4128:0 > 7 && v4129:0 > 7 && v4130:0 > 7 && v4121:0 >= v4104:0 && v4122:0 >= v4105:0 && v4123:0 >= v4106:0 && v4124:0 >= v4107:0 && v4125:0 >= v4108:0 && v4281:0 < 0 && v4126:0 >= v4109:0 && v4118:0 >= v4115:0 && v4127:0 >= v4116:0 && v4128:0 >= v4097:0 && v4130:0 >= v4099:0 && v4129:0 >= v4098:0
f_1253(v4095:0, v4096:0, v4097:0, v4098:0, v4099:0, v4103:0, v4101:0, 1, v4100:0, v4104:0, v4121:0, v4105:0, v4122:0, v4106:0, v4123:0, v4107:0, v4124:0, v4108:0, v4125:0, v4109:0, v4126:0, v4115:0, v4118:0, v4116:0, v4127:0, v4128:0, v4129:0, v4130:0, v4110:0, v4111:0, v4112:0, 0, v4114:0, v4117:0, v4119:0, v4120:0, 3, 7, 2, 4, 8) -> f_1253(v4095:0, v4096:0, v4097:0, v4098:0, v4099:0, 1 + v4103:0, v4281:0, 1, v4103:0, v4104:0, v4121:0, v4105:0, v4122:0, v4106:0, v4123:0, v4107:0, v4124:0, v4108:0, v4125:0, v4109:0, v4126:0, v4115:0, v4118:0, v4116:0, v4127:0, v4128:0, v4129:0, v4130:0, v4110:0, v4111:0, v4112:0, 0, v4114:0, v4117:0, v4119:0, v4120:0, 3, 7, 2, 4, 8) :|: v4103:0 > 1 && v4115:0 + v4110:0 <= 1 + v4118:0 && v4114:0 >= v4110:0 && v4116:0 + v4111:0 <= 1 + v4127:0 && v4095:0 > -1 && v4096:0 > -1 && v4097:0 > 0 && v4098:0 > 0 && v4099:0 > 0 && v4104:0 > 0 && v4105:0 > 0 && v4106:0 > 0 && v4107:0 > 0 && v4108:0 > 0 && v4109:0 > 0 && v4110:0 > 0 && v4111:0 > 1 && v4112:0 > 0 && v4114:0 > 0 && v4115:0 > 0 && v4116:0 > 0 && v4117:0 > -1 && v4118:0 > 0 && v4119:0 > -1 && v4120:0 > 0 && v4121:0 > 3 && v4122:0 > 3 && v4123:0 > 3 && v4124:0 > 3 && v4125:0 > 7 && v4126:0 > 7 && v4127:0 > 1 && v4128:0 > 7 && v4129:0 > 7 && v4130:0 > 7 && v4121:0 >= v4104:0 && v4122:0 >= v4105:0 && v4123:0 >= v4106:0 && v4124:0 >= v4107:0 && v4125:0 >= v4108:0 && v4281:0 > 0 && v4126:0 >= v4109:0 && v4118:0 >= v4115:0 && v4127:0 >= v4116:0 && v4128:0 >= v4097:0 && v4130:0 >= v4099:0 && v4129:0 >= v4098:0
Filtered unneeded arguments:
   f_1253(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41) -> f_1253(x1, x2, x3, x4, x5, x6, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x33, x34, x35, x36)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1253(v4095:0, v4096:0, v4097:0, v4098:0, v4099:0, v4103:0, v4104:0, v4121:0, v4105:0, v4122:0, v4106:0, v4123:0, v4107:0, v4124:0, v4108:0, v4125:0, v4109:0, v4126:0, v4115:0, v4118:0, v4116:0, v4127:0, v4128:0, v4129:0, v4130:0, v4110:0, v4111:0, v4112:0, v4114:0, v4117:0, v4119:0, v4120:0) -> f_1253(v4095:0, v4096:0, v4097:0, v4098:0, v4099:0, 1 + v4103:0, v4104:0, v4121:0, v4105:0, v4122:0, v4106:0, v4123:0, v4107:0, v4124:0, v4108:0, v4125:0, v4109:0, v4126:0, v4115:0, v4118:0, v4116:0, v4127:0, v4128:0, v4129:0, v4130:0, v4110:0, v4111:0, v4112:0, v4114:0, v4117:0, v4119:0, v4120:0) :|: v4115:0 + v4110:0 <= 1 + v4118:0 && v4103:0 > 1 && v4114:0 >= v4110:0 && v4116:0 + v4111:0 <= 1 + v4127:0 && v4095:0 > -1 && v4096:0 > -1 && v4097:0 > 0 && v4098:0 > 0 && v4099:0 > 0 && v4104:0 > 0 && v4105:0 > 0 && v4106:0 > 0 && v4107:0 > 0 && v4108:0 > 0 && v4109:0 > 0 && v4110:0 > 0 && v4111:0 > 1 && v4112:0 > 0 && v4114:0 > 0 && v4115:0 > 0 && v4116:0 > 0 && v4117:0 > -1 && v4118:0 > 0 && v4119:0 > -1 && v4120:0 > 0 && v4121:0 > 3 && v4122:0 > 3 && v4123:0 > 3 && v4124:0 > 3 && v4125:0 > 7 && v4126:0 > 7 && v4127:0 > 1 && v4128:0 > 7 && v4129:0 > 7 && v4130:0 > 7 && v4121:0 >= v4104:0 && v4122:0 >= v4105:0 && v4123:0 >= v4106:0 && v4124:0 >= v4107:0 && v4125:0 >= v4108:0 && v4126:0 >= v4109:0 && v4118:0 >= v4115:0 && v4127:0 >= v4116:0 && v4128:0 >= v4097:0 && v4129:0 >= v4098:0 && v4130:0 >= v4099:0

----------------------------------------

(33)
Obligation:
Rules:
f_1253(v4095:0, v4096:0, v4097:0, v4098:0, v4099:0, v4103:0, v4104:0, v4121:0, v4105:0, v4122:0, v4106:0, v4123:0, v4107:0, v4124:0, v4108:0, v4125:0, v4109:0, v4126:0, v4115:0, v4118:0, v4116:0, v4127:0, v4128:0, v4129:0, v4130:0, v4110:0, v4111:0, v4112:0, v4114:0, v4117:0, v4119:0, v4120:0) -> f_1253(v4095:0, v4096:0, v4097:0, v4098:0, v4099:0, 1 + v4103:0, v4104:0, v4121:0, v4105:0, v4122:0, v4106:0, v4123:0, v4107:0, v4124:0, v4108:0, v4125:0, v4109:0, v4126:0, v4115:0, v4118:0, v4116:0, v4127:0, v4128:0, v4129:0, v4130:0, v4110:0, v4111:0, v4112:0, v4114:0, v4117:0, v4119:0, v4120:0) :|: v4115:0 + v4110:0 <= 1 + v4118:0 && v4103:0 > 1 && v4114:0 >= v4110:0 && v4116:0 + v4111:0 <= 1 + v4127:0 && v4095:0 > -1 && v4096:0 > -1 && v4097:0 > 0 && v4098:0 > 0 && v4099:0 > 0 && v4104:0 > 0 && v4105:0 > 0 && v4106:0 > 0 && v4107:0 > 0 && v4108:0 > 0 && v4109:0 > 0 && v4110:0 > 0 && v4111:0 > 1 && v4112:0 > 0 && v4114:0 > 0 && v4115:0 > 0 && v4116:0 > 0 && v4117:0 > -1 && v4118:0 > 0 && v4119:0 > -1 && v4120:0 > 0 && v4121:0 > 3 && v4122:0 > 3 && v4123:0 > 3 && v4124:0 > 3 && v4125:0 > 7 && v4126:0 > 7 && v4127:0 > 1 && v4128:0 > 7 && v4129:0 > 7 && v4130:0 > 7 && v4121:0 >= v4104:0 && v4122:0 >= v4105:0 && v4123:0 >= v4106:0 && v4124:0 >= v4107:0 && v4125:0 >= v4108:0 && v4126:0 >= v4109:0 && v4118:0 >= v4115:0 && v4127:0 >= v4116:0 && v4128:0 >= v4097:0 && v4129:0 >= v4098:0 && v4130:0 >= v4099:0

----------------------------------------

(34)
Obligation:
SCC
----------------------------------------

(35) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 14 rulesP rules:
f_1209(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3658, v3659, v3660, v3661, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) -> f_1218(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v3659, v3660, v3661, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) :|: v3879 = 1 + v3743 && 1 <= v3879
f_1218(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v3659, v3660, v3661, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) -> f_1226(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v3659, v3660, v3661, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) :|: TRUE
f_1226(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v3659, v3660, v3661, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) -> f_1234(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v3660, v3661, v3659, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) :|: TRUE
f_1234(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v3660, v3661, v3659, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) -> f_1242(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v4021, v3661, v3659, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) :|: TRUE
f_1242(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v4021, v3661, v3659, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) -> f_1251(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v4021, v4153, v3659, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) :|: v4153 = 1 + v4021 && 1 <= v4153
f_1251(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v4021, v4153, v3659, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) -> f_1259(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v4021, v4153, v3659, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) :|: TRUE
f_1259(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v4021, v4153, v3659, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) -> f_1266(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v4021, v4153, v3659, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) :|: TRUE
f_1266(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v4021, v4153, v3659, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) -> f_1274(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v4021, v4153, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) :|: 0 = 0
f_1274(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v4021, v4153, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) -> f_1283(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v4021, v4153, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) :|: v4015 != 0
f_1283(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v4021, v4153, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) -> f_1293(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v4021, v4153, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) :|: 0 = 0
f_1293(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v4021, v4153, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) -> f_1303(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v4021, v4153, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) :|: TRUE
f_1303(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v4021, v4153, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) -> f_1312(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v4021, v4153, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) :|: TRUE
f_1312(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v4021, v4153, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) -> f_1200(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v4021, v4153, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) :|: TRUE
f_1200(v3651, v3652, v3653, v3654, v3655, 0, v3657, v3658, v3659, v3660, v3661, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) -> f_1209(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3658, v3659, v3660, v3661, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) :|: TRUE
Combined rules. Obtained 2 rulesP rules:
f_1209(v3651:0, v3652:0, v3653:0, v3654:0, v3655:0, 0, v3743:0, v3658:0, v3659:0, v3660:0, v3661:0, 1, v3663:0, v3677:0, v3664:0, v3678:0, v3665:0, v3679:0, v3666:0, v3680:0, v3667:0, v3681:0, v3668:0, v3682:0, v3673:0, v3674:0, v3683:0, v3684:0, v3685:0, v3686:0, v3669:0, v3670:0, v3671:0, v3672:0, v3675:0, v3676:0, 3, 7, 2, 4, 8) -> f_1209(v3651:0, v3652:0, v3653:0, v3654:0, v3655:0, 0, v3743:1, 1 + v3743:0, v4015:0, v4021:0, 1 + v4021:0, 1, v3663:0, v3677:0, v3664:0, v3678:0, v3665:0, v3679:0, v3666:0, v3680:0, v3667:0, v3681:0, v3668:0, v3682:0, v3673:0, v3674:0, v3683:0, v3684:0, v3685:0, v3686:0, v3669:0, v3670:0, v3671:0, v3672:0, v3675:0, v3676:0, 3, 7, 2, 4, 8) :|: v3743:0 > -1 && v4015:0 < 0 && v4021:0 > -1
f_1209(v3651:0, v3652:0, v3653:0, v3654:0, v3655:0, 0, v3743:0, v3658:0, v3659:0, v3660:0, v3661:0, 1, v3663:0, v3677:0, v3664:0, v3678:0, v3665:0, v3679:0, v3666:0, v3680:0, v3667:0, v3681:0, v3668:0, v3682:0, v3673:0, v3674:0, v3683:0, v3684:0, v3685:0, v3686:0, v3669:0, v3670:0, v3671:0, v3672:0, v3675:0, v3676:0, 3, 7, 2, 4, 8) -> f_1209(v3651:0, v3652:0, v3653:0, v3654:0, v3655:0, 0, v3743:1, 1 + v3743:0, v4015:0, v4021:0, 1 + v4021:0, 1, v3663:0, v3677:0, v3664:0, v3678:0, v3665:0, v3679:0, v3666:0, v3680:0, v3667:0, v3681:0, v3668:0, v3682:0, v3673:0, v3674:0, v3683:0, v3684:0, v3685:0, v3686:0, v3669:0, v3670:0, v3671:0, v3672:0, v3675:0, v3676:0, 3, 7, 2, 4, 8) :|: v3743:0 > -1 && v4015:0 > 0 && v4021:0 > -1
Filtered unneeded arguments:
   f_1209(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41) -> f_1209(x7)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1209(v3743:0) -> f_1209(v3743:1) :|: v3743:0 > -1

----------------------------------------

(36)
Obligation:
Rules:
f_1209(v3743:0) -> f_1209(v3743:1) :|: v3743:0 > -1

----------------------------------------

(37) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, v3743:0) -> f(1, v3743:1) :|: pc = 1 && v3743:0 > -1
Witness term starting non-terminating reduction: f(1, 0)
----------------------------------------

(38)
NO

----------------------------------------

(39) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 14 rulesP rules:
f_1209(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3658, v3659, v3660, v3661, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) -> f_1218(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v3659, v3660, v3661, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) :|: v3879 = 1 + v3743 && 1 <= v3879
f_1218(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v3659, v3660, v3661, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) -> f_1226(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v3659, v3660, v3661, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) :|: TRUE
f_1226(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v3659, v3660, v3661, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) -> f_1234(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v3660, v3661, v3659, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) :|: TRUE
f_1234(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v3660, v3661, v3659, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) -> f_1242(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v4021, v3661, v3659, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) :|: TRUE
f_1242(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v4021, v3661, v3659, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) -> f_1251(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v4021, v4153, v3659, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) :|: v4153 = 1 + v4021 && 1 <= v4153
f_1251(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v4021, v4153, v3659, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) -> f_1259(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v4021, v4153, v3659, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) :|: TRUE
f_1259(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v4021, v4153, v3659, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) -> f_1266(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v4021, v4153, v3659, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) :|: TRUE
f_1266(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v4021, v4153, v3659, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) -> f_1274(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v4021, v4153, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) :|: 0 = 0
f_1274(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v4021, v4153, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) -> f_1283(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v4021, v4153, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) :|: v4015 != 0
f_1283(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v4021, v4153, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) -> f_1293(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v4021, v4153, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) :|: 0 = 0
f_1293(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v4021, v4153, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) -> f_1303(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v4021, v4153, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) :|: TRUE
f_1303(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v4021, v4153, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) -> f_1312(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v4021, v4153, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) :|: TRUE
f_1312(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v4021, v4153, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) -> f_1200(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3879, v4015, v4021, v4153, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) :|: v3674 + v3670 <= 1 + v3683 && 0 <= v3651 && 0 <= v3652 && 1 <= v3653 && 1 <= v3654 && 1 <= v3655 && 0 <= v3743 && 1 <= v3879 && 0 <= v4021 && 1 <= v4153 && 1 <= v3663 && 1 <= v3664 && 1 <= v3665 && 1 <= v3666 && 1 <= v3667 && 1 <= v3668 && v3669 <= 0 && 2 <= v3670 && 1 <= v3671 && 1 <= v3672 && 1 <= v3673 && 1 <= v3674 && 0 <= v3675 && 1 <= v3676 && 4 <= v3677 && 4 <= v3678 && 4 <= v3679 && 4 <= v3680 && 8 <= v3681 && 8 <= v3682 && 2 <= v3683 && 8 <= v3684 && 8 <= v3685 && 8 <= v3686 && v3663 <= v3677 && v3664 <= v3678 && v3665 <= v3679 && v3666 <= v3680 && v3667 <= v3681 && v3668 <= v3682 && 0 <= 0 && v3674 <= v3683 && v3653 <= v3684 && v3654 <= v3685 && v3655 <= v3686
f_1200(v3651, v3652, v3653, v3654, v3655, 0, v3657, v3658, v3659, v3660, v3661, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) -> f_1209(v3651, v3652, v3653, v3654, v3655, 0, v3743, v3658, v3659, v3660, v3661, 1, v3663, v3677, v3664, v3678, v3665, v3679, v3666, v3680, v3667, v3681, v3668, v3682, v3673, v3674, v3683, v3684, v3685, v3686, v3669, v3670, v3671, v3672, v3675, v3676, 3, 7, 2, 4, 8) :|: TRUE
Combined rules. Obtained 2 rulesP rules:
f_1209(v3651:0, v3652:0, v3653:0, v3654:0, v3655:0, 0, v3743:0, v3658:0, v3659:0, v3660:0, v3661:0, 1, v3663:0, v3677:0, v3664:0, v3678:0, v3665:0, v3679:0, v3666:0, v3680:0, v3667:0, v3681:0, v3668:0, v3682:0, v3673:0, v3674:0, v3683:0, v3684:0, v3685:0, v3686:0, v3669:0, v3670:0, v3671:0, v3672:0, v3675:0, v3676:0, 3, 7, 2, 4, 8) -> f_1209(v3651:0, v3652:0, v3653:0, v3654:0, v3655:0, 0, v3743:1, 1 + v3743:0, v4015:0, v4021:0, 1 + v4021:0, 1, v3663:0, v3677:0, v3664:0, v3678:0, v3665:0, v3679:0, v3666:0, v3680:0, v3667:0, v3681:0, v3668:0, v3682:0, v3673:0, v3674:0, v3683:0, v3684:0, v3685:0, v3686:0, v3669:0, v3670:0, v3671:0, v3672:0, v3675:0, v3676:0, 3, 7, 2, 4, 8) :|: v3651:0 > -1 && v3674:0 + v3670:0 <= 1 + v3683:0 && v3652:0 > -1 && v3653:0 > 0 && v3654:0 > 0 && v3655:0 > 0 && v3743:0 > -1 && v4021:0 > -1 && v3663:0 > 0 && v3664:0 > 0 && v3665:0 > 0 && v3666:0 > 0 && v3667:0 > 0 && v3668:0 > 0 && v3669:0 < 1 && v3670:0 > 1 && v3671:0 > 0 && v3672:0 > 0 && v3673:0 > 0 && v3674:0 > 0 && v3675:0 > -1 && v3676:0 > 0 && v3677:0 > 3 && v3678:0 > 3 && v3679:0 > 3 && v3680:0 > 3 && v3681:0 > 7 && v3682:0 > 7 && v3683:0 > 1 && v3684:0 > 7 && v3685:0 > 7 && v3686:0 > 7 && v3677:0 >= v3663:0 && v3678:0 >= v3664:0 && v3679:0 >= v3665:0 && v3680:0 >= v3666:0 && v3681:0 >= v3667:0 && v3682:0 >= v3668:0 && v3683:0 >= v3674:0 && v4015:0 < 0 && v3684:0 >= v3653:0 && v3686:0 >= v3655:0 && v3685:0 >= v3654:0
f_1209(v3651:0, v3652:0, v3653:0, v3654:0, v3655:0, 0, v3743:0, v3658:0, v3659:0, v3660:0, v3661:0, 1, v3663:0, v3677:0, v3664:0, v3678:0, v3665:0, v3679:0, v3666:0, v3680:0, v3667:0, v3681:0, v3668:0, v3682:0, v3673:0, v3674:0, v3683:0, v3684:0, v3685:0, v3686:0, v3669:0, v3670:0, v3671:0, v3672:0, v3675:0, v3676:0, 3, 7, 2, 4, 8) -> f_1209(v3651:0, v3652:0, v3653:0, v3654:0, v3655:0, 0, v3743:1, 1 + v3743:0, v4015:0, v4021:0, 1 + v4021:0, 1, v3663:0, v3677:0, v3664:0, v3678:0, v3665:0, v3679:0, v3666:0, v3680:0, v3667:0, v3681:0, v3668:0, v3682:0, v3673:0, v3674:0, v3683:0, v3684:0, v3685:0, v3686:0, v3669:0, v3670:0, v3671:0, v3672:0, v3675:0, v3676:0, 3, 7, 2, 4, 8) :|: v3651:0 > -1 && v3674:0 + v3670:0 <= 1 + v3683:0 && v3652:0 > -1 && v3653:0 > 0 && v3654:0 > 0 && v3655:0 > 0 && v3743:0 > -1 && v4021:0 > -1 && v3663:0 > 0 && v3664:0 > 0 && v3665:0 > 0 && v3666:0 > 0 && v3667:0 > 0 && v3668:0 > 0 && v3669:0 < 1 && v3670:0 > 1 && v3671:0 > 0 && v3672:0 > 0 && v3673:0 > 0 && v3674:0 > 0 && v3675:0 > -1 && v3676:0 > 0 && v3677:0 > 3 && v3678:0 > 3 && v3679:0 > 3 && v3680:0 > 3 && v3681:0 > 7 && v3682:0 > 7 && v3683:0 > 1 && v3684:0 > 7 && v3685:0 > 7 && v3686:0 > 7 && v3677:0 >= v3663:0 && v3678:0 >= v3664:0 && v3679:0 >= v3665:0 && v3680:0 >= v3666:0 && v3681:0 >= v3667:0 && v3682:0 >= v3668:0 && v3683:0 >= v3674:0 && v4015:0 > 0 && v3684:0 >= v3653:0 && v3686:0 >= v3655:0 && v3685:0 >= v3654:0
Filtered unneeded arguments:
   f_1209(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41) -> f_1209(x1, x2, x3, x4, x5, x7, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1209(v3651:0, v3652:0, v3653:0, v3654:0, v3655:0, v3743:0, v3663:0, v3677:0, v3664:0, v3678:0, v3665:0, v3679:0, v3666:0, v3680:0, v3667:0, v3681:0, v3668:0, v3682:0, v3673:0, v3674:0, v3683:0, v3684:0, v3685:0, v3686:0, v3669:0, v3670:0, v3671:0, v3672:0, v3675:0, v3676:0) -> f_1209(v3651:0, v3652:0, v3653:0, v3654:0, v3655:0, v3743:1, v3663:0, v3677:0, v3664:0, v3678:0, v3665:0, v3679:0, v3666:0, v3680:0, v3667:0, v3681:0, v3668:0, v3682:0, v3673:0, v3674:0, v3683:0, v3684:0, v3685:0, v3686:0, v3669:0, v3670:0, v3671:0, v3672:0, v3675:0, v3676:0) :|: v3674:0 + v3670:0 <= 1 + v3683:0 && v3651:0 > -1 && v3652:0 > -1 && v3653:0 > 0 && v3654:0 > 0 && v3655:0 > 0 && v3743:0 > -1 && v3663:0 > 0 && v3664:0 > 0 && v3665:0 > 0 && v3666:0 > 0 && v3667:0 > 0 && v3668:0 > 0 && v3669:0 < 1 && v3670:0 > 1 && v3671:0 > 0 && v3672:0 > 0 && v3673:0 > 0 && v3674:0 > 0 && v3675:0 > -1 && v3676:0 > 0 && v3677:0 > 3 && v3678:0 > 3 && v3679:0 > 3 && v3680:0 > 3 && v3681:0 > 7 && v3682:0 > 7 && v3683:0 > 1 && v3684:0 > 7 && v3685:0 > 7 && v3686:0 > 7 && v3677:0 >= v3663:0 && v3678:0 >= v3664:0 && v3679:0 >= v3665:0 && v3680:0 >= v3666:0 && v3681:0 >= v3667:0 && v3682:0 >= v3668:0 && v3683:0 >= v3674:0 && v3684:0 >= v3653:0 && v3685:0 >= v3654:0 && v3686:0 >= v3655:0

----------------------------------------

(40)
Obligation:
Rules:
f_1209(v3651:0, v3652:0, v3653:0, v3654:0, v3655:0, v3743:0, v3663:0, v3677:0, v3664:0, v3678:0, v3665:0, v3679:0, v3666:0, v3680:0, v3667:0, v3681:0, v3668:0, v3682:0, v3673:0, v3674:0, v3683:0, v3684:0, v3685:0, v3686:0, v3669:0, v3670:0, v3671:0, v3672:0, v3675:0, v3676:0) -> f_1209(v3651:0, v3652:0, v3653:0, v3654:0, v3655:0, v3743:1, v3663:0, v3677:0, v3664:0, v3678:0, v3665:0, v3679:0, v3666:0, v3680:0, v3667:0, v3681:0, v3668:0, v3682:0, v3673:0, v3674:0, v3683:0, v3684:0, v3685:0, v3686:0, v3669:0, v3670:0, v3671:0, v3672:0, v3675:0, v3676:0) :|: v3674:0 + v3670:0 <= 1 + v3683:0 && v3651:0 > -1 && v3652:0 > -1 && v3653:0 > 0 && v3654:0 > 0 && v3655:0 > 0 && v3743:0 > -1 && v3663:0 > 0 && v3664:0 > 0 && v3665:0 > 0 && v3666:0 > 0 && v3667:0 > 0 && v3668:0 > 0 && v3669:0 < 1 && v3670:0 > 1 && v3671:0 > 0 && v3672:0 > 0 && v3673:0 > 0 && v3674:0 > 0 && v3675:0 > -1 && v3676:0 > 0 && v3677:0 > 3 && v3678:0 > 3 && v3679:0 > 3 && v3680:0 > 3 && v3681:0 > 7 && v3682:0 > 7 && v3683:0 > 1 && v3684:0 > 7 && v3685:0 > 7 && v3686:0 > 7 && v3677:0 >= v3663:0 && v3678:0 >= v3664:0 && v3679:0 >= v3665:0 && v3680:0 >= v3666:0 && v3681:0 >= v3667:0 && v3682:0 >= v3668:0 && v3683:0 >= v3674:0 && v3684:0 >= v3653:0 && v3685:0 >= v3654:0 && v3686:0 >= v3655:0

----------------------------------------

(41) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(42)
Obligation:
Rules:
f_1209(v3651:0:0, v3652:0:0, v3653:0:0, v3654:0:0, v3655:0:0, v3743:0:0, v3663:0:0, v3677:0:0, v3664:0:0, v3678:0:0, v3665:0:0, v3679:0:0, v3666:0:0, v3680:0:0, v3667:0:0, v3681:0:0, v3668:0:0, v3682:0:0, v3673:0:0, v3674:0:0, v3683:0:0, v3684:0:0, v3685:0:0, v3686:0:0, v3669:0:0, v3670:0:0, v3671:0:0, v3672:0:0, v3675:0:0, v3676:0:0) -> f_1209(v3651:0:0, v3652:0:0, v3653:0:0, v3654:0:0, v3655:0:0, v3743:1:0, v3663:0:0, v3677:0:0, v3664:0:0, v3678:0:0, v3665:0:0, v3679:0:0, v3666:0:0, v3680:0:0, v3667:0:0, v3681:0:0, v3668:0:0, v3682:0:0, v3673:0:0, v3674:0:0, v3683:0:0, v3684:0:0, v3685:0:0, v3686:0:0, v3669:0:0, v3670:0:0, v3671:0:0, v3672:0:0, v3675:0:0, v3676:0:0) :|: v3685:0:0 >= v3654:0:0 && v3686:0:0 >= v3655:0:0 && v3684:0:0 >= v3653:0:0 && v3683:0:0 >= v3674:0:0 && v3682:0:0 >= v3668:0:0 && v3681:0:0 >= v3667:0:0 && v3680:0:0 >= v3666:0:0 && v3679:0:0 >= v3665:0:0 && v3678:0:0 >= v3664:0:0 && v3677:0:0 >= v3663:0:0 && v3686:0:0 > 7 && v3685:0:0 > 7 && v3684:0:0 > 7 && v3683:0:0 > 1 && v3682:0:0 > 7 && v3681:0:0 > 7 && v3680:0:0 > 3 && v3679:0:0 > 3 && v3678:0:0 > 3 && v3677:0:0 > 3 && v3676:0:0 > 0 && v3675:0:0 > -1 && v3674:0:0 > 0 && v3673:0:0 > 0 && v3672:0:0 > 0 && v3671:0:0 > 0 && v3670:0:0 > 1 && v3669:0:0 < 1 && v3668:0:0 > 0 && v3667:0:0 > 0 && v3666:0:0 > 0 && v3665:0:0 > 0 && v3664:0:0 > 0 && v3663:0:0 > 0 && v3743:0:0 > -1 && v3655:0:0 > 0 && v3654:0:0 > 0 && v3653:0:0 > 0 && v3652:0:0 > -1 && v3651:0:0 > -1 && v3674:0:0 + v3670:0:0 <= 1 + v3683:0:0

----------------------------------------

(43) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, v3651:0:0, v3652:0:0, v3653:0:0, v3654:0:0, v3655:0:0, v3743:0:0, v3663:0:0, v3677:0:0, v3664:0:0, v3678:0:0, v3665:0:0, v3679:0:0, v3666:0:0, v3680:0:0, v3667:0:0, v3681:0:0, v3668:0:0, v3682:0:0, v3673:0:0, v3674:0:0, v3683:0:0, v3684:0:0, v3685:0:0, v3686:0:0, v3669:0:0, v3670:0:0, v3671:0:0, v3672:0:0, v3675:0:0, v3676:0:0) -> f(1, v3651:0:0, v3652:0:0, v3653:0:0, v3654:0:0, v3655:0:0, v3743:1:0, v3663:0:0, v3677:0:0, v3664:0:0, v3678:0:0, v3665:0:0, v3679:0:0, v3666:0:0, v3680:0:0, v3667:0:0, v3681:0:0, v3668:0:0, v3682:0:0, v3673:0:0, v3674:0:0, v3683:0:0, v3684:0:0, v3685:0:0, v3686:0:0, v3669:0:0, v3670:0:0, v3671:0:0, v3672:0:0, v3675:0:0, v3676:0:0) :|: pc = 1 && (v3685:0:0 >= v3654:0:0 && v3686:0:0 >= v3655:0:0 && v3684:0:0 >= v3653:0:0 && v3683:0:0 >= v3674:0:0 && v3682:0:0 >= v3668:0:0 && v3681:0:0 >= v3667:0:0 && v3680:0:0 >= v3666:0:0 && v3679:0:0 >= v3665:0:0 && v3678:0:0 >= v3664:0:0 && v3677:0:0 >= v3663:0:0 && v3686:0:0 > 7 && v3685:0:0 > 7 && v3684:0:0 > 7 && v3683:0:0 > 1 && v3682:0:0 > 7 && v3681:0:0 > 7 && v3680:0:0 > 3 && v3679:0:0 > 3 && v3678:0:0 > 3 && v3677:0:0 > 3 && v3676:0:0 > 0 && v3675:0:0 > -1 && v3674:0:0 > 0 && v3673:0:0 > 0 && v3672:0:0 > 0 && v3671:0:0 > 0 && v3670:0:0 > 1 && v3669:0:0 < 1 && v3668:0:0 > 0 && v3667:0:0 > 0 && v3666:0:0 > 0 && v3665:0:0 > 0 && v3664:0:0 > 0 && v3663:0:0 > 0 && v3743:0:0 > -1 && v3655:0:0 > 0 && v3654:0:0 > 0 && v3653:0:0 > 0 && v3652:0:0 > -1 && v3651:0:0 > -1 && v3674:0:0 + v3670:0:0 <= 1 + v3683:0:0)
Witness term starting non-terminating reduction: f(1, 0, 0, 1, 1, 8, 0, 16, 16, 4, 12, 1, 5, 16, 18, 8, 10, 16, 16, 1, 2, 9, 14, 20, 10, 0, 8, 1, 1, 0, 1)
----------------------------------------

(44)
NO

----------------------------------------

(45)
Obligation:
SCC
----------------------------------------

(46) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 11 rulesP rules:
f_1177(v2986, v2987, v2988, v2989, v2990, v2994, v2992, 1, v2991, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) -> f_1188(v2986, v2987, v2988, v2989, v2990, v2994, v3294, v2992, 1, v2991, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) :|: TRUE
f_1188(v2986, v2987, v2988, v2989, v2990, v2994, v3294, v2992, 1, v2991, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) -> f_1198(v2986, v2987, v2988, v2989, v2990, v2994, v3294, 1, v2991, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) :|: 0 = 0
f_1198(v2986, v2987, v2988, v2989, v2990, v2994, v3294, 1, v2991, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) -> f_1207(v2986, v2987, v2988, v2989, v2990, v2994, v3294, 1, v2991, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) :|: v3294 != 0
f_1207(v2986, v2987, v2988, v2989, v2990, v2994, v3294, 1, v2991, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) -> f_1216(v2986, v2987, v2988, v2989, v2990, v2994, v3294, 1, v2991, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) :|: 0 = 0
f_1216(v2986, v2987, v2988, v2989, v2990, v2994, v3294, 1, v2991, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) -> f_1224(v2986, v2987, v2988, v2989, v2990, v2994, v3294, 1, v2991, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) :|: TRUE
f_1224(v2986, v2987, v2988, v2989, v2990, v2994, v3294, 1, v2991, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) -> f_1232(v2986, v2987, v2988, v2989, v2990, v2994, v3294, 1, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) :|: 0 = 0
f_1232(v2986, v2987, v2988, v2989, v2990, v2994, v3294, 1, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) -> f_1240(v2986, v2987, v2988, v2989, v2990, v2994, v3294, 1, v4020, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) :|: v4020 = 1 + v2994 && 2 <= v4020
f_1240(v2986, v2987, v2988, v2989, v2990, v2994, v3294, 1, v4020, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) -> f_1249(v2986, v2987, v2988, v2989, v2990, v2994, v3294, 1, v4020, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) :|: TRUE
f_1249(v2986, v2987, v2988, v2989, v2990, v2994, v3294, 1, v4020, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) -> f_1257(v2986, v2987, v2988, v2989, v2990, v2994, v3294, 1, v4020, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) :|: TRUE
f_1257(v2986, v2987, v2988, v2989, v2990, v2994, v3294, 1, v4020, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) -> f_1167(v2986, v2987, v2988, v2989, v2990, v2994, v3294, 1, v4020, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) :|: TRUE
f_1167(v2986, v2987, v2988, v2989, v2990, v2991, v2992, 1, v2994, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) -> f_1177(v2986, v2987, v2988, v2989, v2990, v2994, v2992, 1, v2991, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_1177(v2986:0, v2987:0, v2988:0, v2989:0, v2990:0, v2994:0, v2992:0, 1, v2991:0, v2995:0, v3010:0, v2996:0, v3011:0, v2997:0, v3012:0, v2998:0, v3013:0, v2999:0, v3014:0, v3000:0, v3015:0, v3006:0, v3007:0, v3016:0, v3017:0, v3018:0, v3019:0, v3001:0, v3002:0, v3003:0, 0, v3005:0, v3008:0, v3009:0, 3, 7, 2, 4, 8) -> f_1177(v2986:0, v2987:0, v2988:0, v2989:0, v2990:0, 1 + v2994:0, v3294:0, 1, v2994:0, v2995:0, v3010:0, v2996:0, v3011:0, v2997:0, v3012:0, v2998:0, v3013:0, v2999:0, v3014:0, v3000:0, v3015:0, v3006:0, v3007:0, v3016:0, v3017:0, v3018:0, v3019:0, v3001:0, v3002:0, v3003:0, 0, v3005:0, v3008:0, v3009:0, 3, 7, 2, 4, 8) :|: v2994:0 > 0 && v3294:0 < 0
f_1177(v2986:0, v2987:0, v2988:0, v2989:0, v2990:0, v2994:0, v2992:0, 1, v2991:0, v2995:0, v3010:0, v2996:0, v3011:0, v2997:0, v3012:0, v2998:0, v3013:0, v2999:0, v3014:0, v3000:0, v3015:0, v3006:0, v3007:0, v3016:0, v3017:0, v3018:0, v3019:0, v3001:0, v3002:0, v3003:0, 0, v3005:0, v3008:0, v3009:0, 3, 7, 2, 4, 8) -> f_1177(v2986:0, v2987:0, v2988:0, v2989:0, v2990:0, 1 + v2994:0, v3294:0, 1, v2994:0, v2995:0, v3010:0, v2996:0, v3011:0, v2997:0, v3012:0, v2998:0, v3013:0, v2999:0, v3014:0, v3000:0, v3015:0, v3006:0, v3007:0, v3016:0, v3017:0, v3018:0, v3019:0, v3001:0, v3002:0, v3003:0, 0, v3005:0, v3008:0, v3009:0, 3, 7, 2, 4, 8) :|: v2994:0 > 0 && v3294:0 > 0
Filtered unneeded arguments:
   f_1177(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39) -> f_1177(x6)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1177(v2994:0) -> f_1177(1 + v2994:0) :|: v2994:0 > 0

----------------------------------------

(47)
Obligation:
Rules:
f_1177(v2994:0) -> f_1177(1 + v2994:0) :|: v2994:0 > 0

----------------------------------------

(48) IntTRSNonPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, v2994:0) -> f(1, 1 + v2994:0) :|: pc = 1 && v2994:0 > 0
Proved unsatisfiability of the following formula, indicating that the system is never left after entering:
(((run2_0 = ((1 * 1)) and run2_1 = ((1 * 1) + (run1_1 * 1))) and (((run1_0 * 1)) = ((1 * 1)) and ((run1_1 * 1)) > 0)) and !(((run2_0 * 1)) = ((1 * 1)) and ((run2_1 * 1)) > 0))
Proved satisfiability of the following formula, indicating that the system is entered at least once:
((run2_0 = ((1 * 1)) and run2_1 = ((1 * 1) + (run1_1 * 1))) and (((run1_0 * 1)) = ((1 * 1)) and ((run1_1 * 1)) > 0))

----------------------------------------

(49)
NO

----------------------------------------

(50) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 11 rulesP rules:
f_1177(v2986, v2987, v2988, v2989, v2990, v2994, v2992, 1, v2991, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) -> f_1188(v2986, v2987, v2988, v2989, v2990, v2994, v3294, v2992, 1, v2991, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) :|: TRUE
f_1188(v2986, v2987, v2988, v2989, v2990, v2994, v3294, v2992, 1, v2991, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) -> f_1198(v2986, v2987, v2988, v2989, v2990, v2994, v3294, 1, v2991, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) :|: 0 = 0
f_1198(v2986, v2987, v2988, v2989, v2990, v2994, v3294, 1, v2991, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) -> f_1207(v2986, v2987, v2988, v2989, v2990, v2994, v3294, 1, v2991, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) :|: v3294 != 0
f_1207(v2986, v2987, v2988, v2989, v2990, v2994, v3294, 1, v2991, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) -> f_1216(v2986, v2987, v2988, v2989, v2990, v2994, v3294, 1, v2991, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) :|: 0 = 0
f_1216(v2986, v2987, v2988, v2989, v2990, v2994, v3294, 1, v2991, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) -> f_1224(v2986, v2987, v2988, v2989, v2990, v2994, v3294, 1, v2991, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) :|: TRUE
f_1224(v2986, v2987, v2988, v2989, v2990, v2994, v3294, 1, v2991, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) -> f_1232(v2986, v2987, v2988, v2989, v2990, v2994, v3294, 1, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) :|: 0 = 0
f_1232(v2986, v2987, v2988, v2989, v2990, v2994, v3294, 1, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) -> f_1240(v2986, v2987, v2988, v2989, v2990, v2994, v3294, 1, v4020, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) :|: v4020 = 1 + v2994 && 2 <= v4020
f_1240(v2986, v2987, v2988, v2989, v2990, v2994, v3294, 1, v4020, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) -> f_1249(v2986, v2987, v2988, v2989, v2990, v2994, v3294, 1, v4020, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) :|: TRUE
f_1249(v2986, v2987, v2988, v2989, v2990, v2994, v3294, 1, v4020, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) -> f_1257(v2986, v2987, v2988, v2989, v2990, v2994, v3294, 1, v4020, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) :|: TRUE
f_1257(v2986, v2987, v2988, v2989, v2990, v2994, v3294, 1, v4020, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) -> f_1167(v2986, v2987, v2988, v2989, v2990, v2994, v3294, 1, v4020, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) :|: v2986 <= v2994 && v3007 + v3002 <= 1 + v3016 && 0 <= v2986 && 0 <= v2987 && 1 <= v2988 && 1 <= v2989 && 1 <= v2990 && 0 <= v2994 && 1 <= v4020 && 1 <= v2995 && 1 <= v2996 && 1 <= v2997 && 1 <= v2998 && 1 <= v2999 && 1 <= v3000 && v3001 <= 0 && 2 <= v3002 && 1 <= v3003 && 1 <= v3005 && 1 <= v3006 && 1 <= v3007 && 0 <= v3008 && 1 <= v3009 && 4 <= v3010 && 4 <= v3011 && 4 <= v3012 && 4 <= v3013 && 8 <= v3014 && 8 <= v3015 && 2 <= v3016 && 8 <= v3017 && 8 <= v3018 && 8 <= v3019 && v2995 <= v3010 && v2996 <= v3011 && v2997 <= v3012 && v2998 <= v3013 && v2999 <= v3014 && v3000 <= v3015 && 0 <= 0 && v3007 <= v3016 && v2988 <= v3017 && v2989 <= v3018 && v2990 <= v3019
f_1167(v2986, v2987, v2988, v2989, v2990, v2991, v2992, 1, v2994, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) -> f_1177(v2986, v2987, v2988, v2989, v2990, v2994, v2992, 1, v2991, v2995, v3010, v2996, v3011, v2997, v3012, v2998, v3013, v2999, v3014, v3000, v3015, v3006, v3007, v3016, v3017, v3018, v3019, v3001, v3002, v3003, 0, v3005, v3008, v3009, 3, 7, 2, 4, 8) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_1177(v2986:0, v2987:0, v2988:0, v2989:0, v2990:0, v2994:0, v2992:0, 1, v2991:0, v2995:0, v3010:0, v2996:0, v3011:0, v2997:0, v3012:0, v2998:0, v3013:0, v2999:0, v3014:0, v3000:0, v3015:0, v3006:0, v3007:0, v3016:0, v3017:0, v3018:0, v3019:0, v3001:0, v3002:0, v3003:0, 0, v3005:0, v3008:0, v3009:0, 3, 7, 2, 4, 8) -> f_1177(v2986:0, v2987:0, v2988:0, v2989:0, v2990:0, 1 + v2994:0, v3294:0, 1, v2994:0, v2995:0, v3010:0, v2996:0, v3011:0, v2997:0, v3012:0, v2998:0, v3013:0, v2999:0, v3014:0, v3000:0, v3015:0, v3006:0, v3007:0, v3016:0, v3017:0, v3018:0, v3019:0, v3001:0, v3002:0, v3003:0, 0, v3005:0, v3008:0, v3009:0, 3, 7, 2, 4, 8) :|: v2994:0 > 0 && v3007:0 + v3002:0 <= 1 + v3016:0 && v2994:0 >= v2986:0 && v2986:0 > -1 && v2987:0 > -1 && v2988:0 > 0 && v2989:0 > 0 && v2990:0 > 0 && v2995:0 > 0 && v2996:0 > 0 && v2997:0 > 0 && v2998:0 > 0 && v2999:0 > 0 && v3000:0 > 0 && v3001:0 < 1 && v3002:0 > 1 && v3003:0 > 0 && v3005:0 > 0 && v3006:0 > 0 && v3007:0 > 0 && v3008:0 > -1 && v3009:0 > 0 && v3010:0 > 3 && v3011:0 > 3 && v3012:0 > 3 && v3013:0 > 3 && v3014:0 > 7 && v3015:0 > 7 && v3016:0 > 1 && v3017:0 > 7 && v3018:0 > 7 && v3019:0 > 7 && v3010:0 >= v2995:0 && v3011:0 >= v2996:0 && v3012:0 >= v2997:0 && v3013:0 >= v2998:0 && v3014:0 >= v2999:0 && v3294:0 < 0 && v3015:0 >= v3000:0 && v3016:0 >= v3007:0 && v3017:0 >= v2988:0 && v3019:0 >= v2990:0 && v3018:0 >= v2989:0
f_1177(v2986:0, v2987:0, v2988:0, v2989:0, v2990:0, v2994:0, v2992:0, 1, v2991:0, v2995:0, v3010:0, v2996:0, v3011:0, v2997:0, v3012:0, v2998:0, v3013:0, v2999:0, v3014:0, v3000:0, v3015:0, v3006:0, v3007:0, v3016:0, v3017:0, v3018:0, v3019:0, v3001:0, v3002:0, v3003:0, 0, v3005:0, v3008:0, v3009:0, 3, 7, 2, 4, 8) -> f_1177(v2986:0, v2987:0, v2988:0, v2989:0, v2990:0, 1 + v2994:0, v3294:0, 1, v2994:0, v2995:0, v3010:0, v2996:0, v3011:0, v2997:0, v3012:0, v2998:0, v3013:0, v2999:0, v3014:0, v3000:0, v3015:0, v3006:0, v3007:0, v3016:0, v3017:0, v3018:0, v3019:0, v3001:0, v3002:0, v3003:0, 0, v3005:0, v3008:0, v3009:0, 3, 7, 2, 4, 8) :|: v2994:0 > 0 && v3007:0 + v3002:0 <= 1 + v3016:0 && v2994:0 >= v2986:0 && v2986:0 > -1 && v2987:0 > -1 && v2988:0 > 0 && v2989:0 > 0 && v2990:0 > 0 && v2995:0 > 0 && v2996:0 > 0 && v2997:0 > 0 && v2998:0 > 0 && v2999:0 > 0 && v3000:0 > 0 && v3001:0 < 1 && v3002:0 > 1 && v3003:0 > 0 && v3005:0 > 0 && v3006:0 > 0 && v3007:0 > 0 && v3008:0 > -1 && v3009:0 > 0 && v3010:0 > 3 && v3011:0 > 3 && v3012:0 > 3 && v3013:0 > 3 && v3014:0 > 7 && v3015:0 > 7 && v3016:0 > 1 && v3017:0 > 7 && v3018:0 > 7 && v3019:0 > 7 && v3010:0 >= v2995:0 && v3011:0 >= v2996:0 && v3012:0 >= v2997:0 && v3013:0 >= v2998:0 && v3014:0 >= v2999:0 && v3294:0 > 0 && v3015:0 >= v3000:0 && v3016:0 >= v3007:0 && v3017:0 >= v2988:0 && v3019:0 >= v2990:0 && v3018:0 >= v2989:0
Filtered unneeded arguments:
   f_1177(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39) -> f_1177(x1, x2, x3, x4, x5, x6, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x32, x33, x34)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1177(v2986:0, v2987:0, v2988:0, v2989:0, v2990:0, v2994:0, v2995:0, v3010:0, v2996:0, v3011:0, v2997:0, v3012:0, v2998:0, v3013:0, v2999:0, v3014:0, v3000:0, v3015:0, v3006:0, v3007:0, v3016:0, v3017:0, v3018:0, v3019:0, v3001:0, v3002:0, v3003:0, v3005:0, v3008:0, v3009:0) -> f_1177(v2986:0, v2987:0, v2988:0, v2989:0, v2990:0, 1 + v2994:0, v2995:0, v3010:0, v2996:0, v3011:0, v2997:0, v3012:0, v2998:0, v3013:0, v2999:0, v3014:0, v3000:0, v3015:0, v3006:0, v3007:0, v3016:0, v3017:0, v3018:0, v3019:0, v3001:0, v3002:0, v3003:0, v3005:0, v3008:0, v3009:0) :|: v3007:0 + v3002:0 <= 1 + v3016:0 && v2994:0 > 0 && v2994:0 >= v2986:0 && v2986:0 > -1 && v2987:0 > -1 && v2988:0 > 0 && v2989:0 > 0 && v2990:0 > 0 && v2995:0 > 0 && v2996:0 > 0 && v2997:0 > 0 && v2998:0 > 0 && v2999:0 > 0 && v3000:0 > 0 && v3001:0 < 1 && v3002:0 > 1 && v3003:0 > 0 && v3005:0 > 0 && v3006:0 > 0 && v3007:0 > 0 && v3008:0 > -1 && v3009:0 > 0 && v3010:0 > 3 && v3011:0 > 3 && v3012:0 > 3 && v3013:0 > 3 && v3014:0 > 7 && v3015:0 > 7 && v3016:0 > 1 && v3017:0 > 7 && v3018:0 > 7 && v3019:0 > 7 && v3010:0 >= v2995:0 && v3011:0 >= v2996:0 && v3012:0 >= v2997:0 && v3013:0 >= v2998:0 && v3014:0 >= v2999:0 && v3015:0 >= v3000:0 && v3016:0 >= v3007:0 && v3017:0 >= v2988:0 && v3018:0 >= v2989:0 && v3019:0 >= v2990:0

----------------------------------------

(51)
Obligation:
Rules:
f_1177(v2986:0, v2987:0, v2988:0, v2989:0, v2990:0, v2994:0, v2995:0, v3010:0, v2996:0, v3011:0, v2997:0, v3012:0, v2998:0, v3013:0, v2999:0, v3014:0, v3000:0, v3015:0, v3006:0, v3007:0, v3016:0, v3017:0, v3018:0, v3019:0, v3001:0, v3002:0, v3003:0, v3005:0, v3008:0, v3009:0) -> f_1177(v2986:0, v2987:0, v2988:0, v2989:0, v2990:0, 1 + v2994:0, v2995:0, v3010:0, v2996:0, v3011:0, v2997:0, v3012:0, v2998:0, v3013:0, v2999:0, v3014:0, v3000:0, v3015:0, v3006:0, v3007:0, v3016:0, v3017:0, v3018:0, v3019:0, v3001:0, v3002:0, v3003:0, v3005:0, v3008:0, v3009:0) :|: v3007:0 + v3002:0 <= 1 + v3016:0 && v2994:0 > 0 && v2994:0 >= v2986:0 && v2986:0 > -1 && v2987:0 > -1 && v2988:0 > 0 && v2989:0 > 0 && v2990:0 > 0 && v2995:0 > 0 && v2996:0 > 0 && v2997:0 > 0 && v2998:0 > 0 && v2999:0 > 0 && v3000:0 > 0 && v3001:0 < 1 && v3002:0 > 1 && v3003:0 > 0 && v3005:0 > 0 && v3006:0 > 0 && v3007:0 > 0 && v3008:0 > -1 && v3009:0 > 0 && v3010:0 > 3 && v3011:0 > 3 && v3012:0 > 3 && v3013:0 > 3 && v3014:0 > 7 && v3015:0 > 7 && v3016:0 > 1 && v3017:0 > 7 && v3018:0 > 7 && v3019:0 > 7 && v3010:0 >= v2995:0 && v3011:0 >= v2996:0 && v3012:0 >= v2997:0 && v3013:0 >= v2998:0 && v3014:0 >= v2999:0 && v3015:0 >= v3000:0 && v3016:0 >= v3007:0 && v3017:0 >= v2988:0 && v3018:0 >= v2989:0 && v3019:0 >= v2990:0
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.002s
Aborted 1756892169Exec. 6, LLVMSEGraphToIntTRS with some error. Reason: java.lang.NullPointerException: Cannot read field "x" because "allocationIndex.x" is null.
Aborted 1756892169Exec. 5, LLVMSEGraphToIntTRS with some error. Reason: java.lang.NullPointerException: Cannot read field "x" because "allocationIndex.x" is null.
            aprove.InputModules.Programs.llvm.internalStructures.instructions.LLVMStoreInstruction.isOverapproximation(LLVMStoreInstruction.java:407)
            aprove.InputModules.Programs.llvm.states.LLVMAbstractState.isOverapproximation(LLVMAbstractState.java:1401)
            aprove.InputModules.Programs.llvm.processors.LLVMSEGraphToIntTRSProcessor.containsOverapproximation(LLVMSEGraphToIntTRSProcessor.java:48)
            aprove.InputModules.Programs.llvm.processors.LLVMSEGraphToIntTRSProcessor.process(LLVMSEGraphToIntTRSProcessor.java:39)
            aprove.Strategies.ExecutableStrategies.Executor.execute(Executor.java:326)
            aprove.Strategies.ExecutableStrategies.Executor$Runner.wrappedRun(Executor.java:377)
