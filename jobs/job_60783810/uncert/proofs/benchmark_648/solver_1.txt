YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/Doau1.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could be proven:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 19 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 3559 ms]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) LLVM Symbolic Execution SCC
        (8) SCC2IRS [SOUND, 33 ms]
        (9) IntTRS
        (10) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (11) IntTRS
        (12) RankingReductionPairProof [EQUIVALENT, 10 ms]
        (13) YES
    (14) LLVM Symbolic Execution SCC
        (15) SCC2IRS [SOUND, 21 ms]
        (16) IntTRS
        (17) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (18) IntTRS
        (19) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (20) IntTRS
        (21) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (22) IntTRS
        (23) PolynomialOrderProcessor [EQUIVALENT, 3 ms]
        (24) IntTRS
        (25) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (26) IntTRS
        (27) RankingReductionPairProof [EQUIVALENT, 2 ms]
        (28) YES


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/Doau1.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/Doau1.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "llvm.dbg.label" returnParam: BasicVoidType parameters: (BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_error" returnParam: BasicVoidType parameters: () variableLength: true visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_assert" linkageType: EXTERNALLY_VISIBLE returnParam: BasicVoidType parameters: (0 i32) variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 7
	0:
		%2 = alloca i32, align 4
		store %0, %2
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		%3 = load %2
		%4 = icmp ne %3 0
		br %4, %7, %5
	5:
		br %6
	6:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.label()
		Unnamed Call-Instruction = call BasicVoidType (...)* @__VERIFIER_error()
		unreachable
	7:
		ret void

*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 24
	0:
		%1 = alloca i32, align 4
		%2 = alloca [100000 x i32], align 16
		%3 = alloca [100000 x i32], align 16
		%4 = alloca i32, align 4
		%5 = alloca i32, align 4
		%6 = alloca i32, align 4
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*[100000 x i32] %2)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*[100000 x i32] %3)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %4)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %5)
		store 1, %5
		store 0, %4
		br %7
	7:
		%8 = load %4
		%9 = icmp slt %8 100000
		br %9, %10, %25
	10:
		%11 = load %4
		%12 = sext i32 %11 to i64
		%13 = getelementptr %2, 0, %12
		%14 = load %13
		%15 = load %4
		%16 = sext i32 %15 to i64
		%17 = getelementptr %3, 0, %16
		%18 = load %17
		%19 = icmp ne %14 %18
		br %19, %20, %21
	20:
		store 0, %5
		br %21
	21:
		br %22
	22:
		%23 = load %4
		%24 = add i32 %23, 1
		store %24, %4
		br %7
	25:
		%26 = load %5
		%27 = icmp ne %26 0
		br %27, %28, %47
	28:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %6)
		store 0, %6
		br %29
	29:
		%30 = load %6
		%31 = icmp slt %30 100000
		br %31, %32, %46
	32:
		%33 = load %6
		%34 = sext i32 %33 to i64
		%35 = getelementptr %2, 0, %34
		%36 = load %35
		%37 = load %6
		%38 = sext i32 %37 to i64
		%39 = getelementptr %3, 0, %38
		%40 = load %39
		%41 = icmp eq %36 %40
		%42 = zext i1 %41 to i32
		Unnamed Call-Instruction = call BasicVoidType @__VERIFIER_assert(i32 %42)
		br %43
	43:
		%44 = load %6
		%45 = add i32 %44, 1
		store %45, %6
		br %29
	46:
		br %47
	47:
		ret 0


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 2 SCCs.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC
----------------------------------------

(8) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 29 rulesP rules:
f_945(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2357, v2358, v2359, v2360, v2362, v2363, v2364, v2365, v2366, v2367, v2368, 3, 399999, 4, 400000) -> f_946(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2357, v2358, v2359, v2360, v2362, v2363, v2364, v2365, v2366, v2367, v2368, 3, 399999, 99998, 4, 400000) :|: v2361 < 100000 && v2357 <= 99998
f_946(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2357, v2358, v2359, v2360, v2362, v2363, v2364, v2365, v2366, v2367, v2368, 3, 399999, 99998, 4, 400000) -> f_948(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2357, v2358, v2359, v2360, v2362, v2363, v2364, v2365, v2366, v2367, v2368, 3, 399999, 99998, 4, 400000) :|: 0 = 0
f_948(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2357, v2358, v2359, v2360, v2362, v2363, v2364, v2365, v2366, v2367, v2368, 3, 399999, 99998, 4, 400000) -> f_950(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2357, v2358, v2359, v2360, v2362, v2363, v2364, v2365, v2366, v2367, v2368, 3, 399999, 99998, 4, 400000) :|: TRUE
f_950(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2357, v2358, v2359, v2360, v2362, v2363, v2364, v2365, v2366, v2367, v2368, 3, 399999, 99998, 4, 400000) -> f_952(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2357, v2358, v2359, v2360, v2362, v2363, v2364, v2365, v2366, v2367, v2368, 3, 399999, 99998, 4, 400000) :|: 0 = 0
f_952(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2357, v2358, v2359, v2360, v2362, v2363, v2364, v2365, v2366, v2367, v2368, 3, 399999, 99998, 4, 400000) -> f_954(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2358, v2359, v2357, v2360, v2362, v2363, v2364, v2365, v2366, v2367, v2368, 3, 399999, 99998, 4, 400000) :|: 0 = 0
f_954(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2358, v2359, v2357, v2360, v2362, v2363, v2364, v2365, v2366, v2367, v2368, 3, 399999, 99998, 4, 400000) -> f_955(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2407, v2359, v2357, v2360, v2362, v2363, v2364, v2365, v2366, v2367, v2368, v2358, 3, 399999, 4, 99998, 400000, 5) :|: v2407 = v2345 + 4 * v2361 && 5 <= v2407
f_955(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2407, v2359, v2357, v2360, v2362, v2363, v2364, v2365, v2366, v2367, v2368, v2358, 3, 399999, 4, 99998, 400000, 5) -> f_956(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2407, v2408, v2357, v2360, v2359, v2362, v2363, v2364, v2365, v2366, v2367, v2368, v2358, 3, 399999, 4, 99998, 400000, 5) :|: TRUE
f_956(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2407, v2408, v2357, v2360, v2359, v2362, v2363, v2364, v2365, v2366, v2367, v2368, v2358, 3, 399999, 4, 99998, 400000, 5) -> f_957(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2407, v2408, v2357, v2360, v2359, v2362, v2363, v2364, v2365, v2366, v2367, v2368, v2358, 3, 399999, 4, 99998, 400000, 5) :|: 0 = 0
f_957(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2407, v2408, v2357, v2360, v2359, v2362, v2363, v2364, v2365, v2366, v2367, v2368, v2358, 3, 399999, 4, 99998, 400000, 5) -> f_958(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2407, v2408, v2360, v2359, v2357, v2362, v2363, v2364, v2365, v2366, v2367, v2368, v2358, 3, 399999, 4, 99998, 400000, 5) :|: 0 = 0
f_958(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2407, v2408, v2360, v2359, v2357, v2362, v2363, v2364, v2365, v2366, v2367, v2368, v2358, 3, 399999, 4, 99998, 400000, 5) -> f_959(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2407, v2408, v2410, v2359, v2357, v2362, v2363, v2364, v2365, v2366, v2367, v2368, v2358, v2360, 3, 399999, 4, 99998, 400000, 5) :|: v2410 = v2346 + 4 * v2361 && 5 <= v2410
f_959(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2407, v2408, v2410, v2359, v2357, v2362, v2363, v2364, v2365, v2366, v2367, v2368, v2358, v2360, 3, 399999, 4, 99998, 400000, 5) -> f_960(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2407, v2408, v2410, v2411, v2357, v2362, v2363, v2364, v2365, v2366, v2367, v2368, v2358, v2359, v2360, 3, 399999, 4, 99998, 400000, 5) :|: TRUE
f_960(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2407, v2408, v2410, v2411, v2357, v2362, v2363, v2364, v2365, v2366, v2367, v2368, v2358, v2359, v2360, 3, 399999, 4, 99998, 400000, 5) -> f_961(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2407, v2411, v2410, v2357, v2362, v2363, v2364, v2365, v2366, v2367, v2368, v2358, v2359, v2360, 3, 399999, 4, 99998, 400000, 5) :|: v2408 = v2411
f_961(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2407, v2411, v2410, v2357, v2362, v2363, v2364, v2365, v2366, v2367, v2368, v2358, v2359, v2360, 3, 399999, 4, 99998, 400000, 5) -> f_963(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2407, v2411, v2410, v2357, v2362, v2363, v2364, v2365, v2366, v2367, v2368, v2358, v2359, v2360, 3, 399999, 4, 99998, 400000, 5) :|: 0 = 0
f_963(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2407, v2411, v2410, v2357, v2362, v2363, v2364, v2365, v2366, v2367, v2368, v2358, v2359, v2360, 3, 399999, 4, 99998, 400000, 5) -> f_965(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2407, v2411, v2410, v2357, v2362, v2363, v2364, v2365, v2366, v2367, v2368, v2358, v2359, v2360, 3, 399999, 4, 99998, 400000, 5) :|: 0 = 0
f_965(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2407, v2411, v2410, v2357, v2362, v2363, v2364, v2365, v2366, v2367, v2368, v2358, v2359, v2360, 3, 399999, 4, 99998, 400000, 5) -> f_967(1, v2344, v2362, v2345, v2363, v2346, v2364, v2347, v2365, v2348, v2366, v2349, v2367, 0, v2368, 100000, v2361, v2353, v2354, v2355, v2358, v2359, v2360, v2407, v2411, v2410, 99999, v2357, 3, 399999, 4, 99998, 400000, 5) :|: 0 = 0
f_967(1, v2344, v2362, v2345, v2363, v2346, v2364, v2347, v2365, v2348, v2366, v2349, v2367, 0, v2368, 100000, v2361, v2353, v2354, v2355, v2358, v2359, v2360, v2407, v2411, v2410, 99999, v2357, 3, 399999, 4, 99998, 400000, 5) -> f_969(1, v2426, v2344, v2362, v2345, v2363, v2346, v2364, v2347, v2365, v2348, v2366, v2349, v2367, v2427, 0, v2368, 100000, v2361, v2353, v2354, v2355, v2358, v2359, v2360, v2407, v2411, v2410, 99999, v2357, 3, 399999, 4, 99998, 400000, 5) :|: 1 <= v2426 && v2427 = 3 + v2426 && 4 <= v2427
f_969(1, v2426, v2344, v2362, v2345, v2363, v2346, v2364, v2347, v2365, v2348, v2366, v2349, v2367, v2427, 0, v2368, 100000, v2361, v2353, v2354, v2355, v2358, v2359, v2360, v2407, v2411, v2410, 99999, v2357, 3, 399999, 4, 99998, 400000, 5) -> f_971(1, v2426, v2344, v2362, v2345, v2363, v2346, v2364, v2347, v2365, v2348, v2366, v2349, v2367, v2427, 0, v2368, 100000, v2361, v2353, v2354, v2355, v2358, v2359, v2360, v2407, v2411, v2410, 99999, v2357, 3, 399999, 4, 99998, 400000, 5) :|: TRUE
f_971(1, v2426, v2344, v2362, v2345, v2363, v2346, v2364, v2347, v2365, v2348, v2366, v2349, v2367, v2427, 0, v2368, 100000, v2361, v2353, v2354, v2355, v2358, v2359, v2360, v2407, v2411, v2410, 99999, v2357, 3, 399999, 4, 99998, 400000, 5) -> f_973(1, v2426, v2344, v2362, v2345, v2363, v2346, v2364, v2347, v2365, v2348, v2366, v2349, v2367, v2427, 0, v2368, 100000, v2361, v2353, v2354, v2355, v2358, v2359, v2360, v2407, v2411, v2410, 99999, v2357, 3, 399999, 4, 99998, 400000, 5) :|: TRUE
f_973(1, v2426, v2344, v2362, v2345, v2363, v2346, v2364, v2347, v2365, v2348, v2366, v2349, v2367, v2427, 0, v2368, 100000, v2361, v2353, v2354, v2355, v2358, v2359, v2360, v2407, v2411, v2410, 99999, v2357, 3, 399999, 4, 99998, 400000, 5) -> f_975(1, v2426, v2344, v2362, v2345, v2363, v2346, v2364, v2347, v2365, v2348, v2366, v2349, v2367, v2427, 0, v2368, 100000, v2361, v2353, v2354, v2355, v2358, v2359, v2360, v2407, v2411, v2410, 99999, v2357, 3, 399999, 4, 99998, 400000, 5) :|: 0 = 0
f_975(1, v2426, v2344, v2362, v2345, v2363, v2346, v2364, v2347, v2365, v2348, v2366, v2349, v2367, v2427, 0, v2368, 100000, v2361, v2353, v2354, v2355, v2358, v2359, v2360, v2407, v2411, v2410, 99999, v2357, 3, 399999, 4, 99998, 400000, 5) -> f_977(1, v2426, v2344, v2362, v2345, v2363, v2346, v2364, v2347, v2365, v2348, v2366, v2349, v2367, v2427, 0, v2368, 100000, v2361, v2353, v2354, v2355, v2358, v2359, v2360, v2407, v2411, v2410, 99999, v2357, 3, 399999, 4, 99998, 400000, 5) :|: 0 = 0
f_977(1, v2426, v2344, v2362, v2345, v2363, v2346, v2364, v2347, v2365, v2348, v2366, v2349, v2367, v2427, 0, v2368, 100000, v2361, v2353, v2354, v2355, v2358, v2359, v2360, v2407, v2411, v2410, 99999, v2357, 3, 399999, 4, 99998, 400000, 5) -> f_979(1, v2426, v2344, v2362, v2345, v2363, v2346, v2364, v2347, v2365, v2348, v2366, v2349, v2367, v2427, 0, v2368, 100000, v2361, v2353, v2354, v2355, v2358, v2359, v2360, v2407, v2411, v2410, 99999, v2357, 3, 399999, 4, 99998, 400000, 5) :|: TRUE
f_979(1, v2426, v2344, v2362, v2345, v2363, v2346, v2364, v2347, v2365, v2348, v2366, v2349, v2367, v2427, 0, v2368, 100000, v2361, v2353, v2354, v2355, v2358, v2359, v2360, v2407, v2411, v2410, 99999, v2357, 3, 399999, 4, 99998, 400000, 5) -> f_981(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2407, v2411, v2410, v2357, v2362, v2363, v2364, v2365, v2366, v2367, v2368, v2358, v2359, v2360, 3, 399999, 4, 99998, 400000, 5) :|: TRUE
f_981(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2407, v2411, v2410, v2357, v2362, v2363, v2364, v2365, v2366, v2367, v2368, v2358, v2359, v2360, 3, 399999, 4, 99998, 400000, 5) -> f_983(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2407, v2411, v2410, v2357, v2362, v2363, v2364, v2365, v2366, v2367, v2368, v2358, v2359, v2360, 3, 399999, 4, 99998, 400000, 5) :|: TRUE
f_983(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2407, v2411, v2410, v2357, v2362, v2363, v2364, v2365, v2366, v2367, v2368, v2358, v2359, v2360, 3, 399999, 4, 99998, 400000, 5) -> f_985(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2407, v2411, v2410, v2362, v2363, v2364, v2365, v2366, v2367, v2368, v2358, v2359, v2360, 3, 399999, 4, 400000, 5) :|: 0 = 0
f_985(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2407, v2411, v2410, v2362, v2363, v2364, v2365, v2366, v2367, v2368, v2358, v2359, v2360, 3, 399999, 4, 400000, 5) -> f_987(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2407, v2411, v2410, v2430, v2362, v2363, v2364, v2365, v2366, v2367, v2368, v2358, v2359, v2360, 3, 399999, 4, 400000, 5, 2) :|: v2430 = 1 + v2361 && 2 <= v2430 && v2430 <= 100000
f_987(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2407, v2411, v2410, v2430, v2362, v2363, v2364, v2365, v2366, v2367, v2368, v2358, v2359, v2360, 3, 399999, 4, 400000, 5, 2) -> f_988(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2407, v2411, v2410, v2430, v2362, v2363, v2364, v2365, v2366, v2367, v2368, v2358, v2359, v2360, 3, 399999, 4, 400000, 5, 2) :|: TRUE
f_988(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2407, v2411, v2410, v2430, v2362, v2363, v2364, v2365, v2366, v2367, v2368, v2358, v2359, v2360, 3, 399999, 4, 400000, 5, 2) -> f_989(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2407, v2411, v2410, v2430, v2362, v2363, v2364, v2365, v2366, v2367, v2368, v2358, v2359, v2360, 3, 399999, 4, 400000, 5, 2) :|: TRUE
f_989(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2407, v2411, v2410, v2430, v2362, v2363, v2364, v2365, v2366, v2367, v2368, v2358, v2359, v2360, 3, 399999, 4, 400000, 5, 2) -> f_944(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2407, v2411, v2410, v2430, v2362, v2363, v2364, v2365, v2366, v2367, v2368, 3, 399999, 4, 400000) :|: TRUE
f_944(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2357, v2358, v2359, v2360, v2361, v2362, v2363, v2364, v2365, v2366, v2367, v2368, 3, 399999, 4, 400000) -> f_945(v2344, v2345, v2346, v2347, v2348, v2349, 100000, 0, 99999, v2353, v2354, v2355, 1, v2361, v2357, v2358, v2359, v2360, v2362, v2363, v2364, v2365, v2366, v2367, v2368, 3, 399999, 4, 400000) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_945(v2344:0, v2345:0, v2346:0, v2347:0, v2348:0, v2349:0, 100000, 0, 99999, v2353:0, v2354:0, v2355:0, 1, v2361:0, v2357:0, v2358:0, v2359:0, v2360:0, v2362:0, v2363:0, v2364:0, v2365:0, v2366:0, v2367:0, v2368:0, 3, 399999, 4, 400000) -> f_945(v2344:0, v2345:0, v2346:0, v2347:0, v2348:0, v2349:0, 100000, 0, 99999, v2353:0, v2354:0, v2355:0, 1, 1 + v2361:0, v2361:0, v2345:0 + 4 * v2361:0, v2408:0, v2346:0 + 4 * v2361:0, v2362:0, v2363:0, v2364:0, v2365:0, v2366:0, v2367:0, v2368:0, 3, 399999, 4, 400000) :|: v2357:0 < 99999 && v2361:0 < 100000 && v2345:0 + 4 * v2361:0 > 4 && v2346:0 + 4 * v2361:0 > 4 && v2426:0 > 0 && v2361:0 > 0
Filtered unneeded arguments:
   f_945(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29) -> f_945(x2, x3, x14, x15)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_945(v2345:0, v2346:0, v2361:0, v2357:0) -> f_945(v2345:0, v2346:0, 1 + v2361:0, v2361:0) :|: v2361:0 < 100000 && v2357:0 < 99999 && v2345:0 + 4 * v2361:0 > 4 && v2361:0 > 0 && v2346:0 + 4 * v2361:0 > 4

----------------------------------------

(9)
Obligation:
Rules:
f_945(v2345:0, v2346:0, v2361:0, v2357:0) -> f_945(v2345:0, v2346:0, 1 + v2361:0, v2361:0) :|: v2361:0 < 100000 && v2357:0 < 99999 && v2345:0 + 4 * v2361:0 > 4 && v2361:0 > 0 && v2346:0 + 4 * v2361:0 > 4

----------------------------------------

(10) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(11)
Obligation:
Rules:
f_945(v2345:0:0, v2346:0:0, v2361:0:0, v2357:0:0) -> f_945(v2345:0:0, v2346:0:0, 1 + v2361:0:0, v2361:0:0) :|: v2361:0:0 > 0 && v2346:0:0 + 4 * v2361:0:0 > 4 && v2345:0:0 + 4 * v2361:0:0 > 4 && v2357:0:0 < 99999 && v2361:0:0 < 100000

----------------------------------------

(12) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_945 ] = -1*f_945_3

The following rules are decreasing:
f_945(v2345:0:0, v2346:0:0, v2361:0:0, v2357:0:0) -> f_945(v2345:0:0, v2346:0:0, 1 + v2361:0:0, v2361:0:0) :|: v2361:0:0 > 0 && v2346:0:0 + 4 * v2361:0:0 > 4 && v2345:0:0 + 4 * v2361:0:0 > 4 && v2357:0:0 < 99999 && v2361:0:0 < 100000

The following rules are bounded:
f_945(v2345:0:0, v2346:0:0, v2361:0:0, v2357:0:0) -> f_945(v2345:0:0, v2346:0:0, 1 + v2361:0:0, v2361:0:0) :|: v2361:0:0 > 0 && v2346:0:0 + 4 * v2361:0:0 > 4 && v2345:0:0 + 4 * v2361:0:0 > 4 && v2357:0:0 < 99999 && v2361:0:0 < 100000


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
SCC
----------------------------------------

(15) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 58 rulesP rules:
f_593(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1380, v1382, v1383, v1384, 0, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, 3, 399999, 99999, 100000, 4, 400000) -> f_596(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1380, v1382, v1383, v1384, 0, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, 3, 399999, 99998, 99999, 4, 400000) :|: v1386 < 100000 && v1380 <= 99998
f_596(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1380, v1382, v1383, v1384, 0, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, 3, 399999, 99998, 99999, 4, 400000) -> f_600(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1380, v1382, v1383, v1384, 0, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, 3, 399999, 99998, 99999, 4, 400000) :|: 0 = 0
f_600(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1380, v1382, v1383, v1384, 0, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, 3, 399999, 99998, 99999, 4, 400000) -> f_604(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1380, v1382, v1383, v1384, 0, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, 3, 399999, 99998, 99999, 4, 400000) :|: TRUE
f_604(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1380, v1382, v1383, v1384, 0, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, 3, 399999, 99998, 99999, 4, 400000) -> f_608(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1380, v1382, v1383, v1384, 0, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, 3, 399999, 99998, 99999, 4, 400000) :|: 0 = 0
f_608(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1380, v1382, v1383, v1384, 0, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, 3, 399999, 99998, 99999, 4, 400000) -> f_612(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1382, v1383, v1380, v1384, 0, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, 3, 399999, 99998, 99999, 4, 400000) :|: 0 = 0
f_612(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1382, v1383, v1380, v1384, 0, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, 3, 399999, 99998, 99999, 4, 400000) -> f_617(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1471, v1383, v1380, v1384, 0, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, v1382, 3, 399999, 4, 99998, 99999, 400000, 5) :|: v1471 = v1375 + 4 * v1386 && 5 <= v1471
f_617(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1471, v1383, v1380, v1384, 0, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, v1382, 3, 399999, 4, 99998, 99999, 400000, 5) -> f_622(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1471, v1507, v1380, v1384, v1383, 0, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, v1382, 3, 399999, 4, 99998, 99999, 400000, 5) :|: TRUE
f_622(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1471, v1507, v1380, v1384, v1383, 0, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, v1382, 3, 399999, 4, 99998, 99999, 400000, 5) -> f_626(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1471, v1507, v1380, v1384, v1383, 0, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, v1382, 3, 399999, 4, 99998, 99999, 400000, 5) :|: 0 = 0
f_626(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1471, v1507, v1380, v1384, v1383, 0, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, v1382, 3, 399999, 4, 99998, 99999, 400000, 5) -> f_630(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1471, v1507, v1384, v1383, 0, v1380, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, v1382, 3, 399999, 4, 99998, 99999, 400000, 5) :|: 0 = 0
f_630(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1471, v1507, v1384, v1383, 0, v1380, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, v1382, 3, 399999, 4, 99998, 99999, 400000, 5) -> f_633(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1471, v1507, v1544, v1383, 0, v1380, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, v1382, v1384, 3, 399999, 4, 99998, 99999, 400000, 5) :|: v1544 = v1376 + 4 * v1386 && 5 <= v1544
f_633(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1471, v1507, v1544, v1383, 0, v1380, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, v1382, v1384, 3, 399999, 4, 99998, 99999, 400000, 5) -> f_637(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1471, v1507, v1544, v1545, 0, v1380, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, v1382, v1383, v1384, 3, 399999, 4, 99998, 99999, 400000, 5) :|: TRUE
f_637(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1471, v1507, v1544, v1545, 0, v1380, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, v1382, v1383, v1384, 3, 399999, 4, 99998, 99999, 400000, 5) -> f_641(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1471, v1507, v1544, v1545, 0, v1380, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, v1382, v1383, v1384, 3, 399999, 4, 99998, 99999, 400000, 5) :|: v1507 != v1545
f_637(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1471, v1507, v1544, v1545, 0, v1380, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, v1382, v1383, v1384, 3, 399999, 4, 99998, 99999, 400000, 5) -> f_642(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1471, v1545, v1544, 0, v1380, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, v1382, v1383, v1384, 3, 399999, 4, 99998, 99999, 400000, 5) :|: v1507 = v1545
f_641(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1471, v1507, v1544, v1545, 0, v1380, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, v1382, v1383, v1384, 3, 399999, 4, 99998, 99999, 400000, 5) -> f_646(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1471, v1507, v1544, v1545, v1380, v1387, v1388, v1389, v1390, v1391, v1392, 0, v1393, v1394, v1395, v1382, v1383, v1384, 3, 399999, 4, 99998, 99999, 400000, 5) :|: 0 = 0
f_646(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1471, v1507, v1544, v1545, v1380, v1387, v1388, v1389, v1390, v1391, v1392, 0, v1393, v1394, v1395, v1382, v1383, v1384, 3, 399999, 4, 99998, 99999, 400000, 5) -> f_651(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1471, v1507, v1544, v1545, v1380, v1387, v1388, v1389, v1390, v1391, v1392, 0, v1393, v1394, v1395, v1382, v1383, v1384, 3, 399999, 4, 99998, 99999, 400000, 5) :|: TRUE
f_651(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1471, v1507, v1544, v1545, v1380, v1387, v1388, v1389, v1390, v1391, v1392, 0, v1393, v1394, v1395, v1382, v1383, v1384, 3, 399999, 4, 99998, 99999, 400000, 5) -> f_691(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1471, v1507, v1544, v1545, v1380, v1387, v1388, v1389, v1390, v1391, v1392, 0, v1393, v1394, v1395, 3, 399999, 4, 99999, 5, 99998, 400000) :|: TRUE
f_691(v1712, v1713, v1714, v1715, v1716, v1717, v1718, 1, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1727, v1728, v1729, v1730, 0, v1732, v1733, v1734, 3, 399999, 4, 99999, 5, 99998, 400000) -> f_695(v1712, v1713, v1714, v1715, v1716, v1717, v1718, 1, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1727, v1728, v1729, v1730, 0, v1732, v1733, 3, 399999, 4, 99999, 5, 99998, 400000) :|: TRUE
f_695(v1712, v1713, v1714, v1715, v1716, v1717, v1718, 1, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1727, v1728, v1729, v1730, 0, v1732, v1733, 3, 399999, 4, 99999, 5, 99998, 400000) -> f_699(v1712, v1713, v1714, v1715, v1716, v1717, v1718, 1, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1727, v1728, v1729, v1730, 0, v1732, v1733, 3, 399999, 4, 99999, 5, 99998, 400000) :|: TRUE
f_699(v1712, v1713, v1714, v1715, v1716, v1717, v1718, 1, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1727, v1728, v1729, v1730, 0, v1732, v1733, 3, 399999, 4, 99999, 5, 99998, 400000) -> f_703(v1712, v1713, v1714, v1715, v1716, v1717, v1718, 1, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1727, v1728, v1729, v1730, 0, v1732, v1733, 3, 399999, 4, 99999, 5, 99998, 400000) :|: TRUE
f_703(v1712, v1713, v1714, v1715, v1716, v1717, v1718, 1, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1727, v1728, v1729, v1730, 0, v1732, v1733, 3, 399999, 4, 99999, 5, 99998, 400000) -> f_707(v1712, v1713, v1714, v1715, v1716, v1717, v1718, 1, v1720, v1721, v1722, v1723, v1725, v1726, v1727, v1728, v1729, v1730, 0, v1732, v1733, 3, 399999, 4, 99999, 5, 400000) :|: 0 = 0
f_707(v1712, v1713, v1714, v1715, v1716, v1717, v1718, 1, v1720, v1721, v1722, v1723, v1725, v1726, v1727, v1728, v1729, v1730, 0, v1732, v1733, 3, 399999, 4, 99999, 5, 400000) -> f_711(v1712, v1713, v1714, v1715, v1716, v1717, v1718, 1, v1720, v1721, v1722, v1723, v1857, v1725, v1726, v1727, v1728, v1729, v1730, 0, v1732, v1733, 3, 399999, 4, 99999, 5, 400000, 2, 100000) :|: v1857 = 1 + v1718 && 2 <= v1857 && v1857 <= 100000
f_711(v1712, v1713, v1714, v1715, v1716, v1717, v1718, 1, v1720, v1721, v1722, v1723, v1857, v1725, v1726, v1727, v1728, v1729, v1730, 0, v1732, v1733, 3, 399999, 4, 99999, 5, 400000, 2, 100000) -> f_715(v1712, v1713, v1714, v1715, v1716, v1717, v1718, 1, v1720, v1721, v1722, v1723, v1857, v1725, v1726, v1727, v1728, v1729, v1730, 0, v1732, v1733, 3, 399999, 4, 99999, 5, 400000, 2, 100000) :|: TRUE
f_715(v1712, v1713, v1714, v1715, v1716, v1717, v1718, 1, v1720, v1721, v1722, v1723, v1857, v1725, v1726, v1727, v1728, v1729, v1730, 0, v1732, v1733, 3, 399999, 4, 99999, 5, 400000, 2, 100000) -> f_718(v1712, v1713, v1714, v1715, v1716, v1717, v1718, 1, v1720, v1721, v1722, v1723, v1857, v1725, v1726, v1727, v1728, v1729, v1730, 0, v1732, v1733, 3, 399999, 4, 99999, 5, 400000, 2, 100000) :|: TRUE
f_718(v1712, v1713, v1714, v1715, v1716, v1717, v1718, 1, v1720, v1721, v1722, v1723, v1857, v1725, v1726, v1727, v1728, v1729, v1730, 0, v1732, v1733, 3, 399999, 4, 99999, 5, 400000, 2, 100000) -> f_629(v1712, v1713, v1714, v1715, v1716, v1717, v1718, 1, v1720, v1721, v1722, v1723, v1857, v1725, v1726, v1727, v1728, v1729, v1730, 0, v1732, v1733, 3, 399999, 99999, 100000, 4, 400000) :|: TRUE
f_629(v1510, v1511, v1512, v1513, v1514, v1515, v1516, 1, v1518, v1519, v1520, v1521, v1522, v1523, v1524, v1525, v1526, v1527, v1528, 0, v1530, v1531, 3, 399999, 99999, 100000, 4, 400000) -> f_632(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1516, v1518, v1519, v1520, v1521, v1523, v1524, v1525, v1526, v1527, v1528, 0, v1530, v1531, 3, 399999, 99999, 100000, 4, 400000) :|: 0 = 0
f_632(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1516, v1518, v1519, v1520, v1521, v1523, v1524, v1525, v1526, v1527, v1528, 0, v1530, v1531, 3, 399999, 99999, 100000, 4, 400000) -> f_635(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1516, v1518, v1519, v1520, v1521, v1523, v1524, v1525, v1526, v1527, v1528, 0, v1530, v1531, 3, 399999, 99998, 99999, 4, 400000) :|: v1522 < 100000 && v1516 <= 99998
f_635(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1516, v1518, v1519, v1520, v1521, v1523, v1524, v1525, v1526, v1527, v1528, 0, v1530, v1531, 3, 399999, 99998, 99999, 4, 400000) -> f_639(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1516, v1518, v1519, v1520, v1521, v1523, v1524, v1525, v1526, v1527, v1528, 0, v1530, v1531, 3, 399999, 99998, 99999, 4, 400000) :|: 0 = 0
f_639(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1516, v1518, v1519, v1520, v1521, v1523, v1524, v1525, v1526, v1527, v1528, 0, v1530, v1531, 3, 399999, 99998, 99999, 4, 400000) -> f_644(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1516, v1518, v1519, v1520, v1521, v1523, v1524, v1525, v1526, v1527, v1528, 0, v1530, v1531, 3, 399999, 99998, 99999, 4, 400000) :|: TRUE
f_644(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1516, v1518, v1519, v1520, v1521, v1523, v1524, v1525, v1526, v1527, v1528, 0, v1530, v1531, 3, 399999, 99998, 99999, 4, 400000) -> f_649(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1516, v1518, v1519, v1520, v1521, v1523, v1524, v1525, v1526, v1527, v1528, 0, v1530, v1531, 3, 399999, 99998, 99999, 4, 400000) :|: 0 = 0
f_649(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1516, v1518, v1519, v1520, v1521, v1523, v1524, v1525, v1526, v1527, v1528, 0, v1530, v1531, 3, 399999, 99998, 99999, 4, 400000) -> f_654(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1518, v1519, v1516, v1520, v1521, v1523, v1524, v1525, v1526, v1527, v1528, 0, v1530, v1531, 3, 399999, 99998, 99999, 4, 400000) :|: 0 = 0
f_654(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1518, v1519, v1516, v1520, v1521, v1523, v1524, v1525, v1526, v1527, v1528, 0, v1530, v1531, 3, 399999, 99998, 99999, 4, 400000) -> f_659(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1585, v1519, v1516, v1520, v1521, v1523, v1524, v1525, v1526, v1527, v1528, 0, v1530, v1531, v1518, 3, 399999, 4, 99998, 99999, 400000, 5) :|: v1585 = v1511 + 4 * v1522 && 5 <= v1585
f_659(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1585, v1519, v1516, v1520, v1521, v1523, v1524, v1525, v1526, v1527, v1528, 0, v1530, v1531, v1518, 3, 399999, 4, 99998, 99999, 400000, 5) -> f_664(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1585, v1617, v1516, v1520, v1521, v1523, v1524, v1525, v1526, v1527, v1528, 0, v1530, v1531, v1518, v1519, 3, 399999, 4, 99998, 99999, 400000, 5) :|: TRUE
f_664(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1585, v1617, v1516, v1520, v1521, v1523, v1524, v1525, v1526, v1527, v1528, 0, v1530, v1531, v1518, v1519, 3, 399999, 4, 99998, 99999, 400000, 5) -> f_668(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1585, v1617, v1516, v1520, v1521, v1523, v1524, v1525, v1526, v1527, v1528, 0, v1530, v1531, v1518, v1519, 3, 399999, 4, 99998, 99999, 400000, 5) :|: 0 = 0
f_668(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1585, v1617, v1516, v1520, v1521, v1523, v1524, v1525, v1526, v1527, v1528, 0, v1530, v1531, v1518, v1519, 3, 399999, 4, 99998, 99999, 400000, 5) -> f_672(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1585, v1617, v1520, v1521, v1516, v1523, v1524, v1525, v1526, v1527, v1528, 0, v1530, v1531, v1518, v1519, 3, 399999, 4, 99998, 99999, 400000, 5) :|: 0 = 0
f_672(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1585, v1617, v1520, v1521, v1516, v1523, v1524, v1525, v1526, v1527, v1528, 0, v1530, v1531, v1518, v1519, 3, 399999, 4, 99998, 99999, 400000, 5) -> f_676(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1585, v1617, v1674, v1521, v1516, v1523, v1524, v1525, v1526, v1527, v1528, 0, v1530, v1531, v1518, v1519, v1520, 3, 399999, 4, 99998, 99999, 400000, 5) :|: v1674 = v1512 + 4 * v1522 && 5 <= v1674
f_676(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1585, v1617, v1674, v1521, v1516, v1523, v1524, v1525, v1526, v1527, v1528, 0, v1530, v1531, v1518, v1519, v1520, 3, 399999, 4, 99998, 99999, 400000, 5) -> f_679(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1585, v1617, v1674, v1676, v1516, v1523, v1524, v1525, v1526, v1527, v1528, 0, v1530, v1531, v1518, v1519, v1520, v1521, 3, 399999, 4, 99998, 99999, 400000, 5) :|: TRUE
f_679(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1585, v1617, v1674, v1676, v1516, v1523, v1524, v1525, v1526, v1527, v1528, 0, v1530, v1531, v1518, v1519, v1520, v1521, 3, 399999, 4, 99998, 99999, 400000, 5) -> f_682(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1585, v1617, v1674, v1676, v1516, v1523, v1524, v1525, v1526, v1527, v1528, 0, v1530, v1531, v1518, v1519, v1520, v1521, 3, 399999, 4, 99998, 99999, 400000, 5) :|: v1617 != v1676
f_679(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1585, v1617, v1674, v1676, v1516, v1523, v1524, v1525, v1526, v1527, v1528, 0, v1530, v1531, v1518, v1519, v1520, v1521, 3, 399999, 4, 99998, 99999, 400000, 5) -> f_683(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1585, v1676, v1674, v1516, v1523, v1524, v1525, v1526, v1527, v1528, 0, v1530, v1531, v1518, v1519, v1520, v1521, 3, 399999, 4, 99998, 99999, 400000, 5) :|: v1617 = v1676
f_682(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1585, v1617, v1674, v1676, v1516, v1523, v1524, v1525, v1526, v1527, v1528, 0, v1530, v1531, v1518, v1519, v1520, v1521, 3, 399999, 4, 99998, 99999, 400000, 5) -> f_686(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1585, v1617, v1674, v1676, v1516, v1523, v1524, v1525, v1526, v1527, v1528, 0, v1530, v1531, v1518, v1519, v1520, v1521, 3, 399999, 4, 99998, 99999, 400000, 5) :|: 0 = 0
f_686(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1585, v1617, v1674, v1676, v1516, v1523, v1524, v1525, v1526, v1527, v1528, 0, v1530, v1531, v1518, v1519, v1520, v1521, 3, 399999, 4, 99998, 99999, 400000, 5) -> f_690(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1585, v1617, v1674, v1676, v1516, v1523, v1524, v1525, v1526, v1527, v1528, 0, v1530, v1531, v1518, v1519, v1520, v1521, 3, 399999, 4, 99998, 99999, 400000, 5) :|: TRUE
f_690(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1585, v1617, v1674, v1676, v1516, v1523, v1524, v1525, v1526, v1527, v1528, 0, v1530, v1531, v1518, v1519, v1520, v1521, 3, 399999, 4, 99998, 99999, 400000, 5) -> f_691(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1585, v1617, v1674, v1676, v1516, v1523, v1524, v1525, v1526, v1527, v1528, 0, v1530, v1531, 0, 3, 399999, 4, 99999, 5, 99998, 400000) :|: TRUE
f_683(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1585, v1676, v1674, v1516, v1523, v1524, v1525, v1526, v1527, v1528, 0, v1530, v1531, v1518, v1519, v1520, v1521, 3, 399999, 4, 99998, 99999, 400000, 5) -> f_687(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1585, v1676, v1674, 0, v1516, v1523, v1524, v1525, v1526, v1527, v1528, v1530, v1531, v1518, v1519, v1520, v1521, 3, 399999, 4, 99998, 99999, 400000, 5) :|: 0 = 0
f_687(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1585, v1676, v1674, 0, v1516, v1523, v1524, v1525, v1526, v1527, v1528, v1530, v1531, v1518, v1519, v1520, v1521, 3, 399999, 4, 99998, 99999, 400000, 5) -> f_692(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1585, v1676, v1674, 0, v1516, v1523, v1524, v1525, v1526, v1527, v1528, v1530, v1531, v1518, v1519, v1520, v1521, 3, 399999, 4, 99998, 99999, 400000, 5) :|: TRUE
f_692(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1585, v1676, v1674, 0, v1516, v1523, v1524, v1525, v1526, v1527, v1528, v1530, v1531, v1518, v1519, v1520, v1521, 3, 399999, 4, 99998, 99999, 400000, 5) -> f_696(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1585, v1676, v1674, 0, v1516, v1523, v1524, v1525, v1526, v1527, v1528, v1530, v1531, v1518, v1519, v1520, v1521, 3, 399999, 4, 99998, 99999, 400000, 5) :|: TRUE
f_696(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1585, v1676, v1674, 0, v1516, v1523, v1524, v1525, v1526, v1527, v1528, v1530, v1531, v1518, v1519, v1520, v1521, 3, 399999, 4, 99998, 99999, 400000, 5) -> f_700(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1585, v1676, v1674, 0, v1523, v1524, v1525, v1526, v1527, v1528, v1530, v1531, v1518, v1519, v1520, v1521, 3, 399999, 4, 99999, 400000, 5) :|: 0 = 0
f_700(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1585, v1676, v1674, 0, v1523, v1524, v1525, v1526, v1527, v1528, v1530, v1531, v1518, v1519, v1520, v1521, 3, 399999, 4, 99999, 400000, 5) -> f_704(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1585, v1676, v1674, 0, v1855, v1523, v1524, v1525, v1526, v1527, v1528, v1530, v1531, v1518, v1519, v1520, v1521, 3, 399999, 4, 99999, 400000, 5, 2, 100000) :|: v1855 = 1 + v1522 && 2 <= v1855 && v1855 <= 100000
f_704(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1585, v1676, v1674, 0, v1855, v1523, v1524, v1525, v1526, v1527, v1528, v1530, v1531, v1518, v1519, v1520, v1521, 3, 399999, 4, 99999, 400000, 5, 2, 100000) -> f_708(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1585, v1676, v1674, 0, v1855, v1523, v1524, v1525, v1526, v1527, v1528, v1530, v1531, v1518, v1519, v1520, v1521, 3, 399999, 4, 99999, 400000, 5, 2, 100000) :|: TRUE
f_708(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1585, v1676, v1674, 0, v1855, v1523, v1524, v1525, v1526, v1527, v1528, v1530, v1531, v1518, v1519, v1520, v1521, 3, 399999, 4, 99999, 400000, 5, 2, 100000) -> f_712(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1585, v1676, v1674, 0, v1855, v1523, v1524, v1525, v1526, v1527, v1528, v1530, v1531, v1518, v1519, v1520, v1521, 3, 399999, 4, 99999, 400000, 5, 2, 100000) :|: TRUE
f_712(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1585, v1676, v1674, 0, v1855, v1523, v1524, v1525, v1526, v1527, v1528, v1530, v1531, v1518, v1519, v1520, v1521, 3, 399999, 4, 99999, 400000, 5, 2, 100000) -> f_590(v1510, v1511, v1512, v1513, v1514, v1515, v1522, 1, v1585, v1676, v1674, 0, v1855, v1523, v1524, v1525, v1526, v1527, v1528, v1530, v1531, 0, 3, 399999, 99999, 100000, 4, 400000) :|: TRUE
f_590(v1374, v1375, v1376, v1377, v1378, v1379, v1380, 1, v1382, v1383, v1384, 0, v1386, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, 3, 399999, 99999, 100000, 4, 400000) -> f_593(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1380, v1382, v1383, v1384, 0, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, 3, 399999, 99999, 100000, 4, 400000) :|: 0 = 0
f_642(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1471, v1545, v1544, 0, v1380, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, v1382, v1383, v1384, 3, 399999, 4, 99998, 99999, 400000, 5) -> f_647(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1471, v1545, v1544, 0, v1380, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, v1382, v1383, v1384, 3, 399999, 4, 99998, 99999, 400000, 5) :|: 0 = 0
f_647(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1471, v1545, v1544, 0, v1380, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, v1382, v1383, v1384, 3, 399999, 4, 99998, 99999, 400000, 5) -> f_652(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1471, v1545, v1544, 0, v1380, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, v1382, v1383, v1384, 3, 399999, 4, 99998, 99999, 400000, 5) :|: TRUE
f_652(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1471, v1545, v1544, 0, v1380, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, v1382, v1383, v1384, 3, 399999, 4, 99998, 99999, 400000, 5) -> f_657(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1471, v1545, v1544, 0, v1380, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, v1382, v1383, v1384, 3, 399999, 4, 99998, 99999, 400000, 5) :|: TRUE
f_657(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1471, v1545, v1544, 0, v1380, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, v1382, v1383, v1384, 3, 399999, 4, 99998, 99999, 400000, 5) -> f_662(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1471, v1545, v1544, 0, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, v1382, v1383, v1384, 3, 399999, 4, 99999, 400000, 5) :|: 0 = 0
f_662(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1471, v1545, v1544, 0, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, v1382, v1383, v1384, 3, 399999, 4, 99999, 400000, 5) -> f_666(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1471, v1545, v1544, 0, v1637, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, v1382, v1383, v1384, 3, 399999, 4, 99999, 400000, 5, 2, 100000) :|: v1637 = 1 + v1386 && 2 <= v1637 && v1637 <= 100000
f_666(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1471, v1545, v1544, 0, v1637, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, v1382, v1383, v1384, 3, 399999, 4, 99999, 400000, 5, 2, 100000) -> f_670(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1471, v1545, v1544, 0, v1637, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, v1382, v1383, v1384, 3, 399999, 4, 99999, 400000, 5, 2, 100000) :|: TRUE
f_670(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1471, v1545, v1544, 0, v1637, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, v1382, v1383, v1384, 3, 399999, 4, 99999, 400000, 5, 2, 100000) -> f_674(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1471, v1545, v1544, 0, v1637, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, v1382, v1383, v1384, 3, 399999, 4, 99999, 400000, 5, 2, 100000) :|: TRUE
f_674(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1471, v1545, v1544, 0, v1637, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, v1382, v1383, v1384, 3, 399999, 4, 99999, 400000, 5, 2, 100000) -> f_590(v1374, v1375, v1376, v1377, v1378, v1379, v1386, 1, v1471, v1545, v1544, 0, v1637, v1387, v1388, v1389, v1390, v1391, v1392, v1393, v1394, v1395, 3, 399999, 99999, 100000, 4, 400000) :|: TRUE
Combined rules. Obtained 6 rulesP rules:
f_679(v1510:0, v1511:0, v1512:0, v1513:0, v1514:0, v1515:0, v1522:0, 1, v1585:0, v1617:0, v1674:0, v1617:0, v1516:0, v1523:0, v1524:0, v1525:0, v1526:0, v1527:0, v1528:0, 0, v1530:0, v1531:0, v1518:0, v1519:0, v1520:0, v1521:0, 3, 399999, 4, 99998, 99999, 400000, 5) -> f_593(v1510:0, v1511:0, v1512:0, v1513:0, v1514:0, v1515:0, 1 + v1522:0, 1, v1522:0, v1585:0, v1617:0, v1674:0, 0, v1523:0, v1524:0, v1525:0, v1526:0, v1527:0, v1528:0, v1530:0, v1531:0, 0, 3, 399999, 99999, 100000, 4, 400000) :|: v1522:0 < 100000 && v1522:0 > 0
f_593(v1374:0, v1375:0, v1376:0, v1377:0, v1378:0, v1379:0, v1386:0, 1, v1380:0, v1382:0, v1383:0, v1384:0, 0, v1387:0, v1388:0, v1389:0, v1390:0, v1391:0, v1392:0, v1393:0, v1394:0, v1395:0, 3, 399999, 99999, 100000, 4, 400000) -> f_679(v1374:0, v1375:0, v1376:0, v1377:0, v1378:0, v1379:0, 1 + v1386:0, 1, v1375:0 + 4 * (1 + v1386:0), v1617:0, v1376:0 + 4 * (1 + v1386:0), v1676:0, v1386:0, v1387:0, v1388:0, v1389:0, v1390:0, v1391:0, v1392:0, 0, v1393:0, v1394:0, v1375:0 + 4 * v1386:0, v1507:0, v1376:0 + 4 * v1386:0, v1545:0, 3, 399999, 4, 99998, 99999, 400000, 5) :|: v1380:0 < 99999 && v1386:0 < 100000 && v1375:0 + 4 * v1386:0 > 4 && v1376:0 + 4 * v1386:0 > 4 && v1545:0 > v1507:0 && v1386:0 > 0 && v1386:0 < 99999 && v1376:0 + 4 * (1 + v1386:0) > 4 && v1375:0 + 4 * (1 + v1386:0) > 4
f_593(v1374:0, v1375:0, v1376:0, v1377:0, v1378:0, v1379:0, v1386:0, 1, v1380:0, v1382:0, v1383:0, v1384:0, 0, v1387:0, v1388:0, v1389:0, v1390:0, v1391:0, v1392:0, v1393:0, v1394:0, v1395:0, 3, 399999, 99999, 100000, 4, 400000) -> f_679(v1374:0, v1375:0, v1376:0, v1377:0, v1378:0, v1379:0, 1 + v1386:0, 1, v1375:0 + 4 * (1 + v1386:0), v1617:0, v1376:0 + 4 * (1 + v1386:0), v1676:0, v1386:0, v1387:0, v1388:0, v1389:0, v1390:0, v1391:0, v1392:0, 0, v1393:0, v1394:0, v1375:0 + 4 * v1386:0, v1507:0, v1376:0 + 4 * v1386:0, v1545:0, 3, 399999, 4, 99998, 99999, 400000, 5) :|: v1380:0 < 99999 && v1386:0 < 100000 && v1375:0 + 4 * v1386:0 > 4 && v1376:0 + 4 * v1386:0 > 4 && v1545:0 < v1507:0 && v1386:0 > 0 && v1386:0 < 99999 && v1376:0 + 4 * (1 + v1386:0) > 4 && v1375:0 + 4 * (1 + v1386:0) > 4
f_679(v1510:0, v1511:0, v1512:0, v1513:0, v1514:0, v1515:0, v1522:0, 1, v1585:0, v1617:0, v1674:0, v1676:0, v1516:0, v1523:0, v1524:0, v1525:0, v1526:0, v1527:0, v1528:0, 0, v1530:0, v1531:0, v1518:0, v1519:0, v1520:0, v1521:0, 3, 399999, 4, 99998, 99999, 400000, 5) -> f_679(v1510:0, v1511:0, v1512:0, v1513:0, v1514:0, v1515:0, 1 + v1522:0, 1, v1511:0 + 4 * (1 + v1522:0), v1617:1, v1512:0 + 4 * (1 + v1522:0), v1676:1, v1522:0, v1523:0, v1524:0, v1525:0, v1526:0, v1527:0, v1528:0, 0, v1530:0, v1531:0, v1585:0, v1617:0, v1674:0, v1676:0, 3, 399999, 4, 99998, 99999, 400000, 5) :|: v1522:0 > 0 && v1522:0 < 100000 && v1522:0 < 99999 && v1511:0 + 4 * (1 + v1522:0) > 4 && v1676:0 > v1617:0 && v1512:0 + 4 * (1 + v1522:0) > 4
f_679(v1510:0, v1511:0, v1512:0, v1513:0, v1514:0, v1515:0, v1522:0, 1, v1585:0, v1617:0, v1674:0, v1676:0, v1516:0, v1523:0, v1524:0, v1525:0, v1526:0, v1527:0, v1528:0, 0, v1530:0, v1531:0, v1518:0, v1519:0, v1520:0, v1521:0, 3, 399999, 4, 99998, 99999, 400000, 5) -> f_679(v1510:0, v1511:0, v1512:0, v1513:0, v1514:0, v1515:0, 1 + v1522:0, 1, v1511:0 + 4 * (1 + v1522:0), v1617:1, v1512:0 + 4 * (1 + v1522:0), v1676:1, v1522:0, v1523:0, v1524:0, v1525:0, v1526:0, v1527:0, v1528:0, 0, v1530:0, v1531:0, v1585:0, v1617:0, v1674:0, v1676:0, 3, 399999, 4, 99998, 99999, 400000, 5) :|: v1522:0 > 0 && v1522:0 < 100000 && v1522:0 < 99999 && v1511:0 + 4 * (1 + v1522:0) > 4 && v1676:0 < v1617:0 && v1512:0 + 4 * (1 + v1522:0) > 4
f_593(v1374:0, v1375:0, v1376:0, v1377:0, v1378:0, v1379:0, v1386:0, 1, v1380:0, v1382:0, v1383:0, v1384:0, 0, v1387:0, v1388:0, v1389:0, v1390:0, v1391:0, v1392:0, v1393:0, v1394:0, v1395:0, 3, 399999, 99999, 100000, 4, 400000) -> f_593(v1374:0, v1375:0, v1376:0, v1377:0, v1378:0, v1379:0, 1 + v1386:0, 1, v1386:0, v1375:0 + 4 * v1386:0, v1507:0, v1376:0 + 4 * v1386:0, 0, v1387:0, v1388:0, v1389:0, v1390:0, v1391:0, v1392:0, v1393:0, v1394:0, v1395:0, 3, 399999, 99999, 100000, 4, 400000) :|: v1380:0 < 99999 && v1386:0 < 100000 && v1375:0 + 4 * v1386:0 > 4 && v1376:0 + 4 * v1386:0 > 4 && v1386:0 > 0
Filtered unneeded arguments:
   f_679(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33) -> f_679(x2, x3, x7, x10, x12)
   f_593(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28) -> f_593(x2, x3, x7, x9)
Removed division, modulo operations, cleaned up constraints. Obtained 5 rules.P rules:
f_679(v1511:0, v1512:0, v1522:0, v1617:0, v1617:01) -> f_593(v1511:0, v1512:0, 1 + v1522:0, v1522:0) :|: v1522:0 < 100000 && v1522:0 > 0 && v1617:0 = v1617:01
f_593(v1375:0, v1376:0, v1386:0, v1380:0) -> f_679(v1375:0, v1376:0, 1 + v1386:0, v1617:0, v1676:0) :|: v1386:0 < 100000 && v1380:0 < 99999 && v1375:0 + 4 * v1386:0 > 4 && v1376:0 + 4 * v1386:0 > 4 && v1386:0 > 0 && v1386:0 < 99999 && v1375:0 + (4 + 4 * v1386:0) > 4 && v1376:0 + (4 + 4 * v1386:0) > 4
f_679(v1511:0, v1512:0, v1522:0, v1617:0, v1676:0) -> f_679(v1511:0, v1512:0, 1 + v1522:0, v1617:1, v1676:1) :|: v1522:0 < 100000 && v1522:0 > 0 && v1522:0 < 99999 && v1511:0 + (4 + 4 * v1522:0) > 4 && v1512:0 + (4 + 4 * v1522:0) > 4 && v1676:0 > v1617:0
f_679(v1511:0, v1512:0, v1522:0, v1617:0, v1676:0) -> f_679(v1511:0, v1512:0, 1 + v1522:0, v1617:1, v1676:1) :|: v1522:0 < 100000 && v1522:0 > 0 && v1522:0 < 99999 && v1511:0 + (4 + 4 * v1522:0) > 4 && v1512:0 + (4 + 4 * v1522:0) > 4 && v1676:0 < v1617:0
f_593(v1375:0, v1376:0, v1386:0, v1380:0) -> f_593(v1375:0, v1376:0, 1 + v1386:0, v1386:0) :|: v1386:0 < 100000 && v1380:0 < 99999 && v1375:0 + 4 * v1386:0 > 4 && v1386:0 > 0 && v1376:0 + 4 * v1386:0 > 4

----------------------------------------

(16)
Obligation:
Rules:
f_679(v1511:0, v1512:0, v1522:0, v1617:0, v1617:01) -> f_593(v1511:0, v1512:0, 1 + v1522:0, v1522:0) :|: v1522:0 < 100000 && v1522:0 > 0 && v1617:0 = v1617:01
f_593(x, x1, x2, x3) -> f_679(x, x1, 1 + x2, x4, x5) :|: x2 < 100000 && x3 < 99999 && x + 4 * x2 > 4 && x1 + 4 * x2 > 4 && x2 > 0 && x2 < 99999 && x + (4 + 4 * x2) > 4 && x1 + (4 + 4 * x2) > 4
f_679(x6, x7, x8, x9, x10) -> f_679(x6, x7, 1 + x8, x11, x12) :|: x8 < 100000 && x8 > 0 && x8 < 99999 && x6 + (4 + 4 * x8) > 4 && x7 + (4 + 4 * x8) > 4 && x10 > x9
f_679(x13, x14, x15, x16, x17) -> f_679(x13, x14, 1 + x15, x18, x19) :|: x15 < 100000 && x15 > 0 && x15 < 99999 && x13 + (4 + 4 * x15) > 4 && x14 + (4 + 4 * x15) > 4 && x17 < x16
f_593(v1375:0, v1376:0, v1386:0, v1380:0) -> f_593(v1375:0, v1376:0, 1 + v1386:0, v1386:0) :|: v1386:0 < 100000 && v1380:0 < 99999 && v1375:0 + 4 * v1386:0 > 4 && v1386:0 > 0 && v1376:0 + 4 * v1386:0 > 4

----------------------------------------

(17) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(18)
Obligation:
Rules:
f_679(x6:0, x7:0, x8:0, x9:0, x10:0) -> f_679(x6:0, x7:0, 1 + x8:0, x11:0, x12:0) :|: x7:0 + (4 + 4 * x8:0) > 4 && x9:0 < x10:0 && x6:0 + (4 + 4 * x8:0) > 4 && x8:0 < 99999 && x8:0 > 0 && x8:0 < 100000
f_593(x:0, x1:0, x2:0, x3:0) -> f_679(x:0, x1:0, 1 + x2:0, x4:0, x5:0) :|: x:0 + (4 + 4 * x2:0) > 4 && x1:0 + (4 + 4 * x2:0) > 4 && x2:0 < 99999 && x2:0 > 0 && x1:0 + 4 * x2:0 > 4 && x:0 + 4 * x2:0 > 4 && x3:0 < 99999 && x2:0 < 100000
f_593(v1375:0:0, v1376:0:0, v1386:0:0, v1380:0:0) -> f_593(v1375:0:0, v1376:0:0, 1 + v1386:0:0, v1386:0:0) :|: v1386:0:0 > 0 && v1376:0:0 + 4 * v1386:0:0 > 4 && v1375:0:0 + 4 * v1386:0:0 > 4 && v1380:0:0 < 99999 && v1386:0:0 < 100000
f_679(v1511:0:0, v1512:0:0, v1522:0:0, v1617:01:0, v1617:01:01) -> f_593(v1511:0:0, v1512:0:0, 1 + v1522:0:0, v1522:0:0) :|: v1522:0:0 < 100000 && v1522:0:0 > 0 && v1617:01:0 = v1617:01:01
f_679(x13:0, x14:0, x15:0, x16:0, x17:0) -> f_679(x13:0, x14:0, 1 + x15:0, x18:0, x19:0) :|: x14:0 + (4 + 4 * x15:0) > 4 && x17:0 < x16:0 && x13:0 + (4 + 4 * x15:0) > 4 && x15:0 < 99999 && x15:0 > 0 && x15:0 < 100000

----------------------------------------

(19) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_679(x, x1, x2, x3, x4)] = 999930002299965 + x + x1 - 9999400009*x2
[f_593(x5, x6, x7, x8)] = 999940001999966 + x5 + x6 - 9999500006*x7 - 99998*x8

The following rules are decreasing:
f_679(x6:0, x7:0, x8:0, x9:0, x10:0) -> f_679(x6:0, x7:0, 1 + x8:0, x11:0, x12:0) :|: x7:0 + (4 + 4 * x8:0) > 4 && x9:0 < x10:0 && x6:0 + (4 + 4 * x8:0) > 4 && x8:0 < 99999 && x8:0 > 0 && x8:0 < 100000
f_679(x13:0, x14:0, x15:0, x16:0, x17:0) -> f_679(x13:0, x14:0, 1 + x15:0, x18:0, x19:0) :|: x14:0 + (4 + 4 * x15:0) > 4 && x17:0 < x16:0 && x13:0 + (4 + 4 * x15:0) > 4 && x15:0 < 99999 && x15:0 > 0 && x15:0 < 100000
The following rules are bounded:
f_679(x6:0, x7:0, x8:0, x9:0, x10:0) -> f_679(x6:0, x7:0, 1 + x8:0, x11:0, x12:0) :|: x7:0 + (4 + 4 * x8:0) > 4 && x9:0 < x10:0 && x6:0 + (4 + 4 * x8:0) > 4 && x8:0 < 99999 && x8:0 > 0 && x8:0 < 100000
f_593(x:0, x1:0, x2:0, x3:0) -> f_679(x:0, x1:0, 1 + x2:0, x4:0, x5:0) :|: x:0 + (4 + 4 * x2:0) > 4 && x1:0 + (4 + 4 * x2:0) > 4 && x2:0 < 99999 && x2:0 > 0 && x1:0 + 4 * x2:0 > 4 && x:0 + 4 * x2:0 > 4 && x3:0 < 99999 && x2:0 < 100000
f_679(x13:0, x14:0, x15:0, x16:0, x17:0) -> f_679(x13:0, x14:0, 1 + x15:0, x18:0, x19:0) :|: x14:0 + (4 + 4 * x15:0) > 4 && x17:0 < x16:0 && x13:0 + (4 + 4 * x15:0) > 4 && x15:0 < 99999 && x15:0 > 0 && x15:0 < 100000

----------------------------------------

(20)
Obligation:
Rules:
f_593(x:0, x1:0, x2:0, x3:0) -> f_679(x:0, x1:0, 1 + x2:0, x4:0, x5:0) :|: x:0 + (4 + 4 * x2:0) > 4 && x1:0 + (4 + 4 * x2:0) > 4 && x2:0 < 99999 && x2:0 > 0 && x1:0 + 4 * x2:0 > 4 && x:0 + 4 * x2:0 > 4 && x3:0 < 99999 && x2:0 < 100000
f_593(v1375:0:0, v1376:0:0, v1386:0:0, v1380:0:0) -> f_593(v1375:0:0, v1376:0:0, 1 + v1386:0:0, v1386:0:0) :|: v1386:0:0 > 0 && v1376:0:0 + 4 * v1386:0:0 > 4 && v1375:0:0 + 4 * v1386:0:0 > 4 && v1380:0:0 < 99999 && v1386:0:0 < 100000
f_679(v1511:0:0, v1512:0:0, v1522:0:0, v1617:01:0, v1617:01:01) -> f_593(v1511:0:0, v1512:0:0, 1 + v1522:0:0, v1522:0:0) :|: v1522:0:0 < 100000 && v1522:0:0 > 0 && v1617:01:0 = v1617:01:01

----------------------------------------

(21) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(22)
Obligation:
Rules:
f_593(v1375:0:0:0, v1376:0:0:0, v1386:0:0:0, v1380:0:0:0) -> f_593(v1375:0:0:0, v1376:0:0:0, 1 + v1386:0:0:0, v1386:0:0:0) :|: v1380:0:0:0 < 99999 && v1386:0:0:0 < 100000 && v1375:0:0:0 + 4 * v1386:0:0:0 > 4 && v1376:0:0:0 + 4 * v1386:0:0:0 > 4 && v1386:0:0:0 > 0
f_593(x:0:0, x1:0:0, x2:0:0, x3:0:0) -> f_593(x:0:0, x1:0:0, 1 + (1 + x2:0:0), 1 + x2:0:0) :|: x3:0:0 < 99999 && x2:0:0 < 100000 && x:0:0 + 4 * x2:0:0 > 4 && x1:0:0 + 4 * x2:0:0 > 4 && x2:0:0 < 99999 && x:0:0 + (4 + 4 * x2:0:0) > 4 && x2:0:0 > 0 && x1:0:0 + (4 + 4 * x2:0:0) > 4

----------------------------------------

(23) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_593(x, x1, x2, x3)] = 99998 - x2

The following rules are decreasing:
f_593(v1375:0:0:0, v1376:0:0:0, v1386:0:0:0, v1380:0:0:0) -> f_593(v1375:0:0:0, v1376:0:0:0, 1 + v1386:0:0:0, v1386:0:0:0) :|: v1380:0:0:0 < 99999 && v1386:0:0:0 < 100000 && v1375:0:0:0 + 4 * v1386:0:0:0 > 4 && v1376:0:0:0 + 4 * v1386:0:0:0 > 4 && v1386:0:0:0 > 0
f_593(x:0:0, x1:0:0, x2:0:0, x3:0:0) -> f_593(x:0:0, x1:0:0, 1 + (1 + x2:0:0), 1 + x2:0:0) :|: x3:0:0 < 99999 && x2:0:0 < 100000 && x:0:0 + 4 * x2:0:0 > 4 && x1:0:0 + 4 * x2:0:0 > 4 && x2:0:0 < 99999 && x:0:0 + (4 + 4 * x2:0:0) > 4 && x2:0:0 > 0 && x1:0:0 + (4 + 4 * x2:0:0) > 4
The following rules are bounded:
f_593(x:0:0, x1:0:0, x2:0:0, x3:0:0) -> f_593(x:0:0, x1:0:0, 1 + (1 + x2:0:0), 1 + x2:0:0) :|: x3:0:0 < 99999 && x2:0:0 < 100000 && x:0:0 + 4 * x2:0:0 > 4 && x1:0:0 + 4 * x2:0:0 > 4 && x2:0:0 < 99999 && x:0:0 + (4 + 4 * x2:0:0) > 4 && x2:0:0 > 0 && x1:0:0 + (4 + 4 * x2:0:0) > 4

----------------------------------------

(24)
Obligation:
Rules:
f_593(v1375:0:0:0, v1376:0:0:0, v1386:0:0:0, v1380:0:0:0) -> f_593(v1375:0:0:0, v1376:0:0:0, 1 + v1386:0:0:0, v1386:0:0:0) :|: v1380:0:0:0 < 99999 && v1386:0:0:0 < 100000 && v1375:0:0:0 + 4 * v1386:0:0:0 > 4 && v1376:0:0:0 + 4 * v1386:0:0:0 > 4 && v1386:0:0:0 > 0

----------------------------------------

(25) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(26)
Obligation:
Rules:
f_593(v1375:0:0:0:0, v1376:0:0:0:0, v1386:0:0:0:0, v1380:0:0:0:0) -> f_593(v1375:0:0:0:0, v1376:0:0:0:0, 1 + v1386:0:0:0:0, v1386:0:0:0:0) :|: v1376:0:0:0:0 + 4 * v1386:0:0:0:0 > 4 && v1386:0:0:0:0 > 0 && v1375:0:0:0:0 + 4 * v1386:0:0:0:0 > 4 && v1386:0:0:0:0 < 100000 && v1380:0:0:0:0 < 99999

----------------------------------------

(27) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_593 ] = -1*f_593_3

The following rules are decreasing:
f_593(v1375:0:0:0:0, v1376:0:0:0:0, v1386:0:0:0:0, v1380:0:0:0:0) -> f_593(v1375:0:0:0:0, v1376:0:0:0:0, 1 + v1386:0:0:0:0, v1386:0:0:0:0) :|: v1376:0:0:0:0 + 4 * v1386:0:0:0:0 > 4 && v1386:0:0:0:0 > 0 && v1375:0:0:0:0 + 4 * v1386:0:0:0:0 > 4 && v1386:0:0:0:0 < 100000 && v1380:0:0:0:0 < 99999

The following rules are bounded:
f_593(v1375:0:0:0:0, v1376:0:0:0:0, v1386:0:0:0:0, v1380:0:0:0:0) -> f_593(v1375:0:0:0:0, v1376:0:0:0:0, 1 + v1386:0:0:0:0, v1386:0:0:0:0) :|: v1376:0:0:0:0 + 4 * v1386:0:0:0:0 > 4 && v1386:0:0:0:0 > 0 && v1375:0:0:0:0 + 4 * v1386:0:0:0:0 > 4 && v1386:0:0:0:0 < 100000 && v1380:0:0:0:0 < 99999


----------------------------------------

(28)
YES
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.0s
