YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/nwn5T.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could be proven:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 20 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 1575 ms]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) LLVM Symbolic Execution SCC
(7) SCC2IRS [SOUND, 119 ms]
(8) IntTRS
(9) IntTRSCompressionProof [EQUIVALENT, 0 ms]
(10) IntTRS
(11) RankingReductionPairProof [EQUIVALENT, 25 ms]
(12) YES


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/nwn5T.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/nwn5T.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "absMathInteger" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: (0 i32) variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 7
	0:
		%2 = alloca i32, align 4
		%3 = alloca i32, align 4
		store %0, %3
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		%4 = load %3
		%5 = icmp sge %4 0
		br %5, %6, %8
	6:
		%7 = load %3
		store %7, %2
		br %11
	8:
		%9 = load %3
		%10 = sub i32 0, %9
		store %10, %2
		br %11
	11:
		%12 = load %2
		ret %12

*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 26
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		%3 = alloca i32, align 4
		%4 = alloca i32, align 4
		%5 = alloca i32, align 4
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		%6 = call i32 @__VERIFIER_nondet_int()
		store %6, %2
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		%7 = call i32 @__VERIFIER_nondet_int()
		store %7, %3
		br %8
	8:
		%9 = load %2
		%10 = load %3
		%11 = sub i32 %9, %10
		%12 = icmp sge %11 1
		br %12, %13, %25
	13:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %4)
		%14 = call i32 @__VERIFIER_nondet_int()
		%15 = call i32 @absMathInteger(i32 %14)
		store %15, %4
		%16 = load %2
		%17 = load %4
		%18 = sub i32 %16, %17
		store %18, %2
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %5)
		%19 = call i32 @__VERIFIER_nondet_int()
		%20 = call i32 @absMathInteger(i32 %19)
		%21 = add i32 %20, 1
		store %21, %5
		%22 = load %3
		%23 = load %5
		%24 = add i32 %22, %23
		store %24, %3
		br %8
	25:
		ret 0


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 1 SCC.
----------------------------------------

(6)
Obligation:
SCC
----------------------------------------

(7) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 118 rulesP rules:
f_333(v262, v263, v264, 0, v266, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v283, v284, v274, v275, v272, v273, v276, 1, 3, 4) -> f_335(v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, 1, v262, v266, v278, v279, v280, v281, v282, 0, 3, 4) :|: 0 = 0
f_335(v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, 1, v262, v266, v278, v279, v280, v281, v282, 0, 3, 4) -> f_337(v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, 1, v262, v266, v278, v279, v280, v281, v282, 0, 3, 4) :|: TRUE
f_337(v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, 1, v262, v266, v278, v279, v280, v281, v282, 0, 3, 4) -> f_339(v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, 1, v262, v266, v278, v279, v280, v281, v282, 0, 3, 4) :|: 0 = 0
f_339(v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, 1, v262, v266, v278, v279, v280, v281, v282, 0, 3, 4) -> f_341(v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, 1, v262, v266, v278, v279, v280, v281, v282, 0, 3, 4) :|: 0 = 0
f_341(v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, 1, v262, v266, v278, v279, v280, v281, v282, 0, 3, 4) -> f_343(v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, 1, v262, v266, v300, v278, v279, v280, v281, v282, 0, 3, 4) :|: v300 + v266 = v274
f_343(v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, 1, v262, v266, v300, v278, v279, v280, v281, v282, 0, 3, 4) -> f_345(v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, 1, v262, v266, v300, v278, v279, v280, v281, v282, 0, 3, 4) :|: TRUE
f_345(v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, 1, v262, v266, v300, v278, v279, v280, v281, v282, 0, 3, 4) -> f_347(v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, 1, v262, v266, v300, v278, v279, v280, v281, v282, 0, 3, 4) :|: TRUE
f_347(v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, 1, v262, v266, v300, v278, v279, v280, v281, v282, 0, 3, 4) -> f_350(v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, 1, v262, v266, v300, v324, v278, v279, v280, v281, v282, 0, 3, 4) :|: TRUE
f_350(v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, 1, v262, v266, v300, v324, v278, v279, v280, v281, v282, 0, 3, 4) -> f_352(v324, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, 0, v275, v266, v300, v272, v273, v274, v276, 1, v262, 3, 4) :|: 0 = 0
f_352(v324, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, 0, v275, v266, v300, v272, v273, v274, v276, 1, v262, 3, 4) -> f_354(v324, v341, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, 0, v275, v266, v300, v272, v273, v274, v276, 1, v262, 3, 4) :|: 1 <= v341 && v342 = 3 + v341 && 4 <= v342
f_354(v324, v341, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, 0, v275, v266, v300, v272, v273, v274, v276, 1, v262, 3, 4) -> f_356(v324, v341, v344, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, v345, 0, v275, v266, v300, v272, v273, v274, v276, 1, v262, 3, 4) :|: 1 <= v344 && v345 = 3 + v344 && 4 <= v345
f_356(v324, v341, v344, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, v345, 0, v275, v266, v300, v272, v273, v274, v276, 1, v262, 3, 4) -> f_358(v324, v341, v344, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, v345, 0, v275, v266, v300, v272, v273, v274, v276, 1, v262, 3, 4) :|: TRUE
f_358(v324, v341, v344, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, v345, 0, v275, v266, v300, v272, v273, v274, v276, 1, v262, 3, 4) -> f_360(v324, v341, v344, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, v345, 0, v275, v266, v300, v272, v273, v274, v276, 1, v262, 3, 4) :|: TRUE
f_360(v324, v341, v344, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, v345, 0, v275, v266, v300, v272, v273, v274, v276, 1, v262, 3, 4) -> f_363(v324, v341, v344, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, v345, 0, v275, v266, v300, v272, v273, v274, v276, 1, v262, 3, 4) :|: 0 = 0
f_363(v324, v341, v344, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, v345, 0, v275, v266, v300, v272, v273, v274, v276, 1, v262, 3, 4) -> f_366(v324, v341, v344, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, v345, 0, v275, v266, v300, v272, v273, v274, v276, 1, v262, 3, 4) :|: 0 <= v324
f_363(v324, v341, v344, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, v345, 0, v275, v266, v300, v272, v273, v274, v276, 1, v262, 3, 4) -> f_367(v324, v341, v344, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, v345, 0, v275, v266, v300, v272, v273, v274, v276, 1, v262, 3, 4) :|: v324 < 0
f_366(v324, v341, v344, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, v345, 0, v275, v266, v300, v272, v273, v274, v276, 1, v262, 3, 4) -> f_370(v324, v341, v344, 1, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, v345, 0, v275, v266, v300, v272, v273, v274, v276, v262, 3, 4) :|: 0 = 0
f_370(v324, v341, v344, 1, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, v345, 0, v275, v266, v300, v272, v273, v274, v276, v262, 3, 4) -> f_374(v324, v341, v344, 1, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, v345, 0, v275, v266, v300, v272, v273, v274, v276, v262, 3, 4) :|: TRUE
f_374(v324, v341, v344, 1, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, v345, 0, v275, v266, v300, v272, v273, v274, v276, v262, 3, 4) -> f_378(v324, v341, v344, 1, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, v345, 0, v275, v266, v300, v272, v273, v274, v276, v262, 3, 4) :|: 0 = 0
f_378(v324, v341, v344, 1, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, v345, 0, v275, v266, v300, v272, v273, v274, v276, v262, 3, 4) -> f_382(v324, v341, v344, 1, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, v345, 0, v275, v266, v300, v272, v273, v274, v276, v262, 3, 4) :|: TRUE
f_382(v324, v341, v344, 1, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, v345, 0, v275, v266, v300, v272, v273, v274, v276, v262, 3, 4) -> f_386(v324, v341, v344, 1, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, v345, 0, v275, v266, v300, v272, v273, v274, v276, v262, 3, 4) :|: TRUE
f_386(v324, v341, v344, 1, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, v345, 0, v275, v266, v300, v272, v273, v274, v276, v262, 3, 4) -> f_387(v324, v341, v344, 1, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, v345, 0, v300, v275, v266, v398, v399, v400, v402, v403, 3, 4) :|: TRUE
f_387(v389, v390, v391, 1, v393, v406, v394, v407, v395, v408, v396, v409, v397, v410, v411, v412, 0, v405, v401, v404, v398, v399, v400, v402, v403, 3, 4) -> f_390(v389, v390, v391, 1, v393, v406, v394, v407, v395, v408, v396, v409, v397, v410, v411, v412, 0, v405, v401, v404, v398, v399, v400, v402, v403, 3, 4) :|: 0 = 0
f_390(v389, v390, v391, 1, v393, v406, v394, v407, v395, v408, v396, v409, v397, v410, v411, v412, 0, v405, v401, v404, v398, v399, v400, v402, v403, 3, 4) -> f_393(v393, v394, v395, v396, v397, v398, v399, v400, v401, v402, 1, v403, v404, v405, v389, v406, v407, v408, v409, v410, 0, 3, 4) :|: 0 = 0
f_393(v393, v394, v395, v396, v397, v398, v399, v400, v401, v402, 1, v403, v404, v405, v389, v406, v407, v408, v409, v410, 0, 3, 4) -> f_395(v393, v394, v395, v396, v397, v398, v399, v400, v401, v402, 1, v403, v404, v405, v389, v452, v406, v407, v408, v409, v410, 0, 3, 4) :|: v452 = 1 + v389 && 1 <= v452
f_395(v393, v394, v395, v396, v397, v398, v399, v400, v401, v402, 1, v403, v404, v405, v389, v452, v406, v407, v408, v409, v410, 0, 3, 4) -> f_397(v393, v394, v395, v396, v397, v398, v399, v400, v401, v402, 1, v403, v404, v405, v389, v452, v406, v407, v408, v409, v410, 0, 3, 4) :|: TRUE
f_397(v393, v394, v395, v396, v397, v398, v399, v400, v401, v402, 1, v403, v404, v405, v389, v452, v406, v407, v408, v409, v410, 0, 3, 4) -> f_399(v393, v394, v395, v396, v397, v398, v399, v400, v401, v402, 1, v403, v404, v405, v389, v452, v406, v407, v408, v409, v410, 0, 3, 4) :|: 0 = 0
f_399(v393, v394, v395, v396, v397, v398, v399, v400, v401, v402, 1, v403, v404, v405, v389, v452, v406, v407, v408, v409, v410, 0, 3, 4) -> f_401(v393, v394, v395, v396, v397, v398, v399, v400, v401, v402, 1, v403, v404, v405, v389, v452, v406, v407, v408, v409, v410, 0, 3, 4) :|: 0 = 0
f_401(v393, v394, v395, v396, v397, v398, v399, v400, v401, v402, 1, v403, v404, v405, v389, v452, v406, v407, v408, v409, v410, 0, 3, 4) -> f_403(v393, v394, v395, v396, v397, v398, v399, v400, v401, v402, 1, v403, v404, v405, v389, v452, v456, v406, v407, v408, v409, v410, 0, 3, 4) :|: v456 = v401 + v452
f_403(v393, v394, v395, v396, v397, v398, v399, v400, v401, v402, 1, v403, v404, v405, v389, v452, v456, v406, v407, v408, v409, v410, 0, 3, 4) -> f_405(v393, v394, v395, v396, v397, v398, v399, v400, v401, v402, 1, v403, v404, v405, v389, v452, v456, v406, v407, v408, v409, v410, 0, 3, 4) :|: TRUE
f_405(v393, v394, v395, v396, v397, v398, v399, v400, v401, v402, 1, v403, v404, v405, v389, v452, v456, v406, v407, v408, v409, v410, 0, 3, 4) -> f_407(v393, v394, v395, v396, v397, v398, v399, v400, v401, v402, 1, v403, v404, v405, v389, v452, v456, v406, v407, v408, v409, v410, 0, 3, 4) :|: TRUE
f_407(v393, v394, v395, v396, v397, v398, v399, v400, v401, v402, 1, v403, v404, v405, v389, v452, v456, v406, v407, v408, v409, v410, 0, 3, 4) -> f_409(v393, v394, v395, v396, v397, v398, v399, v405, v401, v402, 1, v403, v404, v400, v389, v452, v456, v406, v407, v408, v409, v410, 0, 3, 4) :|: 0 = 0
f_409(v393, v394, v395, v396, v397, v398, v399, v405, v401, v402, 1, v403, v404, v400, v389, v452, v456, v406, v407, v408, v409, v410, 0, 3, 4) -> f_411(v393, v394, v395, v396, v397, v398, v399, v405, v456, v402, 1, v403, v404, v400, v389, v452, v401, v406, v407, v408, v409, v410, 0, 3, 4) :|: 0 = 0
f_411(v393, v394, v395, v396, v397, v398, v399, v405, v456, v402, 1, v403, v404, v400, v389, v452, v401, v406, v407, v408, v409, v410, 0, 3, 4) -> f_413(v393, v394, v395, v396, v397, v398, v399, v405, v456, v474, 1, v403, v404, v400, v389, v452, v401, v406, v407, v408, v409, v410, 0, 3, 4) :|: v474 + v456 = v405
f_413(v393, v394, v395, v396, v397, v398, v399, v405, v456, v474, 1, v403, v404, v400, v389, v452, v401, v406, v407, v408, v409, v410, 0, 3, 4) -> f_415(v393, v394, v395, v396, v397, v398, v399, v405, v456, v474, 1, v403, v404, v400, v389, v452, v401, v406, v407, v408, v409, v410, 0, 3, 4) :|: 1 <= v474
f_415(v393, v394, v395, v396, v397, v398, v399, v405, v456, v474, 1, v403, v404, v400, v389, v452, v401, v406, v407, v408, v409, v410, 0, 3, 4) -> f_418(v393, v394, v395, v396, v397, v398, v399, v405, v456, v474, 1, v403, v404, v400, v389, v452, v401, v406, v407, v408, v409, v410, 0, 3, 4) :|: 0 = 0
f_418(v393, v394, v395, v396, v397, v398, v399, v405, v456, v474, 1, v403, v404, v400, v389, v452, v401, v406, v407, v408, v409, v410, 0, 3, 4) -> f_422(v393, v394, v395, v396, v397, v398, v399, v405, v456, v474, 1, v403, v404, v400, v389, v452, v401, v406, v407, v408, v409, v410, 0, 3, 4) :|: TRUE
f_422(v393, v394, v395, v396, v397, v398, v399, v405, v456, v474, 1, v403, v404, v400, v389, v452, v401, v406, v407, v408, v409, v410, 0, 3, 4) -> f_426(v393, v394, v395, v396, v397, v398, v399, v405, v456, v474, 1, v403, v404, v400, v389, v452, v401, v406, v407, v408, v409, v410, 0, 3, 4) :|: TRUE
f_426(v393, v394, v395, v396, v397, v398, v399, v405, v456, v474, 1, v403, v404, v400, v389, v452, v401, v406, v407, v408, v409, v410, 0, 3, 4) -> f_429(v393, v394, v395, v396, v397, v398, v399, v405, v456, v474, 1, v504, v404, v400, v389, v452, v401, v406, v407, v408, v409, v410, 0, 3, 4) :|: TRUE
f_429(v393, v394, v395, v396, v397, v398, v399, v405, v456, v474, 1, v504, v404, v400, v389, v452, v401, v406, v407, v408, v409, v410, 0, 3, 4) -> f_431(v504, v393, v406, v394, v407, v395, v408, v396, v409, v397, v410, 0, v405, v404, v452, v456, v398, v399, v474, 1, v400, v389, v401, 3, 4) :|: 0 = 0
f_431(v504, v393, v406, v394, v407, v395, v408, v396, v409, v397, v410, 0, v405, v404, v452, v456, v398, v399, v474, 1, v400, v389, v401, 3, 4) -> f_435(v504, v393, v406, v394, v407, v395, v408, v396, v409, v397, v410, 0, v405, v456, v404, v452, v518, v519, v522, 1, v525, v526, v527, v529, 3, 4) :|: TRUE
f_435(v512, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, 0, v520, v521, v524, v528, v518, v519, v522, 1, v525, v526, v527, v529, 3, 4) -> f_436(v512, v536, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, 0, v520, v521, v524, v528, v518, v519, v522, 1, v525, v526, v527, v529, 3, 4) :|: 1 <= v536 && v537 = 3 + v536 && 4 <= v537
f_436(v512, v536, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, 0, v520, v521, v524, v528, v518, v519, v522, 1, v525, v526, v527, v529, 3, 4) -> f_437(v512, v536, v538, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, v539, 0, v520, v521, v524, v528, v518, v519, v522, 1, v525, v526, v527, v529, 3, 4) :|: 1 <= v538 && v539 = 3 + v538 && 4 <= v539
f_437(v512, v536, v538, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, v539, 0, v520, v521, v524, v528, v518, v519, v522, 1, v525, v526, v527, v529, 3, 4) -> f_438(v512, v536, v538, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, v539, 0, v520, v521, v524, v528, v518, v519, v522, 1, v525, v526, v527, v529, 3, 4) :|: TRUE
f_438(v512, v536, v538, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, v539, 0, v520, v521, v524, v528, v518, v519, v522, 1, v525, v526, v527, v529, 3, 4) -> f_439(v512, v536, v538, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, v539, 0, v520, v521, v524, v528, v518, v519, v522, 1, v525, v526, v527, v529, 3, 4) :|: TRUE
f_439(v512, v536, v538, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, v539, 0, v520, v521, v524, v528, v518, v519, v522, 1, v525, v526, v527, v529, 3, 4) -> f_440(v512, v536, v538, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, v539, 0, v520, v521, v524, v528, v518, v519, v522, 1, v525, v526, v527, v529, 3, 4) :|: 0 = 0
f_440(v512, v536, v538, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, v539, 0, v520, v521, v524, v528, v518, v519, v522, 1, v525, v526, v527, v529, 3, 4) -> f_441(v512, v536, v538, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, v539, 0, v520, v521, v524, v528, v518, v519, v522, 1, v525, v526, v527, v529, 3, 4) :|: 0 <= v512
f_440(v512, v536, v538, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, v539, 0, v520, v521, v524, v528, v518, v519, v522, 1, v525, v526, v527, v529, 3, 4) -> f_442(v512, v536, v538, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, v539, 0, v520, v521, v524, v528, v518, v519, v522, 1, v525, v526, v527, v529, 3, 4) :|: v512 < 0
f_441(v512, v536, v538, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, v539, 0, v520, v521, v524, v528, v518, v519, v522, 1, v525, v526, v527, v529, 3, 4) -> f_443(v512, v536, v538, 1, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, v539, 0, v520, v521, v524, v528, v518, v519, v522, v525, v526, v527, v529, 3, 4) :|: 0 = 0
f_443(v512, v536, v538, 1, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, v539, 0, v520, v521, v524, v528, v518, v519, v522, v525, v526, v527, v529, 3, 4) -> f_445(v512, v536, v538, 1, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, v539, 0, v520, v521, v524, v528, v518, v519, v522, v525, v526, v527, v529, 3, 4) :|: TRUE
f_445(v512, v536, v538, 1, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, v539, 0, v520, v521, v524, v528, v518, v519, v522, v525, v526, v527, v529, 3, 4) -> f_447(v512, v536, v538, 1, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, v539, 0, v520, v521, v524, v528, v518, v519, v522, v525, v526, v527, v529, 3, 4) :|: 0 = 0
f_447(v512, v536, v538, 1, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, v539, 0, v520, v521, v524, v528, v518, v519, v522, v525, v526, v527, v529, 3, 4) -> f_449(v512, v536, v538, 1, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, v539, 0, v520, v521, v524, v528, v518, v519, v522, v525, v526, v527, v529, 3, 4) :|: TRUE
f_449(v512, v536, v538, 1, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, v539, 0, v520, v521, v524, v528, v518, v519, v522, v525, v526, v527, v529, 3, 4) -> f_451(v512, v536, v538, 1, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, v539, 0, v520, v521, v524, v528, v518, v519, v522, v525, v526, v527, v529, 3, 4) :|: TRUE
f_451(v512, v536, v538, 1, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, v539, 0, v520, v521, v524, v528, v518, v519, v522, v525, v526, v527, v529, 3, 4) -> f_453(v512, v536, v538, 1, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, v539, 0, v520, v521, v524, v528, v518, v519, v522, v525, v526, v527, v529, 3, 4) :|: 0 = 0
f_453(v512, v536, v538, 1, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, v539, 0, v520, v521, v524, v528, v518, v519, v522, v525, v526, v527, v529, 3, 4) -> f_455(v513, v514, v515, v516, v517, v518, v519, v520, v521, v522, 1, v512, v525, v524, v526, v527, v528, v529, v530, v531, v532, v533, v534, 0, 3, 4) :|: 0 = 0
f_455(v513, v514, v515, v516, v517, v518, v519, v520, v521, v522, 1, v512, v525, v524, v526, v527, v528, v529, v530, v531, v532, v533, v534, 0, 3, 4) -> f_456(v513, v514, v515, v516, v517, v518, v519, v520, v521, v522, 1, v512, v525, v524, v526, v527, v528, v529, v530, v531, v532, v533, v534, 0, 3, 4) :|: TRUE
f_456(v513, v514, v515, v516, v517, v518, v519, v520, v521, v522, 1, v512, v525, v524, v526, v527, v528, v529, v530, v531, v532, v533, v534, 0, 3, 4) -> f_457(v513, v514, v515, v516, v517, v518, v519, v520, v521, v522, 1, v512, v524, v526, v527, v528, v529, v530, v531, v532, v533, v534, 0, 3, 4) :|: 0 = 0
f_457(v513, v514, v515, v516, v517, v518, v519, v520, v521, v522, 1, v512, v524, v526, v527, v528, v529, v530, v531, v532, v533, v534, 0, 3, 4) -> f_458(v513, v514, v515, v516, v517, v518, v519, v520, v521, v522, 1, v512, v526, v527, v528, v529, v530, v531, v532, v533, v534, 0, 3, 4) :|: 0 = 0
f_458(v513, v514, v515, v516, v517, v518, v519, v520, v521, v522, 1, v512, v526, v527, v528, v529, v530, v531, v532, v533, v534, 0, 3, 4) -> f_459(v513, v514, v515, v516, v517, v518, v519, v520, v521, v522, 1, v512, v599, v526, v527, v528, v529, v530, v531, v532, v533, v534, 0, 3, 4) :|: v599 + v512 = v520
f_459(v513, v514, v515, v516, v517, v518, v519, v520, v521, v522, 1, v512, v599, v526, v527, v528, v529, v530, v531, v532, v533, v534, 0, 3, 4) -> f_460(v513, v514, v515, v516, v517, v518, v519, v520, v521, v522, 1, v512, v599, v526, v527, v528, v529, v530, v531, v532, v533, v534, 0, 3, 4) :|: TRUE
f_460(v513, v514, v515, v516, v517, v518, v519, v520, v521, v522, 1, v512, v599, v526, v527, v528, v529, v530, v531, v532, v533, v534, 0, 3, 4) -> f_461(v513, v514, v515, v516, v517, v518, v519, v520, v521, v522, 1, v512, v599, v526, v527, v528, v529, v530, v531, v532, v533, v534, 0, 3, 4) :|: TRUE
f_461(v513, v514, v515, v516, v517, v518, v519, v520, v521, v522, 1, v512, v599, v526, v527, v528, v529, v530, v531, v532, v533, v534, 0, 3, 4) -> f_462(v513, v514, v515, v516, v517, v518, v519, v520, v521, v522, 1, v512, v599, v601, v527, v528, v529, v530, v531, v532, v533, v534, 0, 3, 4) :|: TRUE
f_462(v513, v514, v515, v516, v517, v518, v519, v520, v521, v522, 1, v512, v599, v601, v527, v528, v529, v530, v531, v532, v533, v534, 0, 3, 4) -> f_463(v601, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, 0, v521, v528, v512, v599, v518, v519, v520, v522, 1, v527, v529, 3, 4) :|: 0 = 0
f_463(v601, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, 0, v521, v528, v512, v599, v518, v519, v520, v522, 1, v527, v529, 3, 4) -> f_349(v601, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, 0, v599, v521, v512, v309, v310, v311, v313, 1, 3, 4) :|: TRUE
f_349(v303, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, 0, v316, v312, v315, v309, v310, v311, v313, 1, 3, 4) -> f_351(v303, v325, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, 0, v316, v312, v315, v309, v310, v311, v313, 1, 3, 4) :|: 1 <= v325 && v326 = 3 + v325 && 4 <= v326
f_351(v303, v325, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, 0, v316, v312, v315, v309, v310, v311, v313, 1, 3, 4) -> f_353(v303, v325, v339, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, v340, 0, v316, v312, v315, v309, v310, v311, v313, 1, 3, 4) :|: 1 <= v339 && v340 = 3 + v339 && 4 <= v340
f_353(v303, v325, v339, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, v340, 0, v316, v312, v315, v309, v310, v311, v313, 1, 3, 4) -> f_355(v303, v325, v339, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, v340, 0, v316, v312, v315, v309, v310, v311, v313, 1, 3, 4) :|: TRUE
f_355(v303, v325, v339, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, v340, 0, v316, v312, v315, v309, v310, v311, v313, 1, 3, 4) -> f_357(v303, v325, v339, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, v340, 0, v316, v312, v315, v309, v310, v311, v313, 1, 3, 4) :|: TRUE
f_357(v303, v325, v339, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, v340, 0, v316, v312, v315, v309, v310, v311, v313, 1, 3, 4) -> f_359(v303, v325, v339, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, v340, 0, v316, v312, v315, v309, v310, v311, v313, 1, 3, 4) :|: 0 = 0
f_359(v303, v325, v339, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, v340, 0, v316, v312, v315, v309, v310, v311, v313, 1, 3, 4) -> f_361(v303, v325, v339, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, v340, 0, v316, v312, v315, v309, v310, v311, v313, 1, 3, 4) :|: 0 <= v303
f_359(v303, v325, v339, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, v340, 0, v316, v312, v315, v309, v310, v311, v313, 1, 3, 4) -> f_362(v303, v325, v339, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, v340, 0, v316, v312, v315, v309, v310, v311, v313, 1, 3, 4) :|: v303 < 0
f_361(v303, v325, v339, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, v340, 0, v316, v312, v315, v309, v310, v311, v313, 1, 3, 4) -> f_364(v303, v325, v339, 1, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, v340, 0, v316, v312, v315, v309, v310, v311, v313, 3, 4) :|: 0 = 0
f_364(v303, v325, v339, 1, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, v340, 0, v316, v312, v315, v309, v310, v311, v313, 3, 4) -> f_368(v303, v325, v339, 1, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, v340, 0, v316, v312, v315, v309, v310, v311, v313, 3, 4) :|: TRUE
f_368(v303, v325, v339, 1, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, v340, 0, v316, v312, v315, v309, v310, v311, v313, 3, 4) -> f_372(v303, v325, v339, 1, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, v340, 0, v316, v312, v315, v309, v310, v311, v313, 3, 4) :|: 0 = 0
f_372(v303, v325, v339, 1, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, v340, 0, v316, v312, v315, v309, v310, v311, v313, 3, 4) -> f_376(v303, v325, v339, 1, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, v340, 0, v316, v312, v315, v309, v310, v311, v313, 3, 4) :|: TRUE
f_376(v303, v325, v339, 1, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, v340, 0, v316, v312, v315, v309, v310, v311, v313, 3, 4) -> f_380(v303, v325, v339, 1, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, v340, 0, v316, v312, v315, v309, v310, v311, v313, 3, 4) :|: TRUE
f_380(v303, v325, v339, 1, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, v340, 0, v316, v312, v315, v309, v310, v311, v313, 3, 4) -> f_387(v303, v325, v339, 1, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, v340, 0, v316, v312, v315, v398, v399, v400, v402, v403, 3, 4) :|: TRUE
f_362(v303, v325, v339, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, v340, 0, v316, v312, v315, v309, v310, v311, v313, 1, 3, 4) -> f_365(v303, v325, v339, 0, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, v340, v316, v312, v315, v309, v310, v311, v313, 1, 3, 4) :|: 0 = 0
f_365(v303, v325, v339, 0, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, v340, v316, v312, v315, v309, v310, v311, v313, 1, 3, 4) -> f_369(v303, v325, v339, 0, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, v340, v316, v312, v315, v309, v310, v311, v313, 1, 3, 4) :|: TRUE
f_369(v303, v325, v339, 0, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, v340, v316, v312, v315, v309, v310, v311, v313, 1, 3, 4) -> f_373(v303, v325, v339, 0, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, v340, v316, v312, v315, v309, v310, v311, v313, 1, 3, 4) :|: 0 = 0
f_373(v303, v325, v339, 0, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, v340, v316, v312, v315, v309, v310, v311, v313, 1, 3, 4) -> f_377(v303, v325, v339, 0, v377, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, v340, v316, v312, v315, v309, v310, v311, v313, 1, 3, 4) :|: v377 + v303 = 0 && 1 <= v377
f_377(v303, v325, v339, 0, v377, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, v340, v316, v312, v315, v309, v310, v311, v313, 1, 3, 4) -> f_381(v303, v325, v339, 0, v377, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, v340, v316, v312, v315, v309, v310, v311, v313, 1, 3, 4) :|: TRUE
f_381(v303, v325, v339, 0, v377, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, v340, v316, v312, v315, v309, v310, v311, v313, 1, 3, 4) -> f_385(v303, v325, v339, 0, v377, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, v340, v316, v312, v315, v309, v310, v311, v313, 1, 3, 4) :|: TRUE
f_385(v303, v325, v339, 0, v377, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, v340, v316, v312, v315, v309, v310, v311, v313, 1, 3, 4) -> f_392(v303, v325, v339, 0, v377, v304, v317, v305, v318, v306, v319, v307, v320, v308, v321, v326, v340, v316, v312, v315, v433, v434, v435, v437, 1, v439, 3, 4) :|: TRUE
f_392(v423, v424, v425, 0, v427, v428, v442, v429, v443, v430, v444, v431, v445, v432, v446, v447, v448, v441, v436, v440, v433, v434, v435, v437, 1, v439, 3, 4) -> f_394(v423, v424, v425, 0, v427, v428, v442, v429, v443, v430, v444, v431, v445, v432, v446, v447, v448, v441, v436, v440, v433, v434, v435, v437, 1, v439, 3, 4) :|: 0 = 0
f_394(v423, v424, v425, 0, v427, v428, v442, v429, v443, v430, v444, v431, v445, v432, v446, v447, v448, v441, v436, v440, v433, v434, v435, v437, 1, v439, 3, 4) -> f_396(v428, v429, v430, v431, v432, v433, v434, v435, v436, v437, 1, v439, v440, v441, v423, v427, v442, v443, v444, v445, v446, 0, 3, 4) :|: 0 = 0
f_396(v428, v429, v430, v431, v432, v433, v434, v435, v436, v437, 1, v439, v440, v441, v423, v427, v442, v443, v444, v445, v446, 0, 3, 4) -> f_398(v428, v429, v430, v431, v432, v433, v434, v435, v436, v437, 1, v439, v440, v441, v423, v427, v454, v442, v443, v444, v445, v446, 0, 3, 4, 2) :|: v454 = 1 + v427 && 2 <= v454
f_398(v428, v429, v430, v431, v432, v433, v434, v435, v436, v437, 1, v439, v440, v441, v423, v427, v454, v442, v443, v444, v445, v446, 0, 3, 4, 2) -> f_400(v428, v429, v430, v431, v432, v433, v434, v435, v436, v437, 1, v439, v440, v441, v423, v427, v454, v442, v443, v444, v445, v446, 0, 3, 4, 2) :|: TRUE
f_400(v428, v429, v430, v431, v432, v433, v434, v435, v436, v437, 1, v439, v440, v441, v423, v427, v454, v442, v443, v444, v445, v446, 0, 3, 4, 2) -> f_402(v428, v429, v430, v431, v432, v433, v434, v435, v436, v437, 1, v439, v440, v441, v423, v427, v454, v442, v443, v444, v445, v446, 0, 3, 4, 2) :|: 0 = 0
f_402(v428, v429, v430, v431, v432, v433, v434, v435, v436, v437, 1, v439, v440, v441, v423, v427, v454, v442, v443, v444, v445, v446, 0, 3, 4, 2) -> f_404(v428, v429, v430, v431, v432, v433, v434, v435, v436, v437, 1, v439, v440, v441, v423, v427, v454, v442, v443, v444, v445, v446, 0, 3, 4, 2) :|: 0 = 0
f_404(v428, v429, v430, v431, v432, v433, v434, v435, v436, v437, 1, v439, v440, v441, v423, v427, v454, v442, v443, v444, v445, v446, 0, 3, 4, 2) -> f_406(v428, v429, v430, v431, v432, v433, v434, v435, v436, v437, 1, v439, v440, v441, v423, v427, v454, v458, v442, v443, v444, v445, v446, 0, 3, 4, 2) :|: v458 = v436 + v454
f_406(v428, v429, v430, v431, v432, v433, v434, v435, v436, v437, 1, v439, v440, v441, v423, v427, v454, v458, v442, v443, v444, v445, v446, 0, 3, 4, 2) -> f_408(v428, v429, v430, v431, v432, v433, v434, v435, v436, v437, 1, v439, v440, v441, v423, v427, v454, v458, v442, v443, v444, v445, v446, 0, 3, 4, 2) :|: TRUE
f_408(v428, v429, v430, v431, v432, v433, v434, v435, v436, v437, 1, v439, v440, v441, v423, v427, v454, v458, v442, v443, v444, v445, v446, 0, 3, 4, 2) -> f_410(v428, v429, v430, v431, v432, v433, v434, v435, v436, v437, 1, v439, v440, v441, v423, v427, v454, v458, v442, v443, v444, v445, v446, 0, 3, 4, 2) :|: TRUE
f_410(v428, v429, v430, v431, v432, v433, v434, v435, v436, v437, 1, v439, v440, v441, v423, v427, v454, v458, v442, v443, v444, v445, v446, 0, 3, 4, 2) -> f_412(v428, v429, v430, v431, v432, v433, v434, v441, v436, v437, 1, v439, v440, v435, v423, v427, v454, v458, v442, v443, v444, v445, v446, 0, 3, 4, 2) :|: 0 = 0
f_412(v428, v429, v430, v431, v432, v433, v434, v441, v436, v437, 1, v439, v440, v435, v423, v427, v454, v458, v442, v443, v444, v445, v446, 0, 3, 4, 2) -> f_414(v428, v429, v430, v431, v432, v433, v434, v441, v458, v437, 1, v439, v440, v435, v423, v427, v454, v436, v442, v443, v444, v445, v446, 0, 3, 4, 2) :|: 0 = 0
f_414(v428, v429, v430, v431, v432, v433, v434, v441, v458, v437, 1, v439, v440, v435, v423, v427, v454, v436, v442, v443, v444, v445, v446, 0, 3, 4, 2) -> f_417(v428, v429, v430, v431, v432, v433, v434, v441, v458, v475, 1, v439, v440, v435, v423, v427, v454, v436, v442, v443, v444, v445, v446, 0, 3, 4, 2) :|: v475 + v458 = v441
f_417(v428, v429, v430, v431, v432, v433, v434, v441, v458, v475, 1, v439, v440, v435, v423, v427, v454, v436, v442, v443, v444, v445, v446, 0, 3, 4, 2) -> f_420(v428, v429, v430, v431, v432, v433, v434, v441, v458, v475, 1, v439, v440, v435, v423, v427, v454, v436, v442, v443, v444, v445, v446, 0, 3, 4, 2) :|: 1 <= v475
f_420(v428, v429, v430, v431, v432, v433, v434, v441, v458, v475, 1, v439, v440, v435, v423, v427, v454, v436, v442, v443, v444, v445, v446, 0, 3, 4, 2) -> f_424(v428, v429, v430, v431, v432, v433, v434, v441, v458, v475, 1, v439, v440, v435, v423, v427, v454, v436, v442, v443, v444, v445, v446, 0, 3, 4, 2) :|: 0 = 0
f_424(v428, v429, v430, v431, v432, v433, v434, v441, v458, v475, 1, v439, v440, v435, v423, v427, v454, v436, v442, v443, v444, v445, v446, 0, 3, 4, 2) -> f_427(v428, v429, v430, v431, v432, v433, v434, v441, v458, v475, 1, v439, v440, v435, v423, v427, v454, v436, v442, v443, v444, v445, v446, 0, 3, 4, 2) :|: TRUE
f_427(v428, v429, v430, v431, v432, v433, v434, v441, v458, v475, 1, v439, v440, v435, v423, v427, v454, v436, v442, v443, v444, v445, v446, 0, 3, 4, 2) -> f_430(v428, v429, v430, v431, v432, v433, v434, v441, v458, v475, 1, v439, v440, v435, v423, v427, v454, v436, v442, v443, v444, v445, v446, 0, 3, 4, 2) :|: TRUE
f_430(v428, v429, v430, v431, v432, v433, v434, v441, v458, v475, 1, v439, v440, v435, v423, v427, v454, v436, v442, v443, v444, v445, v446, 0, 3, 4, 2) -> f_432(v428, v429, v430, v431, v432, v433, v434, v441, v458, v475, 1, v507, v440, v435, v423, v427, v454, v436, v442, v443, v444, v445, v446, 0, 3, 4, 2) :|: TRUE
f_432(v428, v429, v430, v431, v432, v433, v434, v441, v458, v475, 1, v507, v440, v435, v423, v427, v454, v436, v442, v443, v444, v445, v446, 0, 3, 4, 2) -> f_434(v507, v428, v442, v429, v443, v430, v444, v431, v445, v432, v446, 0, v441, v440, v454, v458, v433, v434, v475, 1, v435, v423, v427, v436, 3, 4, 2) :|: 0 = 0
f_434(v507, v428, v442, v429, v443, v430, v444, v431, v445, v432, v446, 0, v441, v440, v454, v458, v433, v434, v475, 1, v435, v423, v427, v436, 3, 4, 2) -> f_435(v507, v428, v442, v429, v443, v430, v444, v431, v445, v432, v446, 0, v441, v458, v440, v454, v518, v519, v522, 1, v525, v526, v527, v529, 3, 4) :|: TRUE
f_442(v512, v536, v538, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, v539, 0, v520, v521, v524, v528, v518, v519, v522, 1, v525, v526, v527, v529, 3, 4) -> f_444(v512, v536, v538, 0, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, v539, v520, v521, v524, v528, v518, v519, v522, 1, v525, v526, v527, v529, 3, 4) :|: 0 = 0
f_444(v512, v536, v538, 0, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, v539, v520, v521, v524, v528, v518, v519, v522, 1, v525, v526, v527, v529, 3, 4) -> f_446(v512, v536, v538, 0, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, v539, v520, v521, v524, v528, v518, v519, v522, 1, v525, v526, v527, v529, 3, 4) :|: TRUE
f_446(v512, v536, v538, 0, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, v539, v520, v521, v524, v528, v518, v519, v522, 1, v525, v526, v527, v529, 3, 4) -> f_448(v512, v536, v538, 0, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, v539, v520, v521, v524, v528, v518, v519, v522, 1, v525, v526, v527, v529, 3, 4) :|: 0 = 0
f_448(v512, v536, v538, 0, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, v539, v520, v521, v524, v528, v518, v519, v522, 1, v525, v526, v527, v529, 3, 4) -> f_450(v512, v536, v538, 0, v558, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, v539, v520, v521, v524, v528, v518, v519, v522, 1, v525, v526, v527, v529, 3, 4) :|: v558 + v512 = 0 && 1 <= v558
f_450(v512, v536, v538, 0, v558, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, v539, v520, v521, v524, v528, v518, v519, v522, 1, v525, v526, v527, v529, 3, 4) -> f_452(v512, v536, v538, 0, v558, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, v539, v520, v521, v524, v528, v518, v519, v522, 1, v525, v526, v527, v529, 3, 4) :|: TRUE
f_452(v512, v536, v538, 0, v558, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, v539, v520, v521, v524, v528, v518, v519, v522, 1, v525, v526, v527, v529, 3, 4) -> f_454(v512, v536, v538, 0, v558, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, v539, v520, v521, v524, v528, v518, v519, v522, 1, v525, v526, v527, v529, 3, 4) :|: TRUE
f_454(v512, v536, v538, 0, v558, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, v539, v520, v521, v524, v528, v518, v519, v522, 1, v525, v526, v527, v529, 3, 4) -> f_331(v512, v536, v538, 0, v558, v513, v530, v514, v531, v515, v532, v516, v533, v517, v534, v537, v539, v520, v521, v272, v273, v276, 1, 3, 4) :|: TRUE
f_331(v262, v263, v264, 0, v266, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v283, v284, v274, v275, v272, v273, v276, 1, 3, 4) -> f_333(v262, v263, v264, 0, v266, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v283, v284, v274, v275, v272, v273, v276, 1, 3, 4) :|: 0 = 0
f_367(v324, v341, v344, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, v345, 0, v275, v266, v300, v272, v273, v274, v276, 1, v262, 3, 4) -> f_371(v324, v341, v344, 0, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, v345, v275, v266, v300, v272, v273, v274, v276, 1, v262, 3, 4) :|: 0 = 0
f_371(v324, v341, v344, 0, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, v345, v275, v266, v300, v272, v273, v274, v276, 1, v262, 3, 4) -> f_375(v324, v341, v344, 0, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, v345, v275, v266, v300, v272, v273, v274, v276, 1, v262, 3, 4) :|: TRUE
f_375(v324, v341, v344, 0, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, v345, v275, v266, v300, v272, v273, v274, v276, 1, v262, 3, 4) -> f_379(v324, v341, v344, 0, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, v345, v275, v266, v300, v272, v273, v274, v276, 1, v262, 3, 4) :|: 0 = 0
f_379(v324, v341, v344, 0, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, v345, v275, v266, v300, v272, v273, v274, v276, 1, v262, 3, 4) -> f_383(v324, v341, v344, 0, v380, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, v345, v275, v266, v300, v272, v273, v274, v276, 1, v262, 3, 4) :|: v380 + v324 = 0 && 1 <= v380
f_383(v324, v341, v344, 0, v380, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, v345, v275, v266, v300, v272, v273, v274, v276, 1, v262, 3, 4) -> f_388(v324, v341, v344, 0, v380, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, v345, v275, v266, v300, v272, v273, v274, v276, 1, v262, 3, 4) :|: TRUE
f_388(v324, v341, v344, 0, v380, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, v345, v275, v266, v300, v272, v273, v274, v276, 1, v262, 3, 4) -> f_391(v324, v341, v344, 0, v380, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, v345, v275, v266, v300, v272, v273, v274, v276, 1, v262, 3, 4) :|: TRUE
f_391(v324, v341, v344, 0, v380, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, v345, v275, v266, v300, v272, v273, v274, v276, 1, v262, 3, 4) -> f_392(v324, v341, v344, 0, v380, v267, v278, v268, v279, v269, v280, v270, v281, v271, v282, v342, v345, v300, v275, v266, v433, v434, v435, v437, 1, v439, 3, 4) :|: TRUE
Combined rules. Obtained 4 rulesP rules:
f_440(v512:0, v536:0, v538:0, v513:0, v530:0, v514:0, v531:0, v515:0, v532:0, v516:0, v533:0, v517:0, v534:0, v537:0, v539:0, 0, v474:0 + (v521:0 + (1 + v601:0)) + v512:0, v521:0, v524:0, v528:0, v518:0, v519:0, v522:0, 1, v525:0, v526:0, v527:0, v529:0, 3, 4) -> f_440(v504:0, v536:1, v538:1, v513:0, v530:0, v514:0, v531:0, v515:0, v532:0, v516:0, v533:0, v517:0, v534:0, 3 + v536:1, 3 + v538:1, 0, v474:0 + (v521:0 + (1 + v601:0)), v521:0 + (1 + v601:0), v512:0, 1 + v601:0, v518:1, v519:1, v522:1, 1, v525:1, v526:1, v527:1, v529:1, 3, 4) :|: v512:0 > -1 && v601:0 > -1 && v325:0 > 0 && v474:0 > 0 && v339:0 > 0 && v536:1 > 0 && v538:1 > 0
f_440(v512:0, v536:0, v538:0, v513:0, v530:0, v514:0, v531:0, v515:0, v532:0, v516:0, v533:0, v517:0, v534:0, v537:0, v539:0, 0, v474:0 + (v521:0 + (1 + v324:0)) + v558:0, v521:0, v524:0, v528:0, v518:0, v519:0, v522:0, 1, v525:0, v526:0, v527:0, v529:0, 3, 4) -> f_440(v504:0, v536:1, v538:1, v513:0, v530:0, v514:0, v531:0, v515:0, v532:0, v516:0, v533:0, v517:0, v534:0, 3 + v536:1, 3 + v538:1, 0, v474:0 + (v521:0 + (1 + v324:0)), v521:0 + (1 + v324:0), v558:0, 1 + v324:0, v518:1, v519:1, v522:1, 1, v525:1, v526:1, v527:1, v529:1, 3, 4) :|: v341:0 > 0 && v344:0 > 0 && v324:0 > -1 && v474:0 > 0 && v512:0 < 0 && v536:1 > 0 && v538:1 > 0 && v558:0 > 0 && v558:0 + v512:0 = 0
f_440(v512:0, v536:0, v538:0, v513:0, v530:0, v514:0, v531:0, v515:0, v532:0, v516:0, v533:0, v517:0, v534:0, v537:0, v539:0, 0, v475:0 + (v521:0 + (1 + v377:0)) + v512:0, v521:0, v524:0, v528:0, v518:0, v519:0, v522:0, 1, v525:0, v526:0, v527:0, v529:0, 3, 4) -> f_440(v507:0, v536:1, v538:1, v513:0, v530:0, v514:0, v531:0, v515:0, v532:0, v516:0, v533:0, v517:0, v534:0, 3 + v536:1, 3 + v538:1, 0, v475:0 + (v521:0 + (1 + v377:0)), v521:0 + (1 + v377:0), v512:0, 1 + v377:0, v518:1, v519:1, v522:1, 1, v525:1, v526:1, v527:1, v529:1, 3, 4) :|: v512:0 > -1 && v325:0 > 0 && v339:0 > 0 && v601:0 < 0 && v377:0 > 0 && v377:0 + v601:0 = 0 && v536:1 > 0 && v538:1 > 0 && v475:0 > 0
f_440(v512:0, v536:0, v538:0, v513:0, v530:0, v514:0, v531:0, v515:0, v532:0, v516:0, v533:0, v517:0, v534:0, v537:0, v539:0, 0, v475:0 + (v521:0 + (1 + v380:0)) + v558:0, v521:0, v524:0, v528:0, v518:0, v519:0, v522:0, 1, v525:0, v526:0, v527:0, v529:0, 3, 4) -> f_440(v507:0, v536:1, v538:1, v513:0, v530:0, v514:0, v531:0, v515:0, v532:0, v516:0, v533:0, v517:0, v534:0, 3 + v536:1, 3 + v538:1, 0, v475:0 + (v521:0 + (1 + v380:0)), v521:0 + (1 + v380:0), v558:0, 1 + v380:0, v518:1, v519:1, v522:1, 1, v525:1, v526:1, v527:1, v529:1, 3, 4) :|: v380:0 > 0 && v341:0 > 0 && v344:0 > 0 && v512:0 < 0 && v558:0 > 0 && v558:0 + v512:0 = 0 && v536:1 > 0 && v324:0 < 0 && v538:1 > 0 && v475:0 > 0 && v380:0 + v324:0 = 0
Filtered unneeded arguments:
   f_440(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30) -> f_440(x1, x17, x18)
Removed division, modulo operations, cleaned up constraints. Obtained 4 rules.P rules:
f_440(v512:0, sum~sum~v474:0~sum~v521:0~sum~cons_1~v601:0~v512:0, v521:0) -> f_440(v504:0, v474:0 + (v521:0 + (1 + v601:0)), v521:0 + (1 + v601:0)) :|: v601:0 > -1 && v474:0 > 0 && v512:0 > -1 && sum~sum~v474:0~sum~v521:0~sum~cons_1~v601:0~v512:0 = v474:0 + (v521:0 + (1 + v601:0)) + v512:0
f_440(v512:0, sum~sum~v474:0~sum~v521:0~sum~cons_1~v324:0~v558:0, v521:0) -> f_440(v504:0, v474:0 + (v521:0 + (1 + v324:0)), v521:0 + (1 + v324:0)) :|: v474:0 > 0 && v324:0 > -1 && v512:0 < 0 && v558:0 + v512:0 = 0 && v558:0 > 0 && sum~sum~v474:0~sum~v521:0~sum~cons_1~v324:0~v558:0 = v474:0 + (v521:0 + (1 + v324:0)) + v558:0
f_440(v512:0, sum~sum~v475:0~sum~v521:0~sum~cons_1~v377:0~v512:0, v521:0) -> f_440(v507:0, v475:0 + (v521:0 + (1 + v377:0)), v521:0 + (1 + v377:0)) :|: v377:0 > 0 && v475:0 > 0 && v512:0 > -1 && sum~sum~v475:0~sum~v521:0~sum~cons_1~v377:0~v512:0 = v475:0 + (v521:0 + (1 + v377:0)) + v512:0
f_440(v512:0, sum~sum~v475:0~sum~v521:0~sum~cons_1~v380:0~v558:0, v521:0) -> f_440(v507:0, v475:0 + (v521:0 + (1 + v380:0)), v521:0 + (1 + v380:0)) :|: v512:0 < 0 && v380:0 > 0 && v558:0 > 0 && v475:0 > 0 && v558:0 + v512:0 = 0 && sum~sum~v475:0~sum~v521:0~sum~cons_1~v380:0~v558:0 = v475:0 + (v521:0 + (1 + v380:0)) + v558:0

----------------------------------------

(8)
Obligation:
Rules:
f_440(v512:0, sum~sum~v474:0~sum~v521:0~sum~cons_1~v601:0~v512:0, v521:0) -> f_440(v504:0, v474:0 + (v521:0 + (1 + v601:0)), v521:0 + (1 + v601:0)) :|: v601:0 > -1 && v474:0 > 0 && v512:0 > -1 && sum~sum~v474:0~sum~v521:0~sum~cons_1~v601:0~v512:0 = v474:0 + (v521:0 + (1 + v601:0)) + v512:0
f_440(x, x1, x2) -> f_440(x3, x4 + (x2 + (1 + x5)), x2 + (1 + x5)) :|: x4 > 0 && x5 > -1 && x < 0 && x6 + x = 0 && x6 > 0 && x1 = x4 + (x2 + (1 + x5)) + x6
f_440(x7, x8, x9) -> f_440(x10, x11 + (x9 + (1 + x12)), x9 + (1 + x12)) :|: x12 > 0 && x11 > 0 && x7 > -1 && x8 = x11 + (x9 + (1 + x12)) + x7
f_440(x13, x14, x15) -> f_440(x16, x17 + (x15 + (1 + x18)), x15 + (1 + x18)) :|: x13 < 0 && x18 > 0 && x19 > 0 && x17 > 0 && x19 + x13 = 0 && x14 = x17 + (x15 + (1 + x18)) + x19

----------------------------------------

(9) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(10)
Obligation:
Rules:
f_440(x13:0, sum~sum~x17:0~sum~x15:0~sum~cons_1~x18:0~x19:0, x15:0) -> f_440(x16:0, x17:0 + (x15:0 + (1 + x18:0)), x15:0 + (1 + x18:0)) :|: x17:0 > 0 && x19:0 + x13:0 = 0 && x19:0 > 0 && x18:0 > 0 && x13:0 < 0 && sum~sum~x17:0~sum~x15:0~sum~cons_1~x18:0~x19:0 = x17:0 + (x15:0 + (1 + x18:0)) + x19:0
f_440(v512:0:0, sum~sum~v474:0:0~sum~v521:0:0~sum~cons_1~v601:0:0~v512:0:0, v521:0:0) -> f_440(v504:0:0, v474:0:0 + (v521:0:0 + (1 + v601:0:0)), v521:0:0 + (1 + v601:0:0)) :|: v601:0:0 > -1 && v474:0:0 > 0 && v512:0:0 > -1 && sum~sum~v474:0:0~sum~v521:0:0~sum~cons_1~v601:0:0~v512:0:0 = v474:0:0 + (v521:0:0 + (1 + v601:0:0)) + v512:0:0
f_440(x7:0, sum~sum~x11:0~sum~x9:0~sum~cons_1~x12:0~x7:0, x9:0) -> f_440(x10:0, x11:0 + (x9:0 + (1 + x12:0)), x9:0 + (1 + x12:0)) :|: x12:0 > 0 && x11:0 > 0 && x7:0 > -1 && sum~sum~x11:0~sum~x9:0~sum~cons_1~x12:0~x7:0 = x11:0 + (x9:0 + (1 + x12:0)) + x7:0
f_440(x:0, sum~sum~x4:0~sum~x2:0~sum~cons_1~x5:0~x6:0, x2:0) -> f_440(x3:0, x4:0 + (x2:0 + (1 + x5:0)), x2:0 + (1 + x5:0)) :|: x6:0 + x:0 = 0 && x6:0 > 0 && x:0 < 0 && x5:0 > -1 && x4:0 > 0 && sum~sum~x4:0~sum~x2:0~sum~cons_1~x5:0~x6:0 = x4:0 + (x2:0 + (1 + x5:0)) + x6:0

----------------------------------------

(11) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_440 ] = f_440_2 + -1*f_440_3

The following rules are decreasing:
f_440(x13:0, sum~sum~x17:0~sum~x15:0~sum~cons_1~x18:0~x19:0, x15:0) -> f_440(x16:0, x17:0 + (x15:0 + (1 + x18:0)), x15:0 + (1 + x18:0)) :|: x17:0 > 0 && x19:0 + x13:0 = 0 && x19:0 > 0 && x18:0 > 0 && x13:0 < 0 && sum~sum~x17:0~sum~x15:0~sum~cons_1~x18:0~x19:0 = x17:0 + (x15:0 + (1 + x18:0)) + x19:0
f_440(v512:0:0, sum~sum~v474:0:0~sum~v521:0:0~sum~cons_1~v601:0:0~v512:0:0, v521:0:0) -> f_440(v504:0:0, v474:0:0 + (v521:0:0 + (1 + v601:0:0)), v521:0:0 + (1 + v601:0:0)) :|: v601:0:0 > -1 && v474:0:0 > 0 && v512:0:0 > -1 && sum~sum~v474:0:0~sum~v521:0:0~sum~cons_1~v601:0:0~v512:0:0 = v474:0:0 + (v521:0:0 + (1 + v601:0:0)) + v512:0:0
f_440(x7:0, sum~sum~x11:0~sum~x9:0~sum~cons_1~x12:0~x7:0, x9:0) -> f_440(x10:0, x11:0 + (x9:0 + (1 + x12:0)), x9:0 + (1 + x12:0)) :|: x12:0 > 0 && x11:0 > 0 && x7:0 > -1 && sum~sum~x11:0~sum~x9:0~sum~cons_1~x12:0~x7:0 = x11:0 + (x9:0 + (1 + x12:0)) + x7:0
f_440(x:0, sum~sum~x4:0~sum~x2:0~sum~cons_1~x5:0~x6:0, x2:0) -> f_440(x3:0, x4:0 + (x2:0 + (1 + x5:0)), x2:0 + (1 + x5:0)) :|: x6:0 + x:0 = 0 && x6:0 > 0 && x:0 < 0 && x5:0 > -1 && x4:0 > 0 && sum~sum~x4:0~sum~x2:0~sum~cons_1~x5:0~x6:0 = x4:0 + (x2:0 + (1 + x5:0)) + x6:0

The following rules are bounded:
f_440(x13:0, sum~sum~x17:0~sum~x15:0~sum~cons_1~x18:0~x19:0, x15:0) -> f_440(x16:0, x17:0 + (x15:0 + (1 + x18:0)), x15:0 + (1 + x18:0)) :|: x17:0 > 0 && x19:0 + x13:0 = 0 && x19:0 > 0 && x18:0 > 0 && x13:0 < 0 && sum~sum~x17:0~sum~x15:0~sum~cons_1~x18:0~x19:0 = x17:0 + (x15:0 + (1 + x18:0)) + x19:0
f_440(v512:0:0, sum~sum~v474:0:0~sum~v521:0:0~sum~cons_1~v601:0:0~v512:0:0, v521:0:0) -> f_440(v504:0:0, v474:0:0 + (v521:0:0 + (1 + v601:0:0)), v521:0:0 + (1 + v601:0:0)) :|: v601:0:0 > -1 && v474:0:0 > 0 && v512:0:0 > -1 && sum~sum~v474:0:0~sum~v521:0:0~sum~cons_1~v601:0:0~v512:0:0 = v474:0:0 + (v521:0:0 + (1 + v601:0:0)) + v512:0:0
f_440(x7:0, sum~sum~x11:0~sum~x9:0~sum~cons_1~x12:0~x7:0, x9:0) -> f_440(x10:0, x11:0 + (x9:0 + (1 + x12:0)), x9:0 + (1 + x12:0)) :|: x12:0 > 0 && x11:0 > 0 && x7:0 > -1 && sum~sum~x11:0~sum~x9:0~sum~cons_1~x12:0~x7:0 = x11:0 + (x9:0 + (1 + x12:0)) + x7:0
f_440(x:0, sum~sum~x4:0~sum~x2:0~sum~cons_1~x5:0~x6:0, x2:0) -> f_440(x3:0, x4:0 + (x2:0 + (1 + x5:0)), x2:0 + (1 + x5:0)) :|: x6:0 + x:0 = 0 && x6:0 > 0 && x:0 < 0 && x5:0 > -1 && x4:0 > 0 && sum~sum~x4:0~sum~x2:0~sum~cons_1~x5:0~x6:0 = x4:0 + (x2:0 + (1 + x5:0)) + x6:0


----------------------------------------

(12)
YES
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.001s
