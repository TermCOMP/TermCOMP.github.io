YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/SasDO.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could be proven:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 57 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 4413 ms]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) LLVM Symbolic Execution SCC
        (8) SCC2IRS [SOUND, 71 ms]
        (9) IntTRS
        (10) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (11) IntTRS
        (12) RankingReductionPairProof [EQUIVALENT, 8 ms]
        (13) YES
    (14) LLVM Symbolic Execution SCC
        (15) SCC2IRS [SOUND, 58 ms]
        (16) IntTRS
        (17) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (18) IntTRS
        (19) RankingReductionPairProof [EQUIVALENT, 3 ms]
        (20) YES
    (21) LLVM Symbolic Execution SCC
        (22) SCC2IRS [SOUND, 74 ms]
        (23) IntTRS
        (24) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (25) IntTRS
        (26) PolynomialOrderProcessor [EQUIVALENT, 2 ms]
        (27) YES


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/SasDO.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/SasDO.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "test_fun" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: (0 i32, 1 i32, 2 i32) variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 7
	0:
		%4 = alloca i32, align 4
		%5 = alloca i32, align 4
		%6 = alloca i32, align 4
		%7 = alloca *i32, align 8
		%8 = alloca *i32, align 8
		%9 = alloca *i32, align 8
		%10 = alloca *i32, align 8
		store %0, %4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %4)
		store %1, %5
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %5)
		store %2, %6
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %6)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i32 %7)
		%11 = alloca i8, numElementsLit: 4, align 16
		%12 = bitcast *i8 %11 to *i32
		store %12, %7
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i32 %8)
		%13 = alloca i8, numElementsLit: 4, align 16
		%14 = bitcast *i8 %13 to *i32
		store %14, %8
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i32 %9)
		%15 = alloca i8, numElementsLit: 4, align 16
		%16 = bitcast *i8 %15 to *i32
		store %16, %9
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i32 %10)
		%17 = alloca i8, numElementsLit: 4, align 16
		%18 = bitcast *i8 %17 to *i32
		store %18, %10
		%19 = load %4
		%20 = load %7
		store %19, %20
		%21 = load %5
		%22 = load %8
		store %21, %22
		%23 = load %6
		%24 = load %9
		store %23, %24
		%25 = load %10
		store 0, %25
		br %26
	26:
		%27 = load %7
		%28 = load %27
		%29 = load %9
		%30 = load %29
		%31 = icmp sgt %28 %30
		br %31, %38, %32
	32:
		%33 = load %8
		%34 = load %33
		%35 = load %9
		%36 = load %35
		%37 = icmp sgt %34 %36
		br %38
	38:
		%39 = phi [1, %26], [%37, %32]
		br %39, %40, %69
	40:
		%41 = load %7
		%42 = load %41
		%43 = load %9
		%44 = load %43
		%45 = icmp sgt %42 %44
		br %45, %46, %51
	46:
		%47 = load %7
		%48 = load %47
		%49 = sub i32 %48, 1
		%50 = load %7
		store %49, %50
		br %64
	51:
		%52 = load %8
		%53 = load %52
		%54 = load %9
		%55 = load %54
		%56 = icmp sgt %53 %55
		br %56, %57, %62
	57:
		%58 = load %8
		%59 = load %58
		%60 = sub i32 %59, 1
		%61 = load %8
		store %60, %61
		br %63
	62:
		br %63
	63:
		br %64
	64:
		%65 = load %10
		%66 = load %65
		%67 = add i32 %66, 1
		%68 = load %10
		store %67, %68
		br %26
	69:
		%70 = load %10
		%71 = load %70
		ret %71

*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 94
	0:
		%1 = alloca i32, align 4
		store 0, %1
		%2 = call i32 @__VERIFIER_nondet_int()
		%3 = call i32 @__VERIFIER_nondet_int()
		%4 = call i32 @__VERIFIER_nondet_int()
		%5 = call i32 @test_fun(i32 %2, i32 %3, i32 %4)
		ret %5


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 3 SCCs.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC
----------------------------------------

(8) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 40 rulesP rules:
f_1207(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5633, v5634, v5635, v5636, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8) -> f_1209(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5633, v5634, v5635, v5636, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8) :|: 0 = 0
f_1209(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5633, v5634, v5635, v5636, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8) -> f_1211(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5635, v5636, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8) :|: 0 = 0
f_1211(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5635, v5636, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8) -> f_1213(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5635, v5636, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) :|: v5695 = 1 + v5634 && 2 <= v5695
f_1213(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5635, v5636, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) -> f_1215(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5635, v5636, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) :|: 0 = 0
f_1215(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5635, v5636, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) -> f_1217(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5635, v5636, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) :|: TRUE
f_1217(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5635, v5636, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) -> f_1219(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5635, v5636, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) :|: TRUE
f_1219(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5635, v5636, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) -> f_1221(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5635, v5636, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) :|: 0 = 0
f_1221(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5635, v5636, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) -> f_1223(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5635, v5636, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) :|: 0 = 0
f_1223(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5635, v5636, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) -> f_1225(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5635, v5636, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) :|: 0 = 0
f_1225(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5635, v5636, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) -> f_1227(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5635, v5636, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) :|: 0 = 0
f_1227(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5635, v5636, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) -> f_1229(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5635, v5636, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) :|: 0 = 0
f_1229(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5635, v5636, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) -> f_1231(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5635, v5636, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) :|: TRUE
f_1231(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5635, v5636, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) -> f_1233(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5635, v5636, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) :|: 0 = 0
f_1233(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5635, v5636, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) -> f_1235(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) :|: 0 = 0
f_1235(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) -> f_1237(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) :|: 0 = 0
f_1237(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) -> f_1239(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) :|: 0 = 0
f_1239(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) -> f_1241(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) :|: v5618 < v5636
f_1241(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) -> f_1244(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) :|: 0 = 0
f_1244(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) -> f_1247(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) :|: 0 = 0
f_1247(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) -> f_1250(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) :|: TRUE
f_1250(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) -> f_1252(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) :|: 0 = 0
f_1252(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) -> f_1254(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) :|: 0 = 0
f_1254(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) -> f_1256(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) :|: 0 = 0
f_1256(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) -> f_1258(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) :|: 0 = 0
f_1258(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) -> f_1259(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) :|: 0 = 0
f_1259(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) -> f_1260(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) :|: TRUE
f_1260(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) -> f_1261(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) :|: 0 = 0
f_1261(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) -> f_1262(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) :|: 0 = 0
f_1262(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) -> f_1263(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) :|: 0 = 0
f_1263(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) -> f_1264(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) :|: 0 = 0
f_1264(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) -> f_1265(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) :|: 0 = 0
f_1265(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) -> f_1266(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) :|: TRUE
f_1266(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) -> f_1267(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) :|: 0 = 0
f_1267(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5635, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) -> f_1268(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) :|: 0 = 0
f_1268(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) -> f_1269(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v6293, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) :|: 1 + v6293 = v5636
f_1269(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v6293, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) -> f_1270(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v6293, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) :|: 0 = 0
f_1270(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v6293, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) -> f_1271(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v6293, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) :|: TRUE
f_1271(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v6293, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) -> f_1272(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v6293, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) :|: TRUE
f_1272(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v6293, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8, 2) -> f_1205(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5634, v5695, v5636, v6293, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8) :|: TRUE
f_1205(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5633, v5634, v5635, v5636, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8) -> f_1207(v5616, v5617, v5618, v5619, v5620, v5621, v5622, v5623, v5624, v5625, v5626, v5627, v5628, v5629, 0, 1, v5632, v5633, v5634, v5635, v5636, v5637, v5638, v5639, v5640, v5641, v5642, v5643, v5644, v5645, v5646, v5647, v5648, v5649, 3, 7, 4, 8) :|: TRUE
Combined rules. Obtained 1 rulesP rules:
f_1207(v5616:0, v5617:0, v5618:0, v5619:0, v5620:0, v5621:0, v5622:0, v5623:0, v5624:0, v5625:0, v5626:0, v5627:0, v5628:0, v5629:0, 0, 1, v5632:0, v5633:0, v5634:0, v5635:0, 1 + v6293:0, v5637:0, v5638:0, v5639:0, v5640:0, v5641:0, v5642:0, v5643:0, v5644:0, v5645:0, v5646:0, v5647:0, v5648:0, v5649:0, 3, 7, 4, 8) -> f_1207(v5616:0, v5617:0, v5618:0, v5619:0, v5620:0, v5621:0, v5622:0, v5623:0, v5624:0, v5625:0, v5626:0, v5627:0, v5628:0, v5629:0, 0, 1, v5632:0, v5634:0, 1 + v5634:0, 1 + v6293:0, v6293:0, v5637:0, v5638:0, v5639:0, v5640:0, v5641:0, v5642:0, v5643:0, v5644:0, v5645:0, v5646:0, v5647:0, v5648:0, v5649:0, 3, 7, 4, 8) :|: v5618:0 < 1 + v6293:0 && v5634:0 > 0
Filtered unneeded arguments:
   f_1207(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38) -> f_1207(x3, x19, x21)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1207(v5618:0, v5634:0, sum~cons_1~v6293:0) -> f_1207(v5618:0, 1 + v5634:0, v6293:0) :|: v5618:0 < 1 + v6293:0 && v5634:0 > 0 && sum~cons_1~v6293:0 = 1 + v6293:0

----------------------------------------

(9)
Obligation:
Rules:
f_1207(v5618:0, v5634:0, sum~cons_1~v6293:0) -> f_1207(v5618:0, 1 + v5634:0, v6293:0) :|: v5618:0 < 1 + v6293:0 && v5634:0 > 0 && sum~cons_1~v6293:0 = 1 + v6293:0

----------------------------------------

(10) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(11)
Obligation:
Rules:
f_1207(v5618:0:0, v5634:0:0, sum~cons_1~v6293:0:0) -> f_1207(v5618:0:0, 1 + v5634:0:0, v6293:0:0) :|: v5618:0:0 < 1 + v6293:0:0 && v5634:0:0 > 0 && sum~cons_1~v6293:0:0 = 1 + v6293:0:0

----------------------------------------

(12) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1207 ] = -1*f_1207_1 + f_1207_3

The following rules are decreasing:
f_1207(v5618:0:0, v5634:0:0, sum~cons_1~v6293:0:0) -> f_1207(v5618:0:0, 1 + v5634:0:0, v6293:0:0) :|: v5618:0:0 < 1 + v6293:0:0 && v5634:0:0 > 0 && sum~cons_1~v6293:0:0 = 1 + v6293:0:0

The following rules are bounded:
f_1207(v5618:0:0, v5634:0:0, sum~cons_1~v6293:0:0) -> f_1207(v5618:0:0, 1 + v5634:0:0, v6293:0:0) :|: v5618:0:0 < 1 + v6293:0:0 && v5634:0:0 > 0 && sum~cons_1~v6293:0:0 = 1 + v6293:0:0


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
SCC
----------------------------------------

(15) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 40 rulesP rules:
f_1159(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5125, 1, v5127, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) -> f_1162(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5125, 1, v5127, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) :|: 0 = 0
f_1162(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5125, 1, v5127, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) -> f_1165(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5125, 1, v5127, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) :|: 0 = 0
f_1165(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5125, 1, v5127, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) -> f_1168(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5125, 1, v5127, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) :|: 0 = 0
f_1168(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5125, 1, v5127, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) -> f_1170(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5125, 1, v5127, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) :|: 0 = 0
f_1170(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5125, 1, v5127, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) -> f_1172(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5125, 1, v5127, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) :|: TRUE
f_1172(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5125, 1, v5127, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) -> f_1174(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5125, 1, v5127, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) :|: 0 = 0
f_1174(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5125, 1, v5127, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) -> f_1176(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) :|: 0 = 0
f_1176(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) -> f_1178(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) :|: 0 = 0
f_1178(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) -> f_1180(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) :|: 0 = 0
f_1180(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) -> f_1182(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) :|: v5112 < v5127
f_1182(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) -> f_1185(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) :|: 0 = 0
f_1185(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) -> f_1188(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) :|: 0 = 0
f_1188(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) -> f_1191(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) :|: TRUE
f_1191(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) -> f_1194(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) :|: 0 = 0
f_1194(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) -> f_1197(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) :|: 0 = 0
f_1197(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) -> f_1200(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) :|: 0 = 0
f_1200(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) -> f_1203(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) :|: 0 = 0
f_1203(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) -> f_1206(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) :|: 0 = 0
f_1206(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) -> f_1208(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) :|: TRUE
f_1208(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) -> f_1210(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) :|: 0 = 0
f_1210(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) -> f_1212(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) :|: 0 = 0
f_1212(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) -> f_1214(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) :|: 0 = 0
f_1214(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) -> f_1216(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) :|: 0 = 0
f_1216(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) -> f_1218(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) :|: 0 = 0
f_1218(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) -> f_1220(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) :|: TRUE
f_1220(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) -> f_1222(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) :|: 0 = 0
f_1222(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5125, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) -> f_1224(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) :|: 0 = 0
f_1224(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) -> f_1226(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5742, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) :|: 1 + v5742 = v5127
f_1226(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5742, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) -> f_1228(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5742, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) :|: 0 = 0
f_1228(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5742, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) -> f_1230(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5742, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) :|: TRUE
f_1230(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5742, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) -> f_1232(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5742, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) :|: TRUE
f_1232(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5742, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) -> f_1234(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5742, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) :|: TRUE
f_1234(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5742, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) -> f_1236(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5742, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) :|: 0 = 0
f_1236(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5742, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) -> f_1238(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5742, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) :|: 0 = 0
f_1238(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5742, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) -> f_1240(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5742, v5129, v5837, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8, 2) :|: v5837 = 1 + v5129 && 2 <= v5837
f_1240(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5742, v5129, v5837, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8, 2) -> f_1243(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5742, v5129, v5837, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8, 2) :|: 0 = 0
f_1243(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5742, v5129, v5837, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8, 2) -> f_1246(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5742, v5129, v5837, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8, 2) :|: TRUE
f_1246(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5742, v5129, v5837, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8, 2) -> f_1249(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5742, v5129, v5837, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8, 2) :|: TRUE
f_1249(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5742, v5129, v5837, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8, 2) -> f_1156(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5127, 1, v5742, v5129, v5837, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) :|: TRUE
f_1156(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5125, 1, v5127, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) -> f_1159(v5110, v5111, v5112, v5113, v5114, v5115, v5116, v5117, v5118, v5119, v5120, v5121, v5122, v5123, 0, v5125, 1, v5127, v5128, v5129, v5130, v5131, v5132, v5133, v5134, v5135, v5136, v5137, v5138, v5139, v5140, v5141, v5142, 3, 7, 4, 8) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_1159(v5110:0, v5111:0, v5112:0, v5113:0, v5114:0, v5115:0, v5116:0, v5117:0, v5118:0, v5119:0, v5120:0, v5121:0, v5122:0, v5123:0, 0, v5125:0, 1, 1 + v5742:0, v5128:0, v5129:0, v5130:0, v5131:0, v5132:0, v5133:0, v5134:0, v5135:0, v5136:0, v5137:0, v5138:0, v5139:0, v5140:0, v5141:0, v5142:0, 3, 7, 4, 8) -> f_1159(v5110:0, v5111:0, v5112:0, v5113:0, v5114:0, v5115:0, v5116:0, v5117:0, v5118:0, v5119:0, v5120:0, v5121:0, v5122:0, v5123:0, 0, 1 + v5742:0, 1, v5742:0, v5129:0, 1 + v5129:0, v5130:0, v5131:0, v5132:0, v5133:0, v5134:0, v5135:0, v5136:0, v5137:0, v5138:0, v5139:0, v5140:0, v5141:0, v5142:0, 3, 7, 4, 8) :|: v5129:0 > 0 && v5112:0 < 1 + v5742:0
Filtered unneeded arguments:
   f_1159(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37) -> f_1159(x3, x18, x20)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1159(v5112:0, sum~cons_1~v5742:0, v5129:0) -> f_1159(v5112:0, v5742:0, 1 + v5129:0) :|: v5129:0 > 0 && v5112:0 < 1 + v5742:0 && sum~cons_1~v5742:0 = 1 + v5742:0

----------------------------------------

(16)
Obligation:
Rules:
f_1159(v5112:0, sum~cons_1~v5742:0, v5129:0) -> f_1159(v5112:0, v5742:0, 1 + v5129:0) :|: v5129:0 > 0 && v5112:0 < 1 + v5742:0 && sum~cons_1~v5742:0 = 1 + v5742:0

----------------------------------------

(17) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(18)
Obligation:
Rules:
f_1159(v5112:0:0, sum~cons_1~v5742:0:0, v5129:0:0) -> f_1159(v5112:0:0, v5742:0:0, 1 + v5129:0:0) :|: v5129:0:0 > 0 && v5112:0:0 < 1 + v5742:0:0 && sum~cons_1~v5742:0:0 = 1 + v5742:0:0

----------------------------------------

(19) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1159 ] = -1*f_1159_1 + f_1159_2

The following rules are decreasing:
f_1159(v5112:0:0, sum~cons_1~v5742:0:0, v5129:0:0) -> f_1159(v5112:0:0, v5742:0:0, 1 + v5129:0:0) :|: v5129:0:0 > 0 && v5112:0:0 < 1 + v5742:0:0 && sum~cons_1~v5742:0:0 = 1 + v5742:0:0

The following rules are bounded:
f_1159(v5112:0:0, sum~cons_1~v5742:0:0, v5129:0:0) -> f_1159(v5112:0:0, v5742:0:0, 1 + v5129:0:0) :|: v5129:0:0 > 0 && v5112:0:0 < 1 + v5742:0:0 && sum~cons_1~v5742:0:0 = 1 + v5742:0:0


----------------------------------------

(20)
YES

----------------------------------------

(21)
Obligation:
SCC
----------------------------------------

(22) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 27 rulesP rules:
f_916(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2947, 1, v2949, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) -> f_918(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v2947, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) :|: 0 = 0
f_918(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v2947, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) -> f_920(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v2947, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) :|: 0 = 0
f_920(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v2947, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) -> f_922(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v2947, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) :|: 0 = 0
f_922(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v2947, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) -> f_924(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v2947, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) :|: v2935 < v2949
f_924(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v2947, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) -> f_927(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v2947, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) :|: 0 = 0
f_927(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v2947, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) -> f_930(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v2947, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) :|: 0 = 0
f_930(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v2947, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) -> f_933(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v2947, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) :|: TRUE
f_933(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v2947, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) -> f_936(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v2947, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) :|: 0 = 0
f_936(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v2947, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) -> f_939(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v2947, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) :|: 0 = 0
f_939(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v2947, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) -> f_942(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v2947, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) :|: 0 = 0
f_942(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v2947, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) -> f_945(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v2947, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) :|: 0 = 0
f_945(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v2947, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) -> f_949(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v2947, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) :|: 0 = 0
f_949(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v2947, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) -> f_953(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v2947, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) :|: TRUE
f_953(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v2947, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) -> f_958(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v2947, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) :|: 0 = 0
f_958(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v2947, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) -> f_962(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) :|: 0 = 0
f_962(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) -> f_966(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v3349, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) :|: 1 + v3349 = v2949
f_966(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v3349, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) -> f_970(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v3349, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) :|: 0 = 0
f_970(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v3349, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) -> f_974(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v3349, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) :|: TRUE
f_974(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v3349, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) -> f_977(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v3349, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) :|: TRUE
f_977(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v3349, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) -> f_980(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v3349, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) :|: 0 = 0
f_980(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v3349, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) -> f_983(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v3349, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) :|: 0 = 0
f_983(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v3349, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) -> f_986(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v3349, v2951, v3381, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8, 2) :|: v3381 = 1 + v2951 && 2 <= v3381
f_986(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v3349, v2951, v3381, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8, 2) -> f_989(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v3349, v2951, v3381, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8, 2) :|: 0 = 0
f_989(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v3349, v2951, v3381, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8, 2) -> f_992(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v3349, v2951, v3381, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8, 2) :|: TRUE
f_992(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v3349, v2951, v3381, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8, 2) -> f_996(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v3349, v2951, v3381, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8, 2) :|: TRUE
f_996(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v3349, v2951, v3381, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8, 2) -> f_914(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2949, 1, v3349, v2951, v3381, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) :|: TRUE
f_914(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2947, 1, v2949, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) -> f_916(v2933, v2934, v2935, v2936, v2937, v2938, v2939, v2940, v2941, v2942, v2943, v2944, v2945, v2946, v2947, 1, v2949, v2950, v2951, v2952, v2953, v2954, v2955, v2956, v2957, v2958, v2959, v2960, v2961, v2962, v2963, v2964, 0, 3, 7, 4, 8) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_916(v2933:0, v2934:0, v2935:0, v2936:0, v2937:0, v2938:0, v2939:0, v2940:0, v2941:0, v2942:0, v2943:0, v2944:0, v2945:0, v2946:0, v2947:0, 1, 1 + v3349:0, v2950:0, v2951:0, v2952:0, v2953:0, v2954:0, v2955:0, v2956:0, v2957:0, v2958:0, v2959:0, v2960:0, v2961:0, v2962:0, v2963:0, v2964:0, 0, 3, 7, 4, 8) -> f_916(v2933:0, v2934:0, v2935:0, v2936:0, v2937:0, v2938:0, v2939:0, v2940:0, v2941:0, v2942:0, v2943:0, v2944:0, v2945:0, v2946:0, 1 + v3349:0, 1, v3349:0, v2951:0, 1 + v2951:0, v2952:0, v2953:0, v2954:0, v2955:0, v2956:0, v2957:0, v2958:0, v2959:0, v2960:0, v2961:0, v2962:0, v2963:0, v2964:0, 0, 3, 7, 4, 8) :|: v2951:0 > 0 && v2935:0 < 1 + v3349:0
Filtered unneeded arguments:
   f_916(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37) -> f_916(x3, x17, x19)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_916(v2935:0, sum~cons_1~v3349:0, v2951:0) -> f_916(v2935:0, v3349:0, 1 + v2951:0) :|: v2951:0 > 0 && v2935:0 < 1 + v3349:0 && sum~cons_1~v3349:0 = 1 + v3349:0

----------------------------------------

(23)
Obligation:
Rules:
f_916(v2935:0, sum~cons_1~v3349:0, v2951:0) -> f_916(v2935:0, v3349:0, 1 + v2951:0) :|: v2951:0 > 0 && v2935:0 < 1 + v3349:0 && sum~cons_1~v3349:0 = 1 + v3349:0

----------------------------------------

(24) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(25)
Obligation:
Rules:
f_916(v2935:0:0, sum~cons_1~v3349:0:0, v2951:0:0) -> f_916(v2935:0:0, v3349:0:0, 1 + v2951:0:0) :|: v2951:0:0 > 0 && v2935:0:0 < 1 + v3349:0:0 && sum~cons_1~v3349:0:0 = 1 + v3349:0:0

----------------------------------------

(26) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_916(x, x1, x2)] = -x + x1

The following rules are decreasing:
f_916(v2935:0:0, sum~cons_1~v3349:0:0, v2951:0:0) -> f_916(v2935:0:0, v3349:0:0, 1 + v2951:0:0) :|: v2951:0:0 > 0 && v2935:0:0 < 1 + v3349:0:0 && sum~cons_1~v3349:0:0 = 1 + v3349:0:0
The following rules are bounded:
f_916(v2935:0:0, sum~cons_1~v3349:0:0, v2951:0:0) -> f_916(v2935:0:0, v3349:0:0, 1 + v2951:0:0) :|: v2951:0:0 > 0 && v2935:0:0 < 1 + v3349:0:0 && sum~cons_1~v3349:0:0 = 1 + v3349:0:0

----------------------------------------

(27)
YES
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.001s
