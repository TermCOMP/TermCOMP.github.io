YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/IQ3fr.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could be proven:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 19 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 6615 ms]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) LLVM Symbolic Execution SCC
        (8) SCC2IRS [SOUND, 271 ms]
        (9) IntTRS
        (10) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (11) IntTRS
        (12) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (13) AND
            (14) IntTRS
                (15) TerminationGraphProcessor [EQUIVALENT, 27 ms]
                (16) AND
                    (17) IntTRS
                        (18) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                        (19) IntTRS
                        (20) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                        (21) IntTRS
                        (22) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
                        (23) YES
                    (24) IntTRS
                        (25) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                        (26) IntTRS
                        (27) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                        (28) IntTRS
                        (29) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
                        (30) YES
                    (31) IntTRS
                        (32) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                        (33) IntTRS
                        (34) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                        (35) IntTRS
                        (36) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
                        (37) YES
                    (38) IntTRS
                        (39) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                        (40) IntTRS
                        (41) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                        (42) IntTRS
                        (43) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
                        (44) YES
            (45) IntTRS
                (46) TerminationGraphProcessor [EQUIVALENT, 35 ms]
                (47) AND
                    (48) IntTRS
                        (49) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                        (50) IntTRS
                        (51) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                        (52) IntTRS
                        (53) PolynomialOrderProcessor [EQUIVALENT, 2 ms]
                        (54) YES
                    (55) IntTRS
                        (56) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                        (57) IntTRS
                        (58) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                        (59) IntTRS
                        (60) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
                        (61) YES
                    (62) IntTRS
                        (63) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                        (64) IntTRS
                        (65) RankingReductionPairProof [EQUIVALENT, 21 ms]
                        (66) IntTRS
                        (67) TerminationGraphProcessor [EQUIVALENT, 15 ms]
                        (68) AND
                            (69) IntTRS
                                (70) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                                (71) IntTRS
                                (72) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                                (73) IntTRS
                                (74) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
                                (75) YES
                            (76) IntTRS
                                (77) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                                (78) IntTRS
                                (79) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                                (80) IntTRS
                                (81) PolynomialOrderProcessor [EQUIVALENT, 5 ms]
                                (82) AND
                                    (83) IntTRS
                                        (84) TerminationGraphProcessor [EQUIVALENT, 8 ms]
                                        (85) AND
                                            (86) IntTRS
                                                (87) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                                                (88) IntTRS
                                                (89) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                                                (90) IntTRS
                                                (91) RankingReductionPairProof [EQUIVALENT, 1 ms]
                                                (92) YES
                                            (93) IntTRS
                                                (94) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                                                (95) IntTRS
                                                (96) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                                                (97) IntTRS
                                                (98) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
                                                (99) YES
                                            (100) IntTRS
                                                (101) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                                                (102) IntTRS
                                                (103) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                                                (104) IntTRS
                                                (105) PolynomialOrderProcessor [EQUIVALENT, 1 ms]
                                                (106) YES
                                    (107) IntTRS
                                        (108) TerminationGraphProcessor [EQUIVALENT, 4 ms]
                                        (109) AND
                                            (110) IntTRS
                                                (111) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                                                (112) IntTRS
                                                (113) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                                                (114) IntTRS
                                                (115) RankingReductionPairProof [EQUIVALENT, 0 ms]
                                                (116) YES
                                            (117) IntTRS
                                                (118) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                                                (119) IntTRS
                                                (120) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                                                (121) IntTRS
                                                (122) RankingReductionPairProof [EQUIVALENT, 0 ms]
                                                (123) YES
                                            (124) IntTRS
                                                (125) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                                                (126) IntTRS
                                                (127) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                                                (128) IntTRS
                                                (129) RankingReductionPairProof [EQUIVALENT, 0 ms]
                                                (130) YES
    (131) LLVM Symbolic Execution SCC
        (132) SCC2IRS [SOUND, 40 ms]
        (133) IntTRS
        (134) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (135) IntTRS
        (136) RankingReductionPairProof [EQUIVALENT, 12 ms]
        (137) YES
    (138) LLVM Symbolic Execution SCC
        (139) SCC2IRS [SOUND, 75 ms]
        (140) IntTRS
        (141) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (142) IntTRS
        (143) RankingReductionPairProof [EQUIVALENT, 0 ms]
        (144) IntTRS
        (145) TerminationGraphProcessor [EQUIVALENT, 3 ms]
        (146) IntTRS
        (147) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (148) IntTRS
        (149) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
        (150) IntTRS
        (151) RankingReductionPairProof [EQUIVALENT, 5 ms]
        (152) YES
    (153) LLVM Symbolic Execution SCC
        (154) SCC2IRS [SOUND, 36 ms]
        (155) IntTRS
        (156) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (157) IntTRS
        (158) PolynomialOrderProcessor [EQUIVALENT, 4 ms]
        (159) YES
    (160) LLVM Symbolic Execution SCC
        (161) SCC2IRS [SOUND, 64 ms]
        (162) IntTRS
        (163) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (164) IntTRS
        (165) RankingReductionPairProof [EQUIVALENT, 9 ms]
        (166) IntTRS
        (167) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (168) IntTRS
        (169) RankingReductionPairProof [EQUIVALENT, 3 ms]
        (170) YES
    (171) LLVM Symbolic Execution SCC
        (172) SCC2IRS [SOUND, 35 ms]
        (173) IntTRS
        (174) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (175) IntTRS
        (176) RankingReductionPairProof [EQUIVALENT, 2 ms]
        (177) YES
    (178) LLVM Symbolic Execution SCC
        (179) SCC2IRS [SOUND, 13 ms]
        (180) IntTRS
        (181) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (182) IntTRS
        (183) RankingReductionPairProof [EQUIVALENT, 3 ms]
        (184) YES
    (185) LLVM Symbolic Execution SCC
        (186) SCC2IRS [SOUND, 46 ms]
        (187) IntTRS
        (188) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (189) IntTRS
        (190) PolynomialOrderProcessor [EQUIVALENT, 13 ms]
        (191) AND
            (192) IntTRS
                (193) TerminationGraphProcessor [EQUIVALENT, 2 ms]
                (194) IntTRS
                (195) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                (196) IntTRS
                (197) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                (198) IntTRS
                (199) RankingReductionPairProof [EQUIVALENT, 1 ms]
                (200) YES
            (201) IntTRS
                (202) TerminationGraphProcessor [EQUIVALENT, 5 ms]
                (203) AND
                    (204) IntTRS
                        (205) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                        (206) IntTRS
                        (207) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                        (208) IntTRS
                        (209) RankingReductionPairProof [EQUIVALENT, 0 ms]
                        (210) YES
                    (211) IntTRS
                        (212) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                        (213) IntTRS
                        (214) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                        (215) IntTRS
                        (216) RankingReductionPairProof [EQUIVALENT, 0 ms]
                        (217) YES
    (218) LLVM Symbolic Execution SCC
        (219) SCC2IRS [SOUND, 99 ms]
        (220) IntTRS
        (221) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (222) IntTRS
        (223) PolynomialOrderProcessor [EQUIVALENT, 21 ms]
        (224) AND
            (225) IntTRS
                (226) TerminationGraphProcessor [EQUIVALENT, 5 ms]
                (227) IntTRS
                (228) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                (229) IntTRS
                (230) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                (231) IntTRS
                (232) PolynomialOrderProcessor [EQUIVALENT, 1 ms]
                (233) YES
            (234) IntTRS
                (235) TerminationGraphProcessor [EQUIVALENT, 7 ms]
                (236) IntTRS
                (237) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                (238) IntTRS
                (239) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                (240) IntTRS
                (241) RankingReductionPairProof [EQUIVALENT, 2 ms]
                (242) YES
    (243) LLVM Symbolic Execution SCC
        (244) SCC2IRS [SOUND, 45 ms]
        (245) IntTRS
        (246) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (247) IntTRS
        (248) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (249) YES
    (250) LLVM Symbolic Execution SCC
        (251) SCC2IRS [SOUND, 37 ms]
        (252) IntTRS
        (253) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (254) IntTRS
        (255) RankingReductionPairProof [EQUIVALENT, 2 ms]
        (256) YES
    (257) LLVM Symbolic Execution SCC
        (258) SCC2IRS [SOUND, 23 ms]
        (259) IntTRS
        (260) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (261) IntTRS
        (262) RankingReductionPairProof [EQUIVALENT, 2 ms]
        (263) YES
    (264) LLVM Symbolic Execution SCC
        (265) SCC2IRS [SOUND, 26 ms]
        (266) IntTRS
        (267) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (268) IntTRS
        (269) PolynomialOrderProcessor [EQUIVALENT, 3 ms]
        (270) YES
    (271) LLVM Symbolic Execution SCC
        (272) SCC2IRS [SOUND, 8 ms]
        (273) IntTRS
        (274) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (275) IntTRS
        (276) PolynomialOrderProcessor [EQUIVALENT, 1 ms]
        (277) YES


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/IQ3fr.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/IQ3fr.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 7
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		%3 = alloca i32, align 4
		%4 = alloca i32, align 4
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %4)
		%5 = call i32 @__VERIFIER_nondet_int()
		store %5, %4
		%6 = call i32 @__VERIFIER_nondet_int()
		store %6, %2
		%7 = call i32 @__VERIFIER_nondet_int()
		store %7, %3
		br %8
	8:
		%9 = load %2
		%10 = icmp sge %9 0
		br %10, %11, %39
	11:
		br %12
	12:
		%13 = load %3
		%14 = icmp sge %13 0
		br %14, %15, %18
	15:
		%16 = call i32 @__VERIFIER_nondet_int()
		%17 = icmp ne %16 0
		br %18
	18:
		%19 = phi [0, %12], [%17, %15]
		br %19, %20, %23
	20:
		%21 = load %3
		%22 = sub i32 %21, 1
		store %22, %3
		br %12
	23:
		%24 = load %2
		%25 = sub i32 %24, 1
		store %25, %2
		br %26
	26:
		%27 = load %3
		%28 = load %4
		%29 = icmp sle %27 %28
		br %29, %30, %33
	30:
		%31 = call i32 @__VERIFIER_nondet_int()
		%32 = icmp ne %31 0
		br %33
	33:
		%34 = phi [0, %26], [%32, %30]
		br %34, %35, %38
	35:
		%36 = load %3
		%37 = add i32 %36, 1
		store %37, %3
		br %26
	38:
		br %8
	39:
		ret 0


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 14 SCCs.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC
----------------------------------------

(8) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 258 rulesP rules:
f_3364(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116617, v116616, v116615, v116618, v116619, v116620, v116621, 3, 4) -> f_3380(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116617, v116616, v116615, v116618, v116619, v116620, v116621, 3, 4) :|: 0 = 0
f_3380(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116617, v116616, v116615, v116618, v116619, v116620, v116621, 3, 4) -> f_3390(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116617, v116616, v116615, v116618, v116619, v116620, v116621, 3, 4) :|: v116617 <= v116606 && 0 <= v116606
f_3380(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116617, v116616, v116615, v116618, v116619, v116620, v116621, 3, 4) -> f_3391(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116617, v116616, v116618, v116619, v116620, v116621, 3, 4) :|: v116606 < v116617 && v116615 = v116606
f_3390(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116617, v116616, v116615, v116618, v116619, v116620, v116621, 3, 4) -> f_3402(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116617, v116616, v116615, v116618, v116619, v116620, v116621, 3, 4) :|: 0 = 0
f_3402(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116617, v116616, v116615, v116618, v116619, v116620, v116621, 3, 4) -> f_3415(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116617, v116616, v116615, v116618, v116619, v116620, v116621, 3, 4) :|: TRUE
f_3415(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116617, v116616, v116615, v116618, v116619, v116620, v116621, 3, 4) -> f_3427(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116617, v122410, v116615, v116618, v116619, v116620, v116621, 3, 4) :|: TRUE
f_3427(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116617, v122410, v116615, v116618, v116619, v116620, v116621, 3, 4) -> f_3438(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116617, v122410, v116615, v116618, v116619, v116620, v116621, 3, 4) :|: v122410 != 0
f_3427(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116617, v122410, v116615, v116618, v116619, v116620, v116621, 3, 4) -> f_3439(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116617, v116615, v116618, v116619, v116620, v116621, 3, 4) :|: v122410 = 0
f_3438(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116617, v122410, v116615, v116618, v116619, v116620, v116621, 3, 4) -> f_3455(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116617, v122410, v116615, v116618, v116619, v116620, v116621, 3, 4) :|: 0 = 0
f_3455(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116617, v122410, v116615, v116618, v116619, v116620, v116621, 3, 4) -> f_3472(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116617, v122410, v116615, v116618, v116619, v116620, v116621, 3, 4) :|: 0 = 0
f_3472(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116617, v122410, v116615, v116618, v116619, v116620, v116621, 3, 4) -> f_3473(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116617, v122410, v116615, v116617, v116618, v116619, v116620, v116621, 3, 4) :|: TRUE
f_3473(v123735, v123736, v123737, v123738, v123739, v123740, v123741, v123742, 1, -1, 0, v123746, v123747, v123748, v123749, v123750, v123751, v123752, v123753, v123754, v123755, 3, 4) -> f_3491(v123735, v123736, v123737, v123738, v123739, v123740, v123741, v123742, 1, -1, 0, v123746, v123747, v123748, v123749, v123750, v123751, v123752, v123753, v123754, v123755, 3, 4) :|: TRUE
f_3491(v123735, v123736, v123737, v123738, v123739, v123740, v123741, v123742, 1, -1, 0, v123746, v123747, v123748, v123749, v123750, v123751, v123752, v123753, v123754, v123755, 3, 4) -> f_3503(v123735, v123736, v123737, v123738, v123739, v123740, v123741, v123742, 1, -1, 0, v123746, v123747, v123748, v123749, v123751, v123752, v123753, v123754, v123755, 3, 4) :|: 0 = 0
f_3503(v123735, v123736, v123737, v123738, v123739, v123740, v123741, v123742, 1, -1, 0, v123746, v123747, v123748, v123749, v123751, v123752, v123753, v123754, v123755, 3, 4) -> f_3520(v123735, v123736, v123737, v123738, v123739, v123740, v123741, v123742, 1, -1, 0, v123746, v123747, v123748, v123749, v127548, v123752, v123753, v123754, v123755, 3, 4) :|: v127548 = 1 + v123748 && 0 <= v127548
f_3520(v123735, v123736, v123737, v123738, v123739, v123740, v123741, v123742, 1, -1, 0, v123746, v123747, v123748, v123749, v127548, v123752, v123753, v123754, v123755, 3, 4) -> f_3536(v123735, v123736, v123737, v123738, v123739, v123740, v123741, v123742, 1, -1, 0, v123746, v123747, v123748, v123749, v127548, v123752, v123753, v123754, v123755, 3, 4) :|: TRUE
f_3536(v123735, v123736, v123737, v123738, v123739, v123740, v123741, v123742, 1, -1, 0, v123746, v123747, v123748, v123749, v127548, v123752, v123753, v123754, v123755, 3, 4) -> f_3559(v123735, v123736, v123737, v123738, v123739, v123740, v123741, v123742, 1, -1, 0, v123746, v123747, v123748, v123749, v127548, v123752, v123753, v123754, v123755, 3, 4) :|: TRUE
f_3559(v123735, v123736, v123737, v123738, v123739, v123740, v123741, v123742, 1, -1, 0, v123746, v123747, v123748, v123749, v127548, v123752, v123753, v123754, v123755, 3, 4) -> f_3350(v123735, v123736, v123737, v123738, v123739, v123740, v123741, v123742, 1, -1, 0, v123746, v123747, v123748, v123749, v127548, v123752, v123753, v123754, v123755, 3, 4) :|: TRUE
f_3350(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116615, v116616, v116617, v116618, v116619, v116620, v116621, 3, 4) -> f_3364(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116617, v116616, v116615, v116618, v116619, v116620, v116621, 3, 4) :|: 0 = 0
f_3439(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116617, v116615, v116618, v116619, v116620, v116621, 3, 4) -> f_3456(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116617, v116615, v116618, v116619, v116620, v116621, 3, 4) :|: 0 = 0
f_3456(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116617, v116615, v116618, v116619, v116620, v116621, 3, 4) -> f_3474(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116617, v116615, v116618, v116619, v116620, v116621, 3, 4) :|: 0 = 0
f_3474(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116617, v116615, v116618, v116619, v116620, v116621, 3, 4) -> f_3898(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116617, v116615, v116617, v116618, v116619, v116620, v116621, 3, 4) :|: TRUE
f_3898(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155556, 1, -1, 0, v155560, v155561, v155562, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) -> f_3906(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155556, 1, -1, 0, v155560, v155561, v155562, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) :|: TRUE
f_3906(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155556, 1, -1, 0, v155560, v155561, v155562, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) -> f_3915(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155556, 1, -1, 0, v155560, v155561, v155562, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) :|: TRUE
f_3915(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155556, 1, -1, 0, v155560, v155561, v155562, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) -> f_3924(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, -1, 0, v155560, v155556, v155562, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) :|: 0 = 0
f_3924(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, -1, 0, v155560, v155556, v155562, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) -> f_3930(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, -1, 0, v155560, v155556, v155562, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) :|: 0 <= v155561 && 1 <= v155556 && 1 <= v155554
f_3930(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, -1, 0, v155560, v155556, v155562, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) -> f_3937(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, -1, 0, v155560, v155556, v155562, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) :|: 0 = 0
f_3937(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, -1, 0, v155560, v155556, v155562, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) -> f_3945(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, -1, 0, v155560, v155556, v155562, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) :|: TRUE
f_3945(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, -1, 0, v155560, v155556, v155562, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) -> f_3954(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, -1, 0, v155560, v155556, v155562, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) :|: TRUE
f_3954(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, -1, 0, v155560, v155556, v155562, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) -> f_3959(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, v155562, 0, v155560, -1, v155556, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) :|: 0 = 0
f_3959(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, v155562, 0, v155560, -1, v155556, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) -> f_3964(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, v155562, 0, v155560, -1, v155556, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) :|: 0 <= v155562 && 0 <= v155553
f_3959(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, v155562, 0, v155560, -1, v155556, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) -> f_3965(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, -1, 0, v155560, v155556, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) :|: v155562 < 0
f_3964(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, v155562, 0, v155560, -1, v155556, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) -> f_3970(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, v155562, v155560, 0, -1, v155556, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) :|: 0 = 0
f_3970(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, v155562, v155560, 0, -1, v155556, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) -> f_3977(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, v155562, v155560, 0, -1, v155556, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) :|: TRUE
f_3977(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, v155562, v155560, 0, -1, v155556, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) -> f_3985(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, v155562, v162572, 0, -1, v155556, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) :|: TRUE
f_3985(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, v155562, v162572, 0, -1, v155556, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) -> f_3990(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, v155562, v162572, 0, -1, v155556, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) :|: v162572 != 0
f_3985(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, v155562, v162572, 0, -1, v155556, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) -> f_3991(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, v155562, 0, -1, v155556, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) :|: v162572 = 0
f_3990(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, v155562, v162572, 0, -1, v155556, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) -> f_3995(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, v155562, v162572, 0, -1, v155556, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) :|: 0 = 0
f_3995(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, v155562, v162572, 0, -1, v155556, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) -> f_4000(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, v155562, v162572, 0, -1, v155556, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) :|: 0 = 0
f_4000(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, v155562, v162572, 0, -1, v155556, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) -> f_3951(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, v155562, v155556, v155562, 0, v155563, v155564, v162572, 0, -1, v155565, v155566, v155567, v155568, 3, 4) :|: TRUE
f_3951(v159655, v159656, v159657, v159658, v159659, v159660, v159661, v159662, 1, v159664, v159665, v159666, 0, v159668, v159669, v159670, v159671, v159672, v159673, v159674, v159675, v159676, 3, 4) -> f_3957(v159655, v159656, v159657, v159658, v159659, v159660, v159661, v159662, 1, v159664, v159665, v159666, 0, v159668, v159669, v159670, v159671, v159672, v159673, v159674, v159675, v159676, 3, 4) :|: TRUE
f_3957(v159655, v159656, v159657, v159658, v159659, v159660, v159661, v159662, 1, v159664, v159665, v159666, 0, v159668, v159669, v159670, v159671, v159672, v159673, v159674, v159675, v159676, 3, 4) -> f_3962(v159655, v159656, v159657, v159658, v159659, v159660, v159661, v159662, 1, v159664, v159665, v159666, 0, v159668, v159669, v159670, v159672, v159673, v159674, v159675, v159676, 3, 4) :|: 0 = 0
f_3962(v159655, v159656, v159657, v159658, v159659, v159660, v159661, v159662, 1, v159664, v159665, v159666, 0, v159668, v159669, v159670, v159672, v159673, v159674, v159675, v159676, 3, 4) -> f_3968(v159655, v159656, v159657, v159658, v159659, v159660, v159661, v159662, 1, v159664, v159665, v159666, 0, v159668, v159669, v159670, v161158, v159673, v159674, v159675, v159676, 3, 4) :|: 1 + v161158 = v159664 && 0 <= 1 + v161158
f_3968(v159655, v159656, v159657, v159658, v159659, v159660, v159661, v159662, 1, v159664, v159665, v159666, 0, v159668, v159669, v159670, v161158, v159673, v159674, v159675, v159676, 3, 4) -> f_3975(v159655, v159656, v159657, v159658, v159659, v159660, v159661, v159662, 1, v159664, v159665, v159666, 0, v159668, v159669, v159670, v161158, v159673, v159674, v159675, v159676, 3, 4) :|: TRUE
f_3975(v159655, v159656, v159657, v159658, v159659, v159660, v159661, v159662, 1, v159664, v159665, v159666, 0, v159668, v159669, v159670, v161158, v159673, v159674, v159675, v159676, 3, 4) -> f_3983(v159655, v159656, v159657, v159658, v159659, v159660, v159661, v159662, 1, v159664, v159665, v159666, 0, v159668, v159669, v159670, v161158, v159673, v159674, v159675, v159676, 3, 4) :|: TRUE
f_3983(v159655, v159656, v159657, v159658, v159659, v159660, v159661, v159662, 1, v159664, v159665, v159666, 0, v159668, v159669, v159670, v161158, v159673, v159674, v159675, v159676, 3, 4) -> f_3760(v159655, v159656, v159657, v159658, v159659, v159660, v159661, v159662, 1, v159664, v159665, v159666, 0, v159668, v159669, v159670, v161158, v159673, v159674, v159675, v159676, 3, 4) :|: TRUE
f_3760(v140992, v140993, v140994, v140995, v140996, v140997, v140998, v140999, 1, v141001, v141002, v141003, 0, v141005, v141006, v141007, v144551, v141010, v141011, v141012, v141013, 3, 4) -> f_3768(v140992, v140993, v140994, v140995, v140996, v140997, v140998, v140999, 1, v144551, v141002, v141003, 0, v141005, v141006, v141007, v141001, v141010, v141011, v141012, v141013, 3, 4) :|: 0 = 0
f_3768(v140992, v140993, v140994, v140995, v140996, v140997, v140998, v140999, 1, v144551, v141002, v141003, 0, v141005, v141006, v141007, v141001, v141010, v141011, v141012, v141013, 3, 4) -> f_3776(v140992, v140993, v140994, v140995, v140996, v140997, v140998, v140999, 1, v144551, v141002, v141003, 0, v141005, v141006, v141007, v141001, v141010, v141011, v141012, v141013, 3, 4) :|: 0 <= v144551 && 1 <= v141001 && 1 <= v140996
f_3768(v140992, v140993, v140994, v140995, v140996, v140997, v140998, v140999, 1, v144551, v141002, v141003, 0, v141005, v141006, v141007, v141001, v141010, v141011, v141012, v141013, 3, 4) -> f_3777(v140992, v140993, v140994, v140995, v140996, v140997, v140998, v140999, 1, -1, v141002, v141003, 0, v141005, v141006, v141007, v141010, v141011, v141012, v141013, 3, 4) :|: v144551 < 0 && v141001 = 0 && 1 + v144551 = 0 && 0 = 0
f_3776(v140992, v140993, v140994, v140995, v140996, v140997, v140998, v140999, 1, v144551, v141002, v141003, 0, v141005, v141006, v141007, v141001, v141010, v141011, v141012, v141013, 3, 4) -> f_3785(v140992, v140993, v140994, v140995, v140996, v140997, v140998, v140999, 1, v144551, v141002, v141003, 0, v141005, v141006, v141007, v141001, v141010, v141011, v141012, v141013, 3, 4) :|: 0 = 0
f_3785(v140992, v140993, v140994, v140995, v140996, v140997, v140998, v140999, 1, v144551, v141002, v141003, 0, v141005, v141006, v141007, v141001, v141010, v141011, v141012, v141013, 3, 4) -> f_3796(v140992, v140993, v140994, v140995, v140996, v140997, v140998, v140999, 1, v144551, v141002, v141003, 0, v141005, v141006, v141007, v141001, v141010, v141011, v141012, v141013, 3, 4) :|: TRUE
f_3796(v140992, v140993, v140994, v140995, v140996, v140997, v140998, v140999, 1, v144551, v141002, v141003, 0, v141005, v141006, v141007, v141001, v141010, v141011, v141012, v141013, 3, 4) -> f_3808(v140992, v140993, v140994, v140995, v140996, v140997, v140998, v140999, 1, v144551, v141002, v141003, 0, v141005, v141006, v148191, v141001, v141010, v141011, v141012, v141013, 3, 4) :|: TRUE
f_3808(v140992, v140993, v140994, v140995, v140996, v140997, v140998, v140999, 1, v144551, v141002, v141003, 0, v141005, v141006, v148191, v141001, v141010, v141011, v141012, v141013, 3, 4) -> f_3820(v140992, v140993, v140994, v140995, v140996, v140997, v140998, v140999, 1, v144551, v141002, v141003, 0, v141005, v141006, v148191, v141001, v141010, v141011, v141012, v141013, 3, 4) :|: v148191 != 0
f_3808(v140992, v140993, v140994, v140995, v140996, v140997, v140998, v140999, 1, v144551, v141002, v141003, 0, v141005, v141006, v148191, v141001, v141010, v141011, v141012, v141013, 3, 4) -> f_3821(v140992, v140993, v140994, v140995, v140996, v140997, v140998, v140999, 1, v144551, v141002, v141003, 0, v141005, v141006, v141001, v141010, v141011, v141012, v141013, 3, 4) :|: v148191 = 0
f_3820(v140992, v140993, v140994, v140995, v140996, v140997, v140998, v140999, 1, v144551, v141002, v141003, 0, v141005, v141006, v148191, v141001, v141010, v141011, v141012, v141013, 3, 4) -> f_3833(v140992, v140993, v140994, v140995, v140996, v140997, v140998, v140999, 1, v144551, v141002, v141003, 0, v141005, v141006, v148191, v141001, v141010, v141011, v141012, v141013, 3, 4) :|: 0 = 0
f_3833(v140992, v140993, v140994, v140995, v140996, v140997, v140998, v140999, 1, v144551, v141002, v141003, 0, v141005, v141006, v148191, v141001, v141010, v141011, v141012, v141013, 3, 4) -> f_3846(v140992, v140993, v140994, v140995, v140996, v140997, v140998, v140999, 1, v144551, v141002, v141003, 0, v141005, v141006, v148191, v141001, v141010, v141011, v141012, v141013, 3, 4) :|: 0 = 0
f_3846(v140992, v140993, v140994, v140995, v140996, v140997, v140998, v140999, 1, v144551, v141002, v141003, 0, v141005, v141006, v148191, v141001, v141010, v141011, v141012, v141013, 3, 4) -> f_3714(v140992, v140993, v140994, v140995, v140996, v140997, v140998, v140999, 1, v144551, v141002, v141003, 0, v141005, v141006, v148191, v141001, v144551, v141010, v141011, v141012, v141013, 3, 4) :|: TRUE
f_3714(v140992, v140993, v140994, v140995, v140996, v140997, v140998, v140999, 1, v141001, v141002, v141003, 0, v141005, v141006, v141007, v141008, v141009, v141010, v141011, v141012, v141013, 3, 4) -> f_3951(v140992, v140993, v140994, v140995, v140996, v140997, v140998, v140999, 1, v141001, v141002, v141003, 0, v141005, v141006, v141007, v141008, v141009, v141010, v141011, v141012, v141013, 3, 4) :|: TRUE
f_3821(v140992, v140993, v140994, v140995, v140996, v140997, v140998, v140999, 1, v144551, v141002, v141003, 0, v141005, v141006, v141001, v141010, v141011, v141012, v141013, 3, 4) -> f_3834(v140992, v140993, v140994, v140995, v140996, v140997, v140998, v140999, 1, v144551, v141002, v141003, 0, v141005, v141006, v141001, v141010, v141011, v141012, v141013, 3, 4) :|: 0 = 0
f_3834(v140992, v140993, v140994, v140995, v140996, v140997, v140998, v140999, 1, v144551, v141002, v141003, 0, v141005, v141006, v141001, v141010, v141011, v141012, v141013, 3, 4) -> f_3847(v140992, v140993, v140994, v140995, v140996, v140997, v140998, v140999, 1, v144551, 0, v141002, v141003, v141005, v141006, v141001, v141010, v141011, v141012, v141013, 3, 4) :|: 0 = 0
f_3847(v140992, v140993, v140994, v140995, v140996, v140997, v140998, v140999, 1, v144551, 0, v141002, v141003, v141005, v141006, v141001, v141010, v141011, v141012, v141013, 3, 4) -> f_3848(v140992, v140993, v140994, v140995, v140996, v140997, v140998, v140999, 1, v144551, 0, v141002, v141003, v141005, v141006, v141001, v144551, v141010, v141011, v141012, v141013, 3, 4) :|: TRUE
f_3848(v150942, v150943, v150944, v150945, v150946, v150947, v150948, v150949, 1, v150951, 0, v150953, v150954, v150955, v150956, v150957, v150958, v150959, v150960, v150961, v150962, 3, 4) -> f_3953(v150942, v150943, v150944, v150945, v150946, v150947, v150948, v150949, 1, v150951, 0, v150953, v150954, v150955, v150956, v150957, v150958, v150959, v150960, v150961, v150962, 3, 4) :|: TRUE
f_3953(v160157, v160158, v160159, v160160, v160161, v160162, v160163, v160164, 1, v160166, 0, v160168, v160169, v160170, v160171, v160172, v160173, v160174, v160175, v160176, v160177, 3, 4) -> f_3958(v160157, v160158, v160159, v160160, v160161, v160162, v160163, v160164, 1, v160166, 0, v160168, v160169, v160170, v160171, v160172, v160173, v160174, v160175, v160176, v160177, 3, 4) :|: TRUE
f_3958(v160157, v160158, v160159, v160160, v160161, v160162, v160163, v160164, 1, v160166, 0, v160168, v160169, v160170, v160171, v160172, v160173, v160174, v160175, v160176, v160177, 3, 4) -> f_3963(v160157, v160158, v160159, v160160, v160161, v160162, v160163, v160164, 1, v160166, 0, v160169, v160170, v160171, v160172, v160173, v160174, v160175, v160176, v160177, 3, 4) :|: 0 = 0
f_3963(v160157, v160158, v160159, v160160, v160161, v160162, v160163, v160164, 1, v160166, 0, v160169, v160170, v160171, v160172, v160173, v160174, v160175, v160176, v160177, 3, 4) -> f_3969(v160157, v160158, v160159, v160160, v160161, v160162, v160163, v160164, 1, v160166, 0, v161159, v160169, v160170, v160171, v160172, v160173, v160174, v160175, v160176, v160177, 3, 4) :|: 1 + v161159 = v160164 && 0 <= 1 + v161159
f_3969(v160157, v160158, v160159, v160160, v160161, v160162, v160163, v160164, 1, v160166, 0, v161159, v160169, v160170, v160171, v160172, v160173, v160174, v160175, v160176, v160177, 3, 4) -> f_3976(v160157, v160158, v160159, v160160, v160161, v160162, v160163, v160164, 1, v160166, 0, v161159, v160169, v160170, v160171, v160172, v160173, v160174, v160175, v160176, v160177, 3, 4) :|: TRUE
f_3976(v160157, v160158, v160159, v160160, v160161, v160162, v160163, v160164, 1, v160166, 0, v161159, v160169, v160170, v160171, v160172, v160173, v160174, v160175, v160176, v160177, 3, 4) -> f_3984(v160157, v160158, v160159, v160160, v160161, v160162, v160163, v160164, 1, v160166, 0, v161159, v160169, v160170, v160171, v160172, v160173, v160174, v160175, v160176, v160177, 3, 4) :|: TRUE
f_3984(v160157, v160158, v160159, v160160, v160161, v160162, v160163, v160164, 1, v160166, 0, v161159, v160169, v160170, v160171, v160172, v160173, v160174, v160175, v160176, v160177, 3, 4) -> f_3989(v160157, v160158, v160159, v160160, v160161, v160162, v160163, v160164, 1, v160166, 0, v161159, v160170, v160171, v160172, v160173, v160174, v160175, v160176, v160177, 3, 4) :|: 0 = 0
f_3989(v160157, v160158, v160159, v160160, v160161, v160162, v160163, v160164, 1, v160166, 0, v161159, v160170, v160171, v160172, v160173, v160174, v160175, v160176, v160177, 3, 4) -> f_3994(v160157, v160158, v160159, v160160, v160161, v160162, v160163, v160164, 1, v160166, 0, v161159, v160170, v160171, v160172, v160173, v160174, v160175, v160176, v160177, 3, 4) :|: 0 = 0
f_3994(v160157, v160158, v160159, v160160, v160161, v160162, v160163, v160164, 1, v160166, 0, v161159, v160170, v160171, v160172, v160173, v160174, v160175, v160176, v160177, 3, 4) -> f_3999(v160157, v160158, v160159, v160160, v160161, v160162, v160163, v160164, 1, v160166, 0, v161159, v160170, v160171, v160172, v160173, v160174, v160175, v160176, v160177, 3, 4) :|: 0 = 0
f_3999(v160157, v160158, v160159, v160160, v160161, v160162, v160163, v160164, 1, v160166, 0, v161159, v160170, v160171, v160172, v160173, v160174, v160175, v160176, v160177, 3, 4) -> f_4004(v160157, v160158, v160159, v160160, v160161, v160162, v160163, v160164, 1, v160166, 0, v161159, v160170, v160171, v160172, v160173, v160174, v160175, v160176, v160177, 3, 4) :|: TRUE
f_4004(v160157, v160158, v160159, v160160, v160161, v160162, v160163, v160164, 1, v160166, 0, v161159, v160170, v160171, v160172, v160173, v160174, v160175, v160176, v160177, 3, 4) -> f_4007(v160157, v160158, v160159, v160160, v160161, v160162, v160163, v160164, 1, v160166, 0, v161159, v164717, v160170, v160171, v160172, v160173, v160174, v160175, v160176, v160177, 3, 4) :|: TRUE
f_4007(v160157, v160158, v160159, v160160, v160161, v160162, v160163, v160164, 1, v160166, 0, v161159, v164717, v160170, v160171, v160172, v160173, v160174, v160175, v160176, v160177, 3, 4) -> f_4010(v160157, v160158, v160159, v160160, v160161, v160162, v160163, v160164, 1, v160166, 0, v161159, v164717, v160170, v160171, v160172, v160173, v160174, v160175, v160176, v160177, 3, 4) :|: v164717 != 0
f_4007(v160157, v160158, v160159, v160160, v160161, v160162, v160163, v160164, 1, v160166, 0, v161159, v164717, v160170, v160171, v160172, v160173, v160174, v160175, v160176, v160177, 3, 4) -> f_4011(v160157, v160158, v160159, v160160, v160161, v160162, v160163, v160164, 1, v160166, 0, v161159, v160170, v160171, v160172, v160173, v160174, v160175, v160176, v160177, 3, 4) :|: v164717 = 0
f_4010(v160157, v160158, v160159, v160160, v160161, v160162, v160163, v160164, 1, v160166, 0, v161159, v164717, v160170, v160171, v160172, v160173, v160174, v160175, v160176, v160177, 3, 4) -> f_4015(v160157, v160158, v160159, v160160, v160161, v160162, v160163, v160164, 1, v160166, 0, v161159, v164717, v160170, v160171, v160172, v160173, v160174, v160175, v160176, v160177, 3, 4) :|: 0 = 0
f_4015(v160157, v160158, v160159, v160160, v160161, v160162, v160163, v160164, 1, v160166, 0, v161159, v164717, v160170, v160171, v160172, v160173, v160174, v160175, v160176, v160177, 3, 4) -> f_4020(v160157, v160158, v160159, v160160, v160161, v160162, v160163, v160164, 1, v160166, 0, v161159, v164717, v160170, v160171, v160172, v160173, v160174, v160175, v160176, v160177, 3, 4) :|: 0 = 0
f_4020(v160157, v160158, v160159, v160160, v160161, v160162, v160163, v160164, 1, v160166, 0, v161159, v164717, v160170, v160171, v160172, v160173, v160174, v160175, v160176, v160177, 3, 4) -> f_4021(v160157, v160158, v160159, v160160, v160161, v160162, v160163, v160164, 1, v160166, 0, v160172, v160173, v161159, v160166, v164717, v160170, v160171, v160174, v160175, v160176, v160177, 3, 4) :|: TRUE
f_4021(v165054, v165055, v165056, v165057, v165058, v165059, v165060, v165061, 1, v165063, 0, v165065, v165066, v165067, v165068, v165069, v165070, v165071, v165072, v165073, v165074, v165075, 3, 4) -> f_4027(v165054, v165055, v165056, v165057, v165058, v165059, v165060, v165061, 1, v165063, 0, v165065, v165066, v165067, v165068, v165069, v165070, v165071, v165072, v165073, v165074, v165075, 3, 4) :|: TRUE
f_4027(v165054, v165055, v165056, v165057, v165058, v165059, v165060, v165061, 1, v165063, 0, v165065, v165066, v165067, v165068, v165069, v165070, v165071, v165072, v165073, v165074, v165075, 3, 4) -> f_4031(v165054, v165055, v165056, v165057, v165058, v165059, v165060, v165061, 1, v165063, 0, v165065, v165066, v165067, v165068, v165069, v165071, v165072, v165073, v165074, v165075, 3, 4) :|: 0 = 0
f_4031(v165054, v165055, v165056, v165057, v165058, v165059, v165060, v165061, 1, v165063, 0, v165065, v165066, v165067, v165068, v165069, v165071, v165072, v165073, v165074, v165075, 3, 4) -> f_4035(v165054, v165055, v165056, v165057, v165058, v165059, v165060, v165061, 1, v165063, 0, v165065, v165066, v165067, v165068, v165069, v166783, v165072, v165073, v165074, v165075, 3, 4) :|: v166783 = 1 + v165068 && 1 <= v166783
f_4035(v165054, v165055, v165056, v165057, v165058, v165059, v165060, v165061, 1, v165063, 0, v165065, v165066, v165067, v165068, v165069, v166783, v165072, v165073, v165074, v165075, 3, 4) -> f_4039(v165054, v165055, v165056, v165057, v165058, v165059, v165060, v165061, 1, v165063, 0, v165065, v165066, v165067, v165068, v165069, v166783, v165072, v165073, v165074, v165075, 3, 4) :|: TRUE
f_4039(v165054, v165055, v165056, v165057, v165058, v165059, v165060, v165061, 1, v165063, 0, v165065, v165066, v165067, v165068, v165069, v166783, v165072, v165073, v165074, v165075, 3, 4) -> f_4044(v165054, v165055, v165056, v165057, v165058, v165059, v165060, v165061, 1, v165063, 0, v165065, v165066, v165067, v165068, v165069, v166783, v165072, v165073, v165074, v165075, 3, 4) :|: TRUE
f_4044(v165054, v165055, v165056, v165057, v165058, v165059, v165060, v165061, 1, v165063, 0, v165065, v165066, v165067, v165068, v165069, v166783, v165072, v165073, v165074, v165075, 3, 4) -> f_3875(v165054, v165055, v165056, v165057, v165058, v165059, v165060, v165061, 1, v165063, 0, v165065, v165066, v165067, v165068, v165069, v166783, v165072, v165073, v165074, v165075, 3, 4) :|: TRUE
f_3875(v153598, v153599, v153600, v153601, v153602, v153603, v153604, v153605, 1, v153607, 0, v153609, v153610, v153611, v153612, v153613, v153614, v153615, v153616, v153617, v153618, 3, 4) -> f_3883(v153598, v153599, v153600, v153601, v153602, v153603, v153604, v153605, 1, v153607, 0, v153609, v153610, v153611, v153614, v153613, v153612, v153615, v153616, v153617, v153618, 3, 4) :|: 0 = 0
f_3883(v153598, v153599, v153600, v153601, v153602, v153603, v153604, v153605, 1, v153607, 0, v153609, v153610, v153611, v153614, v153613, v153612, v153615, v153616, v153617, v153618, 3, 4) -> f_3891(v153598, v153599, v153600, v153601, v153602, v153603, v153604, v153605, 1, v153607, 0, v153609, v153610, v153611, v153614, v153613, v153612, v153615, v153616, v153617, v153618, 3, 4) :|: 0 = 0
f_3891(v153598, v153599, v153600, v153601, v153602, v153603, v153604, v153605, 1, v153607, 0, v153609, v153610, v153611, v153614, v153613, v153612, v153615, v153616, v153617, v153618, 3, 4) -> f_3899(v153598, v153599, v153600, v153601, v153602, v153603, v153604, v153605, 1, v153607, 0, v153609, v153610, v153611, v153614, v153613, v153612, v153615, v153616, v153617, v153618, 3, 4) :|: v153614 <= v153602 && 1 <= v153602
f_3891(v153598, v153599, v153600, v153601, v153602, v153603, v153604, v153605, 1, v153607, 0, v153609, v153610, v153611, v153614, v153613, v153612, v153615, v153616, v153617, v153618, 3, 4) -> f_3900(v153598, v153599, v153600, v153601, v153602, v153603, v153604, v153605, 1, v153607, 0, v153609, v153610, v153611, v153614, v153613, v153615, v153616, v153617, v153618, 3, 4) :|: v153602 < v153614 && v153612 = v153602
f_3899(v153598, v153599, v153600, v153601, v153602, v153603, v153604, v153605, 1, v153607, 0, v153609, v153610, v153611, v153614, v153613, v153612, v153615, v153616, v153617, v153618, 3, 4) -> f_3907(v153598, v153599, v153600, v153601, v153602, v153603, v153604, v153605, 1, v153607, 0, v153609, v153610, v153611, v153614, v153613, v153612, v153615, v153616, v153617, v153618, 3, 4) :|: 0 = 0
f_3907(v153598, v153599, v153600, v153601, v153602, v153603, v153604, v153605, 1, v153607, 0, v153609, v153610, v153611, v153614, v153613, v153612, v153615, v153616, v153617, v153618, 3, 4) -> f_3916(v153598, v153599, v153600, v153601, v153602, v153603, v153604, v153605, 1, v153607, 0, v153609, v153610, v153611, v153614, v153613, v153612, v153615, v153616, v153617, v153618, 3, 4) :|: TRUE
f_3916(v153598, v153599, v153600, v153601, v153602, v153603, v153604, v153605, 1, v153607, 0, v153609, v153610, v153611, v153614, v153613, v153612, v153615, v153616, v153617, v153618, 3, 4) -> f_3925(v153598, v153599, v153600, v153601, v153602, v153603, v153604, v153605, 1, v153607, 0, v153609, v153610, v153611, v153614, v157570, v153612, v153615, v153616, v153617, v153618, 3, 4) :|: TRUE
f_3925(v153598, v153599, v153600, v153601, v153602, v153603, v153604, v153605, 1, v153607, 0, v153609, v153610, v153611, v153614, v157570, v153612, v153615, v153616, v153617, v153618, 3, 4) -> f_3932(v153598, v153599, v153600, v153601, v153602, v153603, v153604, v153605, 1, v153607, 0, v153609, v153610, v153611, v153614, v157570, v153612, v153615, v153616, v153617, v153618, 3, 4) :|: v157570 != 0
f_3925(v153598, v153599, v153600, v153601, v153602, v153603, v153604, v153605, 1, v153607, 0, v153609, v153610, v153611, v153614, v157570, v153612, v153615, v153616, v153617, v153618, 3, 4) -> f_3933(v153598, v153599, v153600, v153601, v153602, v153603, v153604, v153605, 1, v153607, 0, v153609, v153610, v153611, v153614, v153612, v153615, v153616, v153617, v153618, 3, 4) :|: v157570 = 0
f_3932(v153598, v153599, v153600, v153601, v153602, v153603, v153604, v153605, 1, v153607, 0, v153609, v153610, v153611, v153614, v157570, v153612, v153615, v153616, v153617, v153618, 3, 4) -> f_3939(v153598, v153599, v153600, v153601, v153602, v153603, v153604, v153605, 1, v153607, 0, v153609, v153610, v153611, v153614, v157570, v153612, v153615, v153616, v153617, v153618, 3, 4) :|: 0 = 0
f_3939(v153598, v153599, v153600, v153601, v153602, v153603, v153604, v153605, 1, v153607, 0, v153609, v153610, v153611, v153614, v157570, v153612, v153615, v153616, v153617, v153618, 3, 4) -> f_3947(v153598, v153599, v153600, v153601, v153602, v153603, v153604, v153605, 1, v153607, 0, v153609, v153610, v153611, v153614, v157570, v153612, v153615, v153616, v153617, v153618, 3, 4) :|: 0 = 0
f_3947(v153598, v153599, v153600, v153601, v153602, v153603, v153604, v153605, 1, v153607, 0, v153609, v153610, v153611, v153614, v157570, v153612, v153615, v153616, v153617, v153618, 3, 4) -> f_3948(v153598, v153599, v153600, v153601, v153602, v153603, v153604, v153605, 1, v153607, 0, v153609, v153610, v153611, v153614, v157570, v153612, v153614, v153615, v153616, v153617, v153618, 3, 4) :|: TRUE
f_3948(v159114, v159115, v159116, v159117, v159118, v159119, v159120, v159121, 1, v159123, 0, v159125, v159126, v159127, v159128, v159129, v159130, v159131, v159132, v159133, v159134, v159135, 3, 4) -> f_4021(v159114, v159115, v159116, v159117, v159118, v159119, v159120, v159121, 1, v159123, 0, v159125, v159126, v159127, v159128, v159129, v159130, v159131, v159132, v159133, v159134, v159135, 3, 4) :|: TRUE
f_3933(v153598, v153599, v153600, v153601, v153602, v153603, v153604, v153605, 1, v153607, 0, v153609, v153610, v153611, v153614, v153612, v153615, v153616, v153617, v153618, 3, 4) -> f_3940(v153598, v153599, v153600, v153601, v153602, v153603, v153604, v153605, 1, v153607, 0, v153609, v153610, v153611, v153614, v153612, v153615, v153616, v153617, v153618, 3, 4) :|: 0 = 0
f_3940(v153598, v153599, v153600, v153601, v153602, v153603, v153604, v153605, 1, v153607, 0, v153609, v153610, v153611, v153614, v153612, v153615, v153616, v153617, v153618, 3, 4) -> f_3949(v153598, v153599, v153600, v153601, v153602, v153603, v153604, v153605, 1, v153607, 0, v153609, v153610, v153611, v153614, v153612, v153615, v153616, v153617, v153618, 3, 4) :|: 0 = 0
f_3949(v153598, v153599, v153600, v153601, v153602, v153603, v153604, v153605, 1, v153607, 0, v153609, v153610, v153611, v153614, v153612, v153615, v153616, v153617, v153618, 3, 4) -> f_3956(v153598, v153599, v153600, v153601, v153602, v153603, v153604, v153605, 1, v153607, 0, v153609, v153610, v153611, v153614, v153612, v153615, v153616, v153617, v153618, 3, 4) :|: TRUE
f_3956(v153598, v153599, v153600, v153601, v153602, v153603, v153604, v153605, 1, v153607, 0, v153609, v153610, v153611, v153614, v153612, v153615, v153616, v153617, v153618, 3, 4) -> f_4029(v153598, v153599, v153600, v153601, v153602, v153603, v153604, v153605, 1, v153607, 0, v153609, v153610, v153611, v153614, v153612, v153614, v153615, v153616, v153617, v153618, 3, 4) :|: TRUE
f_4029(v166557, v166558, v166559, v166560, v166561, v166562, v166563, v166564, 1, v166566, 0, v166568, v166569, v166570, v166571, v166572, v166573, v166574, v166575, v166576, v166577, 3, 4) -> f_4032(v166557, v166558, v166559, v166560, v166561, v166562, v166563, v166564, 1, v166566, 0, v166568, v166569, v166570, v166571, v166572, v166573, v166574, v166575, v166576, v166577, 3, 4) :|: TRUE
f_4032(v166557, v166558, v166559, v166560, v166561, v166562, v166563, v166564, 1, v166566, 0, v166568, v166569, v166570, v166571, v166572, v166573, v166574, v166575, v166576, v166577, 3, 4) -> f_4036(v166557, v166558, v166559, v166560, v166561, v166562, v166563, v166570, 1, v166566, 0, v166568, v166569, v166564, v166571, v166572, v166573, v166574, v166575, v166576, v166577, 3, 4) :|: 0 = 0
f_4036(v166557, v166558, v166559, v166560, v166561, v166562, v166563, v166570, 1, v166566, 0, v166568, v166569, v166564, v166571, v166572, v166573, v166574, v166575, v166576, v166577, 3, 4) -> f_4040(v166557, v166558, v166559, v166560, v166561, v166562, v166563, v166570, 1, v166566, 0, v166568, v166569, v166564, v166571, v166572, v166573, v166574, v166575, v166576, v166577, 3, 4) :|: 0 <= v166570 && 1 <= v166564 && 1 <= v166562
f_4040(v166557, v166558, v166559, v166560, v166561, v166562, v166563, v166570, 1, v166566, 0, v166568, v166569, v166564, v166571, v166572, v166573, v166574, v166575, v166576, v166577, 3, 4) -> f_4045(v166557, v166558, v166559, v166560, v166561, v166562, v166563, v166570, 1, v166566, 0, v166568, v166569, v166564, v166571, v166572, v166573, v166574, v166575, v166576, v166577, 3, 4) :|: 0 = 0
f_4045(v166557, v166558, v166559, v166560, v166561, v166562, v166563, v166570, 1, v166566, 0, v166568, v166569, v166564, v166571, v166572, v166573, v166574, v166575, v166576, v166577, 3, 4) -> f_4047(v166557, v166558, v166559, v166560, v166561, v166562, v166563, v166570, 1, v166566, 0, v166568, v166569, v166564, v166571, v166572, v166573, v166574, v166575, v166576, v166577, 3, 4) :|: TRUE
f_4047(v166557, v166558, v166559, v166560, v166561, v166562, v166563, v166570, 1, v166566, 0, v166568, v166569, v166564, v166571, v166572, v166573, v166574, v166575, v166576, v166577, 3, 4) -> f_4049(v166557, v166558, v166559, v166560, v166561, v166562, v166563, v166570, 1, v166566, 0, v166568, v166569, v166564, v166571, v166572, v166573, v166574, v166575, v166576, v166577, 3, 4) :|: TRUE
f_4049(v166557, v166558, v166559, v166560, v166561, v166562, v166563, v166570, 1, v166566, 0, v166568, v166569, v166564, v166571, v166572, v166573, v166574, v166575, v166576, v166577, 3, 4) -> f_4050(v166557, v166558, v166559, v166560, v166561, v166562, v166563, v166570, 1, v166571, 0, v166568, v166569, v166564, v166572, v166573, v166574, v166575, v166576, v166577, 3, 4) :|: 0 = 0
f_4050(v166557, v166558, v166559, v166560, v166561, v166562, v166563, v166570, 1, v166571, 0, v166568, v166569, v166564, v166572, v166573, v166574, v166575, v166576, v166577, 3, 4) -> f_4051(v166557, v166558, v166559, v166560, v166561, v166562, v166563, v166570, 1, v166571, 0, v166568, v166569, v166564, v166572, v166573, v166574, v166575, v166576, v166577, 3, 4) :|: 0 = 0
f_4051(v166557, v166558, v166559, v166560, v166561, v166562, v166563, v166570, 1, v166571, 0, v166568, v166569, v166564, v166572, v166573, v166574, v166575, v166576, v166577, 3, 4) -> f_4052(v166557, v166558, v166559, v166560, v166561, v166562, v166563, v166570, 1, v166571, 0, v166568, v166569, v166564, v166572, v166573, v166574, v166575, v166576, v166577, 3, 4) :|: TRUE
f_4052(v166557, v166558, v166559, v166560, v166561, v166562, v166563, v166570, 1, v166571, 0, v166568, v166569, v166564, v166572, v166573, v166574, v166575, v166576, v166577, 3, 4) -> f_4053(v166557, v166558, v166559, v166560, v166561, v166562, v166563, v166570, 1, v166571, v168549, 0, v166568, v166569, v166564, v166572, v166573, v166574, v166575, v166576, v166577, 3, 4) :|: TRUE
f_4053(v166557, v166558, v166559, v166560, v166561, v166562, v166563, v166570, 1, v166571, v168549, 0, v166568, v166569, v166564, v166572, v166573, v166574, v166575, v166576, v166577, 3, 4) -> f_4054(v166557, v166558, v166559, v166560, v166561, v166562, v166563, v166570, 1, v166571, v168549, 0, v166568, v166569, v166564, v166572, v166573, v166574, v166575, v166576, v166577, 3, 4) :|: v168549 != 0
f_4053(v166557, v166558, v166559, v166560, v166561, v166562, v166563, v166570, 1, v166571, v168549, 0, v166568, v166569, v166564, v166572, v166573, v166574, v166575, v166576, v166577, 3, 4) -> f_4055(v166557, v166558, v166559, v166560, v166561, v166562, v166563, v166570, 1, v166571, 0, v166568, v166569, v166564, v166572, v166573, v166574, v166575, v166576, v166577, 3, 4) :|: v168549 = 0
f_4054(v166557, v166558, v166559, v166560, v166561, v166562, v166563, v166570, 1, v166571, v168549, 0, v166568, v166569, v166564, v166572, v166573, v166574, v166575, v166576, v166577, 3, 4) -> f_4056(v166557, v166558, v166559, v166560, v166561, v166562, v166563, v166570, 1, v166571, v168549, 0, v166568, v166569, v166564, v166572, v166573, v166574, v166575, v166576, v166577, 3, 4) :|: 0 = 0
f_4056(v166557, v166558, v166559, v166560, v166561, v166562, v166563, v166570, 1, v166571, v168549, 0, v166568, v166569, v166564, v166572, v166573, v166574, v166575, v166576, v166577, 3, 4) -> f_4058(v166557, v166558, v166559, v166560, v166561, v166562, v166563, v166570, 1, v166571, v168549, v166568, v166569, v166564, 0, v166572, v166573, v166574, v166575, v166576, v166577, 3, 4) :|: 0 = 0
f_4058(v166557, v166558, v166559, v166560, v166561, v166562, v166563, v166570, 1, v166571, v168549, v166568, v166569, v166564, 0, v166572, v166573, v166574, v166575, v166576, v166577, 3, 4) -> f_3951(v166557, v166558, v166559, v166560, v166561, v166562, v166563, v166570, 1, v166571, v166564, v166571, 0, v166572, v166573, v168549, v166568, v166569, v166574, v166575, v166576, v166577, 3, 4) :|: TRUE
f_4055(v166557, v166558, v166559, v166560, v166561, v166562, v166563, v166570, 1, v166571, 0, v166568, v166569, v166564, v166572, v166573, v166574, v166575, v166576, v166577, 3, 4) -> f_4057(v166557, v166558, v166559, v166560, v166561, v166562, v166563, v166570, 1, v166571, 0, v166568, v166569, v166564, v166572, v166573, v166574, v166575, v166576, v166577, 3, 4) :|: 0 = 0
f_4057(v166557, v166558, v166559, v166560, v166561, v166562, v166563, v166570, 1, v166571, 0, v166568, v166569, v166564, v166572, v166573, v166574, v166575, v166576, v166577, 3, 4) -> f_4059(v166557, v166558, v166559, v166560, v166561, v166562, v166563, v166570, 1, v166571, 0, v166568, v166569, v166564, v166572, v166573, v166574, v166575, v166576, v166577, 3, 4) :|: 0 = 0
f_4059(v166557, v166558, v166559, v166560, v166561, v166562, v166563, v166570, 1, v166571, 0, v166568, v166569, v166564, v166572, v166573, v166574, v166575, v166576, v166577, 3, 4) -> f_3953(v166557, v166558, v166559, v166560, v166561, v166562, v166563, v166570, 1, v166571, 0, v166564, v166571, v166572, v166573, v166568, v166569, v166574, v166575, v166576, v166577, 3, 4) :|: TRUE
f_3900(v153598, v153599, v153600, v153601, v153602, v153603, v153604, v153605, 1, v153607, 0, v153609, v153610, v153611, v153614, v153613, v153615, v153616, v153617, v153618, 3, 4) -> f_3908(v153598, v153599, v153600, v153601, v153602, v153603, v153604, v153605, 1, v153607, 0, v153609, v153610, v153611, v153614, v153613, v153615, v153616, v153617, v153618, 3, 4) :|: 0 = 0
f_3908(v153598, v153599, v153600, v153601, v153602, v153603, v153604, v153605, 1, v153607, 0, v153609, v153610, v153611, v153614, v153613, v153615, v153616, v153617, v153618, 3, 4) -> f_3917(v153598, v153599, v153600, v153601, v153602, v153603, v153604, v153605, 1, v153607, 0, v153609, v153610, v153611, v153614, v153613, v153615, v153616, v153617, v153618, 3, 4) :|: 0 = 0
f_3917(v153598, v153599, v153600, v153601, v153602, v153603, v153604, v153605, 1, v153607, 0, v153609, v153610, v153611, v153614, v153613, v153615, v153616, v153617, v153618, 3, 4) -> f_3775(v153598, v153599, v153600, v153601, v153602, v153603, v153604, v153605, 1, v153607, 0, v153609, v153610, v153611, v153614, v153613, v153614, v153615, v153616, v153617, v153618, 3, 4) :|: TRUE
f_3775(v146646, v146647, v146648, v146649, v146650, v146651, v146652, v146653, 1, v146655, 0, v146657, v146658, v146659, v146660, v146661, v146662, v146663, v146664, v146665, v146666, 3, 4) -> f_3784(v146646, v146647, v146648, v146649, v146650, v146651, v146652, v146653, 1, v146655, 0, v146657, v146658, v146659, v146660, v146661, v146662, v146663, v146664, v146665, v146666, 3, 4) :|: TRUE
f_3784(v146646, v146647, v146648, v146649, v146650, v146651, v146652, v146653, 1, v146655, 0, v146657, v146658, v146659, v146660, v146661, v146662, v146663, v146664, v146665, v146666, 3, 4) -> f_3795(v146646, v146647, v146648, v146649, v146650, v146651, v146652, v146653, 1, v146655, 0, v146657, v146658, v146659, v146660, v146661, v146662, v146663, v146664, v146665, v146666, 3, 4) :|: TRUE
f_3795(v146646, v146647, v146648, v146649, v146650, v146651, v146652, v146653, 1, v146655, 0, v146657, v146658, v146659, v146660, v146661, v146662, v146663, v146664, v146665, v146666, 3, 4) -> f_3807(v146646, v146647, v146648, v146649, v146650, v146651, v146652, v146659, 1, v146655, 0, v146657, v146658, v146653, v146660, v146661, v146662, v146663, v146664, v146665, v146666, 3, 4) :|: 0 = 0
f_3807(v146646, v146647, v146648, v146649, v146650, v146651, v146652, v146659, 1, v146655, 0, v146657, v146658, v146653, v146660, v146661, v146662, v146663, v146664, v146665, v146666, 3, 4) -> f_3818(v146646, v146647, v146648, v146649, v146650, v146651, v146652, v146659, 1, v146655, 0, v146657, v146658, v146653, v146660, v146661, v146662, v146663, v146664, v146665, v146666, 3, 4) :|: 0 <= v146659 && 1 <= v146653 && 1 <= v146651
f_3818(v146646, v146647, v146648, v146649, v146650, v146651, v146652, v146659, 1, v146655, 0, v146657, v146658, v146653, v146660, v146661, v146662, v146663, v146664, v146665, v146666, 3, 4) -> f_3831(v146646, v146647, v146648, v146649, v146650, v146651, v146652, v146659, 1, v146655, 0, v146657, v146658, v146653, v146660, v146661, v146662, v146663, v146664, v146665, v146666, 3, 4) :|: 0 = 0
f_3831(v146646, v146647, v146648, v146649, v146650, v146651, v146652, v146659, 1, v146655, 0, v146657, v146658, v146653, v146660, v146661, v146662, v146663, v146664, v146665, v146666, 3, 4) -> f_3844(v146646, v146647, v146648, v146649, v146650, v146651, v146652, v146659, 1, v146655, 0, v146657, v146658, v146653, v146660, v146661, v146662, v146663, v146664, v146665, v146666, 3, 4) :|: TRUE
f_3844(v146646, v146647, v146648, v146649, v146650, v146651, v146652, v146659, 1, v146655, 0, v146657, v146658, v146653, v146660, v146661, v146662, v146663, v146664, v146665, v146666, 3, 4) -> f_3858(v146646, v146647, v146648, v146649, v146650, v146651, v146652, v146659, 1, v146655, 0, v146657, v146658, v146653, v146660, v146661, v146662, v146663, v146664, v146665, v146666, 3, 4) :|: TRUE
f_3858(v146646, v146647, v146648, v146649, v146650, v146651, v146652, v146659, 1, v146655, 0, v146657, v146658, v146653, v146660, v146661, v146662, v146663, v146664, v146665, v146666, 3, 4) -> f_3868(v146646, v146647, v146648, v146649, v146650, v146651, v146652, v146659, 1, v146660, 0, v146657, v146658, v146653, v146661, v146662, v146663, v146664, v146665, v146666, 3, 4) :|: 0 = 0
f_3868(v146646, v146647, v146648, v146649, v146650, v146651, v146652, v146659, 1, v146660, 0, v146657, v146658, v146653, v146661, v146662, v146663, v146664, v146665, v146666, 3, 4) -> f_3878(v146646, v146647, v146648, v146649, v146650, v146651, v146652, v146659, 1, v146660, 0, v146657, v146658, v146653, v146661, v146662, v146663, v146664, v146665, v146666, 3, 4) :|: 0 = 0
f_3878(v146646, v146647, v146648, v146649, v146650, v146651, v146652, v146659, 1, v146660, 0, v146657, v146658, v146653, v146661, v146662, v146663, v146664, v146665, v146666, 3, 4) -> f_3886(v146646, v146647, v146648, v146649, v146650, v146651, v146652, v146659, 1, v146660, 0, v146657, v146658, v146653, v146661, v146662, v146663, v146664, v146665, v146666, 3, 4) :|: TRUE
f_3886(v146646, v146647, v146648, v146649, v146650, v146651, v146652, v146659, 1, v146660, 0, v146657, v146658, v146653, v146661, v146662, v146663, v146664, v146665, v146666, 3, 4) -> f_3893(v146646, v146647, v146648, v146649, v146650, v146651, v146652, v146659, 1, v146660, v154453, 0, v146657, v146658, v146653, v146661, v146662, v146663, v146664, v146665, v146666, 3, 4) :|: TRUE
f_3893(v146646, v146647, v146648, v146649, v146650, v146651, v146652, v146659, 1, v146660, v154453, 0, v146657, v146658, v146653, v146661, v146662, v146663, v146664, v146665, v146666, 3, 4) -> f_3902(v146646, v146647, v146648, v146649, v146650, v146651, v146652, v146659, 1, v146660, v154453, 0, v146657, v146658, v146653, v146661, v146662, v146663, v146664, v146665, v146666, 3, 4) :|: v154453 != 0
f_3893(v146646, v146647, v146648, v146649, v146650, v146651, v146652, v146659, 1, v146660, v154453, 0, v146657, v146658, v146653, v146661, v146662, v146663, v146664, v146665, v146666, 3, 4) -> f_3903(v146646, v146647, v146648, v146649, v146650, v146651, v146652, v146659, 1, v146660, 0, v146657, v146658, v146653, v146661, v146662, v146663, v146664, v146665, v146666, 3, 4) :|: v154453 = 0
f_3902(v146646, v146647, v146648, v146649, v146650, v146651, v146652, v146659, 1, v146660, v154453, 0, v146657, v146658, v146653, v146661, v146662, v146663, v146664, v146665, v146666, 3, 4) -> f_3910(v146646, v146647, v146648, v146649, v146650, v146651, v146652, v146659, 1, v146660, v154453, 0, v146657, v146658, v146653, v146661, v146662, v146663, v146664, v146665, v146666, 3, 4) :|: 0 = 0
f_3910(v146646, v146647, v146648, v146649, v146650, v146651, v146652, v146659, 1, v146660, v154453, 0, v146657, v146658, v146653, v146661, v146662, v146663, v146664, v146665, v146666, 3, 4) -> f_3919(v146646, v146647, v146648, v146649, v146650, v146651, v146652, v146659, 1, v146660, v154453, v146657, v146658, v146653, 0, v146661, v146662, v146663, v146664, v146665, v146666, 3, 4) :|: 0 = 0
f_3919(v146646, v146647, v146648, v146649, v146650, v146651, v146652, v146659, 1, v146660, v154453, v146657, v146658, v146653, 0, v146661, v146662, v146663, v146664, v146665, v146666, 3, 4) -> f_3802(v146646, v146647, v146648, v146649, v146650, v146651, v146652, v146659, 1, v146660, v154453, v146657, v146658, v146653, v146660, 0, v146661, v146662, v146663, v146664, v146665, v146666, 3, 4) :|: TRUE
f_3802(v147919, v147920, v147921, v147922, v147923, v147924, v147925, v147926, 1, v147928, v147929, v147930, v147931, v147932, v147933, 0, v147935, v147936, v147937, v147938, v147939, v147940, 3, 4) -> f_3813(v147919, v147920, v147921, v147922, v147923, v147924, v147925, v147926, 1, v147928, v147929, v147930, v147931, v147932, v147933, 0, v147935, v147936, v147937, v147938, v147939, v147940, 3, 4) :|: TRUE
f_3813(v147919, v147920, v147921, v147922, v147923, v147924, v147925, v147926, 1, v147928, v147929, v147930, v147931, v147932, v147933, 0, v147935, v147936, v147937, v147938, v147939, v147940, 3, 4) -> f_3827(v147919, v147920, v147921, v147922, v147923, v147924, v147925, v147926, 1, v147928, v147929, v147931, v147932, v147933, 0, v147935, v147936, v147937, v147938, v147939, v147940, 3, 4) :|: 0 = 0
f_3827(v147919, v147920, v147921, v147922, v147923, v147924, v147925, v147926, 1, v147928, v147929, v147931, v147932, v147933, 0, v147935, v147936, v147937, v147938, v147939, v147940, 3, 4) -> f_3840(v147919, v147920, v147921, v147922, v147923, v147924, v147925, v147926, 1, v147928, v147929, v149930, v147932, v147933, 0, v147935, v147936, v147937, v147938, v147939, v147940, 3, 4) :|: 1 + v149930 = v147928 && 0 <= 1 + v149930
f_3840(v147919, v147920, v147921, v147922, v147923, v147924, v147925, v147926, 1, v147928, v147929, v149930, v147932, v147933, 0, v147935, v147936, v147937, v147938, v147939, v147940, 3, 4) -> f_3854(v147919, v147920, v147921, v147922, v147923, v147924, v147925, v147926, 1, v147928, v147929, v149930, v147932, v147933, 0, v147935, v147936, v147937, v147938, v147939, v147940, 3, 4) :|: TRUE
f_3854(v147919, v147920, v147921, v147922, v147923, v147924, v147925, v147926, 1, v147928, v147929, v149930, v147932, v147933, 0, v147935, v147936, v147937, v147938, v147939, v147940, 3, 4) -> f_3863(v147919, v147920, v147921, v147922, v147923, v147924, v147925, v147926, 1, v147928, v147929, v149930, v147932, v147933, 0, v147935, v147936, v147937, v147938, v147939, v147940, 3, 4) :|: TRUE
f_3863(v147919, v147920, v147921, v147922, v147923, v147924, v147925, v147926, 1, v147928, v147929, v149930, v147932, v147933, 0, v147935, v147936, v147937, v147938, v147939, v147940, 3, 4) -> f_3736(v147919, v147920, v147921, v147922, v147923, v147924, v147925, v147926, 1, v147928, v147929, v149930, v147932, v147933, 0, v147935, v147936, v147937, v147938, v147939, v147940, 3, 4) :|: TRUE
f_3736(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, v144009, v144010, v144011, v144012, v144013, 0, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) -> f_3743(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, v144011, v144010, v144009, v144012, v144013, 0, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) :|: 0 = 0
f_3743(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, v144011, v144010, v144009, v144012, v144013, 0, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) -> f_3749(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, v144011, v144010, v144009, v144012, v144013, 0, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) :|: 0 <= v144011 && 1 <= v144009
f_3743(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, v144011, v144010, v144009, v144012, v144013, 0, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) -> f_3750(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, v144010, 0, v144012, v144013, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) :|: v144011 < 0 && v144009 = 0 && 1 + v144011 = 0 && 0 = 0
f_3749(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, v144011, v144010, v144009, v144012, v144013, 0, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) -> f_3756(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, v144011, v144010, v144009, v144012, v144013, 0, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) :|: 0 = 0
f_3756(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, v144011, v144010, v144009, v144012, v144013, 0, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) -> f_3764(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, v144011, v144010, v144009, v144012, v144013, 0, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) :|: TRUE
f_3764(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, v144011, v144010, v144009, v144012, v144013, 0, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) -> f_3771(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, v144011, v145940, v144009, v144012, v144013, 0, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) :|: TRUE
f_3771(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, v144011, v145940, v144009, v144012, v144013, 0, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) -> f_3780(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, v144011, v145940, v144009, v144012, v144013, 0, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) :|: v145940 != 0
f_3771(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, v144011, v145940, v144009, v144012, v144013, 0, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) -> f_3781(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, v144011, 0, v144009, v144012, v144013, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) :|: v145940 = 0
f_3780(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, v144011, v145940, v144009, v144012, v144013, 0, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) -> f_3790(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, v144011, v145940, v144009, v144012, v144013, 0, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) :|: 0 = 0
f_3790(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, v144011, v145940, v144009, v144012, v144013, 0, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) -> f_3801(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, v144011, v145940, v144009, v144012, v144013, 0, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) :|: 0 = 0
f_3801(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, v144011, v145940, v144009, v144012, v144013, 0, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) -> f_3802(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, v144011, v145940, v144009, v144011, v144012, v144013, 0, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) :|: TRUE
f_3781(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, v144011, 0, v144009, v144012, v144013, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) -> f_3791(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, v144011, 0, v144009, v144012, v144013, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) :|: 0 = 0
f_3791(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, v144011, 0, v144009, v144012, v144013, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) -> f_3803(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, v144011, 0, v144009, v144012, v144013, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) :|: 0 = 0
f_3803(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, v144011, 0, v144009, v144012, v144013, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) -> f_3814(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, v144011, 0, v144009, v144012, v144013, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) :|: TRUE
f_3814(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, v144011, 0, v144009, v144012, v144013, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) -> f_3688(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, v144011, 0, v144009, v144011, v144012, v144013, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) :|: TRUE
f_3688(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140386, v140387, v140388, v140389, v140390, v140391, v140392, v140393, 3, 4) -> f_3700(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140387, v140388, v140389, v140390, v140391, v140392, v140393, 3, 4) :|: 0 = 0
f_3700(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140387, v140388, v140389, v140390, v140391, v140392, v140393, 3, 4) -> f_3712(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v140387, v140388, v140389, v140390, v140391, v140392, v140393, 3, 4) :|: 1 + v140659 = v140380 && 0 <= 1 + v140659
f_3712(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v140387, v140388, v140389, v140390, v140391, v140392, v140393, 3, 4) -> f_3728(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v140387, v140388, v140389, v140390, v140391, v140392, v140393, 3, 4) :|: TRUE
f_3728(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v140387, v140388, v140389, v140390, v140391, v140392, v140393, 3, 4) -> f_3737(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v140387, v140388, v140389, v140390, v140391, v140392, v140393, 3, 4) :|: TRUE
f_3737(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v140387, v140388, v140389, v140390, v140391, v140392, v140393, 3, 4) -> f_3744(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v140388, v140389, v140390, v140391, v140392, v140393, 3, 4) :|: 0 = 0
f_3744(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v140388, v140389, v140390, v140391, v140392, v140393, 3, 4) -> f_3751(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v140388, v140389, v140390, v140391, v140392, v140393, 3, 4) :|: 0 = 0
f_3751(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v140388, v140389, v140390, v140391, v140392, v140393, 3, 4) -> f_3758(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v140388, v140389, v140390, v140391, v140392, v140393, 3, 4) :|: v140382 <= v140377 && 0 <= v140377 && 1 <= v140389
f_3751(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v140388, v140389, v140390, v140391, v140392, v140393, 3, 4) -> f_3759(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v140388, v140389, v140390, v140391, v140392, v140393, 3, 4) :|: v140377 < v140382
f_3758(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v140388, v140389, v140390, v140391, v140392, v140393, 3, 4) -> f_3766(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v140388, v140389, v140390, v140391, v140392, v140393, 3, 4) :|: 0 = 0
f_3766(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v140388, v140389, v140390, v140391, v140392, v140393, 3, 4) -> f_3773(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v140388, v140389, v140390, v140391, v140392, v140393, 3, 4) :|: TRUE
f_3773(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v140388, v140389, v140390, v140391, v140392, v140393, 3, 4) -> f_3783(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v146709, v140389, v140390, v140391, v140392, v140393, 3, 4) :|: TRUE
f_3783(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v146709, v140389, v140390, v140391, v140392, v140393, 3, 4) -> f_3793(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v146709, v140389, v140390, v140391, v140392, v140393, 3, 4) :|: v146709 != 0
f_3783(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v146709, v140389, v140390, v140391, v140392, v140393, 3, 4) -> f_3794(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v140389, v140390, v140391, v140392, v140393, 3, 4) :|: v146709 = 0
f_3793(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v146709, v140389, v140390, v140391, v140392, v140393, 3, 4) -> f_3805(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v146709, v140389, v140390, v140391, v140392, v140393, 3, 4) :|: 0 = 0
f_3805(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v146709, v140389, v140390, v140391, v140392, v140393, 3, 4) -> f_3816(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v146709, v140389, v140390, v140391, v140392, v140393, 3, 4) :|: 0 = 0
f_3816(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v146709, v140389, v140390, v140391, v140392, v140393, 3, 4) -> f_3948(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v140382, v146709, v140377, v140389, v140390, v140391, v140392, v140393, 3, 4) :|: TRUE
f_3794(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v140389, v140390, v140391, v140392, v140393, 3, 4) -> f_3806(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v140389, v140390, v140391, v140392, v140393, 3, 4) :|: 0 = 0
f_3806(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v140389, v140390, v140391, v140392, v140393, 3, 4) -> f_3817(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v140389, v140390, v140391, v140392, v140393, 3, 4) :|: 0 = 0
f_3817(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v140389, v140390, v140391, v140392, v140393, 3, 4) -> f_4023(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v140377, v140389, v140390, v140391, v140392, v140393, 3, 4) :|: TRUE
f_4023(v165398, v165399, v165400, v165401, v165402, v165403, v165404, v165405, 1, v165407, 0, v165409, v165410, v165411, v165412, v165413, v165414, v165415, v165416, v165417, 3, 4) -> f_4028(v165398, v165399, v165400, v165401, v165402, v165403, v165404, v165405, 1, v165407, 0, v165409, v165410, v165411, v165412, v165413, v165414, v165415, v165416, v165417, 3, 4) :|: TRUE
f_4028(v165398, v165399, v165400, v165401, v165402, v165403, v165404, v165405, 1, v165407, 0, v165409, v165410, v165411, v165412, v165413, v165414, v165415, v165416, v165417, 3, 4) -> f_4029(v165398, v165399, v165400, v165401, v165402, v165403, v165404, v165405, 1, v165407, 0, v165409, v165410, v165411, v165407, v165412, v165413, v165414, v165415, v165416, v165417, 3, 4) :|: TRUE
f_3759(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v140388, v140389, v140390, v140391, v140392, v140393, 3, 4) -> f_3767(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v140388, v140389, v140390, v140391, v140392, v140393, 3, 4) :|: 0 = 0
f_3767(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v140388, v140389, v140390, v140391, v140392, v140393, 3, 4) -> f_3774(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v140388, v140389, v140390, v140391, v140392, v140393, 3, 4) :|: 0 = 0
f_3774(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v140388, v140389, v140390, v140391, v140392, v140393, 3, 4) -> f_3775(v140373, v140374, v140375, v140376, v140377, v140378, v140379, v140380, 1, v140382, 0, v140384, v140385, v140659, v140382, v140388, v140389, v140390, v140391, v140392, v140393, 3, 4) :|: TRUE
f_3750(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, v144010, 0, v144012, v144013, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) -> f_3757(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v144012, v144013, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) :|: 0 = 0
f_3757(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v144012, v144013, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) -> f_3765(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v144012, v144013, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) :|: 0 = 0
f_3765(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v144012, v144013, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) -> f_3772(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v144012, v144013, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) :|: TRUE
f_3772(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v144012, v144013, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) -> f_3782(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v144013, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) :|: 0 = 0
f_3782(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v144013, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) -> f_3792(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v146811, v144013, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) :|: 1 + v146811 = v144007 && 0 <= 1 + v146811
f_3792(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v146811, v144013, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) -> f_3804(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v146811, v144013, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) :|: TRUE
f_3804(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v146811, v144013, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) -> f_3815(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v146811, v144013, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) :|: TRUE
f_3815(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v146811, v144013, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) -> f_3828(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v146811, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) :|: 0 = 0
f_3828(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v146811, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) -> f_3841(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v146811, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) :|: 0 = 0
f_3841(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v146811, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) -> f_3855(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v146811, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) :|: 0 = 0
f_3855(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v146811, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) -> f_3864(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v146811, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) :|: TRUE
f_3864(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v146811, v144015, v144016, v144017, v144018, v144019, v144020, 3, 4) -> f_3873(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v146811, v153381, v144016, v144017, v144018, v144019, v144020, 3, 4) :|: TRUE
f_3873(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v146811, v153381, v144016, v144017, v144018, v144019, v144020, 3, 4) -> f_3881(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v146811, v153381, v144016, v144017, v144018, v144019, v144020, 3, 4) :|: v153381 != 0
f_3873(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v146811, v153381, v144016, v144017, v144018, v144019, v144020, 3, 4) -> f_3882(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v146811, v144016, v144017, v144018, v144019, v144020, 3, 4) :|: v153381 = 0
f_3881(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v146811, v153381, v144016, v144017, v144018, v144019, v144020, 3, 4) -> f_3889(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v146811, v153381, v144016, v144017, v144018, v144019, v144020, 3, 4) :|: 0 = 0
f_3889(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v146811, v153381, v144016, v144017, v144018, v144019, v144020, 3, 4) -> f_3896(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v146811, v153381, v144016, v144017, v144018, v144019, v144020, 3, 4) :|: 0 = 0
f_3896(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v146811, v153381, v144016, v144017, v144018, v144019, v144020, 3, 4) -> f_3473(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v146811, -1, v153381, v144004, v144016, v144017, v144018, v144019, v144020, 3, 4) :|: TRUE
f_3882(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v146811, v144016, v144017, v144018, v144019, v144020, 3, 4) -> f_3890(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v146811, v144016, v144017, v144018, v144019, v144020, 3, 4) :|: 0 = 0
f_3890(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v146811, v144016, v144017, v144018, v144019, v144020, 3, 4) -> f_3897(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v146811, v144016, v144017, v144018, v144019, v144020, 3, 4) :|: 0 = 0
f_3897(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v146811, v144016, v144017, v144018, v144019, v144020, 3, 4) -> f_3898(v144000, v144001, v144002, v144003, v144004, v144005, v144006, v144007, 1, -1, 0, v144010, v146811, -1, v144004, v144016, v144017, v144018, v144019, v144020, 3, 4) :|: TRUE
f_3903(v146646, v146647, v146648, v146649, v146650, v146651, v146652, v146659, 1, v146660, 0, v146657, v146658, v146653, v146661, v146662, v146663, v146664, v146665, v146666, 3, 4) -> f_3911(v146646, v146647, v146648, v146649, v146650, v146651, v146652, v146659, 1, v146660, 0, v146657, v146658, v146653, v146661, v146662, v146663, v146664, v146665, v146666, 3, 4) :|: 0 = 0
f_3911(v146646, v146647, v146648, v146649, v146650, v146651, v146652, v146659, 1, v146660, 0, v146657, v146658, v146653, v146661, v146662, v146663, v146664, v146665, v146666, 3, 4) -> f_3920(v146646, v146647, v146648, v146649, v146650, v146651, v146652, v146659, 1, v146660, 0, v146657, v146658, v146653, v146661, v146662, v146663, v146664, v146665, v146666, 3, 4) :|: 0 = 0
f_3920(v146646, v146647, v146648, v146649, v146650, v146651, v146652, v146659, 1, v146660, 0, v146657, v146658, v146653, v146661, v146662, v146663, v146664, v146665, v146666, 3, 4) -> f_3678(v146646, v146647, v146648, v146649, v146650, v146651, v146652, v146659, 1, v146660, 0, v146657, v146658, v146653, v146661, v146662, v146663, v146664, v146665, v146666, 3, 4) :|: TRUE
f_3678(v139586, v139587, v139588, v139589, v139590, v139591, v139592, v139593, 1, v139595, 0, v139597, v139598, v139599, v139600, v139601, v139602, v139603, v139604, v139605, 3, 4) -> f_3687(v139586, v139587, v139588, v139589, v139590, v139591, v139592, v139593, 1, v139595, 0, v139597, v139598, v139599, v139600, v139601, v139602, v139603, v139604, v139605, 3, 4) :|: TRUE
f_3687(v139586, v139587, v139588, v139589, v139590, v139591, v139592, v139593, 1, v139595, 0, v139597, v139598, v139599, v139600, v139601, v139602, v139603, v139604, v139605, 3, 4) -> f_3688(v139586, v139587, v139588, v139589, v139590, v139591, v139592, v139593, 1, v139595, 0, v139597, v139598, v139599, v139595, v139600, v139601, v139602, v139603, v139604, v139605, 3, 4) :|: TRUE
f_4011(v160157, v160158, v160159, v160160, v160161, v160162, v160163, v160164, 1, v160166, 0, v161159, v160170, v160171, v160172, v160173, v160174, v160175, v160176, v160177, 3, 4) -> f_4016(v160157, v160158, v160159, v160160, v160161, v160162, v160163, v160164, 1, v160166, 0, v161159, v160170, v160171, v160172, v160173, v160174, v160175, v160176, v160177, 3, 4) :|: 0 = 0
f_4016(v160157, v160158, v160159, v160160, v160161, v160162, v160163, v160164, 1, v160166, 0, v161159, v160170, v160171, v160172, v160173, v160174, v160175, v160176, v160177, 3, 4) -> f_4022(v160157, v160158, v160159, v160160, v160161, v160162, v160163, v160164, 1, v160166, 0, v161159, v160170, v160171, v160172, v160173, v160174, v160175, v160176, v160177, 3, 4) :|: 0 = 0
f_4022(v160157, v160158, v160159, v160160, v160161, v160162, v160163, v160164, 1, v160166, 0, v161159, v160170, v160171, v160172, v160173, v160174, v160175, v160176, v160177, 3, 4) -> f_4023(v160157, v160158, v160159, v160160, v160161, v160162, v160163, v160164, 1, v160166, 0, v160172, v160173, v161159, v160170, v160171, v160174, v160175, v160176, v160177, 3, 4) :|: TRUE
f_3777(v140992, v140993, v140994, v140995, v140996, v140997, v140998, v140999, 1, -1, v141002, v141003, 0, v141005, v141006, v141007, v141010, v141011, v141012, v141013, 3, 4) -> f_3786(v140992, v140993, v140994, v140995, v140996, v140997, v140998, v140999, 1, -1, 0, v141002, v141003, v141005, v141006, v141007, v141010, v141011, v141012, v141013, 3, 4) :|: 0 = 0
f_3786(v140992, v140993, v140994, v140995, v140996, v140997, v140998, v140999, 1, -1, 0, v141002, v141003, v141005, v141006, v141007, v141010, v141011, v141012, v141013, 3, 4) -> f_3797(v140992, v140993, v140994, v140995, v140996, v140997, v140998, v140999, 1, -1, 0, v141002, v141003, v141005, v141006, v141007, v141010, v141011, v141012, v141013, 3, 4) :|: 0 = 0
f_3797(v140992, v140993, v140994, v140995, v140996, v140997, v140998, v140999, 1, -1, 0, v141002, v141003, v141005, v141006, v141007, v141010, v141011, v141012, v141013, 3, 4) -> f_3979(v140992, v140993, v140994, v140995, v140996, v140997, v140998, v140999, 1, -1, 0, v141002, v141003, v141005, v141006, v141007, v141010, v141011, v141012, v141013, 3, 4) :|: TRUE
f_3979(v161664, v161665, v161666, v161667, v161668, v161669, v161670, v161671, 1, -1, 0, v161675, v161676, v161677, v161678, v161679, v161680, v161681, v161682, v161683, 3, 4) -> f_3986(v161664, v161665, v161666, v161667, v161668, v161669, v161670, v161671, 1, -1, 0, v161675, v161676, v161677, v161678, v161679, v161680, v161681, v161682, v161683, 3, 4) :|: TRUE
f_3986(v161664, v161665, v161666, v161667, v161668, v161669, v161670, v161671, 1, -1, 0, v161675, v161676, v161677, v161678, v161679, v161680, v161681, v161682, v161683, 3, 4) -> f_3992(v161664, v161665, v161666, v161667, v161668, v161669, v161670, v161671, 1, -1, 0, v161676, v161677, v161678, v161679, v161680, v161681, v161682, v161683, 3, 4) :|: 0 = 0
f_3992(v161664, v161665, v161666, v161667, v161668, v161669, v161670, v161671, 1, -1, 0, v161676, v161677, v161678, v161679, v161680, v161681, v161682, v161683, 3, 4) -> f_3997(v161664, v161665, v161666, v161667, v161668, v161669, v161670, v161671, 1, -1, 0, v163239, v161676, v161677, v161678, v161679, v161680, v161681, v161682, v161683, 3, 4) :|: 1 + v163239 = v161671 && 0 <= 1 + v163239
f_3997(v161664, v161665, v161666, v161667, v161668, v161669, v161670, v161671, 1, -1, 0, v163239, v161676, v161677, v161678, v161679, v161680, v161681, v161682, v161683, 3, 4) -> f_4002(v161664, v161665, v161666, v161667, v161668, v161669, v161670, v161671, 1, -1, 0, v163239, v161676, v161677, v161678, v161679, v161680, v161681, v161682, v161683, 3, 4) :|: TRUE
f_4002(v161664, v161665, v161666, v161667, v161668, v161669, v161670, v161671, 1, -1, 0, v163239, v161676, v161677, v161678, v161679, v161680, v161681, v161682, v161683, 3, 4) -> f_4005(v161664, v161665, v161666, v161667, v161668, v161669, v161670, v161671, 1, -1, 0, v163239, v161676, v161677, v161678, v161679, v161680, v161681, v161682, v161683, 3, 4) :|: TRUE
f_4005(v161664, v161665, v161666, v161667, v161668, v161669, v161670, v161671, 1, -1, 0, v163239, v161676, v161677, v161678, v161679, v161680, v161681, v161682, v161683, 3, 4) -> f_4008(v161664, v161665, v161666, v161667, v161668, v161669, v161670, v161671, 1, -1, 0, v163239, v161677, v161678, v161679, v161680, v161681, v161682, v161683, 3, 4) :|: 0 = 0
f_4008(v161664, v161665, v161666, v161667, v161668, v161669, v161670, v161671, 1, -1, 0, v163239, v161677, v161678, v161679, v161680, v161681, v161682, v161683, 3, 4) -> f_4012(v161664, v161665, v161666, v161667, v161668, v161669, v161670, v161671, 1, -1, 0, v163239, v161677, v161678, v161679, v161680, v161681, v161682, v161683, 3, 4) :|: 0 = 0
f_4012(v161664, v161665, v161666, v161667, v161668, v161669, v161670, v161671, 1, -1, 0, v163239, v161677, v161678, v161679, v161680, v161681, v161682, v161683, 3, 4) -> f_4017(v161664, v161665, v161666, v161667, v161668, v161669, v161670, v161671, 1, -1, 0, v163239, v161677, v161678, v161679, v161680, v161681, v161682, v161683, 3, 4) :|: 0 = 0
f_4017(v161664, v161665, v161666, v161667, v161668, v161669, v161670, v161671, 1, -1, 0, v163239, v161677, v161678, v161679, v161680, v161681, v161682, v161683, 3, 4) -> f_4024(v161664, v161665, v161666, v161667, v161668, v161669, v161670, v161671, 1, -1, 0, v163239, v161677, v161678, v161679, v161680, v161681, v161682, v161683, 3, 4) :|: TRUE
f_4024(v161664, v161665, v161666, v161667, v161668, v161669, v161670, v161671, 1, -1, 0, v163239, v161677, v161678, v161679, v161680, v161681, v161682, v161683, 3, 4) -> f_4030(v161664, v161665, v161666, v161667, v161668, v161669, v161670, v161671, 1, -1, 0, v163239, v166578, v161677, v161678, v161679, v161680, v161681, v161682, v161683, 3, 4) :|: TRUE
f_4030(v161664, v161665, v161666, v161667, v161668, v161669, v161670, v161671, 1, -1, 0, v163239, v166578, v161677, v161678, v161679, v161680, v161681, v161682, v161683, 3, 4) -> f_4033(v161664, v161665, v161666, v161667, v161668, v161669, v161670, v161671, 1, -1, 0, v163239, v166578, v161677, v161678, v161679, v161680, v161681, v161682, v161683, 3, 4) :|: v166578 != 0
f_4030(v161664, v161665, v161666, v161667, v161668, v161669, v161670, v161671, 1, -1, 0, v163239, v166578, v161677, v161678, v161679, v161680, v161681, v161682, v161683, 3, 4) -> f_4034(v161664, v161665, v161666, v161667, v161668, v161669, v161670, v161671, 1, -1, 0, v163239, v161677, v161678, v161679, v161680, v161681, v161682, v161683, 3, 4) :|: v166578 = 0
f_4033(v161664, v161665, v161666, v161667, v161668, v161669, v161670, v161671, 1, -1, 0, v163239, v166578, v161677, v161678, v161679, v161680, v161681, v161682, v161683, 3, 4) -> f_4037(v161664, v161665, v161666, v161667, v161668, v161669, v161670, v161671, 1, -1, 0, v163239, v166578, v161677, v161678, v161679, v161680, v161681, v161682, v161683, 3, 4) :|: 0 = 0
f_4037(v161664, v161665, v161666, v161667, v161668, v161669, v161670, v161671, 1, -1, 0, v163239, v166578, v161677, v161678, v161679, v161680, v161681, v161682, v161683, 3, 4) -> f_4042(v161664, v161665, v161666, v161667, v161668, v161669, v161670, v161671, 1, -1, 0, v163239, v166578, v161677, v161678, v161679, v161680, v161681, v161682, v161683, 3, 4) :|: 0 = 0
f_4042(v161664, v161665, v161666, v161667, v161668, v161669, v161670, v161671, 1, -1, 0, v163239, v166578, v161677, v161678, v161679, v161680, v161681, v161682, v161683, 3, 4) -> f_3473(v161664, v161665, v161666, v161667, v161668, v161669, v161670, v161671, 1, -1, 0, v161679, v163239, -1, v166578, v161677, v161678, v161680, v161681, v161682, v161683, 3, 4) :|: TRUE
f_4034(v161664, v161665, v161666, v161667, v161668, v161669, v161670, v161671, 1, -1, 0, v163239, v161677, v161678, v161679, v161680, v161681, v161682, v161683, 3, 4) -> f_4038(v161664, v161665, v161666, v161667, v161668, v161669, v161670, v161671, 1, -1, 0, v163239, v161677, v161678, v161679, v161680, v161681, v161682, v161683, 3, 4) :|: 0 = 0
f_4038(v161664, v161665, v161666, v161667, v161668, v161669, v161670, v161671, 1, -1, 0, v163239, v161677, v161678, v161679, v161680, v161681, v161682, v161683, 3, 4) -> f_4043(v161664, v161665, v161666, v161667, v161668, v161669, v161670, v161671, 1, -1, 0, v163239, v161677, v161678, v161679, v161680, v161681, v161682, v161683, 3, 4) :|: 0 = 0
f_4043(v161664, v161665, v161666, v161667, v161668, v161669, v161670, v161671, 1, -1, 0, v163239, v161677, v161678, v161679, v161680, v161681, v161682, v161683, 3, 4) -> f_3898(v161664, v161665, v161666, v161667, v161668, v161669, v161670, v161671, 1, -1, 0, v161679, v163239, -1, v161677, v161678, v161680, v161681, v161682, v161683, 3, 4) :|: TRUE
f_3991(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, v155562, 0, -1, v155556, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) -> f_3996(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, v155562, 0, -1, v155556, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) :|: 0 = 0
f_3996(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, v155562, 0, -1, v155556, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) -> f_4001(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, v155562, 0, -1, v155556, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) :|: 0 = 0
f_4001(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, v155562, 0, -1, v155556, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) -> f_3953(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, v155562, 0, v155556, v155562, v155563, v155564, 0, -1, v155565, v155566, v155567, v155568, 3, 4) :|: TRUE
f_3965(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, -1, 0, v155560, v155556, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) -> f_3971(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, -1, 0, v155560, v155556, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) :|: 0 = 0
f_3971(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, -1, 0, v155560, v155556, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) -> f_3978(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, -1, 0, v155560, v155556, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) :|: 0 = 0
f_3978(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, -1, 0, v155560, v155556, v155563, v155564, v155565, v155566, v155567, v155568, 3, 4) -> f_3979(v155549, v155550, v155551, v155552, v155553, v155554, v155555, v155561, 1, -1, 0, v155556, -1, v155563, v155564, v155560, v155565, v155566, v155567, v155568, 3, 4) :|: TRUE
f_3391(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116617, v116616, v116618, v116619, v116620, v116621, 3, 4) -> f_3403(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116617, v116616, v116618, v116619, v116620, v116621, 3, 4) :|: 0 = 0
f_3403(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116617, v116616, v116618, v116619, v116620, v116621, 3, 4) -> f_3416(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116617, v116616, v116618, v116619, v116620, v116621, 3, 4) :|: 0 = 0
f_3416(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116617, v116616, v116618, v116619, v116620, v116621, 3, 4) -> f_3428(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116617, v116616, v116618, v116619, v116620, v116621, 3, 4) :|: TRUE
f_3428(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116617, v116616, v116618, v116619, v116620, v116621, 3, 4) -> f_3440(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116617, v116616, v116618, v116619, v116620, v116621, 3, 4) :|: TRUE
f_3440(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116609, 1, -1, 0, v116613, v116614, v116617, v116616, v116618, v116619, v116620, v116621, 3, 4) -> f_3457(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116614, 1, -1, 0, v116613, v116609, v116617, v116616, v116618, v116619, v116620, v116621, 3, 4) :|: 0 = 0
f_3457(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116614, 1, -1, 0, v116613, v116609, v116617, v116616, v116618, v116619, v116620, v116621, 3, 4) -> f_3475(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116614, 1, -1, 0, v116613, v116609, v116617, v116616, v116618, v116619, v116620, v116621, 3, 4) :|: 0 <= v116614 && 1 <= v116609 && 1 <= v116607
f_3475(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116614, 1, -1, 0, v116613, v116609, v116617, v116616, v116618, v116619, v116620, v116621, 3, 4) -> f_3493(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116614, 1, -1, 0, v116613, v116609, v116617, v116616, v116618, v116619, v116620, v116621, 3, 4) :|: 0 = 0
f_3493(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116614, 1, -1, 0, v116613, v116609, v116617, v116616, v116618, v116619, v116620, v116621, 3, 4) -> f_3505(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116614, 1, -1, 0, v116613, v116609, v116617, v116616, v116618, v116619, v116620, v116621, 3, 4) :|: TRUE
f_3505(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116614, 1, -1, 0, v116613, v116609, v116617, v116616, v116618, v116619, v116620, v116621, 3, 4) -> f_3522(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116614, 1, -1, 0, v116613, v116609, v116617, v116616, v116618, v116619, v116620, v116621, 3, 4) :|: TRUE
f_3522(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116614, 1, -1, 0, v116613, v116609, v116617, v116616, v116618, v116619, v116620, v116621, 3, 4) -> f_3539(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116614, 1, v116617, 0, v116613, -1, v116609, v116616, v116618, v116619, v116620, v116621, 3, 4) :|: 0 = 0
f_3539(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116614, 1, v116617, 0, v116613, -1, v116609, v116616, v116618, v116619, v116620, v116621, 3, 4) -> f_3562(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116614, 1, v116617, v116613, 0, -1, v116609, v116616, v116618, v116619, v116620, v116621, 3, 4) :|: 0 = 0
f_3562(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116614, 1, v116617, v116613, 0, -1, v116609, v116616, v116618, v116619, v116620, v116621, 3, 4) -> f_3573(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116614, 1, v116617, v116613, 0, -1, v116609, v116616, v116618, v116619, v116620, v116621, 3, 4) :|: TRUE
f_3573(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116614, 1, v116617, v116613, 0, -1, v116609, v116616, v116618, v116619, v116620, v116621, 3, 4) -> f_3583(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116614, 1, v116617, v133660, 0, -1, v116609, v116616, v116618, v116619, v116620, v116621, 3, 4) :|: TRUE
f_3583(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116614, 1, v116617, v133660, 0, -1, v116609, v116616, v116618, v116619, v116620, v116621, 3, 4) -> f_3592(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116614, 1, v116617, v133660, 0, -1, v116609, v116616, v116618, v116619, v116620, v116621, 3, 4) :|: v133660 != 0
f_3583(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116614, 1, v116617, v133660, 0, -1, v116609, v116616, v116618, v116619, v116620, v116621, 3, 4) -> f_3593(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116614, 1, v116617, 0, -1, v116609, v116616, v116618, v116619, v116620, v116621, 3, 4) :|: v133660 = 0
f_3592(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116614, 1, v116617, v133660, 0, -1, v116609, v116616, v116618, v116619, v116620, v116621, 3, 4) -> f_3604(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116614, 1, v116617, v133660, 0, -1, v116609, v116616, v116618, v116619, v116620, v116621, 3, 4) :|: 0 = 0
f_3604(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116614, 1, v116617, v133660, 0, -1, v116609, v116616, v116618, v116619, v116620, v116621, 3, 4) -> f_3618(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116614, 1, v116617, v133660, 0, -1, v116609, v116616, v116618, v116619, v116620, v116621, 3, 4) :|: 0 = 0
f_3618(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116614, 1, v116617, v133660, 0, -1, v116609, v116616, v116618, v116619, v116620, v116621, 3, 4) -> f_3676(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116614, 1, v116617, v133660, 0, -1, v116609, 0, v116616, v116617, v116618, v116619, v116620, v116621, 3, 4) :|: TRUE
f_3676(v139184, v139185, v139186, v139187, v139188, v139189, v139190, v139191, 1, v139193, v139194, v139195, v139196, v139197, 0, v139199, v139200, v139201, v139202, v139203, v139204, 3, 4) -> f_3802(v139184, v139185, v139186, v139187, v139188, v139189, v139190, v139191, 1, v139193, v139194, v139195, v139196, v139197, v139193, 0, v139199, v139200, v139201, v139202, v139203, v139204, 3, 4) :|: TRUE
f_3593(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116614, 1, v116617, 0, -1, v116609, v116616, v116618, v116619, v116620, v116621, 3, 4) -> f_3605(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116614, 1, v116617, 0, -1, v116609, v116616, v116618, v116619, v116620, v116621, 3, 4) :|: 0 = 0
f_3605(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116614, 1, v116617, 0, -1, v116609, v116616, v116618, v116619, v116620, v116621, 3, 4) -> f_3619(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116614, 1, v116617, 0, -1, v116609, v116616, v116618, v116619, v116620, v116621, 3, 4) :|: 0 = 0
f_3619(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116614, 1, v116617, 0, -1, v116609, v116616, v116618, v116619, v116620, v116621, 3, 4) -> f_3678(v116602, v116603, v116604, v116605, v116606, v116607, v116608, v116614, 1, v116617, 0, 0, -1, v116609, v116616, v116617, v116618, v116619, v116620, v116621, 3, 4) :|: TRUE
Combined rules. Obtained 40 rulesP rules:
f_3743(v144000:0, v144001:0, v144002:0, v144003:0, v144004:0, v144005:0, v144006:0, v144007:0, 1, 1 + v149930:0, v144010:0, v144009:0, v144012:0, v144013:0, 0, v144015:0, v144016:0, v144017:0, v144018:0, v144019:0, v144020:0, 3, 4) -> f_3743(v144000:0, v144001:0, v144002:0, v144003:0, v144004:0, v144005:0, v144006:0, v144007:0, 1, v149930:0, v145940:0, 1 + v149930:0, v144012:0, v144013:0, 0, v144015:0, v144016:0, v144017:0, v144018:0, v144019:0, v144020:0, 3, 4) :|: v144009:0 > 0 && v149930:0 > -2 && v145940:0 < 0
f_3743(v144000:0, v144001:0, v144002:0, v144003:0, v144004:0, v144005:0, v144006:0, v144007:0, 1, 1 + v149930:0, v144010:0, v144009:0, v144012:0, v144013:0, 0, v144015:0, v144016:0, v144017:0, v144018:0, v144019:0, v144020:0, 3, 4) -> f_3743(v144000:0, v144001:0, v144002:0, v144003:0, v144004:0, v144005:0, v144006:0, v144007:0, 1, v149930:0, v145940:0, 1 + v149930:0, v144012:0, v144013:0, 0, v144015:0, v144016:0, v144017:0, v144018:0, v144019:0, v144020:0, 3, 4) :|: v144009:0 > 0 && v149930:0 > -2 && v145940:0 > 0
f_3768(v140992:0, v140993:0, v140994:0, v140995:0, v140996:0, v140997:0, v140998:0, v140999:0, 1, 1 + v161158:0, v141002:0, v141003:0, 0, v141005:0, v141006:0, v141007:0, v141001:0, v141010:0, v141011:0, v141012:0, v141013:0, 3, 4) -> f_3768(v140992:0, v140993:0, v140994:0, v140995:0, v140996:0, v140997:0, v140998:0, v140999:0, 1, v161158:0, v141002:0, v141003:0, 0, v141005:0, v141006:0, v148191:0, 1 + v161158:0, v141010:0, v141011:0, v141012:0, v141013:0, 3, 4) :|: v141001:0 > 0 && v161158:0 > -2 && v140996:0 > 0 && v148191:0 < 0
f_3768(v140992:0, v140993:0, v140994:0, v140995:0, v140996:0, v140997:0, v140998:0, v140999:0, 1, 1 + v161158:0, v141002:0, v141003:0, 0, v141005:0, v141006:0, v141007:0, v141001:0, v141010:0, v141011:0, v141012:0, v141013:0, 3, 4) -> f_3768(v140992:0, v140993:0, v140994:0, v140995:0, v140996:0, v140997:0, v140998:0, v140999:0, 1, v161158:0, v141002:0, v141003:0, 0, v141005:0, v141006:0, v148191:0, 1 + v161158:0, v141010:0, v141011:0, v141012:0, v141013:0, 3, 4) :|: v141001:0 > 0 && v161158:0 > -2 && v140996:0 > 0 && v148191:0 > 0
f_3959(v155549:0, v155550:0, v155551:0, v155552:0, v155553:0, v155554:0, v155555:0, 1 + v161159:0, 1, v155562:0, 0, v155560:0, -1, v155556:0, v155563:0, v155564:0, v155565:0, v155566:0, v155567:0, v155568:0, 3, 4) -> f_4007(v155549:0, v155550:0, v155551:0, v155552:0, v155553:0, v155554:0, v155555:0, 1 + v161159:0, 1, v155562:0, 0, v161159:0, v164717:0, v155563:0, v155564:0, 0, -1, v155565:0, v155566:0, v155567:0, v155568:0, 3, 4) :|: v161159:0 > -2 && v155562:0 > -1 && v155553:0 > -1
f_4030(v161664:0, v161665:0, v161666:0, v161667:0, v161668:0, v161669:0, v161670:0, v161671:0, 1, -1, 0, v163239:0, v166578:0, v161677:0, v161678:0, v161679:0, v161680:0, v161681:0, v161682:0, v161683:0, 3, 4) -> f_3364(v161664:0, v161665:0, v161666:0, v161667:0, v161668:0, v161669:0, v161670:0, v161671:0, 1, -1, 0, v161679:0, v163239:0, 0, v166578:0, -1, v161680:0, v161681:0, v161682:0, v161683:0, 3, 4) :|: v166578:0 < 0
f_4030(v161664:0, v161665:0, v161666:0, v161667:0, v161668:0, v161669:0, v161670:0, v161671:0, 1, -1, 0, v163239:0, v166578:0, v161677:0, v161678:0, v161679:0, v161680:0, v161681:0, v161682:0, v161683:0, 3, 4) -> f_3364(v161664:0, v161665:0, v161666:0, v161667:0, v161668:0, v161669:0, v161670:0, v161671:0, 1, -1, 0, v161679:0, v163239:0, 0, v166578:0, -1, v161680:0, v161681:0, v161682:0, v161683:0, 3, 4) :|: v166578:0 > 0
f_4007(v160157:0, v160158:0, v160159:0, v160160:0, v160161:0, v160162:0, v160163:0, v160164:0, 1, v160166:0, 0, v161159:0, v164717:0, v160170:0, v160171:0, v160172:0, v160173:0, v160174:0, v160175:0, v160176:0, v160177:0, 3, 4) -> f_3891(v160157:0, v160158:0, v160159:0, v160160:0, v160161:0, v160162:0, v160163:0, v160164:0, 1, v160166:0, 0, v160172:0, v160173:0, v161159:0, 1 + v160166:0, v164717:0, v160166:0, v160174:0, v160175:0, v160176:0, v160177:0, 3, 4) :|: v160166:0 > -1 && v164717:0 < 0
f_4007(v160157:0, v160158:0, v160159:0, v160160:0, v160161:0, v160162:0, v160163:0, v160164:0, 1, v160166:0, 0, v161159:0, v164717:0, v160170:0, v160171:0, v160172:0, v160173:0, v160174:0, v160175:0, v160176:0, v160177:0, 3, 4) -> f_3891(v160157:0, v160158:0, v160159:0, v160160:0, v160161:0, v160162:0, v160163:0, v160164:0, 1, v160166:0, 0, v160172:0, v160173:0, v161159:0, 1 + v160166:0, v164717:0, v160166:0, v160174:0, v160175:0, v160176:0, v160177:0, 3, 4) :|: v160166:0 > -1 && v164717:0 > 0
f_3959(v155549:0, v155550:0, v155551:0, v155552:0, v155553:0, v155554:0, v155555:0, 1 + v163239:0, 1, v155562:0, 0, v155560:0, -1, v155556:0, v155563:0, v155564:0, v155565:0, v155566:0, v155567:0, v155568:0, 3, 4) -> f_4030(v155549:0, v155550:0, v155551:0, v155552:0, v155553:0, v155554:0, v155555:0, 1 + v163239:0, 1, -1, 0, v163239:0, v166578:0, v155563:0, v155564:0, v155560:0, v155565:0, v155566:0, v155567:0, v155568:0, 3, 4) :|: v155562:0 < 0 && v163239:0 > -2
f_4053(v166557:0, v166558:0, v166559:0, v166560:0, v166561:0, v166562:0, v166563:0, v166570:0, 1, 1 + v161158:0, v168549:0, 0, v166568:0, v166569:0, v166564:0, v166572:0, v166573:0, v166574:0, v166575:0, v166576:0, v166577:0, 3, 4) -> f_3768(v166557:0, v166558:0, v166559:0, v166560:0, v166561:0, v166562:0, v166563:0, v166570:0, 1, v161158:0, v166564:0, 1 + v161158:0, 0, v166572:0, v166573:0, v168549:0, 1 + v161158:0, v166574:0, v166575:0, v166576:0, v166577:0, 3, 4) :|: v168549:0 < 0 && v161158:0 > -2
f_4053(v166557:0, v166558:0, v166559:0, v166560:0, v166561:0, v166562:0, v166563:0, v166570:0, 1, 1 + v161158:0, v168549:0, 0, v166568:0, v166569:0, v166564:0, v166572:0, v166573:0, v166574:0, v166575:0, v166576:0, v166577:0, 3, 4) -> f_3768(v166557:0, v166558:0, v166559:0, v166560:0, v166561:0, v166562:0, v166563:0, v166570:0, 1, v161158:0, v166564:0, 1 + v161158:0, 0, v166572:0, v166573:0, v168549:0, 1 + v161158:0, v166574:0, v166575:0, v166576:0, v166577:0, 3, 4) :|: v168549:0 > 0 && v161158:0 > -2
f_3364(v116602:0, v116603:0, v116604:0, v116605:0, v116606:0, v116607:0, v116608:0, v116609:0, 1, -1, 0, v116613:0, v116614:0, 1 + v149930:0, v116616:0, v116606:0, v116618:0, v116619:0, v116620:0, v116621:0, 3, 4) -> f_3743(v116602:0, v116603:0, v116604:0, v116605:0, v116606:0, v116607:0, v116608:0, v116614:0, 1, v149930:0, v133660:0, 1 + v149930:0, v116609:0, 1 + v149930:0, 0, v116616:0, 1 + v149930:0, v116618:0, v116619:0, v116620:0, v116621:0, 3, 4) :|: v116606:0 < 1 + v149930:0 && v116609:0 > 0 && v116614:0 > -1 && v116607:0 > 0 && v133660:0 < 0 && v149930:0 > -2
f_3364(v116602:0, v116603:0, v116604:0, v116605:0, v116606:0, v116607:0, v116608:0, v116609:0, 1, -1, 0, v116613:0, v116614:0, 1 + v149930:0, v116616:0, v116606:0, v116618:0, v116619:0, v116620:0, v116621:0, 3, 4) -> f_3743(v116602:0, v116603:0, v116604:0, v116605:0, v116606:0, v116607:0, v116608:0, v116614:0, 1, v149930:0, v133660:0, 1 + v149930:0, v116609:0, 1 + v149930:0, 0, v116616:0, 1 + v149930:0, v116618:0, v116619:0, v116620:0, v116621:0, 3, 4) :|: v116606:0 < 1 + v149930:0 && v116609:0 > 0 && v116614:0 > -1 && v116607:0 > 0 && v133660:0 > 0 && v149930:0 > -2
f_4007(v160157:0, v160158:0, v160159:0, v160160:0, v160161:0, v160162:0, v160163:0, v160164:0, 1, v160166:0, 0, v161159:0, 0, v160170:0, v160171:0, v160172:0, v160173:0, v160174:0, v160175:0, v160176:0, v160177:0, 3, 4) -> f_4053(v160157:0, v160158:0, v160159:0, v160160:0, v160161:0, v160162:0, v160163:0, v161159:0, 1, v160166:0, v168549:0, 0, v160172:0, v160173:0, v160164:0, v160170:0, v160171:0, v160174:0, v160175:0, v160176:0, v160177:0, 3, 4) :|: v160164:0 > 0 && v160162:0 > 0 && v161159:0 > -1
f_3743(v144000:0, v144001:0, v144002:0, v144003:0, v144004:0, v144005:0, v144006:0, 1 + v140659:0, 1, v144011:0, v144010:0, v144009:0, v144012:0, v144013:0, 0, v144015:0, v144016:0, v144017:0, v144018:0, v144019:0, v144020:0, 3, 4) -> f_3751(v144000:0, v144001:0, v144002:0, v144003:0, v144004:0, v144005:0, v144006:0, 1 + v140659:0, 1, v144011:0, 0, v144009:0, v144011:0, v140659:0, v144015:0, v144016:0, v144017:0, v144018:0, v144019:0, v144020:0, 3, 4) :|: v144009:0 > 0 && v140659:0 > -2 && v144011:0 > -1
f_3959(v155549:0, v155550:0, v155551:0, v155552:0, v155553:0, v155554:0, v155555:0, v155561:0, 1, 1 + v161158:0, 0, v155560:0, -1, v155556:0, v155563:0, v155564:0, v155565:0, v155566:0, v155567:0, v155568:0, 3, 4) -> f_3768(v155549:0, v155550:0, v155551:0, v155552:0, v155553:0, v155554:0, v155555:0, v155561:0, 1, v161158:0, v155556:0, 1 + v161158:0, 0, v155563:0, v155564:0, v162572:0, 1 + v161158:0, v155565:0, v155566:0, v155567:0, v155568:0, 3, 4) :|: v155553:0 > -1 && v161158:0 > -2 && v162572:0 < 0
f_3959(v155549:0, v155550:0, v155551:0, v155552:0, v155553:0, v155554:0, v155555:0, v155561:0, 1, 1 + v161158:0, 0, v155560:0, -1, v155556:0, v155563:0, v155564:0, v155565:0, v155566:0, v155567:0, v155568:0, 3, 4) -> f_3768(v155549:0, v155550:0, v155551:0, v155552:0, v155553:0, v155554:0, v155555:0, v155561:0, 1, v161158:0, v155556:0, 1 + v161158:0, 0, v155563:0, v155564:0, v162572:0, 1 + v161158:0, v155565:0, v155566:0, v155567:0, v155568:0, 3, 4) :|: v155553:0 > -1 && v161158:0 > -2 && v162572:0 > 0
f_3768(v140992:0, v140993:0, v140994:0, v140995:0, v140996:0, v140997:0, v140998:0, 1 + v161159:0, 1, v144551:0, v141002:0, v141003:0, 0, v141005:0, v141006:0, v141007:0, v141001:0, v141010:0, v141011:0, v141012:0, v141013:0, 3, 4) -> f_4007(v140992:0, v140993:0, v140994:0, v140995:0, v140996:0, v140997:0, v140998:0, 1 + v161159:0, 1, v144551:0, 0, v161159:0, v164717:0, v141005:0, v141006:0, v141001:0, v144551:0, v141010:0, v141011:0, v141012:0, v141013:0, 3, 4) :|: v141001:0 > 0 && v144551:0 > -1 && v161159:0 > -2 && v140996:0 > 0
f_4030(v161664:0, v161665:0, v161666:0, v161667:0, v161668:0, v161669:0, v161670:0, v161671:0, 1, -1, 0, v163239:0, 0, v161677:0, v161678:0, v161679:0, v161680:0, v161681:0, v161682:0, v161683:0, 3, 4) -> f_3959(v161664:0, v161665:0, v161666:0, v161667:0, v161668:0, v161669:0, v161670:0, v163239:0, 1, -1, 0, v161679:0, -1, v161671:0, v161677:0, v161678:0, v161680:0, v161681:0, v161682:0, v161683:0, 3, 4) :|: v161671:0 > 0 && v161669:0 > 0 && v163239:0 > -1
f_3893(v146646:0, v146647:0, v146648:0, v146649:0, v146650:0, v146651:0, v146652:0, 1 + v140659:0, 1, v146660:0, 0, 0, v146657:0, v146658:0, v146653:0, v146661:0, v146662:0, v146663:0, v146664:0, v146665:0, v146666:0, 3, 4) -> f_3751(v146646:0, v146647:0, v146648:0, v146649:0, v146650:0, v146651:0, v146652:0, 1 + v140659:0, 1, v146660:0, 0, v146657:0, v146658:0, v140659:0, v146661:0, v146662:0, v146663:0, v146664:0, v146665:0, v146666:0, 3, 4) :|: v140659:0 > -2
f_3891(v153598:0, v153599:0, v153600:0, v153601:0, v153602:0, v153603:0, v153604:0, v153605:0, 1, v153607:0, 0, v153609:0, v153610:0, v153611:0, v153614:0, v153613:0, v153602:0, v153615:0, v153616:0, v153617:0, v153618:0, 3, 4) -> f_3893(v153598:0, v153599:0, v153600:0, v153601:0, v153602:0, v153603:0, v153604:0, v153611:0, 1, v153614:0, v154453:0, 0, v153609:0, v153610:0, v153605:0, v153613:0, v153614:0, v153615:0, v153616:0, v153617:0, v153618:0, 3, 4) :|: v153614:0 > v153602:0 && v153605:0 > 0 && v153603:0 > 0 && v153611:0 > -1
f_3743(v144000:0, v144001:0, v144002:0, v144003:0, v144004:0, v144005:0, v144006:0, 1 + v146811:0, 1, -1, v144010:0, 0, v144012:0, v144013:0, 0, v144015:0, v144016:0, v144017:0, v144018:0, v144019:0, v144020:0, 3, 4) -> f_3364(v144000:0, v144001:0, v144002:0, v144003:0, v144004:0, v144005:0, v144006:0, 1 + v146811:0, 1, -1, 0, v144010:0, v146811:0, 0, v153381:0, -1, v144017:0, v144018:0, v144019:0, v144020:0, 3, 4) :|: v153381:0 < 0 && v146811:0 > -2
f_3743(v144000:0, v144001:0, v144002:0, v144003:0, v144004:0, v144005:0, v144006:0, 1 + v146811:0, 1, -1, v144010:0, 0, v144012:0, v144013:0, 0, v144015:0, v144016:0, v144017:0, v144018:0, v144019:0, v144020:0, 3, 4) -> f_3364(v144000:0, v144001:0, v144002:0, v144003:0, v144004:0, v144005:0, v144006:0, 1 + v146811:0, 1, -1, 0, v144010:0, v146811:0, 0, v153381:0, -1, v144017:0, v144018:0, v144019:0, v144020:0, 3, 4) :|: v153381:0 > 0 && v146811:0 > -2
f_3364(v116602:0, v116603:0, v116604:0, v116605:0, v116606:0, v116607:0, v116608:0, v116609:0, 1, -1, 0, v116613:0, 1 + v140659:0, v116617:0, v116616:0, v116606:0, v116618:0, v116619:0, v116620:0, v116621:0, 3, 4) -> f_3751(v116602:0, v116603:0, v116604:0, v116605:0, v116606:0, v116607:0, v116608:0, 1 + v140659:0, 1, v116617:0, 0, 0, -1, v140659:0, v116616:0, v116617:0, v116618:0, v116619:0, v116620:0, v116621:0, 3, 4) :|: v116617:0 > v116606:0 && v116609:0 > 0 && v140659:0 > -2 && v116607:0 > 0
f_3364(v116602:0, v116603:0, v116604:0, v116605:0, v116606:0, v116607:0, v116608:0, v116609:0, 1, -1, 0, v116613:0, v116614:0, v116617:0, v116616:0, v116615:0, v116618:0, v116619:0, v116620:0, v116621:0, 3, 4) -> f_3364(v116602:0, v116603:0, v116604:0, v116605:0, v116606:0, v116607:0, v116608:0, v116609:0, 1, -1, 0, v116613:0, v116614:0, 1 + v116617:0, v122410:0, v116617:0, v116618:0, v116619:0, v116620:0, v116621:0, 3, 4) :|: v116606:0 > -1 && v116617:0 <= v116606:0 && v116617:0 > -2 && v122410:0 < 0
f_3364(v116602:0, v116603:0, v116604:0, v116605:0, v116606:0, v116607:0, v116608:0, v116609:0, 1, -1, 0, v116613:0, v116614:0, v116617:0, v116616:0, v116615:0, v116618:0, v116619:0, v116620:0, v116621:0, 3, 4) -> f_3364(v116602:0, v116603:0, v116604:0, v116605:0, v116606:0, v116607:0, v116608:0, v116609:0, 1, -1, 0, v116613:0, v116614:0, 1 + v116617:0, v122410:0, v116617:0, v116618:0, v116619:0, v116620:0, v116621:0, 3, 4) :|: v116606:0 > -1 && v116617:0 <= v116606:0 && v116617:0 > -2 && v122410:0 > 0
f_3751(v140373:0, v140374:0, v140375:0, v140376:0, v140377:0, v140378:0, v140379:0, v140380:0, 1, v140382:0, 0, v140384:0, v140385:0, v140659:0, v140388:0, v140389:0, v140390:0, v140391:0, v140392:0, v140393:0, 3, 4) -> f_3891(v140373:0, v140374:0, v140375:0, v140376:0, v140377:0, v140378:0, v140379:0, v140380:0, 1, v140382:0, 0, v140384:0, v140385:0, v140659:0, 1 + v140382:0, v146709:0, v140382:0, v140390:0, v140391:0, v140392:0, v140393:0, 3, 4) :|: v140382:0 > -1 && v140377:0 > -1 && v140382:0 <= v140377:0 && v146709:0 < 0 && v140389:0 > 0
f_3751(v140373:0, v140374:0, v140375:0, v140376:0, v140377:0, v140378:0, v140379:0, v140380:0, 1, v140382:0, 0, v140384:0, v140385:0, v140659:0, v140388:0, v140389:0, v140390:0, v140391:0, v140392:0, v140393:0, 3, 4) -> f_3891(v140373:0, v140374:0, v140375:0, v140376:0, v140377:0, v140378:0, v140379:0, v140380:0, 1, v140382:0, 0, v140384:0, v140385:0, v140659:0, 1 + v140382:0, v146709:0, v140382:0, v140390:0, v140391:0, v140392:0, v140393:0, 3, 4) :|: v140382:0 > -1 && v140377:0 > -1 && v140382:0 <= v140377:0 && v146709:0 > 0 && v140389:0 > 0
f_3751(v140373:0, v140374:0, v140375:0, v140376:0, v140377:0, v140378:0, v140379:0, v140380:0, 1, v140382:0, 0, v140384:0, v140385:0, v140659:0, v140388:0, v140389:0, v140390:0, v140391:0, v140392:0, v140393:0, 3, 4) -> f_4053(v140373:0, v140374:0, v140375:0, v140376:0, v140377:0, v140378:0, v140379:0, v140659:0, 1, v140382:0, v168549:0, 0, v140384:0, v140385:0, v140380:0, v140377:0, v140389:0, v140390:0, v140391:0, v140392:0, v140393:0, 3, 4) :|: v140380:0 > 0 && v140659:0 > -1 && v140377:0 > -1 && v140382:0 <= v140377:0 && v140389:0 > 0 && v140378:0 > 0
f_4053(v166557:0, v166558:0, v166559:0, v166560:0, v166561:0, v166562:0, v166563:0, 1 + v161159:0, 1, v166571:0, 0, 0, v166568:0, v166569:0, v166564:0, v166572:0, v166573:0, v166574:0, v166575:0, v166576:0, v166577:0, 3, 4) -> f_4007(v166557:0, v166558:0, v166559:0, v166560:0, v166561:0, v166562:0, v166563:0, 1 + v161159:0, 1, v166571:0, 0, v161159:0, v164717:0, v166572:0, v166573:0, v166568:0, v166569:0, v166574:0, v166575:0, v166576:0, v166577:0, 3, 4) :|: v161159:0 > -2
f_3743(v144000:0, v144001:0, v144002:0, v144003:0, v144004:0, v144005:0, v144006:0, 1 + v146811:0, 1, -1, v144010:0, 0, v144012:0, v144013:0, 0, v144015:0, v144016:0, v144017:0, v144018:0, v144019:0, v144020:0, 3, 4) -> f_3959(v144000:0, v144001:0, v144002:0, v144003:0, v144004:0, v144005:0, v144006:0, v146811:0, 1, -1, 0, v144010:0, -1, 1 + v146811:0, v144004:0, v144016:0, v144017:0, v144018:0, v144019:0, v144020:0, 3, 4) :|: v146811:0 > -1 && v144005:0 > 0
f_3893(v146646:0, v146647:0, v146648:0, v146649:0, v146650:0, v146651:0, v146652:0, v146659:0, 1, 1 + v149930:0, v154453:0, 0, v146657:0, v146658:0, v146653:0, v146661:0, v146662:0, v146663:0, v146664:0, v146665:0, v146666:0, 3, 4) -> f_3743(v146646:0, v146647:0, v146648:0, v146649:0, v146650:0, v146651:0, v146652:0, v146659:0, 1, v149930:0, v154453:0, 1 + v149930:0, v146653:0, 1 + v149930:0, 0, v146661:0, v146662:0, v146663:0, v146664:0, v146665:0, v146666:0, 3, 4) :|: v149930:0 > -2 && v154453:0 < 0
f_3893(v146646:0, v146647:0, v146648:0, v146649:0, v146650:0, v146651:0, v146652:0, v146659:0, 1, 1 + v149930:0, v154453:0, 0, v146657:0, v146658:0, v146653:0, v146661:0, v146662:0, v146663:0, v146664:0, v146665:0, v146666:0, 3, 4) -> f_3743(v146646:0, v146647:0, v146648:0, v146649:0, v146650:0, v146651:0, v146652:0, v146659:0, 1, v149930:0, v154453:0, 1 + v149930:0, v146653:0, 1 + v149930:0, 0, v146661:0, v146662:0, v146663:0, v146664:0, v146665:0, v146666:0, 3, 4) :|: v149930:0 > -2 && v154453:0 > 0
f_3891(v153598:0, v153599:0, v153600:0, v153601:0, v153602:0, v153603:0, v153604:0, v153605:0, 1, v153607:0, 0, v153609:0, v153610:0, v153611:0, v153614:0, v153613:0, v153612:0, v153615:0, v153616:0, v153617:0, v153618:0, 3, 4) -> f_4053(v153598:0, v153599:0, v153600:0, v153601:0, v153602:0, v153603:0, v153604:0, v153611:0, 1, v153614:0, v168549:0, 0, v153609:0, v153610:0, v153605:0, v153612:0, v153614:0, v153615:0, v153616:0, v153617:0, v153618:0, 3, 4) :|: v153602:0 > 0 && v153614:0 <= v153602:0 && v153605:0 > 0 && v153603:0 > 0 && v153611:0 > -1
f_3364(v116602:0, v116603:0, v116604:0, v116605:0, v116606:0, v116607:0, v116608:0, v116609:0, 1, -1, 0, v116613:0, v116614:0, v116617:0, v116616:0, v116615:0, v116618:0, v116619:0, v116620:0, v116621:0, 3, 4) -> f_3959(v116602:0, v116603:0, v116604:0, v116605:0, v116606:0, v116607:0, v116608:0, v116614:0, 1, v116617:0, 0, v116613:0, -1, v116609:0, v116615:0, v116617:0, v116618:0, v116619:0, v116620:0, v116621:0, 3, 4) :|: v116606:0 > -1 && v116617:0 <= v116606:0 && v116609:0 > 0 && v116607:0 > 0 && v116614:0 > -1
f_3768(v140992:0, v140993:0, v140994:0, v140995:0, v140996:0, v140997:0, v140998:0, 1 + v163239:0, 1, -1, v141002:0, v141003:0, 0, v141005:0, v141006:0, v141007:0, 0, v141010:0, v141011:0, v141012:0, v141013:0, 3, 4) -> f_4030(v140992:0, v140993:0, v140994:0, v140995:0, v140996:0, v140997:0, v140998:0, 1 + v163239:0, 1, -1, 0, v163239:0, v166578:0, v141005:0, v141006:0, v141007:0, v141010:0, v141011:0, v141012:0, v141013:0, 3, 4) :|: v163239:0 > -2
f_3751(v140373:0, v140374:0, v140375:0, v140376:0, v140377:0, v140378:0, v140379:0, v140380:0, 1, v140382:0, 0, v140384:0, v140385:0, v140659:0, v140388:0, v140389:0, v140390:0, v140391:0, v140392:0, v140393:0, 3, 4) -> f_3893(v140373:0, v140374:0, v140375:0, v140376:0, v140377:0, v140378:0, v140379:0, v140659:0, 1, v140382:0, v154453:0, 0, v140384:0, v140385:0, v140380:0, v140388:0, v140389:0, v140390:0, v140391:0, v140392:0, v140393:0, 3, 4) :|: v140380:0 > 0 && v140659:0 > -1 && v140382:0 > v140377:0 && v140378:0 > 0
f_3891(v153598:0, v153599:0, v153600:0, v153601:0, v153602:0, v153603:0, v153604:0, v153605:0, 1, v153607:0, 0, v153609:0, v153610:0, v153611:0, v153614:0, v153613:0, v153612:0, v153615:0, v153616:0, v153617:0, v153618:0, 3, 4) -> f_3891(v153598:0, v153599:0, v153600:0, v153601:0, v153602:0, v153603:0, v153604:0, v153605:0, 1, v153607:0, 0, v153609:0, v153610:0, v153611:0, 1 + v153614:0, v157570:0, v153614:0, v153615:0, v153616:0, v153617:0, v153618:0, 3, 4) :|: v153602:0 > 0 && v153614:0 <= v153602:0 && v157570:0 < 0 && v153614:0 > -1
f_3891(v153598:0, v153599:0, v153600:0, v153601:0, v153602:0, v153603:0, v153604:0, v153605:0, 1, v153607:0, 0, v153609:0, v153610:0, v153611:0, v153614:0, v153613:0, v153612:0, v153615:0, v153616:0, v153617:0, v153618:0, 3, 4) -> f_3891(v153598:0, v153599:0, v153600:0, v153601:0, v153602:0, v153603:0, v153604:0, v153605:0, 1, v153607:0, 0, v153609:0, v153610:0, v153611:0, 1 + v153614:0, v157570:0, v153614:0, v153615:0, v153616:0, v153617:0, v153618:0, 3, 4) :|: v153602:0 > 0 && v153614:0 <= v153602:0 && v157570:0 > 0 && v153614:0 > -1
Filtered unneeded arguments:
   f_3743(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23) -> f_3743(x5, x6, x8, x10, x12, x17)
   f_3768(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23) -> f_3768(x5, x6, x8, x10, x17)
   f_3959(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22) -> f_3959(x5, x6, x8, x10)
   f_4030(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22) -> f_4030(x5, x6, x8, x12, x13)
   f_4007(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23) -> f_4007(x5, x6, x8, x10, x12, x13)
   f_4053(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23) -> f_4053(x5, x6, x8, x10, x11)
   f_3364(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22) -> f_3364(x5, x6, x8, x13, x14, x16)
   f_3893(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23) -> f_3893(x5, x6, x8, x10, x11, x17)
   f_3891(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23) -> f_3891(x5, x6, x8, x14, x15, x17)
   f_3751(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22) -> f_3751(x5, x6, x8, x10, x14, x16)
Removed division, modulo operations, cleaned up constraints. Obtained 32 rules.P rules:
f_3743(v144004:0, v144005:0, v144007:0, sum~cons_1~v149930:0, v144009:0, v144016:0) -> f_3743(v144004:0, v144005:0, v144007:0, v149930:0, 1 + v149930:0, v144016:0) :|: v144009:0 > 0 && v149930:0 > -2 && sum~cons_1~v149930:0 = 1 + v149930:0
f_3768(v140996:0, v140997:0, v140999:0, sum~cons_1~v161158:0, v141001:0) -> f_3768(v140996:0, v140997:0, v140999:0, v161158:0, 1 + v161158:0) :|: v161158:0 > -2 && v140996:0 > 0 && v141001:0 > 0 && sum~cons_1~v161158:0 = 1 + v161158:0
f_3959(v155553:0, v155554:0, sum~cons_1~v161159:0, v155562:0) -> f_4007(v155553:0, v155554:0, 1 + v161159:0, v155562:0, v161159:0, v164717:0) :|: v155562:0 > -1 && v155553:0 > -1 && v161159:0 > -2 && sum~cons_1~v161159:0 = 1 + v161159:0
f_4030(v161668:0, v161669:0, v161671:0, v163239:0, v166578:0) -> f_3364(v161668:0, v161669:0, v161671:0, v163239:0, 0, -1) :|: v166578:0 < 0
f_4030(v161668:0, v161669:0, v161671:0, v163239:0, v166578:0) -> f_3364(v161668:0, v161669:0, v161671:0, v163239:0, 0, -1) :|: v166578:0 > 0
f_4007(v160161:0, v160162:0, v160164:0, v160166:0, v161159:0, v164717:0) -> f_3891(v160161:0, v160162:0, v160164:0, v161159:0, 1 + v160166:0, v160166:0) :|: v160166:0 > -1 && v164717:0 < 0
f_4007(v160161:0, v160162:0, v160164:0, v160166:0, v161159:0, v164717:0) -> f_3891(v160161:0, v160162:0, v160164:0, v161159:0, 1 + v160166:0, v160166:0) :|: v160166:0 > -1 && v164717:0 > 0
f_3959(v155553:0, v155554:0, sum~cons_1~v163239:0, v155562:0) -> f_4030(v155553:0, v155554:0, 1 + v163239:0, v163239:0, v166578:0) :|: v155562:0 < 0 && v163239:0 > -2 && sum~cons_1~v163239:0 = 1 + v163239:0
f_4053(v166561:0, v166562:0, v166570:0, sum~cons_1~v161158:0, v168549:0) -> f_3768(v166561:0, v166562:0, v166570:0, v161158:0, 1 + v161158:0) :|: v168549:0 < 0 && v161158:0 > -2 && sum~cons_1~v161158:0 = 1 + v161158:0
f_4053(v166561:0, v166562:0, v166570:0, sum~cons_1~v161158:0, v168549:0) -> f_3768(v166561:0, v166562:0, v166570:0, v161158:0, 1 + v161158:0) :|: v168549:0 > 0 && v161158:0 > -2 && sum~cons_1~v161158:0 = 1 + v161158:0
f_3364(v116606:0, v116607:0, v116609:0, v116614:0, sum~cons_1~v149930:0, v116606:01) -> f_3743(v116606:0, v116607:0, v116614:0, v149930:0, 1 + v149930:0, 1 + v149930:0) :|: v116609:0 > 0 && v116606:0 < 1 + v149930:0 && v116614:0 > -1 && v149930:0 > -2 && v116607:0 > 0 && sum~cons_1~v149930:0 = 1 + v149930:0 && v116606:0 = v116606:01
f_4007(v160161:0, v160162:0, v160164:0, v160166:0, v161159:0, cons_0) -> f_4053(v160161:0, v160162:0, v161159:0, v160166:0, v168549:0) :|: v160162:0 > 0 && v161159:0 > -1 && v160164:0 > 0 && cons_0 = 0
f_3743(v144004:0, v144005:0, sum~cons_1~v140659:0, v144011:0, v144009:0, v144016:0) -> f_3751(v144004:0, v144005:0, 1 + v140659:0, v144011:0, v140659:0, v144016:0) :|: v140659:0 > -2 && v144011:0 > -1 && v144009:0 > 0 && sum~cons_1~v140659:0 = 1 + v140659:0
f_3959(v155553:0, v155554:0, v155561:0, sum~cons_1~v161158:0) -> f_3768(v155553:0, v155554:0, v155561:0, v161158:0, 1 + v161158:0) :|: v155553:0 > -1 && v161158:0 > -2 && sum~cons_1~v161158:0 = 1 + v161158:0
f_3768(v140996:0, v140997:0, sum~cons_1~v161159:0, v144551:0, v141001:0) -> f_4007(v140996:0, v140997:0, 1 + v161159:0, v144551:0, v161159:0, v164717:0) :|: v144551:0 > -1 && v141001:0 > 0 && v140996:0 > 0 && v161159:0 > -2 && sum~cons_1~v161159:0 = 1 + v161159:0
f_4030(v161668:0, v161669:0, v161671:0, v163239:0, cons_0) -> f_3959(v161668:0, v161669:0, v163239:0, -1) :|: v161669:0 > 0 && v163239:0 > -1 && v161671:0 > 0 && cons_0 = 0
f_3893(v146650:0, v146651:0, sum~cons_1~v140659:0, v146660:0, cons_0, v146662:0) -> f_3751(v146650:0, v146651:0, 1 + v140659:0, v146660:0, v140659:0, v146662:0) :|: v140659:0 > -2 && sum~cons_1~v140659:0 = 1 + v140659:0 && cons_0 = 0
f_3891(v153602:0, v153603:0, v153605:0, v153611:0, v153614:0, v153602:01) -> f_3893(v153602:0, v153603:0, v153611:0, v153614:0, v154453:0, v153614:0) :|: v153605:0 > 0 && v153614:0 > v153602:0 && v153611:0 > -1 && v153603:0 > 0 && v153602:0 = v153602:01
f_3743(v144004:0, v144005:0, sum~cons_1~v146811:0, cons_-1, cons_0, v144016:0) -> f_3364(v144004:0, v144005:0, 1 + v146811:0, v146811:0, 0, -1) :|: v146811:0 > -2 && sum~cons_1~v146811:0 = 1 + v146811:0 && cons_-1 = -1 && cons_0 = 0
f_3364(v116606:0, v116607:0, v116609:0, sum~cons_1~v140659:0, v116617:0, v116606:01) -> f_3751(v116606:0, v116607:0, 1 + v140659:0, v116617:0, v140659:0, v116617:0) :|: v116609:0 > 0 && v116617:0 > v116606:0 && v116607:0 > 0 && v140659:0 > -2 && sum~cons_1~v140659:0 = 1 + v140659:0 && v116606:0 = v116606:01
f_3364(v116606:0, v116607:0, v116609:0, v116614:0, v116617:0, v116615:0) -> f_3364(v116606:0, v116607:0, v116609:0, v116614:0, 1 + v116617:0, v116617:0) :|: v116617:0 <= v116606:0 && v116617:0 > -2 && v116606:0 > -1
f_3751(v140377:0, v140378:0, v140380:0, v140382:0, v140659:0, v140389:0) -> f_3891(v140377:0, v140378:0, v140380:0, v140659:0, 1 + v140382:0, v140382:0) :|: v140377:0 > -1 && v140382:0 > -1 && v140389:0 > 0 && v140382:0 <= v140377:0
f_3751(v140377:0, v140378:0, v140380:0, v140382:0, v140659:0, v140389:0) -> f_4053(v140377:0, v140378:0, v140659:0, v140382:0, v168549:0) :|: v140659:0 > -1 && v140380:0 > 0 && v140377:0 > -1 && v140382:0 <= v140377:0 && v140378:0 > 0 && v140389:0 > 0
f_4053(v166561:0, v166562:0, sum~cons_1~v161159:0, v166571:0, cons_0) -> f_4007(v166561:0, v166562:0, 1 + v161159:0, v166571:0, v161159:0, v164717:0) :|: v161159:0 > -2 && sum~cons_1~v161159:0 = 1 + v161159:0 && cons_0 = 0
f_3743(v144004:0, v144005:0, sum~cons_1~v146811:0, cons_-1, cons_0, v144016:0) -> f_3959(v144004:0, v144005:0, v146811:0, -1) :|: v146811:0 > -1 && v144005:0 > 0 && sum~cons_1~v146811:0 = 1 + v146811:0 && cons_-1 = -1 && cons_0 = 0
f_3893(v146650:0, v146651:0, v146659:0, sum~cons_1~v149930:0, v154453:0, v146662:0) -> f_3743(v146650:0, v146651:0, v146659:0, v149930:0, 1 + v149930:0, v146662:0) :|: v149930:0 > -2 && v154453:0 < 0 && sum~cons_1~v149930:0 = 1 + v149930:0
f_3893(v146650:0, v146651:0, v146659:0, sum~cons_1~v149930:0, v154453:0, v146662:0) -> f_3743(v146650:0, v146651:0, v146659:0, v149930:0, 1 + v149930:0, v146662:0) :|: v149930:0 > -2 && v154453:0 > 0 && sum~cons_1~v149930:0 = 1 + v149930:0
f_3891(v153602:0, v153603:0, v153605:0, v153611:0, v153614:0, v153612:0) -> f_4053(v153602:0, v153603:0, v153611:0, v153614:0, v168549:0) :|: v153614:0 <= v153602:0 && v153602:0 > 0 && v153605:0 > 0 && v153611:0 > -1 && v153603:0 > 0
f_3364(v116606:0, v116607:0, v116609:0, v116614:0, v116617:0, v116615:0) -> f_3959(v116606:0, v116607:0, v116614:0, v116617:0) :|: v116617:0 <= v116606:0 && v116606:0 > -1 && v116609:0 > 0 && v116614:0 > -1 && v116607:0 > 0
f_3768(v140996:0, v140997:0, sum~cons_1~v163239:0, cons_-1, cons_0) -> f_4030(v140996:0, v140997:0, 1 + v163239:0, v163239:0, v166578:0) :|: v163239:0 > -2 && sum~cons_1~v163239:0 = 1 + v163239:0 && cons_-1 = -1 && cons_0 = 0
f_3751(v140377:0, v140378:0, v140380:0, v140382:0, v140659:0, v140389:0) -> f_3893(v140377:0, v140378:0, v140659:0, v140382:0, v154453:0, v140389:0) :|: v140659:0 > -1 && v140380:0 > 0 && v140378:0 > 0 && v140382:0 > v140377:0
f_3891(v153602:0, v153603:0, v153605:0, v153611:0, v153614:0, v153612:0) -> f_3891(v153602:0, v153603:0, v153605:0, v153611:0, 1 + v153614:0, v153614:0) :|: v153614:0 <= v153602:0 && v153614:0 > -1 && v153602:0 > 0

----------------------------------------

(9)
Obligation:
Rules:
f_3743(v144004:0, v144005:0, v144007:0, sum~cons_1~v149930:0, v144009:0, v144016:0) -> f_3743(v144004:0, v144005:0, v144007:0, v149930:0, 1 + v149930:0, v144016:0) :|: v144009:0 > 0 && v149930:0 > -2 && sum~cons_1~v149930:0 = 1 + v149930:0
f_3768(v140996:0, v140997:0, v140999:0, sum~cons_1~v161158:0, v141001:0) -> f_3768(v140996:0, v140997:0, v140999:0, v161158:0, 1 + v161158:0) :|: v161158:0 > -2 && v140996:0 > 0 && v141001:0 > 0 && sum~cons_1~v161158:0 = 1 + v161158:0
f_3959(v155553:0, v155554:0, sum~cons_1~v161159:0, v155562:0) -> f_4007(v155553:0, v155554:0, 1 + v161159:0, v155562:0, v161159:0, v164717:0) :|: v155562:0 > -1 && v155553:0 > -1 && v161159:0 > -2 && sum~cons_1~v161159:0 = 1 + v161159:0
f_4030(v161668:0, v161669:0, v161671:0, v163239:0, v166578:0) -> f_3364(v161668:0, v161669:0, v161671:0, v163239:0, 0, -1) :|: v166578:0 < 0
f_4030(x, x1, x2, x3, x4) -> f_3364(x, x1, x2, x3, 0, -1) :|: x4 > 0
f_4007(x5, x6, x7, x8, x9, x10) -> f_3891(x5, x6, x7, x9, 1 + x8, x8) :|: x8 > -1 && x10 < 0
f_4007(x11, x12, x13, x14, x15, x16) -> f_3891(x11, x12, x13, x15, 1 + x14, x14) :|: x14 > -1 && x16 > 0
f_3959(x17, x18, x19, x20) -> f_4030(x17, x18, 1 + x21, x21, x22) :|: x20 < 0 && x21 > -2 && x19 = 1 + x21
f_4053(x23, x24, x25, x26, x27) -> f_3768(x23, x24, x25, x28, 1 + x28) :|: x27 < 0 && x28 > -2 && x26 = 1 + x28
f_4053(x29, x30, x31, x32, x33) -> f_3768(x29, x30, x31, x34, 1 + x34) :|: x33 > 0 && x34 > -2 && x32 = 1 + x34
f_3364(x35, x36, x37, x38, x39, x40) -> f_3743(x35, x36, x38, x41, 1 + x41, 1 + x41) :|: x37 > 0 && x35 < 1 + x41 && x38 > -1 && x41 > -2 && x36 > 0 && x39 = 1 + x41 && x35 = x40
f_4007(x42, x43, x44, x45, x46, x47) -> f_4053(x42, x43, x46, x45, x48) :|: x43 > 0 && x46 > -1 && x44 > 0 && x47 = 0
f_3743(x49, x50, x51, x52, x53, x54) -> f_3751(x49, x50, 1 + x55, x52, x55, x54) :|: x55 > -2 && x52 > -1 && x53 > 0 && x51 = 1 + x55
f_3959(x56, x57, x58, x59) -> f_3768(x56, x57, x58, x60, 1 + x60) :|: x56 > -1 && x60 > -2 && x59 = 1 + x60
f_3768(x61, x62, x63, x64, x65) -> f_4007(x61, x62, 1 + x66, x64, x66, x67) :|: x64 > -1 && x65 > 0 && x61 > 0 && x66 > -2 && x63 = 1 + x66
f_4030(x68, x69, x70, x71, x72) -> f_3959(x68, x69, x71, -1) :|: x69 > 0 && x71 > -1 && x70 > 0 && x72 = 0
f_3893(v146650:0, v146651:0, sum~cons_1~v140659:0, v146660:0, cons_0, v146662:0) -> f_3751(v146650:0, v146651:0, 1 + v140659:0, v146660:0, v140659:0, v146662:0) :|: v140659:0 > -2 && sum~cons_1~v140659:0 = 1 + v140659:0 && cons_0 = 0
f_3891(v153602:0, v153603:0, v153605:0, v153611:0, v153614:0, v153602:01) -> f_3893(v153602:0, v153603:0, v153611:0, v153614:0, v154453:0, v153614:0) :|: v153605:0 > 0 && v153614:0 > v153602:0 && v153611:0 > -1 && v153603:0 > 0 && v153602:0 = v153602:01
f_3743(x73, x74, x75, x76, x77, x78) -> f_3364(x73, x74, 1 + x79, x79, 0, -1) :|: x79 > -2 && x75 = 1 + x79 && x76 = -1 && x77 = 0
f_3364(x80, x81, x82, x83, x84, x85) -> f_3751(x80, x81, 1 + x86, x84, x86, x84) :|: x82 > 0 && x84 > x80 && x81 > 0 && x86 > -2 && x83 = 1 + x86 && x80 = x85
f_3364(v116606:0, v116607:0, v116609:0, v116614:0, v116617:0, v116615:0) -> f_3364(v116606:0, v116607:0, v116609:0, v116614:0, 1 + v116617:0, v116617:0) :|: v116617:0 <= v116606:0 && v116617:0 > -2 && v116606:0 > -1
f_3751(x87, x88, x89, x90, x91, x92) -> f_3891(x87, x88, x89, x91, 1 + x90, x90) :|: x87 > -1 && x90 > -1 && x92 > 0 && x90 <= x87
f_3751(x93, x94, x95, x96, x97, x98) -> f_4053(x93, x94, x97, x96, x99) :|: x97 > -1 && x95 > 0 && x93 > -1 && x96 <= x93 && x94 > 0 && x98 > 0
f_4053(x100, x101, x102, x103, x104) -> f_4007(x100, x101, 1 + x105, x103, x105, x106) :|: x105 > -2 && x102 = 1 + x105 && x104 = 0
f_3743(x107, x108, x109, x110, x111, x112) -> f_3959(x107, x108, x113, -1) :|: x113 > -1 && x108 > 0 && x109 = 1 + x113 && x110 = -1 && x111 = 0
f_3893(x114, x115, x116, x117, x118, x119) -> f_3743(x114, x115, x116, x120, 1 + x120, x119) :|: x120 > -2 && x118 < 0 && x117 = 1 + x120
f_3893(x121, x122, x123, x124, x125, x126) -> f_3743(x121, x122, x123, x127, 1 + x127, x126) :|: x127 > -2 && x125 > 0 && x124 = 1 + x127
f_3891(x128, x129, x130, x131, x132, x133) -> f_4053(x128, x129, x131, x132, x134) :|: x132 <= x128 && x128 > 0 && x130 > 0 && x131 > -1 && x129 > 0
f_3364(x135, x136, x137, x138, x139, x140) -> f_3959(x135, x136, x138, x139) :|: x139 <= x135 && x135 > -1 && x137 > 0 && x138 > -1 && x136 > 0
f_3768(x141, x142, x143, x144, x145) -> f_4030(x141, x142, 1 + x146, x146, x147) :|: x146 > -2 && x143 = 1 + x146 && x144 = -1 && x145 = 0
f_3751(x148, x149, x150, x151, x152, x153) -> f_3893(x148, x149, x152, x151, x154, x153) :|: x152 > -1 && x150 > 0 && x149 > 0 && x151 > x148
f_3891(x155, x156, x157, x158, x159, x160) -> f_3891(x155, x156, x157, x158, 1 + x159, x159) :|: x159 <= x155 && x159 > -1 && x155 > 0

----------------------------------------

(10) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(11)
Obligation:
Rules:
f_4053(x23:0, x24:0, x25:0, sum~cons_1~x28:0, x27:0) -> f_3768(x23:0, x24:0, x25:0, x28:0, 1 + x28:0) :|: x27:0 < 0 && x28:0 > -2 && sum~cons_1~x28:0 = 1 + x28:0
f_3364(x135:0, x136:0, x137:0, x138:0, x139:0, x140:0) -> f_3959(x135:0, x136:0, x138:0, x139:0) :|: x138:0 > -1 && x136:0 > 0 && x137:0 > 0 && x135:0 > -1 && x139:0 <= x135:0
f_4030(x:0, x1:0, x2:0, x3:0, x4:0) -> f_3364(x:0, x1:0, x2:0, x3:0, 0, -1) :|: x4:0 > 0
f_3959(x56:0, x57:0, x58:0, sum~cons_1~x60:0) -> f_3768(x56:0, x57:0, x58:0, x60:0, 1 + x60:0) :|: x56:0 > -1 && x60:0 > -2 && sum~cons_1~x60:0 = 1 + x60:0
f_3959(v155553:0:0, v155554:0:0, sum~cons_1~v161159:0:0, v155562:0:0) -> f_4007(v155553:0:0, v155554:0:0, 1 + v161159:0:0, v155562:0:0, v161159:0:0, v164717:0:0) :|: v155562:0:0 > -1 && v155553:0:0 > -1 && v161159:0:0 > -2 && sum~cons_1~v161159:0:0 = 1 + v161159:0:0
f_4007(x5:0, x6:0, x7:0, x8:0, x9:0, x10:0) -> f_3891(x5:0, x6:0, x7:0, x9:0, 1 + x8:0, x8:0) :|: x8:0 > -1 && x10:0 < 0
f_3751(x148:0, x149:0, x150:0, x151:0, x152:0, x153:0) -> f_3893(x148:0, x149:0, x152:0, x151:0, x154:0, x153:0) :|: x149:0 > 0 && x151:0 > x148:0 && x150:0 > 0 && x152:0 > -1
f_3768(v140996:0:0, v140997:0:0, v140999:0:0, sum~cons_1~v161158:0:0, v141001:0:0) -> f_3768(v140996:0:0, v140997:0:0, v140999:0:0, v161158:0:0, 1 + v161158:0:0) :|: v161158:0:0 > -2 && v140996:0:0 > 0 && v141001:0:0 > 0 && sum~cons_1~v161158:0:0 = 1 + v161158:0:0
f_4007(x42:0, x43:0, x44:0, x45:0, x46:0, cons_0) -> f_4053(x42:0, x43:0, x46:0, x45:0, x48:0) :|: x43:0 > 0 && x46:0 > -1 && x44:0 > 0 && cons_0 = 0
f_3743(x, x1, x2, x3, x4, x5) -> f_3959(x, x1, x6, -1) :|: x6 > -1 && x1 > 0 && x2 = 1 + x6 && x3 = -1 && x4 = 0
f_3893(x114:0, x115:0, x116:0, sum~cons_1~x120:0, x118:0, x119:0) -> f_3743(x114:0, x115:0, x116:0, x120:0, 1 + x120:0, x119:0) :|: x120:0 > -2 && x118:0 < 0 && sum~cons_1~x120:0 = 1 + x120:0
f_3959(x17:0, x18:0, sum~cons_1~x21:0, x20:0) -> f_4030(x17:0, x18:0, 1 + x21:0, x21:0, x22:0) :|: x20:0 < 0 && x21:0 > -2 && sum~cons_1~x21:0 = 1 + x21:0
f_4007(x11:0, x12:0, x13:0, x14:0, x15:0, x16:0) -> f_3891(x11:0, x12:0, x13:0, x15:0, 1 + x14:0, x14:0) :|: x14:0 > -1 && x16:0 > 0
f_3891(x155:0, x156:0, x157:0, x158:0, x159:0, x160:0) -> f_3891(x155:0, x156:0, x157:0, x158:0, 1 + x159:0, x159:0) :|: x159:0 <= x155:0 && x159:0 > -1 && x155:0 > 0
f_3364(v116606:0:0, v116607:0:0, v116609:0:0, v116614:0:0, v116617:0:0, v116615:0:0) -> f_3364(v116606:0:0, v116607:0:0, v116609:0:0, v116614:0:0, 1 + v116617:0:0, v116617:0:0) :|: v116617:0:0 <= v116606:0:0 && v116617:0:0 > -2 && v116606:0:0 > -1
f_3891(x128:0, x129:0, x130:0, x131:0, x132:0, x133:0) -> f_4053(x128:0, x129:0, x131:0, x132:0, x134:0) :|: x131:0 > -1 && x129:0 > 0 && x130:0 > 0 && x128:0 > 0 && x132:0 <= x128:0
f_3364(x35:0, x36:0, x37:0, x38:0, sum~cons_1~x41:0, x35:01) -> f_3743(x35:0, x36:0, x38:0, x41:0, 1 + x41:0, 1 + x41:0) :|: x41:0 > -2 && x36:0 > 0 && x38:0 > -1 && x35:0 < 1 + x41:0 && x37:0 > 0 && sum~cons_1~x41:0 = 1 + x41:0 && x35:0 = x35:01
f_3893(x7, x8, x9, x10, x11, x12) -> f_3751(x7, x8, 1 + x13, x10, x13, x12) :|: x13 > -2 && x9 = 1 + x13 && x11 = 0
f_3743(x49:0, x50:0, sum~cons_1~x55:0, x52:0, x53:0, x54:0) -> f_3751(x49:0, x50:0, 1 + x55:0, x52:0, x55:0, x54:0) :|: x55:0 > -2 && x52:0 > -1 && x53:0 > 0 && sum~cons_1~x55:0 = 1 + x55:0
f_3751(x93:0, x94:0, x95:0, x96:0, x97:0, x98:0) -> f_4053(x93:0, x94:0, x97:0, x96:0, x99:0) :|: x94:0 > 0 && x98:0 > 0 && x96:0 <= x93:0 && x93:0 > -1 && x95:0 > 0 && x97:0 > -1
f_3768(x61:0, x62:0, sum~cons_1~x66:0, x64:0, x65:0) -> f_4007(x61:0, x62:0, 1 + x66:0, x64:0, x66:0, x67:0) :|: x61:0 > 0 && x66:0 > -2 && x65:0 > 0 && x64:0 > -1 && sum~cons_1~x66:0 = 1 + x66:0
f_3891(v153602:01:0, v153603:0:0, v153605:0:0, v153611:0:0, v153614:0:0, v153602:01:01) -> f_3893(v153602:01:0, v153603:0:0, v153611:0:0, v153614:0:0, v154453:0:0, v153614:0:0) :|: v153611:0:0 > -1 && v153603:0:0 > 0 && v153614:0:0 > v153602:01:0 && v153605:0:0 > 0 && v153602:01:0 = v153602:01:01
f_3768(x14, x15, x16, x17, x18) -> f_4030(x14, x15, 1 + x19, x19, x20) :|: x19 > -2 && x16 = 1 + x19 && x17 = -1 && x18 = 0
f_4030(x21, x22, x23, x24, x25) -> f_3959(x21, x22, x24, -1) :|: x22 > 0 && x24 > -1 && x23 > 0 && x25 = 0
f_3893(x121:0, x122:0, x123:0, sum~cons_1~x127:0, x125:0, x126:0) -> f_3743(x121:0, x122:0, x123:0, x127:0, 1 + x127:0, x126:0) :|: x127:0 > -2 && x125:0 > 0 && sum~cons_1~x127:0 = 1 + x127:0
f_4030(v161668:0:0, v161669:0:0, v161671:0:0, v163239:0:0, v166578:0:0) -> f_3364(v161668:0:0, v161669:0:0, v161671:0:0, v163239:0:0, 0, -1) :|: v166578:0:0 < 0
f_3743(x26, x27, x28, x29, x30, x31) -> f_3364(x26, x27, 1 + x32, x32, 0, -1) :|: x32 > -2 && x28 = 1 + x32 && x29 = -1 && x30 = 0
f_4053(x29:0, x30:0, x31:0, sum~cons_1~x34:0, x33:0) -> f_3768(x29:0, x30:0, x31:0, x34:0, 1 + x34:0) :|: x33:0 > 0 && x34:0 > -2 && sum~cons_1~x34:0 = 1 + x34:0
f_4053(x33, x34, x35, x36, x37) -> f_4007(x33, x34, 1 + x38, x36, x38, x39) :|: x38 > -2 && x35 = 1 + x38 && x37 = 0
f_3751(x87:0, x88:0, x89:0, x90:0, x91:0, x92:0) -> f_3891(x87:0, x88:0, x89:0, x91:0, 1 + x90:0, x90:0) :|: x92:0 > 0 && x90:0 <= x87:0 && x90:0 > -1 && x87:0 > -1
f_3743(v144004:0:0, v144005:0:0, v144007:0:0, sum~cons_1~v149930:0:0, v144009:0:0, v144016:0:0) -> f_3743(v144004:0:0, v144005:0:0, v144007:0:0, v149930:0:0, 1 + v149930:0:0, v144016:0:0) :|: v144009:0:0 > 0 && v149930:0:0 > -2 && sum~cons_1~v149930:0:0 = 1 + v149930:0:0
f_3364(x80:0, x81:0, x82:0, sum~cons_1~x86:0, x84:0, x80:01) -> f_3751(x80:0, x81:0, 1 + x86:0, x84:0, x86:0, x84:0) :|: x81:0 > 0 && x86:0 > -2 && x84:0 > x80:0 && x82:0 > 0 && sum~cons_1~x86:0 = 1 + x86:0 && x80:0 = x80:01

----------------------------------------

(12) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_4053(x, x1, x2, x3, x4)] = -1 + x + x2
[f_3768(x5, x6, x7, x8, x9)] = -1 + x5 + x7
[f_3364(x10, x11, x12, x13, x14, x15)] = x10 + x13
[f_3959(x16, x17, x18, x19)] = x16 + x18
[f_4030(x20, x21, x22, x23, x24)] = x20 + x23
[f_4007(x25, x26, x27, x28, x29, x30)] = x25 + x29
[f_3891(x31, x32, x33, x34, x35, x36)] = x31 + x34
[f_3751(x37, x38, x39, x40, x41, x42)] = 1 + x37 + x41
[f_3893(x43, x44, x45, x46, x47, x48)] = x43 + x45
[f_3743(x49, x50, x51, x52, x53, x54)] = x49 + x51

The following rules are decreasing:
f_3959(x56:0, x57:0, x58:0, sum~cons_1~x60:0) -> f_3768(x56:0, x57:0, x58:0, x60:0, 1 + x60:0) :|: x56:0 > -1 && x60:0 > -2 && sum~cons_1~x60:0 = 1 + x60:0
f_3959(v155553:0:0, v155554:0:0, sum~cons_1~v161159:0:0, v155562:0:0) -> f_4007(v155553:0:0, v155554:0:0, 1 + v161159:0:0, v155562:0:0, v161159:0:0, v164717:0:0) :|: v155562:0:0 > -1 && v155553:0:0 > -1 && v161159:0:0 > -2 && sum~cons_1~v161159:0:0 = 1 + v161159:0:0
f_3751(x148:0, x149:0, x150:0, x151:0, x152:0, x153:0) -> f_3893(x148:0, x149:0, x152:0, x151:0, x154:0, x153:0) :|: x149:0 > 0 && x151:0 > x148:0 && x150:0 > 0 && x152:0 > -1
f_4007(x42:0, x43:0, x44:0, x45:0, x46:0, cons_0) -> f_4053(x42:0, x43:0, x46:0, x45:0, x48:0) :|: x43:0 > 0 && x46:0 > -1 && x44:0 > 0 && cons_0 = 0
f_3743(x, x1, x2, x3, x4, x5) -> f_3959(x, x1, x6, -1) :|: x6 > -1 && x1 > 0 && x2 = 1 + x6 && x3 = -1 && x4 = 0
f_3959(x17:0, x18:0, sum~cons_1~x21:0, x20:0) -> f_4030(x17:0, x18:0, 1 + x21:0, x21:0, x22:0) :|: x20:0 < 0 && x21:0 > -2 && sum~cons_1~x21:0 = 1 + x21:0
f_3891(x128:0, x129:0, x130:0, x131:0, x132:0, x133:0) -> f_4053(x128:0, x129:0, x131:0, x132:0, x134:0) :|: x131:0 > -1 && x129:0 > 0 && x130:0 > 0 && x128:0 > 0 && x132:0 <= x128:0
f_3751(x93:0, x94:0, x95:0, x96:0, x97:0, x98:0) -> f_4053(x93:0, x94:0, x97:0, x96:0, x99:0) :|: x94:0 > 0 && x98:0 > 0 && x96:0 <= x93:0 && x93:0 > -1 && x95:0 > 0 && x97:0 > -1
f_3743(x26, x27, x28, x29, x30, x31) -> f_3364(x26, x27, 1 + x32, x32, 0, -1) :|: x32 > -2 && x28 = 1 + x32 && x29 = -1 && x30 = 0
f_3751(x87:0, x88:0, x89:0, x90:0, x91:0, x92:0) -> f_3891(x87:0, x88:0, x89:0, x91:0, 1 + x90:0, x90:0) :|: x92:0 > 0 && x90:0 <= x87:0 && x90:0 > -1 && x87:0 > -1
The following rules are bounded:
f_3364(x135:0, x136:0, x137:0, x138:0, x139:0, x140:0) -> f_3959(x135:0, x136:0, x138:0, x139:0) :|: x138:0 > -1 && x136:0 > 0 && x137:0 > 0 && x135:0 > -1 && x139:0 <= x135:0
f_3959(v155553:0:0, v155554:0:0, sum~cons_1~v161159:0:0, v155562:0:0) -> f_4007(v155553:0:0, v155554:0:0, 1 + v161159:0:0, v155562:0:0, v161159:0:0, v164717:0:0) :|: v155562:0:0 > -1 && v155553:0:0 > -1 && v161159:0:0 > -2 && sum~cons_1~v161159:0:0 = 1 + v161159:0:0
f_3891(x128:0, x129:0, x130:0, x131:0, x132:0, x133:0) -> f_4053(x128:0, x129:0, x131:0, x132:0, x134:0) :|: x131:0 > -1 && x129:0 > 0 && x130:0 > 0 && x128:0 > 0 && x132:0 <= x128:0
f_3751(x93:0, x94:0, x95:0, x96:0, x97:0, x98:0) -> f_4053(x93:0, x94:0, x97:0, x96:0, x99:0) :|: x94:0 > 0 && x98:0 > 0 && x96:0 <= x93:0 && x93:0 > -1 && x95:0 > 0 && x97:0 > -1
f_3768(x61:0, x62:0, sum~cons_1~x66:0, x64:0, x65:0) -> f_4007(x61:0, x62:0, 1 + x66:0, x64:0, x66:0, x67:0) :|: x61:0 > 0 && x66:0 > -2 && x65:0 > 0 && x64:0 > -1 && sum~cons_1~x66:0 = 1 + x66:0

----------------------------------------

(13)
Complex Obligation (AND)

----------------------------------------

(14)
Obligation:
Rules:
f_4053(x23:0, x24:0, x25:0, sum~cons_1~x28:0, x27:0) -> f_3768(x23:0, x24:0, x25:0, x28:0, 1 + x28:0) :|: x27:0 < 0 && x28:0 > -2 && sum~cons_1~x28:0 = 1 + x28:0
f_3364(x135:0, x136:0, x137:0, x138:0, x139:0, x140:0) -> f_3959(x135:0, x136:0, x138:0, x139:0) :|: x138:0 > -1 && x136:0 > 0 && x137:0 > 0 && x135:0 > -1 && x139:0 <= x135:0
f_4030(x:0, x1:0, x2:0, x3:0, x4:0) -> f_3364(x:0, x1:0, x2:0, x3:0, 0, -1) :|: x4:0 > 0
f_4007(x5:0, x6:0, x7:0, x8:0, x9:0, x10:0) -> f_3891(x5:0, x6:0, x7:0, x9:0, 1 + x8:0, x8:0) :|: x8:0 > -1 && x10:0 < 0
f_3768(v140996:0:0, v140997:0:0, v140999:0:0, sum~cons_1~v161158:0:0, v141001:0:0) -> f_3768(v140996:0:0, v140997:0:0, v140999:0:0, v161158:0:0, 1 + v161158:0:0) :|: v161158:0:0 > -2 && v140996:0:0 > 0 && v141001:0:0 > 0 && sum~cons_1~v161158:0:0 = 1 + v161158:0:0
f_3893(x114:0, x115:0, x116:0, sum~cons_1~x120:0, x118:0, x119:0) -> f_3743(x114:0, x115:0, x116:0, x120:0, 1 + x120:0, x119:0) :|: x120:0 > -2 && x118:0 < 0 && sum~cons_1~x120:0 = 1 + x120:0
f_4007(x11:0, x12:0, x13:0, x14:0, x15:0, x16:0) -> f_3891(x11:0, x12:0, x13:0, x15:0, 1 + x14:0, x14:0) :|: x14:0 > -1 && x16:0 > 0
f_3891(x155:0, x156:0, x157:0, x158:0, x159:0, x160:0) -> f_3891(x155:0, x156:0, x157:0, x158:0, 1 + x159:0, x159:0) :|: x159:0 <= x155:0 && x159:0 > -1 && x155:0 > 0
f_3364(v116606:0:0, v116607:0:0, v116609:0:0, v116614:0:0, v116617:0:0, v116615:0:0) -> f_3364(v116606:0:0, v116607:0:0, v116609:0:0, v116614:0:0, 1 + v116617:0:0, v116617:0:0) :|: v116617:0:0 <= v116606:0:0 && v116617:0:0 > -2 && v116606:0:0 > -1
f_3364(x35:0, x36:0, x37:0, x38:0, sum~cons_1~x41:0, x35:01) -> f_3743(x35:0, x36:0, x38:0, x41:0, 1 + x41:0, 1 + x41:0) :|: x41:0 > -2 && x36:0 > 0 && x38:0 > -1 && x35:0 < 1 + x41:0 && x37:0 > 0 && sum~cons_1~x41:0 = 1 + x41:0 && x35:0 = x35:01
f_3893(x7, x8, x9, x10, x11, x12) -> f_3751(x7, x8, 1 + x13, x10, x13, x12) :|: x13 > -2 && x9 = 1 + x13 && x11 = 0
f_3743(x49:0, x50:0, sum~cons_1~x55:0, x52:0, x53:0, x54:0) -> f_3751(x49:0, x50:0, 1 + x55:0, x52:0, x55:0, x54:0) :|: x55:0 > -2 && x52:0 > -1 && x53:0 > 0 && sum~cons_1~x55:0 = 1 + x55:0
f_3768(x61:0, x62:0, sum~cons_1~x66:0, x64:0, x65:0) -> f_4007(x61:0, x62:0, 1 + x66:0, x64:0, x66:0, x67:0) :|: x61:0 > 0 && x66:0 > -2 && x65:0 > 0 && x64:0 > -1 && sum~cons_1~x66:0 = 1 + x66:0
f_3891(v153602:01:0, v153603:0:0, v153605:0:0, v153611:0:0, v153614:0:0, v153602:01:01) -> f_3893(v153602:01:0, v153603:0:0, v153611:0:0, v153614:0:0, v154453:0:0, v153614:0:0) :|: v153611:0:0 > -1 && v153603:0:0 > 0 && v153614:0:0 > v153602:01:0 && v153605:0:0 > 0 && v153602:01:0 = v153602:01:01
f_3768(x14, x15, x16, x17, x18) -> f_4030(x14, x15, 1 + x19, x19, x20) :|: x19 > -2 && x16 = 1 + x19 && x17 = -1 && x18 = 0
f_4030(x21, x22, x23, x24, x25) -> f_3959(x21, x22, x24, -1) :|: x22 > 0 && x24 > -1 && x23 > 0 && x25 = 0
f_3893(x121:0, x122:0, x123:0, sum~cons_1~x127:0, x125:0, x126:0) -> f_3743(x121:0, x122:0, x123:0, x127:0, 1 + x127:0, x126:0) :|: x127:0 > -2 && x125:0 > 0 && sum~cons_1~x127:0 = 1 + x127:0
f_4030(v161668:0:0, v161669:0:0, v161671:0:0, v163239:0:0, v166578:0:0) -> f_3364(v161668:0:0, v161669:0:0, v161671:0:0, v163239:0:0, 0, -1) :|: v166578:0:0 < 0
f_4053(x29:0, x30:0, x31:0, sum~cons_1~x34:0, x33:0) -> f_3768(x29:0, x30:0, x31:0, x34:0, 1 + x34:0) :|: x33:0 > 0 && x34:0 > -2 && sum~cons_1~x34:0 = 1 + x34:0
f_4053(x33, x34, x35, x36, x37) -> f_4007(x33, x34, 1 + x38, x36, x38, x39) :|: x38 > -2 && x35 = 1 + x38 && x37 = 0
f_3743(v144004:0:0, v144005:0:0, v144007:0:0, sum~cons_1~v149930:0:0, v144009:0:0, v144016:0:0) -> f_3743(v144004:0:0, v144005:0:0, v144007:0:0, v149930:0:0, 1 + v149930:0:0, v144016:0:0) :|: v144009:0:0 > 0 && v149930:0:0 > -2 && sum~cons_1~v149930:0:0 = 1 + v149930:0:0
f_3364(x80:0, x81:0, x82:0, sum~cons_1~x86:0, x84:0, x80:01) -> f_3751(x80:0, x81:0, 1 + x86:0, x84:0, x86:0, x84:0) :|: x81:0 > 0 && x86:0 > -2 && x84:0 > x80:0 && x82:0 > 0 && sum~cons_1~x86:0 = 1 + x86:0 && x80:0 = x80:01

----------------------------------------

(15) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained 4 non-trivial SCCs.

----------------------------------------

(16)
Complex Obligation (AND)

----------------------------------------

(17)
Obligation:
Rules:
f_3768(v140996:0:0, v140997:0:0, v140999:0:0, sum~cons_1~v161158:0:0, v141001:0:0) -> f_3768(v140996:0:0, v140997:0:0, v140999:0:0, v161158:0:0, 1 + v161158:0:0) :|: v161158:0:0 > -2 && v140996:0:0 > 0 && v141001:0:0 > 0 && sum~cons_1~v161158:0:0 = 1 + v161158:0:0

----------------------------------------

(18) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(19)
Obligation:
Rules:
f_3768(v140996:0:0:0, v140997:0:0:0, v140999:0:0:0, sum~cons_1~v161158:0:0:0, v141001:0:0:0) -> f_3768(v140996:0:0:0, v140997:0:0:0, v140999:0:0:0, v161158:0:0:0, 1 + v161158:0:0:0) :|: v161158:0:0:0 > -2 && v140996:0:0:0 > 0 && v141001:0:0:0 > 0 && sum~cons_1~v161158:0:0:0 = 1 + v161158:0:0:0

----------------------------------------

(20) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_3768(x1, x2, x3, x4, x5) -> f_3768(x1, x4, x5)

----------------------------------------

(21)
Obligation:
Rules:
f_3768(v140996:0:0:0, sum~cons_1~v161158:0:0:0, v141001:0:0:0) -> f_3768(v140996:0:0:0, v161158:0:0:0, 1 + v161158:0:0:0) :|: v161158:0:0:0 > -2 && v140996:0:0:0 > 0 && v141001:0:0:0 > 0 && sum~cons_1~v161158:0:0:0 = 1 + v161158:0:0:0

----------------------------------------

(22) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_3768(x, x1, x2)] = x1

The following rules are decreasing:
f_3768(v140996:0:0:0, sum~cons_1~v161158:0:0:0, v141001:0:0:0) -> f_3768(v140996:0:0:0, v161158:0:0:0, 1 + v161158:0:0:0) :|: v161158:0:0:0 > -2 && v140996:0:0:0 > 0 && v141001:0:0:0 > 0 && sum~cons_1~v161158:0:0:0 = 1 + v161158:0:0:0
The following rules are bounded:
f_3768(v140996:0:0:0, sum~cons_1~v161158:0:0:0, v141001:0:0:0) -> f_3768(v140996:0:0:0, v161158:0:0:0, 1 + v161158:0:0:0) :|: v161158:0:0:0 > -2 && v140996:0:0:0 > 0 && v141001:0:0:0 > 0 && sum~cons_1~v161158:0:0:0 = 1 + v161158:0:0:0

----------------------------------------

(23)
YES

----------------------------------------

(24)
Obligation:
Rules:
f_3364(v116606:0:0, v116607:0:0, v116609:0:0, v116614:0:0, v116617:0:0, v116615:0:0) -> f_3364(v116606:0:0, v116607:0:0, v116609:0:0, v116614:0:0, 1 + v116617:0:0, v116617:0:0) :|: v116617:0:0 <= v116606:0:0 && v116617:0:0 > -2 && v116606:0:0 > -1

----------------------------------------

(25) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(26)
Obligation:
Rules:
f_3364(v116606:0:0:0, v116607:0:0:0, v116609:0:0:0, v116614:0:0:0, v116617:0:0:0, v116615:0:0:0) -> f_3364(v116606:0:0:0, v116607:0:0:0, v116609:0:0:0, v116614:0:0:0, 1 + v116617:0:0:0, v116617:0:0:0) :|: v116617:0:0:0 <= v116606:0:0:0 && v116617:0:0:0 > -2 && v116606:0:0:0 > -1

----------------------------------------

(27) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_3364(x1, x2, x3, x4, x5, x6) -> f_3364(x1, x5)

----------------------------------------

(28)
Obligation:
Rules:
f_3364(v116606:0:0:0, v116617:0:0:0) -> f_3364(v116606:0:0:0, 1 + v116617:0:0:0) :|: v116617:0:0:0 <= v116606:0:0:0 && v116617:0:0:0 > -2 && v116606:0:0:0 > -1

----------------------------------------

(29) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_3364(x, x1)] = x - x1

The following rules are decreasing:
f_3364(v116606:0:0:0, v116617:0:0:0) -> f_3364(v116606:0:0:0, 1 + v116617:0:0:0) :|: v116617:0:0:0 <= v116606:0:0:0 && v116617:0:0:0 > -2 && v116606:0:0:0 > -1
The following rules are bounded:
f_3364(v116606:0:0:0, v116617:0:0:0) -> f_3364(v116606:0:0:0, 1 + v116617:0:0:0) :|: v116617:0:0:0 <= v116606:0:0:0 && v116617:0:0:0 > -2 && v116606:0:0:0 > -1

----------------------------------------

(30)
YES

----------------------------------------

(31)
Obligation:
Rules:
f_3891(x155:0, x156:0, x157:0, x158:0, x159:0, x160:0) -> f_3891(x155:0, x156:0, x157:0, x158:0, 1 + x159:0, x159:0) :|: x159:0 <= x155:0 && x159:0 > -1 && x155:0 > 0

----------------------------------------

(32) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(33)
Obligation:
Rules:
f_3891(x155:0:0, x156:0:0, x157:0:0, x158:0:0, x159:0:0, x160:0:0) -> f_3891(x155:0:0, x156:0:0, x157:0:0, x158:0:0, 1 + x159:0:0, x159:0:0) :|: x159:0:0 <= x155:0:0 && x159:0:0 > -1 && x155:0:0 > 0

----------------------------------------

(34) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_3891(x1, x2, x3, x4, x5, x6) -> f_3891(x1, x5)

----------------------------------------

(35)
Obligation:
Rules:
f_3891(x155:0:0, x159:0:0) -> f_3891(x155:0:0, 1 + x159:0:0) :|: x159:0:0 <= x155:0:0 && x159:0:0 > -1 && x155:0:0 > 0

----------------------------------------

(36) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_3891(x, x1)] = x - x1

The following rules are decreasing:
f_3891(x155:0:0, x159:0:0) -> f_3891(x155:0:0, 1 + x159:0:0) :|: x159:0:0 <= x155:0:0 && x159:0:0 > -1 && x155:0:0 > 0
The following rules are bounded:
f_3891(x155:0:0, x159:0:0) -> f_3891(x155:0:0, 1 + x159:0:0) :|: x159:0:0 <= x155:0:0 && x159:0:0 > -1 && x155:0:0 > 0

----------------------------------------

(37)
YES

----------------------------------------

(38)
Obligation:
Rules:
f_3743(v144004:0:0, v144005:0:0, v144007:0:0, sum~cons_1~v149930:0:0, v144009:0:0, v144016:0:0) -> f_3743(v144004:0:0, v144005:0:0, v144007:0:0, v149930:0:0, 1 + v149930:0:0, v144016:0:0) :|: v144009:0:0 > 0 && v149930:0:0 > -2 && sum~cons_1~v149930:0:0 = 1 + v149930:0:0

----------------------------------------

(39) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(40)
Obligation:
Rules:
f_3743(v144004:0:0:0, v144005:0:0:0, v144007:0:0:0, sum~cons_1~v149930:0:0:0, v144009:0:0:0, v144016:0:0:0) -> f_3743(v144004:0:0:0, v144005:0:0:0, v144007:0:0:0, v149930:0:0:0, 1 + v149930:0:0:0, v144016:0:0:0) :|: v144009:0:0:0 > 0 && v149930:0:0:0 > -2 && sum~cons_1~v149930:0:0:0 = 1 + v149930:0:0:0

----------------------------------------

(41) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_3743(x1, x2, x3, x4, x5, x6) -> f_3743(x4, x5)

----------------------------------------

(42)
Obligation:
Rules:
f_3743(sum~cons_1~v149930:0:0:0, v144009:0:0:0) -> f_3743(v149930:0:0:0, 1 + v149930:0:0:0) :|: v144009:0:0:0 > 0 && v149930:0:0:0 > -2 && sum~cons_1~v149930:0:0:0 = 1 + v149930:0:0:0

----------------------------------------

(43) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_3743(x, x1)] = x

The following rules are decreasing:
f_3743(sum~cons_1~v149930:0:0:0, v144009:0:0:0) -> f_3743(v149930:0:0:0, 1 + v149930:0:0:0) :|: v144009:0:0:0 > 0 && v149930:0:0:0 > -2 && sum~cons_1~v149930:0:0:0 = 1 + v149930:0:0:0
The following rules are bounded:
f_3743(sum~cons_1~v149930:0:0:0, v144009:0:0:0) -> f_3743(v149930:0:0:0, 1 + v149930:0:0:0) :|: v144009:0:0:0 > 0 && v149930:0:0:0 > -2 && sum~cons_1~v149930:0:0:0 = 1 + v149930:0:0:0

----------------------------------------

(44)
YES

----------------------------------------

(45)
Obligation:
Rules:
f_4053(x23:0, x24:0, x25:0, sum~cons_1~x28:0, x27:0) -> f_3768(x23:0, x24:0, x25:0, x28:0, 1 + x28:0) :|: x27:0 < 0 && x28:0 > -2 && sum~cons_1~x28:0 = 1 + x28:0
f_4030(x:0, x1:0, x2:0, x3:0, x4:0) -> f_3364(x:0, x1:0, x2:0, x3:0, 0, -1) :|: x4:0 > 0
f_3959(x56:0, x57:0, x58:0, sum~cons_1~x60:0) -> f_3768(x56:0, x57:0, x58:0, x60:0, 1 + x60:0) :|: x56:0 > -1 && x60:0 > -2 && sum~cons_1~x60:0 = 1 + x60:0
f_4007(x5:0, x6:0, x7:0, x8:0, x9:0, x10:0) -> f_3891(x5:0, x6:0, x7:0, x9:0, 1 + x8:0, x8:0) :|: x8:0 > -1 && x10:0 < 0
f_3751(x148:0, x149:0, x150:0, x151:0, x152:0, x153:0) -> f_3893(x148:0, x149:0, x152:0, x151:0, x154:0, x153:0) :|: x149:0 > 0 && x151:0 > x148:0 && x150:0 > 0 && x152:0 > -1
f_3768(v140996:0:0, v140997:0:0, v140999:0:0, sum~cons_1~v161158:0:0, v141001:0:0) -> f_3768(v140996:0:0, v140997:0:0, v140999:0:0, v161158:0:0, 1 + v161158:0:0) :|: v161158:0:0 > -2 && v140996:0:0 > 0 && v141001:0:0 > 0 && sum~cons_1~v161158:0:0 = 1 + v161158:0:0
f_4007(x42:0, x43:0, x44:0, x45:0, x46:0, cons_0) -> f_4053(x42:0, x43:0, x46:0, x45:0, x48:0) :|: x43:0 > 0 && x46:0 > -1 && x44:0 > 0 && cons_0 = 0
f_3743(x, x1, x2, x3, x4, x5) -> f_3959(x, x1, x6, -1) :|: x6 > -1 && x1 > 0 && x2 = 1 + x6 && x3 = -1 && x4 = 0
f_3893(x114:0, x115:0, x116:0, sum~cons_1~x120:0, x118:0, x119:0) -> f_3743(x114:0, x115:0, x116:0, x120:0, 1 + x120:0, x119:0) :|: x120:0 > -2 && x118:0 < 0 && sum~cons_1~x120:0 = 1 + x120:0
f_3959(x17:0, x18:0, sum~cons_1~x21:0, x20:0) -> f_4030(x17:0, x18:0, 1 + x21:0, x21:0, x22:0) :|: x20:0 < 0 && x21:0 > -2 && sum~cons_1~x21:0 = 1 + x21:0
f_4007(x11:0, x12:0, x13:0, x14:0, x15:0, x16:0) -> f_3891(x11:0, x12:0, x13:0, x15:0, 1 + x14:0, x14:0) :|: x14:0 > -1 && x16:0 > 0
f_3891(x155:0, x156:0, x157:0, x158:0, x159:0, x160:0) -> f_3891(x155:0, x156:0, x157:0, x158:0, 1 + x159:0, x159:0) :|: x159:0 <= x155:0 && x159:0 > -1 && x155:0 > 0
f_3364(v116606:0:0, v116607:0:0, v116609:0:0, v116614:0:0, v116617:0:0, v116615:0:0) -> f_3364(v116606:0:0, v116607:0:0, v116609:0:0, v116614:0:0, 1 + v116617:0:0, v116617:0:0) :|: v116617:0:0 <= v116606:0:0 && v116617:0:0 > -2 && v116606:0:0 > -1
f_3364(x35:0, x36:0, x37:0, x38:0, sum~cons_1~x41:0, x35:01) -> f_3743(x35:0, x36:0, x38:0, x41:0, 1 + x41:0, 1 + x41:0) :|: x41:0 > -2 && x36:0 > 0 && x38:0 > -1 && x35:0 < 1 + x41:0 && x37:0 > 0 && sum~cons_1~x41:0 = 1 + x41:0 && x35:0 = x35:01
f_3893(x7, x8, x9, x10, x11, x12) -> f_3751(x7, x8, 1 + x13, x10, x13, x12) :|: x13 > -2 && x9 = 1 + x13 && x11 = 0
f_3743(x49:0, x50:0, sum~cons_1~x55:0, x52:0, x53:0, x54:0) -> f_3751(x49:0, x50:0, 1 + x55:0, x52:0, x55:0, x54:0) :|: x55:0 > -2 && x52:0 > -1 && x53:0 > 0 && sum~cons_1~x55:0 = 1 + x55:0
f_3891(v153602:01:0, v153603:0:0, v153605:0:0, v153611:0:0, v153614:0:0, v153602:01:01) -> f_3893(v153602:01:0, v153603:0:0, v153611:0:0, v153614:0:0, v154453:0:0, v153614:0:0) :|: v153611:0:0 > -1 && v153603:0:0 > 0 && v153614:0:0 > v153602:01:0 && v153605:0:0 > 0 && v153602:01:0 = v153602:01:01
f_3768(x14, x15, x16, x17, x18) -> f_4030(x14, x15, 1 + x19, x19, x20) :|: x19 > -2 && x16 = 1 + x19 && x17 = -1 && x18 = 0
f_4030(x21, x22, x23, x24, x25) -> f_3959(x21, x22, x24, -1) :|: x22 > 0 && x24 > -1 && x23 > 0 && x25 = 0
f_3893(x121:0, x122:0, x123:0, sum~cons_1~x127:0, x125:0, x126:0) -> f_3743(x121:0, x122:0, x123:0, x127:0, 1 + x127:0, x126:0) :|: x127:0 > -2 && x125:0 > 0 && sum~cons_1~x127:0 = 1 + x127:0
f_4030(v161668:0:0, v161669:0:0, v161671:0:0, v163239:0:0, v166578:0:0) -> f_3364(v161668:0:0, v161669:0:0, v161671:0:0, v163239:0:0, 0, -1) :|: v166578:0:0 < 0
f_3743(x26, x27, x28, x29, x30, x31) -> f_3364(x26, x27, 1 + x32, x32, 0, -1) :|: x32 > -2 && x28 = 1 + x32 && x29 = -1 && x30 = 0
f_4053(x29:0, x30:0, x31:0, sum~cons_1~x34:0, x33:0) -> f_3768(x29:0, x30:0, x31:0, x34:0, 1 + x34:0) :|: x33:0 > 0 && x34:0 > -2 && sum~cons_1~x34:0 = 1 + x34:0
f_4053(x33, x34, x35, x36, x37) -> f_4007(x33, x34, 1 + x38, x36, x38, x39) :|: x38 > -2 && x35 = 1 + x38 && x37 = 0
f_3751(x87:0, x88:0, x89:0, x90:0, x91:0, x92:0) -> f_3891(x87:0, x88:0, x89:0, x91:0, 1 + x90:0, x90:0) :|: x92:0 > 0 && x90:0 <= x87:0 && x90:0 > -1 && x87:0 > -1
f_3743(v144004:0:0, v144005:0:0, v144007:0:0, sum~cons_1~v149930:0:0, v144009:0:0, v144016:0:0) -> f_3743(v144004:0:0, v144005:0:0, v144007:0:0, v149930:0:0, 1 + v149930:0:0, v144016:0:0) :|: v144009:0:0 > 0 && v149930:0:0 > -2 && sum~cons_1~v149930:0:0 = 1 + v149930:0:0
f_3364(x80:0, x81:0, x82:0, sum~cons_1~x86:0, x84:0, x80:01) -> f_3751(x80:0, x81:0, 1 + x86:0, x84:0, x86:0, x84:0) :|: x81:0 > 0 && x86:0 > -2 && x84:0 > x80:0 && x82:0 > 0 && sum~cons_1~x86:0 = 1 + x86:0 && x80:0 = x80:01

----------------------------------------

(46) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained 3 non-trivial SCCs.

----------------------------------------

(47)
Complex Obligation (AND)

----------------------------------------

(48)
Obligation:
Rules:
f_4007(x42:0, x43:0, x44:0, x45:0, x46:0, cons_0) -> f_4053(x42:0, x43:0, x46:0, x45:0, x48:0) :|: x43:0 > 0 && x46:0 > -1 && x44:0 > 0 && cons_0 = 0
f_4053(x33, x34, x35, x36, x37) -> f_4007(x33, x34, 1 + x38, x36, x38, x39) :|: x38 > -2 && x35 = 1 + x38 && x37 = 0

----------------------------------------

(49) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(50)
Obligation:
Rules:
f_4007(x42:0:0, x43:0:0, x44:0:0, x45:0:0, sum~cons_1~x38:0, cons_0) -> f_4007(x42:0:0, x43:0:0, 1 + x38:0, x45:0:0, x38:0, x39:0) :|: x44:0:0 > 0 && x38:0 > -2 && x43:0:0 > 0 && sum~cons_1~x38:0 = 1 + x38:0 && cons_0 = 0

----------------------------------------

(51) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_4007(x1, x2, x3, x4, x5, x6) -> f_4007(x2, x3, x5, x6)

----------------------------------------

(52)
Obligation:
Rules:
f_4007(x43:0:0, x44:0:0, sum~cons_1~x38:0, cons_0) -> f_4007(x43:0:0, 1 + x38:0, x38:0, x39:0) :|: x44:0:0 > 0 && x38:0 > -2 && x43:0:0 > 0 && sum~cons_1~x38:0 = 1 + x38:0 && cons_0 = 0

----------------------------------------

(53) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_4007(x, x1, x2, x3)] = x2

The following rules are decreasing:
f_4007(x43:0:0, x44:0:0, sum~cons_1~x38:0, cons_0) -> f_4007(x43:0:0, 1 + x38:0, x38:0, x39:0) :|: x44:0:0 > 0 && x38:0 > -2 && x43:0:0 > 0 && sum~cons_1~x38:0 = 1 + x38:0 && cons_0 = 0
The following rules are bounded:
f_4007(x43:0:0, x44:0:0, sum~cons_1~x38:0, cons_0) -> f_4007(x43:0:0, 1 + x38:0, x38:0, x39:0) :|: x44:0:0 > 0 && x38:0 > -2 && x43:0:0 > 0 && sum~cons_1~x38:0 = 1 + x38:0 && cons_0 = 0

----------------------------------------

(54)
YES

----------------------------------------

(55)
Obligation:
Rules:
f_3768(v140996:0:0, v140997:0:0, v140999:0:0, sum~cons_1~v161158:0:0, v141001:0:0) -> f_3768(v140996:0:0, v140997:0:0, v140999:0:0, v161158:0:0, 1 + v161158:0:0) :|: v161158:0:0 > -2 && v140996:0:0 > 0 && v141001:0:0 > 0 && sum~cons_1~v161158:0:0 = 1 + v161158:0:0

----------------------------------------

(56) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(57)
Obligation:
Rules:
f_3768(v140996:0:0:0, v140997:0:0:0, v140999:0:0:0, sum~cons_1~v161158:0:0:0, v141001:0:0:0) -> f_3768(v140996:0:0:0, v140997:0:0:0, v140999:0:0:0, v161158:0:0:0, 1 + v161158:0:0:0) :|: v161158:0:0:0 > -2 && v140996:0:0:0 > 0 && v141001:0:0:0 > 0 && sum~cons_1~v161158:0:0:0 = 1 + v161158:0:0:0

----------------------------------------

(58) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_3768(x1, x2, x3, x4, x5) -> f_3768(x1, x4, x5)

----------------------------------------

(59)
Obligation:
Rules:
f_3768(v140996:0:0:0, sum~cons_1~v161158:0:0:0, v141001:0:0:0) -> f_3768(v140996:0:0:0, v161158:0:0:0, 1 + v161158:0:0:0) :|: v161158:0:0:0 > -2 && v140996:0:0:0 > 0 && v141001:0:0:0 > 0 && sum~cons_1~v161158:0:0:0 = 1 + v161158:0:0:0

----------------------------------------

(60) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_3768(x, x1, x2)] = x1

The following rules are decreasing:
f_3768(v140996:0:0:0, sum~cons_1~v161158:0:0:0, v141001:0:0:0) -> f_3768(v140996:0:0:0, v161158:0:0:0, 1 + v161158:0:0:0) :|: v161158:0:0:0 > -2 && v140996:0:0:0 > 0 && v141001:0:0:0 > 0 && sum~cons_1~v161158:0:0:0 = 1 + v161158:0:0:0
The following rules are bounded:
f_3768(v140996:0:0:0, sum~cons_1~v161158:0:0:0, v141001:0:0:0) -> f_3768(v140996:0:0:0, v161158:0:0:0, 1 + v161158:0:0:0) :|: v161158:0:0:0 > -2 && v140996:0:0:0 > 0 && v141001:0:0:0 > 0 && sum~cons_1~v161158:0:0:0 = 1 + v161158:0:0:0

----------------------------------------

(61)
YES

----------------------------------------

(62)
Obligation:
Rules:
f_4030(x:0, x1:0, x2:0, x3:0, x4:0) -> f_3364(x:0, x1:0, x2:0, x3:0, 0, -1) :|: x4:0 > 0
f_3959(x17:0, x18:0, sum~cons_1~x21:0, x20:0) -> f_4030(x17:0, x18:0, 1 + x21:0, x21:0, x22:0) :|: x20:0 < 0 && x21:0 > -2 && sum~cons_1~x21:0 = 1 + x21:0
f_3743(x, x1, x2, x3, x4, x5) -> f_3959(x, x1, x6, -1) :|: x6 > -1 && x1 > 0 && x2 = 1 + x6 && x3 = -1 && x4 = 0
f_3893(x114:0, x115:0, x116:0, sum~cons_1~x120:0, x118:0, x119:0) -> f_3743(x114:0, x115:0, x116:0, x120:0, 1 + x120:0, x119:0) :|: x120:0 > -2 && x118:0 < 0 && sum~cons_1~x120:0 = 1 + x120:0
f_3751(x148:0, x149:0, x150:0, x151:0, x152:0, x153:0) -> f_3893(x148:0, x149:0, x152:0, x151:0, x154:0, x153:0) :|: x149:0 > 0 && x151:0 > x148:0 && x150:0 > 0 && x152:0 > -1
f_3893(x7, x8, x9, x10, x11, x12) -> f_3751(x7, x8, 1 + x13, x10, x13, x12) :|: x13 > -2 && x9 = 1 + x13 && x11 = 0
f_3891(v153602:01:0, v153603:0:0, v153605:0:0, v153611:0:0, v153614:0:0, v153602:01:01) -> f_3893(v153602:01:0, v153603:0:0, v153611:0:0, v153614:0:0, v154453:0:0, v153614:0:0) :|: v153611:0:0 > -1 && v153603:0:0 > 0 && v153614:0:0 > v153602:01:0 && v153605:0:0 > 0 && v153602:01:0 = v153602:01:01
f_3891(x155:0, x156:0, x157:0, x158:0, x159:0, x160:0) -> f_3891(x155:0, x156:0, x157:0, x158:0, 1 + x159:0, x159:0) :|: x159:0 <= x155:0 && x159:0 > -1 && x155:0 > 0
f_3751(x87:0, x88:0, x89:0, x90:0, x91:0, x92:0) -> f_3891(x87:0, x88:0, x89:0, x91:0, 1 + x90:0, x90:0) :|: x92:0 > 0 && x90:0 <= x87:0 && x90:0 > -1 && x87:0 > -1
f_3743(x49:0, x50:0, sum~cons_1~x55:0, x52:0, x53:0, x54:0) -> f_3751(x49:0, x50:0, 1 + x55:0, x52:0, x55:0, x54:0) :|: x55:0 > -2 && x52:0 > -1 && x53:0 > 0 && sum~cons_1~x55:0 = 1 + x55:0
f_3364(x35:0, x36:0, x37:0, x38:0, sum~cons_1~x41:0, x35:01) -> f_3743(x35:0, x36:0, x38:0, x41:0, 1 + x41:0, 1 + x41:0) :|: x41:0 > -2 && x36:0 > 0 && x38:0 > -1 && x35:0 < 1 + x41:0 && x37:0 > 0 && sum~cons_1~x41:0 = 1 + x41:0 && x35:0 = x35:01
f_3364(v116606:0:0, v116607:0:0, v116609:0:0, v116614:0:0, v116617:0:0, v116615:0:0) -> f_3364(v116606:0:0, v116607:0:0, v116609:0:0, v116614:0:0, 1 + v116617:0:0, v116617:0:0) :|: v116617:0:0 <= v116606:0:0 && v116617:0:0 > -2 && v116606:0:0 > -1
f_4030(v161668:0:0, v161669:0:0, v161671:0:0, v163239:0:0, v166578:0:0) -> f_3364(v161668:0:0, v161669:0:0, v161671:0:0, v163239:0:0, 0, -1) :|: v166578:0:0 < 0
f_3743(x26, x27, x28, x29, x30, x31) -> f_3364(x26, x27, 1 + x32, x32, 0, -1) :|: x32 > -2 && x28 = 1 + x32 && x29 = -1 && x30 = 0
f_3893(x121:0, x122:0, x123:0, sum~cons_1~x127:0, x125:0, x126:0) -> f_3743(x121:0, x122:0, x123:0, x127:0, 1 + x127:0, x126:0) :|: x127:0 > -2 && x125:0 > 0 && sum~cons_1~x127:0 = 1 + x127:0
f_3743(v144004:0:0, v144005:0:0, v144007:0:0, sum~cons_1~v149930:0:0, v144009:0:0, v144016:0:0) -> f_3743(v144004:0:0, v144005:0:0, v144007:0:0, v149930:0:0, 1 + v149930:0:0, v144016:0:0) :|: v144009:0:0 > 0 && v149930:0:0 > -2 && sum~cons_1~v149930:0:0 = 1 + v149930:0:0
f_3364(x80:0, x81:0, x82:0, sum~cons_1~x86:0, x84:0, x80:01) -> f_3751(x80:0, x81:0, 1 + x86:0, x84:0, x86:0, x84:0) :|: x81:0 > 0 && x86:0 > -2 && x84:0 > x80:0 && x82:0 > 0 && sum~cons_1~x86:0 = 1 + x86:0 && x80:0 = x80:01
f_4030(x21, x22, x23, x24, x25) -> f_3959(x21, x22, x24, -1) :|: x22 > 0 && x24 > -1 && x23 > 0 && x25 = 0

----------------------------------------

(63) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(64)
Obligation:
Rules:
f_3364(x80:01:0, x81:0:0, x82:0:0, sum~cons_1~x86:0:0, x84:0:0, x80:01:01) -> f_3751(x80:01:0, x81:0:0, 1 + x86:0:0, x84:0:0, x86:0:0, x84:0:0) :|: x84:0:0 > x80:01:0 && x82:0:0 > 0 && x86:0:0 > -2 && x81:0:0 > 0 && sum~cons_1~x86:0:0 = 1 + x86:0:0 && x80:01:0 = x80:01:01
f_3751(x148:0:0, x149:0:0, x150:0:0, x151:0:0, x152:0:0, x153:0:0) -> f_3893(x148:0:0, x149:0:0, x152:0:0, x151:0:0, x154:0:0, x153:0:0) :|: x150:0:0 > 0 && x152:0:0 > -1 && x151:0:0 > x148:0:0 && x149:0:0 > 0
f_3893(x121:0:0, x122:0:0, x123:0:0, sum~cons_1~x127:0:0, x125:0:0, x126:0:0) -> f_3743(x121:0:0, x122:0:0, x123:0:0, x127:0:0, 1 + x127:0:0, x126:0:0) :|: x127:0:0 > -2 && x125:0:0 > 0 && sum~cons_1~x127:0:0 = 1 + x127:0:0
f_3743(x:0, x1:0, sum~cons_1~x6:0, cons_-1, cons_0, x5:0) -> f_3959(x:0, x1:0, x6:0, -1) :|: x6:0 > -1 && x1:0 > 0 && sum~cons_1~x6:0 = 1 + x6:0 && cons_-1 = -1 && cons_0 = 0
f_3893(x114:0:0, x115:0:0, x116:0:0, sum~cons_1~x120:0:0, x118:0:0, x119:0:0) -> f_3743(x114:0:0, x115:0:0, x116:0:0, x120:0:0, 1 + x120:0:0, x119:0:0) :|: x120:0:0 > -2 && x118:0:0 < 0 && sum~cons_1~x120:0:0 = 1 + x120:0:0
f_3959(x17:0:0, x18:0:0, sum~cons_1~x21:0:0, x20:0:0) -> f_3364(x17:0:0, x18:0:0, 1 + x21:0:0, x21:0:0, 0, -1) :|: x20:0:0 < 0 && x21:0:0 > -2 && x22:0:0 < 0 && sum~cons_1~x21:0:0 = 1 + x21:0:0
f_3743(x, x1, x2, x3, x4, x5) -> f_3364(x, x1, 1 + x6, x6, 0, -1) :|: x6 > -2 && x2 = 1 + x6 && x3 = -1 && x4 = 0
f_3891(x155:0:0, x156:0:0, x157:0:0, x158:0:0, x159:0:0, x160:0:0) -> f_3891(x155:0:0, x156:0:0, x157:0:0, x158:0:0, 1 + x159:0:0, x159:0:0) :|: x159:0:0 <= x155:0:0 && x159:0:0 > -1 && x155:0:0 > 0
f_3364(v116606:0:0:0, v116607:0:0:0, v116609:0:0:0, v116614:0:0:0, v116617:0:0:0, v116615:0:0:0) -> f_3364(v116606:0:0:0, v116607:0:0:0, v116609:0:0:0, v116614:0:0:0, 1 + v116617:0:0:0, v116617:0:0:0) :|: v116617:0:0:0 <= v116606:0:0:0 && v116617:0:0:0 > -2 && v116606:0:0:0 > -1
f_3959(x7, x8, x9, x10) -> f_3364(x7, x8, 1 + x11, x11, 0, -1) :|: x10 < 0 && x11 > -2 && x12 > 0 && x9 = 1 + x11
f_3893(x13, x14, x15, x16, x17, x18) -> f_3751(x13, x14, 1 + x19, x16, x19, x18) :|: x19 > -2 && x15 = 1 + x19 && x17 = 0
f_3364(x35:01:0, x36:0:0, x37:0:0, x38:0:0, sum~cons_1~x41:0:0, x35:01:01) -> f_3743(x35:01:0, x36:0:0, x38:0:0, x41:0:0, 1 + x41:0:0, 1 + x41:0:0) :|: x35:01:0 < 1 + x41:0:0 && x37:0:0 > 0 && x38:0:0 > -1 && x36:0:0 > 0 && x41:0:0 > -2 && sum~cons_1~x41:0:0 = 1 + x41:0:0 && x35:01:0 = x35:01:01
f_3891(v153602:01:01:0, v153603:0:0:0, v153605:0:0:0, v153611:0:0:0, v153614:0:0:0, v153602:01:01:01) -> f_3893(v153602:01:01:0, v153603:0:0:0, v153611:0:0:0, v153614:0:0:0, v154453:0:0:0, v153614:0:0:0) :|: v153614:0:0:0 > v153602:01:01:0 && v153605:0:0:0 > 0 && v153603:0:0:0 > 0 && v153611:0:0:0 > -1 && v153602:01:01:0 = v153602:01:01:01
f_3959(x20, x21, x22, x23) -> f_3959(x20, x21, x24, -1) :|: x21 > 0 && x24 > -1 && x23 < 0 && x22 = 1 + x24
f_3751(x87:0:0, x88:0:0, x89:0:0, x90:0:0, x91:0:0, x92:0:0) -> f_3891(x87:0:0, x88:0:0, x89:0:0, x91:0:0, 1 + x90:0:0, x90:0:0) :|: x90:0:0 > -1 && x87:0:0 > -1 && x90:0:0 <= x87:0:0 && x92:0:0 > 0
f_3743(v144004:0:0:0, v144005:0:0:0, v144007:0:0:0, sum~cons_1~v149930:0:0:0, v144009:0:0:0, v144016:0:0:0) -> f_3743(v144004:0:0:0, v144005:0:0:0, v144007:0:0:0, v149930:0:0:0, 1 + v149930:0:0:0, v144016:0:0:0) :|: v144009:0:0:0 > 0 && v149930:0:0:0 > -2 && sum~cons_1~v149930:0:0:0 = 1 + v149930:0:0:0
f_3743(x49:0:0, x50:0:0, sum~cons_1~x55:0:0, x52:0:0, x53:0:0, x54:0:0) -> f_3751(x49:0:0, x50:0:0, 1 + x55:0:0, x52:0:0, x55:0:0, x54:0:0) :|: x55:0:0 > -2 && x52:0:0 > -1 && x53:0:0 > 0 && sum~cons_1~x55:0:0 = 1 + x55:0:0

----------------------------------------

(65) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_3364 ] = 4*f_3364_4 + 1
[ f_3751 ] = 4*f_3751_5 + 1
[ f_3893 ] = 4*f_3893_3 + -1
[ f_3743 ] = 4*f_3743_3 + -2
[ f_3959 ] = 4*f_3959_3 + -2
[ f_3891 ] = 4*f_3891_4

The following rules are decreasing:
f_3364(x80:01:0, x81:0:0, x82:0:0, sum~cons_1~x86:0:0, x84:0:0, x80:01:01) -> f_3751(x80:01:0, x81:0:0, 1 + x86:0:0, x84:0:0, x86:0:0, x84:0:0) :|: x84:0:0 > x80:01:0 && x82:0:0 > 0 && x86:0:0 > -2 && x81:0:0 > 0 && sum~cons_1~x86:0:0 = 1 + x86:0:0 && x80:01:0 = x80:01:01
f_3751(x148:0:0, x149:0:0, x150:0:0, x151:0:0, x152:0:0, x153:0:0) -> f_3893(x148:0:0, x149:0:0, x152:0:0, x151:0:0, x154:0:0, x153:0:0) :|: x150:0:0 > 0 && x152:0:0 > -1 && x151:0:0 > x148:0:0 && x149:0:0 > 0
f_3893(x121:0:0, x122:0:0, x123:0:0, sum~cons_1~x127:0:0, x125:0:0, x126:0:0) -> f_3743(x121:0:0, x122:0:0, x123:0:0, x127:0:0, 1 + x127:0:0, x126:0:0) :|: x127:0:0 > -2 && x125:0:0 > 0 && sum~cons_1~x127:0:0 = 1 + x127:0:0
f_3743(x:0, x1:0, sum~cons_1~x6:0, cons_-1, cons_0, x5:0) -> f_3959(x:0, x1:0, x6:0, -1) :|: x6:0 > -1 && x1:0 > 0 && sum~cons_1~x6:0 = 1 + x6:0 && cons_-1 = -1 && cons_0 = 0
f_3893(x114:0:0, x115:0:0, x116:0:0, sum~cons_1~x120:0:0, x118:0:0, x119:0:0) -> f_3743(x114:0:0, x115:0:0, x116:0:0, x120:0:0, 1 + x120:0:0, x119:0:0) :|: x120:0:0 > -2 && x118:0:0 < 0 && sum~cons_1~x120:0:0 = 1 + x120:0:0
f_3959(x17:0:0, x18:0:0, sum~cons_1~x21:0:0, x20:0:0) -> f_3364(x17:0:0, x18:0:0, 1 + x21:0:0, x21:0:0, 0, -1) :|: x20:0:0 < 0 && x21:0:0 > -2 && x22:0:0 < 0 && sum~cons_1~x21:0:0 = 1 + x21:0:0
f_3743(x, x1, x2, x3, x4, x5) -> f_3364(x, x1, 1 + x6, x6, 0, -1) :|: x6 > -2 && x2 = 1 + x6 && x3 = -1 && x4 = 0
f_3959(x7, x8, x9, x10) -> f_3364(x7, x8, 1 + x11, x11, 0, -1) :|: x10 < 0 && x11 > -2 && x12 > 0 && x9 = 1 + x11
f_3893(x13, x14, x15, x16, x17, x18) -> f_3751(x13, x14, 1 + x19, x16, x19, x18) :|: x19 > -2 && x15 = 1 + x19 && x17 = 0
f_3364(x35:01:0, x36:0:0, x37:0:0, x38:0:0, sum~cons_1~x41:0:0, x35:01:01) -> f_3743(x35:01:0, x36:0:0, x38:0:0, x41:0:0, 1 + x41:0:0, 1 + x41:0:0) :|: x35:01:0 < 1 + x41:0:0 && x37:0:0 > 0 && x38:0:0 > -1 && x36:0:0 > 0 && x41:0:0 > -2 && sum~cons_1~x41:0:0 = 1 + x41:0:0 && x35:01:0 = x35:01:01
f_3891(v153602:01:01:0, v153603:0:0:0, v153605:0:0:0, v153611:0:0:0, v153614:0:0:0, v153602:01:01:01) -> f_3893(v153602:01:01:0, v153603:0:0:0, v153611:0:0:0, v153614:0:0:0, v154453:0:0:0, v153614:0:0:0) :|: v153614:0:0:0 > v153602:01:01:0 && v153605:0:0:0 > 0 && v153603:0:0:0 > 0 && v153611:0:0:0 > -1 && v153602:01:01:0 = v153602:01:01:01
f_3959(x20, x21, x22, x23) -> f_3959(x20, x21, x24, -1) :|: x21 > 0 && x24 > -1 && x23 < 0 && x22 = 1 + x24
f_3751(x87:0:0, x88:0:0, x89:0:0, x90:0:0, x91:0:0, x92:0:0) -> f_3891(x87:0:0, x88:0:0, x89:0:0, x91:0:0, 1 + x90:0:0, x90:0:0) :|: x90:0:0 > -1 && x87:0:0 > -1 && x90:0:0 <= x87:0:0 && x92:0:0 > 0
f_3743(x49:0:0, x50:0:0, sum~cons_1~x55:0:0, x52:0:0, x53:0:0, x54:0:0) -> f_3751(x49:0:0, x50:0:0, 1 + x55:0:0, x52:0:0, x55:0:0, x54:0:0) :|: x55:0:0 > -2 && x52:0:0 > -1 && x53:0:0 > 0 && sum~cons_1~x55:0:0 = 1 + x55:0:0

The following rules are bounded:
f_3743(x:0, x1:0, sum~cons_1~x6:0, cons_-1, cons_0, x5:0) -> f_3959(x:0, x1:0, x6:0, -1) :|: x6:0 > -1 && x1:0 > 0 && sum~cons_1~x6:0 = 1 + x6:0 && cons_-1 = -1 && cons_0 = 0
f_3743(x49:0:0, x50:0:0, sum~cons_1~x55:0:0, x52:0:0, x53:0:0, x54:0:0) -> f_3751(x49:0:0, x50:0:0, 1 + x55:0:0, x52:0:0, x55:0:0, x54:0:0) :|: x55:0:0 > -2 && x52:0:0 > -1 && x53:0:0 > 0 && sum~cons_1~x55:0:0 = 1 + x55:0:0


----------------------------------------

(66)
Obligation:
Rules:
f_3364(x80:01:0, x81:0:0, x82:0:0, sum~cons_1~x86:0:0, x84:0:0, x80:01:01) -> f_3751(x80:01:0, x81:0:0, 1 + x86:0:0, x84:0:0, x86:0:0, x84:0:0) :|: x84:0:0 > x80:01:0 && x82:0:0 > 0 && x86:0:0 > -2 && x81:0:0 > 0 && sum~cons_1~x86:0:0 = 1 + x86:0:0 && x80:01:0 = x80:01:01
f_3751(x148:0:0, x149:0:0, x150:0:0, x151:0:0, x152:0:0, x153:0:0) -> f_3893(x148:0:0, x149:0:0, x152:0:0, x151:0:0, x154:0:0, x153:0:0) :|: x150:0:0 > 0 && x152:0:0 > -1 && x151:0:0 > x148:0:0 && x149:0:0 > 0
f_3893(x121:0:0, x122:0:0, x123:0:0, sum~cons_1~x127:0:0, x125:0:0, x126:0:0) -> f_3743(x121:0:0, x122:0:0, x123:0:0, x127:0:0, 1 + x127:0:0, x126:0:0) :|: x127:0:0 > -2 && x125:0:0 > 0 && sum~cons_1~x127:0:0 = 1 + x127:0:0
f_3893(x114:0:0, x115:0:0, x116:0:0, sum~cons_1~x120:0:0, x118:0:0, x119:0:0) -> f_3743(x114:0:0, x115:0:0, x116:0:0, x120:0:0, 1 + x120:0:0, x119:0:0) :|: x120:0:0 > -2 && x118:0:0 < 0 && sum~cons_1~x120:0:0 = 1 + x120:0:0
f_3959(x17:0:0, x18:0:0, sum~cons_1~x21:0:0, x20:0:0) -> f_3364(x17:0:0, x18:0:0, 1 + x21:0:0, x21:0:0, 0, -1) :|: x20:0:0 < 0 && x21:0:0 > -2 && x22:0:0 < 0 && sum~cons_1~x21:0:0 = 1 + x21:0:0
f_3743(x, x1, x2, x3, x4, x5) -> f_3364(x, x1, 1 + x6, x6, 0, -1) :|: x6 > -2 && x2 = 1 + x6 && x3 = -1 && x4 = 0
f_3891(x155:0:0, x156:0:0, x157:0:0, x158:0:0, x159:0:0, x160:0:0) -> f_3891(x155:0:0, x156:0:0, x157:0:0, x158:0:0, 1 + x159:0:0, x159:0:0) :|: x159:0:0 <= x155:0:0 && x159:0:0 > -1 && x155:0:0 > 0
f_3364(v116606:0:0:0, v116607:0:0:0, v116609:0:0:0, v116614:0:0:0, v116617:0:0:0, v116615:0:0:0) -> f_3364(v116606:0:0:0, v116607:0:0:0, v116609:0:0:0, v116614:0:0:0, 1 + v116617:0:0:0, v116617:0:0:0) :|: v116617:0:0:0 <= v116606:0:0:0 && v116617:0:0:0 > -2 && v116606:0:0:0 > -1
f_3959(x7, x8, x9, x10) -> f_3364(x7, x8, 1 + x11, x11, 0, -1) :|: x10 < 0 && x11 > -2 && x12 > 0 && x9 = 1 + x11
f_3893(x13, x14, x15, x16, x17, x18) -> f_3751(x13, x14, 1 + x19, x16, x19, x18) :|: x19 > -2 && x15 = 1 + x19 && x17 = 0
f_3364(x35:01:0, x36:0:0, x37:0:0, x38:0:0, sum~cons_1~x41:0:0, x35:01:01) -> f_3743(x35:01:0, x36:0:0, x38:0:0, x41:0:0, 1 + x41:0:0, 1 + x41:0:0) :|: x35:01:0 < 1 + x41:0:0 && x37:0:0 > 0 && x38:0:0 > -1 && x36:0:0 > 0 && x41:0:0 > -2 && sum~cons_1~x41:0:0 = 1 + x41:0:0 && x35:01:0 = x35:01:01
f_3891(v153602:01:01:0, v153603:0:0:0, v153605:0:0:0, v153611:0:0:0, v153614:0:0:0, v153602:01:01:01) -> f_3893(v153602:01:01:0, v153603:0:0:0, v153611:0:0:0, v153614:0:0:0, v154453:0:0:0, v153614:0:0:0) :|: v153614:0:0:0 > v153602:01:01:0 && v153605:0:0:0 > 0 && v153603:0:0:0 > 0 && v153611:0:0:0 > -1 && v153602:01:01:0 = v153602:01:01:01
f_3959(x20, x21, x22, x23) -> f_3959(x20, x21, x24, -1) :|: x21 > 0 && x24 > -1 && x23 < 0 && x22 = 1 + x24
f_3751(x87:0:0, x88:0:0, x89:0:0, x90:0:0, x91:0:0, x92:0:0) -> f_3891(x87:0:0, x88:0:0, x89:0:0, x91:0:0, 1 + x90:0:0, x90:0:0) :|: x90:0:0 > -1 && x87:0:0 > -1 && x90:0:0 <= x87:0:0 && x92:0:0 > 0
f_3743(v144004:0:0:0, v144005:0:0:0, v144007:0:0:0, sum~cons_1~v149930:0:0:0, v144009:0:0:0, v144016:0:0:0) -> f_3743(v144004:0:0:0, v144005:0:0:0, v144007:0:0:0, v149930:0:0:0, 1 + v149930:0:0:0, v144016:0:0:0) :|: v144009:0:0:0 > 0 && v149930:0:0:0 > -2 && sum~cons_1~v149930:0:0:0 = 1 + v149930:0:0:0

----------------------------------------

(67) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained 2 non-trivial SCCs.

----------------------------------------

(68)
Complex Obligation (AND)

----------------------------------------

(69)
Obligation:
Rules:
f_3959(x20, x21, x22, x23) -> f_3959(x20, x21, x24, -1) :|: x21 > 0 && x24 > -1 && x23 < 0 && x22 = 1 + x24

----------------------------------------

(70) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(71)
Obligation:
Rules:
f_3959(x20:0, x21:0, sum~cons_1~x24:0, x23:0) -> f_3959(x20:0, x21:0, x24:0, -1) :|: x21:0 > 0 && x24:0 > -1 && x23:0 < 0 && sum~cons_1~x24:0 = 1 + x24:0

----------------------------------------

(72) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_3959(x1, x2, x3, x4) -> f_3959(x2, x3, x4)

----------------------------------------

(73)
Obligation:
Rules:
f_3959(x21:0, sum~cons_1~x24:0, x23:0) -> f_3959(x21:0, x24:0, -1) :|: x21:0 > 0 && x24:0 > -1 && x23:0 < 0 && sum~cons_1~x24:0 = 1 + x24:0

----------------------------------------

(74) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_3959(x, x1, x2)] = x1

The following rules are decreasing:
f_3959(x21:0, sum~cons_1~x24:0, x23:0) -> f_3959(x21:0, x24:0, -1) :|: x21:0 > 0 && x24:0 > -1 && x23:0 < 0 && sum~cons_1~x24:0 = 1 + x24:0
The following rules are bounded:
f_3959(x21:0, sum~cons_1~x24:0, x23:0) -> f_3959(x21:0, x24:0, -1) :|: x21:0 > 0 && x24:0 > -1 && x23:0 < 0 && sum~cons_1~x24:0 = 1 + x24:0

----------------------------------------

(75)
YES

----------------------------------------

(76)
Obligation:
Rules:
f_3364(x80:01:0, x81:0:0, x82:0:0, sum~cons_1~x86:0:0, x84:0:0, x80:01:01) -> f_3751(x80:01:0, x81:0:0, 1 + x86:0:0, x84:0:0, x86:0:0, x84:0:0) :|: x84:0:0 > x80:01:0 && x82:0:0 > 0 && x86:0:0 > -2 && x81:0:0 > 0 && sum~cons_1~x86:0:0 = 1 + x86:0:0 && x80:01:0 = x80:01:01
f_3743(x, x1, x2, x3, x4, x5) -> f_3364(x, x1, 1 + x6, x6, 0, -1) :|: x6 > -2 && x2 = 1 + x6 && x3 = -1 && x4 = 0
f_3893(x121:0:0, x122:0:0, x123:0:0, sum~cons_1~x127:0:0, x125:0:0, x126:0:0) -> f_3743(x121:0:0, x122:0:0, x123:0:0, x127:0:0, 1 + x127:0:0, x126:0:0) :|: x127:0:0 > -2 && x125:0:0 > 0 && sum~cons_1~x127:0:0 = 1 + x127:0:0
f_3751(x148:0:0, x149:0:0, x150:0:0, x151:0:0, x152:0:0, x153:0:0) -> f_3893(x148:0:0, x149:0:0, x152:0:0, x151:0:0, x154:0:0, x153:0:0) :|: x150:0:0 > 0 && x152:0:0 > -1 && x151:0:0 > x148:0:0 && x149:0:0 > 0
f_3893(x13, x14, x15, x16, x17, x18) -> f_3751(x13, x14, 1 + x19, x16, x19, x18) :|: x19 > -2 && x15 = 1 + x19 && x17 = 0
f_3891(v153602:01:01:0, v153603:0:0:0, v153605:0:0:0, v153611:0:0:0, v153614:0:0:0, v153602:01:01:01) -> f_3893(v153602:01:01:0, v153603:0:0:0, v153611:0:0:0, v153614:0:0:0, v154453:0:0:0, v153614:0:0:0) :|: v153614:0:0:0 > v153602:01:01:0 && v153605:0:0:0 > 0 && v153603:0:0:0 > 0 && v153611:0:0:0 > -1 && v153602:01:01:0 = v153602:01:01:01
f_3891(x155:0:0, x156:0:0, x157:0:0, x158:0:0, x159:0:0, x160:0:0) -> f_3891(x155:0:0, x156:0:0, x157:0:0, x158:0:0, 1 + x159:0:0, x159:0:0) :|: x159:0:0 <= x155:0:0 && x159:0:0 > -1 && x155:0:0 > 0
f_3751(x87:0:0, x88:0:0, x89:0:0, x90:0:0, x91:0:0, x92:0:0) -> f_3891(x87:0:0, x88:0:0, x89:0:0, x91:0:0, 1 + x90:0:0, x90:0:0) :|: x90:0:0 > -1 && x87:0:0 > -1 && x90:0:0 <= x87:0:0 && x92:0:0 > 0
f_3893(x114:0:0, x115:0:0, x116:0:0, sum~cons_1~x120:0:0, x118:0:0, x119:0:0) -> f_3743(x114:0:0, x115:0:0, x116:0:0, x120:0:0, 1 + x120:0:0, x119:0:0) :|: x120:0:0 > -2 && x118:0:0 < 0 && sum~cons_1~x120:0:0 = 1 + x120:0:0
f_3364(x35:01:0, x36:0:0, x37:0:0, x38:0:0, sum~cons_1~x41:0:0, x35:01:01) -> f_3743(x35:01:0, x36:0:0, x38:0:0, x41:0:0, 1 + x41:0:0, 1 + x41:0:0) :|: x35:01:0 < 1 + x41:0:0 && x37:0:0 > 0 && x38:0:0 > -1 && x36:0:0 > 0 && x41:0:0 > -2 && sum~cons_1~x41:0:0 = 1 + x41:0:0 && x35:01:0 = x35:01:01
f_3364(v116606:0:0:0, v116607:0:0:0, v116609:0:0:0, v116614:0:0:0, v116617:0:0:0, v116615:0:0:0) -> f_3364(v116606:0:0:0, v116607:0:0:0, v116609:0:0:0, v116614:0:0:0, 1 + v116617:0:0:0, v116617:0:0:0) :|: v116617:0:0:0 <= v116606:0:0:0 && v116617:0:0:0 > -2 && v116606:0:0:0 > -1
f_3743(v144004:0:0:0, v144005:0:0:0, v144007:0:0:0, sum~cons_1~v149930:0:0:0, v144009:0:0:0, v144016:0:0:0) -> f_3743(v144004:0:0:0, v144005:0:0:0, v144007:0:0:0, v149930:0:0:0, 1 + v149930:0:0:0, v144016:0:0:0) :|: v144009:0:0:0 > 0 && v149930:0:0:0 > -2 && sum~cons_1~v149930:0:0:0 = 1 + v149930:0:0:0

----------------------------------------

(77) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(78)
Obligation:
Rules:
f_3743(x:0, x1:0, sum~cons_1~x6:0, cons_-1, cons_0, x5:0) -> f_3364(x:0, x1:0, 1 + x6:0, x6:0, 0, -1) :|: x6:0 > -2 && sum~cons_1~x6:0 = 1 + x6:0 && cons_-1 = -1 && cons_0 = 0
f_3891(x155:0:0:0, x156:0:0:0, x157:0:0:0, x158:0:0:0, x159:0:0:0, x160:0:0:0) -> f_3891(x155:0:0:0, x156:0:0:0, x157:0:0:0, x158:0:0:0, 1 + x159:0:0:0, x159:0:0:0) :|: x159:0:0:0 <= x155:0:0:0 && x159:0:0:0 > -1 && x155:0:0:0 > 0
f_3364(v116606:0:0:0:0, v116607:0:0:0:0, v116609:0:0:0:0, v116614:0:0:0:0, v116617:0:0:0:0, v116615:0:0:0:0) -> f_3364(v116606:0:0:0:0, v116607:0:0:0:0, v116609:0:0:0:0, v116614:0:0:0:0, 1 + v116617:0:0:0:0, v116617:0:0:0:0) :|: v116617:0:0:0:0 <= v116606:0:0:0:0 && v116617:0:0:0:0 > -2 && v116606:0:0:0:0 > -1
f_3893(x, x1, x2, x3, x4, x5) -> f_3751(x, x1, 1 + x6, x3, x6, x5) :|: x6 > -2 && x2 = 1 + x6 && x4 = 0
f_3893(x121:0:0:0, x122:0:0:0, x123:0:0:0, sum~cons_1~x127:0:0:0, x125:0:0:0, x126:0:0:0) -> f_3743(x121:0:0:0, x122:0:0:0, x123:0:0:0, x127:0:0:0, 1 + x127:0:0:0, x126:0:0:0) :|: x127:0:0:0 > -2 && x125:0:0:0 > 0 && sum~cons_1~x127:0:0:0 = 1 + x127:0:0:0
f_3364(x35:01:01:0, x36:0:0:0, x37:0:0:0, x38:0:0:0, sum~cons_1~x41:0:0:0, x35:01:01:01) -> f_3743(x35:01:01:0, x36:0:0:0, x38:0:0:0, x41:0:0:0, 1 + x41:0:0:0, 1 + x41:0:0:0) :|: x36:0:0:0 > 0 && x41:0:0:0 > -2 && x38:0:0:0 > -1 && x37:0:0:0 > 0 && x35:01:01:0 < 1 + x41:0:0:0 && sum~cons_1~x41:0:0:0 = 1 + x41:0:0:0 && x35:01:01:0 = x35:01:01:01
f_3364(x80:01:01:0, x81:0:0:0, x82:0:0:0, sum~cons_1~x86:0:0:0, x84:0:0:0, x80:01:01:01) -> f_3751(x80:01:01:0, x81:0:0:0, 1 + x86:0:0:0, x84:0:0:0, x86:0:0:0, x84:0:0:0) :|: x86:0:0:0 > -2 && x81:0:0:0 > 0 && x82:0:0:0 > 0 && x84:0:0:0 > x80:01:01:0 && sum~cons_1~x86:0:0:0 = 1 + x86:0:0:0 && x80:01:01:0 = x80:01:01:01
f_3891(v153602:01:01:01:0, v153603:0:0:0:0, v153605:0:0:0:0, v153611:0:0:0:0, v153614:0:0:0:0, v153602:01:01:01:01) -> f_3893(v153602:01:01:01:0, v153603:0:0:0:0, v153611:0:0:0:0, v153614:0:0:0:0, v154453:0:0:0:0, v153614:0:0:0:0) :|: v153603:0:0:0:0 > 0 && v153611:0:0:0:0 > -1 && v153605:0:0:0:0 > 0 && v153614:0:0:0:0 > v153602:01:01:01:0 && v153602:01:01:01:0 = v153602:01:01:01:01
f_3751(x87:0:0:0, x88:0:0:0, x89:0:0:0, x90:0:0:0, x91:0:0:0, x92:0:0:0) -> f_3891(x87:0:0:0, x88:0:0:0, x89:0:0:0, x91:0:0:0, 1 + x90:0:0:0, x90:0:0:0) :|: x90:0:0:0 <= x87:0:0:0 && x92:0:0:0 > 0 && x87:0:0:0 > -1 && x90:0:0:0 > -1
f_3751(x148:0:0:0, x149:0:0:0, x150:0:0:0, x151:0:0:0, x152:0:0:0, x153:0:0:0) -> f_3893(x148:0:0:0, x149:0:0:0, x152:0:0:0, x151:0:0:0, x154:0:0:0, x153:0:0:0) :|: x151:0:0:0 > x148:0:0:0 && x149:0:0:0 > 0 && x152:0:0:0 > -1 && x150:0:0:0 > 0
f_3893(x114:0:0:0, x115:0:0:0, x116:0:0:0, sum~cons_1~x120:0:0:0, x118:0:0:0, x119:0:0:0) -> f_3743(x114:0:0:0, x115:0:0:0, x116:0:0:0, x120:0:0:0, 1 + x120:0:0:0, x119:0:0:0) :|: x120:0:0:0 > -2 && x118:0:0:0 < 0 && sum~cons_1~x120:0:0:0 = 1 + x120:0:0:0
f_3743(v144004:0:0:0:0, v144005:0:0:0:0, v144007:0:0:0:0, sum~cons_1~v149930:0:0:0:0, v144009:0:0:0:0, v144016:0:0:0:0) -> f_3743(v144004:0:0:0:0, v144005:0:0:0:0, v144007:0:0:0:0, v149930:0:0:0:0, 1 + v149930:0:0:0:0, v144016:0:0:0:0) :|: v144009:0:0:0:0 > 0 && v149930:0:0:0:0 > -2 && sum~cons_1~v149930:0:0:0:0 = 1 + v149930:0:0:0:0

----------------------------------------

(79) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:
none

----------------------------------------

(80)
Obligation:
Rules:
f_3743(x:0, x1:0, sum~cons_1~x6:0, cons_-1, cons_0, x5:0) -> f_3364(x:0, x1:0, 1 + x6:0, x6:0, 0, -1) :|: x6:0 > -2 && sum~cons_1~x6:0 = 1 + x6:0 && cons_-1 = -1 && cons_0 = 0
f_3891(x155:0:0:0, x156:0:0:0, x157:0:0:0, x158:0:0:0, x159:0:0:0, x160:0:0:0) -> f_3891(x155:0:0:0, x156:0:0:0, x157:0:0:0, x158:0:0:0, 1 + x159:0:0:0, x159:0:0:0) :|: x159:0:0:0 <= x155:0:0:0 && x159:0:0:0 > -1 && x155:0:0:0 > 0
f_3364(v116606:0:0:0:0, v116607:0:0:0:0, v116609:0:0:0:0, v116614:0:0:0:0, v116617:0:0:0:0, v116615:0:0:0:0) -> f_3364(v116606:0:0:0:0, v116607:0:0:0:0, v116609:0:0:0:0, v116614:0:0:0:0, 1 + v116617:0:0:0:0, v116617:0:0:0:0) :|: v116617:0:0:0:0 <= v116606:0:0:0:0 && v116617:0:0:0:0 > -2 && v116606:0:0:0:0 > -1
f_3893(x, x1, x2, x3, x4, x5) -> f_3751(x, x1, 1 + x6, x3, x6, x5) :|: x6 > -2 && x2 = 1 + x6 && x4 = 0
f_3893(x121:0:0:0, x122:0:0:0, x123:0:0:0, sum~cons_1~x127:0:0:0, x125:0:0:0, x126:0:0:0) -> f_3743(x121:0:0:0, x122:0:0:0, x123:0:0:0, x127:0:0:0, 1 + x127:0:0:0, x126:0:0:0) :|: x127:0:0:0 > -2 && x125:0:0:0 > 0 && sum~cons_1~x127:0:0:0 = 1 + x127:0:0:0
f_3364(x35:01:01:0, x36:0:0:0, x37:0:0:0, x38:0:0:0, sum~cons_1~x41:0:0:0, x35:01:01:01) -> f_3743(x35:01:01:0, x36:0:0:0, x38:0:0:0, x41:0:0:0, 1 + x41:0:0:0, 1 + x41:0:0:0) :|: x36:0:0:0 > 0 && x41:0:0:0 > -2 && x38:0:0:0 > -1 && x37:0:0:0 > 0 && x35:01:01:0 < 1 + x41:0:0:0 && sum~cons_1~x41:0:0:0 = 1 + x41:0:0:0 && x35:01:01:0 = x35:01:01:01
f_3364(x80:01:01:0, x81:0:0:0, x82:0:0:0, sum~cons_1~x86:0:0:0, x84:0:0:0, x80:01:01:01) -> f_3751(x80:01:01:0, x81:0:0:0, 1 + x86:0:0:0, x84:0:0:0, x86:0:0:0, x84:0:0:0) :|: x86:0:0:0 > -2 && x81:0:0:0 > 0 && x82:0:0:0 > 0 && x84:0:0:0 > x80:01:01:0 && sum~cons_1~x86:0:0:0 = 1 + x86:0:0:0 && x80:01:01:0 = x80:01:01:01
f_3891(v153602:01:01:01:0, v153603:0:0:0:0, v153605:0:0:0:0, v153611:0:0:0:0, v153614:0:0:0:0, v153602:01:01:01:01) -> f_3893(v153602:01:01:01:0, v153603:0:0:0:0, v153611:0:0:0:0, v153614:0:0:0:0, v154453:0:0:0:0, v153614:0:0:0:0) :|: v153603:0:0:0:0 > 0 && v153611:0:0:0:0 > -1 && v153605:0:0:0:0 > 0 && v153614:0:0:0:0 > v153602:01:01:01:0 && v153602:01:01:01:0 = v153602:01:01:01:01
f_3751(x87:0:0:0, x88:0:0:0, x89:0:0:0, x90:0:0:0, x91:0:0:0, x92:0:0:0) -> f_3891(x87:0:0:0, x88:0:0:0, x89:0:0:0, x91:0:0:0, 1 + x90:0:0:0, x90:0:0:0) :|: x90:0:0:0 <= x87:0:0:0 && x92:0:0:0 > 0 && x87:0:0:0 > -1 && x90:0:0:0 > -1
f_3751(x148:0:0:0, x149:0:0:0, x150:0:0:0, x151:0:0:0, x152:0:0:0, x153:0:0:0) -> f_3893(x148:0:0:0, x149:0:0:0, x152:0:0:0, x151:0:0:0, x154:0:0:0, x153:0:0:0) :|: x151:0:0:0 > x148:0:0:0 && x149:0:0:0 > 0 && x152:0:0:0 > -1 && x150:0:0:0 > 0
f_3893(x114:0:0:0, x115:0:0:0, x116:0:0:0, sum~cons_1~x120:0:0:0, x118:0:0:0, x119:0:0:0) -> f_3743(x114:0:0:0, x115:0:0:0, x116:0:0:0, x120:0:0:0, 1 + x120:0:0:0, x119:0:0:0) :|: x120:0:0:0 > -2 && x118:0:0:0 < 0 && sum~cons_1~x120:0:0:0 = 1 + x120:0:0:0
f_3743(v144004:0:0:0:0, v144005:0:0:0:0, v144007:0:0:0:0, sum~cons_1~v149930:0:0:0:0, v144009:0:0:0:0, v144016:0:0:0:0) -> f_3743(v144004:0:0:0:0, v144005:0:0:0:0, v144007:0:0:0:0, v149930:0:0:0:0, 1 + v149930:0:0:0:0, v144016:0:0:0:0) :|: v144009:0:0:0:0 > 0 && v149930:0:0:0:0 > -2 && sum~cons_1~v149930:0:0:0:0 = 1 + v149930:0:0:0:0

----------------------------------------

(81) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_3743(x, x1, x2, x3, x4, x5)] = x2
[f_3364(x6, x7, x8, x9, x10, x11)] = x9
[f_3891(x12, x13, x14, x15, x16, x17)] = 1 + x15
[f_3893(x18, x19, x20, x21, x22, x23)] = 1 + x20
[f_3751(x24, x25, x26, x27, x28, x29)] = 1 + x28

The following rules are decreasing:
f_3743(x:0, x1:0, sum~cons_1~x6:0, cons_-1, cons_0, x5:0) -> f_3364(x:0, x1:0, 1 + x6:0, x6:0, 0, -1) :|: x6:0 > -2 && sum~cons_1~x6:0 = 1 + x6:0 && cons_-1 = -1 && cons_0 = 0
f_3893(x, x1, x2, x3, x4, x5) -> f_3751(x, x1, 1 + x6, x3, x6, x5) :|: x6 > -2 && x2 = 1 + x6 && x4 = 0
f_3893(x121:0:0:0, x122:0:0:0, x123:0:0:0, sum~cons_1~x127:0:0:0, x125:0:0:0, x126:0:0:0) -> f_3743(x121:0:0:0, x122:0:0:0, x123:0:0:0, x127:0:0:0, 1 + x127:0:0:0, x126:0:0:0) :|: x127:0:0:0 > -2 && x125:0:0:0 > 0 && sum~cons_1~x127:0:0:0 = 1 + x127:0:0:0
f_3893(x114:0:0:0, x115:0:0:0, x116:0:0:0, sum~cons_1~x120:0:0:0, x118:0:0:0, x119:0:0:0) -> f_3743(x114:0:0:0, x115:0:0:0, x116:0:0:0, x120:0:0:0, 1 + x120:0:0:0, x119:0:0:0) :|: x120:0:0:0 > -2 && x118:0:0:0 < 0 && sum~cons_1~x120:0:0:0 = 1 + x120:0:0:0
The following rules are bounded:
f_3743(x:0, x1:0, sum~cons_1~x6:0, cons_-1, cons_0, x5:0) -> f_3364(x:0, x1:0, 1 + x6:0, x6:0, 0, -1) :|: x6:0 > -2 && sum~cons_1~x6:0 = 1 + x6:0 && cons_-1 = -1 && cons_0 = 0
f_3893(x, x1, x2, x3, x4, x5) -> f_3751(x, x1, 1 + x6, x3, x6, x5) :|: x6 > -2 && x2 = 1 + x6 && x4 = 0
f_3364(x35:01:01:0, x36:0:0:0, x37:0:0:0, x38:0:0:0, sum~cons_1~x41:0:0:0, x35:01:01:01) -> f_3743(x35:01:01:0, x36:0:0:0, x38:0:0:0, x41:0:0:0, 1 + x41:0:0:0, 1 + x41:0:0:0) :|: x36:0:0:0 > 0 && x41:0:0:0 > -2 && x38:0:0:0 > -1 && x37:0:0:0 > 0 && x35:01:01:0 < 1 + x41:0:0:0 && sum~cons_1~x41:0:0:0 = 1 + x41:0:0:0 && x35:01:01:0 = x35:01:01:01
f_3364(x80:01:01:0, x81:0:0:0, x82:0:0:0, sum~cons_1~x86:0:0:0, x84:0:0:0, x80:01:01:01) -> f_3751(x80:01:01:0, x81:0:0:0, 1 + x86:0:0:0, x84:0:0:0, x86:0:0:0, x84:0:0:0) :|: x86:0:0:0 > -2 && x81:0:0:0 > 0 && x82:0:0:0 > 0 && x84:0:0:0 > x80:01:01:0 && sum~cons_1~x86:0:0:0 = 1 + x86:0:0:0 && x80:01:01:0 = x80:01:01:01
f_3891(v153602:01:01:01:0, v153603:0:0:0:0, v153605:0:0:0:0, v153611:0:0:0:0, v153614:0:0:0:0, v153602:01:01:01:01) -> f_3893(v153602:01:01:01:0, v153603:0:0:0:0, v153611:0:0:0:0, v153614:0:0:0:0, v154453:0:0:0:0, v153614:0:0:0:0) :|: v153603:0:0:0:0 > 0 && v153611:0:0:0:0 > -1 && v153605:0:0:0:0 > 0 && v153614:0:0:0:0 > v153602:01:01:01:0 && v153602:01:01:01:0 = v153602:01:01:01:01
f_3751(x148:0:0:0, x149:0:0:0, x150:0:0:0, x151:0:0:0, x152:0:0:0, x153:0:0:0) -> f_3893(x148:0:0:0, x149:0:0:0, x152:0:0:0, x151:0:0:0, x154:0:0:0, x153:0:0:0) :|: x151:0:0:0 > x148:0:0:0 && x149:0:0:0 > 0 && x152:0:0:0 > -1 && x150:0:0:0 > 0

----------------------------------------

(82)
Complex Obligation (AND)

----------------------------------------

(83)
Obligation:
Rules:
f_3891(x155:0:0:0, x156:0:0:0, x157:0:0:0, x158:0:0:0, x159:0:0:0, x160:0:0:0) -> f_3891(x155:0:0:0, x156:0:0:0, x157:0:0:0, x158:0:0:0, 1 + x159:0:0:0, x159:0:0:0) :|: x159:0:0:0 <= x155:0:0:0 && x159:0:0:0 > -1 && x155:0:0:0 > 0
f_3364(v116606:0:0:0:0, v116607:0:0:0:0, v116609:0:0:0:0, v116614:0:0:0:0, v116617:0:0:0:0, v116615:0:0:0:0) -> f_3364(v116606:0:0:0:0, v116607:0:0:0:0, v116609:0:0:0:0, v116614:0:0:0:0, 1 + v116617:0:0:0:0, v116617:0:0:0:0) :|: v116617:0:0:0:0 <= v116606:0:0:0:0 && v116617:0:0:0:0 > -2 && v116606:0:0:0:0 > -1
f_3364(x35:01:01:0, x36:0:0:0, x37:0:0:0, x38:0:0:0, sum~cons_1~x41:0:0:0, x35:01:01:01) -> f_3743(x35:01:01:0, x36:0:0:0, x38:0:0:0, x41:0:0:0, 1 + x41:0:0:0, 1 + x41:0:0:0) :|: x36:0:0:0 > 0 && x41:0:0:0 > -2 && x38:0:0:0 > -1 && x37:0:0:0 > 0 && x35:01:01:0 < 1 + x41:0:0:0 && sum~cons_1~x41:0:0:0 = 1 + x41:0:0:0 && x35:01:01:0 = x35:01:01:01
f_3364(x80:01:01:0, x81:0:0:0, x82:0:0:0, sum~cons_1~x86:0:0:0, x84:0:0:0, x80:01:01:01) -> f_3751(x80:01:01:0, x81:0:0:0, 1 + x86:0:0:0, x84:0:0:0, x86:0:0:0, x84:0:0:0) :|: x86:0:0:0 > -2 && x81:0:0:0 > 0 && x82:0:0:0 > 0 && x84:0:0:0 > x80:01:01:0 && sum~cons_1~x86:0:0:0 = 1 + x86:0:0:0 && x80:01:01:0 = x80:01:01:01
f_3891(v153602:01:01:01:0, v153603:0:0:0:0, v153605:0:0:0:0, v153611:0:0:0:0, v153614:0:0:0:0, v153602:01:01:01:01) -> f_3893(v153602:01:01:01:0, v153603:0:0:0:0, v153611:0:0:0:0, v153614:0:0:0:0, v154453:0:0:0:0, v153614:0:0:0:0) :|: v153603:0:0:0:0 > 0 && v153611:0:0:0:0 > -1 && v153605:0:0:0:0 > 0 && v153614:0:0:0:0 > v153602:01:01:01:0 && v153602:01:01:01:0 = v153602:01:01:01:01
f_3751(x87:0:0:0, x88:0:0:0, x89:0:0:0, x90:0:0:0, x91:0:0:0, x92:0:0:0) -> f_3891(x87:0:0:0, x88:0:0:0, x89:0:0:0, x91:0:0:0, 1 + x90:0:0:0, x90:0:0:0) :|: x90:0:0:0 <= x87:0:0:0 && x92:0:0:0 > 0 && x87:0:0:0 > -1 && x90:0:0:0 > -1
f_3751(x148:0:0:0, x149:0:0:0, x150:0:0:0, x151:0:0:0, x152:0:0:0, x153:0:0:0) -> f_3893(x148:0:0:0, x149:0:0:0, x152:0:0:0, x151:0:0:0, x154:0:0:0, x153:0:0:0) :|: x151:0:0:0 > x148:0:0:0 && x149:0:0:0 > 0 && x152:0:0:0 > -1 && x150:0:0:0 > 0
f_3743(v144004:0:0:0:0, v144005:0:0:0:0, v144007:0:0:0:0, sum~cons_1~v149930:0:0:0:0, v144009:0:0:0:0, v144016:0:0:0:0) -> f_3743(v144004:0:0:0:0, v144005:0:0:0:0, v144007:0:0:0:0, v149930:0:0:0:0, 1 + v149930:0:0:0:0, v144016:0:0:0:0) :|: v144009:0:0:0:0 > 0 && v149930:0:0:0:0 > -2 && sum~cons_1~v149930:0:0:0:0 = 1 + v149930:0:0:0:0

----------------------------------------

(84) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained 3 non-trivial SCCs.

----------------------------------------

(85)
Complex Obligation (AND)

----------------------------------------

(86)
Obligation:
Rules:
f_3364(v116606:0:0:0:0, v116607:0:0:0:0, v116609:0:0:0:0, v116614:0:0:0:0, v116617:0:0:0:0, v116615:0:0:0:0) -> f_3364(v116606:0:0:0:0, v116607:0:0:0:0, v116609:0:0:0:0, v116614:0:0:0:0, 1 + v116617:0:0:0:0, v116617:0:0:0:0) :|: v116617:0:0:0:0 <= v116606:0:0:0:0 && v116617:0:0:0:0 > -2 && v116606:0:0:0:0 > -1

----------------------------------------

(87) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(88)
Obligation:
Rules:
f_3364(v116606:0:0:0:0:0, v116607:0:0:0:0:0, v116609:0:0:0:0:0, v116614:0:0:0:0:0, v116617:0:0:0:0:0, v116615:0:0:0:0:0) -> f_3364(v116606:0:0:0:0:0, v116607:0:0:0:0:0, v116609:0:0:0:0:0, v116614:0:0:0:0:0, 1 + v116617:0:0:0:0:0, v116617:0:0:0:0:0) :|: v116617:0:0:0:0:0 <= v116606:0:0:0:0:0 && v116617:0:0:0:0:0 > -2 && v116606:0:0:0:0:0 > -1

----------------------------------------

(89) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_3364(x1, x2, x3, x4, x5, x6) -> f_3364(x1, x5)

----------------------------------------

(90)
Obligation:
Rules:
f_3364(v116606:0:0:0:0:0, v116617:0:0:0:0:0) -> f_3364(v116606:0:0:0:0:0, 1 + v116617:0:0:0:0:0) :|: v116617:0:0:0:0:0 <= v116606:0:0:0:0:0 && v116617:0:0:0:0:0 > -2 && v116606:0:0:0:0:0 > -1

----------------------------------------

(91) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_3364 ] = -1*f_3364_2 + f_3364_1

The following rules are decreasing:
f_3364(v116606:0:0:0:0:0, v116617:0:0:0:0:0) -> f_3364(v116606:0:0:0:0:0, 1 + v116617:0:0:0:0:0) :|: v116617:0:0:0:0:0 <= v116606:0:0:0:0:0 && v116617:0:0:0:0:0 > -2 && v116606:0:0:0:0:0 > -1

The following rules are bounded:
f_3364(v116606:0:0:0:0:0, v116617:0:0:0:0:0) -> f_3364(v116606:0:0:0:0:0, 1 + v116617:0:0:0:0:0) :|: v116617:0:0:0:0:0 <= v116606:0:0:0:0:0 && v116617:0:0:0:0:0 > -2 && v116606:0:0:0:0:0 > -1


----------------------------------------

(92)
YES

----------------------------------------

(93)
Obligation:
Rules:
f_3743(v144004:0:0:0:0, v144005:0:0:0:0, v144007:0:0:0:0, sum~cons_1~v149930:0:0:0:0, v144009:0:0:0:0, v144016:0:0:0:0) -> f_3743(v144004:0:0:0:0, v144005:0:0:0:0, v144007:0:0:0:0, v149930:0:0:0:0, 1 + v149930:0:0:0:0, v144016:0:0:0:0) :|: v144009:0:0:0:0 > 0 && v149930:0:0:0:0 > -2 && sum~cons_1~v149930:0:0:0:0 = 1 + v149930:0:0:0:0

----------------------------------------

(94) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(95)
Obligation:
Rules:
f_3743(v144004:0:0:0:0:0, v144005:0:0:0:0:0, v144007:0:0:0:0:0, sum~cons_1~v149930:0:0:0:0:0, v144009:0:0:0:0:0, v144016:0:0:0:0:0) -> f_3743(v144004:0:0:0:0:0, v144005:0:0:0:0:0, v144007:0:0:0:0:0, v149930:0:0:0:0:0, 1 + v149930:0:0:0:0:0, v144016:0:0:0:0:0) :|: v144009:0:0:0:0:0 > 0 && v149930:0:0:0:0:0 > -2 && sum~cons_1~v149930:0:0:0:0:0 = 1 + v149930:0:0:0:0:0

----------------------------------------

(96) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_3743(x1, x2, x3, x4, x5, x6) -> f_3743(x4, x5)

----------------------------------------

(97)
Obligation:
Rules:
f_3743(sum~cons_1~v149930:0:0:0:0:0, v144009:0:0:0:0:0) -> f_3743(v149930:0:0:0:0:0, 1 + v149930:0:0:0:0:0) :|: v144009:0:0:0:0:0 > 0 && v149930:0:0:0:0:0 > -2 && sum~cons_1~v149930:0:0:0:0:0 = 1 + v149930:0:0:0:0:0

----------------------------------------

(98) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_3743(x, x1)] = x

The following rules are decreasing:
f_3743(sum~cons_1~v149930:0:0:0:0:0, v144009:0:0:0:0:0) -> f_3743(v149930:0:0:0:0:0, 1 + v149930:0:0:0:0:0) :|: v144009:0:0:0:0:0 > 0 && v149930:0:0:0:0:0 > -2 && sum~cons_1~v149930:0:0:0:0:0 = 1 + v149930:0:0:0:0:0
The following rules are bounded:
f_3743(sum~cons_1~v149930:0:0:0:0:0, v144009:0:0:0:0:0) -> f_3743(v149930:0:0:0:0:0, 1 + v149930:0:0:0:0:0) :|: v144009:0:0:0:0:0 > 0 && v149930:0:0:0:0:0 > -2 && sum~cons_1~v149930:0:0:0:0:0 = 1 + v149930:0:0:0:0:0

----------------------------------------

(99)
YES

----------------------------------------

(100)
Obligation:
Rules:
f_3891(x155:0:0:0, x156:0:0:0, x157:0:0:0, x158:0:0:0, x159:0:0:0, x160:0:0:0) -> f_3891(x155:0:0:0, x156:0:0:0, x157:0:0:0, x158:0:0:0, 1 + x159:0:0:0, x159:0:0:0) :|: x159:0:0:0 <= x155:0:0:0 && x159:0:0:0 > -1 && x155:0:0:0 > 0

----------------------------------------

(101) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(102)
Obligation:
Rules:
f_3891(x155:0:0:0:0, x156:0:0:0:0, x157:0:0:0:0, x158:0:0:0:0, x159:0:0:0:0, x160:0:0:0:0) -> f_3891(x155:0:0:0:0, x156:0:0:0:0, x157:0:0:0:0, x158:0:0:0:0, 1 + x159:0:0:0:0, x159:0:0:0:0) :|: x159:0:0:0:0 <= x155:0:0:0:0 && x159:0:0:0:0 > -1 && x155:0:0:0:0 > 0

----------------------------------------

(103) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_3891(x1, x2, x3, x4, x5, x6) -> f_3891(x1, x5)

----------------------------------------

(104)
Obligation:
Rules:
f_3891(x155:0:0:0:0, x159:0:0:0:0) -> f_3891(x155:0:0:0:0, 1 + x159:0:0:0:0) :|: x159:0:0:0:0 <= x155:0:0:0:0 && x159:0:0:0:0 > -1 && x155:0:0:0:0 > 0

----------------------------------------

(105) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_3891(x, x1)] = x - x1

The following rules are decreasing:
f_3891(x155:0:0:0:0, x159:0:0:0:0) -> f_3891(x155:0:0:0:0, 1 + x159:0:0:0:0) :|: x159:0:0:0:0 <= x155:0:0:0:0 && x159:0:0:0:0 > -1 && x155:0:0:0:0 > 0
The following rules are bounded:
f_3891(x155:0:0:0:0, x159:0:0:0:0) -> f_3891(x155:0:0:0:0, 1 + x159:0:0:0:0) :|: x159:0:0:0:0 <= x155:0:0:0:0 && x159:0:0:0:0 > -1 && x155:0:0:0:0 > 0

----------------------------------------

(106)
YES

----------------------------------------

(107)
Obligation:
Rules:
f_3891(x155:0:0:0, x156:0:0:0, x157:0:0:0, x158:0:0:0, x159:0:0:0, x160:0:0:0) -> f_3891(x155:0:0:0, x156:0:0:0, x157:0:0:0, x158:0:0:0, 1 + x159:0:0:0, x159:0:0:0) :|: x159:0:0:0 <= x155:0:0:0 && x159:0:0:0 > -1 && x155:0:0:0 > 0
f_3364(v116606:0:0:0:0, v116607:0:0:0:0, v116609:0:0:0:0, v116614:0:0:0:0, v116617:0:0:0:0, v116615:0:0:0:0) -> f_3364(v116606:0:0:0:0, v116607:0:0:0:0, v116609:0:0:0:0, v116614:0:0:0:0, 1 + v116617:0:0:0:0, v116617:0:0:0:0) :|: v116617:0:0:0:0 <= v116606:0:0:0:0 && v116617:0:0:0:0 > -2 && v116606:0:0:0:0 > -1
f_3893(x121:0:0:0, x122:0:0:0, x123:0:0:0, sum~cons_1~x127:0:0:0, x125:0:0:0, x126:0:0:0) -> f_3743(x121:0:0:0, x122:0:0:0, x123:0:0:0, x127:0:0:0, 1 + x127:0:0:0, x126:0:0:0) :|: x127:0:0:0 > -2 && x125:0:0:0 > 0 && sum~cons_1~x127:0:0:0 = 1 + x127:0:0:0
f_3751(x87:0:0:0, x88:0:0:0, x89:0:0:0, x90:0:0:0, x91:0:0:0, x92:0:0:0) -> f_3891(x87:0:0:0, x88:0:0:0, x89:0:0:0, x91:0:0:0, 1 + x90:0:0:0, x90:0:0:0) :|: x90:0:0:0 <= x87:0:0:0 && x92:0:0:0 > 0 && x87:0:0:0 > -1 && x90:0:0:0 > -1
f_3893(x114:0:0:0, x115:0:0:0, x116:0:0:0, sum~cons_1~x120:0:0:0, x118:0:0:0, x119:0:0:0) -> f_3743(x114:0:0:0, x115:0:0:0, x116:0:0:0, x120:0:0:0, 1 + x120:0:0:0, x119:0:0:0) :|: x120:0:0:0 > -2 && x118:0:0:0 < 0 && sum~cons_1~x120:0:0:0 = 1 + x120:0:0:0
f_3743(v144004:0:0:0:0, v144005:0:0:0:0, v144007:0:0:0:0, sum~cons_1~v149930:0:0:0:0, v144009:0:0:0:0, v144016:0:0:0:0) -> f_3743(v144004:0:0:0:0, v144005:0:0:0:0, v144007:0:0:0:0, v149930:0:0:0:0, 1 + v149930:0:0:0:0, v144016:0:0:0:0) :|: v144009:0:0:0:0 > 0 && v149930:0:0:0:0 > -2 && sum~cons_1~v149930:0:0:0:0 = 1 + v149930:0:0:0:0

----------------------------------------

(108) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained 3 non-trivial SCCs.

----------------------------------------

(109)
Complex Obligation (AND)

----------------------------------------

(110)
Obligation:
Rules:
f_3743(v144004:0:0:0:0, v144005:0:0:0:0, v144007:0:0:0:0, sum~cons_1~v149930:0:0:0:0, v144009:0:0:0:0, v144016:0:0:0:0) -> f_3743(v144004:0:0:0:0, v144005:0:0:0:0, v144007:0:0:0:0, v149930:0:0:0:0, 1 + v149930:0:0:0:0, v144016:0:0:0:0) :|: v144009:0:0:0:0 > 0 && v149930:0:0:0:0 > -2 && sum~cons_1~v149930:0:0:0:0 = 1 + v149930:0:0:0:0

----------------------------------------

(111) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(112)
Obligation:
Rules:
f_3743(v144004:0:0:0:0:0, v144005:0:0:0:0:0, v144007:0:0:0:0:0, sum~cons_1~v149930:0:0:0:0:0, v144009:0:0:0:0:0, v144016:0:0:0:0:0) -> f_3743(v144004:0:0:0:0:0, v144005:0:0:0:0:0, v144007:0:0:0:0:0, v149930:0:0:0:0:0, 1 + v149930:0:0:0:0:0, v144016:0:0:0:0:0) :|: v144009:0:0:0:0:0 > 0 && v149930:0:0:0:0:0 > -2 && sum~cons_1~v149930:0:0:0:0:0 = 1 + v149930:0:0:0:0:0

----------------------------------------

(113) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_3743(x1, x2, x3, x4, x5, x6) -> f_3743(x4, x5)

----------------------------------------

(114)
Obligation:
Rules:
f_3743(sum~cons_1~v149930:0:0:0:0:0, v144009:0:0:0:0:0) -> f_3743(v149930:0:0:0:0:0, 1 + v149930:0:0:0:0:0) :|: v144009:0:0:0:0:0 > 0 && v149930:0:0:0:0:0 > -2 && sum~cons_1~v149930:0:0:0:0:0 = 1 + v149930:0:0:0:0:0

----------------------------------------

(115) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_3743 ] = f_3743_1

The following rules are decreasing:
f_3743(sum~cons_1~v149930:0:0:0:0:0, v144009:0:0:0:0:0) -> f_3743(v149930:0:0:0:0:0, 1 + v149930:0:0:0:0:0) :|: v144009:0:0:0:0:0 > 0 && v149930:0:0:0:0:0 > -2 && sum~cons_1~v149930:0:0:0:0:0 = 1 + v149930:0:0:0:0:0

The following rules are bounded:
f_3743(sum~cons_1~v149930:0:0:0:0:0, v144009:0:0:0:0:0) -> f_3743(v149930:0:0:0:0:0, 1 + v149930:0:0:0:0:0) :|: v144009:0:0:0:0:0 > 0 && v149930:0:0:0:0:0 > -2 && sum~cons_1~v149930:0:0:0:0:0 = 1 + v149930:0:0:0:0:0


----------------------------------------

(116)
YES

----------------------------------------

(117)
Obligation:
Rules:
f_3364(v116606:0:0:0:0, v116607:0:0:0:0, v116609:0:0:0:0, v116614:0:0:0:0, v116617:0:0:0:0, v116615:0:0:0:0) -> f_3364(v116606:0:0:0:0, v116607:0:0:0:0, v116609:0:0:0:0, v116614:0:0:0:0, 1 + v116617:0:0:0:0, v116617:0:0:0:0) :|: v116617:0:0:0:0 <= v116606:0:0:0:0 && v116617:0:0:0:0 > -2 && v116606:0:0:0:0 > -1

----------------------------------------

(118) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(119)
Obligation:
Rules:
f_3364(v116606:0:0:0:0:0, v116607:0:0:0:0:0, v116609:0:0:0:0:0, v116614:0:0:0:0:0, v116617:0:0:0:0:0, v116615:0:0:0:0:0) -> f_3364(v116606:0:0:0:0:0, v116607:0:0:0:0:0, v116609:0:0:0:0:0, v116614:0:0:0:0:0, 1 + v116617:0:0:0:0:0, v116617:0:0:0:0:0) :|: v116617:0:0:0:0:0 <= v116606:0:0:0:0:0 && v116617:0:0:0:0:0 > -2 && v116606:0:0:0:0:0 > -1

----------------------------------------

(120) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_3364(x1, x2, x3, x4, x5, x6) -> f_3364(x1, x5)

----------------------------------------

(121)
Obligation:
Rules:
f_3364(v116606:0:0:0:0:0, v116617:0:0:0:0:0) -> f_3364(v116606:0:0:0:0:0, 1 + v116617:0:0:0:0:0) :|: v116617:0:0:0:0:0 <= v116606:0:0:0:0:0 && v116617:0:0:0:0:0 > -2 && v116606:0:0:0:0:0 > -1

----------------------------------------

(122) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_3364 ] = -1*f_3364_2 + f_3364_1

The following rules are decreasing:
f_3364(v116606:0:0:0:0:0, v116617:0:0:0:0:0) -> f_3364(v116606:0:0:0:0:0, 1 + v116617:0:0:0:0:0) :|: v116617:0:0:0:0:0 <= v116606:0:0:0:0:0 && v116617:0:0:0:0:0 > -2 && v116606:0:0:0:0:0 > -1

The following rules are bounded:
f_3364(v116606:0:0:0:0:0, v116617:0:0:0:0:0) -> f_3364(v116606:0:0:0:0:0, 1 + v116617:0:0:0:0:0) :|: v116617:0:0:0:0:0 <= v116606:0:0:0:0:0 && v116617:0:0:0:0:0 > -2 && v116606:0:0:0:0:0 > -1


----------------------------------------

(123)
YES

----------------------------------------

(124)
Obligation:
Rules:
f_3891(x155:0:0:0, x156:0:0:0, x157:0:0:0, x158:0:0:0, x159:0:0:0, x160:0:0:0) -> f_3891(x155:0:0:0, x156:0:0:0, x157:0:0:0, x158:0:0:0, 1 + x159:0:0:0, x159:0:0:0) :|: x159:0:0:0 <= x155:0:0:0 && x159:0:0:0 > -1 && x155:0:0:0 > 0

----------------------------------------

(125) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(126)
Obligation:
Rules:
f_3891(x155:0:0:0:0, x156:0:0:0:0, x157:0:0:0:0, x158:0:0:0:0, x159:0:0:0:0, x160:0:0:0:0) -> f_3891(x155:0:0:0:0, x156:0:0:0:0, x157:0:0:0:0, x158:0:0:0:0, 1 + x159:0:0:0:0, x159:0:0:0:0) :|: x159:0:0:0:0 <= x155:0:0:0:0 && x159:0:0:0:0 > -1 && x155:0:0:0:0 > 0

----------------------------------------

(127) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_3891(x1, x2, x3, x4, x5, x6) -> f_3891(x1, x5)

----------------------------------------

(128)
Obligation:
Rules:
f_3891(x155:0:0:0:0, x159:0:0:0:0) -> f_3891(x155:0:0:0:0, 1 + x159:0:0:0:0) :|: x159:0:0:0:0 <= x155:0:0:0:0 && x159:0:0:0:0 > -1 && x155:0:0:0:0 > 0

----------------------------------------

(129) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_3891 ] = -1*f_3891_2 + f_3891_1

The following rules are decreasing:
f_3891(x155:0:0:0:0, x159:0:0:0:0) -> f_3891(x155:0:0:0:0, 1 + x159:0:0:0:0) :|: x159:0:0:0:0 <= x155:0:0:0:0 && x159:0:0:0:0 > -1 && x155:0:0:0:0 > 0

The following rules are bounded:
f_3891(x155:0:0:0:0, x159:0:0:0:0) -> f_3891(x155:0:0:0:0, 1 + x159:0:0:0:0) :|: x159:0:0:0:0 <= x155:0:0:0:0 && x159:0:0:0:0 > -1 && x155:0:0:0:0 > 0


----------------------------------------

(130)
YES

----------------------------------------

(131)
Obligation:
SCC
----------------------------------------

(132) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 25 rulesP rules:
f_2939(v92123, v92124, v92125, v92126, v92127, v92128, v92129, v92130, 1, v92132, 0, v92134, v92135, v92136, v92137, v92138, v92139, 3, 4) -> f_2959(v92123, v92124, v92125, v92126, v92127, v92128, v92129, v92130, 1, v92132, 0, v92134, v92135, v92136, v92137, v92138, v92139, 3, 4) :|: 0 = 0
f_2959(v92123, v92124, v92125, v92126, v92127, v92128, v92129, v92130, 1, v92132, 0, v92134, v92135, v92136, v92137, v92138, v92139, 3, 4) -> f_2978(v92123, v92124, v92125, v92126, v92127, v92128, v92129, v92130, 1, v92132, 0, v92134, v92135, v92136, v92137, v92138, v92139, 3, 4) :|: 0 = 0
f_2978(v92123, v92124, v92125, v92126, v92127, v92128, v92129, v92130, 1, v92132, 0, v92134, v92135, v92136, v92137, v92138, v92139, 3, 4) -> f_2996(v92123, v92124, v92125, v92126, v92127, v92128, v92129, v92130, 1, v92132, 0, v92134, v92135, v92136, v92137, v92138, v92139, 3, 4) :|: 0 = 0
f_2996(v92123, v92124, v92125, v92126, v92127, v92128, v92129, v92130, 1, v92132, 0, v92134, v92135, v92136, v92137, v92138, v92139, 3, 4) -> f_3673(v92123, v92124, v92125, v92126, v92127, v92128, v92129, v92130, 1, v92132, 0, v92134, v92132, v92135, v92136, v92137, v92138, v92139, 3, 4) :|: TRUE
f_3673(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138511, 1, v138513, 0, v138515, v138516, v138517, v138518, v138519, v138520, v138521, 3, 4) -> f_3683(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138511, 1, v138513, 0, v138515, v138516, v138517, v138518, v138519, v138520, v138521, 3, 4) :|: TRUE
f_3683(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138511, 1, v138513, 0, v138515, v138516, v138517, v138518, v138519, v138520, v138521, 3, 4) -> f_3696(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138511, 1, v138513, 0, v138515, v138516, v138517, v138518, v138519, v138520, v138521, 3, 4) :|: TRUE
f_3696(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138511, 1, v138513, 0, v138515, v138516, v138517, v138518, v138519, v138520, v138521, 3, 4) -> f_3708(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138515, 1, v138513, 0, v138511, v138516, v138517, v138518, v138519, v138520, v138521, 3, 4) :|: 0 = 0
f_3708(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138515, 1, v138513, 0, v138511, v138516, v138517, v138518, v138519, v138520, v138521, 3, 4) -> f_3721(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138515, 1, v138513, 0, v138511, v138516, v138517, v138518, v138519, v138520, v138521, 3, 4) :|: 0 <= v138515 && 1 <= v138511 && 1 <= v138509
f_3721(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138515, 1, v138513, 0, v138511, v138516, v138517, v138518, v138519, v138520, v138521, 3, 4) -> f_3731(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138515, 1, v138513, 0, v138511, v138516, v138517, v138518, v138519, v138520, v138521, 3, 4) :|: 0 = 0
f_3731(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138515, 1, v138513, 0, v138511, v138516, v138517, v138518, v138519, v138520, v138521, 3, 4) -> f_3739(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138515, 1, v138513, 0, v138511, v138516, v138517, v138518, v138519, v138520, v138521, 3, 4) :|: TRUE
f_3739(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138515, 1, v138513, 0, v138511, v138516, v138517, v138518, v138519, v138520, v138521, 3, 4) -> f_3746(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138515, 1, v138513, 0, v138511, v138516, v138517, v138518, v138519, v138520, v138521, 3, 4) :|: TRUE
f_3746(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138515, 1, v138513, 0, v138511, v138516, v138517, v138518, v138519, v138520, v138521, 3, 4) -> f_3753(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138515, 1, v138516, 0, v138511, v138517, v138518, v138519, v138520, v138521, 3, 4) :|: 0 = 0
f_3753(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138515, 1, v138516, 0, v138511, v138517, v138518, v138519, v138520, v138521, 3, 4) -> f_3761(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138515, 1, v138516, 0, v138511, v138517, v138518, v138519, v138520, v138521, 3, 4) :|: 0 = 0
f_3761(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138515, 1, v138516, 0, v138511, v138517, v138518, v138519, v138520, v138521, 3, 4) -> f_3769(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138515, 1, v138516, 0, v138511, v138517, v138518, v138519, v138520, v138521, 3, 4) :|: TRUE
f_3769(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138515, 1, v138516, 0, v138511, v138517, v138518, v138519, v138520, v138521, 3, 4) -> f_3778(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138515, 1, v138516, v146708, 0, v138511, v138517, v138518, v138519, v138520, v138521, 3, 4) :|: TRUE
f_3778(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138515, 1, v138516, v146708, 0, v138511, v138517, v138518, v138519, v138520, v138521, 3, 4) -> f_3788(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138515, 1, v138516, 0, v138511, v138517, v138518, v138519, v138520, v138521, 3, 4) :|: v146708 = 0
f_3788(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138515, 1, v138516, 0, v138511, v138517, v138518, v138519, v138520, v138521, 3, 4) -> f_3799(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138515, 1, v138516, 0, v138511, v138517, v138518, v138519, v138520, v138521, 3, 4) :|: 0 = 0
f_3799(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138515, 1, v138516, 0, v138511, v138517, v138518, v138519, v138520, v138521, 3, 4) -> f_3811(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138515, 1, v138516, 0, v138511, v138517, v138518, v138519, v138520, v138521, 3, 4) :|: 0 = 0
f_3811(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138515, 1, v138516, 0, v138511, v138517, v138518, v138519, v138520, v138521, 3, 4) -> f_3824(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138515, 1, v138516, 0, v138511, v138517, v138518, v138519, v138520, v138521, 3, 4) :|: TRUE
f_3824(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138515, 1, v138516, 0, v138511, v138517, v138518, v138519, v138520, v138521, 3, 4) -> f_3837(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138515, 1, v138516, 0, v138517, v138518, v138519, v138520, v138521, 3, 4) :|: 0 = 0
f_3837(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138515, 1, v138516, 0, v138517, v138518, v138519, v138520, v138521, 3, 4) -> f_3851(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138515, 1, v138516, 0, v151083, v138517, v138518, v138519, v138520, v138521, 3, 4) :|: 1 + v151083 = v138515 && 0 <= 1 + v151083
f_3851(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138515, 1, v138516, 0, v151083, v138517, v138518, v138519, v138520, v138521, 3, 4) -> f_3862(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138515, 1, v138516, 0, v151083, v138517, v138518, v138519, v138520, v138521, 3, 4) :|: TRUE
f_3862(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138515, 1, v138516, 0, v151083, v138517, v138518, v138519, v138520, v138521, 3, 4) -> f_3872(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138515, 1, v138516, 0, v151083, v138517, v138518, v138519, v138520, v138521, 3, 4) :|: TRUE
f_3872(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138515, 1, v138516, 0, v151083, v138517, v138518, v138519, v138520, v138521, 3, 4) -> f_2920(v138504, v138505, v138506, v138507, v138508, v138509, v138510, v138515, 1, v138516, 0, v151083, v138517, v138518, v138519, v138520, v138521, 3, 4) :|: TRUE
f_2920(v92123, v92124, v92125, v92126, v92127, v92128, v92129, v92130, 1, v92132, 0, v92134, v92135, v92136, v92137, v92138, v92139, 3, 4) -> f_2939(v92123, v92124, v92125, v92126, v92127, v92128, v92129, v92130, 1, v92132, 0, v92134, v92135, v92136, v92137, v92138, v92139, 3, 4) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_2939(v92123:0, v92124:0, v92125:0, v92126:0, v92127:0, v92128:0, v92129:0, v92130:0, 1, v92132:0, 0, 1 + v151083:0, v92135:0, v92136:0, v92137:0, v92138:0, v92139:0, 3, 4) -> f_2939(v92123:0, v92124:0, v92125:0, v92126:0, v92127:0, v92128:0, v92129:0, 1 + v151083:0, 1, v92132:0, 0, v151083:0, v92135:0, v92136:0, v92137:0, v92138:0, v92139:0, 3, 4) :|: v92130:0 > 0 && v151083:0 > -2 && v92128:0 > 0
Filtered unneeded arguments:
   f_2939(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19) -> f_2939(x6, x8, x12)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_2939(v92128:0, v92130:0, sum~cons_1~v151083:0) -> f_2939(v92128:0, 1 + v151083:0, v151083:0) :|: v151083:0 > -2 && v92128:0 > 0 && v92130:0 > 0 && sum~cons_1~v151083:0 = 1 + v151083:0

----------------------------------------

(133)
Obligation:
Rules:
f_2939(v92128:0, v92130:0, sum~cons_1~v151083:0) -> f_2939(v92128:0, 1 + v151083:0, v151083:0) :|: v151083:0 > -2 && v92128:0 > 0 && v92130:0 > 0 && sum~cons_1~v151083:0 = 1 + v151083:0

----------------------------------------

(134) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(135)
Obligation:
Rules:
f_2939(v92128:0:0, v92130:0:0, sum~cons_1~v151083:0:0) -> f_2939(v92128:0:0, 1 + v151083:0:0, v151083:0:0) :|: v151083:0:0 > -2 && v92128:0:0 > 0 && v92130:0:0 > 0 && sum~cons_1~v151083:0:0 = 1 + v151083:0:0

----------------------------------------

(136) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_2939 ] = f_2939_3

The following rules are decreasing:
f_2939(v92128:0:0, v92130:0:0, sum~cons_1~v151083:0:0) -> f_2939(v92128:0:0, 1 + v151083:0:0, v151083:0:0) :|: v151083:0:0 > -2 && v92128:0:0 > 0 && v92130:0:0 > 0 && sum~cons_1~v151083:0:0 = 1 + v151083:0:0

The following rules are bounded:
f_2939(v92128:0:0, v92130:0:0, sum~cons_1~v151083:0:0) -> f_2939(v92128:0:0, 1 + v151083:0:0, v151083:0:0) :|: v151083:0:0 > -2 && v92128:0:0 > 0 && v92130:0:0 > 0 && sum~cons_1~v151083:0:0 = 1 + v151083:0:0


----------------------------------------

(137)
YES

----------------------------------------

(138)
Obligation:
SCC
----------------------------------------

(139) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 53 rulesP rules:
f_3644(v134258, v134259, v134260, v134261, v134262, v134263, v134264, v134265, 1, v134267, 0, v134269, v134272, v134271, v134270, v134273, v134274, v134275, v134276, 3, 4) -> f_3658(v134258, v134259, v134260, v134261, v134262, v134263, v134264, v134265, 1, v134267, 0, v134269, v134272, v134271, v134270, v134273, v134274, v134275, v134276, 3, 4) :|: 0 = 0
f_3658(v134258, v134259, v134260, v134261, v134262, v134263, v134264, v134265, 1, v134267, 0, v134269, v134272, v134271, v134270, v134273, v134274, v134275, v134276, 3, 4) -> f_3671(v134258, v134259, v134260, v134261, v134262, v134263, v134264, v134265, 1, v134267, 0, v134269, v134272, v134271, v134270, v134273, v134274, v134275, v134276, 3, 4) :|: TRUE
f_3671(v134258, v134259, v134260, v134261, v134262, v134263, v134264, v134265, 1, v134267, 0, v134269, v134272, v134271, v134270, v134273, v134274, v134275, v134276, 3, 4) -> f_3682(v134258, v134259, v134260, v134261, v134262, v134263, v134264, v134265, 1, v134267, 0, v134269, v134272, v139861, v134270, v134273, v134274, v134275, v134276, 3, 4) :|: TRUE
f_3682(v134258, v134259, v134260, v134261, v134262, v134263, v134264, v134265, 1, v134267, 0, v134269, v134272, v139861, v134270, v134273, v134274, v134275, v134276, 3, 4) -> f_3694(v134258, v134259, v134260, v134261, v134262, v134263, v134264, v134265, 1, v134267, 0, v134269, v134272, v139861, v134270, v134273, v134274, v134275, v134276, 3, 4) :|: v139861 != 0
f_3682(v134258, v134259, v134260, v134261, v134262, v134263, v134264, v134265, 1, v134267, 0, v134269, v134272, v139861, v134270, v134273, v134274, v134275, v134276, 3, 4) -> f_3695(v134258, v134259, v134260, v134261, v134262, v134263, v134264, v134265, 1, v134267, 0, v134269, v134272, v134270, v134273, v134274, v134275, v134276, 3, 4) :|: v139861 = 0
f_3694(v134258, v134259, v134260, v134261, v134262, v134263, v134264, v134265, 1, v134267, 0, v134269, v134272, v139861, v134270, v134273, v134274, v134275, v134276, 3, 4) -> f_3706(v134258, v134259, v134260, v134261, v134262, v134263, v134264, v134265, 1, v134267, 0, v134269, v134272, v139861, v134270, v134273, v134274, v134275, v134276, 3, 4) :|: 0 = 0
f_3706(v134258, v134259, v134260, v134261, v134262, v134263, v134264, v134265, 1, v134267, 0, v134269, v134272, v139861, v134270, v134273, v134274, v134275, v134276, 3, 4) -> f_3719(v134258, v134259, v134260, v134261, v134262, v134263, v134264, v134265, 1, v134267, 0, v134269, v134272, v139861, v134270, v134273, v134274, v134275, v134276, 3, 4) :|: 0 = 0
f_3719(v134258, v134259, v134260, v134261, v134262, v134263, v134264, v134265, 1, v134267, 0, v134269, v134272, v139861, v134270, v134273, v134274, v134275, v134276, 3, 4) -> f_3548(v134258, v134259, v134260, v134261, v134262, v134263, v134264, v134265, 1, v134267, 0, v134269, v134272, v139861, v134270, v134273, v134274, v134275, v134276, 3, 4) :|: TRUE
f_3548(v129291, v129292, v129293, v129294, v129295, v129296, v129297, v129298, 1, v129300, 0, v129302, v129303, v129304, v129305, v129306, v129307, v129308, v129309, 3, 4) -> f_3565(v129291, v129292, v129293, v129294, v129295, v129296, v129297, v129298, 1, v129300, 0, v129302, v129303, v129304, v129305, v129306, v129307, v129308, v129309, 3, 4) :|: TRUE
f_3565(v129291, v129292, v129293, v129294, v129295, v129296, v129297, v129298, 1, v129300, 0, v129302, v129303, v129304, v129305, v129306, v129307, v129308, v129309, 3, 4) -> f_3576(v129291, v129292, v129293, v129294, v129295, v129296, v129297, v129298, 1, v129300, 0, v129302, v129303, v129304, v129306, v129307, v129308, v129309, 3, 4) :|: 0 = 0
f_3576(v129291, v129292, v129293, v129294, v129295, v129296, v129297, v129298, 1, v129300, 0, v129302, v129303, v129304, v129306, v129307, v129308, v129309, 3, 4) -> f_3586(v129291, v129292, v129293, v129294, v129295, v129296, v129297, v129298, 1, v129300, 0, v129302, v129303, v129304, v133661, v129306, v129307, v129308, v129309, 3, 4) :|: v133661 = 1 + v129303 && 1 <= v133661
f_3586(v129291, v129292, v129293, v129294, v129295, v129296, v129297, v129298, 1, v129300, 0, v129302, v129303, v129304, v133661, v129306, v129307, v129308, v129309, 3, 4) -> f_3597(v129291, v129292, v129293, v129294, v129295, v129296, v129297, v129298, 1, v129300, 0, v129302, v129303, v129304, v133661, v129306, v129307, v129308, v129309, 3, 4) :|: TRUE
f_3597(v129291, v129292, v129293, v129294, v129295, v129296, v129297, v129298, 1, v129300, 0, v129302, v129303, v129304, v133661, v129306, v129307, v129308, v129309, 3, 4) -> f_3609(v129291, v129292, v129293, v129294, v129295, v129296, v129297, v129298, 1, v129300, 0, v129302, v129303, v129304, v133661, v129306, v129307, v129308, v129309, 3, 4) :|: TRUE
f_3609(v129291, v129292, v129293, v129294, v129295, v129296, v129297, v129298, 1, v129300, 0, v129302, v129303, v129304, v133661, v129306, v129307, v129308, v129309, 3, 4) -> f_3610(v129291, v129292, v129293, v129294, v129295, v129296, v129297, v129298, 1, v129300, 0, v129302, v129303, v129304, v133661, v129306, v129307, v129308, v129309, 3, 4) :|: TRUE
f_3610(v134258, v134259, v134260, v134261, v134262, v134263, v134264, v134265, 1, v134267, 0, v134269, v134270, v134271, v134272, v134273, v134274, v134275, v134276, 3, 4) -> f_3621(v134258, v134259, v134260, v134261, v134262, v134263, v134264, v134265, 1, v134267, 0, v134269, v134272, v134271, v134270, v134273, v134274, v134275, v134276, 3, 4) :|: 0 = 0
f_3621(v134258, v134259, v134260, v134261, v134262, v134263, v134264, v134265, 1, v134267, 0, v134269, v134272, v134271, v134270, v134273, v134274, v134275, v134276, 3, 4) -> f_3632(v134258, v134259, v134260, v134261, v134262, v134263, v134264, v134265, 1, v134267, 0, v134269, v134272, v134271, v134270, v134273, v134274, v134275, v134276, 3, 4) :|: 0 = 0
f_3632(v134258, v134259, v134260, v134261, v134262, v134263, v134264, v134265, 1, v134267, 0, v134269, v134272, v134271, v134270, v134273, v134274, v134275, v134276, 3, 4) -> f_3644(v134258, v134259, v134260, v134261, v134262, v134263, v134264, v134265, 1, v134267, 0, v134269, v134272, v134271, v134270, v134273, v134274, v134275, v134276, 3, 4) :|: v134272 <= v134262 && 1 <= v134262
f_3695(v134258, v134259, v134260, v134261, v134262, v134263, v134264, v134265, 1, v134267, 0, v134269, v134272, v134270, v134273, v134274, v134275, v134276, 3, 4) -> f_3707(v134258, v134259, v134260, v134261, v134262, v134263, v134264, v134265, 1, v134267, 0, v134269, v134272, v134270, v134273, v134274, v134275, v134276, 3, 4) :|: 0 = 0
f_3707(v134258, v134259, v134260, v134261, v134262, v134263, v134264, v134265, 1, v134267, 0, v134269, v134272, v134270, v134273, v134274, v134275, v134276, 3, 4) -> f_3720(v134258, v134259, v134260, v134261, v134262, v134263, v134264, v134265, 1, v134267, 0, v134269, v134272, v134270, v134273, v134274, v134275, v134276, 3, 4) :|: 0 = 0
f_3720(v134258, v134259, v134260, v134261, v134262, v134263, v134264, v134265, 1, v134267, 0, v134269, v134272, v134270, v134273, v134274, v134275, v134276, 3, 4) -> f_3550(v134258, v134259, v134260, v134261, v134262, v134263, v134264, v134265, 1, v134267, 0, v134269, v134272, v134270, v134273, v134274, v134275, v134276, 3, 4) :|: TRUE
f_3550(v129634, v129635, v129636, v129637, v129638, v129639, v129640, v129641, 1, v129643, 0, v129645, v129646, v129647, v129648, v129649, v129650, v129651, 3, 4) -> f_3566(v129634, v129635, v129636, v129637, v129638, v129639, v129640, v129641, 1, v129643, 0, v129645, v129646, v129647, v129648, v129649, v129650, v129651, 3, 4) :|: TRUE
f_3566(v129634, v129635, v129636, v129637, v129638, v129639, v129640, v129641, 1, v129643, 0, v129645, v129646, v129647, v129648, v129649, v129650, v129651, 3, 4) -> f_3577(v129634, v129635, v129636, v129637, v129638, v129639, v129640, v129641, 1, v129643, 0, v129645, v129646, v129647, v129648, v129649, v129650, v129651, 3, 4) :|: TRUE
f_3577(v129634, v129635, v129636, v129637, v129638, v129639, v129640, v129641, 1, v129643, 0, v129645, v129646, v129647, v129648, v129649, v129650, v129651, 3, 4) -> f_3587(v129634, v129635, v129636, v129637, v129638, v129639, v129640, v129645, 1, v129643, 0, v129641, v129646, v129647, v129648, v129649, v129650, v129651, 3, 4) :|: 0 = 0
f_3587(v129634, v129635, v129636, v129637, v129638, v129639, v129640, v129645, 1, v129643, 0, v129641, v129646, v129647, v129648, v129649, v129650, v129651, 3, 4) -> f_3598(v129634, v129635, v129636, v129637, v129638, v129639, v129640, v129645, 1, v129643, 0, v129641, v129646, v129647, v129648, v129649, v129650, v129651, 3, 4) :|: 0 <= v129645 && 1 <= v129641 && 1 <= v129639
f_3598(v129634, v129635, v129636, v129637, v129638, v129639, v129640, v129645, 1, v129643, 0, v129641, v129646, v129647, v129648, v129649, v129650, v129651, 3, 4) -> f_3611(v129634, v129635, v129636, v129637, v129638, v129639, v129640, v129645, 1, v129643, 0, v129641, v129646, v129647, v129648, v129649, v129650, v129651, 3, 4) :|: 0 = 0
f_3611(v129634, v129635, v129636, v129637, v129638, v129639, v129640, v129645, 1, v129643, 0, v129641, v129646, v129647, v129648, v129649, v129650, v129651, 3, 4) -> f_3622(v129634, v129635, v129636, v129637, v129638, v129639, v129640, v129645, 1, v129643, 0, v129641, v129646, v129647, v129648, v129649, v129650, v129651, 3, 4) :|: TRUE
f_3622(v129634, v129635, v129636, v129637, v129638, v129639, v129640, v129645, 1, v129643, 0, v129641, v129646, v129647, v129648, v129649, v129650, v129651, 3, 4) -> f_3633(v129634, v129635, v129636, v129637, v129638, v129639, v129640, v129645, 1, v129643, 0, v129641, v129646, v129647, v129648, v129649, v129650, v129651, 3, 4) :|: TRUE
f_3633(v129634, v129635, v129636, v129637, v129638, v129639, v129640, v129645, 1, v129643, 0, v129641, v129646, v129647, v129648, v129649, v129650, v129651, 3, 4) -> f_3646(v129634, v129635, v129636, v129637, v129638, v129639, v129640, v129645, 1, v129646, 0, v129641, v129647, v129648, v129649, v129650, v129651, 3, 4) :|: 0 = 0
f_3646(v129634, v129635, v129636, v129637, v129638, v129639, v129640, v129645, 1, v129646, 0, v129641, v129647, v129648, v129649, v129650, v129651, 3, 4) -> f_3660(v129634, v129635, v129636, v129637, v129638, v129639, v129640, v129645, 1, v129646, 0, v129641, v129647, v129648, v129649, v129650, v129651, 3, 4) :|: 0 = 0
f_3660(v129634, v129635, v129636, v129637, v129638, v129639, v129640, v129645, 1, v129646, 0, v129641, v129647, v129648, v129649, v129650, v129651, 3, 4) -> f_3674(v129634, v129635, v129636, v129637, v129638, v129639, v129640, v129645, 1, v129646, 0, v129641, v129647, v129648, v129649, v129650, v129651, 3, 4) :|: TRUE
f_3674(v129634, v129635, v129636, v129637, v129638, v129639, v129640, v129645, 1, v129646, 0, v129641, v129647, v129648, v129649, v129650, v129651, 3, 4) -> f_3684(v129634, v129635, v129636, v129637, v129638, v129639, v129640, v129645, 1, v129646, v140066, 0, v129641, v129647, v129648, v129649, v129650, v129651, 3, 4) :|: TRUE
f_3684(v129634, v129635, v129636, v129637, v129638, v129639, v129640, v129645, 1, v129646, v140066, 0, v129641, v129647, v129648, v129649, v129650, v129651, 3, 4) -> f_3698(v129634, v129635, v129636, v129637, v129638, v129639, v129640, v129645, 1, v129646, 0, v129641, v129647, v129648, v129649, v129650, v129651, 3, 4) :|: v140066 = 0
f_3698(v129634, v129635, v129636, v129637, v129638, v129639, v129640, v129645, 1, v129646, 0, v129641, v129647, v129648, v129649, v129650, v129651, 3, 4) -> f_3710(v129634, v129635, v129636, v129637, v129638, v129639, v129640, v129645, 1, v129646, 0, v129641, v129647, v129648, v129649, v129650, v129651, 3, 4) :|: 0 = 0
f_3710(v129634, v129635, v129636, v129637, v129638, v129639, v129640, v129645, 1, v129646, 0, v129641, v129647, v129648, v129649, v129650, v129651, 3, 4) -> f_3725(v129634, v129635, v129636, v129637, v129638, v129639, v129640, v129645, 1, v129646, 0, v129641, v129647, v129648, v129649, v129650, v129651, 3, 4) :|: 0 = 0
f_3725(v129634, v129635, v129636, v129637, v129638, v129639, v129640, v129645, 1, v129646, 0, v129641, v129647, v129648, v129649, v129650, v129651, 3, 4) -> f_3726(v129634, v129635, v129636, v129637, v129638, v129639, v129640, v129645, 1, v129646, 0, v129641, v129647, v129648, v129649, v129650, v129651, 3, 4) :|: TRUE
f_3726(v143372, v143373, v143374, v143375, v143376, v143377, v143378, v143379, 1, v143381, 0, v143383, v143384, v143385, v143386, v143387, v143388, 3, 4) -> f_3734(v143372, v143373, v143374, v143375, v143376, v143377, v143378, v143379, 1, v143381, 0, v143383, v143384, v143385, v143386, v143387, v143388, 3, 4) :|: TRUE
f_3734(v143372, v143373, v143374, v143375, v143376, v143377, v143378, v143379, 1, v143381, 0, v143383, v143384, v143385, v143386, v143387, v143388, 3, 4) -> f_3742(v143372, v143373, v143374, v143375, v143376, v143377, v143378, v143379, 1, v143381, 0, v143384, v143385, v143386, v143387, v143388, 3, 4) :|: 0 = 0
f_3742(v143372, v143373, v143374, v143375, v143376, v143377, v143378, v143379, 1, v143381, 0, v143384, v143385, v143386, v143387, v143388, 3, 4) -> f_3748(v143372, v143373, v143374, v143375, v143376, v143377, v143378, v143379, 1, v143381, 0, v144670, v143384, v143385, v143386, v143387, v143388, 3, 4) :|: 1 + v144670 = v143379 && 0 <= 1 + v144670
f_3748(v143372, v143373, v143374, v143375, v143376, v143377, v143378, v143379, 1, v143381, 0, v144670, v143384, v143385, v143386, v143387, v143388, 3, 4) -> f_3755(v143372, v143373, v143374, v143375, v143376, v143377, v143378, v143379, 1, v143381, 0, v144670, v143384, v143385, v143386, v143387, v143388, 3, 4) :|: TRUE
f_3755(v143372, v143373, v143374, v143375, v143376, v143377, v143378, v143379, 1, v143381, 0, v144670, v143384, v143385, v143386, v143387, v143388, 3, 4) -> f_3763(v143372, v143373, v143374, v143375, v143376, v143377, v143378, v143379, 1, v143381, 0, v144670, v143384, v143385, v143386, v143387, v143388, 3, 4) :|: TRUE
f_3763(v143372, v143373, v143374, v143375, v143376, v143377, v143378, v143379, 1, v143381, 0, v144670, v143384, v143385, v143386, v143387, v143388, 3, 4) -> f_3770(v143372, v143373, v143374, v143375, v143376, v143377, v143378, v143379, 1, v143381, 0, v144670, v143384, v143385, v143386, v143387, v143388, 3, 4) :|: 0 = 0
f_3770(v143372, v143373, v143374, v143375, v143376, v143377, v143378, v143379, 1, v143381, 0, v144670, v143384, v143385, v143386, v143387, v143388, 3, 4) -> f_3779(v143372, v143373, v143374, v143375, v143376, v143377, v143378, v143379, 1, v143381, 0, v144670, v143384, v143385, v143386, v143387, v143388, 3, 4) :|: 0 = 0
f_3779(v143372, v143373, v143374, v143375, v143376, v143377, v143378, v143379, 1, v143381, 0, v144670, v143384, v143385, v143386, v143387, v143388, 3, 4) -> f_3789(v143372, v143373, v143374, v143375, v143376, v143377, v143378, v143379, 1, v143381, 0, v144670, v143384, v143385, v143386, v143387, v143388, 3, 4) :|: 0 = 0
f_3789(v143372, v143373, v143374, v143375, v143376, v143377, v143378, v143379, 1, v143381, 0, v144670, v143384, v143385, v143386, v143387, v143388, 3, 4) -> f_3800(v143372, v143373, v143374, v143375, v143376, v143377, v143378, v143379, 1, v143381, 0, v144670, v143384, v143385, v143386, v143387, v143388, 3, 4) :|: TRUE
f_3800(v143372, v143373, v143374, v143375, v143376, v143377, v143378, v143379, 1, v143381, 0, v144670, v143384, v143385, v143386, v143387, v143388, 3, 4) -> f_3812(v143372, v143373, v143374, v143375, v143376, v143377, v143378, v143379, 1, v143381, 0, v144670, v148714, v143384, v143385, v143386, v143387, v143388, 3, 4) :|: TRUE
f_3812(v143372, v143373, v143374, v143375, v143376, v143377, v143378, v143379, 1, v143381, 0, v144670, v148714, v143384, v143385, v143386, v143387, v143388, 3, 4) -> f_3825(v143372, v143373, v143374, v143375, v143376, v143377, v143378, v143379, 1, v143381, 0, v144670, v148714, v143384, v143385, v143386, v143387, v143388, 3, 4) :|: v148714 != 0
f_3812(v143372, v143373, v143374, v143375, v143376, v143377, v143378, v143379, 1, v143381, 0, v144670, v148714, v143384, v143385, v143386, v143387, v143388, 3, 4) -> f_3826(v143372, v143373, v143374, v143375, v143376, v143377, v143378, v143379, 1, v143381, 0, v144670, v143384, v143385, v143386, v143387, v143388, 3, 4) :|: v148714 = 0
f_3825(v143372, v143373, v143374, v143375, v143376, v143377, v143378, v143379, 1, v143381, 0, v144670, v148714, v143384, v143385, v143386, v143387, v143388, 3, 4) -> f_3838(v143372, v143373, v143374, v143375, v143376, v143377, v143378, v143379, 1, v143381, 0, v144670, v148714, v143384, v143385, v143386, v143387, v143388, 3, 4) :|: 0 = 0
f_3838(v143372, v143373, v143374, v143375, v143376, v143377, v143378, v143379, 1, v143381, 0, v144670, v148714, v143384, v143385, v143386, v143387, v143388, 3, 4) -> f_3852(v143372, v143373, v143374, v143375, v143376, v143377, v143378, v143379, 1, v143381, 0, v144670, v148714, v143384, v143385, v143386, v143387, v143388, 3, 4) :|: 0 = 0
f_3852(v143372, v143373, v143374, v143375, v143376, v143377, v143378, v143379, 1, v143381, 0, v144670, v148714, v143384, v143385, v143386, v143387, v143388, 3, 4) -> f_3548(v143372, v143373, v143374, v143375, v143376, v143377, v143378, v143379, 1, v143381, 0, v144670, v143381, v148714, v143384, v143385, v143386, v143387, v143388, 3, 4) :|: TRUE
f_3826(v143372, v143373, v143374, v143375, v143376, v143377, v143378, v143379, 1, v143381, 0, v144670, v143384, v143385, v143386, v143387, v143388, 3, 4) -> f_3839(v143372, v143373, v143374, v143375, v143376, v143377, v143378, v143379, 1, v143381, 0, v144670, v143384, v143385, v143386, v143387, v143388, 3, 4) :|: 0 = 0
f_3839(v143372, v143373, v143374, v143375, v143376, v143377, v143378, v143379, 1, v143381, 0, v144670, v143384, v143385, v143386, v143387, v143388, 3, 4) -> f_3853(v143372, v143373, v143374, v143375, v143376, v143377, v143378, v143379, 1, v143381, 0, v144670, v143384, v143385, v143386, v143387, v143388, 3, 4) :|: 0 = 0
f_3853(v143372, v143373, v143374, v143375, v143376, v143377, v143378, v143379, 1, v143381, 0, v144670, v143384, v143385, v143386, v143387, v143388, 3, 4) -> f_3550(v143372, v143373, v143374, v143375, v143376, v143377, v143378, v143379, 1, v143381, 0, v144670, v143381, v143384, v143385, v143386, v143387, v143388, 3, 4) :|: TRUE
Combined rules. Obtained 6 rulesP rules:
f_3644(v134258:0, v134259:0, v134260:0, v134261:0, v134262:0, v134263:0, v134264:0, v134265:0, 1, v134267:0, 0, v134269:0, v134272:0, v134271:0, v134270:0, v134273:0, v134274:0, v134275:0, v134276:0, 3, 4) -> f_3644(v134258:0, v134259:0, v134260:0, v134261:0, v134262:0, v134263:0, v134264:0, v134265:0, 1, v134267:0, 0, v134269:0, 1 + v134272:0, v139861:0, v134272:0, v134273:0, v134274:0, v134275:0, v134276:0, 3, 4) :|: v139861:0 < 0 && v134272:0 > -1 && v134262:0 >= 1 + v134272:0 && v134262:0 > 0
f_3644(v134258:0, v134259:0, v134260:0, v134261:0, v134262:0, v134263:0, v134264:0, v134265:0, 1, v134267:0, 0, v134269:0, v134272:0, v134271:0, v134270:0, v134273:0, v134274:0, v134275:0, v134276:0, 3, 4) -> f_3644(v134258:0, v134259:0, v134260:0, v134261:0, v134262:0, v134263:0, v134264:0, v134265:0, 1, v134267:0, 0, v134269:0, 1 + v134272:0, v139861:0, v134272:0, v134273:0, v134274:0, v134275:0, v134276:0, 3, 4) :|: v139861:0 > 0 && v134272:0 > -1 && v134262:0 >= 1 + v134272:0 && v134262:0 > 0
f_3644(v134258:0, v134259:0, v134260:0, v134261:0, v134262:0, v134263:0, v134264:0, v134265:0, 1, v134267:0, 0, 1 + v144670:0, v134272:0, v134271:0, v134270:0, v134273:0, v134274:0, v134275:0, v134276:0, 3, 4) -> f_3812(v134258:0, v134259:0, v134260:0, v134261:0, v134262:0, v134263:0, v134264:0, 1 + v144670:0, 1, v134272:0, 0, v144670:0, v148714:0, v134270:0, v134273:0, v134274:0, v134275:0, v134276:0, 3, 4) :|: v134265:0 > 0 && v144670:0 > -2 && v134263:0 > 0
f_3812(v143372:0, v143373:0, v143374:0, v143375:0, v143376:0, v143377:0, v143378:0, v143379:0, 1, v143381:0, 0, 1 + v144670:1, 0, v143384:0, v143385:0, v143386:0, v143387:0, v143388:0, 3, 4) -> f_3812(v143372:0, v143373:0, v143374:0, v143375:0, v143376:0, v143377:0, v143378:0, 1 + v144670:1, 1, v143381:0, 0, v144670:1, v148714:1, v143384:0, v143385:0, v143386:0, v143387:0, v143388:0, 3, 4) :|: v143379:0 > 0 && v144670:1 > -2 && v143377:0 > 0
f_3812(v143372:0, v143373:0, v143374:0, v143375:0, v143376:0, v143377:0, v143378:0, v143379:0, 1, v143381:0, 0, v144670:0, v148714:0, v143384:0, v143385:0, v143386:0, v143387:0, v143388:0, 3, 4) -> f_3644(v143372:0, v143373:0, v143374:0, v143375:0, v143376:0, v143377:0, v143378:0, v143379:0, 1, v143381:0, 0, v144670:0, 1 + v143381:0, v148714:0, v143381:0, v143385:0, v143386:0, v143387:0, v143388:0, 3, 4) :|: v143381:0 > -1 && v143376:0 > 0 && v148714:0 < 0 && v143376:0 >= 1 + v143381:0
f_3812(v143372:0, v143373:0, v143374:0, v143375:0, v143376:0, v143377:0, v143378:0, v143379:0, 1, v143381:0, 0, v144670:0, v148714:0, v143384:0, v143385:0, v143386:0, v143387:0, v143388:0, 3, 4) -> f_3644(v143372:0, v143373:0, v143374:0, v143375:0, v143376:0, v143377:0, v143378:0, v143379:0, 1, v143381:0, 0, v144670:0, 1 + v143381:0, v148714:0, v143381:0, v143385:0, v143386:0, v143387:0, v143388:0, 3, 4) :|: v143381:0 > -1 && v143376:0 > 0 && v148714:0 > 0 && v143376:0 >= 1 + v143381:0
Filtered unneeded arguments:
   f_3644(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21) -> f_3644(x5, x6, x8, x12, x13)
   f_3812(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20) -> f_3812(x5, x6, x8, x10, x12, x13)
Removed division, modulo operations, cleaned up constraints. Obtained 5 rules.P rules:
f_3644(v134262:0, v134263:0, v134265:0, v134269:0, v134272:0) -> f_3644(v134262:0, v134263:0, v134265:0, v134269:0, 1 + v134272:0) :|: v134262:0 >= 1 + v134272:0 && v134262:0 > 0 && v134272:0 > -1
f_3644(v134262:0, v134263:0, v134265:0, sum~cons_1~v144670:0, v134272:0) -> f_3812(v134262:0, v134263:0, 1 + v144670:0, v134272:0, v144670:0, v148714:0) :|: v144670:0 > -2 && v134263:0 > 0 && v134265:0 > 0 && sum~cons_1~v144670:0 = 1 + v144670:0
f_3812(v143376:0, v143377:0, v143379:0, v143381:0, sum~cons_1~v144670:1, cons_0) -> f_3812(v143376:0, v143377:0, 1 + v144670:1, v143381:0, v144670:1, v148714:1) :|: v144670:1 > -2 && v143377:0 > 0 && v143379:0 > 0 && sum~cons_1~v144670:1 = 1 + v144670:1 && cons_0 = 0
f_3812(v143376:0, v143377:0, v143379:0, v143381:0, v144670:0, v148714:0) -> f_3644(v143376:0, v143377:0, v143379:0, v144670:0, 1 + v143381:0) :|: v143376:0 > 0 && v143381:0 > -1 && v143376:0 >= 1 + v143381:0 && v148714:0 < 0
f_3812(v143376:0, v143377:0, v143379:0, v143381:0, v144670:0, v148714:0) -> f_3644(v143376:0, v143377:0, v143379:0, v144670:0, 1 + v143381:0) :|: v143376:0 > 0 && v143381:0 > -1 && v143376:0 >= 1 + v143381:0 && v148714:0 > 0

----------------------------------------

(140)
Obligation:
Rules:
f_3644(v134262:0, v134263:0, v134265:0, v134269:0, v134272:0) -> f_3644(v134262:0, v134263:0, v134265:0, v134269:0, 1 + v134272:0) :|: v134262:0 >= 1 + v134272:0 && v134262:0 > 0 && v134272:0 > -1
f_3644(x, x1, x2, x3, x4) -> f_3812(x, x1, 1 + x5, x4, x5, x6) :|: x5 > -2 && x1 > 0 && x2 > 0 && x3 = 1 + x5
f_3812(v143376:0, v143377:0, v143379:0, v143381:0, sum~cons_1~v144670:1, cons_0) -> f_3812(v143376:0, v143377:0, 1 + v144670:1, v143381:0, v144670:1, v148714:1) :|: v144670:1 > -2 && v143377:0 > 0 && v143379:0 > 0 && sum~cons_1~v144670:1 = 1 + v144670:1 && cons_0 = 0
f_3812(x7, x8, x9, x10, x11, x12) -> f_3644(x7, x8, x9, x11, 1 + x10) :|: x7 > 0 && x10 > -1 && x7 >= 1 + x10 && x12 < 0
f_3812(x13, x14, x15, x16, x17, x18) -> f_3644(x13, x14, x15, x17, 1 + x16) :|: x13 > 0 && x16 > -1 && x13 >= 1 + x16 && x18 > 0

----------------------------------------

(141) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(142)
Obligation:
Rules:
f_3812(x13:0, x14:0, x15:0, x16:0, x17:0, x18:0) -> f_3644(x13:0, x14:0, x15:0, x17:0, 1 + x16:0) :|: x13:0 >= 1 + x16:0 && x18:0 > 0 && x16:0 > -1 && x13:0 > 0
f_3812(v143376:0:0, v143377:0:0, v143379:0:0, v143381:0:0, sum~cons_1~v144670:1:0, cons_0) -> f_3812(v143376:0:0, v143377:0:0, 1 + v144670:1:0, v143381:0:0, v144670:1:0, v148714:1:0) :|: v144670:1:0 > -2 && v143377:0:0 > 0 && v143379:0:0 > 0 && sum~cons_1~v144670:1:0 = 1 + v144670:1:0 && cons_0 = 0
f_3812(x7:0, x8:0, x9:0, x10:0, x11:0, x12:0) -> f_3644(x7:0, x8:0, x9:0, x11:0, 1 + x10:0) :|: x7:0 >= 1 + x10:0 && x12:0 < 0 && x10:0 > -1 && x7:0 > 0
f_3644(v134262:0:0, v134263:0:0, v134265:0:0, v134269:0:0, v134272:0:0) -> f_3644(v134262:0:0, v134263:0:0, v134265:0:0, v134269:0:0, 1 + v134272:0:0) :|: v134262:0:0 >= 1 + v134272:0:0 && v134262:0:0 > 0 && v134272:0:0 > -1
f_3644(x:0, x1:0, x2:0, sum~cons_1~x5:0, x4:0) -> f_3812(x:0, x1:0, 1 + x5:0, x4:0, x5:0, x6:0) :|: x5:0 > -2 && x1:0 > 0 && x2:0 > 0 && sum~cons_1~x5:0 = 1 + x5:0

----------------------------------------

(143) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_3812 ] = 2*f_3812_2 + 2*f_3812_5
[ f_3644 ] = 2*f_3644_2 + 2*f_3644_4 + -1

The following rules are decreasing:
f_3812(x13:0, x14:0, x15:0, x16:0, x17:0, x18:0) -> f_3644(x13:0, x14:0, x15:0, x17:0, 1 + x16:0) :|: x13:0 >= 1 + x16:0 && x18:0 > 0 && x16:0 > -1 && x13:0 > 0
f_3812(v143376:0:0, v143377:0:0, v143379:0:0, v143381:0:0, sum~cons_1~v144670:1:0, cons_0) -> f_3812(v143376:0:0, v143377:0:0, 1 + v144670:1:0, v143381:0:0, v144670:1:0, v148714:1:0) :|: v144670:1:0 > -2 && v143377:0:0 > 0 && v143379:0:0 > 0 && sum~cons_1~v144670:1:0 = 1 + v144670:1:0 && cons_0 = 0
f_3812(x7:0, x8:0, x9:0, x10:0, x11:0, x12:0) -> f_3644(x7:0, x8:0, x9:0, x11:0, 1 + x10:0) :|: x7:0 >= 1 + x10:0 && x12:0 < 0 && x10:0 > -1 && x7:0 > 0
f_3644(x:0, x1:0, x2:0, sum~cons_1~x5:0, x4:0) -> f_3812(x:0, x1:0, 1 + x5:0, x4:0, x5:0, x6:0) :|: x5:0 > -2 && x1:0 > 0 && x2:0 > 0 && sum~cons_1~x5:0 = 1 + x5:0

The following rules are bounded:
f_3812(v143376:0:0, v143377:0:0, v143379:0:0, v143381:0:0, sum~cons_1~v144670:1:0, cons_0) -> f_3812(v143376:0:0, v143377:0:0, 1 + v144670:1:0, v143381:0:0, v144670:1:0, v148714:1:0) :|: v144670:1:0 > -2 && v143377:0:0 > 0 && v143379:0:0 > 0 && sum~cons_1~v144670:1:0 = 1 + v144670:1:0 && cons_0 = 0
f_3644(x:0, x1:0, x2:0, sum~cons_1~x5:0, x4:0) -> f_3812(x:0, x1:0, 1 + x5:0, x4:0, x5:0, x6:0) :|: x5:0 > -2 && x1:0 > 0 && x2:0 > 0 && sum~cons_1~x5:0 = 1 + x5:0


----------------------------------------

(144)
Obligation:
Rules:
f_3812(x13:0, x14:0, x15:0, x16:0, x17:0, x18:0) -> f_3644(x13:0, x14:0, x15:0, x17:0, 1 + x16:0) :|: x13:0 >= 1 + x16:0 && x18:0 > 0 && x16:0 > -1 && x13:0 > 0
f_3812(x7:0, x8:0, x9:0, x10:0, x11:0, x12:0) -> f_3644(x7:0, x8:0, x9:0, x11:0, 1 + x10:0) :|: x7:0 >= 1 + x10:0 && x12:0 < 0 && x10:0 > -1 && x7:0 > 0
f_3644(v134262:0:0, v134263:0:0, v134265:0:0, v134269:0:0, v134272:0:0) -> f_3644(v134262:0:0, v134263:0:0, v134265:0:0, v134269:0:0, 1 + v134272:0:0) :|: v134262:0:0 >= 1 + v134272:0:0 && v134262:0:0 > 0 && v134272:0:0 > -1

----------------------------------------

(145) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained one non-trivial SCC.

----------------------------------------

(146)
Obligation:
Rules:
f_3644(v134262:0:0, v134263:0:0, v134265:0:0, v134269:0:0, v134272:0:0) -> f_3644(v134262:0:0, v134263:0:0, v134265:0:0, v134269:0:0, 1 + v134272:0:0) :|: v134262:0:0 >= 1 + v134272:0:0 && v134262:0:0 > 0 && v134272:0:0 > -1

----------------------------------------

(147) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(148)
Obligation:
Rules:
f_3644(v134262:0:0:0, v134263:0:0:0, v134265:0:0:0, v134269:0:0:0, v134272:0:0:0) -> f_3644(v134262:0:0:0, v134263:0:0:0, v134265:0:0:0, v134269:0:0:0, 1 + v134272:0:0:0) :|: v134262:0:0:0 >= 1 + v134272:0:0:0 && v134262:0:0:0 > 0 && v134272:0:0:0 > -1

----------------------------------------

(149) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_3644(x1, x2, x3, x4, x5) -> f_3644(x1, x5)

----------------------------------------

(150)
Obligation:
Rules:
f_3644(v134262:0:0:0, v134272:0:0:0) -> f_3644(v134262:0:0:0, 1 + v134272:0:0:0) :|: v134262:0:0:0 >= 1 + v134272:0:0:0 && v134262:0:0:0 > 0 && v134272:0:0:0 > -1

----------------------------------------

(151) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_3644 ] = f_3644_1 + -1*f_3644_2

The following rules are decreasing:
f_3644(v134262:0:0:0, v134272:0:0:0) -> f_3644(v134262:0:0:0, 1 + v134272:0:0:0) :|: v134262:0:0:0 >= 1 + v134272:0:0:0 && v134262:0:0:0 > 0 && v134272:0:0:0 > -1

The following rules are bounded:
f_3644(v134262:0:0:0, v134272:0:0:0) -> f_3644(v134262:0:0:0, 1 + v134272:0:0:0) :|: v134262:0:0:0 >= 1 + v134272:0:0:0 && v134262:0:0:0 > 0 && v134272:0:0:0 > -1


----------------------------------------

(152)
YES

----------------------------------------

(153)
Obligation:
SCC
----------------------------------------

(154) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 21 rulesP rules:
f_3082(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92437, 1, v92438, 0, v92433, v92439, v92440, v92441, v92442, v92443, 3, 2, 4) -> f_3100(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92437, 1, v92438, 0, v92433, v92439, v92440, v92441, v92442, v92443, 3, 2, 4) :|: 0 = 0
f_3100(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92437, 1, v92438, 0, v92433, v92439, v92440, v92441, v92442, v92443, 3, 2, 4) -> f_3117(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92437, 1, v92438, 0, v92433, v92439, v92440, v92441, v92442, v92443, 3, 2, 4) :|: 0 = 0
f_3117(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92437, 1, v92438, 0, v92433, v92439, v92440, v92441, v92442, v92443, 3, 2, 4) -> f_3136(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92437, 1, v92438, 0, v92433, v92439, v92440, v92441, v92442, v92443, 3, 2, 4) :|: TRUE
f_3136(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92437, 1, v92438, 0, v92433, v92439, v92440, v92441, v92442, v92443, 3, 2, 4) -> f_3152(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92437, 1, v92438, 0, v92439, v92440, v92441, v92442, v92443, 3, 2, 4) :|: 0 = 0
f_3152(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92437, 1, v92438, 0, v92439, v92440, v92441, v92442, v92443, 3, 2, 4) -> f_3168(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92437, 1, v92438, 0, v105118, v92439, v92440, v92441, v92442, v92443, 3, 2, 4) :|: 1 + v105118 = v92437 && 0 <= 1 + v105118
f_3168(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92437, 1, v92438, 0, v105118, v92439, v92440, v92441, v92442, v92443, 3, 2, 4) -> f_3185(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92437, 1, v92438, 0, v105118, v92439, v92440, v92441, v92442, v92443, 3, 2, 4) :|: TRUE
f_3185(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92437, 1, v92438, 0, v105118, v92439, v92440, v92441, v92442, v92443, 3, 2, 4) -> f_3208(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92437, 1, v92438, 0, v105118, v92439, v92440, v92441, v92442, v92443, 3, 2, 4) :|: TRUE
f_3208(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92437, 1, v92438, 0, v105118, v92439, v92440, v92441, v92442, v92443, 3, 2, 4) -> f_3234(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92437, 1, v92438, 0, v105118, v92439, v92440, v92441, v92442, v92443, 3, 2, 4) :|: 0 = 0
f_3234(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92437, 1, v92438, 0, v105118, v92439, v92440, v92441, v92442, v92443, 3, 2, 4) -> f_3257(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92437, 1, v92438, 0, v105118, v92439, v92440, v92441, v92442, v92443, 3, 2, 4) :|: 0 = 0
f_3257(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92437, 1, v92438, 0, v105118, v92439, v92440, v92441, v92442, v92443, 3, 2, 4) -> f_3278(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92437, 1, v92438, 0, v105118, v92439, v92440, v92441, v92442, v92443, 3, 2, 4) :|: 0 = 0
f_3278(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92437, 1, v92438, 0, v105118, v92439, v92440, v92441, v92442, v92443, 3, 2, 4) -> f_3304(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92437, 1, v92438, 0, v105118, v92439, v92440, v92441, v92442, v92443, 3, 2, 4) :|: 0 = 0
f_3304(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92437, 1, v92438, 0, v105118, v92439, v92440, v92441, v92442, v92443, 3, 2, 4) -> f_2922(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92437, 1, v92438, 0, v105118, v92438, v92439, v92440, v92441, v92442, v92443, 3, 4) :|: TRUE
f_2922(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92433, 1, v92435, 0, v92437, v92438, v92439, v92440, v92441, v92442, v92443, 3, 4) -> f_2940(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92433, 1, v92435, 0, v92437, v92438, v92439, v92440, v92441, v92442, v92443, 3, 4) :|: TRUE
f_2940(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92433, 1, v92435, 0, v92437, v92438, v92439, v92440, v92441, v92442, v92443, 3, 4) -> f_2960(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92433, 1, v92435, 0, v92437, v92438, v92439, v92440, v92441, v92442, v92443, 3, 4) :|: TRUE
f_2960(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92433, 1, v92435, 0, v92437, v92438, v92439, v92440, v92441, v92442, v92443, 3, 4) -> f_2979(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92437, 1, v92435, 0, v92433, v92438, v92439, v92440, v92441, v92442, v92443, 3, 4) :|: 0 = 0
f_2979(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92437, 1, v92435, 0, v92433, v92438, v92439, v92440, v92441, v92442, v92443, 3, 4) -> f_2997(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92437, 1, v92435, 0, v92433, v92438, v92439, v92440, v92441, v92442, v92443, 3, 4) :|: 0 <= v92437 && 1 <= v92433 && 1 <= v92431
f_2997(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92437, 1, v92435, 0, v92433, v92438, v92439, v92440, v92441, v92442, v92443, 3, 4) -> f_3011(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92437, 1, v92435, 0, v92433, v92438, v92439, v92440, v92441, v92442, v92443, 3, 4) :|: 0 = 0
f_3011(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92437, 1, v92435, 0, v92433, v92438, v92439, v92440, v92441, v92442, v92443, 3, 4) -> f_3028(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92437, 1, v92435, 0, v92433, v92438, v92439, v92440, v92441, v92442, v92443, 3, 4) :|: TRUE
f_3028(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92437, 1, v92435, 0, v92433, v92438, v92439, v92440, v92441, v92442, v92443, 3, 4) -> f_3046(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92437, 1, v92435, 0, v92433, v92438, v92439, v92440, v92441, v92442, v92443, 3, 4) :|: TRUE
f_3046(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92437, 1, v92435, 0, v92433, v92438, v92439, v92440, v92441, v92442, v92443, 3, 4) -> f_3065(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92437, 1, v92438, 0, v92433, v92439, v92440, v92441, v92442, v92443, 3, 4) :|: 0 = 0
f_3065(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92437, 1, v92438, 0, v92433, v92439, v92440, v92441, v92442, v92443, 3, 4) -> f_3082(v92426, v92427, v92428, v92429, v92430, v92431, v92432, v92437, 1, v92438, 0, v92433, v92439, v92440, v92441, v92442, v92443, 3, 2, 4) :|: v92438 < 0 && 2 + v92430 <= 0 && 2 + v92432 <= 0
Combined rules. Obtained 1 rulesP rules:
f_3082(v92426:0, v92427:0, v92428:0, v92429:0, v92430:0, v92431:0, v92432:0, 1 + v105118:0, 1, v92438:0, 0, v92433:0, v92439:0, v92440:0, v92441:0, v92442:0, v92443:0, 3, 2, 4) -> f_3082(v92426:0, v92427:0, v92428:0, v92429:0, v92430:0, v92431:0, v92432:0, v105118:0, 1, v92438:0, 0, 1 + v105118:0, v92439:0, v92440:0, v92441:0, v92442:0, v92443:0, 3, 2, 4) :|: v105118:0 > -1 && v92431:0 > 0 && v92430:0 < -1 && v92432:0 < -1 && v92438:0 < 0
Filtered unneeded arguments:
   f_3082(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20) -> f_3082(x5, x6, x7, x8, x10)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_3082(v92430:0, v92431:0, v92432:0, sum~cons_1~v105118:0, v92438:0) -> f_3082(v92430:0, v92431:0, v92432:0, v105118:0, v92438:0) :|: v92431:0 > 0 && v105118:0 > -1 && v92430:0 < -1 && v92438:0 < 0 && v92432:0 < -1 && sum~cons_1~v105118:0 = 1 + v105118:0

----------------------------------------

(155)
Obligation:
Rules:
f_3082(v92430:0, v92431:0, v92432:0, sum~cons_1~v105118:0, v92438:0) -> f_3082(v92430:0, v92431:0, v92432:0, v105118:0, v92438:0) :|: v92431:0 > 0 && v105118:0 > -1 && v92430:0 < -1 && v92438:0 < 0 && v92432:0 < -1 && sum~cons_1~v105118:0 = 1 + v105118:0

----------------------------------------

(156) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(157)
Obligation:
Rules:
f_3082(v92430:0:0, v92431:0:0, v92432:0:0, sum~cons_1~v105118:0:0, v92438:0:0) -> f_3082(v92430:0:0, v92431:0:0, v92432:0:0, v105118:0:0, v92438:0:0) :|: v92438:0:0 < 0 && v92432:0:0 < -1 && v92430:0:0 < -1 && v105118:0:0 > -1 && v92431:0:0 > 0 && sum~cons_1~v105118:0:0 = 1 + v105118:0:0

----------------------------------------

(158) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_3082(x, x1, x2, x3, x4)] = x3

The following rules are decreasing:
f_3082(v92430:0:0, v92431:0:0, v92432:0:0, sum~cons_1~v105118:0:0, v92438:0:0) -> f_3082(v92430:0:0, v92431:0:0, v92432:0:0, v105118:0:0, v92438:0:0) :|: v92438:0:0 < 0 && v92432:0:0 < -1 && v92430:0:0 < -1 && v105118:0:0 > -1 && v92431:0:0 > 0 && sum~cons_1~v105118:0:0 = 1 + v105118:0:0
The following rules are bounded:
f_3082(v92430:0:0, v92431:0:0, v92432:0:0, sum~cons_1~v105118:0:0, v92438:0:0) -> f_3082(v92430:0:0, v92431:0:0, v92432:0:0, v105118:0:0, v92438:0:0) :|: v92438:0:0 < 0 && v92432:0:0 < -1 && v92430:0:0 < -1 && v105118:0:0 > -1 && v92431:0:0 > 0 && sum~cons_1~v105118:0:0 = 1 + v105118:0:0

----------------------------------------

(159)
YES

----------------------------------------

(160)
Obligation:
SCC
----------------------------------------

(161) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 48 rulesP rules:
f_3197(v99532, v99533, v99534, v99535, v99536, v99537, v99538, v99539, 1, v99541, 0, v99543, v101638, v99545, v99544, v99547, v99548, v99549, v99550, 3, 4) -> f_3222(v99532, v99533, v99534, v99535, v99536, v99537, v99538, v99539, 1, v99541, 0, v99543, v101638, v99545, v99544, v99547, v99548, v99549, v99550, 3, 4) :|: 0 = 0
f_3222(v99532, v99533, v99534, v99535, v99536, v99537, v99538, v99539, 1, v99541, 0, v99543, v101638, v99545, v99544, v99547, v99548, v99549, v99550, 3, 4) -> f_3245(v99532, v99533, v99534, v99535, v99536, v99537, v99538, v99539, 1, v99541, 0, v99543, v101638, v99545, v99544, v99547, v99548, v99549, v99550, 3, 4) :|: TRUE
f_3245(v99532, v99533, v99534, v99535, v99536, v99537, v99538, v99539, 1, v99541, 0, v99543, v101638, v99545, v99544, v99547, v99548, v99549, v99550, 3, 4) -> f_3267(v99532, v99533, v99534, v99535, v99536, v99537, v99538, v99539, 1, v99541, 0, v99543, v101638, v110901, v99544, v99547, v99548, v99549, v99550, 3, 4) :|: TRUE
f_3267(v99532, v99533, v99534, v99535, v99536, v99537, v99538, v99539, 1, v99541, 0, v99543, v101638, v110901, v99544, v99547, v99548, v99549, v99550, 3, 4) -> f_3291(v99532, v99533, v99534, v99535, v99536, v99537, v99538, v99539, 1, v99541, 0, v99543, v101638, v110901, v99544, v99547, v99548, v99549, v99550, 3, 4) :|: v110901 != 0
f_3267(v99532, v99533, v99534, v99535, v99536, v99537, v99538, v99539, 1, v99541, 0, v99543, v101638, v110901, v99544, v99547, v99548, v99549, v99550, 3, 4) -> f_3292(v99532, v99533, v99534, v99535, v99536, v99537, v99538, v99539, 1, v99541, 0, v99543, v101638, v99544, v99547, v99548, v99549, v99550, 3, 4) :|: v110901 = 0
f_3291(v99532, v99533, v99534, v99535, v99536, v99537, v99538, v99539, 1, v99541, 0, v99543, v101638, v110901, v99544, v99547, v99548, v99549, v99550, 3, 4) -> f_3316(v99532, v99533, v99534, v99535, v99536, v99537, v99538, v99539, 1, v99541, 0, v99543, v101638, v110901, v99544, v99547, v99548, v99549, v99550, 3, 4) :|: 0 = 0
f_3316(v99532, v99533, v99534, v99535, v99536, v99537, v99538, v99539, 1, v99541, 0, v99543, v101638, v110901, v99544, v99547, v99548, v99549, v99550, 3, 4) -> f_3338(v99532, v99533, v99534, v99535, v99536, v99537, v99538, v99539, 1, v99541, 0, v99543, v101638, v110901, v99544, v99547, v99548, v99549, v99550, 3, 4) :|: 0 = 0
f_3338(v99532, v99533, v99534, v99535, v99536, v99537, v99538, v99539, 1, v99541, 0, v99543, v101638, v110901, v99544, v99547, v99548, v99549, v99550, 3, 4) -> f_3057(v99532, v99533, v99534, v99535, v99536, v99537, v99538, v99539, 1, v99541, 0, v99543, v101638, v110901, v99544, v99547, v99548, v99549, v99550, 3, 4) :|: TRUE
f_3057(v99532, v99533, v99534, v99535, v99536, v99537, v99538, v99539, 1, v99541, 0, v99543, v99544, v99545, v99546, v99547, v99548, v99549, v99550, 3, 4) -> f_3074(v99532, v99533, v99534, v99535, v99536, v99537, v99538, v99539, 1, v99541, 0, v99543, v99544, v99545, v99546, v99547, v99548, v99549, v99550, 3, 4) :|: TRUE
f_3074(v99532, v99533, v99534, v99535, v99536, v99537, v99538, v99539, 1, v99541, 0, v99543, v99544, v99545, v99546, v99547, v99548, v99549, v99550, 3, 4) -> f_3092(v99532, v99533, v99534, v99535, v99536, v99537, v99538, v99539, 1, v99541, 0, v99543, v99544, v99545, v99547, v99548, v99549, v99550, 3, 4) :|: 0 = 0
f_3092(v99532, v99533, v99534, v99535, v99536, v99537, v99538, v99539, 1, v99541, 0, v99543, v99544, v99545, v99547, v99548, v99549, v99550, 3, 4) -> f_3110(v99532, v99533, v99534, v99535, v99536, v99537, v99538, v99539, 1, v99541, 0, v99543, v99544, v99545, v101638, v99547, v99548, v99549, v99550, 3, 4) :|: v101638 = 1 + v99544
f_3110(v99532, v99533, v99534, v99535, v99536, v99537, v99538, v99539, 1, v99541, 0, v99543, v99544, v99545, v101638, v99547, v99548, v99549, v99550, 3, 4) -> f_3128(v99532, v99533, v99534, v99535, v99536, v99537, v99538, v99539, 1, v99541, 0, v99543, v99544, v99545, v101638, v99547, v99548, v99549, v99550, 3, 4) :|: TRUE
f_3128(v99532, v99533, v99534, v99535, v99536, v99537, v99538, v99539, 1, v99541, 0, v99543, v99544, v99545, v101638, v99547, v99548, v99549, v99550, 3, 4) -> f_3143(v99532, v99533, v99534, v99535, v99536, v99537, v99538, v99539, 1, v99541, 0, v99543, v99544, v99545, v101638, v99547, v99548, v99549, v99550, 3, 4) :|: TRUE
f_3143(v99532, v99533, v99534, v99535, v99536, v99537, v99538, v99539, 1, v99541, 0, v99543, v99544, v99545, v101638, v99547, v99548, v99549, v99550, 3, 4) -> f_3160(v99532, v99533, v99534, v99535, v99536, v99537, v99538, v99539, 1, v99541, 0, v99543, v101638, v99545, v99544, v99547, v99548, v99549, v99550, 3, 4) :|: 0 = 0
f_3160(v99532, v99533, v99534, v99535, v99536, v99537, v99538, v99539, 1, v99541, 0, v99543, v101638, v99545, v99544, v99547, v99548, v99549, v99550, 3, 4) -> f_3177(v99532, v99533, v99534, v99535, v99536, v99537, v99538, v99539, 1, v99541, 0, v99543, v101638, v99545, v99544, v99547, v99548, v99549, v99550, 3, 4) :|: 0 = 0
f_3177(v99532, v99533, v99534, v99535, v99536, v99537, v99538, v99539, 1, v99541, 0, v99543, v101638, v99545, v99544, v99547, v99548, v99549, v99550, 3, 4) -> f_3197(v99532, v99533, v99534, v99535, v99536, v99537, v99538, v99539, 1, v99541, 0, v99543, v101638, v99545, v99544, v99547, v99548, v99549, v99550, 3, 4) :|: v101638 <= v99536
f_3292(v99532, v99533, v99534, v99535, v99536, v99537, v99538, v99539, 1, v99541, 0, v99543, v101638, v99544, v99547, v99548, v99549, v99550, 3, 4) -> f_3317(v99532, v99533, v99534, v99535, v99536, v99537, v99538, v99539, 1, v99541, 0, v99543, v101638, v99544, v99547, v99548, v99549, v99550, 3, 4) :|: 0 = 0
f_3317(v99532, v99533, v99534, v99535, v99536, v99537, v99538, v99539, 1, v99541, 0, v99543, v101638, v99544, v99547, v99548, v99549, v99550, 3, 4) -> f_3339(v99532, v99533, v99534, v99535, v99536, v99537, v99538, v99539, 1, v99541, 0, v99543, v101638, v99544, v99547, v99548, v99549, v99550, 3, 4) :|: 0 = 0
f_3339(v99532, v99533, v99534, v99535, v99536, v99537, v99538, v99539, 1, v99541, 0, v99543, v101638, v99544, v99547, v99548, v99549, v99550, 3, 4) -> f_3059(v99532, v99533, v99534, v99535, v99536, v99537, v99538, v99539, 1, v99541, 0, v99543, v101638, v99544, v99547, v99548, v99549, v99550, 3, 4) :|: TRUE
f_3059(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99871, 1, v99873, 0, v99875, v99876, v99877, v99878, v99879, v99880, v99881, 3, 4) -> f_3075(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99871, 1, v99873, 0, v99875, v99876, v99877, v99878, v99879, v99880, v99881, 3, 4) :|: TRUE
f_3075(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99871, 1, v99873, 0, v99875, v99876, v99877, v99878, v99879, v99880, v99881, 3, 4) -> f_3093(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99871, 1, v99873, 0, v99875, v99876, v99877, v99878, v99879, v99880, v99881, 3, 4) :|: TRUE
f_3093(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99871, 1, v99873, 0, v99875, v99876, v99877, v99878, v99879, v99880, v99881, 3, 4) -> f_3111(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99873, 0, v99871, v99876, v99877, v99878, v99879, v99880, v99881, 3, 4) :|: 0 = 0
f_3111(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99873, 0, v99871, v99876, v99877, v99878, v99879, v99880, v99881, 3, 4) -> f_3129(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99873, 0, v99871, v99876, v99877, v99878, v99879, v99880, v99881, 3, 4) :|: 0 <= v99875 && 1 <= v99871 && 1 <= v99869
f_3129(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99873, 0, v99871, v99876, v99877, v99878, v99879, v99880, v99881, 3, 4) -> f_3144(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99873, 0, v99871, v99876, v99877, v99878, v99879, v99880, v99881, 3, 4) :|: 0 = 0
f_3144(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99873, 0, v99871, v99876, v99877, v99878, v99879, v99880, v99881, 3, 4) -> f_3161(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99873, 0, v99871, v99876, v99877, v99878, v99879, v99880, v99881, 3, 4) :|: TRUE
f_3161(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99873, 0, v99871, v99876, v99877, v99878, v99879, v99880, v99881, 3, 4) -> f_3178(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99873, 0, v99871, v99876, v99877, v99878, v99879, v99880, v99881, 3, 4) :|: TRUE
f_3178(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99873, 0, v99871, v99876, v99877, v99878, v99879, v99880, v99881, 3, 4) -> f_3199(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v99871, v99877, v99878, v99879, v99880, v99881, 3, 4) :|: 0 = 0
f_3199(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v99871, v99877, v99878, v99879, v99880, v99881, 3, 4) -> f_3225(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v99871, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) :|: v99876 < 0 && 2 + v99877 <= 0 && 2 + v99870 <= 0
f_3225(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v99871, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) -> f_3248(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v99871, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) :|: 0 = 0
f_3248(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v99871, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) -> f_3269(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v99871, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) :|: 0 = 0
f_3269(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v99871, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) -> f_3294(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v99871, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) :|: TRUE
f_3294(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v99871, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) -> f_3320(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) :|: 0 = 0
f_3320(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) -> f_3342(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v115698, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) :|: 1 + v115698 = v99875 && 0 <= 1 + v115698
f_3342(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v115698, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) -> f_3359(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v115698, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) :|: TRUE
f_3359(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v115698, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) -> f_3374(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v115698, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) :|: TRUE
f_3374(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v115698, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) -> f_3386(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v115698, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) :|: 0 = 0
f_3386(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v115698, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) -> f_3397(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v115698, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) :|: 0 = 0
f_3397(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v115698, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) -> f_3409(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v115698, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) :|: 0 = 0
f_3409(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v115698, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) -> f_3422(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v115698, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) :|: TRUE
f_3422(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v115698, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) -> f_3434(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v115698, v122873, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) :|: TRUE
f_3434(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v115698, v122873, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) -> f_3448(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v115698, v122873, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) :|: v122873 != 0
f_3434(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v115698, v122873, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) -> f_3449(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v115698, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) :|: v122873 = 0
f_3448(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v115698, v122873, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) -> f_3465(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v115698, v122873, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) :|: 0 = 0
f_3465(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v115698, v122873, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) -> f_3485(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v115698, v122873, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) :|: 0 = 0
f_3485(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v115698, v122873, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) -> f_3057(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v115698, v99876, v122873, v99877, v99878, v99879, v99880, v99881, 3, 4) :|: TRUE
f_3449(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v115698, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) -> f_3466(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v115698, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) :|: 0 = 0
f_3466(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v115698, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) -> f_3486(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v115698, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) :|: 0 = 0
f_3486(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v115698, v99877, v99878, v99879, v99880, v99881, 3, 2, 4) -> f_3059(v99864, v99865, v99866, v99867, v99868, v99869, v99870, v99875, 1, v99876, 0, v115698, v99876, v99877, v99878, v99879, v99880, v99881, 3, 4) :|: TRUE
Combined rules. Obtained 6 rulesP rules:
f_3197(v99532:0, v99533:0, v99534:0, v99535:0, v99536:0, v99537:0, v99538:0, v99539:0, 1, v99541:0, 0, v99543:0, v101638:0, v99545:0, v99544:0, v99547:0, v99548:0, v99549:0, v99550:0, 3, 4) -> f_3197(v99532:0, v99533:0, v99534:0, v99535:0, v99536:0, v99537:0, v99538:0, v99539:0, 1, v99541:0, 0, v99543:0, 1 + v101638:0, v110901:0, v101638:0, v99547:0, v99548:0, v99549:0, v99550:0, 3, 4) :|: v99536:0 >= 1 + v101638:0 && v110901:0 < 0
f_3197(v99532:0, v99533:0, v99534:0, v99535:0, v99536:0, v99537:0, v99538:0, v99539:0, 1, v99541:0, 0, v99543:0, v101638:0, v99545:0, v99544:0, v99547:0, v99548:0, v99549:0, v99550:0, 3, 4) -> f_3197(v99532:0, v99533:0, v99534:0, v99535:0, v99536:0, v99537:0, v99538:0, v99539:0, 1, v99541:0, 0, v99543:0, 1 + v101638:0, v110901:0, v101638:0, v99547:0, v99548:0, v99549:0, v99550:0, 3, 4) :|: v99536:0 >= 1 + v101638:0 && v110901:0 > 0
f_3434(v99864:0, v99865:0, v99866:0, v99867:0, v99868:0, v99869:0, v99870:0, v99875:0, 1, v99876:0, 0, 1 + v115698:1, 0, v99877:0, v99878:0, v99879:0, v99880:0, v99881:0, 3, 2, 4) -> f_3434(v99864:0, v99865:0, v99866:0, v99867:0, v99868:0, v99869:0, v99870:0, 1 + v115698:1, 1, v99876:0, 0, v115698:1, v122873:1, v99877:0, v99878:0, v99879:0, v99880:0, v99881:0, 3, 2, 4) :|: v99875:0 > 0 && v115698:1 > -2 && v99869:0 > 0 && v99877:0 < -1 && v99876:0 < 0 && v99870:0 < -1
f_3434(v99864:0, v99865:0, v99866:0, v99867:0, v99868:0, v99869:0, v99870:0, v99875:0, 1, v99876:0, 0, v115698:0, v122873:0, v99877:0, v99878:0, v99879:0, v99880:0, v99881:0, 3, 2, 4) -> f_3197(v99864:0, v99865:0, v99866:0, v99867:0, v99868:0, v99869:0, v99870:0, v99875:0, 1, v99876:0, 0, v115698:0, 1 + v99876:0, v122873:0, v99876:0, v99878:0, v99879:0, v99880:0, v99881:0, 3, 4) :|: v99868:0 >= 1 + v99876:0 && v122873:0 < 0
f_3434(v99864:0, v99865:0, v99866:0, v99867:0, v99868:0, v99869:0, v99870:0, v99875:0, 1, v99876:0, 0, v115698:0, v122873:0, v99877:0, v99878:0, v99879:0, v99880:0, v99881:0, 3, 2, 4) -> f_3197(v99864:0, v99865:0, v99866:0, v99867:0, v99868:0, v99869:0, v99870:0, v99875:0, 1, v99876:0, 0, v115698:0, 1 + v99876:0, v122873:0, v99876:0, v99878:0, v99879:0, v99880:0, v99881:0, 3, 4) :|: v99868:0 >= 1 + v99876:0 && v122873:0 > 0
f_3197(v99532:0, v99533:0, v99534:0, v99535:0, v99536:0, v99537:0, v99538:0, v99539:0, 1, v99541:0, 0, 1 + v115698:0, v101638:0, v99545:0, v99544:0, v99547:0, v99548:0, v99549:0, v99550:0, 3, 4) -> f_3434(v99532:0, v99533:0, v99534:0, v99535:0, v99536:0, v99537:0, v99538:0, 1 + v115698:0, 1, v101638:0, 0, v115698:0, v122873:0, v99544:0, v99547:0, v99548:0, v99549:0, v99550:0, 3, 2, 4) :|: v99539:0 > 0 && v115698:0 > -2 && v99537:0 > 0 && v99544:0 < -1 && v101638:0 < 0 && v99538:0 < -1
Filtered unneeded arguments:
   f_3197(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21) -> f_3197(x5, x6, x7, x8, x12, x13, x15)
   f_3434(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21) -> f_3434(x5, x6, x7, x8, x10, x12, x13, x14)
Removed division, modulo operations, cleaned up constraints. Obtained 5 rules.P rules:
f_3197(v99536:0, v99537:0, v99538:0, v99539:0, v99543:0, v101638:0, v99544:0) -> f_3197(v99536:0, v99537:0, v99538:0, v99539:0, v99543:0, 1 + v101638:0, v101638:0) :|: v99536:0 >= 1 + v101638:0
f_3434(v99868:0, v99869:0, v99870:0, v99875:0, v99876:0, sum~cons_1~v115698:1, cons_0, v99877:0) -> f_3434(v99868:0, v99869:0, v99870:0, 1 + v115698:1, v99876:0, v115698:1, v122873:1, v99877:0) :|: v115698:1 > -2 && v99875:0 > 0 && v99869:0 > 0 && v99877:0 < -1 && v99870:0 < -1 && v99876:0 < 0 && sum~cons_1~v115698:1 = 1 + v115698:1 && cons_0 = 0
f_3434(v99868:0, v99869:0, v99870:0, v99875:0, v99876:0, v115698:0, v122873:0, v99877:0) -> f_3197(v99868:0, v99869:0, v99870:0, v99875:0, v115698:0, 1 + v99876:0, v99876:0) :|: v99868:0 >= 1 + v99876:0 && v122873:0 < 0
f_3434(v99868:0, v99869:0, v99870:0, v99875:0, v99876:0, v115698:0, v122873:0, v99877:0) -> f_3197(v99868:0, v99869:0, v99870:0, v99875:0, v115698:0, 1 + v99876:0, v99876:0) :|: v99868:0 >= 1 + v99876:0 && v122873:0 > 0
f_3197(v99536:0, v99537:0, v99538:0, v99539:0, sum~cons_1~v115698:0, v101638:0, v99544:0) -> f_3434(v99536:0, v99537:0, v99538:0, 1 + v115698:0, v101638:0, v115698:0, v122873:0, v99544:0) :|: v115698:0 > -2 && v99539:0 > 0 && v99537:0 > 0 && v99544:0 < -1 && v99538:0 < -1 && v101638:0 < 0 && sum~cons_1~v115698:0 = 1 + v115698:0

----------------------------------------

(162)
Obligation:
Rules:
f_3197(v99536:0, v99537:0, v99538:0, v99539:0, v99543:0, v101638:0, v99544:0) -> f_3197(v99536:0, v99537:0, v99538:0, v99539:0, v99543:0, 1 + v101638:0, v101638:0) :|: v99536:0 >= 1 + v101638:0
f_3434(v99868:0, v99869:0, v99870:0, v99875:0, v99876:0, sum~cons_1~v115698:1, cons_0, v99877:0) -> f_3434(v99868:0, v99869:0, v99870:0, 1 + v115698:1, v99876:0, v115698:1, v122873:1, v99877:0) :|: v115698:1 > -2 && v99875:0 > 0 && v99869:0 > 0 && v99877:0 < -1 && v99870:0 < -1 && v99876:0 < 0 && sum~cons_1~v115698:1 = 1 + v115698:1 && cons_0 = 0
f_3434(x, x1, x2, x3, x4, x5, x6, x7) -> f_3197(x, x1, x2, x3, x5, 1 + x4, x4) :|: x >= 1 + x4 && x6 < 0
f_3434(x8, x9, x10, x11, x12, x13, x14, x15) -> f_3197(x8, x9, x10, x11, x13, 1 + x12, x12) :|: x8 >= 1 + x12 && x14 > 0
f_3197(x16, x17, x18, x19, x20, x21, x22) -> f_3434(x16, x17, x18, 1 + x23, x21, x23, x24, x22) :|: x23 > -2 && x19 > 0 && x17 > 0 && x22 < -1 && x18 < -1 && x21 < 0 && x20 = 1 + x23

----------------------------------------

(163) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(164)
Obligation:
Rules:
f_3434(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, x7:0) -> f_3197(x:0, x1:0, x2:0, x3:0, x5:0, 1 + x4:0, x4:0) :|: x:0 >= 1 + x4:0 && x6:0 < 0
f_3197(x16:0, x17:0, x18:0, x19:0, sum~cons_1~x23:0, x21:0, x22:0) -> f_3434(x16:0, x17:0, x18:0, 1 + x23:0, x21:0, x23:0, x24:0, x22:0) :|: x18:0 < -1 && x21:0 < 0 && x22:0 < -1 && x17:0 > 0 && x19:0 > 0 && x23:0 > -2 && sum~cons_1~x23:0 = 1 + x23:0
f_3197(v99536:0:0, v99537:0:0, v99538:0:0, v99539:0:0, v99543:0:0, v101638:0:0, v99544:0:0) -> f_3197(v99536:0:0, v99537:0:0, v99538:0:0, v99539:0:0, v99543:0:0, 1 + v101638:0:0, v101638:0:0) :|: v99536:0:0 >= 1 + v101638:0:0
f_3434(v99868:0:0, v99869:0:0, v99870:0:0, v99875:0:0, v99876:0:0, sum~cons_1~v115698:1:0, cons_0, v99877:0:0) -> f_3434(v99868:0:0, v99869:0:0, v99870:0:0, 1 + v115698:1:0, v99876:0:0, v115698:1:0, v122873:1:0, v99877:0:0) :|: v99870:0:0 < -1 && v99876:0:0 < 0 && v99877:0:0 < -1 && v99869:0:0 > 0 && v99875:0:0 > 0 && v115698:1:0 > -2 && sum~cons_1~v115698:1:0 = 1 + v115698:1:0 && cons_0 = 0
f_3434(x8:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0) -> f_3197(x8:0, x9:0, x10:0, x11:0, x13:0, 1 + x12:0, x12:0) :|: x8:0 >= 1 + x12:0 && x14:0 > 0

----------------------------------------

(165) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_3434 ] = 2*f_3434_1 + -2*f_3434_5
[ f_3197 ] = 2*f_3197_1 + -2*f_3197_6 + 1

The following rules are decreasing:
f_3434(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, x7:0) -> f_3197(x:0, x1:0, x2:0, x3:0, x5:0, 1 + x4:0, x4:0) :|: x:0 >= 1 + x4:0 && x6:0 < 0
f_3197(x16:0, x17:0, x18:0, x19:0, sum~cons_1~x23:0, x21:0, x22:0) -> f_3434(x16:0, x17:0, x18:0, 1 + x23:0, x21:0, x23:0, x24:0, x22:0) :|: x18:0 < -1 && x21:0 < 0 && x22:0 < -1 && x17:0 > 0 && x19:0 > 0 && x23:0 > -2 && sum~cons_1~x23:0 = 1 + x23:0
f_3197(v99536:0:0, v99537:0:0, v99538:0:0, v99539:0:0, v99543:0:0, v101638:0:0, v99544:0:0) -> f_3197(v99536:0:0, v99537:0:0, v99538:0:0, v99539:0:0, v99543:0:0, 1 + v101638:0:0, v101638:0:0) :|: v99536:0:0 >= 1 + v101638:0:0
f_3434(x8:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0) -> f_3197(x8:0, x9:0, x10:0, x11:0, x13:0, 1 + x12:0, x12:0) :|: x8:0 >= 1 + x12:0 && x14:0 > 0

The following rules are bounded:
f_3197(v99536:0:0, v99537:0:0, v99538:0:0, v99539:0:0, v99543:0:0, v101638:0:0, v99544:0:0) -> f_3197(v99536:0:0, v99537:0:0, v99538:0:0, v99539:0:0, v99543:0:0, 1 + v101638:0:0, v101638:0:0) :|: v99536:0:0 >= 1 + v101638:0:0
f_3434(x8:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0) -> f_3197(x8:0, x9:0, x10:0, x11:0, x13:0, 1 + x12:0, x12:0) :|: x8:0 >= 1 + x12:0 && x14:0 > 0


----------------------------------------

(166)
Obligation:
Rules:
f_3434(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, x7:0) -> f_3197(x:0, x1:0, x2:0, x3:0, x5:0, 1 + x4:0, x4:0) :|: x:0 >= 1 + x4:0 && x6:0 < 0
f_3197(x16:0, x17:0, x18:0, x19:0, sum~cons_1~x23:0, x21:0, x22:0) -> f_3434(x16:0, x17:0, x18:0, 1 + x23:0, x21:0, x23:0, x24:0, x22:0) :|: x18:0 < -1 && x21:0 < 0 && x22:0 < -1 && x17:0 > 0 && x19:0 > 0 && x23:0 > -2 && sum~cons_1~x23:0 = 1 + x23:0
f_3434(v99868:0:0, v99869:0:0, v99870:0:0, v99875:0:0, v99876:0:0, sum~cons_1~v115698:1:0, cons_0, v99877:0:0) -> f_3434(v99868:0:0, v99869:0:0, v99870:0:0, 1 + v115698:1:0, v99876:0:0, v115698:1:0, v122873:1:0, v99877:0:0) :|: v99870:0:0 < -1 && v99876:0:0 < 0 && v99877:0:0 < -1 && v99869:0:0 > 0 && v99875:0:0 > 0 && v115698:1:0 > -2 && sum~cons_1~v115698:1:0 = 1 + v115698:1:0 && cons_0 = 0

----------------------------------------

(167) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(168)
Obligation:
Rules:
f_3434(v99868:0:0:0, v99869:0:0:0, v99870:0:0:0, v99875:0:0:0, v99876:0:0:0, sum~cons_1~v115698:1:0:0, cons_0, v99877:0:0:0) -> f_3434(v99868:0:0:0, v99869:0:0:0, v99870:0:0:0, 1 + v115698:1:0:0, v99876:0:0:0, v115698:1:0:0, v122873:1:0:0, v99877:0:0:0) :|: v99875:0:0:0 > 0 && v115698:1:0:0 > -2 && v99869:0:0:0 > 0 && v99877:0:0:0 < -1 && v99876:0:0:0 < 0 && v99870:0:0:0 < -1 && sum~cons_1~v115698:1:0:0 = 1 + v115698:1:0:0 && cons_0 = 0
f_3434(x:0:0, x1:0:0, x2:0:0, x3:0:0, x4:0:0, sum~cons_1~x23:0:0, x6:0:0, x7:0:0) -> f_3434(x:0:0, x1:0:0, x2:0:0, 1 + x23:0:0, 1 + x4:0:0, x23:0:0, x24:0:0, x4:0:0) :|: x6:0:0 < 0 && x:0:0 >= 1 + x4:0:0 && x23:0:0 > -2 && x3:0:0 > 0 && x1:0:0 > 0 && x4:0:0 < -1 && x2:0:0 < -1 && sum~cons_1~x23:0:0 = 1 + x23:0:0

----------------------------------------

(169) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_3434 ] = f_3434_6

The following rules are decreasing:
f_3434(v99868:0:0:0, v99869:0:0:0, v99870:0:0:0, v99875:0:0:0, v99876:0:0:0, sum~cons_1~v115698:1:0:0, cons_0, v99877:0:0:0) -> f_3434(v99868:0:0:0, v99869:0:0:0, v99870:0:0:0, 1 + v115698:1:0:0, v99876:0:0:0, v115698:1:0:0, v122873:1:0:0, v99877:0:0:0) :|: v99875:0:0:0 > 0 && v115698:1:0:0 > -2 && v99869:0:0:0 > 0 && v99877:0:0:0 < -1 && v99876:0:0:0 < 0 && v99870:0:0:0 < -1 && sum~cons_1~v115698:1:0:0 = 1 + v115698:1:0:0 && cons_0 = 0
f_3434(x:0:0, x1:0:0, x2:0:0, x3:0:0, x4:0:0, sum~cons_1~x23:0:0, x6:0:0, x7:0:0) -> f_3434(x:0:0, x1:0:0, x2:0:0, 1 + x23:0:0, 1 + x4:0:0, x23:0:0, x24:0:0, x4:0:0) :|: x6:0:0 < 0 && x:0:0 >= 1 + x4:0:0 && x23:0:0 > -2 && x3:0:0 > 0 && x1:0:0 > 0 && x4:0:0 < -1 && x2:0:0 < -1 && sum~cons_1~x23:0:0 = 1 + x23:0:0

The following rules are bounded:
f_3434(v99868:0:0:0, v99869:0:0:0, v99870:0:0:0, v99875:0:0:0, v99876:0:0:0, sum~cons_1~v115698:1:0:0, cons_0, v99877:0:0:0) -> f_3434(v99868:0:0:0, v99869:0:0:0, v99870:0:0:0, 1 + v115698:1:0:0, v99876:0:0:0, v115698:1:0:0, v122873:1:0:0, v99877:0:0:0) :|: v99875:0:0:0 > 0 && v115698:1:0:0 > -2 && v99869:0:0:0 > 0 && v99877:0:0:0 < -1 && v99876:0:0:0 < 0 && v99870:0:0:0 < -1 && sum~cons_1~v115698:1:0:0 = 1 + v115698:1:0:0 && cons_0 = 0
f_3434(x:0:0, x1:0:0, x2:0:0, x3:0:0, x4:0:0, sum~cons_1~x23:0:0, x6:0:0, x7:0:0) -> f_3434(x:0:0, x1:0:0, x2:0:0, 1 + x23:0:0, 1 + x4:0:0, x23:0:0, x24:0:0, x4:0:0) :|: x6:0:0 < 0 && x:0:0 >= 1 + x4:0:0 && x23:0:0 > -2 && x3:0:0 > 0 && x1:0:0 > 0 && x4:0:0 < -1 && x2:0:0 < -1 && sum~cons_1~x23:0:0 = 1 + x23:0:0


----------------------------------------

(170)
YES

----------------------------------------

(171)
Obligation:
SCC
----------------------------------------

(172) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 26 rulesP rules:
f_1340(v19124, v19125, v19126, v19127, v19128, v19129, v19130, v19131, 1, -1, 0, v19135, v19136, v19137, v19138, v19139, v19140, v19141, 3, 4) -> f_1361(v19124, v19125, v19126, v19127, v19128, v19129, v19130, v19131, 1, -1, 0, v19135, v19137, v19138, v19139, v19140, v19141, 3, 4) :|: 0 = 0
f_1361(v19124, v19125, v19126, v19127, v19128, v19129, v19130, v19131, 1, -1, 0, v19135, v19137, v19138, v19139, v19140, v19141, 3, 4) -> f_1383(v19124, v19125, v19126, v19127, v19128, v19129, v19130, v19131, 1, -1, 0, v19135, v20563, v19137, v19138, v19139, v19140, v19141, 3, 4) :|: 1 + v20563 = v19131 && 0 <= 1 + v20563
f_1383(v19124, v19125, v19126, v19127, v19128, v19129, v19130, v19131, 1, -1, 0, v19135, v20563, v19137, v19138, v19139, v19140, v19141, 3, 4) -> f_1404(v19124, v19125, v19126, v19127, v19128, v19129, v19130, v19131, 1, -1, 0, v19135, v20563, v19137, v19138, v19139, v19140, v19141, 3, 4) :|: TRUE
f_1404(v19124, v19125, v19126, v19127, v19128, v19129, v19130, v19131, 1, -1, 0, v19135, v20563, v19137, v19138, v19139, v19140, v19141, 3, 4) -> f_1423(v19124, v19125, v19126, v19127, v19128, v19129, v19130, v19131, 1, -1, 0, v19135, v20563, v19137, v19138, v19139, v19140, v19141, 3, 4) :|: TRUE
f_1423(v19124, v19125, v19126, v19127, v19128, v19129, v19130, v19131, 1, -1, 0, v19135, v20563, v19137, v19138, v19139, v19140, v19141, 3, 4) -> f_1445(v19124, v19125, v19126, v19127, v19128, v19129, v19130, v19131, 1, -1, 0, v19135, v20563, v19138, v19139, v19140, v19141, 3, 4) :|: 0 = 0
f_1445(v19124, v19125, v19126, v19127, v19128, v19129, v19130, v19131, 1, -1, 0, v19135, v20563, v19138, v19139, v19140, v19141, 3, 4) -> f_1467(v19124, v19125, v19126, v19127, v19128, v19129, v19130, v19131, 1, -1, 0, v19135, v20563, v19138, v19139, v19140, v19141, 3, 4) :|: 0 = 0
f_1467(v19124, v19125, v19126, v19127, v19128, v19129, v19130, v19131, 1, -1, 0, v19135, v20563, v19138, v19139, v19140, v19141, 3, 4) -> f_1492(v19124, v19125, v19126, v19127, v19128, v19129, v19130, v19131, 1, -1, 0, v19135, v20563, v19138, v19139, v19140, v19141, 3, 4) :|: 0 = 0
f_1492(v19124, v19125, v19126, v19127, v19128, v19129, v19130, v19131, 1, -1, 0, v19135, v20563, v19138, v19139, v19140, v19141, 3, 4) -> f_1515(v19124, v19125, v19126, v19127, v19128, v19129, v19130, v19131, 1, -1, 0, v19135, v20563, v19138, v19139, v19140, v19141, 3, 4) :|: TRUE
f_1515(v19124, v19125, v19126, v19127, v19128, v19129, v19130, v19131, 1, -1, 0, v19135, v20563, v19138, v19139, v19140, v19141, 3, 4) -> f_1538(v19124, v19125, v19126, v19127, v19128, v19129, v19130, v19131, 1, -1, 0, v19135, v20563, v27820, v19138, v19139, v19140, v19141, 3, 4) :|: TRUE
f_1538(v19124, v19125, v19126, v19127, v19128, v19129, v19130, v19131, 1, -1, 0, v19135, v20563, v27820, v19138, v19139, v19140, v19141, 3, 4) -> f_1558(v19124, v19125, v19126, v19127, v19128, v19129, v19130, v19131, 1, -1, 0, v19135, v20563, v19138, v19139, v19140, v19141, 3, 4) :|: v27820 = 0
f_1558(v19124, v19125, v19126, v19127, v19128, v19129, v19130, v19131, 1, -1, 0, v19135, v20563, v19138, v19139, v19140, v19141, 3, 4) -> f_1577(v19124, v19125, v19126, v19127, v19128, v19129, v19130, v19131, 1, -1, 0, v19135, v20563, v19138, v19139, v19140, v19141, 3, 4) :|: 0 = 0
f_1577(v19124, v19125, v19126, v19127, v19128, v19129, v19130, v19131, 1, -1, 0, v19135, v20563, v19138, v19139, v19140, v19141, 3, 4) -> f_1594(v19124, v19125, v19126, v19127, v19128, v19129, v19130, v19131, 1, -1, 0, v19135, v20563, v19138, v19139, v19140, v19141, 3, 4) :|: 0 = 0
f_1594(v19124, v19125, v19126, v19127, v19128, v19129, v19130, v19131, 1, -1, 0, v19135, v20563, v19138, v19139, v19140, v19141, 3, 4) -> f_1595(v19124, v19125, v19126, v19127, v19128, v19129, v19130, v19131, 1, -1, 0, v19135, v20563, v19138, v19139, v19140, v19141, 3, 4) :|: TRUE
f_1595(v29512, v29513, v29514, v29515, v29516, v29517, v29518, v29519, 1, -1, 0, v29523, v29524, v29525, v29526, v29527, v29528, 3, 4) -> f_1612(v29512, v29513, v29514, v29515, v29516, v29517, v29518, v29519, 1, -1, 0, v29523, v29524, v29525, v29526, v29527, v29528, 3, 4) :|: TRUE
f_1612(v29512, v29513, v29514, v29515, v29516, v29517, v29518, v29519, 1, -1, 0, v29523, v29524, v29525, v29526, v29527, v29528, 3, 4) -> f_1626(v29512, v29513, v29514, v29515, v29516, v29517, v29518, v29519, 1, -1, 0, v29523, v29524, v29525, v29526, v29527, v29528, 3, 4) :|: TRUE
f_1626(v29512, v29513, v29514, v29515, v29516, v29517, v29518, v29519, 1, -1, 0, v29523, v29524, v29525, v29526, v29527, v29528, 3, 4) -> f_1627(v29512, v29513, v29514, v29515, v29516, v29517, v29518, v29519, 1, -1, 0, v29523, v29524, v29525, v29526, v29527, v29528, 3, 4) :|: TRUE
f_1627(v30537, v30538, v30539, v30540, v30541, v30542, v30543, v30544, 1, -1, 0, v30548, v30549, v30550, v30551, v30552, v30553, 3, 4) -> f_1643(v30537, v30538, v30539, v30540, v30541, v30542, v30543, v30549, 1, -1, 0, v30548, v30544, v30550, v30551, v30552, v30553, 3, 4) :|: 0 = 0
f_1643(v30537, v30538, v30539, v30540, v30541, v30542, v30543, v30549, 1, -1, 0, v30548, v30544, v30550, v30551, v30552, v30553, 3, 4) -> f_1663(v30537, v30538, v30539, v30540, v30541, v30542, v30543, v30549, 1, -1, 0, v30548, v30544, v30550, v30551, v30552, v30553, 3, 4) :|: 0 <= v30549 && 1 <= v30544 && 1 <= v30542
f_1663(v30537, v30538, v30539, v30540, v30541, v30542, v30543, v30549, 1, -1, 0, v30548, v30544, v30550, v30551, v30552, v30553, 3, 4) -> f_1687(v30537, v30538, v30539, v30540, v30541, v30542, v30543, v30549, 1, -1, 0, v30548, v30544, v30550, v30551, v30552, v30553, 3, 4) :|: 0 = 0
f_1687(v30537, v30538, v30539, v30540, v30541, v30542, v30543, v30549, 1, -1, 0, v30548, v30544, v30550, v30551, v30552, v30553, 3, 4) -> f_1709(v30537, v30538, v30539, v30540, v30541, v30542, v30543, v30549, 1, -1, 0, v30548, v30544, v30550, v30551, v30552, v30553, 3, 4) :|: TRUE
f_1709(v30537, v30538, v30539, v30540, v30541, v30542, v30543, v30549, 1, -1, 0, v30548, v30544, v30550, v30551, v30552, v30553, 3, 4) -> f_1729(v30537, v30538, v30539, v30540, v30541, v30542, v30543, v30549, 1, -1, 0, v30548, v30544, v30550, v30551, v30552, v30553, 3, 4) :|: TRUE
f_1729(v30537, v30538, v30539, v30540, v30541, v30542, v30543, v30549, 1, -1, 0, v30548, v30544, v30550, v30551, v30552, v30553, 3, 4) -> f_1748(v30537, v30538, v30539, v30540, v30541, v30542, v30543, v30549, 1, -1, 0, v30548, v30544, v30550, v30551, v30552, v30553, 3, 4) :|: 0 = 0
f_1748(v30537, v30538, v30539, v30540, v30541, v30542, v30543, v30549, 1, -1, 0, v30548, v30544, v30550, v30551, v30552, v30553, 3, 4) -> f_1769(v30537, v30538, v30539, v30540, v30541, v30542, v30543, v30549, 1, -1, 0, v30548, v30544, v30550, v30551, v30552, v30553, 3, 4) :|: 0 = 0
f_1769(v30537, v30538, v30539, v30540, v30541, v30542, v30543, v30549, 1, -1, 0, v30548, v30544, v30550, v30551, v30552, v30553, 3, 4) -> f_1790(v30537, v30538, v30539, v30540, v30541, v30542, v30543, v30549, 1, -1, 0, v30548, v30544, v30550, v30551, v30552, v30553, 3, 4) :|: 0 = 0
f_1790(v30537, v30538, v30539, v30540, v30541, v30542, v30543, v30549, 1, -1, 0, v30548, v30544, v30550, v30551, v30552, v30553, 3, 4) -> f_1321(v30537, v30538, v30539, v30540, v30541, v30542, v30543, v30549, 1, -1, 0, v30548, v30544, -1, v30550, v30551, v30552, v30553, 3, 4) :|: TRUE
f_1321(v19124, v19125, v19126, v19127, v19128, v19129, v19130, v19131, 1, -1, 0, v19135, v19136, v19137, v19138, v19139, v19140, v19141, 3, 4) -> f_1340(v19124, v19125, v19126, v19127, v19128, v19129, v19130, v19131, 1, -1, 0, v19135, v19136, v19137, v19138, v19139, v19140, v19141, 3, 4) :|: TRUE
Combined rules. Obtained 1 rulesP rules:
f_1340(v19124:0, v19125:0, v19126:0, v19127:0, v19128:0, v19129:0, v19130:0, 1 + v20563:0, 1, -1, 0, v19135:0, v19136:0, v19137:0, v19138:0, v19139:0, v19140:0, v19141:0, 3, 4) -> f_1340(v19124:0, v19125:0, v19126:0, v19127:0, v19128:0, v19129:0, v19130:0, v20563:0, 1, -1, 0, v19135:0, 1 + v20563:0, -1, v19138:0, v19139:0, v19140:0, v19141:0, 3, 4) :|: v20563:0 > -1 && v19129:0 > 0
Filtered unneeded arguments:
   f_1340(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20) -> f_1340(x6, x8)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1340(v19129:0, sum~cons_1~v20563:0) -> f_1340(v19129:0, v20563:0) :|: v20563:0 > -1 && v19129:0 > 0 && sum~cons_1~v20563:0 = 1 + v20563:0

----------------------------------------

(173)
Obligation:
Rules:
f_1340(v19129:0, sum~cons_1~v20563:0) -> f_1340(v19129:0, v20563:0) :|: v20563:0 > -1 && v19129:0 > 0 && sum~cons_1~v20563:0 = 1 + v20563:0

----------------------------------------

(174) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(175)
Obligation:
Rules:
f_1340(v19129:0:0, sum~cons_1~v20563:0:0) -> f_1340(v19129:0:0, v20563:0:0) :|: v20563:0:0 > -1 && v19129:0:0 > 0 && sum~cons_1~v20563:0:0 = 1 + v20563:0:0

----------------------------------------

(176) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1340 ] = f_1340_2

The following rules are decreasing:
f_1340(v19129:0:0, sum~cons_1~v20563:0:0) -> f_1340(v19129:0:0, v20563:0:0) :|: v20563:0:0 > -1 && v19129:0:0 > 0 && sum~cons_1~v20563:0:0 = 1 + v20563:0:0

The following rules are bounded:
f_1340(v19129:0:0, sum~cons_1~v20563:0:0) -> f_1340(v19129:0:0, v20563:0:0) :|: v20563:0:0 > -1 && v19129:0:0 > 0 && sum~cons_1~v20563:0:0 = 1 + v20563:0:0


----------------------------------------

(177)
YES

----------------------------------------

(178)
Obligation:
SCC
----------------------------------------

(179) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 21 rulesP rules:
f_1841(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v31557, 1, -1, 0, v31561, v35267, v31564, v31565, v31566, v31567, 3, 2, 4) -> f_1854(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v31557, 1, -1, 0, v31561, v35267, v31564, v31565, v31566, v31567, 3, 2, 4) :|: 0 = 0
f_1854(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v31557, 1, -1, 0, v31561, v35267, v31564, v31565, v31566, v31567, 3, 2, 4) -> f_1865(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v31557, 1, -1, 0, v31561, v35267, v31564, v31565, v31566, v31567, 3, 2, 4) :|: 0 = 0
f_1865(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v31557, 1, -1, 0, v31561, v35267, v31564, v31565, v31566, v31567, 3, 2, 4) -> f_1877(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v31557, 1, -1, 0, v31561, v35267, v31564, v31565, v31566, v31567, 3, 2, 4) :|: TRUE
f_1877(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v31557, 1, -1, 0, v31561, v35267, v31564, v31565, v31566, v31567, 3, 2, 4) -> f_1892(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v31557, 1, -1, 0, v31561, v35267, v31564, v31565, v31566, v31567, 3, 2, 4) :|: TRUE
f_1892(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v31557, 1, -1, 0, v31561, v35267, v31564, v31565, v31566, v31567, 3, 2, 4) -> f_1909(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v35267, 1, -1, 0, v31561, v31557, v31564, v31565, v31566, v31567, 3, 2, 4) :|: 0 = 0
f_1909(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v35267, 1, -1, 0, v31561, v31557, v31564, v31565, v31566, v31567, 3, 2, 4) -> f_1927(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v35267, 1, -1, 0, v31561, v31557, v31564, v31565, v31566, v31567, 3, 2, 4) :|: 0 <= v35267 && 1 <= v31557 && 2 <= v31555
f_1927(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v35267, 1, -1, 0, v31561, v31557, v31564, v31565, v31566, v31567, 3, 2, 4) -> f_1945(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v35267, 1, -1, 0, v31561, v31557, v31564, v31565, v31566, v31567, 3, 2, 4) :|: 0 = 0
f_1945(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v35267, 1, -1, 0, v31561, v31557, v31564, v31565, v31566, v31567, 3, 2, 4) -> f_1966(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v35267, 1, -1, 0, v31561, v31557, v31564, v31565, v31566, v31567, 3, 2, 4) :|: TRUE
f_1966(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v35267, 1, -1, 0, v31561, v31557, v31564, v31565, v31566, v31567, 3, 2, 4) -> f_1987(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v35267, 1, -1, 0, v31561, v31557, v31564, v31565, v31566, v31567, 3, 2, 4) :|: TRUE
f_1987(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v35267, 1, -1, 0, v31561, v31557, v31564, v31565, v31566, v31567, 3, 2, 4) -> f_2009(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v35267, 1, -1, 0, v31561, v31557, v31564, v31565, v31566, v31567, 3, 2, 4) :|: 0 = 0
f_2009(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v35267, 1, -1, 0, v31561, v31557, v31564, v31565, v31566, v31567, 3, 2, 4) -> f_2030(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v35267, 1, -1, 0, v31561, v31557, v31564, v31565, v31566, v31567, 3, 2, 4) :|: 0 = 0
f_2030(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v35267, 1, -1, 0, v31561, v31557, v31564, v31565, v31566, v31567, 3, 2, 4) -> f_2053(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v35267, 1, -1, 0, v31561, v31557, v31564, v31565, v31566, v31567, 3, 2, 4) :|: 0 = 0
f_2053(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v35267, 1, -1, 0, v31561, v31557, v31564, v31565, v31566, v31567, 3, 2, 4) -> f_1683(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v35267, 1, -1, 0, v31561, v31557, -1, v31564, v31565, v31566, v31567, 3, 4) :|: TRUE
f_1683(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v31557, 1, -1, 0, v31561, v31562, v31563, v31564, v31565, v31566, v31567, 3, 4) -> f_1707(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v31557, 1, -1, 0, v31561, v31562, v31563, v31564, v31565, v31566, v31567, 3, 4) :|: TRUE
f_1707(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v31557, 1, -1, 0, v31561, v31562, v31563, v31564, v31565, v31566, v31567, 3, 4) -> f_1727(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v31557, 1, -1, 0, v31561, v31563, v31564, v31565, v31566, v31567, 3, 4) :|: 0 = 0
f_1727(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v31557, 1, -1, 0, v31561, v31563, v31564, v31565, v31566, v31567, 3, 4) -> f_1746(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v31557, 1, -1, 0, v31561, v35267, v31563, v31564, v31565, v31566, v31567, 3, 4) :|: 1 + v35267 = v31557 && 0 <= 1 + v35267
f_1746(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v31557, 1, -1, 0, v31561, v35267, v31563, v31564, v31565, v31566, v31567, 3, 4) -> f_1766(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v31557, 1, -1, 0, v31561, v35267, v31563, v31564, v31565, v31566, v31567, 3, 4) :|: TRUE
f_1766(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v31557, 1, -1, 0, v31561, v35267, v31563, v31564, v31565, v31566, v31567, 3, 4) -> f_1787(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v31557, 1, -1, 0, v31561, v35267, v31563, v31564, v31565, v31566, v31567, 3, 4) :|: TRUE
f_1787(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v31557, 1, -1, 0, v31561, v35267, v31563, v31564, v31565, v31566, v31567, 3, 4) -> f_1809(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v31557, 1, -1, 0, v31561, v35267, v31564, v31565, v31566, v31567, 3, 4) :|: 0 = 0
f_1809(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v31557, 1, -1, 0, v31561, v35267, v31564, v31565, v31566, v31567, 3, 4) -> f_1825(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v31557, 1, -1, 0, v31561, v35267, v31564, v31565, v31566, v31567, 3, 4) :|: 0 = 0
f_1825(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v31557, 1, -1, 0, v31561, v35267, v31564, v31565, v31566, v31567, 3, 4) -> f_1841(v31550, v31551, v31552, v31553, v31554, v31555, v31556, v31557, 1, -1, 0, v31561, v35267, v31564, v31565, v31566, v31567, 3, 2, 4) :|: 1 + v31554 < 0 && 2 + v31554 <= 0
Combined rules. Obtained 1 rulesP rules:
f_1841(v31550:0, v31551:0, v31552:0, v31553:0, v31554:0, v31555:0, v31556:0, v31557:0, 1, -1, 0, v31561:0, 1 + v35267:1, v31564:0, v31565:0, v31566:0, v31567:0, 3, 2, 4) -> f_1841(v31550:0, v31551:0, v31552:0, v31553:0, v31554:0, v31555:0, v31556:0, 1 + v35267:1, 1, -1, 0, v31561:0, v35267:1, v31564:0, v31565:0, v31566:0, v31567:0, 3, 2, 4) :|: v31557:0 > 0 && v35267:1 > -2 && v31555:0 > 1 && v31554:0 < -1
Filtered unneeded arguments:
   f_1841(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20) -> f_1841(x5, x6, x8, x13)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1841(v31554:0, v31555:0, v31557:0, sum~cons_1~v35267:1) -> f_1841(v31554:0, v31555:0, 1 + v35267:1, v35267:1) :|: v35267:1 > -2 && v31557:0 > 0 && v31554:0 < -1 && v31555:0 > 1 && sum~cons_1~v35267:1 = 1 + v35267:1

----------------------------------------

(180)
Obligation:
Rules:
f_1841(v31554:0, v31555:0, v31557:0, sum~cons_1~v35267:1) -> f_1841(v31554:0, v31555:0, 1 + v35267:1, v35267:1) :|: v35267:1 > -2 && v31557:0 > 0 && v31554:0 < -1 && v31555:0 > 1 && sum~cons_1~v35267:1 = 1 + v35267:1

----------------------------------------

(181) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(182)
Obligation:
Rules:
f_1841(v31554:0:0, v31555:0:0, v31557:0:0, sum~cons_1~v35267:1:0) -> f_1841(v31554:0:0, v31555:0:0, 1 + v35267:1:0, v35267:1:0) :|: v31554:0:0 < -1 && v31555:0:0 > 1 && v31557:0:0 > 0 && v35267:1:0 > -2 && sum~cons_1~v35267:1:0 = 1 + v35267:1:0

----------------------------------------

(183) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1841 ] = f_1841_4

The following rules are decreasing:
f_1841(v31554:0:0, v31555:0:0, v31557:0:0, sum~cons_1~v35267:1:0) -> f_1841(v31554:0:0, v31555:0:0, 1 + v35267:1:0, v35267:1:0) :|: v31554:0:0 < -1 && v31555:0:0 > 1 && v31557:0:0 > 0 && v35267:1:0 > -2 && sum~cons_1~v35267:1:0 = 1 + v35267:1:0

The following rules are bounded:
f_1841(v31554:0:0, v31555:0:0, v31557:0:0, sum~cons_1~v35267:1:0) -> f_1841(v31554:0:0, v31555:0:0, 1 + v35267:1:0, v35267:1:0) :|: v31554:0:0 < -1 && v31555:0:0 > 1 && v31557:0:0 > 0 && v35267:1:0 > -2 && sum~cons_1~v35267:1:0 = 1 + v35267:1:0


----------------------------------------

(184)
YES

----------------------------------------

(185)
Obligation:
SCC
----------------------------------------

(186) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 51 rulesP rules:
f_1145(v14239, v14240, v14241, v14242, v14243, v14244, v14245, v14246, 1, v14248, v14249, v14250, v14251, v14252, 0, v14254, v14255, v14256, v14257, 3, 4) -> f_1166(v14239, v14240, v14241, v14242, v14243, v14244, v14245, v14246, 1, v14248, v14249, v14251, v14252, 0, v14254, v14255, v14256, v14257, 3, 4) :|: 0 = 0
f_1166(v14239, v14240, v14241, v14242, v14243, v14244, v14245, v14246, 1, v14248, v14249, v14251, v14252, 0, v14254, v14255, v14256, v14257, 3, 4) -> f_1191(v14239, v14240, v14241, v14242, v14243, v14244, v14245, v14246, 1, v14248, v14249, v16206, v14251, v14252, 0, v14254, v14255, v14256, v14257, 3, 4) :|: 1 + v16206 = v14248 && 0 <= 1 + v16206
f_1191(v14239, v14240, v14241, v14242, v14243, v14244, v14245, v14246, 1, v14248, v14249, v16206, v14251, v14252, 0, v14254, v14255, v14256, v14257, 3, 4) -> f_1215(v14239, v14240, v14241, v14242, v14243, v14244, v14245, v14246, 1, v14248, v14249, v16206, v14251, v14252, 0, v14254, v14255, v14256, v14257, 3, 4) :|: TRUE
f_1215(v14239, v14240, v14241, v14242, v14243, v14244, v14245, v14246, 1, v14248, v14249, v16206, v14251, v14252, 0, v14254, v14255, v14256, v14257, 3, 4) -> f_1236(v14239, v14240, v14241, v14242, v14243, v14244, v14245, v14246, 1, v14248, v14249, v16206, v14251, v14252, 0, v14254, v14255, v14256, v14257, 3, 4) :|: TRUE
f_1236(v14239, v14240, v14241, v14242, v14243, v14244, v14245, v14246, 1, v14248, v14249, v16206, v14251, v14252, 0, v14254, v14255, v14256, v14257, 3, 4) -> f_1545(v14239, v14240, v14241, v14242, v14243, v14244, v14245, v14246, 1, v14248, v14249, v16206, v14251, v14252, 0, v14254, v14255, v14256, v14257, 3, 4) :|: TRUE
f_1545(v28187, v28188, v28189, v28190, v28191, v28192, v28193, v28194, 1, v28196, v28197, v28198, v28199, v28200, 0, v28202, v28203, v28204, v28205, 3, 4) -> f_1562(v28187, v28188, v28189, v28190, v28191, v28192, v28193, v28194, 1, v28198, v28197, v28196, v28199, v28200, 0, v28202, v28203, v28204, v28205, 3, 4) :|: 0 = 0
f_1562(v28187, v28188, v28189, v28190, v28191, v28192, v28193, v28194, 1, v28198, v28197, v28196, v28199, v28200, 0, v28202, v28203, v28204, v28205, 3, 4) -> f_1582(v28187, v28188, v28189, v28190, v28191, v28192, v28193, v28194, 1, v28198, v28197, v28196, v28199, v28200, 0, v28202, v28203, v28204, v28205, 3, 4) :|: 0 <= v28198 && 1 <= v28196 && 1 <= v28191 && 1 <= v28193
f_1582(v28187, v28188, v28189, v28190, v28191, v28192, v28193, v28194, 1, v28198, v28197, v28196, v28199, v28200, 0, v28202, v28203, v28204, v28205, 3, 4) -> f_1601(v28187, v28188, v28189, v28190, v28191, v28192, v28193, v28194, 1, v28198, v28197, v28196, v28199, v28200, 0, v28202, v28203, v28204, v28205, 3, 4) :|: 0 = 0
f_1601(v28187, v28188, v28189, v28190, v28191, v28192, v28193, v28194, 1, v28198, v28197, v28196, v28199, v28200, 0, v28202, v28203, v28204, v28205, 3, 4) -> f_1618(v28187, v28188, v28189, v28190, v28191, v28192, v28193, v28194, 1, v28198, v28197, v28196, v28199, v28200, 0, v28202, v28203, v28204, v28205, 3, 4) :|: TRUE
f_1618(v28187, v28188, v28189, v28190, v28191, v28192, v28193, v28194, 1, v28198, v28197, v28196, v28199, v28200, 0, v28202, v28203, v28204, v28205, 3, 4) -> f_1633(v28187, v28188, v28189, v28190, v28191, v28192, v28193, v28194, 1, v28198, v30881, v28196, v28199, v28200, 0, v28202, v28203, v28204, v28205, 3, 4) :|: TRUE
f_1633(v28187, v28188, v28189, v28190, v28191, v28192, v28193, v28194, 1, v28198, v30881, v28196, v28199, v28200, 0, v28202, v28203, v28204, v28205, 3, 4) -> f_1651(v28187, v28188, v28189, v28190, v28191, v28192, v28193, v28194, 1, v28198, v30881, v28196, v28199, v28200, 0, v28202, v28203, v28204, v28205, 3, 4) :|: v30881 != 0
f_1633(v28187, v28188, v28189, v28190, v28191, v28192, v28193, v28194, 1, v28198, v30881, v28196, v28199, v28200, 0, v28202, v28203, v28204, v28205, 3, 4) -> f_1652(v28187, v28188, v28189, v28190, v28191, v28192, v28193, v28194, 1, v28198, 0, v28196, v28199, v28200, v28202, v28203, v28204, v28205, 3, 4) :|: v30881 = 0
f_1651(v28187, v28188, v28189, v28190, v28191, v28192, v28193, v28194, 1, v28198, v30881, v28196, v28199, v28200, 0, v28202, v28203, v28204, v28205, 3, 4) -> f_1673(v28187, v28188, v28189, v28190, v28191, v28192, v28193, v28194, 1, v28198, v30881, v28196, v28199, v28200, 0, v28202, v28203, v28204, v28205, 3, 4) :|: 0 = 0
f_1673(v28187, v28188, v28189, v28190, v28191, v28192, v28193, v28194, 1, v28198, v30881, v28196, v28199, v28200, 0, v28202, v28203, v28204, v28205, 3, 4) -> f_1698(v28187, v28188, v28189, v28190, v28191, v28192, v28193, v28194, 1, v28198, v30881, v28196, v28199, v28200, 0, v28202, v28203, v28204, v28205, 3, 4) :|: 0 = 0
f_1698(v28187, v28188, v28189, v28190, v28191, v28192, v28193, v28194, 1, v28198, v30881, v28196, v28199, v28200, 0, v28202, v28203, v28204, v28205, 3, 4) -> f_1121(v28187, v28188, v28189, v28190, v28191, v28192, v28193, v28194, 1, v28198, v30881, v28196, v28199, v28200, 0, v28202, v28203, v28204, v28205, 3, 4) :|: TRUE
f_1121(v14239, v14240, v14241, v14242, v14243, v14244, v14245, v14246, 1, v14248, v14249, v14250, v14251, v14252, 0, v14254, v14255, v14256, v14257, 3, 4) -> f_1145(v14239, v14240, v14241, v14242, v14243, v14244, v14245, v14246, 1, v14248, v14249, v14250, v14251, v14252, 0, v14254, v14255, v14256, v14257, 3, 4) :|: TRUE
f_1652(v28187, v28188, v28189, v28190, v28191, v28192, v28193, v28194, 1, v28198, 0, v28196, v28199, v28200, v28202, v28203, v28204, v28205, 3, 4) -> f_1674(v28187, v28188, v28189, v28190, v28191, v28192, v28193, v28194, 1, v28198, 0, v28196, v28199, v28200, v28202, v28203, v28204, v28205, 3, 4) :|: 0 = 0
f_1674(v28187, v28188, v28189, v28190, v28191, v28192, v28193, v28194, 1, v28198, 0, v28196, v28199, v28200, v28202, v28203, v28204, v28205, 3, 4) -> f_1699(v28187, v28188, v28189, v28190, v28191, v28192, v28193, v28194, 1, v28198, 0, v28196, v28199, v28200, v28202, v28203, v28204, v28205, 3, 4) :|: 0 = 0
f_1699(v28187, v28188, v28189, v28190, v28191, v28192, v28193, v28194, 1, v28198, 0, v28196, v28199, v28200, v28202, v28203, v28204, v28205, 3, 4) -> f_1123(v28187, v28188, v28189, v28190, v28191, v28192, v28193, v28194, 1, v28198, 0, v28196, v28199, v28200, v28202, v28203, v28204, v28205, 3, 4) :|: TRUE
f_1123(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v14419, 1, v14421, 0, v14423, v14424, v14425, v14426, v14427, v14428, v14429, 3, 4) -> f_1146(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v14419, 1, v14421, 0, v14423, v14424, v14425, v14426, v14427, v14428, v14429, 3, 4) :|: TRUE
f_1146(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v14419, 1, v14421, 0, v14423, v14424, v14425, v14426, v14427, v14428, v14429, 3, 4) -> f_1167(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v14419, 1, v14421, 0, v14423, v14425, v14426, v14427, v14428, v14429, 3, 4) :|: 0 = 0
f_1167(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v14419, 1, v14421, 0, v14423, v14425, v14426, v14427, v14428, v14429, 3, 4) -> f_1192(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v14419, 1, v14421, 0, v14423, v16207, v14425, v14426, v14427, v14428, v14429, 3, 4) :|: 1 + v16207 = v14419 && 0 <= 1 + v16207
f_1192(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v14419, 1, v14421, 0, v14423, v16207, v14425, v14426, v14427, v14428, v14429, 3, 4) -> f_1216(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v14419, 1, v14421, 0, v14423, v16207, v14425, v14426, v14427, v14428, v14429, 3, 4) :|: TRUE
f_1216(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v14419, 1, v14421, 0, v14423, v16207, v14425, v14426, v14427, v14428, v14429, 3, 4) -> f_1237(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v14419, 1, v14421, 0, v14423, v16207, v14425, v14426, v14427, v14428, v14429, 3, 4) :|: TRUE
f_1237(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v14419, 1, v14421, 0, v14423, v16207, v14425, v14426, v14427, v14428, v14429, 3, 4) -> f_1256(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v14419, 1, v14421, 0, v14423, v16207, v14426, v14427, v14428, v14429, 3, 4) :|: 0 = 0
f_1256(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v14419, 1, v14421, 0, v14423, v16207, v14426, v14427, v14428, v14429, 3, 4) -> f_1280(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v14419, 1, v14421, 0, v14423, v16207, v14426, v14427, v14428, v14429, 3, 4) :|: 0 = 0
f_1280(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v14419, 1, v14421, 0, v14423, v16207, v14426, v14427, v14428, v14429, 3, 4) -> f_1301(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v14419, 1, v14421, 0, v14423, v16207, v14426, v14427, v14428, v14429, 3, 4) :|: 0 = 0
f_1301(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v14419, 1, v14421, 0, v14423, v16207, v14426, v14427, v14428, v14429, 3, 4) -> f_1322(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v14419, 1, v14421, 0, v14423, v16207, v14426, v14427, v14428, v14429, 3, 4) :|: TRUE
f_1322(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v14419, 1, v14421, 0, v14423, v16207, v14426, v14427, v14428, v14429, 3, 4) -> f_1341(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v14419, 1, v14421, 0, v14423, v16207, v19567, v14426, v14427, v14428, v14429, 3, 4) :|: TRUE
f_1341(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v14419, 1, v14421, 0, v14423, v16207, v19567, v14426, v14427, v14428, v14429, 3, 4) -> f_1363(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v14419, 1, v14421, 0, v14423, v16207, v14426, v14427, v14428, v14429, 3, 4) :|: v19567 = 0
f_1363(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v14419, 1, v14421, 0, v14423, v16207, v14426, v14427, v14428, v14429, 3, 4) -> f_1385(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v14419, 1, v14421, 0, v14423, v16207, v14426, v14427, v14428, v14429, 3, 4) :|: 0 = 0
f_1385(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v14419, 1, v14421, 0, v14423, v16207, v14426, v14427, v14428, v14429, 3, 4) -> f_1406(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v14419, 1, v14421, 0, v14423, v16207, v14426, v14427, v14428, v14429, 3, 4) :|: 0 = 0
f_1406(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v14419, 1, v14421, 0, v14423, v16207, v14426, v14427, v14428, v14429, 3, 4) -> f_1425(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v14419, 1, v14421, 0, v14423, v16207, v14426, v14427, v14428, v14429, 3, 4) :|: TRUE
f_1425(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v14419, 1, v14421, 0, v14423, v16207, v14426, v14427, v14428, v14429, 3, 4) -> f_1447(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v14419, 1, v14421, 0, v14423, v16207, v14426, v14427, v14428, v14429, 3, 4) :|: TRUE
f_1447(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v14419, 1, v14421, 0, v14423, v16207, v14426, v14427, v14428, v14429, 3, 4) -> f_1469(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v16207, 1, v14421, 0, v14423, v14419, v14426, v14427, v14428, v14429, 3, 4) :|: 0 = 0
f_1469(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v16207, 1, v14421, 0, v14423, v14419, v14426, v14427, v14428, v14429, 3, 4) -> f_1494(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v16207, 1, v14421, 0, v14423, v14419, v14426, v14427, v14428, v14429, 3, 2, 4) :|: 0 <= v16207 && 1 <= v14419 && 2 <= v14417
f_1494(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v16207, 1, v14421, 0, v14423, v14419, v14426, v14427, v14428, v14429, 3, 2, 4) -> f_1518(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v16207, 1, v14421, 0, v14423, v14419, v14426, v14427, v14428, v14429, 3, 2, 4) :|: 0 = 0
f_1518(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v16207, 1, v14421, 0, v14423, v14419, v14426, v14427, v14428, v14429, 3, 2, 4) -> f_1540(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v16207, 1, v14421, 0, v14423, v14419, v14426, v14427, v14428, v14429, 3, 2, 4) :|: TRUE
f_1540(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v16207, 1, v14421, 0, v14423, v14419, v14426, v14427, v14428, v14429, 3, 2, 4) -> f_1560(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v16207, 1, v14421, 0, v14423, v14419, v14426, v14427, v14428, v14429, 3, 2, 4) :|: TRUE
f_1560(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v16207, 1, v14421, 0, v14423, v14419, v14426, v14427, v14428, v14429, 3, 2, 4) -> f_1580(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v16207, 1, v14421, 0, v14423, v14419, v14426, v14427, v14428, v14429, 3, 2, 4) :|: 0 = 0
f_1580(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v16207, 1, v14421, 0, v14423, v14419, v14426, v14427, v14428, v14429, 3, 2, 4) -> f_1598(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v16207, 1, v14421, 0, v14423, v14419, v14426, v14427, v14428, v14429, 3, 2, 4) :|: 0 = 0
f_1598(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v16207, 1, v14421, 0, v14423, v14419, v14426, v14427, v14428, v14429, 3, 2, 4) -> f_1615(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v16207, 1, v14421, 0, v14423, v14419, v14426, v14427, v14428, v14429, 3, 2, 4) :|: TRUE
f_1615(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v16207, 1, v14421, 0, v14423, v14419, v14426, v14427, v14428, v14429, 3, 2, 4) -> f_1630(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v16207, 1, v14421, v30708, 0, v14423, v14419, v14426, v14427, v14428, v14429, 3, 2, 4) :|: TRUE
f_1630(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v16207, 1, v14421, v30708, 0, v14423, v14419, v14426, v14427, v14428, v14429, 3, 2, 4) -> f_1647(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v16207, 1, v14421, v30708, 0, v14423, v14419, v14426, v14427, v14428, v14429, 3, 2, 4) :|: v30708 != 0
f_1630(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v16207, 1, v14421, v30708, 0, v14423, v14419, v14426, v14427, v14428, v14429, 3, 2, 4) -> f_1648(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v16207, 1, v14421, 0, v14423, v14419, v14426, v14427, v14428, v14429, 3, 2, 4) :|: v30708 = 0
f_1647(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v16207, 1, v14421, v30708, 0, v14423, v14419, v14426, v14427, v14428, v14429, 3, 2, 4) -> f_1668(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v16207, 1, v14421, v30708, 0, v14423, v14419, v14426, v14427, v14428, v14429, 3, 2, 4) :|: 0 = 0
f_1668(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v16207, 1, v14421, v30708, 0, v14423, v14419, v14426, v14427, v14428, v14429, 3, 2, 4) -> f_1693(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v16207, 1, v14421, v30708, v14423, v14419, 0, v14426, v14427, v14428, v14429, 3, 2, 4) :|: 0 = 0
f_1693(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v16207, 1, v14421, v30708, v14423, v14419, 0, v14426, v14427, v14428, v14429, 3, 2, 4) -> f_1121(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v16207, 1, v14421, v30708, v14423, v14419, v14421, 0, v14426, v14427, v14428, v14429, 3, 4) :|: TRUE
f_1648(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v16207, 1, v14421, 0, v14423, v14419, v14426, v14427, v14428, v14429, 3, 2, 4) -> f_1669(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v16207, 1, v14421, 0, v14423, v14419, v14426, v14427, v14428, v14429, 3, 2, 4) :|: 0 = 0
f_1669(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v16207, 1, v14421, 0, v14423, v14419, v14426, v14427, v14428, v14429, 3, 2, 4) -> f_1694(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v16207, 1, v14421, 0, v14423, v14419, v14426, v14427, v14428, v14429, 3, 2, 4) :|: 0 = 0
f_1694(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v16207, 1, v14421, 0, v14423, v14419, v14426, v14427, v14428, v14429, 3, 2, 4) -> f_1123(v14412, v14413, v14414, v14415, v14416, v14417, v14418, v16207, 1, v14421, 0, v14423, v14419, v14421, v14426, v14427, v14428, v14429, 3, 4) :|: TRUE
Combined rules. Obtained 6 rulesP rules:
f_1630(v14412:0, v14413:0, v14414:0, v14415:0, v14416:0, v14417:0, v14418:0, v16207:0, 1, v14421:0, v30708:0, 0, v14423:0, v14419:0, v14426:0, v14427:0, v14428:0, v14429:0, 3, 2, 4) -> f_1145(v14412:0, v14413:0, v14414:0, v14415:0, v14416:0, v14417:0, v14418:0, v16207:0, 1, v14421:0, v30708:0, v14423:0, v14419:0, v14421:0, 0, v14426:0, v14427:0, v14428:0, v14429:0, 3, 4) :|: v30708:0 < 0
f_1630(v14412:0, v14413:0, v14414:0, v14415:0, v14416:0, v14417:0, v14418:0, v16207:0, 1, v14421:0, v30708:0, 0, v14423:0, v14419:0, v14426:0, v14427:0, v14428:0, v14429:0, 3, 2, 4) -> f_1145(v14412:0, v14413:0, v14414:0, v14415:0, v14416:0, v14417:0, v14418:0, v16207:0, 1, v14421:0, v30708:0, v14423:0, v14419:0, v14421:0, 0, v14426:0, v14427:0, v14428:0, v14429:0, 3, 4) :|: v30708:0 > 0
f_1145(v14239:0, v14240:0, v14241:0, v14242:0, v14243:0, v14244:0, v14245:0, v14246:0, 1, 1 + v16206:0, v14249:0, v14250:0, v14251:0, v14252:0, 0, v14254:0, v14255:0, v14256:0, v14257:0, 3, 4) -> f_1145(v14239:0, v14240:0, v14241:0, v14242:0, v14243:0, v14244:0, v14245:0, v14246:0, 1, v16206:0, v30881:0, 1 + v16206:0, v14251:0, v14252:0, 0, v14254:0, v14255:0, v14256:0, v14257:0, 3, 4) :|: v16206:0 > -1 && v14243:0 > 0 && v30881:0 < 0 && v14245:0 > 0
f_1145(v14239:0, v14240:0, v14241:0, v14242:0, v14243:0, v14244:0, v14245:0, v14246:0, 1, 1 + v16206:0, v14249:0, v14250:0, v14251:0, v14252:0, 0, v14254:0, v14255:0, v14256:0, v14257:0, 3, 4) -> f_1145(v14239:0, v14240:0, v14241:0, v14242:0, v14243:0, v14244:0, v14245:0, v14246:0, 1, v16206:0, v30881:0, 1 + v16206:0, v14251:0, v14252:0, 0, v14254:0, v14255:0, v14256:0, v14257:0, 3, 4) :|: v16206:0 > -1 && v14243:0 > 0 && v30881:0 > 0 && v14245:0 > 0
f_1145(v14239:0, v14240:0, v14241:0, v14242:0, v14243:0, v14244:0, v14245:0, 1 + v16207:0, 1, 1 + v16206:0, v14249:0, v14250:0, v14251:0, v14252:0, 0, v14254:0, v14255:0, v14256:0, v14257:0, 3, 4) -> f_1630(v14239:0, v14240:0, v14241:0, v14242:0, v14243:0, v14244:0, v14245:0, v16207:0, 1, v16206:0, v30708:0, 0, 1 + v16206:0, 1 + v16207:0, v14254:0, v14255:0, v14256:0, v14257:0, 3, 2, 4) :|: v16206:0 > -1 && v16207:0 > -1 && v14243:0 > 0 && v14245:0 > 0 && v14244:0 > 1
f_1630(v14412:0, v14413:0, v14414:0, v14415:0, v14416:0, v14417:0, v14418:0, 1 + v16207:1, 1, v14421:0, 0, 0, v14423:0, v14419:0, v14426:0, v14427:0, v14428:0, v14429:0, 3, 2, 4) -> f_1630(v14412:0, v14413:0, v14414:0, v14415:0, v14416:0, v14417:0, v14418:0, v16207:1, 1, v14421:0, v30708:1, 0, v14423:0, 1 + v16207:1, v14426:0, v14427:0, v14428:0, v14429:0, 3, 2, 4) :|: v16207:1 > -1 && v14417:0 > 1
Filtered unneeded arguments:
   f_1630(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21) -> f_1630(x5, x6, x7, x8, x10, x11)
   f_1145(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21) -> f_1145(x5, x6, x7, x8, x10)
Removed division, modulo operations, cleaned up constraints. Obtained 5 rules.P rules:
f_1630(v14416:0, v14417:0, v14418:0, v16207:0, v14421:0, v30708:0) -> f_1145(v14416:0, v14417:0, v14418:0, v16207:0, v14421:0) :|: v30708:0 < 0
f_1630(v14416:0, v14417:0, v14418:0, v16207:0, v14421:0, v30708:0) -> f_1145(v14416:0, v14417:0, v14418:0, v16207:0, v14421:0) :|: v30708:0 > 0
f_1145(v14243:0, v14244:0, v14245:0, v14246:0, sum~cons_1~v16206:0) -> f_1145(v14243:0, v14244:0, v14245:0, v14246:0, v16206:0) :|: v14243:0 > 0 && v14245:0 > 0 && v16206:0 > -1 && sum~cons_1~v16206:0 = 1 + v16206:0
f_1145(v14243:0, v14244:0, v14245:0, sum~cons_1~v16207:0, sum~cons_1~v16206:0) -> f_1630(v14243:0, v14244:0, v14245:0, v16207:0, v16206:0, v30708:0) :|: v16207:0 > -1 && v16206:0 > -1 && v14243:0 > 0 && v14244:0 > 1 && v14245:0 > 0 && sum~cons_1~v16207:0 = 1 + v16207:0 && sum~cons_1~v16206:0 = 1 + v16206:0
f_1630(v14416:0, v14417:0, v14418:0, sum~cons_1~v16207:1, v14421:0, cons_0) -> f_1630(v14416:0, v14417:0, v14418:0, v16207:1, v14421:0, v30708:1) :|: v16207:1 > -1 && v14417:0 > 1 && sum~cons_1~v16207:1 = 1 + v16207:1 && cons_0 = 0

----------------------------------------

(187)
Obligation:
Rules:
f_1630(v14416:0, v14417:0, v14418:0, v16207:0, v14421:0, v30708:0) -> f_1145(v14416:0, v14417:0, v14418:0, v16207:0, v14421:0) :|: v30708:0 < 0
f_1630(x, x1, x2, x3, x4, x5) -> f_1145(x, x1, x2, x3, x4) :|: x5 > 0
f_1145(v14243:0, v14244:0, v14245:0, v14246:0, sum~cons_1~v16206:0) -> f_1145(v14243:0, v14244:0, v14245:0, v14246:0, v16206:0) :|: v14243:0 > 0 && v14245:0 > 0 && v16206:0 > -1 && sum~cons_1~v16206:0 = 1 + v16206:0
f_1145(x6, x7, x8, x9, x10) -> f_1630(x6, x7, x8, x11, x12, x13) :|: x11 > -1 && x12 > -1 && x6 > 0 && x7 > 1 && x8 > 0 && x9 = 1 + x11 && x10 = 1 + x12
f_1630(x14, x15, x16, x17, x18, x19) -> f_1630(x14, x15, x16, x20, x18, x21) :|: x20 > -1 && x15 > 1 && x17 = 1 + x20 && x19 = 0

----------------------------------------

(188) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(189)
Obligation:
Rules:
f_1630(x14:0, x15:0, x16:0, sum~cons_1~x20:0, x18:0, cons_0) -> f_1630(x14:0, x15:0, x16:0, x20:0, x18:0, x21:0) :|: x20:0 > -1 && x15:0 > 1 && sum~cons_1~x20:0 = 1 + x20:0 && cons_0 = 0
f_1630(x:0, x1:0, x2:0, x3:0, x4:0, x5:0) -> f_1145(x:0, x1:0, x2:0, x3:0, x4:0) :|: x5:0 > 0
f_1145(x6:0, x7:0, x8:0, sum~cons_1~x11:0, sum~cons_1~x12:0) -> f_1630(x6:0, x7:0, x8:0, x11:0, x12:0, x13:0) :|: x7:0 > 1 && x8:0 > 0 && x6:0 > 0 && x12:0 > -1 && x11:0 > -1 && sum~cons_1~x11:0 = 1 + x11:0 && sum~cons_1~x12:0 = 1 + x12:0
f_1630(v14416:0:0, v14417:0:0, v14418:0:0, v16207:0:0, v14421:0:0, v30708:0:0) -> f_1145(v14416:0:0, v14417:0:0, v14418:0:0, v16207:0:0, v14421:0:0) :|: v30708:0:0 < 0
f_1145(v14243:0:0, v14244:0:0, v14245:0:0, v14246:0:0, sum~cons_1~v16206:0:0) -> f_1145(v14243:0:0, v14244:0:0, v14245:0:0, v14246:0:0, v16206:0:0) :|: v14243:0:0 > 0 && v14245:0:0 > 0 && v16206:0:0 > -1 && sum~cons_1~v16206:0:0 = 1 + v16206:0:0

----------------------------------------

(190) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1630(x, x1, x2, x3, x4, x5)] = -11 + 5*x + x*x1 + x*x2 + x*x4 + x1 + x1*x2 + x1*x3 + x1^2 - 6*x2 + x2*x4 + x2^2 + x3 + x3^2 - 3*x4 + x4^2
[f_1145(x6, x7, x8, x9, x10)] = -15 - 3*x10 + x10*x6 + x10*x8 + x10^2 + 5*x6 + x6*x7 + x6*x8 + x7 + x7*x8 + x7*x9 + x7^2 - 6*x8 + x8^2 + x9 + x9^2

The following rules are decreasing:
f_1630(x14:0, x15:0, x16:0, sum~cons_1~x20:0, x18:0, cons_0) -> f_1630(x14:0, x15:0, x16:0, x20:0, x18:0, x21:0) :|: x20:0 > -1 && x15:0 > 1 && sum~cons_1~x20:0 = 1 + x20:0 && cons_0 = 0
f_1630(x:0, x1:0, x2:0, x3:0, x4:0, x5:0) -> f_1145(x:0, x1:0, x2:0, x3:0, x4:0) :|: x5:0 > 0
f_1630(v14416:0:0, v14417:0:0, v14418:0:0, v16207:0:0, v14421:0:0, v30708:0:0) -> f_1145(v14416:0:0, v14417:0:0, v14418:0:0, v16207:0:0, v14421:0:0) :|: v30708:0:0 < 0
The following rules are bounded:
f_1145(x6:0, x7:0, x8:0, sum~cons_1~x11:0, sum~cons_1~x12:0) -> f_1630(x6:0, x7:0, x8:0, x11:0, x12:0, x13:0) :|: x7:0 > 1 && x8:0 > 0 && x6:0 > 0 && x12:0 > -1 && x11:0 > -1 && sum~cons_1~x11:0 = 1 + x11:0 && sum~cons_1~x12:0 = 1 + x12:0

----------------------------------------

(191)
Complex Obligation (AND)

----------------------------------------

(192)
Obligation:
Rules:
f_1145(x6:0, x7:0, x8:0, sum~cons_1~x11:0, sum~cons_1~x12:0) -> f_1630(x6:0, x7:0, x8:0, x11:0, x12:0, x13:0) :|: x7:0 > 1 && x8:0 > 0 && x6:0 > 0 && x12:0 > -1 && x11:0 > -1 && sum~cons_1~x11:0 = 1 + x11:0 && sum~cons_1~x12:0 = 1 + x12:0
f_1145(v14243:0:0, v14244:0:0, v14245:0:0, v14246:0:0, sum~cons_1~v16206:0:0) -> f_1145(v14243:0:0, v14244:0:0, v14245:0:0, v14246:0:0, v16206:0:0) :|: v14243:0:0 > 0 && v14245:0:0 > 0 && v16206:0:0 > -1 && sum~cons_1~v16206:0:0 = 1 + v16206:0:0

----------------------------------------

(193) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained one non-trivial SCC.

----------------------------------------

(194)
Obligation:
Rules:
f_1145(v14243:0:0, v14244:0:0, v14245:0:0, v14246:0:0, sum~cons_1~v16206:0:0) -> f_1145(v14243:0:0, v14244:0:0, v14245:0:0, v14246:0:0, v16206:0:0) :|: v14243:0:0 > 0 && v14245:0:0 > 0 && v16206:0:0 > -1 && sum~cons_1~v16206:0:0 = 1 + v16206:0:0

----------------------------------------

(195) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(196)
Obligation:
Rules:
f_1145(v14243:0:0:0, v14244:0:0:0, v14245:0:0:0, v14246:0:0:0, sum~cons_1~v16206:0:0:0) -> f_1145(v14243:0:0:0, v14244:0:0:0, v14245:0:0:0, v14246:0:0:0, v16206:0:0:0) :|: v14243:0:0:0 > 0 && v14245:0:0:0 > 0 && v16206:0:0:0 > -1 && sum~cons_1~v16206:0:0:0 = 1 + v16206:0:0:0

----------------------------------------

(197) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1145(x1, x2, x3, x4, x5) -> f_1145(x1, x3, x5)

----------------------------------------

(198)
Obligation:
Rules:
f_1145(v14243:0:0:0, v14245:0:0:0, sum~cons_1~v16206:0:0:0) -> f_1145(v14243:0:0:0, v14245:0:0:0, v16206:0:0:0) :|: v14243:0:0:0 > 0 && v14245:0:0:0 > 0 && v16206:0:0:0 > -1 && sum~cons_1~v16206:0:0:0 = 1 + v16206:0:0:0

----------------------------------------

(199) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1145 ] = f_1145_3

The following rules are decreasing:
f_1145(v14243:0:0:0, v14245:0:0:0, sum~cons_1~v16206:0:0:0) -> f_1145(v14243:0:0:0, v14245:0:0:0, v16206:0:0:0) :|: v14243:0:0:0 > 0 && v14245:0:0:0 > 0 && v16206:0:0:0 > -1 && sum~cons_1~v16206:0:0:0 = 1 + v16206:0:0:0

The following rules are bounded:
f_1145(v14243:0:0:0, v14245:0:0:0, sum~cons_1~v16206:0:0:0) -> f_1145(v14243:0:0:0, v14245:0:0:0, v16206:0:0:0) :|: v14243:0:0:0 > 0 && v14245:0:0:0 > 0 && v16206:0:0:0 > -1 && sum~cons_1~v16206:0:0:0 = 1 + v16206:0:0:0


----------------------------------------

(200)
YES

----------------------------------------

(201)
Obligation:
Rules:
f_1630(x14:0, x15:0, x16:0, sum~cons_1~x20:0, x18:0, cons_0) -> f_1630(x14:0, x15:0, x16:0, x20:0, x18:0, x21:0) :|: x20:0 > -1 && x15:0 > 1 && sum~cons_1~x20:0 = 1 + x20:0 && cons_0 = 0
f_1630(x:0, x1:0, x2:0, x3:0, x4:0, x5:0) -> f_1145(x:0, x1:0, x2:0, x3:0, x4:0) :|: x5:0 > 0
f_1630(v14416:0:0, v14417:0:0, v14418:0:0, v16207:0:0, v14421:0:0, v30708:0:0) -> f_1145(v14416:0:0, v14417:0:0, v14418:0:0, v16207:0:0, v14421:0:0) :|: v30708:0:0 < 0
f_1145(v14243:0:0, v14244:0:0, v14245:0:0, v14246:0:0, sum~cons_1~v16206:0:0) -> f_1145(v14243:0:0, v14244:0:0, v14245:0:0, v14246:0:0, v16206:0:0) :|: v14243:0:0 > 0 && v14245:0:0 > 0 && v16206:0:0 > -1 && sum~cons_1~v16206:0:0 = 1 + v16206:0:0

----------------------------------------

(202) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained 2 non-trivial SCCs.

----------------------------------------

(203)
Complex Obligation (AND)

----------------------------------------

(204)
Obligation:
Rules:
f_1630(x14:0, x15:0, x16:0, sum~cons_1~x20:0, x18:0, cons_0) -> f_1630(x14:0, x15:0, x16:0, x20:0, x18:0, x21:0) :|: x20:0 > -1 && x15:0 > 1 && sum~cons_1~x20:0 = 1 + x20:0 && cons_0 = 0

----------------------------------------

(205) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(206)
Obligation:
Rules:
f_1630(x14:0:0, x15:0:0, x16:0:0, sum~cons_1~x20:0:0, x18:0:0, cons_0) -> f_1630(x14:0:0, x15:0:0, x16:0:0, x20:0:0, x18:0:0, x21:0:0) :|: x20:0:0 > -1 && x15:0:0 > 1 && sum~cons_1~x20:0:0 = 1 + x20:0:0 && cons_0 = 0

----------------------------------------

(207) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1630(x1, x2, x3, x4, x5, x6) -> f_1630(x2, x4, x6)

----------------------------------------

(208)
Obligation:
Rules:
f_1630(x15:0:0, sum~cons_1~x20:0:0, cons_0) -> f_1630(x15:0:0, x20:0:0, x21:0:0) :|: x20:0:0 > -1 && x15:0:0 > 1 && sum~cons_1~x20:0:0 = 1 + x20:0:0 && cons_0 = 0

----------------------------------------

(209) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1630 ] = f_1630_2

The following rules are decreasing:
f_1630(x15:0:0, sum~cons_1~x20:0:0, cons_0) -> f_1630(x15:0:0, x20:0:0, x21:0:0) :|: x20:0:0 > -1 && x15:0:0 > 1 && sum~cons_1~x20:0:0 = 1 + x20:0:0 && cons_0 = 0

The following rules are bounded:
f_1630(x15:0:0, sum~cons_1~x20:0:0, cons_0) -> f_1630(x15:0:0, x20:0:0, x21:0:0) :|: x20:0:0 > -1 && x15:0:0 > 1 && sum~cons_1~x20:0:0 = 1 + x20:0:0 && cons_0 = 0


----------------------------------------

(210)
YES

----------------------------------------

(211)
Obligation:
Rules:
f_1145(v14243:0:0, v14244:0:0, v14245:0:0, v14246:0:0, sum~cons_1~v16206:0:0) -> f_1145(v14243:0:0, v14244:0:0, v14245:0:0, v14246:0:0, v16206:0:0) :|: v14243:0:0 > 0 && v14245:0:0 > 0 && v16206:0:0 > -1 && sum~cons_1~v16206:0:0 = 1 + v16206:0:0

----------------------------------------

(212) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(213)
Obligation:
Rules:
f_1145(v14243:0:0:0, v14244:0:0:0, v14245:0:0:0, v14246:0:0:0, sum~cons_1~v16206:0:0:0) -> f_1145(v14243:0:0:0, v14244:0:0:0, v14245:0:0:0, v14246:0:0:0, v16206:0:0:0) :|: v14243:0:0:0 > 0 && v14245:0:0:0 > 0 && v16206:0:0:0 > -1 && sum~cons_1~v16206:0:0:0 = 1 + v16206:0:0:0

----------------------------------------

(214) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1145(x1, x2, x3, x4, x5) -> f_1145(x1, x3, x5)

----------------------------------------

(215)
Obligation:
Rules:
f_1145(v14243:0:0:0, v14245:0:0:0, sum~cons_1~v16206:0:0:0) -> f_1145(v14243:0:0:0, v14245:0:0:0, v16206:0:0:0) :|: v14243:0:0:0 > 0 && v14245:0:0:0 > 0 && v16206:0:0:0 > -1 && sum~cons_1~v16206:0:0:0 = 1 + v16206:0:0:0

----------------------------------------

(216) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1145 ] = f_1145_3

The following rules are decreasing:
f_1145(v14243:0:0:0, v14245:0:0:0, sum~cons_1~v16206:0:0:0) -> f_1145(v14243:0:0:0, v14245:0:0:0, v16206:0:0:0) :|: v14243:0:0:0 > 0 && v14245:0:0:0 > 0 && v16206:0:0:0 > -1 && sum~cons_1~v16206:0:0:0 = 1 + v16206:0:0:0

The following rules are bounded:
f_1145(v14243:0:0:0, v14245:0:0:0, sum~cons_1~v16206:0:0:0) -> f_1145(v14243:0:0:0, v14245:0:0:0, v16206:0:0:0) :|: v14243:0:0:0 > 0 && v14245:0:0:0 > 0 && v16206:0:0:0 > -1 && sum~cons_1~v16206:0:0:0 = 1 + v16206:0:0:0


----------------------------------------

(217)
YES

----------------------------------------

(218)
Obligation:
SCC
----------------------------------------

(219) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 61 rulesP rules:
f_2127(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, 0, v47408, v39589, v39595, v39596, v39597, v39598, 3, 4) -> f_2144(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, 0, v47408, v39589, v39595, v39596, v39597, v39598, 3, 4) :|: 0 = 0
f_2144(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, 0, v47408, v39589, v39595, v39596, v39597, v39598, 3, 4) -> f_2160(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, 0, v47408, v39589, v39595, v39596, v39597, v39598, 3, 4) :|: 0 = 0
f_2160(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, 0, v47408, v39589, v39595, v39596, v39597, v39598, 3, 4) -> f_1685(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, 0, v39589, v47408, v39595, v39596, v39597, v39598, 3, 4) :|: TRUE
f_1685(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31782, 1, v31784, 0, v31786, v31787, v31788, v31789, v31790, v31791, 3, 4) -> f_1708(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31782, 1, v31784, 0, v31786, v31787, v31788, v31789, v31790, v31791, 3, 4) :|: TRUE
f_1708(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31782, 1, v31784, 0, v31786, v31787, v31788, v31789, v31790, v31791, 3, 4) -> f_1728(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31782, 1, v31784, 0, v31786, v31787, v31788, v31789, v31790, v31791, 3, 4) :|: TRUE
f_1728(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31782, 1, v31784, 0, v31786, v31787, v31788, v31789, v31790, v31791, 3, 4) -> f_1747(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v31782, v31788, v31789, v31790, v31791, 3, 4) :|: 0 = 0
f_1747(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v31782, v31788, v31789, v31790, v31791, 3, 4) -> f_1767(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v31782, v31788, v31789, v31790, v31791, 3, 4) :|: 0 <= v31787 && 1 <= v31782 && 1 <= v31780
f_1767(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v31782, v31788, v31789, v31790, v31791, 3, 4) -> f_1788(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v31782, v31788, v31789, v31790, v31791, 3, 4) :|: 0 = 0
f_1788(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v31782, v31788, v31789, v31790, v31791, 3, 4) -> f_1810(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v31782, v31788, v31789, v31790, v31791, 3, 4) :|: TRUE
f_1810(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v31782, v31788, v31789, v31790, v31791, 3, 4) -> f_1826(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v31782, v31788, v31789, v31790, v31791, 3, 4) :|: TRUE
f_1826(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v31782, v31788, v31789, v31790, v31791, 3, 4) -> f_1842(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v31782, v31788, v31789, v31790, v31791, 3, 4) :|: 0 = 0
f_1842(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v31782, v31788, v31789, v31790, v31791, 3, 4) -> f_1855(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v31782, v31788, v31789, v31790, v31791, 3, 4) :|: 0 = 0
f_1855(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v31782, v31788, v31789, v31790, v31791, 3, 4) -> f_1866(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v31782, v31788, v31789, v31790, v31791, 3, 4) :|: TRUE
f_1866(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v31782, v31788, v31789, v31790, v31791, 3, 4) -> f_1878(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, v40334, 0, v31786, v31782, v31788, v31789, v31790, v31791, 3, 4) :|: TRUE
f_1878(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, v40334, 0, v31786, v31782, v31788, v31789, v31790, v31791, 3, 4) -> f_1893(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, v40334, 0, v31786, v31782, v31788, v31789, v31790, v31791, 3, 4) :|: v40334 != 0
f_1878(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, v40334, 0, v31786, v31782, v31788, v31789, v31790, v31791, 3, 4) -> f_1894(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v31782, v31788, v31789, v31790, v31791, 3, 4) :|: v40334 = 0
f_1893(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, v40334, 0, v31786, v31782, v31788, v31789, v31790, v31791, 3, 4) -> f_1910(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, v40334, 0, v31786, v31782, v31788, v31789, v31790, v31791, 3, 4) :|: 0 = 0
f_1910(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, v40334, 0, v31786, v31782, v31788, v31789, v31790, v31791, 3, 4) -> f_1929(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, v40334, v31786, v31782, 0, v31788, v31789, v31790, v31791, 3, 4) :|: 0 = 0
f_1929(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, v40334, v31786, v31782, 0, v31788, v31789, v31790, v31791, 3, 4) -> f_1947(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, v40334, v31786, v31782, 0, v31788, v31789, v31790, v31791, 3, 4) :|: TRUE
f_1947(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, v40334, v31786, v31782, 0, v31788, v31789, v31790, v31791, 3, 4) -> f_1968(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, v40334, v31782, 0, v31788, v31789, v31790, v31791, 3, 4) :|: 0 = 0
f_1968(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, v40334, v31782, 0, v31788, v31789, v31790, v31791, 3, 4) -> f_1988(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, v40334, v44348, v31782, 0, v31788, v31789, v31790, v31791, 3, 4) :|: 1 + v44348 = v31784 && 0 <= 1 + v44348
f_1988(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, v40334, v44348, v31782, 0, v31788, v31789, v31790, v31791, 3, 4) -> f_2010(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, v40334, v44348, v31782, 0, v31788, v31789, v31790, v31791, 3, 4) :|: TRUE
f_2010(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, v40334, v44348, v31782, 0, v31788, v31789, v31790, v31791, 3, 4) -> f_2031(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, v40334, v44348, v31782, 0, v31788, v31789, v31790, v31791, 3, 4) :|: TRUE
f_2031(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, v40334, v44348, v31782, 0, v31788, v31789, v31790, v31791, 3, 4) -> f_1852(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, v40334, v31782, v31784, 0, v44348, v31788, v31789, v31790, v31791, 3, 4) :|: TRUE
f_1852(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39589, v39590, v39591, v39592, 0, v39594, v39595, v39596, v39597, v39598, 3, 4) -> f_1863(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, v39590, v39591, v39592, 0, v39589, v39595, v39596, v39597, v39598, 3, 4) :|: 0 = 0
f_1863(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, v39590, v39591, v39592, 0, v39589, v39595, v39596, v39597, v39598, 3, 4) -> f_1874(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, v39590, v39591, v39592, 0, v39589, v39595, v39596, v39597, v39598, 3, 4) :|: 0 <= v39594 && 1 <= v39589 && 1 <= v39586 && 1 <= v39592
f_1874(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, v39590, v39591, v39592, 0, v39589, v39595, v39596, v39597, v39598, 3, 4) -> f_1888(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, v39590, v39591, v39592, 0, v39589, v39595, v39596, v39597, v39598, 3, 4) :|: 0 = 0
f_1888(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, v39590, v39591, v39592, 0, v39589, v39595, v39596, v39597, v39598, 3, 4) -> f_1905(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, v39590, v39591, v39592, 0, v39589, v39595, v39596, v39597, v39598, 3, 4) :|: TRUE
f_1905(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, v39590, v39591, v39592, 0, v39589, v39595, v39596, v39597, v39598, 3, 4) -> f_1923(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, v41361, v39591, v39592, 0, v39589, v39595, v39596, v39597, v39598, 3, 4) :|: TRUE
f_1923(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, v41361, v39591, v39592, 0, v39589, v39595, v39596, v39597, v39598, 3, 4) -> f_1942(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, v41361, v39591, v39592, 0, v39589, v39595, v39596, v39597, v39598, 3, 4) :|: v41361 != 0
f_1923(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, v41361, v39591, v39592, 0, v39589, v39595, v39596, v39597, v39598, 3, 4) -> f_1943(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, 0, v39591, v39592, v39589, v39595, v39596, v39597, v39598, 3, 4) :|: v41361 = 0
f_1942(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, v41361, v39591, v39592, 0, v39589, v39595, v39596, v39597, v39598, 3, 4) -> f_1963(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, v41361, v39591, v39592, 0, v39589, v39595, v39596, v39597, v39598, 3, 4) :|: 0 = 0
f_1963(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, v41361, v39591, v39592, 0, v39589, v39595, v39596, v39597, v39598, 3, 4) -> f_1984(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, v41361, v39591, v39592, 0, v39589, v39595, v39596, v39597, v39598, 3, 4) :|: 0 = 0
f_1984(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, v41361, v39591, v39592, 0, v39589, v39595, v39596, v39597, v39598, 3, 4) -> f_2006(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, v41361, v39591, v39592, 0, v39589, v39595, v39596, v39597, v39598, 3, 4) :|: TRUE
f_2006(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, v41361, v39591, v39592, 0, v39589, v39595, v39596, v39597, v39598, 3, 4) -> f_2027(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, v41361, v39591, v39592, 0, v39595, v39596, v39597, v39598, 3, 4) :|: 0 = 0
f_2027(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, v41361, v39591, v39592, 0, v39595, v39596, v39597, v39598, 3, 4) -> f_2050(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, v41361, v39591, v39592, 0, v47407, v39595, v39596, v39597, v39598, 3, 4) :|: 1 + v47407 = v39594 && 0 <= 1 + v47407
f_2050(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, v41361, v39591, v39592, 0, v47407, v39595, v39596, v39597, v39598, 3, 4) -> f_2068(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, v41361, v39591, v39592, 0, v47407, v39595, v39596, v39597, v39598, 3, 4) :|: TRUE
f_2068(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, v41361, v39591, v39592, 0, v47407, v39595, v39596, v39597, v39598, 3, 4) -> f_2087(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, v41361, v39591, v39592, 0, v47407, v39595, v39596, v39597, v39598, 3, 4) :|: TRUE
f_2087(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, v41361, v39591, v39592, 0, v47407, v39595, v39596, v39597, v39598, 3, 4) -> f_1852(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, v41361, v39591, v39592, 0, v47407, v39595, v39596, v39597, v39598, 3, 4) :|: TRUE
f_1943(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, 0, v39591, v39592, v39589, v39595, v39596, v39597, v39598, 3, 4) -> f_1964(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, 0, v39591, v39592, v39589, v39595, v39596, v39597, v39598, 3, 4) :|: 0 = 0
f_1964(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, 0, v39591, v39592, v39589, v39595, v39596, v39597, v39598, 3, 4) -> f_1985(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, 0, v39591, v39592, v39589, v39595, v39596, v39597, v39598, 3, 4) :|: 0 = 0
f_1985(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, 0, v39591, v39592, v39589, v39595, v39596, v39597, v39598, 3, 4) -> f_2007(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, 0, v39591, v39592, v39589, v39595, v39596, v39597, v39598, 3, 4) :|: TRUE
f_2007(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, 0, v39591, v39592, v39589, v39595, v39596, v39597, v39598, 3, 4) -> f_2028(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, 0, v39592, v39589, v39595, v39596, v39597, v39598, 3, 4) :|: 0 = 0
f_2028(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, 0, v39592, v39589, v39595, v39596, v39597, v39598, 3, 4) -> f_2051(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, 0, v47408, v39592, v39589, v39595, v39596, v39597, v39598, 3, 4) :|: 1 + v47408 = v39587 && 0 <= 1 + v47408
f_2051(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, 0, v47408, v39592, v39589, v39595, v39596, v39597, v39598, 3, 4) -> f_2069(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, 0, v47408, v39592, v39589, v39595, v39596, v39597, v39598, 3, 4) :|: TRUE
f_2069(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, 0, v47408, v39592, v39589, v39595, v39596, v39597, v39598, 3, 4) -> f_2088(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, 0, v47408, v39592, v39589, v39595, v39596, v39597, v39598, 3, 4) :|: TRUE
f_2088(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, 0, v47408, v39592, v39589, v39595, v39596, v39597, v39598, 3, 4) -> f_2101(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, 0, v47408, v39589, v39595, v39596, v39597, v39598, 3, 4) :|: 0 = 0
f_2101(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, 0, v47408, v39589, v39595, v39596, v39597, v39598, 3, 4) -> f_2114(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, 0, v47408, v39589, v39595, v39596, v39597, v39598, 3, 4) :|: 0 = 0
f_2114(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, 0, v47408, v39589, v39595, v39596, v39597, v39598, 3, 4) -> f_2127(v39580, v39581, v39582, v39583, v39584, v39585, v39586, v39587, 1, v39594, 0, v47408, v39589, v39595, v39596, v39597, v39598, 3, 4) :|: v39584 < v39594
f_1894(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v31782, v31788, v31789, v31790, v31791, 3, 4) -> f_1911(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v31782, v31788, v31789, v31790, v31791, 3, 4) :|: 0 = 0
f_1911(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v31782, v31788, v31789, v31790, v31791, 3, 4) -> f_1930(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v31782, v31788, v31789, v31790, v31791, 3, 4) :|: 0 = 0
f_1930(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v31782, v31788, v31789, v31790, v31791, 3, 4) -> f_1948(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v31782, v31788, v31789, v31790, v31791, 3, 4) :|: TRUE
f_1948(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v31782, v31788, v31789, v31790, v31791, 3, 4) -> f_1969(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v31788, v31789, v31790, v31791, 3, 4) :|: 0 = 0
f_1969(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v31788, v31789, v31790, v31791, 3, 4) -> f_1989(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v44349, v31788, v31789, v31790, v31791, 3, 4) :|: 1 + v44349 = v31787 && 0 <= 1 + v44349
f_1989(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v44349, v31788, v31789, v31790, v31791, 3, 4) -> f_2011(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v44349, v31788, v31789, v31790, v31791, 3, 4) :|: TRUE
f_2011(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v44349, v31788, v31789, v31790, v31791, 3, 4) -> f_2032(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v44349, v31788, v31789, v31790, v31791, 3, 4) :|: TRUE
f_2032(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v44349, v31788, v31789, v31790, v31791, 3, 4) -> f_2054(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v44349, v31788, v31789, v31790, v31791, 3, 4) :|: 0 = 0
f_2054(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v44349, v31788, v31789, v31790, v31791, 3, 4) -> f_2072(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v44349, v31788, v31789, v31790, v31791, 3, 4) :|: 0 = 0
f_2072(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v44349, v31788, v31789, v31790, v31791, 3, 4) -> f_2091(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v44349, v31788, v31789, v31790, v31791, 3, 4) :|: 0 = 0
f_2091(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v44349, v31788, v31789, v31790, v31791, 3, 4) -> f_2104(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v44349, v31788, v31789, v31790, v31791, 3, 4) :|: 0 = 0
f_2104(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v44349, v31788, v31789, v31790, v31791, 3, 4) -> f_1685(v31775, v31776, v31777, v31778, v31779, v31780, v31781, v31787, 1, v31784, 0, v31786, v44349, v31788, v31789, v31790, v31791, 3, 4) :|: TRUE
Combined rules. Obtained 6 rulesP rules:
f_1923(v39580:0, v39581:0, v39582:0, v39583:0, v39584:0, v39585:0, v39586:0, 1 + v47408:0, 1, v39594:0, 0, v39591:0, v39592:0, 0, v39589:0, v39595:0, v39596:0, v39597:0, v39598:0, 3, 4) -> f_1878(v39580:0, v39581:0, v39582:0, v39583:0, v39584:0, v39585:0, v39586:0, v47408:0, 1, v39594:0, v40334:0, 0, v39589:0, 1 + v47408:0, v39595:0, v39596:0, v39597:0, v39598:0, 3, 4) :|: v47408:0 > -1 && v39594:0 > v39584:0 && v39585:0 > 0
f_1878(v31775:0, v31776:0, v31777:0, v31778:0, v31779:0, v31780:0, v31781:0, 1 + v44349:0, 1, v31784:0, 0, 0, v31786:0, v31782:0, v31788:0, v31789:0, v31790:0, v31791:0, 3, 4) -> f_1878(v31775:0, v31776:0, v31777:0, v31778:0, v31779:0, v31780:0, v31781:0, v44349:0, 1, v31784:0, v40334:1, 0, v31786:0, 1 + v44349:0, v31788:0, v31789:0, v31790:0, v31791:0, 3, 4) :|: v44349:0 > -1 && v31780:0 > 0
f_1878(v31775:0, v31776:0, v31777:0, v31778:0, v31779:0, v31780:0, v31781:0, v31787:0, 1, 1 + v44348:0, v40334:0, 0, v31786:0, v31782:0, v31788:0, v31789:0, v31790:0, v31791:0, 3, 4) -> f_1923(v31775:0, v31776:0, v31777:0, v31778:0, v31779:0, v31780:0, v31781:0, v31787:0, 1, v44348:0, v41361:0, v31782:0, 1 + v44348:0, 0, 1 + v44348:0, v31788:0, v31789:0, v31790:0, v31791:0, 3, 4) :|: v44348:0 > -1 && v40334:0 < 0 && v31781:0 > 0
f_1878(v31775:0, v31776:0, v31777:0, v31778:0, v31779:0, v31780:0, v31781:0, v31787:0, 1, 1 + v44348:0, v40334:0, 0, v31786:0, v31782:0, v31788:0, v31789:0, v31790:0, v31791:0, 3, 4) -> f_1923(v31775:0, v31776:0, v31777:0, v31778:0, v31779:0, v31780:0, v31781:0, v31787:0, 1, v44348:0, v41361:0, v31782:0, 1 + v44348:0, 0, 1 + v44348:0, v31788:0, v31789:0, v31790:0, v31791:0, 3, 4) :|: v44348:0 > -1 && v40334:0 > 0 && v31781:0 > 0
f_1923(v39580:0, v39581:0, v39582:0, v39583:0, v39584:0, v39585:0, v39586:0, v39587:0, 1, 1 + v47407:0, v41361:0, v39591:0, v39592:0, 0, v39589:0, v39595:0, v39596:0, v39597:0, v39598:0, 3, 4) -> f_1923(v39580:0, v39581:0, v39582:0, v39583:0, v39584:0, v39585:0, v39586:0, v39587:0, 1, v47407:0, v41361:1, v39591:0, v39592:0, 0, 1 + v47407:0, v39595:0, v39596:0, v39597:0, v39598:0, 3, 4) :|: v47407:0 > -1 && v41361:0 < 0 && v39592:0 > 0 && v39586:0 > 0
f_1923(v39580:0, v39581:0, v39582:0, v39583:0, v39584:0, v39585:0, v39586:0, v39587:0, 1, 1 + v47407:0, v41361:0, v39591:0, v39592:0, 0, v39589:0, v39595:0, v39596:0, v39597:0, v39598:0, 3, 4) -> f_1923(v39580:0, v39581:0, v39582:0, v39583:0, v39584:0, v39585:0, v39586:0, v39587:0, 1, v47407:0, v41361:1, v39591:0, v39592:0, 0, 1 + v47407:0, v39595:0, v39596:0, v39597:0, v39598:0, 3, 4) :|: v47407:0 > -1 && v41361:0 > 0 && v39592:0 > 0 && v39586:0 > 0
Filtered unneeded arguments:
   f_1923(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21) -> f_1923(x5, x6, x7, x8, x10, x11, x13)
   f_1878(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20) -> f_1878(x5, x6, x7, x8, x10, x11)
Removed division, modulo operations, cleaned up constraints. Obtained 6 rules.P rules:
f_1923(v39584:0, v39585:0, v39586:0, sum~cons_1~v47408:0, v39594:0, cons_0, v39592:0) -> f_1878(v39584:0, v39585:0, v39586:0, v47408:0, v39594:0, v40334:0) :|: v39594:0 > v39584:0 && v39585:0 > 0 && v47408:0 > -1 && sum~cons_1~v47408:0 = 1 + v47408:0 && cons_0 = 0
f_1878(v31779:0, v31780:0, v31781:0, sum~cons_1~v44349:0, v31784:0, cons_0) -> f_1878(v31779:0, v31780:0, v31781:0, v44349:0, v31784:0, v40334:1) :|: v44349:0 > -1 && v31780:0 > 0 && sum~cons_1~v44349:0 = 1 + v44349:0 && cons_0 = 0
f_1878(v31779:0, v31780:0, v31781:0, v31787:0, sum~cons_1~v44348:0, v40334:0) -> f_1923(v31779:0, v31780:0, v31781:0, v31787:0, v44348:0, v41361:0, 1 + v44348:0) :|: v40334:0 < 0 && v31781:0 > 0 && v44348:0 > -1 && sum~cons_1~v44348:0 = 1 + v44348:0
f_1878(v31779:0, v31780:0, v31781:0, v31787:0, sum~cons_1~v44348:0, v40334:0) -> f_1923(v31779:0, v31780:0, v31781:0, v31787:0, v44348:0, v41361:0, 1 + v44348:0) :|: v40334:0 > 0 && v31781:0 > 0 && v44348:0 > -1 && sum~cons_1~v44348:0 = 1 + v44348:0
f_1923(v39584:0, v39585:0, v39586:0, v39587:0, sum~cons_1~v47407:0, v41361:0, v39592:0) -> f_1923(v39584:0, v39585:0, v39586:0, v39587:0, v47407:0, v41361:1, v39592:0) :|: v41361:0 < 0 && v47407:0 > -1 && v39586:0 > 0 && v39592:0 > 0 && sum~cons_1~v47407:0 = 1 + v47407:0
f_1923(v39584:0, v39585:0, v39586:0, v39587:0, sum~cons_1~v47407:0, v41361:0, v39592:0) -> f_1923(v39584:0, v39585:0, v39586:0, v39587:0, v47407:0, v41361:1, v39592:0) :|: v41361:0 > 0 && v47407:0 > -1 && v39586:0 > 0 && v39592:0 > 0 && sum~cons_1~v47407:0 = 1 + v47407:0

----------------------------------------

(220)
Obligation:
Rules:
f_1923(v39584:0, v39585:0, v39586:0, sum~cons_1~v47408:0, v39594:0, cons_0, v39592:0) -> f_1878(v39584:0, v39585:0, v39586:0, v47408:0, v39594:0, v40334:0) :|: v39594:0 > v39584:0 && v39585:0 > 0 && v47408:0 > -1 && sum~cons_1~v47408:0 = 1 + v47408:0 && cons_0 = 0
f_1878(x, x1, x2, x3, x4, x5) -> f_1878(x, x1, x2, x6, x4, x7) :|: x6 > -1 && x1 > 0 && x3 = 1 + x6 && x5 = 0
f_1878(x8, x9, x10, x11, x12, x13) -> f_1923(x8, x9, x10, x11, x14, x15, 1 + x14) :|: x13 < 0 && x10 > 0 && x14 > -1 && x12 = 1 + x14
f_1878(x16, x17, x18, x19, x20, x21) -> f_1923(x16, x17, x18, x19, x22, x23, 1 + x22) :|: x21 > 0 && x18 > 0 && x22 > -1 && x20 = 1 + x22
f_1923(x24, x25, x26, x27, x28, x29, x30) -> f_1923(x24, x25, x26, x27, x31, x32, x30) :|: x29 < 0 && x31 > -1 && x26 > 0 && x30 > 0 && x28 = 1 + x31
f_1923(x33, x34, x35, x36, x37, x38, x39) -> f_1923(x33, x34, x35, x36, x40, x41, x39) :|: x38 > 0 && x40 > -1 && x35 > 0 && x39 > 0 && x37 = 1 + x40

----------------------------------------

(221) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(222)
Obligation:
Rules:
f_1878(x:0, x1:0, x2:0, sum~cons_1~x6:0, x4:0, cons_0) -> f_1878(x:0, x1:0, x2:0, x6:0, x4:0, x7:0) :|: x6:0 > -1 && x1:0 > 0 && sum~cons_1~x6:0 = 1 + x6:0 && cons_0 = 0
f_1878(x16:0, x17:0, x18:0, x19:0, sum~cons_1~x22:0, x21:0) -> f_1923(x16:0, x17:0, x18:0, x19:0, x22:0, x23:0, 1 + x22:0) :|: x21:0 > 0 && x18:0 > 0 && x22:0 > -1 && sum~cons_1~x22:0 = 1 + x22:0
f_1923(x33:0, x34:0, x35:0, x36:0, sum~cons_1~x40:0, x38:0, x39:0) -> f_1923(x33:0, x34:0, x35:0, x36:0, x40:0, x41:0, x39:0) :|: x35:0 > 0 && x39:0 > 0 && x40:0 > -1 && x38:0 > 0 && sum~cons_1~x40:0 = 1 + x40:0
f_1923(x, x1, x2, x3, x4, x5, x6) -> f_1878(x, x1, x2, x7, x4, x8) :|: x4 > x && x1 > 0 && x7 > -1 && x3 = 1 + x7 && x5 = 0
f_1878(x8:0, x9:0, x10:0, x11:0, sum~cons_1~x14:0, x13:0) -> f_1923(x8:0, x9:0, x10:0, x11:0, x14:0, x15:0, 1 + x14:0) :|: x13:0 < 0 && x10:0 > 0 && x14:0 > -1 && sum~cons_1~x14:0 = 1 + x14:0
f_1923(x24:0, x25:0, x26:0, x27:0, sum~cons_1~x31:0, x29:0, x30:0) -> f_1923(x24:0, x25:0, x26:0, x27:0, x31:0, x32:0, x30:0) :|: x26:0 > 0 && x30:0 > 0 && x31:0 > -1 && x29:0 < 0 && sum~cons_1~x31:0 = 1 + x31:0

----------------------------------------

(223) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1878(x, x1, x2, x3, x4, x5)] = -2 + x1 + x1*x3 + x1^2 + x3 + x3^2
[f_1923(x6, x7, x8, x9, x10, x11, x12)] = -5 + x7 + x7*x9 + x7^2 + x9 + x9^2

The following rules are decreasing:
f_1878(x:0, x1:0, x2:0, sum~cons_1~x6:0, x4:0, cons_0) -> f_1878(x:0, x1:0, x2:0, x6:0, x4:0, x7:0) :|: x6:0 > -1 && x1:0 > 0 && sum~cons_1~x6:0 = 1 + x6:0 && cons_0 = 0
f_1878(x16:0, x17:0, x18:0, x19:0, sum~cons_1~x22:0, x21:0) -> f_1923(x16:0, x17:0, x18:0, x19:0, x22:0, x23:0, 1 + x22:0) :|: x21:0 > 0 && x18:0 > 0 && x22:0 > -1 && sum~cons_1~x22:0 = 1 + x22:0
f_1878(x8:0, x9:0, x10:0, x11:0, sum~cons_1~x14:0, x13:0) -> f_1923(x8:0, x9:0, x10:0, x11:0, x14:0, x15:0, 1 + x14:0) :|: x13:0 < 0 && x10:0 > 0 && x14:0 > -1 && sum~cons_1~x14:0 = 1 + x14:0
The following rules are bounded:
f_1878(x:0, x1:0, x2:0, sum~cons_1~x6:0, x4:0, cons_0) -> f_1878(x:0, x1:0, x2:0, x6:0, x4:0, x7:0) :|: x6:0 > -1 && x1:0 > 0 && sum~cons_1~x6:0 = 1 + x6:0 && cons_0 = 0
f_1923(x, x1, x2, x3, x4, x5, x6) -> f_1878(x, x1, x2, x7, x4, x8) :|: x4 > x && x1 > 0 && x7 > -1 && x3 = 1 + x7 && x5 = 0

----------------------------------------

(224)
Complex Obligation (AND)

----------------------------------------

(225)
Obligation:
Rules:
f_1923(x33:0, x34:0, x35:0, x36:0, sum~cons_1~x40:0, x38:0, x39:0) -> f_1923(x33:0, x34:0, x35:0, x36:0, x40:0, x41:0, x39:0) :|: x35:0 > 0 && x39:0 > 0 && x40:0 > -1 && x38:0 > 0 && sum~cons_1~x40:0 = 1 + x40:0
f_1923(x, x1, x2, x3, x4, x5, x6) -> f_1878(x, x1, x2, x7, x4, x8) :|: x4 > x && x1 > 0 && x7 > -1 && x3 = 1 + x7 && x5 = 0
f_1923(x24:0, x25:0, x26:0, x27:0, sum~cons_1~x31:0, x29:0, x30:0) -> f_1923(x24:0, x25:0, x26:0, x27:0, x31:0, x32:0, x30:0) :|: x26:0 > 0 && x30:0 > 0 && x31:0 > -1 && x29:0 < 0 && sum~cons_1~x31:0 = 1 + x31:0

----------------------------------------

(226) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained one non-trivial SCC.

----------------------------------------

(227)
Obligation:
Rules:
f_1923(x33:0, x34:0, x35:0, x36:0, sum~cons_1~x40:0, x38:0, x39:0) -> f_1923(x33:0, x34:0, x35:0, x36:0, x40:0, x41:0, x39:0) :|: x35:0 > 0 && x39:0 > 0 && x40:0 > -1 && x38:0 > 0 && sum~cons_1~x40:0 = 1 + x40:0
f_1923(x24:0, x25:0, x26:0, x27:0, sum~cons_1~x31:0, x29:0, x30:0) -> f_1923(x24:0, x25:0, x26:0, x27:0, x31:0, x32:0, x30:0) :|: x26:0 > 0 && x30:0 > 0 && x31:0 > -1 && x29:0 < 0 && sum~cons_1~x31:0 = 1 + x31:0

----------------------------------------

(228) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(229)
Obligation:
Rules:
f_1923(x24:0:0, x25:0:0, x26:0:0, x27:0:0, sum~cons_1~x31:0:0, x29:0:0, x30:0:0) -> f_1923(x24:0:0, x25:0:0, x26:0:0, x27:0:0, x31:0:0, x32:0:0, x30:0:0) :|: x31:0:0 > -1 && x29:0:0 < 0 && x30:0:0 > 0 && x26:0:0 > 0 && sum~cons_1~x31:0:0 = 1 + x31:0:0
f_1923(x33:0:0, x34:0:0, x35:0:0, x36:0:0, sum~cons_1~x40:0:0, x38:0:0, x39:0:0) -> f_1923(x33:0:0, x34:0:0, x35:0:0, x36:0:0, x40:0:0, x41:0:0, x39:0:0) :|: x40:0:0 > -1 && x38:0:0 > 0 && x39:0:0 > 0 && x35:0:0 > 0 && sum~cons_1~x40:0:0 = 1 + x40:0:0

----------------------------------------

(230) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1923(x1, x2, x3, x4, x5, x6, x7) -> f_1923(x3, x5, x6, x7)

----------------------------------------

(231)
Obligation:
Rules:
f_1923(x26:0:0, sum~cons_1~x31:0:0, x29:0:0, x30:0:0) -> f_1923(x26:0:0, x31:0:0, x32:0:0, x30:0:0) :|: x31:0:0 > -1 && x29:0:0 < 0 && x30:0:0 > 0 && x26:0:0 > 0 && sum~cons_1~x31:0:0 = 1 + x31:0:0
f_1923(x35:0:0, sum~cons_1~x40:0:0, x38:0:0, x39:0:0) -> f_1923(x35:0:0, x40:0:0, x41:0:0, x39:0:0) :|: x40:0:0 > -1 && x38:0:0 > 0 && x39:0:0 > 0 && x35:0:0 > 0 && sum~cons_1~x40:0:0 = 1 + x40:0:0

----------------------------------------

(232) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1923(x, x1, x2, x3)] = x1

The following rules are decreasing:
f_1923(x26:0:0, sum~cons_1~x31:0:0, x29:0:0, x30:0:0) -> f_1923(x26:0:0, x31:0:0, x32:0:0, x30:0:0) :|: x31:0:0 > -1 && x29:0:0 < 0 && x30:0:0 > 0 && x26:0:0 > 0 && sum~cons_1~x31:0:0 = 1 + x31:0:0
f_1923(x35:0:0, sum~cons_1~x40:0:0, x38:0:0, x39:0:0) -> f_1923(x35:0:0, x40:0:0, x41:0:0, x39:0:0) :|: x40:0:0 > -1 && x38:0:0 > 0 && x39:0:0 > 0 && x35:0:0 > 0 && sum~cons_1~x40:0:0 = 1 + x40:0:0
The following rules are bounded:
f_1923(x26:0:0, sum~cons_1~x31:0:0, x29:0:0, x30:0:0) -> f_1923(x26:0:0, x31:0:0, x32:0:0, x30:0:0) :|: x31:0:0 > -1 && x29:0:0 < 0 && x30:0:0 > 0 && x26:0:0 > 0 && sum~cons_1~x31:0:0 = 1 + x31:0:0
f_1923(x35:0:0, sum~cons_1~x40:0:0, x38:0:0, x39:0:0) -> f_1923(x35:0:0, x40:0:0, x41:0:0, x39:0:0) :|: x40:0:0 > -1 && x38:0:0 > 0 && x39:0:0 > 0 && x35:0:0 > 0 && sum~cons_1~x40:0:0 = 1 + x40:0:0

----------------------------------------

(233)
YES

----------------------------------------

(234)
Obligation:
Rules:
f_1878(x16:0, x17:0, x18:0, x19:0, sum~cons_1~x22:0, x21:0) -> f_1923(x16:0, x17:0, x18:0, x19:0, x22:0, x23:0, 1 + x22:0) :|: x21:0 > 0 && x18:0 > 0 && x22:0 > -1 && sum~cons_1~x22:0 = 1 + x22:0
f_1923(x33:0, x34:0, x35:0, x36:0, sum~cons_1~x40:0, x38:0, x39:0) -> f_1923(x33:0, x34:0, x35:0, x36:0, x40:0, x41:0, x39:0) :|: x35:0 > 0 && x39:0 > 0 && x40:0 > -1 && x38:0 > 0 && sum~cons_1~x40:0 = 1 + x40:0
f_1878(x8:0, x9:0, x10:0, x11:0, sum~cons_1~x14:0, x13:0) -> f_1923(x8:0, x9:0, x10:0, x11:0, x14:0, x15:0, 1 + x14:0) :|: x13:0 < 0 && x10:0 > 0 && x14:0 > -1 && sum~cons_1~x14:0 = 1 + x14:0
f_1923(x24:0, x25:0, x26:0, x27:0, sum~cons_1~x31:0, x29:0, x30:0) -> f_1923(x24:0, x25:0, x26:0, x27:0, x31:0, x32:0, x30:0) :|: x26:0 > 0 && x30:0 > 0 && x31:0 > -1 && x29:0 < 0 && sum~cons_1~x31:0 = 1 + x31:0

----------------------------------------

(235) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained one non-trivial SCC.

----------------------------------------

(236)
Obligation:
Rules:
f_1923(x33:0, x34:0, x35:0, x36:0, sum~cons_1~x40:0, x38:0, x39:0) -> f_1923(x33:0, x34:0, x35:0, x36:0, x40:0, x41:0, x39:0) :|: x35:0 > 0 && x39:0 > 0 && x40:0 > -1 && x38:0 > 0 && sum~cons_1~x40:0 = 1 + x40:0
f_1923(x24:0, x25:0, x26:0, x27:0, sum~cons_1~x31:0, x29:0, x30:0) -> f_1923(x24:0, x25:0, x26:0, x27:0, x31:0, x32:0, x30:0) :|: x26:0 > 0 && x30:0 > 0 && x31:0 > -1 && x29:0 < 0 && sum~cons_1~x31:0 = 1 + x31:0

----------------------------------------

(237) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(238)
Obligation:
Rules:
f_1923(x24:0:0, x25:0:0, x26:0:0, x27:0:0, sum~cons_1~x31:0:0, x29:0:0, x30:0:0) -> f_1923(x24:0:0, x25:0:0, x26:0:0, x27:0:0, x31:0:0, x32:0:0, x30:0:0) :|: x31:0:0 > -1 && x29:0:0 < 0 && x30:0:0 > 0 && x26:0:0 > 0 && sum~cons_1~x31:0:0 = 1 + x31:0:0
f_1923(x33:0:0, x34:0:0, x35:0:0, x36:0:0, sum~cons_1~x40:0:0, x38:0:0, x39:0:0) -> f_1923(x33:0:0, x34:0:0, x35:0:0, x36:0:0, x40:0:0, x41:0:0, x39:0:0) :|: x40:0:0 > -1 && x38:0:0 > 0 && x39:0:0 > 0 && x35:0:0 > 0 && sum~cons_1~x40:0:0 = 1 + x40:0:0

----------------------------------------

(239) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1923(x1, x2, x3, x4, x5, x6, x7) -> f_1923(x3, x5, x6, x7)

----------------------------------------

(240)
Obligation:
Rules:
f_1923(x26:0:0, sum~cons_1~x31:0:0, x29:0:0, x30:0:0) -> f_1923(x26:0:0, x31:0:0, x32:0:0, x30:0:0) :|: x31:0:0 > -1 && x29:0:0 < 0 && x30:0:0 > 0 && x26:0:0 > 0 && sum~cons_1~x31:0:0 = 1 + x31:0:0
f_1923(x35:0:0, sum~cons_1~x40:0:0, x38:0:0, x39:0:0) -> f_1923(x35:0:0, x40:0:0, x41:0:0, x39:0:0) :|: x40:0:0 > -1 && x38:0:0 > 0 && x39:0:0 > 0 && x35:0:0 > 0 && sum~cons_1~x40:0:0 = 1 + x40:0:0

----------------------------------------

(241) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1923 ] = f_1923_2

The following rules are decreasing:
f_1923(x26:0:0, sum~cons_1~x31:0:0, x29:0:0, x30:0:0) -> f_1923(x26:0:0, x31:0:0, x32:0:0, x30:0:0) :|: x31:0:0 > -1 && x29:0:0 < 0 && x30:0:0 > 0 && x26:0:0 > 0 && sum~cons_1~x31:0:0 = 1 + x31:0:0
f_1923(x35:0:0, sum~cons_1~x40:0:0, x38:0:0, x39:0:0) -> f_1923(x35:0:0, x40:0:0, x41:0:0, x39:0:0) :|: x40:0:0 > -1 && x38:0:0 > 0 && x39:0:0 > 0 && x35:0:0 > 0 && sum~cons_1~x40:0:0 = 1 + x40:0:0

The following rules are bounded:
f_1923(x26:0:0, sum~cons_1~x31:0:0, x29:0:0, x30:0:0) -> f_1923(x26:0:0, x31:0:0, x32:0:0, x30:0:0) :|: x31:0:0 > -1 && x29:0:0 < 0 && x30:0:0 > 0 && x26:0:0 > 0 && sum~cons_1~x31:0:0 = 1 + x31:0:0
f_1923(x35:0:0, sum~cons_1~x40:0:0, x38:0:0, x39:0:0) -> f_1923(x35:0:0, x40:0:0, x41:0:0, x39:0:0) :|: x40:0:0 > -1 && x38:0:0 > 0 && x39:0:0 > 0 && x35:0:0 > 0 && sum~cons_1~x40:0:0 = 1 + x40:0:0


----------------------------------------

(242)
YES

----------------------------------------

(243)
Obligation:
SCC
----------------------------------------

(244) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 28 rulesP rules:
f_1390(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v14618, v14622, v14623, v14624, v14625, 3, 4) -> f_1411(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v14618, v14622, v14623, v14624, v14625, 3, 4) :|: 0 = 0
f_1411(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v14618, v14622, v14623, v14624, v14625, 3, 4) -> f_1431(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v14618, v14622, v14623, v14624, v14625, 3, 4) :|: 0 = 0
f_1431(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v14618, v14622, v14623, v14624, v14625, 3, 4) -> f_1453(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v14618, v14622, v14623, v14624, v14625, 3, 4) :|: TRUE
f_1453(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v14618, v14622, v14623, v14624, v14625, 3, 4) -> f_1475(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v14622, v14623, v14624, v14625, 3, 4) :|: 0 = 0
f_1475(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v14622, v14623, v14624, v14625, 3, 4) -> f_1500(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v26078, v14622, v14623, v14624, v14625, 3, 4) :|: 1 + v26078 = v14621 && 0 <= 1 + v26078
f_1500(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v26078, v14622, v14623, v14624, v14625, 3, 4) -> f_1525(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v26078, v14622, v14623, v14624, v14625, 3, 4) :|: TRUE
f_1525(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v26078, v14622, v14623, v14624, v14625, 3, 4) -> f_1546(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v26078, v14622, v14623, v14624, v14625, 3, 4) :|: TRUE
f_1546(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v26078, v14622, v14623, v14624, v14625, 3, 4) -> f_1563(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v26078, v14622, v14623, v14624, v14625, 3, 4) :|: 0 = 0
f_1563(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v26078, v14622, v14623, v14624, v14625, 3, 4) -> f_1584(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v26078, v14622, v14623, v14624, v14625, 3, 4) :|: 0 = 0
f_1584(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v26078, v14622, v14623, v14624, v14625, 3, 4) -> f_1603(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v26078, v14622, v14623, v14624, v14625, 3, 4) :|: 0 = 0
f_1603(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v26078, v14622, v14623, v14624, v14625, 3, 4) -> f_1620(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v26078, v14622, v14623, v14624, v14625, 3, 4) :|: TRUE
f_1620(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v26078, v14622, v14623, v14624, v14625, 3, 4) -> f_1634(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v26078, v30882, v14622, v14623, v14624, v14625, 3, 4) :|: TRUE
f_1634(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v26078, v30882, v14622, v14623, v14624, v14625, 3, 4) -> f_1654(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v26078, v14622, v14623, v14624, v14625, 3, 4) :|: v30882 = 0
f_1654(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v26078, v14622, v14623, v14624, v14625, 3, 4) -> f_1676(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v26078, v14622, v14623, v14624, v14625, 3, 4) :|: 0 = 0
f_1676(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v26078, v14622, v14623, v14624, v14625, 3, 4) -> f_1701(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v26078, v14622, v14623, v14624, v14625, 3, 4) :|: 0 = 0
f_1701(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v26078, v14622, v14623, v14624, v14625, 3, 4) -> f_1128(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v26078, v14622, v14623, v14624, v14625, 3, 4) :|: TRUE
f_1128(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14618, 1, 0, v14621, v14622, v14623, v14624, v14625, 3, 4) -> f_1149(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14618, 1, 0, v14621, v14622, v14623, v14624, v14625, 3, 4) :|: TRUE
f_1149(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14618, 1, 0, v14621, v14622, v14623, v14624, v14625, 3, 4) -> f_1170(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14618, 1, 0, v14621, v14622, v14623, v14624, v14625, 3, 4) :|: TRUE
f_1170(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14618, 1, 0, v14621, v14622, v14623, v14624, v14625, 3, 4) -> f_1195(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v14618, v14622, v14623, v14624, v14625, 3, 4) :|: 0 = 0
f_1195(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v14618, v14622, v14623, v14624, v14625, 3, 4) -> f_1219(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v14618, v14622, v14623, v14624, v14625, 3, 4) :|: 0 <= v14621 && 1 <= v14618 && 1 <= v14616
f_1219(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v14618, v14622, v14623, v14624, v14625, 3, 4) -> f_1240(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v14618, v14622, v14623, v14624, v14625, 3, 4) :|: 0 = 0
f_1240(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v14618, v14622, v14623, v14624, v14625, 3, 4) -> f_1259(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v14618, v14622, v14623, v14624, v14625, 3, 4) :|: TRUE
f_1259(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v14618, v14622, v14623, v14624, v14625, 3, 4) -> f_1284(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v14618, v14622, v14623, v14624, v14625, 3, 4) :|: TRUE
f_1284(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v14618, v14622, v14623, v14624, v14625, 3, 4) -> f_1306(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v14618, v14622, v14623, v14624, v14625, 3, 4) :|: 0 = 0
f_1306(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v14618, v14622, v14623, v14624, v14625, 3, 4) -> f_1325(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v14618, v14622, v14623, v14624, v14625, 3, 4) :|: 0 = 0
f_1325(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v14618, v14622, v14623, v14624, v14625, 3, 4) -> f_1344(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v14618, v14622, v14623, v14624, v14625, 3, 4) :|: TRUE
f_1344(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v14618, v14622, v14623, v14624, v14625, 3, 4) -> f_1366(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, v20014, 0, v14618, v14622, v14623, v14624, v14625, 3, 4) :|: TRUE
f_1366(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, v20014, 0, v14618, v14622, v14623, v14624, v14625, 3, 4) -> f_1390(v14611, v14612, v14613, v14614, v14615, v14616, v14617, v14621, 1, 0, v14618, v14622, v14623, v14624, v14625, 3, 4) :|: v20014 = 0
Combined rules. Obtained 1 rulesP rules:
f_1390(v14611:0, v14612:0, v14613:0, v14614:0, v14615:0, v14616:0, v14617:0, 1 + v26078:0, 1, 0, v14618:0, v14622:0, v14623:0, v14624:0, v14625:0, 3, 4) -> f_1390(v14611:0, v14612:0, v14613:0, v14614:0, v14615:0, v14616:0, v14617:0, v26078:0, 1, 0, 1 + v26078:0, v14622:0, v14623:0, v14624:0, v14625:0, 3, 4) :|: v26078:0 > -1 && v14616:0 > 0
Filtered unneeded arguments:
   f_1390(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17) -> f_1390(x6, x8)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1390(v14616:0, sum~cons_1~v26078:0) -> f_1390(v14616:0, v26078:0) :|: v26078:0 > -1 && v14616:0 > 0 && sum~cons_1~v26078:0 = 1 + v26078:0

----------------------------------------

(245)
Obligation:
Rules:
f_1390(v14616:0, sum~cons_1~v26078:0) -> f_1390(v14616:0, v26078:0) :|: v26078:0 > -1 && v14616:0 > 0 && sum~cons_1~v26078:0 = 1 + v26078:0

----------------------------------------

(246) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(247)
Obligation:
Rules:
f_1390(v14616:0:0, sum~cons_1~v26078:0:0) -> f_1390(v14616:0:0, v26078:0:0) :|: v26078:0:0 > -1 && v14616:0:0 > 0 && sum~cons_1~v26078:0:0 = 1 + v26078:0:0

----------------------------------------

(248) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1390(x, x1)] = x1

The following rules are decreasing:
f_1390(v14616:0:0, sum~cons_1~v26078:0:0) -> f_1390(v14616:0:0, v26078:0:0) :|: v26078:0:0 > -1 && v14616:0:0 > 0 && sum~cons_1~v26078:0:0 = 1 + v26078:0:0
The following rules are bounded:
f_1390(v14616:0:0, sum~cons_1~v26078:0:0) -> f_1390(v14616:0:0, v26078:0:0) :|: v26078:0:0 > -1 && v14616:0:0 > 0 && sum~cons_1~v26078:0:0 = 1 + v26078:0:0

----------------------------------------

(249)
YES

----------------------------------------

(250)
Obligation:
SCC
----------------------------------------

(251) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 24 rulesP rules:
f_1334(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v15273, v8168, v8169, v8170, v8171, 3, 4) -> f_1354(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v15273, v8168, v8169, v8170, v8171, 3, 4) :|: 0 = 0
f_1354(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v15273, v8168, v8169, v8170, v8171, 3, 4) -> f_1376(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v15273, v8168, v8169, v8170, v8171, 3, 4) :|: 0 = 0
f_1376(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v15273, v8168, v8169, v8170, v8171, 3, 4) -> f_881(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v15273, v8168, v8169, v8170, v8171, 3, 4) :|: TRUE
f_881(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8164, 1, 0, v8167, v8168, v8169, v8170, v8171, 3, 4) -> f_899(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8164, 1, 0, v8167, v8168, v8169, v8170, v8171, 3, 4) :|: TRUE
f_899(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8164, 1, 0, v8167, v8168, v8169, v8170, v8171, 3, 4) -> f_916(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8164, 1, 0, v8167, v8168, v8169, v8170, v8171, 3, 4) :|: TRUE
f_916(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8164, 1, 0, v8167, v8168, v8169, v8170, v8171, 3, 4) -> f_934(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v8164, v8168, v8169, v8170, v8171, 3, 4) :|: 0 = 0
f_934(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v8164, v8168, v8169, v8170, v8171, 3, 4) -> f_950(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v8164, v8168, v8169, v8170, v8171, 3, 4) :|: 0 <= v8167 && 1 <= v8164 && 1 <= v8162
f_950(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v8164, v8168, v8169, v8170, v8171, 3, 4) -> f_969(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v8164, v8168, v8169, v8170, v8171, 3, 4) :|: 0 = 0
f_969(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v8164, v8168, v8169, v8170, v8171, 3, 4) -> f_989(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v8164, v8168, v8169, v8170, v8171, 3, 4) :|: TRUE
f_989(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v8164, v8168, v8169, v8170, v8171, 3, 4) -> f_1010(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v8164, v8168, v8169, v8170, v8171, 3, 4) :|: TRUE
f_1010(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v8164, v8168, v8169, v8170, v8171, 3, 4) -> f_1033(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v8164, v8168, v8169, v8170, v8171, 3, 4) :|: 0 = 0
f_1033(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v8164, v8168, v8169, v8170, v8171, 3, 4) -> f_1056(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v8164, v8168, v8169, v8170, v8171, 3, 4) :|: 0 = 0
f_1056(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v8164, v8168, v8169, v8170, v8171, 3, 4) -> f_1080(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v8164, v8168, v8169, v8170, v8171, 3, 4) :|: 0 = 0
f_1080(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v8164, v8168, v8169, v8170, v8171, 3, 4) -> f_1106(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v8164, v8168, v8169, v8170, v8171, 3, 4) :|: TRUE
f_1106(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v8164, v8168, v8169, v8170, v8171, 3, 4) -> f_1137(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v8168, v8169, v8170, v8171, 3, 4) :|: 0 = 0
f_1137(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v8168, v8169, v8170, v8171, 3, 4) -> f_1158(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v15273, v8168, v8169, v8170, v8171, 3, 4) :|: 1 + v15273 = v8167 && 0 <= 1 + v15273
f_1158(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v15273, v8168, v8169, v8170, v8171, 3, 4) -> f_1181(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v15273, v8168, v8169, v8170, v8171, 3, 4) :|: TRUE
f_1181(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v15273, v8168, v8169, v8170, v8171, 3, 4) -> f_1206(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v15273, v8168, v8169, v8170, v8171, 3, 4) :|: TRUE
f_1206(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v15273, v8168, v8169, v8170, v8171, 3, 4) -> f_1231(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v15273, v8168, v8169, v8170, v8171, 3, 4) :|: 0 = 0
f_1231(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v15273, v8168, v8169, v8170, v8171, 3, 4) -> f_1250(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v15273, v8168, v8169, v8170, v8171, 3, 4) :|: 0 = 0
f_1250(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v15273, v8168, v8169, v8170, v8171, 3, 4) -> f_1271(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v15273, v8168, v8169, v8170, v8171, 3, 4) :|: 0 = 0
f_1271(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v15273, v8168, v8169, v8170, v8171, 3, 4) -> f_1294(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v15273, v8168, v8169, v8170, v8171, 3, 4) :|: TRUE
f_1294(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v15273, v8168, v8169, v8170, v8171, 3, 4) -> f_1314(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v15273, v18854, v8168, v8169, v8170, v8171, 3, 4) :|: TRUE
f_1314(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v15273, v18854, v8168, v8169, v8170, v8171, 3, 4) -> f_1334(v8157, v8158, v8159, v8160, v8161, v8162, v8163, v8167, 1, 0, v15273, v8168, v8169, v8170, v8171, 3, 4) :|: v18854 = 0
Combined rules. Obtained 1 rulesP rules:
f_1334(v8157:0, v8158:0, v8159:0, v8160:0, v8161:0, v8162:0, v8163:0, v8167:0, 1, 0, 1 + v15273:1, v8168:0, v8169:0, v8170:0, v8171:0, 3, 4) -> f_1334(v8157:0, v8158:0, v8159:0, v8160:0, v8161:0, v8162:0, v8163:0, 1 + v15273:1, 1, 0, v15273:1, v8168:0, v8169:0, v8170:0, v8171:0, 3, 4) :|: v8167:0 > 0 && v15273:1 > -2 && v8162:0 > 0
Filtered unneeded arguments:
   f_1334(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17) -> f_1334(x6, x8, x11)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1334(v8162:0, v8167:0, sum~cons_1~v15273:1) -> f_1334(v8162:0, 1 + v15273:1, v15273:1) :|: v15273:1 > -2 && v8162:0 > 0 && v8167:0 > 0 && sum~cons_1~v15273:1 = 1 + v15273:1

----------------------------------------

(252)
Obligation:
Rules:
f_1334(v8162:0, v8167:0, sum~cons_1~v15273:1) -> f_1334(v8162:0, 1 + v15273:1, v15273:1) :|: v15273:1 > -2 && v8162:0 > 0 && v8167:0 > 0 && sum~cons_1~v15273:1 = 1 + v15273:1

----------------------------------------

(253) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(254)
Obligation:
Rules:
f_1334(v8162:0:0, v8167:0:0, sum~cons_1~v15273:1:0) -> f_1334(v8162:0:0, 1 + v15273:1:0, v15273:1:0) :|: v15273:1:0 > -2 && v8162:0:0 > 0 && v8167:0:0 > 0 && sum~cons_1~v15273:1:0 = 1 + v15273:1:0

----------------------------------------

(255) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1334 ] = f_1334_3

The following rules are decreasing:
f_1334(v8162:0:0, v8167:0:0, sum~cons_1~v15273:1:0) -> f_1334(v8162:0:0, 1 + v15273:1:0, v15273:1:0) :|: v15273:1:0 > -2 && v8162:0:0 > 0 && v8167:0:0 > 0 && sum~cons_1~v15273:1:0 = 1 + v15273:1:0

The following rules are bounded:
f_1334(v8162:0:0, v8167:0:0, sum~cons_1~v15273:1:0) -> f_1334(v8162:0:0, 1 + v15273:1:0, v15273:1:0) :|: v15273:1:0 > -2 && v8162:0:0 > 0 && v8167:0:0 > 0 && sum~cons_1~v15273:1:0 = 1 + v15273:1:0


----------------------------------------

(256)
YES

----------------------------------------

(257)
Obligation:
SCC
----------------------------------------

(258) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 24 rulesP rules:
f_897(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7902, 1, 0, v7905, v7906, v7907, v7908, v7909, 3, 4) -> f_914(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7902, 1, 0, v7905, v7906, v7907, v7908, v7909, 3, 4) :|: TRUE
f_914(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7902, 1, 0, v7905, v7906, v7907, v7908, v7909, 3, 4) -> f_932(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v7902, v7906, v7907, v7908, v7909, 3, 4) :|: 0 = 0
f_932(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v7902, v7906, v7907, v7908, v7909, 3, 4) -> f_947(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v7902, v7906, v7907, v7908, v7909, 3, 4) :|: 0 <= v7905 && 1 <= v7902 && 1 <= v7900
f_947(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v7902, v7906, v7907, v7908, v7909, 3, 4) -> f_966(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v7902, v7906, v7907, v7908, v7909, 3, 4) :|: 0 = 0
f_966(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v7902, v7906, v7907, v7908, v7909, 3, 4) -> f_986(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v7902, v7906, v7907, v7908, v7909, 3, 4) :|: TRUE
f_986(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v7902, v7906, v7907, v7908, v7909, 3, 4) -> f_1008(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v7902, v7906, v7907, v7908, v7909, 3, 4) :|: TRUE
f_1008(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v7902, v7906, v7907, v7908, v7909, 3, 4) -> f_1030(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v7902, v7906, v7907, v7908, v7909, 3, 4) :|: 0 = 0
f_1030(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v7902, v7906, v7907, v7908, v7909, 3, 4) -> f_1053(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v7902, v7906, v7907, v7908, v7909, 3, 4) :|: 0 = 0
f_1053(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v7902, v7906, v7907, v7908, v7909, 3, 4) -> f_1077(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v7902, v7906, v7907, v7908, v7909, 3, 4) :|: TRUE
f_1077(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v7902, v7906, v7907, v7908, v7909, 3, 4) -> f_1103(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, v13334, 0, v7902, v7906, v7907, v7908, v7909, 3, 4) :|: TRUE
f_1103(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, v13334, 0, v7902, v7906, v7907, v7908, v7909, 3, 4) -> f_1133(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v7902, v7906, v7907, v7908, v7909, 3, 4) :|: v13334 = 0
f_1133(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v7902, v7906, v7907, v7908, v7909, 3, 4) -> f_1154(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v7902, v7906, v7907, v7908, v7909, 3, 4) :|: 0 = 0
f_1154(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v7902, v7906, v7907, v7908, v7909, 3, 4) -> f_1176(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v7902, v7906, v7907, v7908, v7909, 3, 4) :|: 0 = 0
f_1176(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v7902, v7906, v7907, v7908, v7909, 3, 4) -> f_1201(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v7902, v7906, v7907, v7908, v7909, 3, 4) :|: TRUE
f_1201(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v7902, v7906, v7907, v7908, v7909, 3, 4) -> f_1226(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v7906, v7907, v7908, v7909, 3, 4) :|: 0 = 0
f_1226(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v7906, v7907, v7908, v7909, 3, 4) -> f_1246(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v17763, v7906, v7907, v7908, v7909, 3, 4) :|: 1 + v17763 = v7905 && 0 <= 1 + v17763
f_1246(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v17763, v7906, v7907, v7908, v7909, 3, 4) -> f_1266(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v17763, v7906, v7907, v7908, v7909, 3, 4) :|: TRUE
f_1266(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v17763, v7906, v7907, v7908, v7909, 3, 4) -> f_1291(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v17763, v7906, v7907, v7908, v7909, 3, 4) :|: TRUE
f_1291(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v17763, v7906, v7907, v7908, v7909, 3, 4) -> f_1312(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v17763, v7906, v7907, v7908, v7909, 3, 4) :|: 0 = 0
f_1312(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v17763, v7906, v7907, v7908, v7909, 3, 4) -> f_1331(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v17763, v7906, v7907, v7908, v7909, 3, 4) :|: 0 = 0
f_1331(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v17763, v7906, v7907, v7908, v7909, 3, 4) -> f_1350(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v17763, v7906, v7907, v7908, v7909, 3, 4) :|: 0 = 0
f_1350(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v17763, v7906, v7907, v7908, v7909, 3, 4) -> f_1372(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v17763, v7906, v7907, v7908, v7909, 3, 4) :|: 0 = 0
f_1372(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v17763, v7906, v7907, v7908, v7909, 3, 4) -> f_875(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7905, 1, 0, v17763, v7906, v7907, v7908, v7909, 3, 4) :|: TRUE
f_875(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7902, 1, 0, v7905, v7906, v7907, v7908, v7909, 3, 4) -> f_897(v7895, v7896, v7897, v7898, v7899, v7900, v7901, v7902, 1, 0, v7905, v7906, v7907, v7908, v7909, 3, 4) :|: TRUE
Combined rules. Obtained 1 rulesP rules:
f_897(v7895:0, v7896:0, v7897:0, v7898:0, v7899:0, v7900:0, v7901:0, v7902:0, 1, 0, 1 + v17763:0, v7906:0, v7907:0, v7908:0, v7909:0, 3, 4) -> f_897(v7895:0, v7896:0, v7897:0, v7898:0, v7899:0, v7900:0, v7901:0, 1 + v17763:0, 1, 0, v17763:0, v7906:0, v7907:0, v7908:0, v7909:0, 3, 4) :|: v7902:0 > 0 && v17763:0 > -2 && v7900:0 > 0
Filtered unneeded arguments:
   f_897(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17) -> f_897(x6, x8, x11)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_897(v7900:0, v7902:0, sum~cons_1~v17763:0) -> f_897(v7900:0, 1 + v17763:0, v17763:0) :|: v17763:0 > -2 && v7900:0 > 0 && v7902:0 > 0 && sum~cons_1~v17763:0 = 1 + v17763:0

----------------------------------------

(259)
Obligation:
Rules:
f_897(v7900:0, v7902:0, sum~cons_1~v17763:0) -> f_897(v7900:0, 1 + v17763:0, v17763:0) :|: v17763:0 > -2 && v7900:0 > 0 && v7902:0 > 0 && sum~cons_1~v17763:0 = 1 + v17763:0

----------------------------------------

(260) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(261)
Obligation:
Rules:
f_897(v7900:0:0, v7902:0:0, sum~cons_1~v17763:0:0) -> f_897(v7900:0:0, 1 + v17763:0:0, v17763:0:0) :|: v17763:0:0 > -2 && v7900:0:0 > 0 && v7902:0:0 > 0 && sum~cons_1~v17763:0:0 = 1 + v17763:0:0

----------------------------------------

(262) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_897 ] = f_897_3

The following rules are decreasing:
f_897(v7900:0:0, v7902:0:0, sum~cons_1~v17763:0:0) -> f_897(v7900:0:0, 1 + v17763:0:0, v17763:0:0) :|: v17763:0:0 > -2 && v7900:0:0 > 0 && v7902:0:0 > 0 && sum~cons_1~v17763:0:0 = 1 + v17763:0:0

The following rules are bounded:
f_897(v7900:0:0, v7902:0:0, sum~cons_1~v17763:0:0) -> f_897(v7900:0:0, 1 + v17763:0:0, v17763:0:0) :|: v17763:0:0 > -2 && v7900:0:0 > 0 && v7902:0:0 > 0 && sum~cons_1~v17763:0:0 = 1 + v17763:0:0


----------------------------------------

(263)
YES

----------------------------------------

(264)
Obligation:
SCC
----------------------------------------

(265) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 20 rulesP rules:
f_714(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v4531, v4535, v4536, v4537, v4538, 3, 2, 4) -> f_729(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v4531, v4535, v4536, v4537, v4538, 3, 2, 4) :|: 0 <= v4534 && 1 <= v4531 && 1 <= v4529
f_729(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v4531, v4535, v4536, v4537, v4538, 3, 2, 4) -> f_747(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v4531, v4535, v4536, v4537, v4538, 3, 2, 4) :|: 0 = 0
f_747(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v4531, v4535, v4536, v4537, v4538, 3, 2, 4) -> f_764(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v4531, v4535, v4536, v4537, v4538, 3, 2, 4) :|: TRUE
f_764(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v4531, v4535, v4536, v4537, v4538, 3, 2, 4) -> f_783(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v4531, v4535, v4536, v4537, v4538, 3, 2, 4) :|: TRUE
f_783(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v4531, v4535, v4536, v4537, v4538, 3, 2, 4) -> f_798(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v4531, v4535, v4536, v4537, v4538, 3, 2, 4) :|: 0 = 0
f_798(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v4531, v4535, v4536, v4537, v4538, 3, 2, 4) -> f_816(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v4531, v4535, v4536, v4537, v4538, 3, 2, 4) :|: 0 = 0
f_816(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v4531, v4535, v4536, v4537, v4538, 3, 2, 4) -> f_836(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v4531, v4535, v4536, v4537, v4538, 3, 2, 4) :|: 0 = 0
f_836(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v4531, v4535, v4536, v4537, v4538, 3, 2, 4) -> f_858(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v4531, v4535, v4536, v4537, v4538, 3, 2, 4) :|: TRUE
f_858(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v4531, v4535, v4536, v4537, v4538, 3, 2, 4) -> f_882(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v4535, v4536, v4537, v4538, 3, 2, 4) :|: 0 = 0
f_882(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v4535, v4536, v4537, v4538, 3, 2, 4) -> f_900(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v8508, v4535, v4536, v4537, v4538, 3, 2, 4) :|: 1 + v8508 = v4534 && 0 <= 1 + v8508
f_900(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v8508, v4535, v4536, v4537, v4538, 3, 2, 4) -> f_917(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v8508, v4535, v4536, v4537, v4538, 3, 2, 4) :|: TRUE
f_917(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v8508, v4535, v4536, v4537, v4538, 3, 2, 4) -> f_935(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v8508, v4535, v4536, v4537, v4538, 3, 2, 4) :|: TRUE
f_935(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v8508, v4535, v4536, v4537, v4538, 3, 2, 4) -> f_952(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v8508, v4535, v4536, v4537, v4538, 3, 2, 4) :|: 0 = 0
f_952(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v8508, v4535, v4536, v4537, v4538, 3, 2, 4) -> f_971(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v8508, v4535, v4536, v4537, v4538, 3, 2, 4) :|: 0 = 0
f_971(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v8508, v4535, v4536, v4537, v4538, 3, 2, 4) -> f_991(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v8508, v4535, v4536, v4537, v4538, 3, 2, 4) :|: 0 = 0
f_991(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v8508, v4535, v4536, v4537, v4538, 3, 2, 4) -> f_1011(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v8508, v4535, v4536, v4537, v4538, 3, 2, 4) :|: 0 = 0
f_1011(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v8508, v4535, v4536, v4537, v4538, 3, 2, 4) -> f_1034(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v8508, v4535, v4536, v4537, v4538, 3, 2, 4) :|: TRUE
f_1034(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v8508, v4535, v4536, v4537, v4538, 3, 2, 4) -> f_1057(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v8508, v4535, v4536, v4537, v4538, 3, 2, 4) :|: TRUE
f_1057(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v8508, v4535, v4536, v4537, v4538, 3, 2, 4) -> f_698(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v8508, v4535, v4536, v4537, v4538, 3, 2, 4) :|: TRUE
f_698(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4531, 1, 0, v4534, v4535, v4536, v4537, v4538, 3, 2, 4) -> f_714(v4524, v4525, v4526, v4527, v4528, v4529, v4530, v4534, 1, 0, v4531, v4535, v4536, v4537, v4538, 3, 2, 4) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_714(v4524:0, v4525:0, v4526:0, v4527:0, v4528:0, v4529:0, v4530:0, 1 + v8508:0, 1, 0, v4531:0, v4535:0, v4536:0, v4537:0, v4538:0, 3, 2, 4) -> f_714(v4524:0, v4525:0, v4526:0, v4527:0, v4528:0, v4529:0, v4530:0, v8508:0, 1, 0, 1 + v8508:0, v4535:0, v4536:0, v4537:0, v4538:0, 3, 2, 4) :|: v4531:0 > 0 && v8508:0 > -2 && v4529:0 > 0
Filtered unneeded arguments:
   f_714(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18) -> f_714(x6, x8, x11)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_714(v4529:0, sum~cons_1~v8508:0, v4531:0) -> f_714(v4529:0, v8508:0, 1 + v8508:0) :|: v8508:0 > -2 && v4529:0 > 0 && v4531:0 > 0 && sum~cons_1~v8508:0 = 1 + v8508:0

----------------------------------------

(266)
Obligation:
Rules:
f_714(v4529:0, sum~cons_1~v8508:0, v4531:0) -> f_714(v4529:0, v8508:0, 1 + v8508:0) :|: v8508:0 > -2 && v4529:0 > 0 && v4531:0 > 0 && sum~cons_1~v8508:0 = 1 + v8508:0

----------------------------------------

(267) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(268)
Obligation:
Rules:
f_714(v4529:0:0, sum~cons_1~v8508:0:0, v4531:0:0) -> f_714(v4529:0:0, v8508:0:0, 1 + v8508:0:0) :|: v8508:0:0 > -2 && v4529:0:0 > 0 && v4531:0:0 > 0 && sum~cons_1~v8508:0:0 = 1 + v8508:0:0

----------------------------------------

(269) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_714(x, x1, x2)] = x1

The following rules are decreasing:
f_714(v4529:0:0, sum~cons_1~v8508:0:0, v4531:0:0) -> f_714(v4529:0:0, v8508:0:0, 1 + v8508:0:0) :|: v8508:0:0 > -2 && v4529:0:0 > 0 && v4531:0:0 > 0 && sum~cons_1~v8508:0:0 = 1 + v8508:0:0
The following rules are bounded:
f_714(v4529:0:0, sum~cons_1~v8508:0:0, v4531:0:0) -> f_714(v4529:0:0, v8508:0:0, 1 + v8508:0:0) :|: v8508:0:0 > -2 && v4529:0:0 > 0 && v4531:0:0 > 0 && sum~cons_1~v8508:0:0 = 1 + v8508:0:0

----------------------------------------

(270)
YES

----------------------------------------

(271)
Obligation:
SCC
----------------------------------------

(272) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 14 rulesP rules:
f_501(v2462, v2463, v2464, v2465, v2466, v2467, v2468, 1, v2472, v2471, v2470, v2473, v2474, v2475, v2476, 0, 3, 4) -> f_516(v2462, v2463, v2464, v2465, v2466, v2467, v2468, 1, v2472, v2471, v2470, v2473, v2474, v2475, v2476, 0, 3, 4) :|: 0 <= v2472 && 1 <= v2470 && 1 <= v2468
f_516(v2462, v2463, v2464, v2465, v2466, v2467, v2468, 1, v2472, v2471, v2470, v2473, v2474, v2475, v2476, 0, 3, 4) -> f_533(v2462, v2463, v2464, v2465, v2466, v2467, v2468, 1, v2472, v2471, v2470, v2473, v2474, v2475, v2476, 0, 3, 4) :|: 0 = 0
f_533(v2462, v2463, v2464, v2465, v2466, v2467, v2468, 1, v2472, v2471, v2470, v2473, v2474, v2475, v2476, 0, 3, 4) -> f_542(v2462, v2463, v2464, v2465, v2466, v2467, v2468, 1, v2472, v2471, v2470, v2473, v2474, v2475, v2476, 0, 3, 4) :|: TRUE
f_542(v2462, v2463, v2464, v2465, v2466, v2467, v2468, 1, v2472, v2471, v2470, v2473, v2474, v2475, v2476, 0, 3, 4) -> f_552(v2462, v2463, v2464, v2465, v2466, v2467, v2468, 1, v2472, v3149, v2470, v2473, v2474, v2475, v2476, 0, 3, 4) :|: TRUE
f_552(v2462, v2463, v2464, v2465, v2466, v2467, v2468, 1, v2472, v3149, v2470, v2473, v2474, v2475, v2476, 0, 3, 4) -> f_563(v2462, v2463, v2464, v2465, v2466, v2467, v2468, 1, v2472, v3149, v2470, v2473, v2474, v2475, v2476, 0, 3, 4) :|: v3149 != 0
f_563(v2462, v2463, v2464, v2465, v2466, v2467, v2468, 1, v2472, v3149, v2470, v2473, v2474, v2475, v2476, 0, 3, 4) -> f_577(v2462, v2463, v2464, v2465, v2466, v2467, v2468, 1, v2472, v3149, v2470, v2473, v2474, v2475, v2476, 0, 3, 4) :|: 0 = 0
f_577(v2462, v2463, v2464, v2465, v2466, v2467, v2468, 1, v2472, v3149, v2470, v2473, v2474, v2475, v2476, 0, 3, 4) -> f_591(v2462, v2463, v2464, v2465, v2466, v2467, v2468, 1, v2472, v3149, v2470, v2473, v2474, v2475, v2476, 0, 3, 4) :|: 0 = 0
f_591(v2462, v2463, v2464, v2465, v2466, v2467, v2468, 1, v2472, v3149, v2470, v2473, v2474, v2475, v2476, 0, 3, 4) -> f_607(v2462, v2463, v2464, v2465, v2466, v2467, v2468, 1, v2472, v3149, v2470, v2473, v2474, v2475, v2476, 0, 3, 4) :|: TRUE
f_607(v2462, v2463, v2464, v2465, v2466, v2467, v2468, 1, v2472, v3149, v2470, v2473, v2474, v2475, v2476, 0, 3, 4) -> f_622(v2462, v2463, v2464, v2465, v2466, v2467, v2468, 1, v2472, v3149, v2473, v2474, v2475, v2476, 0, 3, 4) :|: 0 = 0
f_622(v2462, v2463, v2464, v2465, v2466, v2467, v2468, 1, v2472, v3149, v2473, v2474, v2475, v2476, 0, 3, 4) -> f_640(v2462, v2463, v2464, v2465, v2466, v2467, v2468, 1, v2472, v3149, v4067, v2473, v2474, v2475, v2476, 0, 3, 4) :|: 1 + v4067 = v2472 && 0 <= 1 + v4067
f_640(v2462, v2463, v2464, v2465, v2466, v2467, v2468, 1, v2472, v3149, v4067, v2473, v2474, v2475, v2476, 0, 3, 4) -> f_650(v2462, v2463, v2464, v2465, v2466, v2467, v2468, 1, v2472, v3149, v4067, v2473, v2474, v2475, v2476, 0, 3, 4) :|: TRUE
f_650(v2462, v2463, v2464, v2465, v2466, v2467, v2468, 1, v2472, v3149, v4067, v2473, v2474, v2475, v2476, 0, 3, 4) -> f_661(v2462, v2463, v2464, v2465, v2466, v2467, v2468, 1, v2472, v3149, v4067, v2473, v2474, v2475, v2476, 0, 3, 4) :|: TRUE
f_661(v2462, v2463, v2464, v2465, v2466, v2467, v2468, 1, v2472, v3149, v4067, v2473, v2474, v2475, v2476, 0, 3, 4) -> f_487(v2462, v2463, v2464, v2465, v2466, v2467, v2468, 1, v2472, v3149, v4067, v2473, v2474, v2475, v2476, 0, 3, 4) :|: TRUE
f_487(v2462, v2463, v2464, v2465, v2466, v2467, v2468, 1, v2470, v2471, v2472, v2473, v2474, v2475, v2476, 0, 3, 4) -> f_501(v2462, v2463, v2464, v2465, v2466, v2467, v2468, 1, v2472, v2471, v2470, v2473, v2474, v2475, v2476, 0, 3, 4) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_501(v2462:0, v2463:0, v2464:0, v2465:0, v2466:0, v2467:0, v2468:0, 1, 1 + v4067:0, v2471:0, v2470:0, v2473:0, v2474:0, v2475:0, v2476:0, 0, 3, 4) -> f_501(v2462:0, v2463:0, v2464:0, v2465:0, v2466:0, v2467:0, v2468:0, 1, v4067:0, v3149:0, 1 + v4067:0, v2473:0, v2474:0, v2475:0, v2476:0, 0, 3, 4) :|: v2470:0 > 0 && v4067:0 > -2 && v2468:0 > 0 && v3149:0 < 0
f_501(v2462:0, v2463:0, v2464:0, v2465:0, v2466:0, v2467:0, v2468:0, 1, 1 + v4067:0, v2471:0, v2470:0, v2473:0, v2474:0, v2475:0, v2476:0, 0, 3, 4) -> f_501(v2462:0, v2463:0, v2464:0, v2465:0, v2466:0, v2467:0, v2468:0, 1, v4067:0, v3149:0, 1 + v4067:0, v2473:0, v2474:0, v2475:0, v2476:0, 0, 3, 4) :|: v2470:0 > 0 && v4067:0 > -2 && v2468:0 > 0 && v3149:0 > 0
Filtered unneeded arguments:
   f_501(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18) -> f_501(x7, x9, x11)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_501(v2468:0, sum~cons_1~v4067:0, v2470:0) -> f_501(v2468:0, v4067:0, 1 + v4067:0) :|: v4067:0 > -2 && v2468:0 > 0 && v2470:0 > 0 && sum~cons_1~v4067:0 = 1 + v4067:0

----------------------------------------

(273)
Obligation:
Rules:
f_501(v2468:0, sum~cons_1~v4067:0, v2470:0) -> f_501(v2468:0, v4067:0, 1 + v4067:0) :|: v4067:0 > -2 && v2468:0 > 0 && v2470:0 > 0 && sum~cons_1~v4067:0 = 1 + v4067:0

----------------------------------------

(274) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(275)
Obligation:
Rules:
f_501(v2468:0:0, sum~cons_1~v4067:0:0, v2470:0:0) -> f_501(v2468:0:0, v4067:0:0, 1 + v4067:0:0) :|: v4067:0:0 > -2 && v2468:0:0 > 0 && v2470:0:0 > 0 && sum~cons_1~v4067:0:0 = 1 + v4067:0:0

----------------------------------------

(276) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_501(x, x1, x2)] = x1

The following rules are decreasing:
f_501(v2468:0:0, sum~cons_1~v4067:0:0, v2470:0:0) -> f_501(v2468:0:0, v4067:0:0, 1 + v4067:0:0) :|: v4067:0:0 > -2 && v2468:0:0 > 0 && v2470:0:0 > 0 && sum~cons_1~v4067:0:0 = 1 + v4067:0:0
The following rules are bounded:
f_501(v2468:0:0, sum~cons_1~v4067:0:0, v2470:0:0) -> f_501(v2468:0:0, v4067:0:0, 1 + v4067:0:0) :|: v4067:0:0 > -2 && v2468:0:0 > 0 && v2470:0:0 > 0 && sum~cons_1~v4067:0:0 = 1 + v4067:0:0

----------------------------------------

(277)
YES
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.001s
