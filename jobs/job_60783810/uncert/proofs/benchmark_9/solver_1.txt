MAYBE
proof of /hpcwork/ff862203/termcomp25/benchmarks/wUu5C.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could not be shown:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 54 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 1436 ms]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) LLVM Symbolic Execution SCC
    (7) SCC2IRS [SOUND, 79 ms]
    (8) IntTRS
        (9) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (10) IntTRS
        (11) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
        (12) IntTRS
        (13) IntTRSPeriodicNontermProof [COMPLETE, 11 ms]
        (14) NO
    (15) SCC2IRS [SOUND, 0 ms]
    (16) IntTRS
        (17) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (18) IntTRS
        (19) IntTRSPeriodicNontermProof [COMPLETE, 7 ms]
        (20) NO
(21) SEGraph to IRS [SOUND, 251 ms]
(22) IntTRS
    (23) IRSNoOverapproximation [EQUIVALENT, 0 ms]
    (24) MAYBE
(25) SEGraph to IRS [SOUND, 254 ms]
(26) IntTRS
    (27) IRSToKoat [EQUIVALENT, 0 ms]
    (28) Koat Problem
    (29) KoAT2 [EQUIVALENT, 1608 ms]
    (30) MAYBE


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/wUu5C.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/wUu5C.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 7
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		%3 = alloca i32, align 4
		%4 = alloca i32, align 4
		%5 = alloca *i32, align 8
		%6 = alloca *i32, align 8
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %4)
		%7 = call i32 @__VERIFIER_nondet_int()
		store %7, %4
		%8 = load %4
		%9 = icmp slt %8 1
		br %9, %10, %11
	10:
		store 1, %4
		br %11
	11:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i32 %5)
		%12 = load %4
		%13 = sext i32 %12 to i64
		%14 = mul i64 %13, 4
		%15 = alloca i8, numElementsLit: %14, align 16
		%16 = bitcast *i8 %15 to *i32
		store %16, %5
		%17 = load %5
		%18 = icmp ne %17 null
		br %18, %20, %19
	19:
		store 0, %1
		br %45
	20:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i32 %6)
		%21 = load %5
		store %21, %6
		br %22
	22:
		%23 = load %6
		%24 = load %23
		%25 = load %5
		%26 = load %4
		%27 = sext i32 %26 to i64
		%28 = getelementptr %25, %27
		%29 = getelementptr %28, -1
		%30 = load %29
		%31 = icmp ne %24 %30
		br %31, %32, %44
	32:
		%33 = load %5
		%34 = load %4
		%35 = sext i32 %34 to i64
		%36 = getelementptr %33, %35
		%37 = getelementptr %36, -1
		%38 = load %37
		%39 = load %6
		%40 = load %39
		%41 = add i32 %40, %38
		store %41, %39
		%42 = load %6
		%43 = getelementptr %42, 1
		store %43, %6
		br %22
	44:
		store 0, %1
		br %45
	45:
		%46 = load %1
		ret %46


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 1 SCC.
----------------------------------------

(6)
Obligation:
SCC
----------------------------------------

(7) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 26 rulesP rules:
f_406(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v173, v174, v175, v176, v177, v178, v172, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_407(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_407(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_408(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v175, v176, v177, v178, v174, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_408(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v175, v176, v177, v178, v174, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_409(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v175, v176, v177, v178, v174, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_409(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v175, v176, v177, v178, v174, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_410(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v176, v177, v178, v174, v175, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
f_410(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v176, v177, v178, v174, v175, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_411(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v177, v178, v174, v175, v176, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: v195 = v191 + 4 * v193
f_411(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v177, v178, v174, v175, v176, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_412(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v178, v174, v175, v176, v177, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 4 + v196 = v195 && 4 <= v195
f_412(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v178, v174, v175, v176, v177, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_413(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_413(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_414(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: v189 != v197
f_414(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_416(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
f_416(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_418(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_418(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_420(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
f_420(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_422(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
f_422(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_424(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
f_424(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_426(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: v195 = v191 + 4 * v193
f_426(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_427(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 4 + v196 = v195
f_427(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_428(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
f_428(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_429(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
f_429(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_430(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
f_430(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_431(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: v244 = v189 + v197
f_431(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_432(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_432(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_433(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v246, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_433(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v246, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_434(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v246, v248, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: v248 = 4 + v246 && 4 <= v248
f_434(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v246, v248, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_435(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v246, v248, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_435(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v246, v248, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_436(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v246, v248, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_436(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v246, v248, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_405(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v246, v248, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_405(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v172, v173, v174, v175, v176, v177, v178, v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_406(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v173, v174, v175, v176, v177, v178, v172, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_406(v161:0, v162:0, v163:0, v164:0, v165:0, v166:0, v167:0, 0, v169:0, v170:0, 1, v181:0, v173:0, v174:0, v175:0, v176:0, v177:0, v178:0, v172:0, v179:0, v180:0, v182:0, v183:0, v184:0, v185:0, v186:0, v187:0, v188:0, 3, 7, 4, 8, 5) -> f_406(v161:0, v162:0, v163:0, v164:0, v165:0, v166:0, v167:0, 0, v169:0, v170:0, 1, 4 + v246:0, v189:0, v191:0, v193:0, 4 + v196:0, v196:0, v197:0, v181:0, v189:0 + v197:0, v246:0, v182:0, v183:0, v184:0, v185:0, v186:0, v187:0, v188:0, 3, 7, 4, 8, 5) :|: v196:0 > -1 && v191:0 + 4 * v193:0 = 4 + v196:0 && v197:0 > v189:0 && v246:0 > -1
f_406(v161:0, v162:0, v163:0, v164:0, v165:0, v166:0, v167:0, 0, v169:0, v170:0, 1, v181:0, v173:0, v174:0, v175:0, v176:0, v177:0, v178:0, v172:0, v179:0, v180:0, v182:0, v183:0, v184:0, v185:0, v186:0, v187:0, v188:0, 3, 7, 4, 8, 5) -> f_406(v161:0, v162:0, v163:0, v164:0, v165:0, v166:0, v167:0, 0, v169:0, v170:0, 1, 4 + v246:0, v189:0, v191:0, v193:0, 4 + v196:0, v196:0, v197:0, v181:0, v189:0 + v197:0, v246:0, v182:0, v183:0, v184:0, v185:0, v186:0, v187:0, v188:0, 3, 7, 4, 8, 5) :|: v196:0 > -1 && v191:0 + 4 * v193:0 = 4 + v196:0 && v197:0 < v189:0 && v246:0 > -1
Removed division, modulo operations, cleaned up constraints. Obtained 2 rules.P rules:
f_406(v161:0, v162:0, v163:0, v164:0, v165:0, v166:0, v167:0, cons_0, v169:0, v170:0, cons_1, v181:0, v173:0, v174:0, v175:0, v176:0, v177:0, v178:0, v172:0, v179:0, v180:0, v182:0, v183:0, v184:0, v185:0, v186:0, v187:0, v188:0, cons_3, cons_7, cons_4, cons_8, cons_5) -> f_406(v161:0, v162:0, v163:0, v164:0, v165:0, v166:0, v167:0, 0, v169:0, v170:0, 1, 4 + v246:0, v189:0, v191:0, v193:0, 4 + v196:0, v196:0, v197:0, v181:0, v189:0 + v197:0, v246:0, v182:0, v183:0, v184:0, v185:0, v186:0, v187:0, v188:0, 3, 7, 4, 8, 5) :|: v191:0 + 4 * v193:0 = 4 + v196:0 && v196:0 > -1 && v246:0 > -1 && v197:0 > v189:0 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_4 = 4 && cons_8 = 8 && cons_5 = 5
f_406(v161:0, v162:0, v163:0, v164:0, v165:0, v166:0, v167:0, cons_0, v169:0, v170:0, cons_1, v181:0, v173:0, v174:0, v175:0, v176:0, v177:0, v178:0, v172:0, v179:0, v180:0, v182:0, v183:0, v184:0, v185:0, v186:0, v187:0, v188:0, cons_3, cons_7, cons_4, cons_8, cons_5) -> f_406(v161:0, v162:0, v163:0, v164:0, v165:0, v166:0, v167:0, 0, v169:0, v170:0, 1, 4 + v246:0, v189:0, v191:0, v193:0, 4 + v196:0, v196:0, v197:0, v181:0, v189:0 + v197:0, v246:0, v182:0, v183:0, v184:0, v185:0, v186:0, v187:0, v188:0, 3, 7, 4, 8, 5) :|: v191:0 + 4 * v193:0 = 4 + v196:0 && v196:0 > -1 && v246:0 > -1 && v197:0 < v189:0 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_4 = 4 && cons_8 = 8 && cons_5 = 5

----------------------------------------

(8)
Obligation:
Rules:
f_406(v161:0, v162:0, v163:0, v164:0, v165:0, v166:0, v167:0, cons_0, v169:0, v170:0, cons_1, v181:0, v173:0, v174:0, v175:0, v176:0, v177:0, v178:0, v172:0, v179:0, v180:0, v182:0, v183:0, v184:0, v185:0, v186:0, v187:0, v188:0, cons_3, cons_7, cons_4, cons_8, cons_5) -> f_406(v161:0, v162:0, v163:0, v164:0, v165:0, v166:0, v167:0, 0, v169:0, v170:0, 1, 4 + v246:0, v189:0, v191:0, v193:0, 4 + v196:0, v196:0, v197:0, v181:0, v189:0 + v197:0, v246:0, v182:0, v183:0, v184:0, v185:0, v186:0, v187:0, v188:0, 3, 7, 4, 8, 5) :|: v191:0 + 4 * v193:0 = 4 + v196:0 && v196:0 > -1 && v246:0 > -1 && v197:0 > v189:0 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_4 = 4 && cons_8 = 8 && cons_5 = 5
f_406(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32) -> f_406(x, x1, x2, x3, x4, x5, x6, 0, x8, x9, 1, 4 + x33, x34, x35, x36, 4 + x37, x37, x38, x11, x34 + x38, x33, x21, x22, x23, x24, x25, x26, x27, 3, 7, 4, 8, 5) :|: x35 + 4 * x36 = 4 + x37 && x37 > -1 && x33 > -1 && x38 < x34 && x7 = 0 && x10 = 1 && x28 = 3 && x29 = 7 && x30 = 4 && x31 = 8 && x32 = 5

----------------------------------------

(9) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(10)
Obligation:
Rules:
f_406(v161:0:0, v162:0:0, v163:0:0, v164:0:0, v165:0:0, v166:0:0, v167:0:0, cons_0, v169:0:0, v170:0:0, cons_1, v181:0:0, v173:0:0, v174:0:0, v175:0:0, v176:0:0, v177:0:0, v178:0:0, v172:0:0, v179:0:0, v180:0:0, v182:0:0, v183:0:0, v184:0:0, v185:0:0, v186:0:0, v187:0:0, v188:0:0, cons_3, cons_7, cons_4, cons_8, cons_5) -> f_406(v161:0:0, v162:0:0, v163:0:0, v164:0:0, v165:0:0, v166:0:0, v167:0:0, 0, v169:0:0, v170:0:0, 1, 4 + v246:0:0, v189:0:0, v191:0:0, v193:0:0, 4 + v196:0:0, v196:0:0, v197:0:0, v181:0:0, v189:0:0 + v197:0:0, v246:0:0, v182:0:0, v183:0:0, v184:0:0, v185:0:0, v186:0:0, v187:0:0, v188:0:0, 3, 7, 4, 8, 5) :|: v246:0:0 > -1 && v197:0:0 > v189:0:0 && v196:0:0 > -1 && v191:0:0 + 4 * v193:0:0 = 4 + v196:0:0 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_4 = 4 && cons_8 = 8 && cons_5 = 5
f_406(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32) -> f_406(x, x1, x2, x3, x4, x5, x6, 0, x8, x9, 1, 4 + x33, x34, x35, x36, 4 + x37, x37, x38, x11, x34 + x38, x33, x21, x22, x23, x24, x25, x26, x27, 3, 7, 4, 8, 5) :|: x33 > -1 && x38 < x34 && x37 > -1 && x35 + 4 * x36 = 4 + x37 && x7 = 0 && x10 = 1 && x28 = 3 && x29 = 7 && x30 = 4 && x31 = 8 && x32 = 5

----------------------------------------

(11) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_406(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33) -> f_406(x8, x11, x29, x30, x31, x32, x33)

----------------------------------------

(12)
Obligation:
Rules:
f_406(cons_0, cons_1, cons_3, cons_7, cons_4, cons_8, cons_5) -> f_406(0, 1, 3, 7, 4, 8, 5) :|: v246:0:0 > -1 && v197:0:0 > v189:0:0 && v196:0:0 > -1 && v191:0:0 + 4 * v193:0:0 = 4 + v196:0:0 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_4 = 4 && cons_8 = 8 && cons_5 = 5
f_406(x7, x10, x28, x29, x30, x31, x32) -> f_406(0, 1, 3, 7, 4, 8, 5) :|: x33 > -1 && x38 < x34 && x37 > -1 && x35 + 4 * x36 = 4 + x37 && x7 = 0 && x10 = 1 && x28 = 3 && x29 = 7 && x30 = 4 && x31 = 8 && x32 = 5

----------------------------------------

(13) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, cons_0, cons_1, cons_3, cons_7, cons_4, cons_8, cons_5) -> f(1, 0, 1, 3, 7, 4, 8, 5) :|: pc = 1 && (v246:0:0 > -1 && v197:0:0 > v189:0:0 && v196:0:0 > -1 && v191:0:0 + 4 * v193:0:0 = 4 + v196:0:0 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_4 = 4 && cons_8 = 8 && cons_5 = 5)
f(pc, x7, x10, x28, x29, x30, x31, x32) -> f(1, 0, 1, 3, 7, 4, 8, 5) :|: pc = 1 && (x33 > -1 && x38 < x34 && x37 > -1 && x35 + 4 * x36 = 4 + x37 && x7 = 0 && x10 = 1 && x28 = 3 && x29 = 7 && x30 = 4 && x31 = 8 && x32 = 5)
Witness term starting non-terminating reduction: f(1, 0, 1, 3, 7, 4, 8, 5)
----------------------------------------

(14)
NO

----------------------------------------

(15) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 26 rulesP rules:
f_406(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v173, v174, v175, v176, v177, v178, v172, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_407(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_407(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_408(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v175, v176, v177, v178, v174, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_408(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v175, v176, v177, v178, v174, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_409(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v175, v176, v177, v178, v174, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_409(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v175, v176, v177, v178, v174, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_410(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v176, v177, v178, v174, v175, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
f_410(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v176, v177, v178, v174, v175, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_411(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v177, v178, v174, v175, v176, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: v195 = v191 + 4 * v193
f_411(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v177, v178, v174, v175, v176, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_412(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v178, v174, v175, v176, v177, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 4 + v196 = v195 && 4 <= v195
f_412(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v178, v174, v175, v176, v177, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_413(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_413(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_414(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: v189 != v197
f_414(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_416(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
f_416(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_418(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_418(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_420(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
f_420(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_422(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
f_422(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_424(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
f_424(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_426(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: v195 = v191 + 4 * v193
f_426(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_427(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 4 + v196 = v195
f_427(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_428(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
f_428(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_429(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
f_429(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_430(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
f_430(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_431(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: v244 = v189 + v197
f_431(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_432(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_432(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_433(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v246, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_433(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v246, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_434(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v246, v248, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: v248 = 4 + v246 && 4 <= v248
f_434(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v246, v248, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_435(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v246, v248, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_435(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v246, v248, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_436(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v246, v248, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_436(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v246, v248, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_405(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v246, v248, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: v170 + v169 <= 1 + v188 && 1 <= v161 && 1 <= v162 && 1 <= v163 && 1 <= v164 && 1 <= v165 && 1 <= v166 && 1 <= v167 && 4 <= v169 && 1 <= v170 && 4 <= v181 && 0 <= v191 && 4 <= v195 && 0 <= v196 && 0 <= v246 && 4 <= v248 && 4 <= v182 && 4 <= v183 && 4 <= v184 && 4 <= v185 && 8 <= v186 && 8 <= v187 && 5 <= v188 && v161 <= v182 && v162 <= v183 && v163 <= v184 && v164 <= v185 && v165 <= v186 && v166 <= v187 && v170 <= v188
f_405(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v172, v173, v174, v175, v176, v177, v178, v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_406(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v173, v174, v175, v176, v177, v178, v172, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_406(v161:0, v162:0, v163:0, v164:0, v165:0, v166:0, v167:0, 0, v169:0, v170:0, 1, v181:0, v173:0, v174:0, v175:0, v176:0, v177:0, v178:0, v172:0, v179:0, v180:0, v182:0, v183:0, v184:0, v185:0, v186:0, v187:0, v188:0, 3, 7, 4, 8, 5) -> f_406(v161:0, v162:0, v163:0, v164:0, v165:0, v166:0, v167:0, 0, v169:0, v170:0, 1, 4 + v246:0, v189:0, v191:0, v193:0, 4 + v196:0, v196:0, v197:0, v181:0, v189:0 + v197:0, v246:0, v182:0, v183:0, v184:0, v185:0, v186:0, v187:0, v188:0, 3, 7, 4, 8, 5) :|: v161:0 > 0 && v170:0 + v169:0 <= 1 + v188:0 && v162:0 > 0 && v163:0 > 0 && v164:0 > 0 && v165:0 > 0 && v166:0 > 0 && v167:0 > 0 && v169:0 > 3 && v170:0 > 0 && v181:0 > 3 && v196:0 > -1 && v191:0 + 4 * v193:0 = 4 + v196:0 && v191:0 > -1 && v197:0 > v189:0 && v246:0 > -1 && v182:0 > 3 && v183:0 > 3 && v184:0 > 3 && v185:0 > 3 && v186:0 > 7 && v187:0 > 7 && v188:0 > 4 && v182:0 >= v161:0 && v183:0 >= v162:0 && v184:0 >= v163:0 && v185:0 >= v164:0 && v186:0 >= v165:0 && v188:0 >= v170:0 && v187:0 >= v166:0
f_406(v161:0, v162:0, v163:0, v164:0, v165:0, v166:0, v167:0, 0, v169:0, v170:0, 1, v181:0, v173:0, v174:0, v175:0, v176:0, v177:0, v178:0, v172:0, v179:0, v180:0, v182:0, v183:0, v184:0, v185:0, v186:0, v187:0, v188:0, 3, 7, 4, 8, 5) -> f_406(v161:0, v162:0, v163:0, v164:0, v165:0, v166:0, v167:0, 0, v169:0, v170:0, 1, 4 + v246:0, v189:0, v191:0, v193:0, 4 + v196:0, v196:0, v197:0, v181:0, v189:0 + v197:0, v246:0, v182:0, v183:0, v184:0, v185:0, v186:0, v187:0, v188:0, 3, 7, 4, 8, 5) :|: v161:0 > 0 && v170:0 + v169:0 <= 1 + v188:0 && v162:0 > 0 && v163:0 > 0 && v164:0 > 0 && v165:0 > 0 && v166:0 > 0 && v167:0 > 0 && v169:0 > 3 && v170:0 > 0 && v181:0 > 3 && v196:0 > -1 && v191:0 + 4 * v193:0 = 4 + v196:0 && v191:0 > -1 && v197:0 < v189:0 && v246:0 > -1 && v182:0 > 3 && v183:0 > 3 && v184:0 > 3 && v185:0 > 3 && v186:0 > 7 && v187:0 > 7 && v188:0 > 4 && v182:0 >= v161:0 && v183:0 >= v162:0 && v184:0 >= v163:0 && v185:0 >= v164:0 && v186:0 >= v165:0 && v188:0 >= v170:0 && v187:0 >= v166:0
Filtered unneeded arguments:
   f_406(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33) -> f_406(x1, x2, x3, x4, x5, x6, x7, x9, x10, x12, x22, x23, x24, x25, x26, x27, x28)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_406(v161:0, v162:0, v163:0, v164:0, v165:0, v166:0, v167:0, v169:0, v170:0, v181:0, v182:0, v183:0, v184:0, v185:0, v186:0, v187:0, v188:0) -> f_406(v161:0, v162:0, v163:0, v164:0, v165:0, v166:0, v167:0, v169:0, v170:0, 4 + v246:0, v182:0, v183:0, v184:0, v185:0, v186:0, v187:0, v188:0) :|: v170:0 + v169:0 <= 1 + v188:0 && v161:0 > 0 && v162:0 > 0 && v163:0 > 0 && v164:0 > 0 && v165:0 > 0 && v166:0 > 0 && v167:0 > 0 && v169:0 > 3 && v170:0 > 0 && v181:0 > 3 && v246:0 > -1 && v182:0 > 3 && v183:0 > 3 && v184:0 > 3 && v185:0 > 3 && v186:0 > 7 && v187:0 > 7 && v188:0 > 4 && v182:0 >= v161:0 && v183:0 >= v162:0 && v184:0 >= v163:0 && v185:0 >= v164:0 && v186:0 >= v165:0 && v187:0 >= v166:0 && v188:0 >= v170:0

----------------------------------------

(16)
Obligation:
Rules:
f_406(v161:0, v162:0, v163:0, v164:0, v165:0, v166:0, v167:0, v169:0, v170:0, v181:0, v182:0, v183:0, v184:0, v185:0, v186:0, v187:0, v188:0) -> f_406(v161:0, v162:0, v163:0, v164:0, v165:0, v166:0, v167:0, v169:0, v170:0, 4 + v246:0, v182:0, v183:0, v184:0, v185:0, v186:0, v187:0, v188:0) :|: v170:0 + v169:0 <= 1 + v188:0 && v161:0 > 0 && v162:0 > 0 && v163:0 > 0 && v164:0 > 0 && v165:0 > 0 && v166:0 > 0 && v167:0 > 0 && v169:0 > 3 && v170:0 > 0 && v181:0 > 3 && v246:0 > -1 && v182:0 > 3 && v183:0 > 3 && v184:0 > 3 && v185:0 > 3 && v186:0 > 7 && v187:0 > 7 && v188:0 > 4 && v182:0 >= v161:0 && v183:0 >= v162:0 && v184:0 >= v163:0 && v185:0 >= v164:0 && v186:0 >= v165:0 && v187:0 >= v166:0 && v188:0 >= v170:0

----------------------------------------

(17) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(18)
Obligation:
Rules:
f_406(v161:0:0, v162:0:0, v163:0:0, v164:0:0, v165:0:0, v166:0:0, v167:0:0, v169:0:0, v170:0:0, v181:0:0, v182:0:0, v183:0:0, v184:0:0, v185:0:0, v186:0:0, v187:0:0, v188:0:0) -> f_406(v161:0:0, v162:0:0, v163:0:0, v164:0:0, v165:0:0, v166:0:0, v167:0:0, v169:0:0, v170:0:0, 4 + v246:0:0, v182:0:0, v183:0:0, v184:0:0, v185:0:0, v186:0:0, v187:0:0, v188:0:0) :|: v187:0:0 >= v166:0:0 && v188:0:0 >= v170:0:0 && v186:0:0 >= v165:0:0 && v185:0:0 >= v164:0:0 && v184:0:0 >= v163:0:0 && v183:0:0 >= v162:0:0 && v182:0:0 >= v161:0:0 && v188:0:0 > 4 && v187:0:0 > 7 && v186:0:0 > 7 && v185:0:0 > 3 && v184:0:0 > 3 && v183:0:0 > 3 && v182:0:0 > 3 && v246:0:0 > -1 && v181:0:0 > 3 && v170:0:0 > 0 && v169:0:0 > 3 && v167:0:0 > 0 && v166:0:0 > 0 && v165:0:0 > 0 && v164:0:0 > 0 && v163:0:0 > 0 && v162:0:0 > 0 && v161:0:0 > 0 && v170:0:0 + v169:0:0 <= 1 + v188:0:0

----------------------------------------

(19) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, v161:0:0, v162:0:0, v163:0:0, v164:0:0, v165:0:0, v166:0:0, v167:0:0, v169:0:0, v170:0:0, v181:0:0, v182:0:0, v183:0:0, v184:0:0, v185:0:0, v186:0:0, v187:0:0, v188:0:0) -> f(1, v161:0:0, v162:0:0, v163:0:0, v164:0:0, v165:0:0, v166:0:0, v167:0:0, v169:0:0, v170:0:0, 4 + v246:0:0, v182:0:0, v183:0:0, v184:0:0, v185:0:0, v186:0:0, v187:0:0, v188:0:0) :|: pc = 1 && (v187:0:0 >= v166:0:0 && v188:0:0 >= v170:0:0 && v186:0:0 >= v165:0:0 && v185:0:0 >= v164:0:0 && v184:0:0 >= v163:0:0 && v183:0:0 >= v162:0:0 && v182:0:0 >= v161:0:0 && v188:0:0 > 4 && v187:0:0 > 7 && v186:0:0 > 7 && v185:0:0 > 3 && v184:0:0 > 3 && v183:0:0 > 3 && v182:0:0 > 3 && v246:0:0 > -1 && v181:0:0 > 3 && v170:0:0 > 0 && v169:0:0 > 3 && v167:0:0 > 0 && v166:0:0 > 0 && v165:0:0 > 0 && v164:0:0 > 0 && v163:0:0 > 0 && v162:0:0 > 0 && v161:0:0 > 0 && v170:0:0 + v169:0:0 <= 1 + v188:0:0)
Witness term starting non-terminating reduction: f(1, 16, 1, 16, 8, 16, 1, 1, 8, 8, 4, 18, 4, 16, 10, 20, 11, 15)
----------------------------------------

(20)
NO

----------------------------------------

(21) SEGraph to IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 158 rulesP rules:
f_187 -> f_188(v1, v2, 3, 1, 4) :|: 1 <= v1 && v2 = 3 + v1 && 4 <= v2
f_188(v1, v2, 3, 1, 4) -> f_189(v1, v3, v2, v4, 3, 1, 4) :|: 1 <= v3 && v4 = 3 + v3 && 4 <= v4
f_189(v1, v3, v2, v4, 3, 1, 4) -> f_190(v1, v3, v5, v2, v4, v6, 3, 1, 4) :|: 1 <= v5 && v6 = 3 + v5 && 4 <= v6
f_190(v1, v3, v5, v2, v4, v6, 3, 1, 4) -> f_191(v1, v3, v5, v7, v2, v4, v6, v8, 3, 1, 4) :|: 1 <= v7 && v8 = 3 + v7 && 4 <= v8
f_191(v1, v3, v5, v7, v2, v4, v6, v8, 3, 1, 4) -> f_192(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 3, 7, 1, 4, 8) :|: 1 <= v9 && v10 = 7 + v9 && 8 <= v10
f_192(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 3, 7, 1, 4, 8) -> f_193(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) :|: 1 <= v11 && v12 = 7 + v11 && 8 <= v12
f_193(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) -> f_194(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) :|: TRUE
f_194(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_195(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) :|: TRUE
f_195(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_196(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) :|: TRUE
f_196(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_197(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) :|: TRUE
f_197(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_198(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) :|: TRUE
f_198(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_199(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) :|: TRUE
f_199(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_200(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) :|: 0 = 0
f_200(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_201(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) :|: v13 < 1
f_200(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_202(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) :|: 1 <= v13
f_201(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_203(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: 0 = 0
f_202(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_204(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) :|: 0 = 0
f_203(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_205(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: TRUE
f_204(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) -> f_206(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) :|: TRUE
f_205(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_207(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: TRUE
f_206(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) -> f_208(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) :|: TRUE
f_207(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_209(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: TRUE
f_208(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) -> f_210(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) :|: 0 = 0
f_209(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_211(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: TRUE
f_210(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) -> f_212(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) :|: 0 = 0
f_211(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_213(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: 0 = 0
f_212(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) -> f_214(v1, v3, v5, v7, v9, v11, v13, 0, v15, v2, v4, v6, v8, v10, v12, 3, 7, 4, 1, 8) :|: v15 = 4 * v13 && 4 <= v15
f_213(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_215(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: 0 = 0
f_214(v1, v3, v5, v7, v9, v11, v13, 0, v15, v2, v4, v6, v8, v10, v12, 3, 7, 4, 1, 8) -> f_277(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, v2, v4, v6, v8, v10, v12, v17, 3, 7, 1, 4, 8) :|: 1 <= v16 && v16 + v15 = 1 + v17 && 4 <= v17
f_215(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_278(v1, v3, v5, v7, v9, v11, v13, 1, 4, v2, v4, v6, v8, v10, v12, 0, 3, 7, 8) :|: 0 = 0
f_277(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, v2, v4, v6, v8, v10, v12, v17, 3, 7, 1, 4, 8) -> f_279(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, v2, v4, v6, v8, v10, v12, v17, 3, 7, 1, 4, 8) :|: 0 = 0
f_278(v1, v3, v5, v7, v9, v11, v13, 1, 4, v2, v4, v6, v8, v10, v12, 0, 3, 7, 8) -> f_280(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) :|: 1 <= v18 && v19 = 3 + v18 && 4 <= v19
f_279(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, v2, v4, v6, v8, v10, v12, v17, 3, 7, 1, 4, 8) -> f_281(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, v2, v4, v6, v8, v10, v12, v17, 3, 7, 1, 4, 8) :|: TRUE
f_280(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) -> f_282(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) :|: 0 = 0
f_281(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, v2, v4, v6, v8, v10, v12, v17, 3, 7, 1, 4, 8) -> f_283(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, v2, v4, v6, v8, v10, v12, v17, 3, 7, 1, 4, 8) :|: 0 = 0
f_282(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) -> f_284(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) :|: TRUE
f_283(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, v2, v4, v6, v8, v10, v12, v17, 3, 7, 1, 4, 8) -> f_285(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) :|: 0 = 0
f_284(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) -> f_286(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) :|: 0 = 0
f_285(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) -> f_287(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) :|: TRUE
f_286(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) -> f_288(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) :|: 0 = 0
f_287(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) -> f_289(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) :|: TRUE
f_288(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) -> f_290(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) :|: TRUE
f_289(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) -> f_291(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) :|: 0 = 0
f_290(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) -> f_292(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) :|: TRUE
f_291(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) -> f_293(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) :|: TRUE
f_292(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) -> f_294(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) :|: 0 = 0
f_293(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) -> f_295(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) :|: TRUE
f_294(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) -> f_296(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) :|: TRUE
f_295(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) -> f_297(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) :|: 0 = 0
f_296(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) -> f_298(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) :|: TRUE
f_297(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) -> f_299(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) :|: TRUE
f_298(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) -> f_300(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) :|: 0 = 0
f_299(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) -> f_301(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) :|: 0 = 0
f_300(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) -> f_302(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) :|: TRUE
f_301(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) -> f_303(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) :|: 0 = 0
f_302(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) -> f_304(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) :|: 0 = 0
f_303(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) -> f_305(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) :|: 0 = 0
f_304(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) -> f_306(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) :|: 0 = 0
f_305(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) -> f_307(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5) :|: v28 = v16 + 4 * v13 && 5 <= v28
f_306(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) -> f_308(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) :|: 0 = 0
f_307(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5) -> f_309(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5) :|: 4 + v29 = v28 && 1 <= v29
f_308(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) -> f_310(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v30, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8, 5) :|: v30 = 4 + v18 && 5 <= v30
f_309(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5) -> f_311(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5) :|: TRUE
f_310(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v30, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8, 5) -> f_312(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v30, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8, 5) :|: 4 + v18 = v30
f_311(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5) -> f_313(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: v24 != v31 && v16 < v29 && 2 <= v29 && 6 <= v28 && 5 <= v17
f_311(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5) -> f_314(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v31, v28, v29, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5) :|: v24 = v31
f_312(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v30, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8, 5) -> f_315(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v30, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8, 5) :|: 0 = 0
f_313(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_316(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_314(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v31, v28, v29, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5) -> f_317(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v31, v28, v29, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5) :|: 0 = 0
f_315(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v30, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8, 5) -> f_318(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v30, 0, v2, v4, v6, v8, v10, v12, v19, 3, 7, 8, 5) :|: 0 = 0
f_316(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_319(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: TRUE
f_317(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v31, v28, v29, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5) -> f_320(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v31, v28, v29, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5) :|: TRUE
f_318(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v30, 0, v2, v4, v6, v8, v10, v12, v19, 3, 7, 8, 5) -> f_321(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v30, 0, v2, v4, v6, v8, v10, v12, v19, 3, 7, 8, 5) :|: TRUE
f_319(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_322(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_320(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v31, v28, v29, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5) -> f_323(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v31, v28, v29, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5) :|: TRUE
f_321(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v30, 0, v2, v4, v6, v8, v10, v12, v19, 3, 7, 8, 5) -> f_324(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v30, 0, v2, v4, v6, v8, v10, v12, v19, 3, 7, 8, 5) :|: TRUE
f_322(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_325(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_323(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v31, v28, v29, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5) -> f_326(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v31, v28, v29, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5) :|: TRUE
f_324(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v30, 0, v2, v4, v6, v8, v10, v12, v19, 3, 7, 8, 5) -> f_327(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v30, 0, v2, v4, v6, v8, v10, v12, v19, 3, 7, 8, 5) :|: TRUE
f_325(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_328(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_326(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v31, v28, v29, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5) -> f_329(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v31, v28, v29, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5) :|: 0 = 0
f_327(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v30, 0, v2, v4, v6, v8, v10, v12, v19, 3, 7, 8, 5) -> f_330(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v30, 0, v2, v4, v6, v8, v10, v12, v19, 3, 7, 8, 5) :|: 0 = 0
f_328(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_331(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: v28 = v16 + 4 * v13
f_331(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_332(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 4 + v29 = v28
f_332(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_333(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_333(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_334(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_334(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_335(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_335(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_336(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: v33 = v24 + v31
f_336(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_337(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: TRUE
f_337(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_338(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_338(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_339(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v33, v35, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: v35 = 4 + v16 && 5 <= v35
f_339(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v33, v35, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_340(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v33, v35, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: TRUE
f_340(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v33, v35, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_341(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v33, v35, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: TRUE
f_341(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v33, v35, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_342(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v24, v28, v29, v31, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_342(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v24, v28, v29, v31, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_343(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: TRUE
f_343(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_344(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_344(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_345(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_345(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_346(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_346(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_347(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: v28 = v16 + 4 * v13
f_347(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_348(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 4 + v29 = v28
f_348(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_349(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: TRUE
f_349(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_350(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: v43 != v45
f_349(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_351(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v45, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: v43 = v45
f_350(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_352(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_351(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v45, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_353(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v45, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_352(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_354(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: TRUE
f_353(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v45, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_355(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v45, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: TRUE
f_354(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_356(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_355(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v45, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_357(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v45, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: TRUE
f_356(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_358(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_357(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v45, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_359(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v45, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: TRUE
f_358(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_360(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_359(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v45, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_361(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v45, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_360(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_362(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: v28 = v16 + 4 * v13
f_362(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_363(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 4 + v29 = v28
f_363(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_364(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_364(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_365(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_365(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_366(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_366(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_367(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v59, v2, v4, v6, v8, v10, v12, v17, v33, 3, 7, 4, 8, 5, 6, 2) :|: v59 = v43 + v45
f_367(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v59, v2, v4, v6, v8, v10, v12, v17, v33, 3, 7, 4, 8, 5, 6, 2) -> f_368(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v59, v2, v4, v6, v8, v10, v12, v17, v33, 3, 7, 4, 8, 5, 6, 2) :|: TRUE
f_368(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v59, v2, v4, v6, v8, v10, v12, v17, v33, 3, 7, 4, 8, 5, 6, 2) -> f_369(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v59, v61, v2, v4, v6, v8, v10, v12, v17, v33, 3, 7, 4, 8, 5, 6, 2) :|: TRUE
f_369(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v59, v61, v2, v4, v6, v8, v10, v12, v17, v33, 3, 7, 4, 8, 5, 6, 2) -> f_370(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v59, v61, v63, v2, v4, v6, v8, v10, v12, v17, v33, 3, 7, 4, 8, 5, 6, 2) :|: v63 = 4 + v61 && 4 <= v63
f_370(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v59, v61, v63, v2, v4, v6, v8, v10, v12, v17, v33, 3, 7, 4, 8, 5, 6, 2) -> f_371(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v59, v61, v63, v2, v4, v6, v8, v10, v12, v17, v33, 3, 7, 4, 8, 5, 6, 2) :|: TRUE
f_371(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v59, v61, v63, v2, v4, v6, v8, v10, v12, v17, v33, 3, 7, 4, 8, 5, 6, 2) -> f_372(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v59, v61, v63, v2, v4, v6, v8, v10, v12, v17, v33, 3, 7, 4, 8, 5, 6, 2) :|: TRUE
f_372(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v59, v61, v63, v2, v4, v6, v8, v10, v12, v17, v33, 3, 7, 4, 8, 5, 6, 2) -> f_373(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v59, v61, v63, v2, v4, v6, v8, v10, v12, v17, v33, 3, 7, 4, 8, 5, 6, 2) :|: TRUE
f_373(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v59, v61, v63, v2, v4, v6, v8, v10, v12, v17, v33, 3, 7, 4, 8, 5, 6, 2) -> f_405(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v16, v13, v28, v29, v45, v59, v61, v63, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5) :|: TRUE
f_405(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v172, v173, v174, v175, v176, v177, v178, v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_406(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v173, v174, v175, v176, v177, v178, v172, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
f_406(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v173, v174, v175, v176, v177, v178, v172, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_407(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_407(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_408(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v175, v176, v177, v178, v174, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_408(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v175, v176, v177, v178, v174, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_409(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v175, v176, v177, v178, v174, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_409(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v175, v176, v177, v178, v174, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_410(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v176, v177, v178, v174, v175, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
f_410(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v176, v177, v178, v174, v175, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_411(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v177, v178, v174, v175, v176, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: v195 = v191 + 4 * v193
f_411(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v177, v178, v174, v175, v176, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_412(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v178, v174, v175, v176, v177, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 4 + v196 = v195 && 4 <= v195
f_412(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v178, v174, v175, v176, v177, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_413(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_413(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_414(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: v189 != v197
f_413(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_415(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v197, v191, v193, v195, v196, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: v189 = v197
f_414(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_416(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
f_415(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v197, v191, v193, v195, v196, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_417(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v197, v191, v193, v195, v196, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
f_416(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_418(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_417(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v197, v191, v193, v195, v196, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_419(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v197, v191, v193, v195, v196, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_418(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_420(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
f_419(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v197, v191, v193, v195, v196, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_421(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v197, v191, v193, v195, v196, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_420(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_422(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
f_421(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v197, v191, v193, v195, v196, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_423(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v197, v191, v193, v195, v196, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_422(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_424(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
f_423(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v197, v191, v193, v195, v196, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_425(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v197, v191, v193, v195, v196, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
f_424(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_426(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: v195 = v191 + 4 * v193
f_426(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_427(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 4 + v196 = v195
f_427(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_428(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
f_428(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_429(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
f_429(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_430(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
f_430(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_431(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: v244 = v189 + v197
f_431(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_432(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_432(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_433(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v246, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_433(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v246, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_434(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v246, v248, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: v248 = 4 + v246 && 4 <= v248
f_434(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v246, v248, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_435(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v246, v248, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_435(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v246, v248, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_436(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v246, v248, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_436(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v246, v248, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_405(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v246, v248, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
Combined rules. Obtained 11 rulesP rules:
f_187 -> f_413(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, 4 * v13:0, v16:0, 1, 4 + v61:0, v189:0, v191:0, v193:0, v191:0 + 4 * v193:0, v196:0, v197:0, v16:0, v13:0, 4 + v29:0, v29:0, v45:0, 4 + v16:0, v43:0, v43:0 + v45:0, v61:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v17:0, 3, 7, 4, 8, 5) :|: v29:0 > 1 && v17:0 > 4 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v16:0 + 4 * v13:0 = 1 + v17:0 && v16:0 > 0 && 4 * v13:0 > 3 && v29:0 > v16:0 && v31:0 > v24:0 && v16:0 + 4 * v13:0 = 4 + v29:0 && v45:0 > v43:0 && v61:0 > -1 && v191:0 + 4 * v193:0 = 4 + v196:0 && v191:0 + 4 * v193:0 > 3
f_187 -> f_413(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, 4 * v13:0, v16:0, 1, 4 + v61:0, v189:0, v191:0, v193:0, v191:0 + 4 * v193:0, v196:0, v197:0, v16:0, v13:0, 4 + v29:0, v29:0, v45:0, 4 + v16:0, v43:0, v43:0 + v45:0, v61:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v17:0, 3, 7, 4, 8, 5) :|: v29:0 > 1 && v17:0 > 4 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v16:0 + 4 * v13:0 = 1 + v17:0 && v16:0 > 0 && 4 * v13:0 > 3 && v29:0 > v16:0 && v31:0 > v24:0 && v16:0 + 4 * v13:0 = 4 + v29:0 && v45:0 < v43:0 && v61:0 > -1 && v191:0 + 4 * v193:0 = 4 + v196:0 && v191:0 + 4 * v193:0 > 3
f_187 -> f_413(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, 4 * v13:0, v16:0, 1, 4 + v61:0, v189:0, v191:0, v193:0, v191:0 + 4 * v193:0, v196:0, v197:0, v16:0, v13:0, 4 + v29:0, v29:0, v45:0, 4 + v16:0, v43:0, v43:0 + v45:0, v61:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v17:0, 3, 7, 4, 8, 5) :|: v29:0 > 1 && v17:0 > 4 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v16:0 + 4 * v13:0 = 1 + v17:0 && v16:0 > 0 && 4 * v13:0 > 3 && v29:0 > v16:0 && v31:0 < v24:0 && v16:0 + 4 * v13:0 = 4 + v29:0 && v45:0 > v43:0 && v61:0 > -1 && v191:0 + 4 * v193:0 = 4 + v196:0 && v191:0 + 4 * v193:0 > 3
f_187 -> f_413(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, 4 * v13:0, v16:0, 1, 4 + v61:0, v189:0, v191:0, v193:0, v191:0 + 4 * v193:0, v196:0, v197:0, v16:0, v13:0, 4 + v29:0, v29:0, v45:0, 4 + v16:0, v43:0, v43:0 + v45:0, v61:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v17:0, 3, 7, 4, 8, 5) :|: v29:0 > 1 && v17:0 > 4 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v16:0 + 4 * v13:0 = 1 + v17:0 && v16:0 > 0 && 4 * v13:0 > 3 && v29:0 > v16:0 && v31:0 < v24:0 && v16:0 + 4 * v13:0 = 4 + v29:0 && v45:0 < v43:0 && v61:0 > -1 && v191:0 + 4 * v193:0 = 4 + v196:0 && v191:0 + 4 * v193:0 > 3
f_413(v161:0, v162:0, v163:0, v164:0, v165:0, v166:0, v167:0, 0, v169:0, v170:0, 1, v181:0, v189:0, v191:0, v193:0, 4 + v196:0, v196:0, v197:0, v174:0, v175:0, v176:0, v177:0, v178:0, v172:0, v173:0, v179:0, v180:0, v182:0, v183:0, v184:0, v185:0, v186:0, v187:0, v188:0, 3, 7, 4, 8, 5) -> f_413(v161:0, v162:0, v163:0, v164:0, v165:0, v166:0, v167:0, 0, v169:0, v170:0, 1, 4 + v246:0, v189:1, v191:1, v193:1, v191:1 + 4 * v193:1, v196:1, v197:1, v191:0, v193:0, 4 + v196:0, v196:0, v197:0, v181:0, v189:0, v189:0 + v197:0, v246:0, v182:0, v183:0, v184:0, v185:0, v186:0, v187:0, v188:0, 3, 7, 4, 8, 5) :|: v197:0 > v189:0 && v191:0 + 4 * v193:0 = 4 + v196:0 && v246:0 > -1 && v191:1 + 4 * v193:1 = 4 + v196:1 && v191:1 + 4 * v193:1 > 3
f_413(v161:0, v162:0, v163:0, v164:0, v165:0, v166:0, v167:0, 0, v169:0, v170:0, 1, v181:0, v189:0, v191:0, v193:0, 4 + v196:0, v196:0, v197:0, v174:0, v175:0, v176:0, v177:0, v178:0, v172:0, v173:0, v179:0, v180:0, v182:0, v183:0, v184:0, v185:0, v186:0, v187:0, v188:0, 3, 7, 4, 8, 5) -> f_413(v161:0, v162:0, v163:0, v164:0, v165:0, v166:0, v167:0, 0, v169:0, v170:0, 1, 4 + v246:0, v189:1, v191:1, v193:1, v191:1 + 4 * v193:1, v196:1, v197:1, v191:0, v193:0, 4 + v196:0, v196:0, v197:0, v181:0, v189:0, v189:0 + v197:0, v246:0, v182:0, v183:0, v184:0, v185:0, v186:0, v187:0, v188:0, 3, 7, 4, 8, 5) :|: v197:0 < v189:0 && v191:0 + 4 * v193:0 = 4 + v196:0 && v246:0 > -1 && v191:1 + 4 * v193:1 = 4 + v196:1 && v191:1 + 4 * v193:1 > 3
f_187 -> f_361(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, 4 * v13:0, v16:0, 1, 4 + v16:0, v43:0, 4 + v29:0, v29:0, v31:0, v24:0, v24:0 + v31:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v17:0, 3, 7, 4, 8, 5, 6, 2) :|: v29:0 > 1 && v17:0 > 4 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v16:0 + 4 * v13:0 = 1 + v17:0 && v16:0 > 0 && 4 * v13:0 > 3 && v29:0 > v16:0 && v31:0 > v24:0 && v16:0 + 4 * v13:0 = 4 + v29:0
f_187 -> f_361(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, 4 * v13:0, v16:0, 1, 4 + v16:0, v43:0, 4 + v29:0, v29:0, v31:0, v24:0, v24:0 + v31:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v17:0, 3, 7, 4, 8, 5, 6, 2) :|: v29:0 > 1 && v17:0 > 4 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v16:0 + 4 * v13:0 = 1 + v17:0 && v16:0 > 0 && 4 * v13:0 > 3 && v29:0 > v16:0 && v31:0 < v24:0 && v16:0 + 4 * v13:0 = 4 + v29:0
f_187 -> f_329(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, 4 * v13:0, v16:0, 1, v24:0, 4 + v29:0, v29:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v17:0, 3, 7, 4, 8, 5) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v16:0 + 4 * v13:0 = 1 + v17:0 && v16:0 > 0 && 4 * v13:0 > 3 && v17:0 > 3 && v29:0 > 0 && v16:0 + 4 * v13:0 = 4 + v29:0
f_413(v161:0, v162:0, v163:0, v164:0, v165:0, v166:0, v167:0, 0, v169:0, v170:0, 1, v181:0, v189:0, v191:0, v193:0, v195:0, v196:0, v189:0, v174:0, v175:0, v176:0, v177:0, v178:0, v172:0, v173:0, v179:0, v180:0, v182:0, v183:0, v184:0, v185:0, v186:0, v187:0, v188:0, 3, 7, 4, 8, 5) -> f_425(v161:0, v162:0, v163:0, v164:0, v165:0, v166:0, v167:0, 0, v169:0, v170:0, 1, v181:0, v189:0, v191:0, v193:0, v195:0, v196:0, v174:0, v175:0, v176:0, v177:0, v178:0, v172:0, v173:0, v179:0, v180:0, v182:0, v183:0, v184:0, v185:0, v186:0, v187:0, v188:0, 3, 7, 4, 8, 5) :|: TRUE
f_187 -> f_330(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 1, 4, v18:0, v26:0, 4 + v18:0, 0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, 3 + v18:0, 3, 7, 8, 5) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 < 1 && v18:0 > 0
Filtered unneeded arguments:
   f_413(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39) -> f_413(x13, x14, x15, x16, x17, x18)
Removed division, modulo operations, cleaned up constraints. Obtained 8 rules.P rules:
f_187 -> f_413(v189:0, v191:0, v193:0, v191:0 + 4 * v193:0, v196:0, v197:0) :|: v191:0 + 4 * v193:0 = 4 + v196:0 && v191:0 + 4 * v193:0 > 3
f_413(v189:0, v191:0, v193:0, sum~cons_4~v196:0, v196:0, v197:0) -> f_413(v189:1, v191:1, v193:1, v191:1 + 4 * v193:1, v196:1, v197:1) :|: v191:0 + 4 * v193:0 = 4 + v196:0 && v197:0 > v189:0 && v191:1 + 4 * v193:1 > 3 && v191:1 + 4 * v193:1 = 4 + v196:1 && sum~cons_4~v196:0 = 4 + v196:0
f_413(v189:0, v191:0, v193:0, sum~cons_4~v196:0, v196:0, v197:0) -> f_413(v189:1, v191:1, v193:1, v191:1 + 4 * v193:1, v196:1, v197:1) :|: v191:0 + 4 * v193:0 = 4 + v196:0 && v197:0 < v189:0 && v191:1 + 4 * v193:1 > 3 && v191:1 + 4 * v193:1 = 4 + v196:1 && sum~cons_4~v196:0 = 4 + v196:0
f_187 -> f_361(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, 4 * v13:0, v16:0, 1, 4 + v16:0, v43:0, 4 + v29:0, v29:0, v31:0, v24:0, v24:0 + v31:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v17:0, 3, 7, 4, 8, 5, 6, 2) :|: v17:0 > 4 && v29:0 > 1 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v16:0 + 4 * v13:0 = 1 + v17:0 && v16:0 > 0 && 4 * v13:0 > 3 && v29:0 > v16:0 && v16:0 + 4 * v13:0 = 4 + v29:0 && v31:0 > v24:0
f_187 -> f_361(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, 4 * v13:0, v16:0, 1, 4 + v16:0, v43:0, 4 + v29:0, v29:0, v31:0, v24:0, v24:0 + v31:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v17:0, 3, 7, 4, 8, 5, 6, 2) :|: v17:0 > 4 && v29:0 > 1 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v16:0 + 4 * v13:0 = 1 + v17:0 && v16:0 > 0 && 4 * v13:0 > 3 && v29:0 > v16:0 && v16:0 + 4 * v13:0 = 4 + v29:0 && v31:0 < v24:0
f_187 -> f_329(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, 4 * v13:0, v16:0, 1, v24:0, 4 + v29:0, v29:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v17:0, 3, 7, 4, 8, 5) :|: v1:0 > 0 && v3:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v16:0 + 4 * v13:0 = 1 + v17:0 && v16:0 > 0 && 4 * v13:0 > 3 && v17:0 > 3 && v16:0 + 4 * v13:0 = 4 + v29:0 && v29:0 > 0
f_413(v189:0, v191:0, v193:0, v195:0, v196:0, v189:01) -> f_425(v161:0, v162:0, v163:0, v164:0, v165:0, v166:0, v167:0, 0, v169:0, v170:0, 1, v181:0, v189:0, v191:0, v193:0, v195:0, v196:0, v174:0, v175:0, v176:0, v177:0, v178:0, v172:0, v173:0, v179:0, v180:0, v182:0, v183:0, v184:0, v185:0, v186:0, v187:0, v188:0, 3, 7, 4, 8, 5) :|: TRUE && v189:0 = v189:01
f_187 -> f_330(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 1, 4, v18:0, v26:0, 4 + v18:0, 0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, 3 + v18:0, 3, 7, 8, 5) :|: v1:0 > 0 && v3:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v18:0 > 0 && v13:0 < 1

----------------------------------------

(22)
Obligation:
Rules:
f_187 -> f_413(v189:0, v191:0, v193:0, v191:0 + 4 * v193:0, v196:0, v197:0) :|: v191:0 + 4 * v193:0 = 4 + v196:0 && v191:0 + 4 * v193:0 > 3
f_413(x, x1, x2, x3, x4, x5) -> f_413(x6, x7, x8, x7 + 4 * x8, x9, x10) :|: x1 + 4 * x2 = 4 + x4 && x5 > x && x7 + 4 * x8 > 3 && x7 + 4 * x8 = 4 + x9 && x3 = 4 + x4
f_413(x11, x12, x13, x14, x15, x16) -> f_413(x17, x18, x19, x18 + 4 * x19, x20, x21) :|: x12 + 4 * x13 = 4 + x15 && x16 < x11 && x18 + 4 * x19 > 3 && x18 + 4 * x19 = 4 + x20 && x14 = 4 + x15
f_187 -> f_361(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, 4 * v13:0, v16:0, 1, 4 + v16:0, v43:0, 4 + v29:0, v29:0, v31:0, v24:0, v24:0 + v31:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v17:0, 3, 7, 4, 8, 5, 6, 2) :|: v17:0 > 4 && v29:0 > 1 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v16:0 + 4 * v13:0 = 1 + v17:0 && v16:0 > 0 && 4 * v13:0 > 3 && v29:0 > v16:0 && v16:0 + 4 * v13:0 = 4 + v29:0 && v31:0 > v24:0
f_187 -> f_361(x22, x23, x24, x25, x26, x27, x28, 0, 4 * x28, x29, 1, 4 + x29, x30, 4 + x31, x31, x32, x33, x33 + x32, 3 + x22, 3 + x23, 3 + x24, 3 + x25, 7 + x26, 7 + x27, x34, 3, 7, 4, 8, 5, 6, 2) :|: x34 > 4 && x31 > 1 && x23 > 0 && x22 > 0 && x24 > 0 && x25 > 0 && x26 > 0 && x27 > 0 && x28 > 0 && x29 + 4 * x28 = 1 + x34 && x29 > 0 && 4 * x28 > 3 && x31 > x29 && x29 + 4 * x28 = 4 + x31 && x32 < x33
f_187 -> f_329(x35, x36, x37, x38, x39, x40, x41, 0, 4 * x41, x42, 1, x43, 4 + x44, x44, 3 + x35, 3 + x36, 3 + x37, 3 + x38, 7 + x39, 7 + x40, x45, 3, 7, 4, 8, 5) :|: x35 > 0 && x36 > 0 && x37 > 0 && x38 > 0 && x39 > 0 && x40 > 0 && x41 > 0 && x42 + 4 * x41 = 1 + x45 && x42 > 0 && 4 * x41 > 3 && x45 > 3 && x42 + 4 * x41 = 4 + x44 && x44 > 0
f_413(x46, x47, x48, x49, x50, x51) -> f_425(x52, x53, x54, x55, x56, x57, x58, 0, x59, x60, 1, x61, x46, x47, x48, x49, x50, x62, x63, x64, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74, x75, x76, x77, 3, 7, 4, 8, 5) :|: TRUE && x46 = x51
f_187 -> f_330(x78, x79, x80, x81, x82, x83, x84, 1, 4, x85, x86, 4 + x85, 0, 3 + x78, 3 + x79, 3 + x80, 3 + x81, 7 + x82, 7 + x83, 3 + x85, 3, 7, 8, 5) :|: x78 > 0 && x79 > 0 && x80 > 0 && x81 > 0 && x82 > 0 && x83 > 0 && x85 > 0 && x84 < 1
Start term: f_187

----------------------------------------

(23) IRSNoOverapproximation (EQUIVALENT)
Proof of non-termination is aborted since the IRSProblem over-approximates
----------------------------------------

(24)
MAYBE

----------------------------------------

(25) SEGraph to IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 158 rulesP rules:
f_187 -> f_188(v1, v2, 3, 1, 4) :|: 1 <= v1 && v2 = 3 + v1 && 4 <= v2
f_188(v1, v2, 3, 1, 4) -> f_189(v1, v3, v2, v4, 3, 1, 4) :|: 1 <= v3 && v4 = 3 + v3 && 4 <= v4
f_189(v1, v3, v2, v4, 3, 1, 4) -> f_190(v1, v3, v5, v2, v4, v6, 3, 1, 4) :|: 1 <= v5 && v6 = 3 + v5 && 4 <= v6
f_190(v1, v3, v5, v2, v4, v6, 3, 1, 4) -> f_191(v1, v3, v5, v7, v2, v4, v6, v8, 3, 1, 4) :|: 1 <= v7 && v8 = 3 + v7 && 4 <= v8
f_191(v1, v3, v5, v7, v2, v4, v6, v8, 3, 1, 4) -> f_192(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 3, 7, 1, 4, 8) :|: 1 <= v9 && v10 = 7 + v9 && 8 <= v10
f_192(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 3, 7, 1, 4, 8) -> f_193(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) :|: 1 <= v11 && v12 = 7 + v11 && 8 <= v12
f_193(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) -> f_194(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) :|: TRUE
f_194(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_195(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) :|: TRUE
f_195(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_196(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) :|: TRUE
f_196(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_197(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) :|: TRUE
f_197(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_198(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) :|: TRUE
f_198(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_199(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) :|: TRUE
f_199(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_200(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) :|: 0 = 0
f_200(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_201(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) :|: v13 < 1
f_200(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_202(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) :|: 1 <= v13
f_201(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_203(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: 0 = 0
f_202(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_204(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) :|: 0 = 0
f_203(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_205(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: TRUE
f_204(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) -> f_206(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) :|: TRUE
f_205(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_207(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: TRUE
f_206(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) -> f_208(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) :|: TRUE
f_207(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_209(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: TRUE
f_208(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) -> f_210(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) :|: 0 = 0
f_209(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_211(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: TRUE
f_210(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) -> f_212(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) :|: 0 = 0
f_211(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_213(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: 0 = 0
f_212(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) -> f_214(v1, v3, v5, v7, v9, v11, v13, 0, v15, v2, v4, v6, v8, v10, v12, 3, 7, 4, 1, 8) :|: v15 = 4 * v13 && 4 <= v15
f_213(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_215(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: 0 = 0
f_214(v1, v3, v5, v7, v9, v11, v13, 0, v15, v2, v4, v6, v8, v10, v12, 3, 7, 4, 1, 8) -> f_277(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, v2, v4, v6, v8, v10, v12, v17, 3, 7, 1, 4, 8) :|: 1 <= v16 && v16 + v15 = 1 + v17 && 4 <= v17
f_215(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_278(v1, v3, v5, v7, v9, v11, v13, 1, 4, v2, v4, v6, v8, v10, v12, 0, 3, 7, 8) :|: 0 = 0
f_277(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, v2, v4, v6, v8, v10, v12, v17, 3, 7, 1, 4, 8) -> f_279(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, v2, v4, v6, v8, v10, v12, v17, 3, 7, 1, 4, 8) :|: 0 = 0
f_278(v1, v3, v5, v7, v9, v11, v13, 1, 4, v2, v4, v6, v8, v10, v12, 0, 3, 7, 8) -> f_280(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) :|: 1 <= v18 && v19 = 3 + v18 && 4 <= v19
f_279(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, v2, v4, v6, v8, v10, v12, v17, 3, 7, 1, 4, 8) -> f_281(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, v2, v4, v6, v8, v10, v12, v17, 3, 7, 1, 4, 8) :|: TRUE
f_280(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) -> f_282(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) :|: 0 = 0
f_281(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, v2, v4, v6, v8, v10, v12, v17, 3, 7, 1, 4, 8) -> f_283(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, v2, v4, v6, v8, v10, v12, v17, 3, 7, 1, 4, 8) :|: 0 = 0
f_282(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) -> f_284(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) :|: TRUE
f_283(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, v2, v4, v6, v8, v10, v12, v17, 3, 7, 1, 4, 8) -> f_285(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) :|: 0 = 0
f_284(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) -> f_286(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) :|: 0 = 0
f_285(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) -> f_287(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) :|: TRUE
f_286(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) -> f_288(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) :|: 0 = 0
f_287(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) -> f_289(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) :|: TRUE
f_288(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) -> f_290(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) :|: TRUE
f_289(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) -> f_291(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) :|: 0 = 0
f_290(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) -> f_292(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) :|: TRUE
f_291(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) -> f_293(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) :|: TRUE
f_292(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) -> f_294(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) :|: 0 = 0
f_293(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) -> f_295(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) :|: TRUE
f_294(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) -> f_296(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) :|: TRUE
f_295(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) -> f_297(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) :|: 0 = 0
f_296(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) -> f_298(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) :|: TRUE
f_297(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) -> f_299(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) :|: TRUE
f_298(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) -> f_300(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) :|: 0 = 0
f_299(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) -> f_301(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) :|: 0 = 0
f_300(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) -> f_302(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) :|: TRUE
f_301(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) -> f_303(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) :|: 0 = 0
f_302(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) -> f_304(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) :|: 0 = 0
f_303(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) -> f_305(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) :|: 0 = 0
f_304(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) -> f_306(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) :|: 0 = 0
f_305(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8) -> f_307(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5) :|: v28 = v16 + 4 * v13 && 5 <= v28
f_306(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) -> f_308(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) :|: 0 = 0
f_307(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5) -> f_309(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5) :|: 4 + v29 = v28 && 1 <= v29
f_308(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8) -> f_310(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v30, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8, 5) :|: v30 = 4 + v18 && 5 <= v30
f_309(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5) -> f_311(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5) :|: TRUE
f_310(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v30, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8, 5) -> f_312(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v30, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8, 5) :|: 4 + v18 = v30
f_311(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5) -> f_313(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: v24 != v31 && v16 < v29 && 2 <= v29 && 6 <= v28 && 5 <= v17
f_311(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5) -> f_314(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v31, v28, v29, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5) :|: v24 = v31
f_312(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v30, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8, 5) -> f_315(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v30, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8, 5) :|: 0 = 0
f_313(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_316(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_314(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v31, v28, v29, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5) -> f_317(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v31, v28, v29, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5) :|: 0 = 0
f_315(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v30, v2, v4, v6, v8, v10, v12, v19, 0, 3, 7, 8, 5) -> f_318(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v30, 0, v2, v4, v6, v8, v10, v12, v19, 3, 7, 8, 5) :|: 0 = 0
f_316(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_319(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: TRUE
f_317(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v31, v28, v29, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5) -> f_320(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v31, v28, v29, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5) :|: TRUE
f_318(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v30, 0, v2, v4, v6, v8, v10, v12, v19, 3, 7, 8, 5) -> f_321(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v30, 0, v2, v4, v6, v8, v10, v12, v19, 3, 7, 8, 5) :|: TRUE
f_319(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_322(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_320(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v31, v28, v29, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5) -> f_323(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v31, v28, v29, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5) :|: TRUE
f_321(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v30, 0, v2, v4, v6, v8, v10, v12, v19, 3, 7, 8, 5) -> f_324(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v30, 0, v2, v4, v6, v8, v10, v12, v19, 3, 7, 8, 5) :|: TRUE
f_322(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_325(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_323(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v31, v28, v29, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5) -> f_326(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v31, v28, v29, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5) :|: TRUE
f_324(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v30, 0, v2, v4, v6, v8, v10, v12, v19, 3, 7, 8, 5) -> f_327(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v30, 0, v2, v4, v6, v8, v10, v12, v19, 3, 7, 8, 5) :|: TRUE
f_325(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_328(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_326(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v31, v28, v29, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5) -> f_329(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v31, v28, v29, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5) :|: 0 = 0
f_327(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v30, 0, v2, v4, v6, v8, v10, v12, v19, 3, 7, 8, 5) -> f_330(v1, v3, v5, v7, v9, v11, v13, 1, 4, v18, v26, v30, 0, v2, v4, v6, v8, v10, v12, v19, 3, 7, 8, 5) :|: 0 = 0
f_328(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_331(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: v28 = v16 + 4 * v13
f_331(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_332(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 4 + v29 = v28
f_332(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_333(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_333(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_334(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_334(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_335(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_335(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_336(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: v33 = v24 + v31
f_336(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_337(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: TRUE
f_337(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_338(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_338(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_339(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v33, v35, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: v35 = 4 + v16 && 5 <= v35
f_339(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v33, v35, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_340(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v33, v35, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: TRUE
f_340(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v33, v35, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_341(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v33, v35, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: TRUE
f_341(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v24, v28, v29, v31, v33, v35, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_342(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v24, v28, v29, v31, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_342(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v24, v28, v29, v31, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_343(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: TRUE
f_343(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_344(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_344(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_345(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_345(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_346(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_346(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_347(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: v28 = v16 + 4 * v13
f_347(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_348(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 4 + v29 = v28
f_348(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_349(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: TRUE
f_349(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_350(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: v43 != v45
f_349(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_351(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v45, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: v43 = v45
f_350(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_352(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_351(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v45, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_353(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v45, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_352(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_354(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: TRUE
f_353(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v45, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_355(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v45, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: TRUE
f_354(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_356(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_355(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v45, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_357(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v45, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: TRUE
f_356(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_358(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_357(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v45, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_359(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v45, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: TRUE
f_358(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_360(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_359(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v45, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_361(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v45, v28, v29, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_360(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_362(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: v28 = v16 + 4 * v13
f_362(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_363(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 4 + v29 = v28
f_363(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v31, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_364(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_364(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_365(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_365(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v24, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_366(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) :|: 0 = 0
f_366(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v33, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5, 6, 2) -> f_367(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v59, v2, v4, v6, v8, v10, v12, v17, v33, 3, 7, 4, 8, 5, 6, 2) :|: v59 = v43 + v45
f_367(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v59, v2, v4, v6, v8, v10, v12, v17, v33, 3, 7, 4, 8, 5, 6, 2) -> f_368(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v59, v2, v4, v6, v8, v10, v12, v17, v33, 3, 7, 4, 8, 5, 6, 2) :|: TRUE
f_368(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v59, v2, v4, v6, v8, v10, v12, v17, v33, 3, 7, 4, 8, 5, 6, 2) -> f_369(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v59, v61, v2, v4, v6, v8, v10, v12, v17, v33, 3, 7, 4, 8, 5, 6, 2) :|: TRUE
f_369(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v59, v61, v2, v4, v6, v8, v10, v12, v17, v33, 3, 7, 4, 8, 5, 6, 2) -> f_370(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v59, v61, v63, v2, v4, v6, v8, v10, v12, v17, v33, 3, 7, 4, 8, 5, 6, 2) :|: v63 = 4 + v61 && 4 <= v63
f_370(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v59, v61, v63, v2, v4, v6, v8, v10, v12, v17, v33, 3, 7, 4, 8, 5, 6, 2) -> f_371(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v59, v61, v63, v2, v4, v6, v8, v10, v12, v17, v33, 3, 7, 4, 8, 5, 6, 2) :|: TRUE
f_371(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v59, v61, v63, v2, v4, v6, v8, v10, v12, v17, v33, 3, 7, 4, 8, 5, 6, 2) -> f_372(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v59, v61, v63, v2, v4, v6, v8, v10, v12, v17, v33, 3, 7, 4, 8, 5, 6, 2) :|: TRUE
f_372(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v59, v61, v63, v2, v4, v6, v8, v10, v12, v17, v33, 3, 7, 4, 8, 5, 6, 2) -> f_373(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v59, v61, v63, v2, v4, v6, v8, v10, v12, v17, v33, 3, 7, 4, 8, 5, 6, 2) :|: TRUE
f_373(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v28, v29, v45, v59, v61, v63, v2, v4, v6, v8, v10, v12, v17, v33, 3, 7, 4, 8, 5, 6, 2) -> f_405(v1, v3, v5, v7, v9, v11, v13, 0, v15, v16, 1, v35, v43, v16, v13, v28, v29, v45, v59, v61, v63, v2, v4, v6, v8, v10, v12, v17, 3, 7, 4, 8, 5) :|: TRUE
f_405(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v172, v173, v174, v175, v176, v177, v178, v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_406(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v173, v174, v175, v176, v177, v178, v172, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
f_406(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v173, v174, v175, v176, v177, v178, v172, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_407(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_407(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_408(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v175, v176, v177, v178, v174, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_408(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v175, v176, v177, v178, v174, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_409(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v175, v176, v177, v178, v174, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_409(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v175, v176, v177, v178, v174, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_410(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v176, v177, v178, v174, v175, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
f_410(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v176, v177, v178, v174, v175, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_411(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v177, v178, v174, v175, v176, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: v195 = v191 + 4 * v193
f_411(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v177, v178, v174, v175, v176, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_412(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v178, v174, v175, v176, v177, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 4 + v196 = v195 && 4 <= v195
f_412(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v178, v174, v175, v176, v177, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_413(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_413(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_414(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: v189 != v197
f_413(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_415(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v197, v191, v193, v195, v196, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: v189 = v197
f_414(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_416(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
f_415(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v197, v191, v193, v195, v196, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_417(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v197, v191, v193, v195, v196, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
f_416(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_418(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_417(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v197, v191, v193, v195, v196, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_419(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v197, v191, v193, v195, v196, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_418(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_420(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
f_419(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v197, v191, v193, v195, v196, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_421(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v197, v191, v193, v195, v196, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_420(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_422(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
f_421(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v197, v191, v193, v195, v196, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_423(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v197, v191, v193, v195, v196, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_422(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_424(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
f_423(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v197, v191, v193, v195, v196, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_425(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v197, v191, v193, v195, v196, v174, v175, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
f_424(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v176, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_426(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: v195 = v191 + 4 * v193
f_426(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v177, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_427(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 4 + v196 = v195
f_427(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v178, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_428(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
f_428(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v172, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_429(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
f_429(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v173, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_430(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: 0 = 0
f_430(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v179, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_431(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: v244 = v189 + v197
f_431(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_432(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_432(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v180, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_433(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v246, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_433(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v246, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_434(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v246, v248, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: v248 = 4 + v246 && 4 <= v248
f_434(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v246, v248, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_435(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v246, v248, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_435(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v246, v248, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_436(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v246, v248, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
f_436(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v246, v248, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) -> f_405(v161, v162, v163, v164, v165, v166, v167, 0, v169, v170, 1, v181, v189, v191, v193, v195, v196, v197, v244, v246, v248, v182, v183, v184, v185, v186, v187, v188, 3, 7, 4, 8, 5) :|: TRUE
Combined rules. Obtained 11 rulesP rules:
f_187 -> f_413(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, 4 * v13:0, v16:0, 1, 4 + v61:0, v189:0, v191:0, v193:0, v191:0 + 4 * v193:0, v196:0, v197:0, v16:0, v13:0, 4 + v29:0, v29:0, v45:0, 4 + v16:0, v43:0, v43:0 + v45:0, v61:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v17:0, 3, 7, 4, 8, 5) :|: v29:0 > 1 && v17:0 > 4 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v16:0 + 4 * v13:0 = 1 + v17:0 && v16:0 > 0 && 4 * v13:0 > 3 && v29:0 > v16:0 && v31:0 > v24:0 && v16:0 + 4 * v13:0 = 4 + v29:0 && v45:0 > v43:0 && v61:0 > -1 && v191:0 + 4 * v193:0 = 4 + v196:0 && v191:0 + 4 * v193:0 > 3
f_187 -> f_413(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, 4 * v13:0, v16:0, 1, 4 + v61:0, v189:0, v191:0, v193:0, v191:0 + 4 * v193:0, v196:0, v197:0, v16:0, v13:0, 4 + v29:0, v29:0, v45:0, 4 + v16:0, v43:0, v43:0 + v45:0, v61:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v17:0, 3, 7, 4, 8, 5) :|: v29:0 > 1 && v17:0 > 4 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v16:0 + 4 * v13:0 = 1 + v17:0 && v16:0 > 0 && 4 * v13:0 > 3 && v29:0 > v16:0 && v31:0 > v24:0 && v16:0 + 4 * v13:0 = 4 + v29:0 && v45:0 < v43:0 && v61:0 > -1 && v191:0 + 4 * v193:0 = 4 + v196:0 && v191:0 + 4 * v193:0 > 3
f_187 -> f_413(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, 4 * v13:0, v16:0, 1, 4 + v61:0, v189:0, v191:0, v193:0, v191:0 + 4 * v193:0, v196:0, v197:0, v16:0, v13:0, 4 + v29:0, v29:0, v45:0, 4 + v16:0, v43:0, v43:0 + v45:0, v61:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v17:0, 3, 7, 4, 8, 5) :|: v29:0 > 1 && v17:0 > 4 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v16:0 + 4 * v13:0 = 1 + v17:0 && v16:0 > 0 && 4 * v13:0 > 3 && v29:0 > v16:0 && v31:0 < v24:0 && v16:0 + 4 * v13:0 = 4 + v29:0 && v45:0 > v43:0 && v61:0 > -1 && v191:0 + 4 * v193:0 = 4 + v196:0 && v191:0 + 4 * v193:0 > 3
f_187 -> f_413(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, 4 * v13:0, v16:0, 1, 4 + v61:0, v189:0, v191:0, v193:0, v191:0 + 4 * v193:0, v196:0, v197:0, v16:0, v13:0, 4 + v29:0, v29:0, v45:0, 4 + v16:0, v43:0, v43:0 + v45:0, v61:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v17:0, 3, 7, 4, 8, 5) :|: v29:0 > 1 && v17:0 > 4 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v16:0 + 4 * v13:0 = 1 + v17:0 && v16:0 > 0 && 4 * v13:0 > 3 && v29:0 > v16:0 && v31:0 < v24:0 && v16:0 + 4 * v13:0 = 4 + v29:0 && v45:0 < v43:0 && v61:0 > -1 && v191:0 + 4 * v193:0 = 4 + v196:0 && v191:0 + 4 * v193:0 > 3
f_413(v161:0, v162:0, v163:0, v164:0, v165:0, v166:0, v167:0, 0, v169:0, v170:0, 1, v181:0, v189:0, v191:0, v193:0, 4 + v196:0, v196:0, v197:0, v174:0, v175:0, v176:0, v177:0, v178:0, v172:0, v173:0, v179:0, v180:0, v182:0, v183:0, v184:0, v185:0, v186:0, v187:0, v188:0, 3, 7, 4, 8, 5) -> f_413(v161:0, v162:0, v163:0, v164:0, v165:0, v166:0, v167:0, 0, v169:0, v170:0, 1, 4 + v246:0, v189:1, v191:1, v193:1, v191:1 + 4 * v193:1, v196:1, v197:1, v191:0, v193:0, 4 + v196:0, v196:0, v197:0, v181:0, v189:0, v189:0 + v197:0, v246:0, v182:0, v183:0, v184:0, v185:0, v186:0, v187:0, v188:0, 3, 7, 4, 8, 5) :|: v197:0 > v189:0 && v191:0 + 4 * v193:0 = 4 + v196:0 && v246:0 > -1 && v191:1 + 4 * v193:1 = 4 + v196:1 && v191:1 + 4 * v193:1 > 3
f_413(v161:0, v162:0, v163:0, v164:0, v165:0, v166:0, v167:0, 0, v169:0, v170:0, 1, v181:0, v189:0, v191:0, v193:0, 4 + v196:0, v196:0, v197:0, v174:0, v175:0, v176:0, v177:0, v178:0, v172:0, v173:0, v179:0, v180:0, v182:0, v183:0, v184:0, v185:0, v186:0, v187:0, v188:0, 3, 7, 4, 8, 5) -> f_413(v161:0, v162:0, v163:0, v164:0, v165:0, v166:0, v167:0, 0, v169:0, v170:0, 1, 4 + v246:0, v189:1, v191:1, v193:1, v191:1 + 4 * v193:1, v196:1, v197:1, v191:0, v193:0, 4 + v196:0, v196:0, v197:0, v181:0, v189:0, v189:0 + v197:0, v246:0, v182:0, v183:0, v184:0, v185:0, v186:0, v187:0, v188:0, 3, 7, 4, 8, 5) :|: v197:0 < v189:0 && v191:0 + 4 * v193:0 = 4 + v196:0 && v246:0 > -1 && v191:1 + 4 * v193:1 = 4 + v196:1 && v191:1 + 4 * v193:1 > 3
f_187 -> f_361(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, 4 * v13:0, v16:0, 1, 4 + v16:0, v43:0, 4 + v29:0, v29:0, v31:0, v24:0, v24:0 + v31:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v17:0, 3, 7, 4, 8, 5, 6, 2) :|: v29:0 > 1 && v17:0 > 4 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v16:0 + 4 * v13:0 = 1 + v17:0 && v16:0 > 0 && 4 * v13:0 > 3 && v29:0 > v16:0 && v31:0 > v24:0 && v16:0 + 4 * v13:0 = 4 + v29:0
f_187 -> f_361(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, 4 * v13:0, v16:0, 1, 4 + v16:0, v43:0, 4 + v29:0, v29:0, v31:0, v24:0, v24:0 + v31:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v17:0, 3, 7, 4, 8, 5, 6, 2) :|: v29:0 > 1 && v17:0 > 4 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v16:0 + 4 * v13:0 = 1 + v17:0 && v16:0 > 0 && 4 * v13:0 > 3 && v29:0 > v16:0 && v31:0 < v24:0 && v16:0 + 4 * v13:0 = 4 + v29:0
f_187 -> f_329(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, 4 * v13:0, v16:0, 1, v24:0, 4 + v29:0, v29:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v17:0, 3, 7, 4, 8, 5) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v16:0 + 4 * v13:0 = 1 + v17:0 && v16:0 > 0 && 4 * v13:0 > 3 && v17:0 > 3 && v29:0 > 0 && v16:0 + 4 * v13:0 = 4 + v29:0
f_413(v161:0, v162:0, v163:0, v164:0, v165:0, v166:0, v167:0, 0, v169:0, v170:0, 1, v181:0, v189:0, v191:0, v193:0, v195:0, v196:0, v189:0, v174:0, v175:0, v176:0, v177:0, v178:0, v172:0, v173:0, v179:0, v180:0, v182:0, v183:0, v184:0, v185:0, v186:0, v187:0, v188:0, 3, 7, 4, 8, 5) -> f_425(v161:0, v162:0, v163:0, v164:0, v165:0, v166:0, v167:0, 0, v169:0, v170:0, 1, v181:0, v189:0, v191:0, v193:0, v195:0, v196:0, v174:0, v175:0, v176:0, v177:0, v178:0, v172:0, v173:0, v179:0, v180:0, v182:0, v183:0, v184:0, v185:0, v186:0, v187:0, v188:0, 3, 7, 4, 8, 5) :|: TRUE
f_187 -> f_330(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 1, 4, v18:0, v26:0, 4 + v18:0, 0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, 3 + v18:0, 3, 7, 8, 5) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 < 1 && v18:0 > 0
Filtered unneeded arguments:
   f_413(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39) -> f_413(x13, x14, x15, x16, x17, x18)
Removed division, modulo operations, cleaned up constraints. Obtained 8 rules.P rules:
f_187 -> f_413(v189:0, v191:0, v193:0, v191:0 + 4 * v193:0, v196:0, v197:0) :|: v191:0 + 4 * v193:0 = 4 + v196:0 && v191:0 + 4 * v193:0 > 3
f_413(v189:0, v191:0, v193:0, sum~cons_4~v196:0, v196:0, v197:0) -> f_413(v189:1, v191:1, v193:1, v191:1 + 4 * v193:1, v196:1, v197:1) :|: v191:0 + 4 * v193:0 = 4 + v196:0 && v197:0 > v189:0 && v191:1 + 4 * v193:1 > 3 && v191:1 + 4 * v193:1 = 4 + v196:1 && sum~cons_4~v196:0 = 4 + v196:0
f_413(v189:0, v191:0, v193:0, sum~cons_4~v196:0, v196:0, v197:0) -> f_413(v189:1, v191:1, v193:1, v191:1 + 4 * v193:1, v196:1, v197:1) :|: v191:0 + 4 * v193:0 = 4 + v196:0 && v197:0 < v189:0 && v191:1 + 4 * v193:1 > 3 && v191:1 + 4 * v193:1 = 4 + v196:1 && sum~cons_4~v196:0 = 4 + v196:0
f_187 -> f_361(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, 4 * v13:0, v16:0, 1, 4 + v16:0, v43:0, 4 + v29:0, v29:0, v31:0, v24:0, v24:0 + v31:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v17:0, 3, 7, 4, 8, 5, 6, 2) :|: v17:0 > 4 && v29:0 > 1 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v16:0 + 4 * v13:0 = 1 + v17:0 && v16:0 > 0 && 4 * v13:0 > 3 && v29:0 > v16:0 && v16:0 + 4 * v13:0 = 4 + v29:0 && v31:0 > v24:0
f_187 -> f_361(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, 4 * v13:0, v16:0, 1, 4 + v16:0, v43:0, 4 + v29:0, v29:0, v31:0, v24:0, v24:0 + v31:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v17:0, 3, 7, 4, 8, 5, 6, 2) :|: v17:0 > 4 && v29:0 > 1 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v16:0 + 4 * v13:0 = 1 + v17:0 && v16:0 > 0 && 4 * v13:0 > 3 && v29:0 > v16:0 && v16:0 + 4 * v13:0 = 4 + v29:0 && v31:0 < v24:0
f_187 -> f_329(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, 4 * v13:0, v16:0, 1, v24:0, 4 + v29:0, v29:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v17:0, 3, 7, 4, 8, 5) :|: v1:0 > 0 && v3:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v16:0 + 4 * v13:0 = 1 + v17:0 && v16:0 > 0 && 4 * v13:0 > 3 && v17:0 > 3 && v16:0 + 4 * v13:0 = 4 + v29:0 && v29:0 > 0
f_413(v189:0, v191:0, v193:0, v195:0, v196:0, v189:01) -> f_425(v161:0, v162:0, v163:0, v164:0, v165:0, v166:0, v167:0, 0, v169:0, v170:0, 1, v181:0, v189:0, v191:0, v193:0, v195:0, v196:0, v174:0, v175:0, v176:0, v177:0, v178:0, v172:0, v173:0, v179:0, v180:0, v182:0, v183:0, v184:0, v185:0, v186:0, v187:0, v188:0, 3, 7, 4, 8, 5) :|: TRUE && v189:0 = v189:01
f_187 -> f_330(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 1, 4, v18:0, v26:0, 4 + v18:0, 0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, 3 + v18:0, 3, 7, 8, 5) :|: v1:0 > 0 && v3:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v18:0 > 0 && v13:0 < 1

----------------------------------------

(26)
Obligation:
Rules:
f_187 -> f_413(v189:0, v191:0, v193:0, v191:0 + 4 * v193:0, v196:0, v197:0) :|: v191:0 + 4 * v193:0 = 4 + v196:0 && v191:0 + 4 * v193:0 > 3
f_413(x, x1, x2, x3, x4, x5) -> f_413(x6, x7, x8, x7 + 4 * x8, x9, x10) :|: x1 + 4 * x2 = 4 + x4 && x5 > x && x7 + 4 * x8 > 3 && x7 + 4 * x8 = 4 + x9 && x3 = 4 + x4
f_413(x11, x12, x13, x14, x15, x16) -> f_413(x17, x18, x19, x18 + 4 * x19, x20, x21) :|: x12 + 4 * x13 = 4 + x15 && x16 < x11 && x18 + 4 * x19 > 3 && x18 + 4 * x19 = 4 + x20 && x14 = 4 + x15
f_187 -> f_361(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, 4 * v13:0, v16:0, 1, 4 + v16:0, v43:0, 4 + v29:0, v29:0, v31:0, v24:0, v24:0 + v31:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v17:0, 3, 7, 4, 8, 5, 6, 2) :|: v17:0 > 4 && v29:0 > 1 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v16:0 + 4 * v13:0 = 1 + v17:0 && v16:0 > 0 && 4 * v13:0 > 3 && v29:0 > v16:0 && v16:0 + 4 * v13:0 = 4 + v29:0 && v31:0 > v24:0
f_187 -> f_361(x22, x23, x24, x25, x26, x27, x28, 0, 4 * x28, x29, 1, 4 + x29, x30, 4 + x31, x31, x32, x33, x33 + x32, 3 + x22, 3 + x23, 3 + x24, 3 + x25, 7 + x26, 7 + x27, x34, 3, 7, 4, 8, 5, 6, 2) :|: x34 > 4 && x31 > 1 && x23 > 0 && x22 > 0 && x24 > 0 && x25 > 0 && x26 > 0 && x27 > 0 && x28 > 0 && x29 + 4 * x28 = 1 + x34 && x29 > 0 && 4 * x28 > 3 && x31 > x29 && x29 + 4 * x28 = 4 + x31 && x32 < x33
f_187 -> f_329(x35, x36, x37, x38, x39, x40, x41, 0, 4 * x41, x42, 1, x43, 4 + x44, x44, 3 + x35, 3 + x36, 3 + x37, 3 + x38, 7 + x39, 7 + x40, x45, 3, 7, 4, 8, 5) :|: x35 > 0 && x36 > 0 && x37 > 0 && x38 > 0 && x39 > 0 && x40 > 0 && x41 > 0 && x42 + 4 * x41 = 1 + x45 && x42 > 0 && 4 * x41 > 3 && x45 > 3 && x42 + 4 * x41 = 4 + x44 && x44 > 0
f_413(x46, x47, x48, x49, x50, x51) -> f_425(x52, x53, x54, x55, x56, x57, x58, 0, x59, x60, 1, x61, x46, x47, x48, x49, x50, x62, x63, x64, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74, x75, x76, x77, 3, 7, 4, 8, 5) :|: TRUE && x46 = x51
f_187 -> f_330(x78, x79, x80, x81, x82, x83, x84, 1, 4, x85, x86, 4 + x85, 0, 3 + x78, 3 + x79, 3 + x80, 3 + x81, 7 + x82, 7 + x83, 3 + x85, 3, 7, 8, 5) :|: x78 > 0 && x79 > 0 && x80 > 0 && x81 > 0 && x82 > 0 && x83 > 0 && x85 > 0 && x84 < 1
Start term: f_187

----------------------------------------

(27) IRSToKoat (EQUIVALENT)
Convert an IRS to a koat problem
----------------------------------------

(28)
Obligation:
(GOAL COMPLEXITY)
(STARTTERM (FUNCTIONSYMBOLS f_187))
(VAR x290 x160 x281 x280 x162 x283 x161 x282 x164 x285 x163 x284 x166 x287 x165 x286 x168 x289 x167 x288 x169 x270 x391 x390 x151 x272 x393 x150 x271 x392 x153 x274 x395 x152 x273 x394 x155 x276 x397 x154 x275 x396 x157 x278 x399 x156 x277 x398 x159 x158 x279 x380 x140 x261 x382 x260 x381 x142 x263 x384 x141 x262 x383 x144 x265 x386 x143 x264 x385 x146 x267 x388 x145 x266 x387 x148 x269 x147 x268 x389 x149 x250 x371 x370 x131 x252 x373 x130 x251 x372 x133 x254 x375 x132 x253 x374 x135 x256 x377 x134 x255 x376 x137 x258 x379 x136 x257 x378 x139 x138 x259 x193 x192 x195 x194 x197 x196 x199 x198 x'' k14 k15 k16 k17 k10 k11 k12 k13 x191 x190 x182 x181 x184 x183 x186 x185 x188 x187 x189 x180 x171 x292 x170 x291 x173 x294 x172 x293 x175 x296 x174 x295 x177 x298 x176 x297 x179 x178 x299 k36 k37 k38 k39 k32 k33 k34 k35 k30 k31 k29 k25 k26 k27 k28 k21 k22 k23 k24 k20 k18 k19 k58 k59 k54 k55 k56 k57 k50 k51 k52 k53 k47 k48 k49 k43 k44 k45 k46 k40 k41 k42 k76 k77 k78 k79 k72 k73 k74 k75 k70 k71 x k69 k65 k66 k67 k68 k61 k62 k63 k64 k60 k98 k99 k94 k95 k96 k97 k90 k91 k92 k93 x28 x29 x24 x25 x26 x27 x20 x21 x22 x23 k87 k88 k89 k83 k84 k85 k86 k80 k81 k82 x17 x18 x19 x13 x14 x15 x16 x10 x11 x12 x46 x47 x48 x49 x42 x43 x44 x45 x40 x41 x39 x35 x36 x37 x38 x31 x32 x33 x34 x30 x70 x68 x69 x64 x65 x66 x67 x60 x61 x62 x63 k7 k8 k5 k6 k9 k0 k3 k4 k1 k2 x57 x58 x59 x53 x54 x55 x56 x50 x51 x52 x407 x90 x406 x91 x409 x92 x408 x86 x87 x88 x401 x89 x400 x82 x403 x83 x402 x84 x405 x85 x404 x80 x81 k104 x79 x75 x76 x77 x78 k103 x71 x72 k102 k101 x73 k100 x74 x97 x98 x99 x93 x94 x95 x96 x209 x208 x329 x320 x201 x322 x200 x321 x203 x324 x202 x323 x205 x326 x204 x325 x207 x328 x206 x327 x319 x318 x311 x310 x313 x312 x315 x314 x317 x316 x308 x307 x309 x300 x302 x301 x304 x303 x306 x305 x417 x410 x412 x411 x414 x413 x416 x415 x360 x120 x241 x362 x240 x361 x122 x243 x364 x121 x242 x363 x124 x245 x366 x123 x244 x365 x126 x247 x368 x125 x246 x367 x128 x249 x127 x248 x369 x129 x230 x351 x350 x111 x232 x353 x110 x231 x352 x113 x234 x355 x112 x233 x354 x115 x236 x357 x114 x235 x356 x117 x238 x359 x116 x237 x358 x119 x118 x239 x109 x4 x5 x2 x3 x8 x340 x9 x6 x100 x221 x342 x7 x220 x341 x102 x223 x344 x101 x222 x343 x104 x225 x346 x103 x224 x345 x106 x227 x348 x1 x105 x226 x347 x108 x229 x107 x228 x349 x219 x' x210 x331 x330 x212 x333 x211 x332 x214 x335 x213 x334 x216 x337 x215 x336 x218 x339 x217 x338)
(RULES
  f_413(k103, k104, k98, k99, k100, k101, x, x', x'', x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29) -> f_413(k95, k96, k97, k96 + 4 * k97, k90, k91, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61) :|: k104 + 4 * k98 = 4 + k100 && k101 < k103 && k96 + 4 * k97 > 3 && k96 + 4 * k97 = 4 + k90 && k99 = 4 + k100
  f_187(x234, x235, x236, x237, x238, x239, x240, x241, x242, x243, x244, x245, x246, x247, x248, x249, x250, x251, x252, x253, x254, x255, x256, x257, x258, x259, x260, x261, x262, x263, x264, x265, x266, x267, x268, x269, x270, x271) -> f_361(k41, k77, k27, k84, k30, k11, k63, 0, 4 * k63, k42, 1, 4 + k42, k24, 4 + k64, k64, k40, k25, k25 + k40, 3 + k41, 3 + k77, 3 + k27, 3 + k84, 7 + k30, 7 + k11, k26, 3, 7, 4, 8, 5, 6, 2, x272, x273, x274, x275, x276, x277) :|: k26 > 4 && k64 > 1 && k77 > 0 && k41 > 0 && k27 > 0 && k84 > 0 && k30 > 0 && k11 > 0 && k63 > 0 && k42 + 4 * k63 = 1 + k26 && k42 > 0 && 4 * k63 > 3 && k64 > k42 && k42 + 4 * k63 = 4 + k64 && k40 > k25
  f_187(x182, x183, x184, x185, x186, x187, x188, x189, x190, x191, x192, x193, x194, x195, x196, x197, x198, x199, x200, x201, x202, x203, x204, x205, x206, x207, x208, x209, x210, x211, x212, x213, x214, x215, x216, x217, x218, x219) -> f_330(k69, k65, k61, k62, k56, k57, k59, 1, 4, k60, k53, 4 + k60, 0, 3 + k69, 3 + k65, 3 + k61, 3 + k62, 7 + k56, 7 + k57, 3 + k60, 3, 7, 8, 5, x220, x221, x222, x223, x224, x225, x226, x227, x228, x229, x230, x231, x232, x233) :|: k69 > 0 && k65 > 0 && k61 > 0 && k62 > 0 && k56 > 0 && k57 > 0 && k60 > 0 && k59 < 1
  f_413(k1, k2, k3, k4, k50, k51, x278, x279, x280, x281, x282, x283, x284, x285, x286, x287, x288, x289, x290, x291, x292, x293, x294, x295, x296, x297, x298, x299, x300, x301, x302, x303, x304, x305, x306, x307, x308, x309) -> f_425(k52, k46, k47, k48, k49, k43, k44, 0, k45, k35, 1, k36, k1, k2, k3, k4, k50, k37, k39, k31, k32, k33, k34, k28, k29, k23, k70, k71, k72, k73, k66, k67, k68, 3, 7, 4, 8, 5) :|: 0 = 0 && k1 = k51
  f_187(x62, x63, x64, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74, x75, x76, x77, x78, x79, x80, x81, x82, x83, x84, x85, x86, x87, x88, x89, x90, x91, x92, x93, x94, x95, x96, x97, x98, x99) -> f_413(k22, k0, k54, k0 + 4 * k54, k38, k58, x100, x101, x102, x103, x104, x105, x106, x107, x108, x109, x110, x111, x112, x113, x114, x115, x116, x117, x118, x119, x120, x121, x122, x123, x124, x125, x126, x127, x128, x129, x130, x131) :|: k0 + 4 * k54 = 4 + k38 && k0 + 4 * k54 > 3
  f_187(x310, x311, x312, x313, x314, x315, x316, x317, x318, x319, x320, x321, x322, x323, x324, x325, x326, x327, x328, x329, x330, x331, x332, x333, x334, x335, x336, x337, x338, x339, x340, x341, x342, x343, x344, x345, x346, x347) -> f_361(k92, k93, k82, k85, k87, k89, k75, 0, 4 * k75, k78, 1, 4 + k78, k21, 4 + k17, k17, k18, k19, k19 + k18, 3 + k92, 3 + k93, 3 + k82, 3 + k85, 7 + k87, 7 + k89, k20, 3, 7, 4, 8, 5, 6, 2, x348, x349, x350, x351, x352, x353) :|: k20 > 4 && k17 > 1 && k93 > 0 && k92 > 0 && k82 > 0 && k85 > 0 && k87 > 0 && k89 > 0 && k75 > 0 && k78 + 4 * k75 = 1 + k20 && k78 > 0 && 4 * k75 > 3 && k17 > k78 && k78 + 4 * k75 = 4 + k17 && k18 < k19
  f_413(k55, k94, k79, k80, k74, k76, x354, x355, x356, x357, x358, x359, x360, x361, x362, x363, x364, x365, x366, x367, x368, x369, x370, x371, x372, x373, x374, x375, x376, x377, x378, x379, x380, x381, x382, x383, x384, x385) -> f_413(k86, k88, k81, k88 + 4 * k81, k83, k102, x386, x387, x388, x389, x390, x391, x392, x393, x394, x395, x396, x397, x398, x399, x400, x401, x402, x403, x404, x405, x406, x407, x408, x409, x410, x411, x412, x413, x414, x415, x416, x417) :|: k94 + 4 * k79 = 4 + k74 && k76 > k55 && k88 + 4 * k81 > 3 && k88 + 4 * k81 = 4 + k83 && k80 = 4 + k74
  f_187(x132, x133, x134, x135, x136, x137, x138, x139, x140, x141, x142, x143, x144, x145, x146, x147, x148, x149, x150, x151, x152, x153, x154, x155, x156, x157, x158, x159, x160, x161, x162, x163, x164, x165, x166, x167, x168, x169) -> f_329(k13, k14, k15, k16, k12, k9, k10, 0, 4 * k10, k5, 1, k6, 4 + k7, k7, 3 + k13, 3 + k14, 3 + k15, 3 + k16, 7 + k12, 7 + k9, k8, 3, 7, 4, 8, 5, x170, x171, x172, x173, x174, x175, x176, x177, x178, x179, x180, x181) :|: k13 > 0 && k14 > 0 && k15 > 0 && k16 > 0 && k12 > 0 && k9 > 0 && k10 > 0 && k5 + 4 * k10 = 1 + k8 && k5 > 0 && 4 * k10 > 3 && k8 > 3 && k5 + 4 * k10 = 4 + k7 && k7 > 0
)

----------------------------------------

(29) KoAT2 (EQUIVALENT)
KoAT2 was called with the following command:

/aprove/bin/koat2 analyse --termination --cfr=pe -d5 --local=mprf,twn -rtermcomp -i /tmp/aprove.InputModules.Programs.koat2_17916843131943188542.koat 

KoAT2's output was:

MAYBE

----------------------------------------

(30)
MAYBE
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.0s
