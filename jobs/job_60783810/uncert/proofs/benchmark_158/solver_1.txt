YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/ZmlyI.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could be proven:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 20 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 687 ms]
(4) LLVM Symbolic Execution Graph
(5) SEGraph to IRS [SOUND, 154 ms]
(6) IntTRS
(7) IRSToKoat [EQUIVALENT, 0 ms]
(8) Koat Problem
(9) KoAT2 [EQUIVALENT, 117 ms]
(10) YES


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/ZmlyI.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/ZmlyI.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 7
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		%3 = alloca i32, align 4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %1)
		%4 = call i32 @__VERIFIER_nondet_int()
		store %4, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		%5 = call i32 @__VERIFIER_nondet_int()
		store %5, %2
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		%6 = call i32 @__VERIFIER_nondet_int()
		store %6, %3
		%7 = call i32 @random()
		%8 = call i32 @random()
		Unnamed Call-Instruction = call BasicVoidType @loop(i32 %7, i32 %8)
		ret 0

*BasicFunctionTypename: "loop" linkageType: EXTERNALLY_VISIBLE returnParam: BasicVoidType parameters: (0 i32, 1 i32) variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 25
	0:
		%3 = alloca i32, align 4
		%4 = alloca i32, align 4
		%5 = alloca i32, align 4
		store %0, %3
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		store %1, %4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %4)
		%6 = load %4
		%7 = icmp sgt %6 0
		br %7, %8, %20
	8:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %5)
		%9 = call i32 @random()
		store %9, %5
		%10 = load %3
		%11 = sub i32 %10, 1
		%12 = load %5
		%13 = sub i32 %11, %12
		store %13, %4
		%14 = load %3
		%15 = sub i32 %14, 1
		%16 = load %5
		%17 = sub i32 %15, %16
		store %17, %3
		%18 = load %3
		%19 = load %4
		Unnamed Call-Instruction = call BasicVoidType @loop(i32 %18, i32 %19)
		br %20
	20:
		ret void

*BasicFunctionTypename: "random" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 55
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		%3 = call i32 @__VERIFIER_nondet_int()
		store %3, %2
		%4 = load %2
		%5 = icmp slt %4 0
		br %5, %6, %9
	6:
		%7 = load %2
		%8 = sub i32 0, %7
		store %8, %1
		br %11
	9:
		%10 = load %2
		store %10, %1
		br %11
	11:
		%12 = load %1
		ret %12


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SEGraph to IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 172 rulesP rules:
f_189 -> f_190(v1, v2, 3, 1, 4) :|: 1 <= v1 && v2 = 3 + v1 && 4 <= v2
f_190(v1, v2, 3, 1, 4) -> f_191(v1, v3, v2, v4, 3, 1, 4) :|: 1 <= v3 && v4 = 3 + v3 && 4 <= v4
f_191(v1, v3, v2, v4, 3, 1, 4) -> f_192(v1, v3, v5, v2, v4, v6, 3, 1, 4) :|: 1 <= v5 && v6 = 3 + v5 && 4 <= v6
f_192(v1, v3, v5, v2, v4, v6, 3, 1, 4) -> f_193(v1, v3, v5, v2, v4, v6, 3, 1, 4) :|: TRUE
f_193(v1, v3, v5, v2, v4, v6, 3, 1, 4) -> f_194(v1, v3, v5, v7, v2, v4, v6, 3, 1, 4) :|: TRUE
f_194(v1, v3, v5, v7, v2, v4, v6, 3, 1, 4) -> f_195(v1, v3, v5, v7, v2, v4, v6, 3, 1, 4) :|: TRUE
f_195(v1, v3, v5, v7, v2, v4, v6, 3, 1, 4) -> f_196(v1, v3, v5, v7, v2, v4, v6, 3, 1, 4) :|: TRUE
f_196(v1, v3, v5, v7, v2, v4, v6, 3, 1, 4) -> f_197(v1, v3, v5, v7, v9, v2, v4, v6, 3, 1, 4) :|: TRUE
f_197(v1, v3, v5, v7, v9, v2, v4, v6, 3, 1, 4) -> f_198(v1, v3, v5, v7, v9, v2, v4, v6, 3, 1, 4) :|: TRUE
f_198(v1, v3, v5, v7, v9, v2, v4, v6, 3, 1, 4) -> f_199(v1, v3, v5, v7, v9, v2, v4, v6, 3, 1, 4) :|: TRUE
f_199(v1, v3, v5, v7, v9, v2, v4, v6, 3, 1, 4) -> f_200(v1, v3, v5, v7, v9, v11, v2, v4, v6, 3, 1, 4) :|: TRUE
f_200(v1, v3, v5, v7, v9, v11, v2, v4, v6, 3, 1, 4) -> f_201(v1, v3, v5, v7, v9, v11, v2, v4, v6, 3, 1, 4) :|: TRUE
f_201(v1, v3, v5, v7, v9, v11, v2, v4, v6, 3, 1, 4) -> f_202(v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4) :|: TRUE
f_202(v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4) -> f_203(v13, v1, v2, v3, v4, v5, v6, v14, v7, v9, v11, 3, 1, 4) :|: 1 <= v13 && v14 = 3 + v13 && 4 <= v14
f_203(v13, v1, v2, v3, v4, v5, v6, v14, v7, v9, v11, 3, 1, 4) -> f_204(v13, v15, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) :|: 1 <= v15 && v16 = 3 + v15 && 4 <= v16
f_204(v13, v15, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) -> f_205(v13, v15, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) :|: TRUE
f_205(v13, v15, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) -> f_206(v13, v15, v17, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) :|: TRUE
f_206(v13, v15, v17, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) -> f_207(v13, v15, v17, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) :|: TRUE
f_207(v13, v15, v17, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) -> f_208(v13, v15, v17, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) :|: 0 = 0
f_208(v13, v15, v17, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) -> f_209(v13, v15, v17, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4, 0) :|: v17 < 0
f_208(v13, v15, v17, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) -> f_210(v13, v15, v17, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4, 0) :|: 0 <= v17
f_209(v13, v15, v17, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4, 0) -> f_211(v13, v15, v17, 1, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 4, 0) :|: 0 = 0
f_210(v13, v15, v17, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4, 0) -> f_212(v13, v15, v17, 0, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) :|: 0 = 0
f_211(v13, v15, v17, 1, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 4, 0) -> f_213(v13, v15, v17, 1, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 4, 0) :|: TRUE
f_212(v13, v15, v17, 0, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) -> f_214(v13, v15, v17, 0, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) :|: TRUE
f_213(v13, v15, v17, 1, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 4, 0) -> f_215(v13, v15, v17, 1, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 4, 0) :|: 0 = 0
f_214(v13, v15, v17, 0, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) -> f_216(v13, v15, v17, 0, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) :|: 0 = 0
f_215(v13, v15, v17, 1, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 4, 0) -> f_217(v13, v15, v17, 1, v19, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 0, 4) :|: v19 + v17 = 0 && 1 <= v19
f_216(v13, v15, v17, 0, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) -> f_218(v13, v15, v17, 0, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) :|: TRUE
f_217(v13, v15, v17, 1, v19, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 0, 4) -> f_219(v13, v15, v17, 1, v19, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 0, 4) :|: TRUE
f_218(v13, v15, v17, 0, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) -> f_220(v13, v15, v17, 0, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) :|: TRUE
f_219(v13, v15, v17, 1, v19, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 0, 4) -> f_221(v13, v15, v17, 1, v19, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 0, 4) :|: TRUE
f_220(v13, v15, v17, 0, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) -> f_222(v13, v15, v17, 0, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) :|: 0 = 0
f_221(v13, v15, v17, 1, v19, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 0, 4) -> f_223(v13, v15, v17, 1, v19, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 0, 4) :|: 0 = 0
f_222(v13, v15, v17, 0, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 1, 4) -> f_224(v1, v3, v5, v7, v9, v11, v17, v2, v4, v6, 3, 1, 4, 0) :|: 0 = 0
f_223(v13, v15, v17, 1, v19, v1, v2, v3, v4, v5, v6, v14, v16, v7, v9, v11, 3, 0, 4) -> f_225(v1, v3, v5, v7, v9, v11, v19, v2, v4, v6, 3, 1, 4) :|: 0 = 0
f_224(v1, v3, v5, v7, v9, v11, v17, v2, v4, v6, 3, 1, 4, 0) -> f_226(v1, v2, v3, v4, v5, v6, v7, v9, v11, v17, 3, 1, 4, 0) :|: TRUE
f_225(v1, v3, v5, v7, v9, v11, v19, v2, v4, v6, 3, 1, 4) -> f_227(v1, v2, v3, v4, v5, v6, v7, v9, v11, v19, 3, 1, 4) :|: TRUE
f_226(v1, v2, v3, v4, v5, v6, v7, v9, v11, v17, 3, 1, 4, 0) -> f_228(v32, v1, v2, v3, v4, v5, v6, v33, v7, v9, v11, v17, 3, 1, 4, 0) :|: 1 <= v32 && v33 = 3 + v32 && 4 <= v33
f_227(v1, v2, v3, v4, v5, v6, v7, v9, v11, v19, 3, 1, 4) -> f_226(v1, v2, v3, v4, v5, v6, v7, v9, v11, v17, 3, 1, 4, 0) :|: TRUE
f_228(v32, v1, v2, v3, v4, v5, v6, v33, v7, v9, v11, v17, 3, 1, 4, 0) -> f_229(v32, v34, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4, 0) :|: 1 <= v34 && v35 = 3 + v34 && 4 <= v35
f_229(v32, v34, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4, 0) -> f_230(v32, v34, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4, 0) :|: TRUE
f_230(v32, v34, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4, 0) -> f_231(v32, v34, v36, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4, 0) :|: TRUE
f_231(v32, v34, v36, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4, 0) -> f_232(v32, v34, v36, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4, 0) :|: TRUE
f_232(v32, v34, v36, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4, 0) -> f_233(v32, v34, v36, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4, 0) :|: 0 = 0
f_233(v32, v34, v36, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4, 0) -> f_234(v32, v34, v36, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4, 0) :|: v36 < 0
f_233(v32, v34, v36, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4, 0) -> f_235(v32, v34, v36, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4, 0) :|: 0 <= v36
f_234(v32, v34, v36, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4, 0) -> f_236(v32, v34, v36, 1, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 4, 0) :|: 0 = 0
f_235(v32, v34, v36, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4, 0) -> f_237(v32, v34, v36, 0, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4) :|: 0 = 0
f_236(v32, v34, v36, 1, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 4, 0) -> f_238(v32, v34, v36, 1, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 4, 0) :|: TRUE
f_237(v32, v34, v36, 0, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4) -> f_239(v32, v34, v36, 0, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4) :|: TRUE
f_238(v32, v34, v36, 1, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 4, 0) -> f_240(v32, v34, v36, 1, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 4, 0) :|: 0 = 0
f_239(v32, v34, v36, 0, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4) -> f_241(v32, v34, v36, 0, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4) :|: 0 = 0
f_240(v32, v34, v36, 1, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 4, 0) -> f_242(v32, v34, v36, 1, v38, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 0, 4) :|: v38 + v36 = 0 && 1 <= v38
f_241(v32, v34, v36, 0, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4) -> f_243(v32, v34, v36, 0, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4) :|: TRUE
f_242(v32, v34, v36, 1, v38, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 0, 4) -> f_244(v32, v34, v36, 1, v38, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 0, 4) :|: TRUE
f_243(v32, v34, v36, 0, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4) -> f_245(v32, v34, v36, 0, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4) :|: TRUE
f_244(v32, v34, v36, 1, v38, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 0, 4) -> f_246(v32, v34, v36, 1, v38, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 0, 4) :|: TRUE
f_245(v32, v34, v36, 0, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4) -> f_247(v32, v34, v36, 0, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4) :|: 0 = 0
f_246(v32, v34, v36, 1, v38, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 0, 4) -> f_248(v32, v34, v36, 1, v38, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 0, 4) :|: 0 = 0
f_247(v32, v34, v36, 0, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 1, 4) -> f_249(v1, v3, v5, v7, v9, v11, v17, v36, v2, v4, v6, 3, 1, 4, 0) :|: 0 = 0
f_248(v32, v34, v36, 1, v38, v1, v2, v3, v4, v5, v6, v33, v35, v7, v9, v11, v17, 3, 0, 4) -> f_250(v1, v3, v5, v7, v9, v11, v17, v38, v2, v4, v6, 3, 1, 4, 0) :|: 0 = 0
f_249(v1, v3, v5, v7, v9, v11, v17, v36, v2, v4, v6, 3, 1, 4, 0) -> f_251(v17, v36, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) :|: 0 = 0
f_250(v1, v3, v5, v7, v9, v11, v17, v38, v2, v4, v6, 3, 1, 4, 0) -> f_252(v17, v38, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) :|: 0 = 0
f_251(v17, v36, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) -> f_253(v17, v36, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) :|: TRUE
f_251(v17, v36, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) -> f_344(v17, 0, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4) :|: TRUE
f_251(v17, v36, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) -> f_422(v17, v36, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) :|: TRUE
f_251(v17, v36, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) -> f_432(v17, v36, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) :|: TRUE
f_252(v17, v38, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) -> f_254(v17, v38, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) :|: TRUE
f_252(v17, v38, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) -> f_271(v17, 0, v63, v65, v67, v1, v2, v3, v4, v5, v6, v64, v66, v68, v7, v9, v11, 3, 1, 4) :|: TRUE
f_252(v17, v38, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) -> f_345(v169, v170, v171, v173, v175, 0, v172, v174, v176, 3, 1, 4) :|: TRUE
f_252(v17, v38, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) -> f_423(v17, v38, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) :|: TRUE
f_252(v17, v38, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) -> f_433(v17, v38, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) :|: TRUE
f_253(v17, v36, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) -> f_327(v17, v36, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4) :|: TRUE
f_254(v17, v38, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) -> f_253(v17, v38, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) :|: TRUE
f_327(v158, v159, v160, v161, v162, v163, v164, v165, v166, v167, v168, 3, 1, 4) -> f_328(v158, v159) :|: TRUE
f_328(v169, v170) -> f_329(v169, v170, v171, v172, 3, 1, 4) :|: 1 <= v171 && v172 = 3 + v171 && 4 <= v172
f_329(v169, v170, v171, v172, 3, 1, 4) -> f_330(v169, v170, v171, v173, v172, v174, 3, 1, 4) :|: 1 <= v173 && v174 = 3 + v173 && 4 <= v174
f_330(v169, v170, v171, v173, v172, v174, 3, 1, 4) -> f_331(v169, v170, v171, v173, v175, v172, v174, v176, 3, 1, 4) :|: 1 <= v175 && v176 = 3 + v175 && 4 <= v176
f_331(v169, v170, v171, v173, v175, v172, v174, v176, 3, 1, 4) -> f_332(v169, v170, v171, v173, v175, v172, v174, v176, 3, 1, 4) :|: TRUE
f_332(v169, v170, v171, v173, v175, v172, v174, v176, 3, 1, 4) -> f_333(v169, v170, v171, v173, v175, v172, v174, v176, 3, 1, 4) :|: TRUE
f_333(v169, v170, v171, v173, v175, v172, v174, v176, 3, 1, 4) -> f_334(v169, v170, v171, v173, v175, v172, v174, v176, 3, 1, 4) :|: TRUE
f_334(v169, v170, v171, v173, v175, v172, v174, v176, 3, 1, 4) -> f_335(v169, v170, v171, v173, v175, v172, v174, v176, 3, 1, 4) :|: TRUE
f_335(v169, v170, v171, v173, v175, v172, v174, v176, 3, 1, 4) -> f_336(v169, v170, v171, v173, v175, v172, v174, v176, 3, 1, 4) :|: 0 = 0
f_336(v169, v170, v171, v173, v175, v172, v174, v176, 3, 1, 4) -> f_337(v169, v170, v171, v173, v175, v172, v174, v176, 3, 1, 4) :|: 0 < v170
f_336(v169, v170, v171, v173, v175, v172, v174, v176, 3, 1, 4) -> f_338(v169, v170, v171, v173, v175, v172, v174, v176, 3, 0, 1, 4) :|: v170 <= 0
f_337(v169, v170, v171, v173, v175, v172, v174, v176, 3, 1, 4) -> f_339(v169, v170, v171, v173, v175, 1, v172, v174, v176, 3, 4) :|: 0 = 0
f_338(v169, v170, v171, v173, v175, v172, v174, v176, 3, 0, 1, 4) -> f_340(v169, v170, v171, v173, v175, 0, v172, v174, v176, 3, 1, 4) :|: 0 = 0
f_339(v169, v170, v171, v173, v175, 1, v172, v174, v176, 3, 4) -> f_341(v169, v170, v171, v173, v175, 1, v172, v174, v176, 3, 4) :|: TRUE
f_340(v169, v170, v171, v173, v175, 0, v172, v174, v176, 3, 1, 4) -> f_342(v169, v170, v171, v173, v175, 0, v172, v174, v176, 3, 1, 4) :|: TRUE
f_341(v169, v170, v171, v173, v175, 1, v172, v174, v176, 3, 4) -> f_343(v169, v170, v171, v173, v175, 1, v172, v174, v176, 3, 4) :|: TRUE
f_343(v169, v170, v171, v173, v175, 1, v172, v174, v176, 3, 4) -> f_346(v171, v172, v173, v174, v175, v176, v169, v170, 1, 3, 4) :|: TRUE
f_344(v17, 0, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4) -> f_347(v1, v3, v5, v7, v9, v11, v17, 0, v2, v4, v6, 3, 1, 4) :|: TRUE
f_346(v171, v172, v173, v174, v175, v176, v169, v170, 1, 3, 4) -> f_348(v195, v171, v172, v173, v174, v175, v176, v196, v169, v170, 1, 3, 4) :|: 1 <= v195 && v196 = 3 + v195 && 4 <= v196
f_348(v195, v171, v172, v173, v174, v175, v176, v196, v169, v170, 1, 3, 4) -> f_349(v195, v197, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 1, 3, 4) :|: 1 <= v197 && v198 = 3 + v197 && 4 <= v198
f_349(v195, v197, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 1, 3, 4) -> f_350(v195, v197, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 1, 3, 4) :|: TRUE
f_350(v195, v197, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 1, 3, 4) -> f_351(v195, v197, v199, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 1, 3, 4) :|: TRUE
f_351(v195, v197, v199, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 1, 3, 4) -> f_352(v195, v197, v199, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 1, 3, 4) :|: TRUE
f_352(v195, v197, v199, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 1, 3, 4) -> f_353(v195, v197, v199, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 1, 3, 4) :|: 0 = 0
f_353(v195, v197, v199, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 1, 3, 4) -> f_354(v195, v197, v199, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 1, 3, 4, 0) :|: v199 < 0
f_353(v195, v197, v199, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 1, 3, 4) -> f_355(v195, v197, v199, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 1, 3, 4, 0) :|: 0 <= v199
f_354(v195, v197, v199, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 1, 3, 4, 0) -> f_356(v195, v197, v199, 1, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 3, 4, 0) :|: 0 = 0
f_355(v195, v197, v199, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 1, 3, 4, 0) -> f_357(v195, v197, v199, 0, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 1, 3, 4) :|: 0 = 0
f_356(v195, v197, v199, 1, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 3, 4, 0) -> f_358(v195, v197, v199, 1, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 3, 4, 0) :|: TRUE
f_357(v195, v197, v199, 0, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 1, 3, 4) -> f_359(v195, v197, v199, 0, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 1, 3, 4) :|: TRUE
f_358(v195, v197, v199, 1, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 3, 4, 0) -> f_360(v195, v197, v199, 1, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 3, 4, 0) :|: 0 = 0
f_359(v195, v197, v199, 0, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 1, 3, 4) -> f_361(v195, v197, v199, 0, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 1, 3, 4) :|: 0 = 0
f_360(v195, v197, v199, 1, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 3, 4, 0) -> f_362(v195, v197, v199, 1, v209, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 3, 0, 4) :|: v209 + v199 = 0 && 1 <= v209
f_361(v195, v197, v199, 0, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 1, 3, 4) -> f_363(v195, v197, v199, 0, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 1, 3, 4) :|: TRUE
f_362(v195, v197, v199, 1, v209, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 3, 0, 4) -> f_364(v195, v197, v199, 1, v209, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 3, 0, 4) :|: TRUE
f_363(v195, v197, v199, 0, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 1, 3, 4) -> f_365(v195, v197, v199, 0, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 1, 3, 4) :|: TRUE
f_364(v195, v197, v199, 1, v209, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 3, 0, 4) -> f_366(v195, v197, v199, 1, v209, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 3, 0, 4) :|: TRUE
f_365(v195, v197, v199, 0, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 1, 3, 4) -> f_367(v195, v197, v199, 0, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 1, 3, 4) :|: 0 = 0
f_366(v195, v197, v199, 1, v209, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 3, 0, 4) -> f_368(v195, v197, v199, 1, v209, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 3, 0, 4) :|: 0 = 0
f_367(v195, v197, v199, 0, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 1, 3, 4) -> f_369(v169, v170, v171, v173, v175, 1, v199, v172, v174, v176, 3, 4, 0) :|: 0 = 0
f_368(v195, v197, v199, 1, v209, v171, v172, v173, v174, v175, v176, v196, v198, v169, v170, 3, 0, 4) -> f_370(v169, v170, v171, v173, v175, 1, v209, v172, v174, v176, 3, 4) :|: 0 = 0
f_369(v169, v170, v171, v173, v175, 1, v199, v172, v174, v176, 3, 4, 0) -> f_371(v169, v170, v171, v173, v175, 1, v199, v172, v174, v176, 3, 4, 0) :|: TRUE
f_370(v169, v170, v171, v173, v175, 1, v209, v172, v174, v176, 3, 4) -> f_372(v169, v170, v171, v173, v175, 1, v209, v172, v174, v176, 3, 4) :|: TRUE
f_371(v169, v170, v171, v173, v175, 1, v199, v172, v174, v176, 3, 4, 0) -> f_373(v169, v170, v171, v173, v175, 1, v199, v172, v174, v176, 3, 4, 0) :|: 0 = 0
f_372(v169, v170, v171, v173, v175, 1, v209, v172, v174, v176, 3, 4) -> f_374(v169, v170, v171, v173, v175, 1, v209, v172, v174, v176, 3, 4) :|: 0 = 0
f_373(v169, v170, v171, v173, v175, 1, v199, v172, v174, v176, 3, 4, 0) -> f_375(v169, v170, v171, v173, v175, 1, v199, v236, v172, v174, v176, 3, 4, 0) :|: 1 + v236 = v169
f_374(v169, v170, v171, v173, v175, 1, v209, v172, v174, v176, 3, 4) -> f_376(v169, v170, v171, v173, v175, 1, v209, v237, v172, v174, v176, 3, 4) :|: 1 + v237 = v169
f_375(v169, v170, v171, v173, v175, 1, v199, v236, v172, v174, v176, 3, 4, 0) -> f_377(v169, v170, v171, v173, v175, 1, v199, v236, v172, v174, v176, 3, 4, 0) :|: 0 = 0
f_376(v169, v170, v171, v173, v175, 1, v209, v237, v172, v174, v176, 3, 4) -> f_378(v169, v170, v171, v173, v175, 1, v209, v237, v172, v174, v176, 3, 4) :|: 0 = 0
f_377(v169, v170, v171, v173, v175, 1, v199, v236, v172, v174, v176, 3, 4, 0) -> f_379(v169, v170, v171, v173, v175, 1, v199, v236, v238, v172, v174, v176, 3, 4, 0) :|: v238 + v199 = v236
f_378(v169, v170, v171, v173, v175, 1, v209, v237, v172, v174, v176, 3, 4) -> f_380(v169, v170, v171, v173, v175, 1, v209, v237, v239, v172, v174, v176, 3, 4) :|: v239 + v209 = v237
f_379(v169, v170, v171, v173, v175, 1, v199, v236, v238, v172, v174, v176, 3, 4, 0) -> f_381(v169, v170, v171, v173, v175, 1, v199, v236, v238, v172, v174, v176, 3, 4, 0) :|: TRUE
f_380(v169, v170, v171, v173, v175, 1, v209, v237, v239, v172, v174, v176, 3, 4) -> f_382(v169, v170, v171, v173, v175, 1, v209, v237, v239, v172, v174, v176, 3, 4) :|: TRUE
f_381(v169, v170, v171, v173, v175, 1, v199, v236, v238, v172, v174, v176, 3, 4, 0) -> f_383(v169, v170, v171, v173, v175, 1, v199, v236, v238, v172, v174, v176, 3, 4, 0) :|: 0 = 0
f_382(v169, v170, v171, v173, v175, 1, v209, v237, v239, v172, v174, v176, 3, 4) -> f_384(v169, v170, v171, v173, v175, 1, v209, v237, v239, v172, v174, v176, 3, 4) :|: 0 = 0
f_383(v169, v170, v171, v173, v175, 1, v199, v236, v238, v172, v174, v176, 3, 4, 0) -> f_385(v169, v170, v171, v173, v175, 1, v199, v236, v238, v172, v174, v176, 3, 4, 0) :|: 1 + v236 = v169
f_384(v169, v170, v171, v173, v175, 1, v209, v237, v239, v172, v174, v176, 3, 4) -> f_386(v169, v170, v171, v173, v175, 1, v209, v237, v239, v172, v174, v176, 3, 4) :|: 1 + v237 = v169
f_385(v169, v170, v171, v173, v175, 1, v199, v236, v238, v172, v174, v176, 3, 4, 0) -> f_387(v169, v170, v171, v173, v175, 1, v199, v236, v238, v172, v174, v176, 3, 4, 0) :|: 0 = 0
f_386(v169, v170, v171, v173, v175, 1, v209, v237, v239, v172, v174, v176, 3, 4) -> f_388(v169, v170, v171, v173, v175, 1, v209, v237, v239, v172, v174, v176, 3, 4) :|: 0 = 0
f_387(v169, v170, v171, v173, v175, 1, v199, v236, v238, v172, v174, v176, 3, 4, 0) -> f_389(v169, v170, v171, v173, v175, 1, v199, v236, v242, v172, v174, v176, 3, 4, 0) :|: v242 + v199 = v236 && v238 = v242
f_388(v169, v170, v171, v173, v175, 1, v209, v237, v239, v172, v174, v176, 3, 4) -> f_390(v169, v170, v171, v173, v175, 1, v209, v237, v243, v172, v174, v176, 3, 4) :|: v243 + v209 = v237 && v239 = v243
f_389(v169, v170, v171, v173, v175, 1, v199, v236, v242, v172, v174, v176, 3, 4, 0) -> f_391(v169, v170, v171, v173, v175, 1, v199, v236, v242, v172, v174, v176, 3, 4, 0) :|: TRUE
f_390(v169, v170, v171, v173, v175, 1, v209, v237, v243, v172, v174, v176, 3, 4) -> f_392(v169, v170, v171, v173, v175, 1, v209, v237, v243, v172, v174, v176, 3, 4) :|: TRUE
f_391(v169, v170, v171, v173, v175, 1, v199, v236, v242, v172, v174, v176, 3, 4, 0) -> f_393(v169, v170, v171, v173, v175, 1, v199, v236, v242, v172, v174, v176, 3, 4, 0) :|: 0 = 0
f_392(v169, v170, v171, v173, v175, 1, v209, v237, v243, v172, v174, v176, 3, 4) -> f_394(v169, v170, v171, v173, v175, 1, v209, v237, v243, v172, v174, v176, 3, 4) :|: 0 = 0
f_393(v169, v170, v171, v173, v175, 1, v199, v236, v242, v172, v174, v176, 3, 4, 0) -> f_395(v169, v170, v171, v173, v175, 1, v199, v236, v242, v172, v174, v176, 3, 4, 0) :|: 0 = 0
f_394(v169, v170, v171, v173, v175, 1, v209, v237, v243, v172, v174, v176, 3, 4) -> f_396(v169, v170, v171, v173, v175, 1, v209, v237, v243, v172, v174, v176, 3, 4) :|: 0 = 0
f_395(v169, v170, v171, v173, v175, 1, v199, v236, v242, v172, v174, v176, 3, 4, 0) -> f_397(v242, v171, v172, v173, v174, v175, v176, v199, v169, v170, 1, v236, 3, 4, 0) :|: 0 = 0
f_396(v169, v170, v171, v173, v175, 1, v209, v237, v243, v172, v174, v176, 3, 4) -> f_398(v243, v171, v172, v173, v174, v175, v176, v209, v169, v170, 1, v237, 3, 4) :|: 0 = 0
f_397(v242, v171, v172, v173, v174, v175, v176, v199, v169, v170, 1, v236, 3, 4, 0) -> f_399(v242, v171, v172, v173, v174, v175, v176, v199, 3, 1, 4, 0) :|: TRUE
f_397(v242, v171, v172, v173, v174, v175, v176, v199, v169, v170, 1, v236, 3, 4, 0) -> f_401(v242, v171, v172, v173, v174, v175, v176, v199, v169, v170, 1, v236, 3, 4, 0) :|: TRUE
f_397(v242, v171, v172, v173, v174, v175, v176, v199, v169, v170, 1, v236, 3, 4, 0) -> f_424(v242, v171, v172, v173, v174, v175, v176, v199, v169, v170, 1, v236, 3, 2, 4, 0) :|: TRUE
f_397(v242, v171, v172, v173, v174, v175, v176, v199, v169, v170, 1, v236, 3, 4, 0) -> f_434(v242, v171, v172, v173, v174, v175, v176, v199, v169, v170, 1, v236, 3, 2, 4, 0) :|: TRUE
f_398(v243, v171, v172, v173, v174, v175, v176, v209, v169, v170, 1, v237, 3, 4) -> f_400(v243, v171, v172, v173, v174, v175, v176, v209, 3, 1, 4) :|: TRUE
f_398(v243, v171, v172, v173, v174, v175, v176, v209, v169, v170, 1, v237, 3, 4) -> f_402(v243, v171, v172, v173, v174, v175, v176, v209, v169, v170, 1, v237, 3, 4, 0) :|: TRUE
f_398(v243, v171, v172, v173, v174, v175, v176, v209, v169, v170, 1, v237, 3, 4) -> f_425(v243, v171, v172, v173, v174, v175, v176, v209, v169, v170, 1, v237, 3, 4, 2) :|: TRUE
f_398(v243, v171, v172, v173, v174, v175, v176, v209, v169, v170, 1, v237, 3, 4) -> f_435(v243, v171, v172, v173, v174, v175, v176, v209, v169, v170, 1, v237, 3, 4, 2) :|: TRUE
f_399(v242, v171, v172, v173, v174, v175, v176, v199, 3, 1, 4, 0) -> f_328(v242, v242) :|: TRUE
f_400(v243, v171, v172, v173, v174, v175, v176, v209, 3, 1, 4) -> f_328(v243, v243) :|: TRUE
f_401(v242, v171, v172, v173, v174, v175, v176, v199, v169, v170, 1, v236, 3, 4, 0) -> f_403(v169, v170, v171, v173, v175, 1, v199, v236, v242, v172, v174, v176, 3, 4, 0) :|: TRUE
f_402(v243, v171, v172, v173, v174, v175, v176, v209, v169, v170, 1, v237, 3, 4, 0) -> f_404(v169, v170, v171, v173, v175, 1, v209, v237, v243, v172, v174, v176, 3, 4, 0) :|: TRUE
f_403(v169, v170, v171, v173, v175, 1, v199, v236, v242, v172, v174, v176, 3, 4, 0) -> f_405(v169, v170, v171, v173, v175, 1, v199, v236, v242, v172, v174, v176, 3, 4, 0) :|: TRUE
f_404(v169, v170, v171, v173, v175, 1, v209, v237, v243, v172, v174, v176, 3, 4, 0) -> f_406(v169, v170, v171, v173, v175, 1, v209, v237, v243, v172, v174, v176, 3, 4, 0) :|: TRUE
f_405(v169, v170, v171, v173, v175, 1, v199, v236, v242, v172, v174, v176, 3, 4, 0) -> f_421(v169, v170, v171, v173, v175, 1, v199, v236, v242, v172, v174, v176, 3, 0, 4) :|: TRUE
f_406(v169, v170, v171, v173, v175, 1, v209, v237, v243, v172, v174, v176, 3, 4, 0) -> f_405(v169, v170, v171, v173, v175, 1, v209, v237, v243, v172, v174, v176, 3, 4, 0) :|: TRUE
f_422(v17, v36, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) -> f_426(v1, v3, v5, v7, v9, v11, v17, v36, v2, v4, v6, 3, 1, 4, 0) :|: TRUE
f_423(v17, v38, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) -> f_427(v1, v3, v5, v7, v9, v11, v17, v38, v2, v4, v6, 3, 1, 4, 0) :|: TRUE
f_424(v242, v171, v172, v173, v174, v175, v176, v199, v169, v170, 1, v236, 3, 2, 4, 0) -> f_428(v169, v170, v171, v173, v175, 1, v199, v236, v242, v172, v174, v176, 3, 2, 4, 0) :|: TRUE
f_425(v243, v171, v172, v173, v174, v175, v176, v209, v169, v170, 1, v237, 3, 4, 2) -> f_429(v169, v170, v171, v173, v175, 1, v209, v237, v243, v172, v174, v176, 3, 4, 2) :|: TRUE
f_428(v169, v170, v171, v173, v175, 1, v199, v236, v242, v172, v174, v176, 3, 2, 4, 0) -> f_430(v169, v170, v171, v173, v175, 1, v199, v236, v242, v172, v174, v176, 3, 2, 4, 0) :|: TRUE
f_429(v169, v170, v171, v173, v175, 1, v209, v237, v243, v172, v174, v176, 3, 4, 2) -> f_431(v169, v170, v171, v173, v175, 1, v209, v237, v243, v172, v174, v176, 3, 4, 2) :|: TRUE
f_430(v169, v170, v171, v173, v175, 1, v199, v236, v242, v172, v174, v176, 3, 2, 4, 0) -> f_421(v169, v170, v171, v173, v175, 1, v199, v236, v242, v172, v174, v176, 3, 0, 4) :|: TRUE
f_431(v169, v170, v171, v173, v175, 1, v209, v237, v243, v172, v174, v176, 3, 4, 2) -> f_421(v169, v170, v171, v173, v175, 1, v209, v237, v243, v172, v174, v176, 3, 0, 4) :|: TRUE
f_432(v17, v36, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) -> f_422(v17, v36, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) :|: TRUE
f_433(v17, v38, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) -> f_423(v17, v38, v1, v2, v3, v4, v5, v6, v7, v9, v11, 3, 1, 4, 0) :|: TRUE
f_434(v242, v171, v172, v173, v174, v175, v176, v199, v169, v170, 1, v236, 3, 2, 4, 0) -> f_424(v242, v171, v172, v173, v174, v175, v176, v199, v169, v170, 1, v236, 3, 2, 4, 0) :|: TRUE
f_435(v243, v171, v172, v173, v174, v175, v176, v209, v169, v170, 1, v237, 3, 4, 2) -> f_425(v243, v171, v172, v173, v174, v175, v176, v209, v169, v170, 1, v237, 3, 4, 2) :|: TRUE
Combined rules. Obtained 14 rulesP rules:
f_189 -> f_233(v32:0, v34:0, v36:0, v1:0, 3 + v1:0, v3:0, 3 + v3:0, v5:0, 3 + v5:0, 3 + v32:0, 3 + v34:0, v7:0, v9:0, v11:0, v17:0, 3, 1, 4, 0) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v13:0 > 0 && v15:0 > 0 && v17:0 > -1 && v32:0 > 0 && v34:0 > 0
f_233(v32:0, v34:0, v36:0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v33:0, v35:0, v7:0, v9:0, v11:0, v17:0, 3, 1, 4, 0) -> f_427(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v17:0, v38:0, v2:0, v4:0, v6:0, 3, 1, 4, 0) :|: v36:0 < 0 && v38:0 + v36:0 = 0 && v38:0 > 0
f_336(v169:0, v170:0, v171:0, v173:0, v175:0, v172:0, v174:0, v176:0, 3, 1, 4) -> f_342(v169:0, v170:0, v171:0, v173:0, v175:0, 0, v172:0, v174:0, v176:0, 3, 1, 4) :|: v170:0 < 1
f_233(v32:0, v34:0, v36:0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v33:0, v35:0, v7:0, v9:0, v11:0, v17:0, 3, 1, 4, 0) -> f_271(v17:0, 0, v63:0, v65:0, v67:0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v64:0, v66:0, v68:0, v7:0, v9:0, v11:0, 3, 1, 4) :|: v36:0 < 0 && v38:0 + v36:0 = 0 && v38:0 > 0
f_336(1 + (v238:0 + v199:0), v170:0, v171:0, v173:0, v175:0, v172:0, v174:0, v176:0, 3, 1, 4) -> f_421(1 + (v238:0 + v199:0), v170:0, v171:0, v173:0, v175:0, 1, v199:0, v238:0 + v199:0, v238:0, v172:0, v174:0, v176:0, 3, 0, 4) :|: v170:0 > 0 && v195:0 > 0 && v197:0 > 0 && v199:0 > -1
f_336(1 + (v239:0 + v209:0), v170:0, v171:0, v173:0, v175:0, v172:0, v174:0, v176:0, 3, 1, 4) -> f_421(1 + (v239:0 + v209:0), v170:0, v171:0, v173:0, v175:0, 1, v209:0, v239:0 + v209:0, v239:0, v172:0, v174:0, v176:0, 3, 0, 4) :|: v170:0 > 0 && v195:0 > 0 && v197:0 > 0 && v199:0 < 0 && v209:0 + v199:0 = 0 && v209:0 > 0
f_233(v32:0, v34:0, v36:0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v33:0, v35:0, v7:0, v9:0, v11:0, v17:0, 3, 1, 4, 0) -> f_426(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v17:0, v36:0, v2:0, v4:0, v6:0, 3, 1, 4, 0) :|: v36:0 > -1
f_336(1 + (v239:0 + v209:0), v170:0, v171:0, v173:0, v175:0, v172:0, v174:0, v176:0, 3, 1, 4) -> f_336(v239:0, v239:0, v171:1, v173:1, v175:1, 3 + v171:1, 3 + v173:1, 3 + v175:1, 3, 1, 4) :|: v170:0 > 0 && v195:0 > 0 && v197:0 > 0 && v199:0 < 0 && v209:0 > 0 && v209:0 + v199:0 = 0 && v171:1 > 0 && v173:1 > 0 && v175:1 > 0
f_233(v32:0, v34:0, v36:0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v33:0, v35:0, v7:0, v9:0, v11:0, v17:0, 3, 1, 4, 0) -> f_345(v169:0, v170:0, v171:0, v173:0, v175:0, 0, v172:0, v174:0, v176:0, 3, 1, 4) :|: v36:0 < 0 && v38:0 + v36:0 = 0 && v38:0 > 0
f_233(v32:0, v34:0, v36:0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v33:0, v35:0, v7:0, v9:0, v11:0, v17:0, 3, 1, 4, 0) -> f_347(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v17:0, 0, v2:0, v4:0, v6:0, 3, 1, 4) :|: v36:0 > -1
f_233(v32:0, v34:0, v36:0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v33:0, v35:0, v7:0, v9:0, v11:0, v17:0, 3, 1, 4, 0) -> f_336(v17:0, v38:0, v171:0, v173:0, v175:0, 3 + v171:0, 3 + v173:0, 3 + v175:0, 3, 1, 4) :|: v36:0 < 0 && v38:0 > 0 && v38:0 + v36:0 = 0 && v171:0 > 0 && v173:0 > 0 && v175:0 > 0
f_189 -> f_233(v32:0, v34:0, v36:0, v1:0, 3 + v1:0, v3:0, 3 + v3:0, v5:0, 3 + v5:0, 3 + v32:0, 3 + v34:0, v7:0, v9:0, v11:0, v17:0, 3, 1, 4, 0) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v13:0 > 0 && v15:0 > 0 && v17:1 < 0 && v19:0 > 0 && v19:0 + v17:1 = 0 && v32:0 > 0 && v34:0 > 0
f_336(1 + (v238:0 + v199:0), v170:0, v171:0, v173:0, v175:0, v172:0, v174:0, v176:0, 3, 1, 4) -> f_336(v238:0, v238:0, v171:1, v173:1, v175:1, 3 + v171:1, 3 + v173:1, 3 + v175:1, 3, 1, 4) :|: v170:0 > 0 && v195:0 > 0 && v197:0 > 0 && v199:0 > -1 && v171:1 > 0 && v173:1 > 0 && v175:1 > 0
f_233(v32:0, v34:0, v36:0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v33:0, v35:0, v7:0, v9:0, v11:0, v17:0, 3, 1, 4, 0) -> f_336(v17:0, v36:0, v171:0, v173:0, v175:0, 3 + v171:0, 3 + v173:0, 3 + v175:0, 3, 1, 4) :|: v36:0 > -1 && v171:0 > 0 && v173:0 > 0 && v175:0 > 0
Filtered unneeded arguments:
   f_233(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19) -> f_233(x3, x15)
   f_336(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11) -> f_336(x1, x2)
Removed division, modulo operations, cleaned up constraints. Obtained 14 rules.P rules:
f_189 -> f_233(v36:0, v17:0) :|: v17:0 > -1
f_233(v36:0, v17:0) -> f_427(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v17:0, v38:0, v2:0, v4:0, v6:0, 3, 1, 4, 0) :|: v38:0 + v36:0 = 0 && v38:0 > 0 && v36:0 < 0
f_336(v169:0, v170:0) -> f_342(v169:0, v170:0, v171:0, v173:0, v175:0, 0, v172:0, v174:0, v176:0, 3, 1, 4) :|: v170:0 < 1
f_233(v36:0, v17:0) -> f_271(v17:0, 0, v63:0, v65:0, v67:0, v1:0, v2:0, v3:0, v4:0, v5:0, v6:0, v64:0, v66:0, v68:0, v7:0, v9:0, v11:0, 3, 1, 4) :|: v36:0 < 0
f_336(sum~cons_1~sum~v238:0~v199:0, v170:0) -> f_421(1 + (v238:0 + v199:0), v170:0, v171:0, v173:0, v175:0, 1, v199:0, v238:0 + v199:0, v238:0, v172:0, v174:0, v176:0, 3, 0, 4) :|: v170:0 > 0 && v199:0 > -1 && sum~cons_1~sum~v238:0~v199:0 = 1 + (v238:0 + v199:0)
f_336(sum~cons_1~sum~v239:0~v209:0, v170:0) -> f_421(1 + (v239:0 + v209:0), v170:0, v171:0, v173:0, v175:0, 1, v209:0, v239:0 + v209:0, v239:0, v172:0, v174:0, v176:0, 3, 0, 4) :|: v170:0 > 0 && v209:0 > 0 && sum~cons_1~sum~v239:0~v209:0 = 1 + (v239:0 + v209:0)
f_233(v36:0, v17:0) -> f_426(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v17:0, v36:0, v2:0, v4:0, v6:0, 3, 1, 4, 0) :|: v36:0 > -1
f_336(sum~cons_1~sum~v239:0~v209:0, v170:0) -> f_336(v239:0, v239:0) :|: v170:0 > 0 && v209:0 > 0 && sum~cons_1~sum~v239:0~v209:0 = 1 + (v239:0 + v209:0)
f_233(v36:0, v17:0) -> f_345(v169:0, v170:0, v171:0, v173:0, v175:0, 0, v172:0, v174:0, v176:0, 3, 1, 4) :|: v36:0 < 0
f_233(v36:0, v17:0) -> f_347(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v17:0, 0, v2:0, v4:0, v6:0, 3, 1, 4) :|: v36:0 > -1
f_233(v36:0, v17:0) -> f_336(v17:0, v38:0) :|: v38:0 > 0 && v38:0 + v36:0 = 0 && v36:0 < 0
f_189 -> f_233(v36:0, v17:0) :|: TRUE
f_336(sum~cons_1~sum~v238:0~v199:0, v170:0) -> f_336(v238:0, v238:0) :|: v170:0 > 0 && v199:0 > -1 && sum~cons_1~sum~v238:0~v199:0 = 1 + (v238:0 + v199:0)
f_233(v36:0, v17:0) -> f_336(v17:0, v36:0) :|: v36:0 > -1

----------------------------------------

(6)
Obligation:
Rules:
f_189 -> f_233(v36:0, v17:0) :|: v17:0 > -1
f_233(x, x1) -> f_427(x2, x3, x4, x5, x6, x7, x1, x8, x9, x10, x11, 3, 1, 4, 0) :|: x8 + x = 0 && x8 > 0 && x < 0
f_336(v169:0, v170:0) -> f_342(v169:0, v170:0, v171:0, v173:0, v175:0, 0, v172:0, v174:0, v176:0, 3, 1, 4) :|: v170:0 < 1
f_233(x12, x13) -> f_271(x13, 0, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, 3, 1, 4) :|: x12 < 0
f_336(x29, x30) -> f_421(1 + (x31 + x32), x30, x33, x34, x35, 1, x32, x31 + x32, x31, x36, x37, x38, 3, 0, 4) :|: x30 > 0 && x32 > -1 && x29 = 1 + (x31 + x32)
f_336(x39, x40) -> f_421(1 + (x41 + x42), x40, x43, x44, x45, 1, x42, x41 + x42, x41, x46, x47, x48, 3, 0, 4) :|: x40 > 0 && x42 > 0 && x39 = 1 + (x41 + x42)
f_233(x49, x50) -> f_426(x51, x52, x53, x54, x55, x56, x50, x49, x57, x58, x59, 3, 1, 4, 0) :|: x49 > -1
f_336(x60, x61) -> f_336(x62, x62) :|: x61 > 0 && x63 > 0 && x60 = 1 + (x62 + x63)
f_233(x64, x65) -> f_345(x66, x67, x68, x69, x70, 0, x71, x72, x73, 3, 1, 4) :|: x64 < 0
f_233(x74, x75) -> f_347(x76, x77, x78, x79, x80, x81, x75, 0, x82, x83, x84, 3, 1, 4) :|: x74 > -1
f_233(x85, x86) -> f_336(x86, x87) :|: x87 > 0 && x87 + x85 = 0 && x85 < 0
f_189 -> f_233(x88, x89) :|: TRUE
f_336(x90, x91) -> f_336(x92, x92) :|: x91 > 0 && x93 > -1 && x90 = 1 + (x92 + x93)
f_233(x94, x95) -> f_336(x95, x94) :|: x94 > -1
Start term: f_189

----------------------------------------

(7) IRSToKoat (EQUIVALENT)
Convert an IRS to a koat problem
----------------------------------------

(8)
Obligation:
(GOAL COMPLEXITY)
(STARTTERM (FUNCTIONSYMBOLS f_189))
(VAR x290 x160 x281 x280 x162 x283 x161 x282 x164 x285 x163 x284 x166 x287 x165 x286 x168 x289 x167 x288 x169 x270 x391 x390 x151 x272 x393 x150 x271 x392 x153 x274 x395 x152 x273 x394 x155 x276 x397 x154 x275 x396 x157 x278 x399 x156 x277 x398 x159 x158 x279 x380 x140 x261 x382 x260 x381 x142 x263 x384 x141 x262 x383 x144 x265 x386 x143 x264 x385 x146 x267 x388 x145 x266 x387 x148 x269 x147 x268 x389 x149 x250 x371 x370 x131 x252 x373 x130 x251 x372 x133 x254 x375 x132 x253 x374 x135 x256 x377 x134 x255 x376 x137 x258 x379 x136 x257 x378 x139 x138 x259 x193 x192 x195 x194 x197 x196 x199 x198 x'' k14 k15 k16 k17 k10 k11 k12 k13 x191 x190 x182 x181 x184 x183 x186 x185 x188 x187 x189 x180 x171 x292 x170 x291 x173 x294 x172 x293 x175 x296 x174 x295 x177 x298 x176 x297 x179 x178 x299 k36 k37 k38 k39 k32 k33 k34 k35 k30 k31 k29 k25 k26 k27 k28 k21 k22 k23 k24 k20 k18 k19 k58 k59 k54 k55 k56 k57 k50 k51 k52 k53 k47 k48 k49 k43 k44 k45 k46 k40 k41 k42 k76 k77 k78 k79 k72 k73 k74 k75 k70 k71 x k69 k65 k66 k67 k68 k61 k62 k63 k64 k60 k98 k99 k94 k95 k96 k97 k90 k91 k92 k93 x28 x29 x24 x25 x26 x27 x20 x21 x22 x23 k87 k88 k89 k83 k84 k85 k86 k80 k81 k82 x17 x18 x19 x13 x14 x15 x16 x10 x11 x12 x46 x47 x48 x49 x42 x43 x44 x45 x40 x41 x39 x35 x36 x37 x38 x31 x32 x33 x34 x30 x70 x68 x69 x64 x65 x66 x67 x60 x61 x62 x63 k7 k8 k5 k6 k9 k0 k3 k4 k1 k2 x57 x58 x59 x53 x54 x55 x56 x50 x51 x52 x90 x91 x92 x86 x87 x88 x401 x89 x400 x82 x403 x83 x402 x84 x85 x80 x81 x79 x75 x76 x77 x78 x71 k103 x72 k102 x73 k101 x74 k100 x97 x98 x99 x93 x94 x95 x96 x209 x208 x329 x320 x201 x322 x200 x321 x203 x324 x202 x323 x205 x326 x204 x325 x207 x328 x206 x327 x319 x318 x311 x310 x313 x312 x315 x314 x317 x316 x308 x307 x309 x300 x302 x301 x304 x303 x306 x305 x360 x120 x241 x362 x240 x361 x122 x243 x364 x121 x242 x363 x124 x245 x366 x123 x244 x365 x126 x247 x368 x125 x246 x367 x128 x249 x127 x248 x369 x129 x230 x351 x350 x111 x232 x353 x110 x231 x352 x113 x234 x355 x112 x233 x354 x115 x236 x357 x114 x235 x356 x117 x238 x359 x116 x237 x358 x119 x118 x239 x109 x4 x5 x2 x3 x8 x340 x9 x6 x100 x221 x342 x7 x220 x341 x102 x223 x344 x101 x222 x343 x104 x225 x346 x103 x224 x345 x106 x227 x348 x1 x105 x226 x347 x108 x229 x107 x228 x349 x219 x' x210 x331 x330 x212 x333 x211 x332 x214 x335 x213 x334 x216 x337 x215 x336 x218 x339 x217 x338)
(RULES
  f_233(k102, k103, x131, x132, x133, x134, x135, x136, x137, x138, x139, x140, x141, x142, x143, x144, x145, x146, x147, x148) -> f_336(k103, k102, x149, x150, x151, x152, x153, x154, x155, x156, x157, x158, x159, x160, x161, x162, x163, x164, x165, x166) :|: k102 > -1
  f_189(x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40) -> f_233(k51, k52, x41, x42, x43, x44, x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, x57, x58) :|: 0 = 0
  f_336(k0, k50, x328, x329, x330, x331, x332, x333, x334, x335, x336, x337, x338, x339, x340, x341, x342, x343, x344, x345) -> f_342(k0, k50, k88, k28, k91, 0, k5, k56, k10, 3, 1, 4, x346, x347, x348, x349, x350, x351, x352, x353) :|: k50 < 1
  f_233(k70, k63, x354, x355, x356, x357, x358, x359, x360, x361, x362, x363, x364, x365, x366, x367, x368, x369, x370, x371) -> f_347(k64, k65, k66, k62, k59, k60, k63, 0, k54, k55, k57, 3, 1, 4, x372, x373, x374, x375, x376, x377) :|: k70 > -1
  f_233(k4, k42, x190, x191, x192, x193, x194, x195, x196, x197, x198, x199, x200, x201, x202, x203, x204, x205, x206, x207) -> f_426(k43, k44, k38, k39, k40, k41, k42, k4, k35, k36, k37, 3, 1, 4, 0, x208, x209, x210, x211, x212) :|: k4 > -1
  f_336(k45, k46, x213, x214, x215, x216, x217, x218, x219, x220, x221, x222, x223, x224, x225, x226, x227, x228, x229, x230) -> f_336(k47, k47, x231, x232, x233, x234, x235, x236, x237, x238, x239, x240, x241, x242, x243, x244, x245, x246, x247, x248) :|: k46 > 0 && x93 > -1 && k45 = 1 + (k47 + x93)
  f_189(x290, x291, x292, x293, x294, x295, x296, x297, x298, x299, x300, x301, x302, x303, x304, x305, x306, x307, x308, x309) -> f_233(k61, k24, x310, x311, x312, x313, x314, x315, x316, x317, x318, x319, x320, x321, x322, x323, x324, x325, x326, x327) :|: k24 > -1
  f_336(k32, k33, x59, x60, x61, x62, x63, x64, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74, x75, x76) -> f_336(k34, k34, x77, x78, x79, x80, x81, x82, x83, x84, x85, x86, x87, x88, x89, x90, x91, x92, x93, x94) :|: k33 > 0 && x63 > 0 && k32 = 1 + (k34 + x63)
  f_233(k53, k90, x249, x250, x251, x252, x253, x254, x255, x256, x257, x258, x259, x260, x261, x262, x263, x264, x265, x266) -> f_427(k75, k76, k71, k73, k81, k83, k90, k77, k79, k99, k100, 3, 1, 4, 0, x267, x268, x269, x270, x271) :|: k77 + k53 = 0 && k77 > 0 && k53 < 0
  f_233(k101, k95, x272, x273, x274, x275, x276, x277, x278, x279, x280, x281, x282, x283, x284, x285, x286, x287, x288, x289) -> f_271(k95, 0, k96, k97, k98, k92, k93, k94, k85, k86, k87, k89, k78, k80, k82, k84, k72, 3, 1, 4) :|: k101 < 0
  f_233(k58, k48, x95, x96, x97, x98, x99, x100, x101, x102, x103, x104, x105, x106, x107, x108, x109, x110, x111, x112) -> f_336(k48, k49, x113, x114, x115, x116, x117, x118, x119, x120, x121, x122, x123, x124, x125, x126, x127, x128, x129, x130) :|: k49 > 0 && k49 + k58 = 0 && k58 < 0
  f_336(k13, k11, x, x', x'', x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15) -> f_421(1 + (k12 + k6), k11, k7, k8, k9, 1, k6, k12 + k6, k12, k1, k2, k3, 3, 0, 4, x16, x17, x18, x19, x20) :|: k11 > 0 && k6 > 0 && k13 = 1 + (k12 + k6)
  f_336(k74, k22, x167, x168, x169, x170, x171, x172, x173, x174, x175, x176, x177, x178, x179, x180, x181, x182, x183, x184) -> f_421(1 + (k18 + k19), k22, k20, k21, k14, 1, k19, k18 + k19, k18, k15, k16, k17, 3, 0, 4, x185, x186, x187, x188, x189) :|: k22 > 0 && k19 > -1 && k74 = 1 + (k18 + k19)
  f_233(k27, k29, x378, x379, x380, x381, x382, x383, x384, x385, x386, x387, x388, x389, x390, x391, x392, x393, x394, x395) -> f_345(k30, k31, k25, k26, k23, 0, k67, k68, k69, 3, 1, 4, x396, x397, x398, x399, x400, x401, x402, x403) :|: k27 < 0
)

----------------------------------------

(9) KoAT2 (EQUIVALENT)
KoAT2 was called with the following command:

/aprove/bin/koat2 analyse --termination --cfr=pe -d5 --local=mprf,twn -rtermcomp -i /tmp/aprove.InputModules.Programs.koat2_4106931532997240672.koat 

KoAT2's output was:

YES

----------------------------------------

(10)
YES
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.001s
