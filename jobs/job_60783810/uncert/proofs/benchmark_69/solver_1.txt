YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/OJiyf.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could be proven:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 54 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 14.1 s]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) LLVM Symbolic Execution SCC
        (8) SCC2IRS [SOUND, 416 ms]
        (9) IntTRS
        (10) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (11) IntTRS
        (12) PolynomialOrderProcessor [EQUIVALENT, 22 ms]
        (13) AND
            (14) IntTRS
                (15) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                (16) IntTRS
                (17) RankingReductionPairProof [EQUIVALENT, 11 ms]
                (18) IntTRS
                (19) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                (20) IntTRS
                (21) PolynomialOrderProcessor [EQUIVALENT, 4 ms]
                (22) IntTRS
                (23) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                (24) IntTRS
                (25) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                (26) IntTRS
                (27) RankingReductionPairProof [EQUIVALENT, 2 ms]
                (28) YES
            (29) IntTRS
                (30) TerminationGraphProcessor [EQUIVALENT, 150 ms]
                (31) IntTRS
                (32) IntTRSCompressionProof [EQUIVALENT, 2 ms]
                (33) IntTRS
                (34) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                (35) IntTRS
                (36) RankingReductionPairProof [EQUIVALENT, 0 ms]
                (37) YES
    (38) LLVM Symbolic Execution SCC
        (39) SCC2IRS [SOUND, 234 ms]
        (40) IntTRS
        (41) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (42) IntTRS
        (43) PolynomialOrderProcessor [EQUIVALENT, 7 ms]
        (44) AND
            (45) IntTRS
                (46) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                (47) IntTRS
                (48) RankingReductionPairProof [EQUIVALENT, 0 ms]
                (49) YES
            (50) IntTRS
                (51) TerminationGraphProcessor [EQUIVALENT, 25 ms]
                (52) YES
    (53) LLVM Symbolic Execution SCC
        (54) SCC2IRS [SOUND, 109 ms]
        (55) IntTRS
        (56) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (57) IntTRS
        (58) PolynomialOrderProcessor [EQUIVALENT, 1 ms]
        (59) YES


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/OJiyf.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/OJiyf.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 7
	0:
		%1 = alloca i32, align 4
		%2 = alloca *i32, align 8
		%3 = alloca *i32, align 8
		%4 = alloca *i32, align 8
		%5 = alloca *i32, align 8
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i32 %2)
		%6 = alloca i8, numElementsLit: 4, align 16
		%7 = bitcast *i8 %6 to *i32
		store %7, %2
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i32 %3)
		%8 = alloca i8, numElementsLit: 4, align 16
		%9 = bitcast *i8 %8 to *i32
		store %9, %3
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i32 %4)
		%10 = alloca i8, numElementsLit: 4, align 16
		%11 = bitcast *i8 %10 to *i32
		store %11, %4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i32 %5)
		%12 = alloca i8, numElementsLit: 4, align 16
		%13 = bitcast *i8 %12 to *i32
		store %13, %5
		%14 = load %2
		store 1000, %14
		%15 = load %3
		store 1, %15
		%16 = load %4
		store 1, %16
		%17 = load %5
		store 1, %17
		br %18
	18:
		%19 = load %3
		%20 = load %19
		%21 = load %3
		%22 = load %21
		%23 = mul i32 %20, %22
		%24 = load %3
		%25 = load %24
		%26 = mul i32 %23, %25
		%27 = load %4
		%28 = load %27
		%29 = load %4
		%30 = load %29
		%31 = mul i32 %28, %30
		%32 = load %4
		%33 = load %32
		%34 = mul i32 %31, %33
		%35 = load %5
		%36 = load %35
		%37 = load %5
		%38 = load %37
		%39 = mul i32 %36, %38
		%40 = load %5
		%41 = load %40
		%42 = mul i32 %39, %41
		%43 = add i32 %34, %42
		%44 = icmp eq %26 %43
		br %44, %45, %46
	45:
		store 1, %1
		br %80
	46:
		%47 = load %3
		%48 = load %47
		%49 = add i32 %48, 1
		store %49, %47
		%50 = load %3
		%51 = load %50
		%52 = load %2
		%53 = load %52
		%54 = icmp sgt %51 %53
		br %54, %55, %60
	55:
		%56 = load %3
		store 1, %56
		%57 = load %4
		%58 = load %57
		%59 = add i32 %58, 1
		store %59, %57
		br %60
	60:
		%61 = load %4
		%62 = load %61
		%63 = load %2
		%64 = load %63
		%65 = icmp sgt %62 %64
		br %65, %66, %71
	66:
		%67 = load %4
		store 1, %67
		%68 = load %5
		%69 = load %68
		%70 = add i32 %69, 1
		store %70, %68
		br %71
	71:
		%72 = load %5
		%73 = load %72
		%74 = load %2
		%75 = load %74
		%76 = icmp sgt %73 %75
		br %76, %77, %78
	77:
		br %79
	78:
		br %18
	79:
		store 0, %1
		br %80
	80:
		%81 = load %1
		ret %81


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 3 SCCs.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC
----------------------------------------

(8) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 261 rulesP rules:
f_3740(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24333, v24334, v24335, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, v24344, 1000, 1, v24347, v24348, v24349, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 2, 4, 8) -> f_3743(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24333, v24334, v24335, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, v24344, 1000, 1, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 2, 4, 8) :|: 0 = 0
f_3743(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24333, v24334, v24335, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, v24344, 1000, 1, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 2, 4, 8) -> f_3746(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24333, v24334, v24335, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, v24344, 1000, 1, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 2, 4, 8) :|: 0 = 0
f_3746(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24333, v24334, v24335, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, v24344, 1000, 1, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 2, 4, 8) -> f_3749(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24333, v24334, v24335, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, v24344, 1000, 1, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 2, 4, 8) :|: 0 = 0
f_3749(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24333, v24334, v24335, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, v24344, 1000, 1, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 2, 4, 8) -> f_3753(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24333, v24334, v24335, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, v24344, 1000, 1, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: v24349 <= 1000 && v24339 <= 999
f_3753(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24333, v24334, v24335, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, v24344, 1000, 1, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3756(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24333, v24334, v24335, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, v24344, 1000, 1, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: 0 = 0
f_3756(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24333, v24334, v24335, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, v24344, 1000, 1, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3759(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24333, v24334, v24335, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, v24344, 1000, 1, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: TRUE
f_3759(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24333, v24334, v24335, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, v24344, 1000, 1, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3762(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24333, v24334, v24335, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, v24344, 1000, 1, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: TRUE
f_3762(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24333, v24334, v24335, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, v24344, 1000, 1, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3765(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24333, v24334, v24335, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, v24344, 1000, 1, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: 0 = 0
f_3765(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24333, v24334, v24335, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, v24344, 1000, 1, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3768(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24333, v24334, v24335, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, 1000, 1, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: 0 = 0
f_3768(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24333, v24334, v24335, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, 1000, 1, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3771(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24333, v24334, v24335, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, 1000, 1, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: 0 = 0
f_3771(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24333, v24334, v24335, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, 1000, 1, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3773(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24334, v24333, v24335, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, 1000, 1, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: 0 = 0
f_3773(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24334, v24333, v24335, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, 1000, 1, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3775(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24333, v24335, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, 1000, 1, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: v24679 = v24344 * v24344
f_3775(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24333, v24335, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, 1000, 1, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3777(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24333, v24335, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, 1000, 1, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: 0 = 0
f_3777(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24333, v24335, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, 1000, 1, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3779(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24335, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, v24333, 1000, 1, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: 0 = 0
f_3779(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24335, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, v24333, 1000, 1, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3781(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, v24333, 1000, 1, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: v24680 = v24679 * v24344
f_3781(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, v24333, 1000, 1, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3783(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, v24333, 1000, 1, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: 0 = 0
f_3783(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, v24333, 1000, 1, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3785(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, v24333, 1000, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: 0 = 0
f_3785(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, v24333, 1000, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3787(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, v24333, 1000, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: 0 = 0
f_3787(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, v24333, 1000, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3789(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24337, v24336, v24338, v24339, v24340, v24341, v24342, 0, v24333, 1000, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: 0 = 0
f_3789(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24337, v24336, v24338, v24339, v24340, v24341, v24342, 0, v24333, 1000, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3791(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24336, v24338, v24339, v24340, v24341, v24342, 0, v24333, 1000, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: 0 = 0
f_3791(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24336, v24338, v24339, v24340, v24341, v24342, 0, v24333, 1000, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3793(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24336, v24338, v24339, v24340, v24341, v24342, 0, v24333, 1000, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: 0 = 0
f_3793(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24336, v24338, v24339, v24340, v24341, v24342, 0, v24333, 1000, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3795(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24338, v24339, v24340, v24341, v24342, 0, v24333, 1000, v24336, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: 0 = 0
f_3795(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24338, v24339, v24340, v24341, v24342, 0, v24333, 1000, v24336, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3797(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24339, v24340, v24341, v24342, 0, v24333, 1000, v24336, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: 0 = 0
f_3797(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24339, v24340, v24341, v24342, 0, v24333, 1000, v24336, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3799(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24339, v24340, v24341, v24342, 0, v24333, 1000, v24336, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: 0 = 0
f_3799(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24339, v24340, v24341, v24342, 0, v24333, 1000, v24336, v24349, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3801(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24339, v24340, v24341, v24342, 0, v24333, 1000, v24336, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: 0 = 0
f_3801(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24339, v24340, v24341, v24342, 0, v24333, 1000, v24336, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3803(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24339, v24340, v24341, v24342, 0, v24333, 1000, v24336, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: 0 = 0
f_3803(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24339, v24340, v24341, v24342, 0, v24333, 1000, v24336, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3806(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24340, v24339, v24341, v24342, 0, v24333, 1000, v24336, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: 0 = 0
f_3806(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24340, v24339, v24341, v24342, 0, v24333, 1000, v24336, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3809(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24339, v24341, v24342, 0, v24333, 1000, v24336, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: v24682 = v24349 * v24349
f_3809(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24339, v24341, v24342, 0, v24333, 1000, v24336, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3812(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24339, v24341, v24342, 0, v24333, 1000, v24336, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: 0 = 0
f_3812(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24339, v24341, v24342, 0, v24333, 1000, v24336, v24347, v24348, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3815(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24341, v24342, 0, v24333, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: 0 = 0
f_3815(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24341, v24342, 0, v24333, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3818(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24342, 0, v24333, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: v24819 = v24682 * v24349
f_3818(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24342, 0, v24333, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3821(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24333, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: v24821 = 1 + v24819
f_3821(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24333, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3824(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24333, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: v24680 != v24821
f_3824(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24333, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3827(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24333, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: 0 = 0
f_3827(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24333, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3830(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24333, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: TRUE
f_3830(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24333, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3833(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24333, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: 0 = 0
f_3833(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24333, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3836(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: 0 = 0
f_3836(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3840(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: v24987 = 1 + v24344 && 3 <= v24987
f_3840(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3843(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: TRUE
f_3843(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3846(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: 0 = 0
f_3846(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3848(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: 0 = 0
f_3848(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3850(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: 0 = 0
f_3850(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3852(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: 0 = 0
f_3852(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3854(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: 1000 < v24987 && 1000 <= v24344
f_3852(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3855(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: v24987 <= 1000 && v24344 <= 999
f_3854(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3857(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: 0 = 0
f_3857(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3860(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: TRUE
f_3860(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3864(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: 0 = 0
f_3864(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3867(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: TRUE
f_3867(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3870(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: 0 = 0
f_3870(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3873(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: 0 = 0
f_3873(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3876(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, 2, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 4, 8) :|: 0 = 0
f_3876(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, 2, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 4, 8) -> f_3880(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, 2, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 4, 8) :|: TRUE
f_3880(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, 2, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 4, 8) -> f_3883(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, 2, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 4, 8) :|: TRUE
f_3883(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, 2, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 4, 8) -> f_3885(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, 2, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 4, 8) :|: 0 = 0
f_3885(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, 2, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 4, 8) -> f_3887(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, 2, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 999, 4, 8, 1001) :|: 0 = 0
f_3887(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, 2, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 999, 4, 8, 1001) -> f_3889(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, 2, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 999, 4, 8, 1001) :|: 0 = 0
f_3889(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, 2, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 999, 4, 8, 1001) -> f_3891(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, 2, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 999, 4, 8, 1001) :|: 0 = 0
f_3891(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, 2, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 999, 4, 8, 1001) -> f_3894(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, 2, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 999, 4, 8, 1001) :|: 0 = 0
f_3894(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, 2, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 999, 4, 8, 1001) -> f_3897(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, 2, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 999, 4, 8, 1001) :|: TRUE
f_3897(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, 2, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 999, 4, 8, 1001) -> f_4038(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, 1, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, 1, 2, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 999, 2, 1001, 4, 8) :|: TRUE
f_4038(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, v27723, v27724, v27725, v27726, v27727, v27728, v27729, v27730, v27731, v27732, 0, v27734, 1000, 1, v27737, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) -> f_4041(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, v27723, v27724, v27725, v27726, v27727, v27728, v27729, v27730, v27731, v27732, 0, v27734, 1000, 1, v27737, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) :|: 0 = 0
f_4041(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, v27723, v27724, v27725, v27726, v27727, v27728, v27729, v27730, v27731, v27732, 0, v27734, 1000, 1, v27737, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) -> f_4043(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, v27723, v27724, v27725, v27726, v27727, v27728, v27729, v27730, v27731, v27732, 0, v27734, 1000, 1, v27737, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) :|: 0 = 0
f_4043(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, v27723, v27724, v27725, v27726, v27727, v27728, v27729, v27730, v27731, v27732, 0, v27734, 1000, 1, v27737, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) -> f_4045(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, v27723, v27724, v27725, v27726, v27727, v27728, v27729, v27730, v27731, v27732, 0, v27734, 1000, 1, v27737, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) :|: 0 = 0
f_4045(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, v27723, v27724, v27725, v27726, v27727, v27728, v27729, v27730, v27731, v27732, 0, v27734, 1000, 1, v27737, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) -> f_4047(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, v27723, v27724, v27725, v27726, v27727, v27728, v27729, v27730, v27731, v27732, 0, v27734, 1000, 1, v27737, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) :|: 0 = 0
f_4047(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, v27723, v27724, v27725, v27726, v27727, v27728, v27729, v27730, v27731, v27732, 0, v27734, 1000, 1, v27737, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) -> f_4049(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, v27723, v27724, v27725, v27726, v27727, v27728, v27729, v27730, v27731, v27732, 0, v27734, 1000, 1, v27737, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) :|: 0 = 0
f_4049(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, v27723, v27724, v27725, v27726, v27727, v27728, v27729, v27730, v27731, v27732, 0, v27734, 1000, 1, v27737, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) -> f_4051(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, v27723, v27724, v27725, v27726, v27727, v27728, v27729, v27730, v27731, v27732, 0, v27734, 1000, 1, v27737, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) :|: TRUE
f_4051(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, v27723, v27724, v27725, v27726, v27727, v27728, v27729, v27730, v27731, v27732, 0, v27734, 1000, 1, v27737, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) -> f_4054(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, v27723, v27724, v27725, v27726, v27727, v27728, v27729, v27730, v27731, v27732, 0, v27734, 1000, 1, v27737, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) :|: TRUE
f_4054(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, v27723, v27724, v27725, v27726, v27727, v27728, v27729, v27730, v27731, v27732, 0, v27734, 1000, 1, v27737, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) -> f_4056(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, v27723, v27724, v27725, v27726, v27727, v27728, v27729, v27730, v27731, v27732, 0, v27734, 1000, 1, v27737, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) :|: 0 = 0
f_4056(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, v27723, v27724, v27725, v27726, v27727, v27728, v27729, v27730, v27731, v27732, 0, v27734, 1000, 1, v27737, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) -> f_4058(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27723, v27724, v27725, v27726, v27727, v27728, v27729, v27730, v27731, v27732, 0, v27734, 1000, v27737, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) :|: 0 = 0
f_4058(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27723, v27724, v27725, v27726, v27727, v27728, v27729, v27730, v27731, v27732, 0, v27734, 1000, v27737, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) -> f_4060(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27723, v27724, v27725, v27726, v27727, v27728, v27729, v27730, v27731, v27732, 0, v27734, 1000, v27737, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) :|: 0 = 0
f_4060(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27723, v27724, v27725, v27726, v27727, v27728, v27729, v27730, v27731, v27732, 0, v27734, 1000, v27737, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) -> f_4062(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27724, v27723, v27725, v27726, v27727, v27728, v27729, v27730, v27731, v27732, 0, v27734, 1000, v27737, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) :|: 0 = 0
f_4062(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27724, v27723, v27725, v27726, v27727, v27728, v27729, v27730, v27731, v27732, 0, v27734, 1000, v27737, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) -> f_4065(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27723, v27725, v27726, v27727, v27728, v27729, v27730, v27731, v27732, 0, v27734, 1000, v27737, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) :|: 0 = 0
f_4065(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27723, v27725, v27726, v27727, v27728, v27729, v27730, v27731, v27732, 0, v27734, 1000, v27737, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) -> f_4068(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27723, v27725, v27726, v27727, v27728, v27729, v27730, v27731, v27732, 0, v27734, 1000, v27737, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) :|: 0 = 0
f_4068(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27723, v27725, v27726, v27727, v27728, v27729, v27730, v27731, v27732, 0, v27734, 1000, v27737, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) -> f_4071(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27725, v27726, v27727, v27728, v27729, v27730, v27731, v27732, 0, v27723, v27734, 1000, v27737, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) :|: 0 = 0
f_4071(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27725, v27726, v27727, v27728, v27729, v27730, v27731, v27732, 0, v27723, v27734, 1000, v27737, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) -> f_4074(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27726, v27727, v27728, v27729, v27730, v27731, v27732, 0, v27723, v27734, 1000, v27737, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) :|: 0 = 0
f_4074(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27726, v27727, v27728, v27729, v27730, v27731, v27732, 0, v27723, v27734, 1000, v27737, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) -> f_4077(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27726, v27727, v27728, v27729, v27730, v27731, v27732, 0, v27723, v27734, 1000, v27737, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) :|: 0 = 0
f_4077(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27726, v27727, v27728, v27729, v27730, v27731, v27732, 0, v27723, v27734, 1000, v27737, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) -> f_4080(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v27726, v27727, v27728, v27729, v27730, v27731, v27732, 0, v27723, v27734, 1000, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) :|: 0 = 0
f_4080(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v27726, v27727, v27728, v27729, v27730, v27731, v27732, 0, v27723, v27734, 1000, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) -> f_4083(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v27726, v27727, v27728, v27729, v27730, v27731, v27732, 0, v27723, v27734, 1000, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) :|: 0 = 0
f_4083(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v27726, v27727, v27728, v27729, v27730, v27731, v27732, 0, v27723, v27734, 1000, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) -> f_4085(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v27727, v27726, v27728, v27729, v27730, v27731, v27732, 0, v27723, v27734, 1000, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) :|: 0 = 0
f_4085(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v27727, v27726, v27728, v27729, v27730, v27731, v27732, 0, v27723, v27734, 1000, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) -> f_4087(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v27726, v27728, v27729, v27730, v27731, v27732, 0, v27723, v27734, 1000, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) :|: v28700 = v27737 * v27737
f_4087(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v27726, v27728, v27729, v27730, v27731, v27732, 0, v27723, v27734, 1000, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) -> f_4089(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v27726, v27728, v27729, v27730, v27731, v27732, 0, v27723, v27734, 1000, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) :|: 0 = 0
f_4089(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v27726, v27728, v27729, v27730, v27731, v27732, 0, v27723, v27734, 1000, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) -> f_4091(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v27728, v27729, v27730, v27731, v27732, 0, v27723, v27734, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) :|: 0 = 0
f_4091(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v27728, v27729, v27730, v27731, v27732, 0, v27723, v27734, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) -> f_4093(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v27732, 0, v27723, v27734, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) :|: v28701 = v28700 * v27737
f_4093(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v27732, 0, v27723, v27734, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) -> f_4095(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v27732, 0, v27723, v27734, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) :|: 0 = 0
f_4095(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v27732, 0, v27723, v27734, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) -> f_4097(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v27732, 0, v27723, v27734, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) :|: 0 = 0
f_4097(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v27732, 0, v27723, v27734, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) -> f_4099(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v27732, 0, v27723, v27734, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) :|: 0 = 0
f_4099(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v27732, 0, v27723, v27734, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) -> f_4101(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v27732, 0, v27723, v27734, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) :|: 0 = 0
f_4101(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v27732, 0, v27723, v27734, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) -> f_4103(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v27732, 0, v27723, v27734, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) :|: v27730 = v27729 * v27729
f_4103(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v27732, 0, v27723, v27734, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) -> f_4105(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v27732, 0, v27723, v27734, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) :|: 0 = 0
f_4105(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v27732, 0, v27723, v27734, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) -> f_4107(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v27732, 0, v27723, v27734, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) :|: 0 = 0
f_4107(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v27732, 0, v27723, v27734, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) -> f_4109(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v27732, 0, v27723, v27734, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) :|: v27731 = v27730 * v27729
f_4109(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v27732, 0, v27723, v27734, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) -> f_4111(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v28702, 0, v27723, v27734, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) :|: v28702 = v28701 + v27731
f_4111(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v28702, 0, v27723, v27734, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) -> f_4114(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v28702, 0, v27723, v27734, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) :|: 1 != v28702
f_4114(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v28702, 0, v27723, v27734, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) -> f_4117(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v28702, 0, v27723, v27734, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) :|: 0 = 0
f_4117(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v28702, 0, v27723, v27734, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) -> f_4120(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v28702, 0, v27723, v27734, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) :|: TRUE
f_4120(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v28702, 0, v27723, v27734, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) -> f_4123(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v28702, 0, v27723, v27734, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) :|: 0 = 0
f_4123(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v28702, 0, v27723, v27734, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) -> f_4126(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v28702, 0, v27734, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) :|: 0 = 0
f_4126(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v28702, 0, v27734, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 2, 1001, 4, 8) -> f_4129(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v28702, 0, 2, v27734, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 1001, 4, 8) :|: 0 = 0
f_4129(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v28702, 0, 2, v27734, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 1001, 4, 8) -> f_4131(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v28702, 0, 2, v27734, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 1001, 4, 8) :|: TRUE
f_4131(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v28702, 0, 2, v27734, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 1001, 4, 8) -> f_4133(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v28702, 0, 2, v27734, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 1001, 4, 8) :|: 0 = 0
f_4133(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v28702, 0, 2, v27734, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 1001, 4, 8) -> f_4136(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v28702, 0, 2, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 4, 8) :|: 0 = 0
f_4136(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v28702, 0, 2, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 4, 8) -> f_4139(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v28702, 0, 2, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 4, 8) :|: 0 = 0
f_4139(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v28702, 0, 2, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 4, 8) -> f_4142(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v28702, 0, 2, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 4, 8) :|: 0 = 0
f_4142(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v28702, 0, 2, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 4, 8) -> f_4145(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v28702, 0, 2, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 4, 8) :|: 0 = 0
f_4145(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v28702, 0, 2, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 4, 8) -> f_4148(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v28702, 0, 2, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 4, 8) :|: TRUE
f_4148(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, v27737, v28700, v28701, v27729, v27730, v27731, v28702, 0, 2, 1000, v27726, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 999, 4, 8) -> f_3999(v27714, v27715, v27716, v27717, v27718, v27719, v27720, v27721, v27722, 1, 1, 1, v27737, v28700, v28701, v27729, v27730, v27731, v28702, 0, 2, 1000, v27726, v27737, v27738, v27739, v27740, v27741, v27742, v27743, v27744, v27745, v27746, v27747, 3, 7, 1, 999, 2, 4, 8) :|: TRUE
f_3999(v26998, v26999, v27000, v27001, v27002, v27003, v27004, v27005, v27006, v27007, v27008, v27009, v27010, v27011, v27012, v27013, v27014, v27015, v27016, 0, v27018, 1000, v27020, v27021, v27022, v27023, v27024, v27025, v27026, v27027, v27028, v27029, v27030, v27031, 3, 7, 1, 999, 2, 4, 8) -> f_4002(v26998, v26999, v27000, v27001, v27002, v27003, v27004, v27005, v27006, v27007, v27008, v27009, v27010, v27011, v27012, v27013, v27014, v27015, v27016, 0, v27018, 1000, v27020, v27021, v27022, v27023, v27024, v27025, v27026, v27027, v27028, v27029, v27030, v27031, 3, 7, 1, 999, 2, 4, 8) :|: 0 = 0
f_4002(v26998, v26999, v27000, v27001, v27002, v27003, v27004, v27005, v27006, v27007, v27008, v27009, v27010, v27011, v27012, v27013, v27014, v27015, v27016, 0, v27018, 1000, v27020, v27021, v27022, v27023, v27024, v27025, v27026, v27027, v27028, v27029, v27030, v27031, 3, 7, 1, 999, 2, 4, 8) -> f_4005(v26998, v26999, v27000, v27001, v27002, v27003, v27004, v27005, v27006, v27007, v27008, v27009, v27010, v27011, v27012, v27013, v27014, v27015, v27016, 0, v27018, 1000, v27020, v27021, v27022, v27023, v27024, v27025, v27026, v27027, v27028, v27029, v27030, v27031, 3, 7, 1, 999, 2, 4, 8) :|: 0 = 0
f_4005(v26998, v26999, v27000, v27001, v27002, v27003, v27004, v27005, v27006, v27007, v27008, v27009, v27010, v27011, v27012, v27013, v27014, v27015, v27016, 0, v27018, 1000, v27020, v27021, v27022, v27023, v27024, v27025, v27026, v27027, v27028, v27029, v27030, v27031, 3, 7, 1, 999, 2, 4, 8) -> f_4008(v26998, v26999, v27000, v27001, v27002, v27003, v27004, v27005, v27006, v27007, v27008, v27009, v27010, v27011, v27012, v27013, v27014, v27015, v27016, 0, v27018, 1000, v27020, v27021, v27022, v27023, v27024, v27025, v27026, v27027, v27028, v27029, v27030, v27031, 3, 7, 1, 999, 2, 4, 8) :|: 0 = 0
f_4008(v26998, v26999, v27000, v27001, v27002, v27003, v27004, v27005, v27006, v27007, v27008, v27009, v27010, v27011, v27012, v27013, v27014, v27015, v27016, 0, v27018, 1000, v27020, v27021, v27022, v27023, v27024, v27025, v27026, v27027, v27028, v27029, v27030, v27031, 3, 7, 1, 999, 2, 4, 8) -> f_4011(v26998, v26999, v27000, v27001, v27002, v27003, v27004, v27005, v27006, v27007, v27008, v27009, v27010, v27011, v27012, v27013, v27014, v27015, v27016, 0, v27018, 1000, v27020, v27021, v27022, v27023, v27024, v27025, v27026, v27027, v27028, v27029, v27030, v27031, 3, 7, 1, 999, 2, 4, 8) :|: 0 = 0
f_4011(v26998, v26999, v27000, v27001, v27002, v27003, v27004, v27005, v27006, v27007, v27008, v27009, v27010, v27011, v27012, v27013, v27014, v27015, v27016, 0, v27018, 1000, v27020, v27021, v27022, v27023, v27024, v27025, v27026, v27027, v27028, v27029, v27030, v27031, 3, 7, 1, 999, 2, 4, 8) -> f_4014(v26998, v26999, v27000, v27001, v27002, v27003, v27004, v27005, v27006, v27007, v27008, v27009, v27010, v27011, v27012, v27013, v27014, v27015, v27016, 0, v27018, 1000, v27020, v27021, v27022, v27023, v27024, v27025, v27026, v27027, v27028, v27029, v27030, v27031, 3, 7, 1, 999, 1001, 2, 4, 8) :|: 1000 < v27010
f_4011(v26998, v26999, v27000, v27001, v27002, v27003, v27004, v27005, v27006, v27007, v27008, v27009, v27010, v27011, v27012, v27013, v27014, v27015, v27016, 0, v27018, 1000, v27020, v27021, v27022, v27023, v27024, v27025, v27026, v27027, v27028, v27029, v27030, v27031, 3, 7, 1, 999, 2, 4, 8) -> f_4015(v26998, v26999, v27000, v27001, v27002, v27003, v27004, v27005, v27006, v27007, v27008, v27009, v27010, v27011, v27012, v27013, v27014, v27015, v27016, 0, v27018, 1000, v27020, v27021, v27022, v27023, v27024, v27025, v27026, v27027, v27028, v27029, v27030, v27031, 3, 7, 1, 999, 2, 4, 8) :|: v27010 <= 1000
f_4014(v26998, v26999, v27000, v27001, v27002, v27003, v27004, v27005, v27006, v27007, v27008, v27009, v27010, v27011, v27012, v27013, v27014, v27015, v27016, 0, v27018, 1000, v27020, v27021, v27022, v27023, v27024, v27025, v27026, v27027, v27028, v27029, v27030, v27031, 3, 7, 1, 999, 1001, 2, 4, 8) -> f_4017(v26998, v26999, v27000, v27001, v27002, v27003, v27004, v27005, v27006, v27007, v27008, v27009, v27010, v27011, v27012, v27013, v27014, v27015, v27016, 0, v27018, 1000, 1, v27020, v27021, v27022, v27023, v27024, v27025, v27026, v27027, v27028, v27029, v27030, v27031, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_4017(v26998, v26999, v27000, v27001, v27002, v27003, v27004, v27005, v27006, v27007, v27008, v27009, v27010, v27011, v27012, v27013, v27014, v27015, v27016, 0, v27018, 1000, 1, v27020, v27021, v27022, v27023, v27024, v27025, v27026, v27027, v27028, v27029, v27030, v27031, 3, 7, 999, 1001, 2, 4, 8) -> f_4020(v26998, v26999, v27000, v27001, v27002, v27003, v27004, v27005, v27006, v27007, v27008, v27009, v27010, v27011, v27012, v27013, v27014, v27015, v27016, 0, v27018, 1000, 1, v27020, v27021, v27022, v27023, v27024, v27025, v27026, v27027, v27028, v27029, v27030, v27031, 3, 7, 999, 1001, 2, 4, 8) :|: TRUE
f_4020(v26998, v26999, v27000, v27001, v27002, v27003, v27004, v27005, v27006, v27007, v27008, v27009, v27010, v27011, v27012, v27013, v27014, v27015, v27016, 0, v27018, 1000, 1, v27020, v27021, v27022, v27023, v27024, v27025, v27026, v27027, v27028, v27029, v27030, v27031, 3, 7, 999, 1001, 2, 4, 8) -> f_4023(v26998, v26999, v27000, v27001, v27002, v27003, v27004, v27005, v27006, v27007, v27008, v27009, v27010, v27011, v27012, v27013, v27014, v27015, v27016, 0, v27018, 1000, 1, v27020, v27021, v27022, v27023, v27024, v27025, v27026, v27027, v27028, v27029, v27030, v27031, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_4023(v26998, v26999, v27000, v27001, v27002, v27003, v27004, v27005, v27006, v27007, v27008, v27009, v27010, v27011, v27012, v27013, v27014, v27015, v27016, 0, v27018, 1000, 1, v27020, v27021, v27022, v27023, v27024, v27025, v27026, v27027, v27028, v27029, v27030, v27031, 3, 7, 999, 1001, 2, 4, 8) -> f_4025(v26998, v26999, v27000, v27001, v27002, v27003, v27004, v27005, v27006, v27007, v27008, v27009, v27010, v27011, v27012, v27013, v27014, v27015, v27016, 0, v27018, 1000, 1, v27020, v27021, v27022, v27023, v27024, v27025, v27026, v27027, v27028, v27029, v27030, v27031, 3, 7, 999, 1001, 2, 4, 8) :|: TRUE
f_4025(v26998, v26999, v27000, v27001, v27002, v27003, v27004, v27005, v27006, v27007, v27008, v27009, v27010, v27011, v27012, v27013, v27014, v27015, v27016, 0, v27018, 1000, 1, v27020, v27021, v27022, v27023, v27024, v27025, v27026, v27027, v27028, v27029, v27030, v27031, 3, 7, 999, 1001, 2, 4, 8) -> f_4027(v26998, v26999, v27000, v27001, v27002, v27003, v27004, v27005, v27006, v27007, v27008, v27009, v27010, v27011, v27012, v27013, v27014, v27015, v27016, 0, v27018, 1000, 1, v27020, v27021, v27022, v27023, v27024, v27025, v27026, v27027, v27028, v27029, v27030, v27031, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_4027(v26998, v26999, v27000, v27001, v27002, v27003, v27004, v27005, v27006, v27007, v27008, v27009, v27010, v27011, v27012, v27013, v27014, v27015, v27016, 0, v27018, 1000, 1, v27020, v27021, v27022, v27023, v27024, v27025, v27026, v27027, v27028, v27029, v27030, v27031, 3, 7, 999, 1001, 2, 4, 8) -> f_4029(v26998, v26999, v27000, v27001, v27002, v27003, v27004, v27005, v27006, v27007, v27008, v27009, v27010, v27011, v27012, v27013, v27014, v27015, v27016, 0, v27018, 1000, 1, v27020, v27021, v27023, v27024, v27025, v27026, v27027, v27028, v27029, v27030, v27031, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_4029(v26998, v26999, v27000, v27001, v27002, v27003, v27004, v27005, v27006, v27007, v27008, v27009, v27010, v27011, v27012, v27013, v27014, v27015, v27016, 0, v27018, 1000, 1, v27020, v27021, v27023, v27024, v27025, v27026, v27027, v27028, v27029, v27030, v27031, 3, 7, 999, 1001, 2, 4, 8) -> f_4032(v26998, v26999, v27000, v27001, v27002, v27003, v27004, v27005, v27006, v27007, v27008, v27009, v27010, v27011, v27012, v27013, v27014, v27015, v27016, 0, v27018, 1000, 1, v27020, v27021, v27540, v27023, v27024, v27025, v27026, v27027, v27028, v27029, v27030, v27031, 3, 7, 999, 1001, 2, 4, 8) :|: v27540 = 1 + v27013 && 3 <= v27540 && v27540 <= 1001
f_4032(v26998, v26999, v27000, v27001, v27002, v27003, v27004, v27005, v27006, v27007, v27008, v27009, v27010, v27011, v27012, v27013, v27014, v27015, v27016, 0, v27018, 1000, 1, v27020, v27021, v27540, v27023, v27024, v27025, v27026, v27027, v27028, v27029, v27030, v27031, 3, 7, 999, 1001, 2, 4, 8) -> f_4035(v26998, v26999, v27000, v27001, v27002, v27003, v27004, v27005, v27006, v27007, v27008, v27009, v27010, v27011, v27012, v27013, v27014, v27015, v27016, 0, v27018, 1000, 1, v27020, v27021, v27540, v27023, v27024, v27025, v27026, v27027, v27028, v27029, v27030, v27031, 3, 7, 999, 1001, 2, 4, 8) :|: TRUE
f_4035(v26998, v26999, v27000, v27001, v27002, v27003, v27004, v27005, v27006, v27007, v27008, v27009, v27010, v27011, v27012, v27013, v27014, v27015, v27016, 0, v27018, 1000, 1, v27020, v27021, v27540, v27023, v27024, v27025, v27026, v27027, v27028, v27029, v27030, v27031, 3, 7, 999, 1001, 2, 4, 8) -> f_4039(v26998, v26999, v27000, v27001, v27002, v27003, v27004, v27005, v27006, v27007, v27008, v27009, v27010, v27011, v27012, v27013, v27014, v27015, v27016, 0, v27018, 1000, 1, v27020, v27021, v27540, v27023, v27024, v27025, v27026, v27027, v27028, v27029, v27030, v27031, 3, 7, 999, 1001, 2, 4, 8) :|: TRUE
f_4039(v26998, v26999, v27000, v27001, v27002, v27003, v27004, v27005, v27006, v27007, v27008, v27009, v27010, v27011, v27012, v27013, v27014, v27015, v27016, 0, v27018, 1000, 1, v27020, v27021, v27540, v27023, v27024, v27025, v27026, v27027, v27028, v27029, v27030, v27031, 3, 7, 999, 1001, 2, 4, 8) -> f_3737(v26998, v26999, v27000, v27001, v27002, v27003, v27004, v27005, v27006, v27007, v27008, v27009, v27010, v27011, v27012, v27013, v27014, v27015, v27016, 0, v27018, 1000, 1, v27020, v27021, v27540, v27023, v27024, v27025, v27026, v27027, v27028, v27029, v27030, v27031, 3, 7, 1001, 2, 4, 8) :|: TRUE
f_3737(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24333, v24334, v24335, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, v24344, 1000, 1, v24347, v24348, v24349, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 2, 4, 8) -> f_3740(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24333, v24334, v24335, v24336, v24337, v24338, v24339, v24340, v24341, v24342, 0, v24344, 1000, 1, v24347, v24348, v24349, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 2, 4, 8) :|: 0 = 0
f_4015(v26998, v26999, v27000, v27001, v27002, v27003, v27004, v27005, v27006, v27007, v27008, v27009, v27010, v27011, v27012, v27013, v27014, v27015, v27016, 0, v27018, 1000, v27020, v27021, v27022, v27023, v27024, v27025, v27026, v27027, v27028, v27029, v27030, v27031, 3, 7, 1, 999, 2, 4, 8) -> f_4018(v26998, v26999, v27000, v27001, v27002, v27003, v27004, v27005, v27006, v27007, v27008, v27009, v27010, v27011, v27012, v27013, v27014, v27015, v27016, 0, v27018, 1000, v27020, v27021, v27022, v27023, v27024, v27025, v27026, v27027, v27028, v27029, v27030, v27031, 3, 7, 1, 999, 2, 4, 8) :|: 0 = 0
f_4018(v26998, v26999, v27000, v27001, v27002, v27003, v27004, v27005, v27006, v27007, v27008, v27009, v27010, v27011, v27012, v27013, v27014, v27015, v27016, 0, v27018, 1000, v27020, v27021, v27022, v27023, v27024, v27025, v27026, v27027, v27028, v27029, v27030, v27031, 3, 7, 1, 999, 2, 4, 8) -> f_4021(v26998, v26999, v27000, v27001, v27002, v27003, v27004, v27005, v27006, v27007, v27008, v27009, v27010, v27011, v27012, v27013, v27014, v27015, v27016, 0, v27018, 1000, v27020, v27021, v27022, v27023, v27024, v27025, v27026, v27027, v27028, v27029, v27030, v27031, 3, 7, 1, 999, 2, 4, 8) :|: TRUE
f_4021(v26998, v26999, v27000, v27001, v27002, v27003, v27004, v27005, v27006, v27007, v27008, v27009, v27010, v27011, v27012, v27013, v27014, v27015, v27016, 0, v27018, 1000, v27020, v27021, v27022, v27023, v27024, v27025, v27026, v27027, v27028, v27029, v27030, v27031, 3, 7, 1, 999, 2, 4, 8) -> f_3882(v26998, v26999, v27000, v27001, v27002, v27003, v27004, v27005, v27006, v27007, v27008, v27009, v27010, v27011, v27012, v27013, v27014, v27015, v27016, 0, v27018, 1000, v27020, v27021, v27022, v27023, v27024, v27025, v27026, v27027, v27028, v27029, v27030, v27031, 3, 7, 1, 999, 2, 4, 8) :|: TRUE
f_3882(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25505, v25506, v25507, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25516, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) -> f_3884(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25505, v25506, v25507, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25516, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) :|: 0 = 0
f_3884(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25505, v25506, v25507, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25516, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) -> f_3886(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25505, v25506, v25507, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25516, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) :|: 0 = 0
f_3886(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25505, v25506, v25507, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25516, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) -> f_3888(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25505, v25506, v25507, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25516, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) :|: 0 = 0
f_3888(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25505, v25506, v25507, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25516, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) -> f_3890(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25505, v25506, v25507, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25516, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) :|: 0 = 0
f_3890(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25505, v25506, v25507, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25516, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) -> f_3893(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25505, v25506, v25507, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25516, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) :|: v25511 <= 1000 && v25520 <= 999
f_3893(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25505, v25506, v25507, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25516, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) -> f_3896(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25505, v25506, v25507, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25516, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) :|: 0 = 0
f_3896(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25505, v25506, v25507, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25516, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) -> f_3899(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25505, v25506, v25507, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25516, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) :|: TRUE
f_3899(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25505, v25506, v25507, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25516, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) -> f_3902(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25505, v25506, v25507, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25516, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) :|: TRUE
f_3902(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25505, v25506, v25507, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25516, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) -> f_3905(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25505, v25506, v25507, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25516, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) :|: 0 = 0
f_3905(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25505, v25506, v25507, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25516, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) -> f_3908(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v25505, v25506, v25507, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) :|: 0 = 0
f_3908(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v25505, v25506, v25507, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) -> f_3911(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v25505, v25506, v25507, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) :|: 0 = 0
f_3911(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v25505, v25506, v25507, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) -> f_3913(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v25506, v25505, v25507, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) :|: 0 = 0
f_3913(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v25506, v25505, v25507, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) -> f_3915(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v25505, v25507, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) :|: v26233 = v25516 * v25516
f_3915(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v25505, v25507, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) -> f_3917(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v25505, v25507, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) :|: 0 = 0
f_3917(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v25505, v25507, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) -> f_3919(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v25507, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) :|: 0 = 0
f_3919(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v25507, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) -> f_3921(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) :|: v26368 = v26233 * v25516
f_3921(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) -> f_3923(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) :|: 0 = 0
f_3923(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) -> f_3925(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) :|: 0 = 0
f_3925(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) -> f_3927(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) :|: 0 = 0
f_3927(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) -> f_3929(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) :|: 0 = 0
f_3929(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) -> f_3931(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) :|: v25509 = v25508 * v25508
f_3931(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) -> f_3933(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) :|: 0 = 0
f_3933(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) -> f_3935(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) :|: 0 = 0
f_3935(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) -> f_3937(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) :|: v25510 = v25509 * v25508
f_3937(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) -> f_3939(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) :|: 0 = 0
f_3939(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) -> f_3941(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) :|: 0 = 0
f_3941(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) -> f_3943(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) :|: 0 = 0
f_3943(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) -> f_3945(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) :|: 0 = 0
f_3945(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) -> f_3947(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) :|: v25512 = v25511 * v25511
f_3947(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) -> f_3949(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) :|: 0 = 0
f_3949(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) -> f_3951(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) :|: 0 = 0
f_3951(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) -> f_3953(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) :|: v25513 = v25512 * v25511
f_3953(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v25514, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) -> f_3955(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) :|: v26369 = v25510 + v25513
f_3955(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) -> f_3958(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) :|: v26368 != v26369
f_3958(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) -> f_3961(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) :|: 0 = 0
f_3961(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) -> f_3964(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) :|: TRUE
f_3964(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) -> f_3967(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) :|: 0 = 0
f_3967(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, v25505, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) -> f_3970(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 2, 999, 4, 8) :|: 0 = 0
f_3970(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 2, 999, 4, 8) -> f_3973(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, v26613, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 2, 999, 4, 8, 1001) :|: v26613 = 1 + v25516 && 3 <= v26613 && v26613 <= 1001
f_3973(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, v26613, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 2, 999, 4, 8, 1001) -> f_3976(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, v26613, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 2, 999, 4, 8, 1001) :|: TRUE
f_3976(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, v26613, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 2, 999, 4, 8, 1001) -> f_3979(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, v26613, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 2, 999, 4, 8, 1001) :|: 0 = 0
f_3979(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, v26613, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 2, 999, 4, 8, 1001) -> f_3982(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, v26613, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 2, 999, 4, 8, 1001) :|: 0 = 0
f_3982(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, v26613, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 2, 999, 4, 8, 1001) -> f_3985(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, v26613, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 2, 999, 4, 8, 1001) :|: 0 = 0
f_3985(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, v26613, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 2, 999, 4, 8, 1001) -> f_3988(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, v26613, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 2, 999, 4, 8, 1001) :|: 0 = 0
f_3988(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, v26613, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 2, 999, 4, 8, 1001) -> f_3991(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, 1001, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 2, 999, 4, 8) :|: 1000 < v26613 && v25516 = 1000 && v26613 = 1001 && 0 = 0 && v26233 = 1000000 && v26368 = 1000000000
f_3988(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, v26613, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 2, 999, 4, 8, 1001) -> f_3992(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, v26613, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 2, 999, 4, 8) :|: v26613 <= 1000 && v25516 <= 999
f_3991(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, 1001, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 2, 999, 4, 8) -> f_3994(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, 1001, 1, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_3994(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, 1001, 1, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) -> f_3997(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, 1001, 1, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) :|: TRUE
f_3997(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, 1001, 1, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) -> f_4001(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, 1001, 1, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_4001(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, 1001, 1, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) -> f_4004(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, 1001, 1, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) :|: TRUE
f_4004(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, 1001, 1, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) -> f_4007(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, 1001, 1, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_4007(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, 1001, 1, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) -> f_4010(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, 1001, 1, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_4010(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, 1001, 1, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) -> f_4013(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, 1001, 1, v27223, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) :|: v27223 = 1 + v25508 && 2 <= v27223 && v27223 <= 1001
f_4013(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, 1001, 1, v27223, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) -> f_4016(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, 1001, 1, v27223, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) :|: TRUE
f_4016(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, 1001, 1, v27223, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) -> f_4019(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, 1001, 1, v27223, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) :|: TRUE
f_4019(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, 1001, 1, v27223, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) -> f_4022(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, 1001, 1, v27223, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_4022(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, 1001, 1, v27223, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) -> f_4024(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, 1001, 1, v27223, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_4024(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, 1001, 1, v27223, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) -> f_4026(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, 1001, 1, v27223, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_4026(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, 1001, 1, v27223, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) -> f_4028(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, 1001, 1, v27223, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_4028(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, 1001, 1, v27223, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) -> f_4030(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25511, v25512, v25513, v26369, 0, 1001, 1, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) :|: 1000 < v27223 && v25508 = 1000 && v27223 = 1001 && 0 = 0 && v25509 = 1000000 && v25510 = 1000000000
f_4028(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, 1001, 1, v27223, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) -> f_4031(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, 1001, 1, v27223, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 999, 2, 4, 8) :|: v27223 <= 1000 && v25508 <= 999
f_4030(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25511, v25512, v25513, v26369, 0, 1001, 1, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) -> f_4033(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25511, v25512, v25513, v26369, 0, 1001, 1, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_4033(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25511, v25512, v25513, v26369, 0, 1001, 1, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) -> f_4036(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25511, v25512, v25513, v26369, 0, 1001, 1, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) :|: TRUE
f_4036(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25511, v25512, v25513, v26369, 0, 1001, 1, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) -> f_4040(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25511, v25512, v25513, v26369, 0, 1001, 1, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_4040(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25511, v25512, v25513, v26369, 0, 1001, 1, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) -> f_4042(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25511, v25512, v25513, v26369, 0, 1001, 1, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) :|: TRUE
f_4042(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25511, v25512, v25513, v26369, 0, 1001, 1, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) -> f_4044(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25511, v25512, v25513, v26369, 0, 1001, 1, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_4044(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25511, v25512, v25513, v26369, 0, 1001, 1, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 999, 4, 8) -> f_4046(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25511, v25512, v25513, v26369, 0, 1001, 1, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 4, 8) :|: 0 = 0
f_4046(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25511, v25512, v25513, v26369, 0, 1001, 1, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 4, 8) -> f_4048(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25511, v25512, v25513, v26369, 0, 1001, 1, v27892, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 4, 8) :|: v27892 = 1 + v25511 && 3 <= v27892 && v27892 <= 1001
f_4048(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25511, v25512, v25513, v26369, 0, 1001, 1, v27892, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 4, 8) -> f_4050(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25511, v25512, v25513, v26369, 0, 1001, 1, v27892, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 4, 8) :|: TRUE
f_4050(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25511, v25512, v25513, v26369, 0, 1001, 1, v27892, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 4, 8) -> f_4052(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25511, v25512, v25513, v26369, 0, 1001, 1, v27892, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 4, 8) :|: TRUE
f_4052(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25511, v25512, v25513, v26369, 0, 1001, 1, v27892, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 2, 4, 8) -> f_4053(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, 1000, 1000000, 1000000000, v25511, v25512, v25513, v26369, 0, 1001, 1000, 1, 1001, v27892, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1001, 2, 4, 8) :|: TRUE
f_4053(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, v28107, v28108, v28109, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28118, 1000, 1, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 1001, 2, 4, 8) -> f_4055(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, v28107, v28108, v28109, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28118, 1000, 1, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 1001, 2, 4, 8) :|: 0 = 0
f_4055(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, v28107, v28108, v28109, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28118, 1000, 1, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 1001, 2, 4, 8) -> f_4057(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, v28107, v28108, v28109, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28118, 1000, 1, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 1001, 2, 4, 8) :|: 0 = 0
f_4057(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, v28107, v28108, v28109, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28118, 1000, 1, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 1001, 2, 4, 8) -> f_4059(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, v28107, v28108, v28109, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28118, 1000, 1, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 1001, 2, 4, 8) :|: 0 = 0
f_4059(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, v28107, v28108, v28109, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28118, 1000, 1, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 1001, 2, 4, 8) -> f_4061(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, v28107, v28108, v28109, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28118, 1000, 1, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 1001, 2, 4, 8) :|: 0 = 0
f_4061(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, v28107, v28108, v28109, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28118, 1000, 1, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 1001, 2, 4, 8) -> f_4064(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, v28107, v28108, v28109, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28118, 1000, 1, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) :|: v28122 <= 1000 && v28113 <= 999
f_4064(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, v28107, v28108, v28109, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28118, 1000, 1, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) -> f_4067(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, v28107, v28108, v28109, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28118, 1000, 1, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_4067(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, v28107, v28108, v28109, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28118, 1000, 1, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) -> f_4070(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, v28107, v28108, v28109, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28118, 1000, 1, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) :|: TRUE
f_4070(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, v28107, v28108, v28109, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28118, 1000, 1, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) -> f_4073(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, v28107, v28108, v28109, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28118, 1000, 1, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) :|: TRUE
f_4073(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, v28107, v28108, v28109, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28118, 1000, 1, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) -> f_4076(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, v28107, v28108, v28109, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28118, 1000, 1, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_4076(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, v28107, v28108, v28109, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28118, 1000, 1, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) -> f_4079(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28107, v28108, v28109, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28118, 1000, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_4079(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28107, v28108, v28109, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28118, 1000, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) -> f_4082(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28107, v28108, v28109, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28118, 1000, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_4082(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28107, v28108, v28109, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28118, 1000, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) -> f_4084(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28108, v28107, v28109, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28118, 1000, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_4084(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28108, v28107, v28109, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28118, 1000, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) -> f_4086(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28107, v28109, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28118, 1000, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_4086(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28107, v28109, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28118, 1000, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) -> f_4088(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28107, v28109, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28118, 1000, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_4088(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28107, v28109, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28118, 1000, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) -> f_4090(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28109, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28107, v28118, 1000, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_4090(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28109, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28107, v28118, 1000, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) -> f_4092(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28107, v28118, 1000, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_4092(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28107, v28118, 1000, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) -> f_4094(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28107, v28118, 1000, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_4094(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28107, v28118, 1000, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) -> f_4096(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28107, v28118, 1000, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_4096(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28107, v28118, 1000, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) -> f_4098(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28107, v28118, 1000, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_4098(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28110, v28111, v28112, v28113, v28114, v28115, v28116, 0, v28107, v28118, 1000, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) -> f_4100(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28111, v28110, v28112, v28113, v28114, v28115, v28116, 0, v28107, v28118, 1000, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_4100(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28111, v28110, v28112, v28113, v28114, v28115, v28116, 0, v28107, v28118, 1000, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) -> f_4102(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28110, v28112, v28113, v28114, v28115, v28116, 0, v28107, v28118, 1000, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_4102(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28110, v28112, v28113, v28114, v28115, v28116, 0, v28107, v28118, 1000, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) -> f_4104(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28110, v28112, v28113, v28114, v28115, v28116, 0, v28107, v28118, 1000, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_4104(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28110, v28112, v28113, v28114, v28115, v28116, 0, v28107, v28118, 1000, v28121, v28122, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) -> f_4106(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28112, v28113, v28114, v28115, v28116, 0, v28107, v28118, 1000, v28121, v28122, v28110, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_4106(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28112, v28113, v28114, v28115, v28116, 0, v28107, v28118, 1000, v28121, v28122, v28110, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) -> f_4108(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28113, v28114, v28115, v28116, 0, v28107, v28118, 1000, v28121, v28122, v28110, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_4108(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28113, v28114, v28115, v28116, 0, v28107, v28118, 1000, v28121, v28122, v28110, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) -> f_4110(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28113, v28114, v28115, v28116, 0, v28107, v28118, 1000, v28121, v28122, v28110, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_4110(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28113, v28114, v28115, v28116, 0, v28107, v28118, 1000, v28121, v28122, v28110, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) -> f_4112(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28113, v28114, v28115, v28116, 0, v28107, v28118, 1000, v28121, v28110, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_4112(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28113, v28114, v28115, v28116, 0, v28107, v28118, 1000, v28121, v28110, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) -> f_4115(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28113, v28114, v28115, v28116, 0, v28107, v28118, 1000, v28121, v28110, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_4115(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28113, v28114, v28115, v28116, 0, v28107, v28118, 1000, v28121, v28110, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) -> f_4118(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28114, v28113, v28115, v28116, 0, v28107, v28118, 1000, v28121, v28110, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_4118(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28114, v28113, v28115, v28116, 0, v28107, v28118, 1000, v28121, v28110, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) -> f_4121(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28865, v28113, v28115, v28116, 0, v28107, v28118, 1000, v28121, v28110, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) :|: v28865 = v28122 * v28122
f_4121(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28865, v28113, v28115, v28116, 0, v28107, v28118, 1000, v28121, v28110, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) -> f_4124(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28865, v28113, v28115, v28116, 0, v28107, v28118, 1000, v28121, v28110, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_4124(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28865, v28113, v28115, v28116, 0, v28107, v28118, 1000, v28121, v28110, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) -> f_4127(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28865, v28115, v28116, 0, v28107, v28118, 1000, v28121, v28110, v28113, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_4127(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28865, v28115, v28116, 0, v28107, v28118, 1000, v28121, v28110, v28113, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) -> f_4130(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28865, v28950, v28116, 0, v28107, v28118, 1000, v28121, v28110, v28113, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) :|: v28950 = v28865 * v28122
f_4130(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28865, v28950, v28116, 0, v28107, v28118, 1000, v28121, v28110, v28113, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) -> f_4132(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28865, v28950, v28951, 0, v28107, v28118, 1000, v28121, v28110, v28113, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) :|: v28951 = 1 + v28950
f_4132(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28865, v28950, v28951, 0, v28107, v28118, 1000, v28121, v28110, v28113, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) -> f_4135(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28865, v28950, v28951, 0, v28107, v28118, 1000, v28121, v28110, v28113, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) :|: 1 != v28951
f_4135(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28865, v28950, v28951, 0, v28107, v28118, 1000, v28121, v28110, v28113, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) -> f_4138(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28865, v28950, v28951, 0, v28107, v28118, 1000, v28121, v28110, v28113, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_4138(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28865, v28950, v28951, 0, v28107, v28118, 1000, v28121, v28110, v28113, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) -> f_4141(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28865, v28950, v28951, 0, v28107, v28118, 1000, v28121, v28110, v28113, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) :|: TRUE
f_4141(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28865, v28950, v28951, 0, v28107, v28118, 1000, v28121, v28110, v28113, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) -> f_4144(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28865, v28950, v28951, 0, v28107, v28118, 1000, v28121, v28110, v28113, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_4144(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28865, v28950, v28951, 0, v28107, v28118, 1000, v28121, v28110, v28113, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) -> f_4147(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28865, v28950, v28951, 0, v28118, 1000, v28121, v28110, v28113, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_4147(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28865, v28950, v28951, 0, v28118, 1000, v28121, v28110, v28113, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 2, 4, 8) -> f_4150(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28865, v28950, v28951, 0, 2, v28118, 1000, v28121, v28110, v28113, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 4, 8) :|: 0 = 0
f_4150(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28865, v28950, v28951, 0, 2, v28118, 1000, v28121, v28110, v28113, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 4, 8) -> f_4151(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28865, v28950, v28951, 0, 2, v28118, 1000, v28121, v28110, v28113, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 4, 8) :|: TRUE
f_4151(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28865, v28950, v28951, 0, 2, v28118, 1000, v28121, v28110, v28113, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 4, 8) -> f_4152(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28865, v28950, v28951, 0, 2, v28118, 1000, v28121, v28110, v28113, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 4, 8) :|: 0 = 0
f_4152(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28865, v28950, v28951, 0, 2, v28118, 1000, v28121, v28110, v28113, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 4, 8) -> f_4153(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28865, v28950, v28951, 0, 2, 1000, v28121, v28110, v28113, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 4, 8) :|: 0 = 0
f_4153(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28865, v28950, v28951, 0, 2, 1000, v28121, v28110, v28113, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 4, 8) -> f_4154(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28865, v28950, v28951, 0, 2, 1000, v28121, v28110, v28113, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 4, 8) :|: 0 = 0
f_4154(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28865, v28950, v28951, 0, 2, 1000, v28121, v28110, v28113, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 4, 8) -> f_4155(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28865, v28950, v28951, 0, 2, 1000, v28121, v28110, v28113, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 4, 8) :|: 0 = 0
f_4155(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28865, v28950, v28951, 0, 2, 1000, v28121, v28110, v28113, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 4, 8) -> f_4156(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28865, v28950, v28951, 0, 2, 1000, v28121, v28110, v28113, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 4, 8) :|: 0 = 0
f_4156(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28865, v28950, v28951, 0, 2, 1000, v28121, v28110, v28113, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 4, 8) -> f_4157(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28865, v28950, v28951, 0, 2, 1000, v28121, v28110, v28113, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 4, 8) :|: TRUE
f_4157(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, v28122, v28865, v28950, v28951, 0, 2, 1000, v28121, v28110, v28113, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 1001, 4, 8) -> f_3862(v28098, v28099, v28100, v28101, v28102, v28103, v28104, v28105, v28106, 1, 1, 1, 1, v28122, v28865, v28950, v28951, 0, 2, 1000, v28121, v28110, v28121, v28113, v28123, v28124, v28125, v28126, v28127, v28128, v28129, v28130, v28131, 3, 7, 999, 2, 1001, 4, 8) :|: TRUE
f_3862(v25240, v25241, v25242, v25243, v25244, v25245, v25246, v25247, v25248, v25249, v25250, v25251, 1, v25253, v25254, v25255, v25256, 0, v25258, 1000, v25260, v25261, v25262, v25263, v25264, v25265, v25266, v25267, v25268, v25269, v25270, v25271, v25272, 3, 7, 999, 2, 1001, 4, 8) -> f_3865(v25240, v25241, v25242, v25243, v25244, v25245, v25246, v25247, v25248, v25249, v25250, v25251, 1, v25253, v25254, v25255, v25256, 0, v25258, 1000, v25260, v25261, v25262, v25263, v25264, v25265, v25266, v25267, v25268, v25269, v25270, v25271, v25272, 3, 7, 999, 2, 1001, 4, 8) :|: 0 = 0
f_3865(v25240, v25241, v25242, v25243, v25244, v25245, v25246, v25247, v25248, v25249, v25250, v25251, 1, v25253, v25254, v25255, v25256, 0, v25258, 1000, v25260, v25261, v25262, v25263, v25264, v25265, v25266, v25267, v25268, v25269, v25270, v25271, v25272, 3, 7, 999, 2, 1001, 4, 8) -> f_3868(v25240, v25241, v25242, v25243, v25244, v25245, v25246, v25247, v25248, v25249, v25250, v25251, 1, v25253, v25254, v25255, v25256, 0, v25258, 1000, v25261, v25262, v25263, v25264, v25265, v25266, v25267, v25268, v25269, v25270, v25271, v25272, 3, 7, 999, 2, 4, 8) :|: 0 = 0
f_3868(v25240, v25241, v25242, v25243, v25244, v25245, v25246, v25247, v25248, v25249, v25250, v25251, 1, v25253, v25254, v25255, v25256, 0, v25258, 1000, v25261, v25262, v25263, v25264, v25265, v25266, v25267, v25268, v25269, v25270, v25271, v25272, 3, 7, 999, 2, 4, 8) -> f_3871(v25240, v25241, v25242, v25243, v25244, v25245, v25246, v25247, v25248, v25249, v25250, v25251, 1, v25253, v25254, v25255, v25256, 0, v25258, 1000, v25261, v25262, v25263, v25264, v25265, v25266, v25267, v25268, v25269, v25270, v25271, v25272, 3, 7, 999, 2, 4, 8) :|: 0 = 0
f_3871(v25240, v25241, v25242, v25243, v25244, v25245, v25246, v25247, v25248, v25249, v25250, v25251, 1, v25253, v25254, v25255, v25256, 0, v25258, 1000, v25261, v25262, v25263, v25264, v25265, v25266, v25267, v25268, v25269, v25270, v25271, v25272, 3, 7, 999, 2, 4, 8) -> f_3874(v25240, v25241, v25242, v25243, v25244, v25245, v25246, v25247, v25248, v25249, v25250, v25251, 1, v25253, v25254, v25255, v25256, 0, v25258, 1000, v25261, v25262, v25263, v25264, v25265, v25266, v25267, v25268, v25269, v25270, v25271, v25272, 3, 7, 999, 2, 4, 8) :|: 0 = 0
f_3874(v25240, v25241, v25242, v25243, v25244, v25245, v25246, v25247, v25248, v25249, v25250, v25251, 1, v25253, v25254, v25255, v25256, 0, v25258, 1000, v25261, v25262, v25263, v25264, v25265, v25266, v25267, v25268, v25269, v25270, v25271, v25272, 3, 7, 999, 2, 4, 8) -> f_3877(v25240, v25241, v25242, v25243, v25244, v25245, v25246, v25247, v25248, v25249, v25250, v25251, 1, v25253, v25254, v25255, v25256, 0, v25258, 1000, v25261, v25262, v25263, v25264, v25265, v25266, v25267, v25268, v25269, v25270, v25271, v25272, 3, 7, 999, 2, 4, 8) :|: 0 = 0
f_3877(v25240, v25241, v25242, v25243, v25244, v25245, v25246, v25247, v25248, v25249, v25250, v25251, 1, v25253, v25254, v25255, v25256, 0, v25258, 1000, v25261, v25262, v25263, v25264, v25265, v25266, v25267, v25268, v25269, v25270, v25271, v25272, 3, 7, 999, 2, 4, 8) -> f_3881(v25240, v25241, v25242, v25243, v25244, v25245, v25246, v25247, v25248, v25249, v25250, v25251, 1, v25253, v25254, v25255, v25256, 0, v25258, 1000, v25261, v25262, v25263, v25264, v25265, v25266, v25267, v25268, v25269, v25270, v25271, v25272, 3, 7, 999, 2, 4, 8) :|: TRUE
f_3881(v25240, v25241, v25242, v25243, v25244, v25245, v25246, v25247, v25248, v25249, v25250, v25251, 1, v25253, v25254, v25255, v25256, 0, v25258, 1000, v25261, v25262, v25263, v25264, v25265, v25266, v25267, v25268, v25269, v25270, v25271, v25272, 3, 7, 999, 2, 4, 8) -> f_3882(v25240, v25241, v25242, v25243, v25244, v25245, v25246, v25247, v25248, v25249, v25250, v25251, 1, 1, 1, v25253, v25254, v25255, v25256, 0, v25258, 1000, v25261, v25262, v25263, v25264, v25265, v25266, v25267, v25268, v25269, v25270, v25271, v25272, 3, 7, 1, 999, 2, 4, 8) :|: TRUE
f_4031(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, 1001, 1, v27223, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 999, 2, 4, 8) -> f_4034(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, 1001, 1, v27223, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 999, 2, 4, 8) :|: 0 = 0
f_4034(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, 1001, 1, v27223, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 999, 2, 4, 8) -> f_4037(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, 1001, 1, v27223, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 999, 2, 4, 8) :|: TRUE
f_4037(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, 1001, 1, v27223, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 999, 2, 4, 8) -> f_4038(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, 1000, 1000000, 1000000000, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, 1001, 1000, 1, v27223, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 999, 2, 1001, 4, 8) :|: TRUE
f_3992(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, v26613, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 2, 999, 4, 8) -> f_3995(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, v26613, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 2, 999, 4, 8) :|: 0 = 0
f_3995(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, v26613, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 2, 999, 4, 8) -> f_3998(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, v26613, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 2, 999, 4, 8) :|: TRUE
f_3998(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, v26613, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 2, 999, 4, 8) -> f_3999(v25496, v25497, v25498, v25499, v25500, v25501, v25502, v25503, v25504, v25516, v26233, v26368, v25508, v25509, v25510, v25511, v25512, v25513, v26369, 0, v26613, 1000, v25518, v25519, v25520, v25521, v25522, v25523, v25524, v25525, v25526, v25527, v25528, v25529, 3, 7, 1, 999, 2, 4, 8) :|: TRUE
f_3855(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3858(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: 0 = 0
f_3858(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3861(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) :|: TRUE
f_3861(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 1001, 999, 2, 4, 8) -> f_3862(v24324, v24325, v24326, v24327, v24328, v24329, v24330, v24331, v24332, v24344, v24679, v24680, 1, v24349, v24682, v24819, v24821, 0, v24987, 1000, v24336, v24347, v24348, v24339, v24350, v24351, v24352, v24353, v24354, v24355, v24356, v24357, v24358, 3, 7, 999, 2, 1001, 4, 8) :|: TRUE
Combined rules. Obtained 17 rulesP rules:
f_3988(v25496:0, v25497:0, v25498:0, v25499:0, v25500:0, v25501:0, v25502:0, v25503:0, v25504:0, 1000, 1000000, 1000000000, 1000, 1000000, 1000000000, v25511:0, v25512:0, v25513:0, v26369:0, 0, 1001, 1000, v25518:0, v25519:0, v25520:0, v25521:0, v25522:0, v25523:0, v25524:0, v25525:0, v25526:0, v25527:0, v25528:0, v25529:0, 3, 7, 1, 2, 999, 4, 8, 1001) -> f_3988(v25496:0, v25497:0, v25498:0, v25499:0, v25500:0, v25501:0, v25502:0, v25503:0, v25504:0, 2, 4, 8, 1, 1, 1, 1 + v25511:0, (1 + v25511:0) * (1 + v25511:0), (1 + v25511:0) * (1 + v25511:0) * (1 + v25511:0), 1 + (1 + v25511:0) * (1 + v25511:0) * (1 + v25511:0), 0, 3, 1000, 1000, 1001, v25511:0, v25521:0, v25522:0, v25523:0, v25524:0, v25525:0, v25526:0, v25527:0, v25528:0, v25529:0, 3, 7, 1, 2, 999, 4, 8, 1001) :|: 7 < (1 + v25511:0) * (1 + v25511:0) * (1 + v25511:0) && v25511:0 > 1 && v25511:0 < 1001 && v25511:0 < 1000
f_3988(v25496:0, v25497:0, v25498:0, v25499:0, v25500:0, v25501:0, v25502:0, v25503:0, v25504:0, 1000, 1000000, 1000000000, 1000, 1000000, 1000000000, v25511:0, v25512:0, v25513:0, v26369:0, 0, 1001, 1000, v25518:0, v25519:0, v25520:0, v25521:0, v25522:0, v25523:0, v25524:0, v25525:0, v25526:0, v25527:0, v25528:0, v25529:0, 3, 7, 1, 2, 999, 4, 8, 1001) -> f_3988(v25496:0, v25497:0, v25498:0, v25499:0, v25500:0, v25501:0, v25502:0, v25503:0, v25504:0, 2, 4, 8, 1, 1, 1, 1 + v25511:0, (1 + v25511:0) * (1 + v25511:0), (1 + v25511:0) * (1 + v25511:0) * (1 + v25511:0), 1 + (1 + v25511:0) * (1 + v25511:0) * (1 + v25511:0), 0, 3, 1000, 1000, 1001, v25511:0, v25521:0, v25522:0, v25523:0, v25524:0, v25525:0, v25526:0, v25527:0, v25528:0, v25529:0, 3, 7, 1, 2, 999, 4, 8, 1001) :|: v25511:0 > 1 && v25511:0 < 1001 && v25511:0 < 1000 && 7 > (1 + v25511:0) * (1 + v25511:0) * (1 + v25511:0) && (1 + v25511:0) * (1 + v25511:0) * (1 + v25511:0) > 0
f_3988(v25496:0, v25497:0, v25498:0, v25499:0, v25500:0, v25501:0, v25502:0, v25503:0, v25504:0, 1000, 1000000, 1000000000, 1000, 1000000, 1000000000, v25511:0, v25512:0, v25513:0, v26369:0, 0, 1001, 1000, v25518:0, v25519:0, v25520:0, v25521:0, v25522:0, v25523:0, v25524:0, v25525:0, v25526:0, v25527:0, v25528:0, v25529:0, 3, 7, 1, 2, 999, 4, 8, 1001) -> f_3988(v25496:0, v25497:0, v25498:0, v25499:0, v25500:0, v25501:0, v25502:0, v25503:0, v25504:0, 2, 4, 8, 1, 1, 1, 1 + v25511:0, (1 + v25511:0) * (1 + v25511:0), (1 + v25511:0) * (1 + v25511:0) * (1 + v25511:0), 1 + (1 + v25511:0) * (1 + v25511:0) * (1 + v25511:0), 0, 3, 1000, 1000, 1001, v25511:0, v25521:0, v25522:0, v25523:0, v25524:0, v25525:0, v25526:0, v25527:0, v25528:0, v25529:0, 3, 7, 1, 2, 999, 4, 8, 1001) :|: v25511:0 > 1 && v25511:0 < 1001 && v25511:0 < 1000 && 7 < (1 + v25511:0) * (1 + v25511:0) * (1 + v25511:0) && (1 + v25511:0) * (1 + v25511:0) * (1 + v25511:0) < 0
f_3988(v25496:0, v25497:0, v25498:0, v25499:0, v25500:0, v25501:0, v25502:0, v25503:0, v25504:0, 1000, 1000000, 1000000000, 1000, 1000000, 1000000000, v25511:0, v25512:0, v25513:0, v26369:0, 0, 1001, 1000, v25518:0, v25519:0, v25520:0, v25521:0, v25522:0, v25523:0, v25524:0, v25525:0, v25526:0, v25527:0, v25528:0, v25529:0, 3, 7, 1, 2, 999, 4, 8, 1001) -> f_3988(v25496:0, v25497:0, v25498:0, v25499:0, v25500:0, v25501:0, v25502:0, v25503:0, v25504:0, 2, 4, 8, 1, 1, 1, 1 + v25511:0, (1 + v25511:0) * (1 + v25511:0), (1 + v25511:0) * (1 + v25511:0) * (1 + v25511:0), 1 + (1 + v25511:0) * (1 + v25511:0) * (1 + v25511:0), 0, 3, 1000, 1000, 1001, v25511:0, v25521:0, v25522:0, v25523:0, v25524:0, v25525:0, v25526:0, v25527:0, v25528:0, v25529:0, 3, 7, 1, 2, 999, 4, 8, 1001) :|: v25511:0 > 1 && v25511:0 < 1001 && v25511:0 < 1000 && 7 > (1 + v25511:0) * (1 + v25511:0) * (1 + v25511:0) && (1 + v25511:0) * (1 + v25511:0) * (1 + v25511:0) < 0
f_3988(v25496:0, v25497:0, v25498:0, v25499:0, v25500:0, v25501:0, v25502:0, v25503:0, v25504:0, v25516:0, v26233:0, v26368:0, v25508:0, v25509:0, v25510:0, v25511:0, v25512:0, v25513:0, v26369:0, 0, v26613:0, 1000, v25518:0, v25519:0, v25520:0, v25521:0, v25522:0, v25523:0, v25524:0, v25525:0, v25526:0, v25527:0, v25528:0, v25529:0, 3, 7, 1, 2, 999, 4, 8, 1001) -> f_4011(v25496:0, v25497:0, v25498:0, v25499:0, v25500:0, v25501:0, v25502:0, v25503:0, v25504:0, v25516:0, v26233:0, v26368:0, v25508:0, v25509:0, v25510:0, v25511:0, v25512:0, v25513:0, v26369:0, 0, v26613:0, 1000, v25518:0, v25519:0, v25520:0, v25521:0, v25522:0, v25523:0, v25524:0, v25525:0, v25526:0, v25527:0, v25528:0, v25529:0, 3, 7, 1, 999, 2, 4, 8) :|: v26613:0 < 1001 && v25516:0 < 1000
f_3988(v25496:0, v25497:0, v25498:0, v25499:0, v25500:0, v25501:0, v25502:0, v25503:0, v25504:0, 1000, 1000000, 1000000000, v25508:0, v25509:0, v25510:0, v25511:0, v25511:0 * v25511:0, v25511:0 * v25511:0 * v25511:0, v26369:0, 0, 1001, 1000, v25518:0, v25519:0, v25520:0, v25521:0, v25522:0, v25523:0, v25524:0, v25525:0, v25526:0, v25527:0, v25528:0, v25529:0, 3, 7, 1, 2, 999, 4, 8, 1001) -> f_4011(v25496:0, v25497:0, v25498:0, v25499:0, v25500:0, v25501:0, v25502:0, v25503:0, v25504:0, 1, 1, 1, 1 + v25508:0, (1 + v25508:0) * (1 + v25508:0), (1 + v25508:0) * (1 + v25508:0) * (1 + v25508:0), v25511:0, v25511:0 * v25511:0, v25511:0 * v25511:0 * v25511:0, (1 + v25508:0) * (1 + v25508:0) * (1 + v25508:0) + v25511:0 * v25511:0 * v25511:0, 0, 2, 1000, v25508:0, 1 + v25508:0, v25520:0, v25521:0, v25522:0, v25523:0, v25524:0, v25525:0, v25526:0, v25527:0, v25528:0, v25529:0, 3, 7, 1, 999, 2, 4, 8) :|: (1 + v25508:0) * (1 + v25508:0) * (1 + v25508:0) + v25511:0 * v25511:0 * v25511:0 > 1 && v25508:0 > 0 && v25508:0 < 1001 && v25508:0 < 1000
f_3988(v25496:0, v25497:0, v25498:0, v25499:0, v25500:0, v25501:0, v25502:0, v25503:0, v25504:0, 1000, 1000000, 1000000000, v25508:0, v25509:0, v25510:0, v25511:0, v25511:0 * v25511:0, v25511:0 * v25511:0 * v25511:0, v26369:0, 0, 1001, 1000, v25518:0, v25519:0, v25520:0, v25521:0, v25522:0, v25523:0, v25524:0, v25525:0, v25526:0, v25527:0, v25528:0, v25529:0, 3, 7, 1, 2, 999, 4, 8, 1001) -> f_4011(v25496:0, v25497:0, v25498:0, v25499:0, v25500:0, v25501:0, v25502:0, v25503:0, v25504:0, 1, 1, 1, 1 + v25508:0, (1 + v25508:0) * (1 + v25508:0), (1 + v25508:0) * (1 + v25508:0) * (1 + v25508:0), v25511:0, v25511:0 * v25511:0, v25511:0 * v25511:0 * v25511:0, (1 + v25508:0) * (1 + v25508:0) * (1 + v25508:0) + v25511:0 * v25511:0 * v25511:0, 0, 2, 1000, v25508:0, 1 + v25508:0, v25520:0, v25521:0, v25522:0, v25523:0, v25524:0, v25525:0, v25526:0, v25527:0, v25528:0, v25529:0, 3, 7, 1, 999, 2, 4, 8) :|: (1 + v25508:0) * (1 + v25508:0) * (1 + v25508:0) + v25511:0 * v25511:0 * v25511:0 < 1 && v25508:0 > 0 && v25508:0 < 1001 && v25508:0 < 1000
f_4011(v26998:0, v26999:0, v27000:0, v27001:0, v27002:0, v27003:0, v27004:0, v27005:0, v27006:0, v27007:0, v27008:0, v27009:0, v27010:0, v27011:0, v27012:0, v27013:0, v27014:0, v27015:0, v27016:0, 0, v27018:0, 1000, v27020:0, v27021:0, v27022:0, v27023:0, v27024:0, v27025:0, v27026:0, v27027:0, v27028:0, v27029:0, v27030:0, v27031:0, 3, 7, 1, 999, 2, 4, 8) -> f_3988(v26998:0, v26999:0, v27000:0, v27001:0, v27002:0, v27003:0, v27004:0, v27005:0, v27006:0, 1 + v27018:0, (1 + v27018:0) * (1 + v27018:0), (1 + v27018:0) * (1 + v27018:0) * (1 + v27018:0), 1, 1, 1, 1 + v27013:0, (1 + v27013:0) * (1 + v27013:0), (1 + v27013:0) * (1 + v27013:0) * (1 + v27013:0), 1 + (1 + v27013:0) * (1 + v27013:0) * (1 + v27013:0), 0, 1 + (1 + v27018:0), 1000, v27020:0, v27021:0, v27013:0, v27023:0, v27024:0, v27025:0, v27026:0, v27027:0, v27028:0, v27029:0, v27030:0, v27031:0, 3, 7, 1, 2, 999, 4, 8, 1001) :|: v27018:0 > 1 && v27013:0 < 1000 && v27018:0 * v27018:0 * v27018:0 < 1 + (1 + v27013:0) * (1 + v27013:0) * (1 + v27013:0) && v27010:0 > 1000 && (1 + v27018:0) * (1 + v27018:0) * (1 + v27018:0) < 1 + (1 + v27013:0) * (1 + v27013:0) * (1 + v27013:0) && v27013:0 > 1 && v27018:0 < 1000 && v27013:0 < 1001
f_4011(v26998:0, v26999:0, v27000:0, v27001:0, v27002:0, v27003:0, v27004:0, v27005:0, v27006:0, v27007:0, v27008:0, v27009:0, v27010:0, v27011:0, v27012:0, v27013:0, v27014:0, v27015:0, v27016:0, 0, v27018:0, 1000, v27020:0, v27021:0, v27022:0, v27023:0, v27024:0, v27025:0, v27026:0, v27027:0, v27028:0, v27029:0, v27030:0, v27031:0, 3, 7, 1, 999, 2, 4, 8) -> f_3988(v26998:0, v26999:0, v27000:0, v27001:0, v27002:0, v27003:0, v27004:0, v27005:0, v27006:0, 1 + v27018:0, (1 + v27018:0) * (1 + v27018:0), (1 + v27018:0) * (1 + v27018:0) * (1 + v27018:0), 1, 1, 1, 1 + v27013:0, (1 + v27013:0) * (1 + v27013:0), (1 + v27013:0) * (1 + v27013:0) * (1 + v27013:0), 1 + (1 + v27013:0) * (1 + v27013:0) * (1 + v27013:0), 0, 1 + (1 + v27018:0), 1000, v27020:0, v27021:0, v27013:0, v27023:0, v27024:0, v27025:0, v27026:0, v27027:0, v27028:0, v27029:0, v27030:0, v27031:0, 3, 7, 1, 2, 999, 4, 8, 1001) :|: v27018:0 > 1 && v27013:0 < 1000 && v27018:0 * v27018:0 * v27018:0 < 1 + (1 + v27013:0) * (1 + v27013:0) * (1 + v27013:0) && v27010:0 > 1000 && (1 + v27018:0) * (1 + v27018:0) * (1 + v27018:0) > 1 + (1 + v27013:0) * (1 + v27013:0) * (1 + v27013:0) && v27013:0 > 1 && v27018:0 < 1000 && v27013:0 < 1001
f_4011(v26998:0, v26999:0, v27000:0, v27001:0, v27002:0, v27003:0, v27004:0, v27005:0, v27006:0, v27007:0, v27008:0, v27009:0, v27010:0, v27011:0, v27012:0, v27013:0, v27014:0, v27015:0, v27016:0, 0, v27018:0, 1000, v27020:0, v27021:0, v27022:0, v27023:0, v27024:0, v27025:0, v27026:0, v27027:0, v27028:0, v27029:0, v27030:0, v27031:0, 3, 7, 1, 999, 2, 4, 8) -> f_3988(v26998:0, v26999:0, v27000:0, v27001:0, v27002:0, v27003:0, v27004:0, v27005:0, v27006:0, 1 + v27018:0, (1 + v27018:0) * (1 + v27018:0), (1 + v27018:0) * (1 + v27018:0) * (1 + v27018:0), 1, 1, 1, 1 + v27013:0, (1 + v27013:0) * (1 + v27013:0), (1 + v27013:0) * (1 + v27013:0) * (1 + v27013:0), 1 + (1 + v27013:0) * (1 + v27013:0) * (1 + v27013:0), 0, 1 + (1 + v27018:0), 1000, v27020:0, v27021:0, v27013:0, v27023:0, v27024:0, v27025:0, v27026:0, v27027:0, v27028:0, v27029:0, v27030:0, v27031:0, 3, 7, 1, 2, 999, 4, 8, 1001) :|: v27018:0 > 1 && v27013:0 < 1000 && v27018:0 * v27018:0 * v27018:0 > 1 + (1 + v27013:0) * (1 + v27013:0) * (1 + v27013:0) && v27010:0 > 1000 && (1 + v27018:0) * (1 + v27018:0) * (1 + v27018:0) < 1 + (1 + v27013:0) * (1 + v27013:0) * (1 + v27013:0) && v27013:0 > 1 && v27018:0 < 1000 && v27013:0 < 1001
f_4011(v26998:0, v26999:0, v27000:0, v27001:0, v27002:0, v27003:0, v27004:0, v27005:0, v27006:0, v27007:0, v27008:0, v27009:0, v27010:0, v27011:0, v27012:0, v27013:0, v27014:0, v27015:0, v27016:0, 0, v27018:0, 1000, v27020:0, v27021:0, v27022:0, v27023:0, v27024:0, v27025:0, v27026:0, v27027:0, v27028:0, v27029:0, v27030:0, v27031:0, 3, 7, 1, 999, 2, 4, 8) -> f_3988(v26998:0, v26999:0, v27000:0, v27001:0, v27002:0, v27003:0, v27004:0, v27005:0, v27006:0, 1 + v27018:0, (1 + v27018:0) * (1 + v27018:0), (1 + v27018:0) * (1 + v27018:0) * (1 + v27018:0), 1, 1, 1, 1 + v27013:0, (1 + v27013:0) * (1 + v27013:0), (1 + v27013:0) * (1 + v27013:0) * (1 + v27013:0), 1 + (1 + v27013:0) * (1 + v27013:0) * (1 + v27013:0), 0, 1 + (1 + v27018:0), 1000, v27020:0, v27021:0, v27013:0, v27023:0, v27024:0, v27025:0, v27026:0, v27027:0, v27028:0, v27029:0, v27030:0, v27031:0, 3, 7, 1, 2, 999, 4, 8, 1001) :|: v27018:0 > 1 && v27013:0 < 1000 && v27018:0 * v27018:0 * v27018:0 > 1 + (1 + v27013:0) * (1 + v27013:0) * (1 + v27013:0) && v27010:0 > 1000 && (1 + v27018:0) * (1 + v27018:0) * (1 + v27018:0) > 1 + (1 + v27013:0) * (1 + v27013:0) * (1 + v27013:0) && v27013:0 > 1 && v27018:0 < 1000 && v27013:0 < 1001
f_4011(v26998:0, v26999:0, v27000:0, v27001:0, v27002:0, v27003:0, v27004:0, v27005:0, v27006:0, v27007:0, v27008:0, v27009:0, v27010:0, v27010:0 * v27010:0, v27010:0 * v27010:0 * v27010:0, v27013:0, v27013:0 * v27013:0, v27013:0 * v27013:0 * v27013:0, v27016:0, 0, v27018:0, 1000, v27020:0, v27021:0, v27022:0, v27023:0, v27024:0, v27025:0, v27026:0, v27027:0, v27028:0, v27029:0, v27030:0, v27031:0, 3, 7, 1, 999, 2, 4, 8) -> f_3988(v26998:0, v26999:0, v27000:0, v27001:0, v27002:0, v27003:0, v27004:0, v27005:0, v27006:0, v27018:0, v27018:0 * v27018:0, v27018:0 * v27018:0 * v27018:0, v27010:0, v27010:0 * v27010:0, v27010:0 * v27010:0 * v27010:0, v27013:0, v27013:0 * v27013:0, v27013:0 * v27013:0 * v27013:0, v27010:0 * v27010:0 * v27010:0 + v27013:0 * v27013:0 * v27013:0, 0, 1 + v27018:0, 1000, v27020:0, v27021:0, v27022:0, v27023:0, v27024:0, v27025:0, v27026:0, v27027:0, v27028:0, v27029:0, v27030:0, v27031:0, 3, 7, 1, 2, 999, 4, 8, 1001) :|: v27010:0 < 1001 && v27022:0 < 1000 && v27013:0 < 1001 && v27018:0 * v27018:0 * v27018:0 < v27010:0 * v27010:0 * v27010:0 + v27013:0 * v27013:0 * v27013:0 && v27018:0 < 1001 && v27018:0 > 1
f_4011(v26998:0, v26999:0, v27000:0, v27001:0, v27002:0, v27003:0, v27004:0, v27005:0, v27006:0, v27007:0, v27008:0, v27009:0, v27010:0, v27010:0 * v27010:0, v27010:0 * v27010:0 * v27010:0, v27013:0, v27013:0 * v27013:0, v27013:0 * v27013:0 * v27013:0, v27016:0, 0, v27018:0, 1000, v27020:0, v27021:0, v27022:0, v27023:0, v27024:0, v27025:0, v27026:0, v27027:0, v27028:0, v27029:0, v27030:0, v27031:0, 3, 7, 1, 999, 2, 4, 8) -> f_3988(v26998:0, v26999:0, v27000:0, v27001:0, v27002:0, v27003:0, v27004:0, v27005:0, v27006:0, v27018:0, v27018:0 * v27018:0, v27018:0 * v27018:0 * v27018:0, v27010:0, v27010:0 * v27010:0, v27010:0 * v27010:0 * v27010:0, v27013:0, v27013:0 * v27013:0, v27013:0 * v27013:0 * v27013:0, v27010:0 * v27010:0 * v27010:0 + v27013:0 * v27013:0 * v27013:0, 0, 1 + v27018:0, 1000, v27020:0, v27021:0, v27022:0, v27023:0, v27024:0, v27025:0, v27026:0, v27027:0, v27028:0, v27029:0, v27030:0, v27031:0, 3, 7, 1, 2, 999, 4, 8, 1001) :|: v27010:0 < 1001 && v27022:0 < 1000 && v27013:0 < 1001 && v27018:0 * v27018:0 * v27018:0 > v27010:0 * v27010:0 * v27010:0 + v27013:0 * v27013:0 * v27013:0 && v27018:0 < 1001 && v27018:0 > 1
f_4011(v26998:0, v26999:0, v27000:0, v27001:0, v27002:0, v27003:0, v27004:0, v27005:0, v27006:0, v27007:0, v27008:0, v27009:0, v27010:0, v27011:0, v27012:0, v27013:0, v27014:0, v27015:0, v27016:0, 0, v27018:0, 1000, v27020:0, v27021:0, v27022:0, v27023:0, v27024:0, v27025:0, v27026:0, v27027:0, v27028:0, v27029:0, v27030:0, v27031:0, 3, 7, 1, 999, 2, 4, 8) -> f_4011(v26998:0, v26999:0, v27000:0, v27001:0, v27002:0, v27003:0, v27004:0, v27005:0, v27006:0, 1, 1, 1, 2, 4, 8, 1 + v27013:0, (1 + v27013:0) * (1 + v27013:0), (1 + v27013:0) * (1 + v27013:0) * (1 + v27013:0), 8 + (1 + v27013:0) * (1 + v27013:0) * (1 + v27013:0), 0, 2, 1000, 1, 2, v27013:0, v27023:0, v27024:0, v27025:0, v27026:0, v27027:0, v27028:0, v27029:0, v27030:0, v27031:0, 3, 7, 1, 999, 2, 4, 8) :|: v27018:0 > 999 && v27013:0 < 1000 && v27018:0 * v27018:0 * v27018:0 < 1 + (1 + v27013:0) * (1 + v27013:0) * (1 + v27013:0) && (1 + v27013:0) * (1 + v27013:0) * (1 + v27013:0) > -7 && v27010:0 > 1000 && v27013:0 < 1001 && v27013:0 > 1
f_4011(v26998:0, v26999:0, v27000:0, v27001:0, v27002:0, v27003:0, v27004:0, v27005:0, v27006:0, v27007:0, v27008:0, v27009:0, v27010:0, v27011:0, v27012:0, v27013:0, v27014:0, v27015:0, v27016:0, 0, v27018:0, 1000, v27020:0, v27021:0, v27022:0, v27023:0, v27024:0, v27025:0, v27026:0, v27027:0, v27028:0, v27029:0, v27030:0, v27031:0, 3, 7, 1, 999, 2, 4, 8) -> f_4011(v26998:0, v26999:0, v27000:0, v27001:0, v27002:0, v27003:0, v27004:0, v27005:0, v27006:0, 1, 1, 1, 2, 4, 8, 1 + v27013:0, (1 + v27013:0) * (1 + v27013:0), (1 + v27013:0) * (1 + v27013:0) * (1 + v27013:0), 8 + (1 + v27013:0) * (1 + v27013:0) * (1 + v27013:0), 0, 2, 1000, 1, 2, v27013:0, v27023:0, v27024:0, v27025:0, v27026:0, v27027:0, v27028:0, v27029:0, v27030:0, v27031:0, 3, 7, 1, 999, 2, 4, 8) :|: v27018:0 > 999 && v27013:0 < 1000 && v27018:0 * v27018:0 * v27018:0 < 1 + (1 + v27013:0) * (1 + v27013:0) * (1 + v27013:0) && (1 + v27013:0) * (1 + v27013:0) * (1 + v27013:0) < -7 && v27010:0 > 1000 && v27013:0 < 1001 && v27013:0 > 1
f_4011(v26998:0, v26999:0, v27000:0, v27001:0, v27002:0, v27003:0, v27004:0, v27005:0, v27006:0, v27007:0, v27008:0, v27009:0, v27010:0, v27011:0, v27012:0, v27013:0, v27014:0, v27015:0, v27016:0, 0, v27018:0, 1000, v27020:0, v27021:0, v27022:0, v27023:0, v27024:0, v27025:0, v27026:0, v27027:0, v27028:0, v27029:0, v27030:0, v27031:0, 3, 7, 1, 999, 2, 4, 8) -> f_4011(v26998:0, v26999:0, v27000:0, v27001:0, v27002:0, v27003:0, v27004:0, v27005:0, v27006:0, 1, 1, 1, 2, 4, 8, 1 + v27013:0, (1 + v27013:0) * (1 + v27013:0), (1 + v27013:0) * (1 + v27013:0) * (1 + v27013:0), 8 + (1 + v27013:0) * (1 + v27013:0) * (1 + v27013:0), 0, 2, 1000, 1, 2, v27013:0, v27023:0, v27024:0, v27025:0, v27026:0, v27027:0, v27028:0, v27029:0, v27030:0, v27031:0, 3, 7, 1, 999, 2, 4, 8) :|: v27018:0 > 999 && v27013:0 < 1000 && v27018:0 * v27018:0 * v27018:0 > 1 + (1 + v27013:0) * (1 + v27013:0) * (1 + v27013:0) && (1 + v27013:0) * (1 + v27013:0) * (1 + v27013:0) > -7 && v27010:0 > 1000 && v27013:0 < 1001 && v27013:0 > 1
f_4011(v26998:0, v26999:0, v27000:0, v27001:0, v27002:0, v27003:0, v27004:0, v27005:0, v27006:0, v27007:0, v27008:0, v27009:0, v27010:0, v27011:0, v27012:0, v27013:0, v27014:0, v27015:0, v27016:0, 0, v27018:0, 1000, v27020:0, v27021:0, v27022:0, v27023:0, v27024:0, v27025:0, v27026:0, v27027:0, v27028:0, v27029:0, v27030:0, v27031:0, 3, 7, 1, 999, 2, 4, 8) -> f_4011(v26998:0, v26999:0, v27000:0, v27001:0, v27002:0, v27003:0, v27004:0, v27005:0, v27006:0, 1, 1, 1, 2, 4, 8, 1 + v27013:0, (1 + v27013:0) * (1 + v27013:0), (1 + v27013:0) * (1 + v27013:0) * (1 + v27013:0), 8 + (1 + v27013:0) * (1 + v27013:0) * (1 + v27013:0), 0, 2, 1000, 1, 2, v27013:0, v27023:0, v27024:0, v27025:0, v27026:0, v27027:0, v27028:0, v27029:0, v27030:0, v27031:0, 3, 7, 1, 999, 2, 4, 8) :|: v27018:0 > 999 && v27013:0 < 1000 && v27018:0 * v27018:0 * v27018:0 > 1 + (1 + v27013:0) * (1 + v27013:0) * (1 + v27013:0) && (1 + v27013:0) * (1 + v27013:0) * (1 + v27013:0) < -7 && v27010:0 > 1000 && v27013:0 < 1001 && v27013:0 > 1
Filtered unneeded arguments:
   f_3988(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42) -> f_3988(x10, x11, x12, x13, x14, x15, x16, x17, x18, x21, x25)
   f_4011(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41) -> f_4011(x13, x14, x15, x16, x17, x18, x21, x25)
Removed division, modulo operations, cleaned up constraints. Obtained 17 rules.P rules:
f_3988(cons_1000, cons_1000000, cons_1000000000, cons_10001, cons_10000001, cons_10000000001, v25511:0, v25512:0, v25513:0, cons_1001, v25520:0) -> f_3988(2, 4, 8, 1, 1, 1, 1 + v25511:0, 1 + v25511:0 + (v25511:0 + v25511:0 * v25511:0), 1 + v25511:0 + (v25511:0 + v25511:0 * v25511:0) + (v25511:0 + v25511:0 * v25511:0 + v25511:0 * v25511:0 * (1 + v25511:0)), 3, v25511:0) :|: v25511:0 > 1 && 7 < 1 + v25511:0 + (v25511:0 + v25511:0 * v25511:0) + (v25511:0 + v25511:0 * v25511:0 + v25511:0 * v25511:0 * (1 + v25511:0)) && v25511:0 < 1000 && v25511:0 < 1001 && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && cons_10001 = 1000 && cons_10000001 = 1000000 && cons_10000000001 = 1000000000 && cons_1001 = 1001
f_3988(cons_1000, cons_1000000, cons_1000000000, cons_10001, cons_10000001, cons_10000000001, v25511:0, v25512:0, v25513:0, cons_1001, v25520:0) -> f_3988(2, 4, 8, 1, 1, 1, 1 + v25511:0, 1 + v25511:0 + (v25511:0 + v25511:0 * v25511:0), 1 + v25511:0 + (v25511:0 + v25511:0 * v25511:0) + (v25511:0 + v25511:0 * v25511:0 + v25511:0 * v25511:0 * (1 + v25511:0)), 3, v25511:0) :|: v25511:0 < 1001 && v25511:0 > 1 && v25511:0 < 1000 && 1 + v25511:0 + (v25511:0 + v25511:0 * v25511:0) + (v25511:0 + v25511:0 * v25511:0 + v25511:0 * v25511:0 * (1 + v25511:0)) > 0 && 7 > 1 + v25511:0 + (v25511:0 + v25511:0 * v25511:0) + (v25511:0 + v25511:0 * v25511:0 + v25511:0 * v25511:0 * (1 + v25511:0)) && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && cons_10001 = 1000 && cons_10000001 = 1000000 && cons_10000000001 = 1000000000 && cons_1001 = 1001
f_3988(cons_1000, cons_1000000, cons_1000000000, cons_10001, cons_10000001, cons_10000000001, v25511:0, v25512:0, v25513:0, cons_1001, v25520:0) -> f_3988(2, 4, 8, 1, 1, 1, 1 + v25511:0, 1 + v25511:0 + (v25511:0 + v25511:0 * v25511:0), 1 + v25511:0 + (v25511:0 + v25511:0 * v25511:0) + (v25511:0 + v25511:0 * v25511:0 + v25511:0 * v25511:0 * (1 + v25511:0)), 3, v25511:0) :|: v25511:0 < 1001 && v25511:0 > 1 && v25511:0 < 1000 && 1 + v25511:0 + (v25511:0 + v25511:0 * v25511:0) + (v25511:0 + v25511:0 * v25511:0 + v25511:0 * v25511:0 * (1 + v25511:0)) < 0 && 7 < 1 + v25511:0 + (v25511:0 + v25511:0 * v25511:0) + (v25511:0 + v25511:0 * v25511:0 + v25511:0 * v25511:0 * (1 + v25511:0)) && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && cons_10001 = 1000 && cons_10000001 = 1000000 && cons_10000000001 = 1000000000 && cons_1001 = 1001
f_3988(cons_1000, cons_1000000, cons_1000000000, cons_10001, cons_10000001, cons_10000000001, v25511:0, v25512:0, v25513:0, cons_1001, v25520:0) -> f_3988(2, 4, 8, 1, 1, 1, 1 + v25511:0, 1 + v25511:0 + (v25511:0 + v25511:0 * v25511:0), 1 + v25511:0 + (v25511:0 + v25511:0 * v25511:0) + (v25511:0 + v25511:0 * v25511:0 + v25511:0 * v25511:0 * (1 + v25511:0)), 3, v25511:0) :|: v25511:0 < 1001 && v25511:0 > 1 && v25511:0 < 1000 && 1 + v25511:0 + (v25511:0 + v25511:0 * v25511:0) + (v25511:0 + v25511:0 * v25511:0 + v25511:0 * v25511:0 * (1 + v25511:0)) < 0 && 7 > 1 + v25511:0 + (v25511:0 + v25511:0 * v25511:0) + (v25511:0 + v25511:0 * v25511:0 + v25511:0 * v25511:0 * (1 + v25511:0)) && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && cons_10001 = 1000 && cons_10000001 = 1000000 && cons_10000000001 = 1000000000 && cons_1001 = 1001
f_3988(v25516:0, v26233:0, v26368:0, v25508:0, v25509:0, v25510:0, v25511:0, v25512:0, v25513:0, v26613:0, v25520:0) -> f_4011(v25508:0, v25509:0, v25510:0, v25511:0, v25512:0, v25513:0, v26613:0, v25520:0) :|: v26613:0 < 1001 && v25516:0 < 1000
f_3988(cons_1000, cons_1000000, cons_1000000000, v25508:0, v25509:0, v25510:0, v25511:0, times~v25511:0~v25511:0, times~times~v25511:0~v25511:0~v25511:0, cons_1001, v25520:0) -> f_4011(1 + v25508:0, 1 + v25508:0 + (v25508:0 + v25508:0 * v25508:0), 1 + v25508:0 + (v25508:0 + v25508:0 * v25508:0) + (v25508:0 + v25508:0 * v25508:0 + v25508:0 * v25508:0 * (1 + v25508:0)), v25511:0, v25511:0 * v25511:0, v25511:0 * v25511:0 * v25511:0, 2, v25520:0) :|: v25508:0 > 0 && 1 + v25508:0 + (v25508:0 + v25508:0 * v25508:0) + (v25508:0 + v25508:0 * v25508:0 + v25508:0 * v25508:0 * (1 + v25508:0)) + v25511:0 * v25511:0 * v25511:0 > 1 && v25508:0 < 1000 && v25508:0 < 1001 && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && times~v25511:0~v25511:0 = v25511:0 * v25511:0 && times~times~v25511:0~v25511:0~v25511:0 = v25511:0 * v25511:0 * v25511:0 && cons_1001 = 1001
f_3988(cons_1000, cons_1000000, cons_1000000000, v25508:0, v25509:0, v25510:0, v25511:0, times~v25511:0~v25511:0, times~times~v25511:0~v25511:0~v25511:0, cons_1001, v25520:0) -> f_4011(1 + v25508:0, 1 + v25508:0 + (v25508:0 + v25508:0 * v25508:0), 1 + v25508:0 + (v25508:0 + v25508:0 * v25508:0) + (v25508:0 + v25508:0 * v25508:0 + v25508:0 * v25508:0 * (1 + v25508:0)), v25511:0, v25511:0 * v25511:0, v25511:0 * v25511:0 * v25511:0, 2, v25520:0) :|: v25508:0 > 0 && 1 + v25508:0 + (v25508:0 + v25508:0 * v25508:0) + (v25508:0 + v25508:0 * v25508:0 + v25508:0 * v25508:0 * (1 + v25508:0)) + v25511:0 * v25511:0 * v25511:0 < 1 && v25508:0 < 1000 && v25508:0 < 1001 && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && times~v25511:0~v25511:0 = v25511:0 * v25511:0 && times~times~v25511:0~v25511:0~v25511:0 = v25511:0 * v25511:0 * v25511:0 && cons_1001 = 1001
f_4011(v27010:0, v27011:0, v27012:0, v27013:0, v27014:0, v27015:0, v27018:0, v27022:0) -> f_3988(1 + v27018:0, 1 + v27018:0 + (v27018:0 + v27018:0 * v27018:0), 1 + v27018:0 + (v27018:0 + v27018:0 * v27018:0) + (v27018:0 + v27018:0 * v27018:0 + v27018:0 * v27018:0 * (1 + v27018:0)), 1, 1, 1, 1 + v27013:0, 1 + v27013:0 + (v27013:0 + v27013:0 * v27013:0), 1 + v27013:0 + (v27013:0 + v27013:0 * v27013:0) + (v27013:0 + v27013:0 * v27013:0 + v27013:0 * v27013:0 * (1 + v27013:0)), 1 + (1 + v27018:0), v27013:0) :|: v27013:0 < 1000 && v27018:0 > 1 && v27018:0 * v27018:0 * v27018:0 < 1 + (1 + v27013:0 + (v27013:0 + v27013:0 * v27013:0) + (v27013:0 + v27013:0 * v27013:0 + v27013:0 * v27013:0 * (1 + v27013:0))) && v27010:0 > 1000 && 1 + v27018:0 + (v27018:0 + v27018:0 * v27018:0) + (v27018:0 + v27018:0 * v27018:0 + v27018:0 * v27018:0 * (1 + v27018:0)) < 1 + (1 + v27013:0 + (v27013:0 + v27013:0 * v27013:0) + (v27013:0 + v27013:0 * v27013:0 + v27013:0 * v27013:0 * (1 + v27013:0))) && v27013:0 > 1 && v27013:0 < 1001 && v27018:0 < 1000
f_4011(v27010:0, v27011:0, v27012:0, v27013:0, v27014:0, v27015:0, v27018:0, v27022:0) -> f_3988(1 + v27018:0, 1 + v27018:0 + (v27018:0 + v27018:0 * v27018:0), 1 + v27018:0 + (v27018:0 + v27018:0 * v27018:0) + (v27018:0 + v27018:0 * v27018:0 + v27018:0 * v27018:0 * (1 + v27018:0)), 1, 1, 1, 1 + v27013:0, 1 + v27013:0 + (v27013:0 + v27013:0 * v27013:0), 1 + v27013:0 + (v27013:0 + v27013:0 * v27013:0) + (v27013:0 + v27013:0 * v27013:0 + v27013:0 * v27013:0 * (1 + v27013:0)), 1 + (1 + v27018:0), v27013:0) :|: v27013:0 < 1000 && v27018:0 > 1 && v27018:0 * v27018:0 * v27018:0 < 1 + (1 + v27013:0 + (v27013:0 + v27013:0 * v27013:0) + (v27013:0 + v27013:0 * v27013:0 + v27013:0 * v27013:0 * (1 + v27013:0))) && v27010:0 > 1000 && 1 + v27018:0 + (v27018:0 + v27018:0 * v27018:0) + (v27018:0 + v27018:0 * v27018:0 + v27018:0 * v27018:0 * (1 + v27018:0)) > 1 + (1 + v27013:0 + (v27013:0 + v27013:0 * v27013:0) + (v27013:0 + v27013:0 * v27013:0 + v27013:0 * v27013:0 * (1 + v27013:0))) && v27013:0 > 1 && v27013:0 < 1001 && v27018:0 < 1000
f_4011(v27010:0, v27011:0, v27012:0, v27013:0, v27014:0, v27015:0, v27018:0, v27022:0) -> f_3988(1 + v27018:0, 1 + v27018:0 + (v27018:0 + v27018:0 * v27018:0), 1 + v27018:0 + (v27018:0 + v27018:0 * v27018:0) + (v27018:0 + v27018:0 * v27018:0 + v27018:0 * v27018:0 * (1 + v27018:0)), 1, 1, 1, 1 + v27013:0, 1 + v27013:0 + (v27013:0 + v27013:0 * v27013:0), 1 + v27013:0 + (v27013:0 + v27013:0 * v27013:0) + (v27013:0 + v27013:0 * v27013:0 + v27013:0 * v27013:0 * (1 + v27013:0)), 1 + (1 + v27018:0), v27013:0) :|: v27013:0 < 1000 && v27018:0 > 1 && v27018:0 * v27018:0 * v27018:0 > 1 + (1 + v27013:0 + (v27013:0 + v27013:0 * v27013:0) + (v27013:0 + v27013:0 * v27013:0 + v27013:0 * v27013:0 * (1 + v27013:0))) && v27010:0 > 1000 && 1 + v27018:0 + (v27018:0 + v27018:0 * v27018:0) + (v27018:0 + v27018:0 * v27018:0 + v27018:0 * v27018:0 * (1 + v27018:0)) < 1 + (1 + v27013:0 + (v27013:0 + v27013:0 * v27013:0) + (v27013:0 + v27013:0 * v27013:0 + v27013:0 * v27013:0 * (1 + v27013:0))) && v27013:0 > 1 && v27013:0 < 1001 && v27018:0 < 1000
f_4011(v27010:0, v27011:0, v27012:0, v27013:0, v27014:0, v27015:0, v27018:0, v27022:0) -> f_3988(1 + v27018:0, 1 + v27018:0 + (v27018:0 + v27018:0 * v27018:0), 1 + v27018:0 + (v27018:0 + v27018:0 * v27018:0) + (v27018:0 + v27018:0 * v27018:0 + v27018:0 * v27018:0 * (1 + v27018:0)), 1, 1, 1, 1 + v27013:0, 1 + v27013:0 + (v27013:0 + v27013:0 * v27013:0), 1 + v27013:0 + (v27013:0 + v27013:0 * v27013:0) + (v27013:0 + v27013:0 * v27013:0 + v27013:0 * v27013:0 * (1 + v27013:0)), 1 + (1 + v27018:0), v27013:0) :|: v27013:0 < 1000 && v27018:0 > 1 && v27018:0 * v27018:0 * v27018:0 > 1 + (1 + v27013:0 + (v27013:0 + v27013:0 * v27013:0) + (v27013:0 + v27013:0 * v27013:0 + v27013:0 * v27013:0 * (1 + v27013:0))) && v27010:0 > 1000 && 1 + v27018:0 + (v27018:0 + v27018:0 * v27018:0) + (v27018:0 + v27018:0 * v27018:0 + v27018:0 * v27018:0 * (1 + v27018:0)) > 1 + (1 + v27013:0 + (v27013:0 + v27013:0 * v27013:0) + (v27013:0 + v27013:0 * v27013:0 + v27013:0 * v27013:0 * (1 + v27013:0))) && v27013:0 > 1 && v27013:0 < 1001 && v27018:0 < 1000
f_4011(v27010:0, times~v27010:0~v27010:0, times~times~v27010:0~v27010:0~v27010:0, v27013:0, times~v27013:0~v27013:0, times~times~v27013:0~v27013:0~v27013:0, v27018:0, v27022:0) -> f_3988(v27018:0, v27018:0 * v27018:0, v27018:0 * v27018:0 * v27018:0, v27010:0, v27010:0 * v27010:0, v27010:0 * v27010:0 * v27010:0, v27013:0, v27013:0 * v27013:0, v27013:0 * v27013:0 * v27013:0, 1 + v27018:0, v27022:0) :|: v27022:0 < 1000 && v27010:0 < 1001 && v27013:0 < 1001 && v27018:0 * v27018:0 * v27018:0 < v27010:0 * v27010:0 * v27010:0 + v27013:0 * v27013:0 * v27013:0 && v27018:0 > 1 && v27018:0 < 1001 && times~v27010:0~v27010:0 = v27010:0 * v27010:0 && times~times~v27010:0~v27010:0~v27010:0 = v27010:0 * v27010:0 * v27010:0 && times~v27013:0~v27013:0 = v27013:0 * v27013:0 && times~times~v27013:0~v27013:0~v27013:0 = v27013:0 * v27013:0 * v27013:0
f_4011(v27010:0, times~v27010:0~v27010:0, times~times~v27010:0~v27010:0~v27010:0, v27013:0, times~v27013:0~v27013:0, times~times~v27013:0~v27013:0~v27013:0, v27018:0, v27022:0) -> f_3988(v27018:0, v27018:0 * v27018:0, v27018:0 * v27018:0 * v27018:0, v27010:0, v27010:0 * v27010:0, v27010:0 * v27010:0 * v27010:0, v27013:0, v27013:0 * v27013:0, v27013:0 * v27013:0 * v27013:0, 1 + v27018:0, v27022:0) :|: v27022:0 < 1000 && v27010:0 < 1001 && v27013:0 < 1001 && v27018:0 * v27018:0 * v27018:0 > v27010:0 * v27010:0 * v27010:0 + v27013:0 * v27013:0 * v27013:0 && v27018:0 > 1 && v27018:0 < 1001 && times~v27010:0~v27010:0 = v27010:0 * v27010:0 && times~times~v27010:0~v27010:0~v27010:0 = v27010:0 * v27010:0 * v27010:0 && times~v27013:0~v27013:0 = v27013:0 * v27013:0 && times~times~v27013:0~v27013:0~v27013:0 = v27013:0 * v27013:0 * v27013:0
f_4011(v27010:0, v27011:0, v27012:0, v27013:0, v27014:0, v27015:0, v27018:0, v27022:0) -> f_4011(2, 4, 8, 1 + v27013:0, 1 + v27013:0 + (v27013:0 + v27013:0 * v27013:0), 1 + v27013:0 + (v27013:0 + v27013:0 * v27013:0) + (v27013:0 + v27013:0 * v27013:0 + v27013:0 * v27013:0 * (1 + v27013:0)), 2, v27013:0) :|: v27013:0 < 1000 && v27018:0 > 999 && v27018:0 * v27018:0 * v27018:0 < 1 + (1 + v27013:0 + (v27013:0 + v27013:0 * v27013:0) + (v27013:0 + v27013:0 * v27013:0 + v27013:0 * v27013:0 * (1 + v27013:0))) && 1 + v27013:0 + (v27013:0 + v27013:0 * v27013:0) + (v27013:0 + v27013:0 * v27013:0 + v27013:0 * v27013:0 * (1 + v27013:0)) > -7 && v27010:0 > 1000 && v27013:0 > 1 && v27013:0 < 1001
f_4011(v27010:0, v27011:0, v27012:0, v27013:0, v27014:0, v27015:0, v27018:0, v27022:0) -> f_4011(2, 4, 8, 1 + v27013:0, 1 + v27013:0 + (v27013:0 + v27013:0 * v27013:0), 1 + v27013:0 + (v27013:0 + v27013:0 * v27013:0) + (v27013:0 + v27013:0 * v27013:0 + v27013:0 * v27013:0 * (1 + v27013:0)), 2, v27013:0) :|: v27013:0 < 1000 && v27018:0 > 999 && v27018:0 * v27018:0 * v27018:0 < 1 + (1 + v27013:0 + (v27013:0 + v27013:0 * v27013:0) + (v27013:0 + v27013:0 * v27013:0 + v27013:0 * v27013:0 * (1 + v27013:0))) && 1 + v27013:0 + (v27013:0 + v27013:0 * v27013:0) + (v27013:0 + v27013:0 * v27013:0 + v27013:0 * v27013:0 * (1 + v27013:0)) < -7 && v27010:0 > 1000 && v27013:0 > 1 && v27013:0 < 1001
f_4011(v27010:0, v27011:0, v27012:0, v27013:0, v27014:0, v27015:0, v27018:0, v27022:0) -> f_4011(2, 4, 8, 1 + v27013:0, 1 + v27013:0 + (v27013:0 + v27013:0 * v27013:0), 1 + v27013:0 + (v27013:0 + v27013:0 * v27013:0) + (v27013:0 + v27013:0 * v27013:0 + v27013:0 * v27013:0 * (1 + v27013:0)), 2, v27013:0) :|: v27013:0 < 1000 && v27018:0 > 999 && v27018:0 * v27018:0 * v27018:0 > 1 + (1 + v27013:0 + (v27013:0 + v27013:0 * v27013:0) + (v27013:0 + v27013:0 * v27013:0 + v27013:0 * v27013:0 * (1 + v27013:0))) && 1 + v27013:0 + (v27013:0 + v27013:0 * v27013:0) + (v27013:0 + v27013:0 * v27013:0 + v27013:0 * v27013:0 * (1 + v27013:0)) > -7 && v27010:0 > 1000 && v27013:0 > 1 && v27013:0 < 1001
f_4011(v27010:0, v27011:0, v27012:0, v27013:0, v27014:0, v27015:0, v27018:0, v27022:0) -> f_4011(2, 4, 8, 1 + v27013:0, 1 + v27013:0 + (v27013:0 + v27013:0 * v27013:0), 1 + v27013:0 + (v27013:0 + v27013:0 * v27013:0) + (v27013:0 + v27013:0 * v27013:0 + v27013:0 * v27013:0 * (1 + v27013:0)), 2, v27013:0) :|: v27013:0 < 1000 && v27018:0 > 999 && v27018:0 * v27018:0 * v27018:0 > 1 + (1 + v27013:0 + (v27013:0 + v27013:0 * v27013:0) + (v27013:0 + v27013:0 * v27013:0 + v27013:0 * v27013:0 * (1 + v27013:0))) && 1 + v27013:0 + (v27013:0 + v27013:0 * v27013:0) + (v27013:0 + v27013:0 * v27013:0 + v27013:0 * v27013:0 * (1 + v27013:0)) < -7 && v27010:0 > 1000 && v27013:0 > 1 && v27013:0 < 1001

----------------------------------------

(9)
Obligation:
Rules:
f_3988(cons_1000, cons_1000000, cons_1000000000, cons_10001, cons_10000001, cons_10000000001, v25511:0, v25512:0, v25513:0, cons_1001, v25520:0) -> f_3988(2, 4, 8, 1, 1, 1, 1 + v25511:0, 1 + v25511:0 + (v25511:0 + v25511:0 * v25511:0), 1 + v25511:0 + (v25511:0 + v25511:0 * v25511:0) + (v25511:0 + v25511:0 * v25511:0 + v25511:0 * v25511:0 * (1 + v25511:0)), 3, v25511:0) :|: v25511:0 > 1 && 7 < 1 + v25511:0 + (v25511:0 + v25511:0 * v25511:0) + (v25511:0 + v25511:0 * v25511:0 + v25511:0 * v25511:0 * (1 + v25511:0)) && v25511:0 < 1000 && v25511:0 < 1001 && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && cons_10001 = 1000 && cons_10000001 = 1000000 && cons_10000000001 = 1000000000 && cons_1001 = 1001
f_3988(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f_3988(2, 4, 8, 1, 1, 1, 1 + x6, 1 + x6 + (x6 + x6 * x6), 1 + x6 + (x6 + x6 * x6) + (x6 + x6 * x6 + x6 * x6 * (1 + x6)), 3, x6) :|: x6 < 1001 && x6 > 1 && x6 < 1000 && 1 + x6 + (x6 + x6 * x6) + (x6 + x6 * x6 + x6 * x6 * (1 + x6)) > 0 && 7 > 1 + x6 + (x6 + x6 * x6) + (x6 + x6 * x6 + x6 * x6 * (1 + x6)) && x = 1000 && x1 = 1000000 && x2 = 1000000000 && x3 = 1000 && x4 = 1000000 && x5 = 1000000000 && x9 = 1001
f_3988(x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21) -> f_3988(2, 4, 8, 1, 1, 1, 1 + x17, 1 + x17 + (x17 + x17 * x17), 1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17)), 3, x17) :|: x17 < 1001 && x17 > 1 && x17 < 1000 && 1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17)) < 0 && 7 < 1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17)) && x11 = 1000 && x12 = 1000000 && x13 = 1000000000 && x14 = 1000 && x15 = 1000000 && x16 = 1000000000 && x20 = 1001
f_3988(x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32) -> f_3988(2, 4, 8, 1, 1, 1, 1 + x28, 1 + x28 + (x28 + x28 * x28), 1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28)), 3, x28) :|: x28 < 1001 && x28 > 1 && x28 < 1000 && 1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28)) < 0 && 7 > 1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28)) && x22 = 1000 && x23 = 1000000 && x24 = 1000000000 && x25 = 1000 && x26 = 1000000 && x27 = 1000000000 && x31 = 1001
f_3988(x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43) -> f_4011(x36, x37, x38, x39, x40, x41, x42, x43) :|: x42 < 1001 && x33 < 1000
f_3988(x44, x45, x46, x47, x48, x49, x50, x51, x52, x53, x54) -> f_4011(1 + x47, 1 + x47 + (x47 + x47 * x47), 1 + x47 + (x47 + x47 * x47) + (x47 + x47 * x47 + x47 * x47 * (1 + x47)), x50, x50 * x50, x50 * x50 * x50, 2, x54) :|: x47 > 0 && 1 + x47 + (x47 + x47 * x47) + (x47 + x47 * x47 + x47 * x47 * (1 + x47)) + x50 * x50 * x50 > 1 && x47 < 1000 && x47 < 1001 && x44 = 1000 && x45 = 1000000 && x46 = 1000000000 && x51 = x50 * x50 && x52 = x50 * x50 * x50 && x53 = 1001
f_3988(x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65) -> f_4011(1 + x58, 1 + x58 + (x58 + x58 * x58), 1 + x58 + (x58 + x58 * x58) + (x58 + x58 * x58 + x58 * x58 * (1 + x58)), x61, x61 * x61, x61 * x61 * x61, 2, x65) :|: x58 > 0 && 1 + x58 + (x58 + x58 * x58) + (x58 + x58 * x58 + x58 * x58 * (1 + x58)) + x61 * x61 * x61 < 1 && x58 < 1000 && x58 < 1001 && x55 = 1000 && x56 = 1000000 && x57 = 1000000000 && x62 = x61 * x61 && x63 = x61 * x61 * x61 && x64 = 1001
f_4011(v27010:0, v27011:0, v27012:0, v27013:0, v27014:0, v27015:0, v27018:0, v27022:0) -> f_3988(1 + v27018:0, 1 + v27018:0 + (v27018:0 + v27018:0 * v27018:0), 1 + v27018:0 + (v27018:0 + v27018:0 * v27018:0) + (v27018:0 + v27018:0 * v27018:0 + v27018:0 * v27018:0 * (1 + v27018:0)), 1, 1, 1, 1 + v27013:0, 1 + v27013:0 + (v27013:0 + v27013:0 * v27013:0), 1 + v27013:0 + (v27013:0 + v27013:0 * v27013:0) + (v27013:0 + v27013:0 * v27013:0 + v27013:0 * v27013:0 * (1 + v27013:0)), 1 + (1 + v27018:0), v27013:0) :|: v27013:0 < 1000 && v27018:0 > 1 && v27018:0 * v27018:0 * v27018:0 < 1 + (1 + v27013:0 + (v27013:0 + v27013:0 * v27013:0) + (v27013:0 + v27013:0 * v27013:0 + v27013:0 * v27013:0 * (1 + v27013:0))) && v27010:0 > 1000 && 1 + v27018:0 + (v27018:0 + v27018:0 * v27018:0) + (v27018:0 + v27018:0 * v27018:0 + v27018:0 * v27018:0 * (1 + v27018:0)) < 1 + (1 + v27013:0 + (v27013:0 + v27013:0 * v27013:0) + (v27013:0 + v27013:0 * v27013:0 + v27013:0 * v27013:0 * (1 + v27013:0))) && v27013:0 > 1 && v27013:0 < 1001 && v27018:0 < 1000
f_4011(x66, x67, x68, x69, x70, x71, x72, x73) -> f_3988(1 + x72, 1 + x72 + (x72 + x72 * x72), 1 + x72 + (x72 + x72 * x72) + (x72 + x72 * x72 + x72 * x72 * (1 + x72)), 1, 1, 1, 1 + x69, 1 + x69 + (x69 + x69 * x69), 1 + x69 + (x69 + x69 * x69) + (x69 + x69 * x69 + x69 * x69 * (1 + x69)), 1 + (1 + x72), x69) :|: x69 < 1000 && x72 > 1 && x72 * x72 * x72 < 1 + (1 + x69 + (x69 + x69 * x69) + (x69 + x69 * x69 + x69 * x69 * (1 + x69))) && x66 > 1000 && 1 + x72 + (x72 + x72 * x72) + (x72 + x72 * x72 + x72 * x72 * (1 + x72)) > 1 + (1 + x69 + (x69 + x69 * x69) + (x69 + x69 * x69 + x69 * x69 * (1 + x69))) && x69 > 1 && x69 < 1001 && x72 < 1000
f_4011(x74, x75, x76, x77, x78, x79, x80, x81) -> f_3988(1 + x80, 1 + x80 + (x80 + x80 * x80), 1 + x80 + (x80 + x80 * x80) + (x80 + x80 * x80 + x80 * x80 * (1 + x80)), 1, 1, 1, 1 + x77, 1 + x77 + (x77 + x77 * x77), 1 + x77 + (x77 + x77 * x77) + (x77 + x77 * x77 + x77 * x77 * (1 + x77)), 1 + (1 + x80), x77) :|: x77 < 1000 && x80 > 1 && x80 * x80 * x80 > 1 + (1 + x77 + (x77 + x77 * x77) + (x77 + x77 * x77 + x77 * x77 * (1 + x77))) && x74 > 1000 && 1 + x80 + (x80 + x80 * x80) + (x80 + x80 * x80 + x80 * x80 * (1 + x80)) < 1 + (1 + x77 + (x77 + x77 * x77) + (x77 + x77 * x77 + x77 * x77 * (1 + x77))) && x77 > 1 && x77 < 1001 && x80 < 1000
f_4011(x82, x83, x84, x85, x86, x87, x88, x89) -> f_3988(1 + x88, 1 + x88 + (x88 + x88 * x88), 1 + x88 + (x88 + x88 * x88) + (x88 + x88 * x88 + x88 * x88 * (1 + x88)), 1, 1, 1, 1 + x85, 1 + x85 + (x85 + x85 * x85), 1 + x85 + (x85 + x85 * x85) + (x85 + x85 * x85 + x85 * x85 * (1 + x85)), 1 + (1 + x88), x85) :|: x85 < 1000 && x88 > 1 && x88 * x88 * x88 > 1 + (1 + x85 + (x85 + x85 * x85) + (x85 + x85 * x85 + x85 * x85 * (1 + x85))) && x82 > 1000 && 1 + x88 + (x88 + x88 * x88) + (x88 + x88 * x88 + x88 * x88 * (1 + x88)) > 1 + (1 + x85 + (x85 + x85 * x85) + (x85 + x85 * x85 + x85 * x85 * (1 + x85))) && x85 > 1 && x85 < 1001 && x88 < 1000
f_4011(x90, x91, x92, x93, x94, x95, x96, x97) -> f_3988(x96, x96 * x96, x96 * x96 * x96, x90, x90 * x90, x90 * x90 * x90, x93, x93 * x93, x93 * x93 * x93, 1 + x96, x97) :|: x97 < 1000 && x90 < 1001 && x93 < 1001 && x96 * x96 * x96 < x90 * x90 * x90 + x93 * x93 * x93 && x96 > 1 && x96 < 1001 && x91 = x90 * x90 && x92 = x90 * x90 * x90 && x94 = x93 * x93 && x95 = x93 * x93 * x93
f_4011(x98, x99, x100, x101, x102, x103, x104, x105) -> f_3988(x104, x104 * x104, x104 * x104 * x104, x98, x98 * x98, x98 * x98 * x98, x101, x101 * x101, x101 * x101 * x101, 1 + x104, x105) :|: x105 < 1000 && x98 < 1001 && x101 < 1001 && x104 * x104 * x104 > x98 * x98 * x98 + x101 * x101 * x101 && x104 > 1 && x104 < 1001 && x99 = x98 * x98 && x100 = x98 * x98 * x98 && x102 = x101 * x101 && x103 = x101 * x101 * x101
f_4011(x106, x107, x108, x109, x110, x111, x112, x113) -> f_4011(2, 4, 8, 1 + x109, 1 + x109 + (x109 + x109 * x109), 1 + x109 + (x109 + x109 * x109) + (x109 + x109 * x109 + x109 * x109 * (1 + x109)), 2, x109) :|: x109 < 1000 && x112 > 999 && x112 * x112 * x112 < 1 + (1 + x109 + (x109 + x109 * x109) + (x109 + x109 * x109 + x109 * x109 * (1 + x109))) && 1 + x109 + (x109 + x109 * x109) + (x109 + x109 * x109 + x109 * x109 * (1 + x109)) > -7 && x106 > 1000 && x109 > 1 && x109 < 1001
f_4011(x114, x115, x116, x117, x118, x119, x120, x121) -> f_4011(2, 4, 8, 1 + x117, 1 + x117 + (x117 + x117 * x117), 1 + x117 + (x117 + x117 * x117) + (x117 + x117 * x117 + x117 * x117 * (1 + x117)), 2, x117) :|: x117 < 1000 && x120 > 999 && x120 * x120 * x120 < 1 + (1 + x117 + (x117 + x117 * x117) + (x117 + x117 * x117 + x117 * x117 * (1 + x117))) && 1 + x117 + (x117 + x117 * x117) + (x117 + x117 * x117 + x117 * x117 * (1 + x117)) < -7 && x114 > 1000 && x117 > 1 && x117 < 1001
f_4011(x122, x123, x124, x125, x126, x127, x128, x129) -> f_4011(2, 4, 8, 1 + x125, 1 + x125 + (x125 + x125 * x125), 1 + x125 + (x125 + x125 * x125) + (x125 + x125 * x125 + x125 * x125 * (1 + x125)), 2, x125) :|: x125 < 1000 && x128 > 999 && x128 * x128 * x128 > 1 + (1 + x125 + (x125 + x125 * x125) + (x125 + x125 * x125 + x125 * x125 * (1 + x125))) && 1 + x125 + (x125 + x125 * x125) + (x125 + x125 * x125 + x125 * x125 * (1 + x125)) > -7 && x122 > 1000 && x125 > 1 && x125 < 1001
f_4011(x130, x131, x132, x133, x134, x135, x136, x137) -> f_4011(2, 4, 8, 1 + x133, 1 + x133 + (x133 + x133 * x133), 1 + x133 + (x133 + x133 * x133) + (x133 + x133 * x133 + x133 * x133 * (1 + x133)), 2, x133) :|: x133 < 1000 && x136 > 999 && x136 * x136 * x136 > 1 + (1 + x133 + (x133 + x133 * x133) + (x133 + x133 * x133 + x133 * x133 * (1 + x133))) && 1 + x133 + (x133 + x133 * x133) + (x133 + x133 * x133 + x133 * x133 * (1 + x133)) < -7 && x130 > 1000 && x133 > 1 && x133 < 1001

----------------------------------------

(10) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(11)
Obligation:
Rules:
f_4011(x106:0, x107:0, x108:0, x109:0, x110:0, x111:0, x112:0, x113:0) -> f_4011(2, 4, 8, 1 + x109:0, 1 + x109:0 + (x109:0 + x109:0 * x109:0), 1 + x109:0 + (x109:0 + x109:0 * x109:0) + (x109:0 + x109:0 * x109:0 + x109:0 * x109:0 * (1 + x109:0)), 2, x109:0) :|: x109:0 > 1 && x109:0 < 1001 && x106:0 > 1000 && 1 + x109:0 + (x109:0 + x109:0 * x109:0) + (x109:0 + x109:0 * x109:0 + x109:0 * x109:0 * (1 + x109:0)) > -7 && x112:0 * x112:0 * x112:0 < 1 + (1 + x109:0 + (x109:0 + x109:0 * x109:0) + (x109:0 + x109:0 * x109:0 + x109:0 * x109:0 * (1 + x109:0))) && x112:0 > 999 && x109:0 < 1000
f_3988(cons_1000, cons_1000000, cons_1000000000, cons_10001, cons_10000001, cons_10000000001, x6:0, x7:0, x8:0, cons_1001, x10:0) -> f_3988(2, 4, 8, 1, 1, 1, 1 + x6:0, 1 + x6:0 + (x6:0 + x6:0 * x6:0), 1 + x6:0 + (x6:0 + x6:0 * x6:0) + (x6:0 + x6:0 * x6:0 + x6:0 * x6:0 * (1 + x6:0)), 3, x6:0) :|: 1 + x6:0 + (x6:0 + x6:0 * x6:0) + (x6:0 + x6:0 * x6:0 + x6:0 * x6:0 * (1 + x6:0)) > 0 && 7 > 1 + x6:0 + (x6:0 + x6:0 * x6:0) + (x6:0 + x6:0 * x6:0 + x6:0 * x6:0 * (1 + x6:0)) && x6:0 < 1000 && x6:0 > 1 && x6:0 < 1001 && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && cons_10001 = 1000 && cons_10000001 = 1000000 && cons_10000000001 = 1000000000 && cons_1001 = 1001
f_3988(x33:0, x34:0, x35:0, x36:0, x37:0, x38:0, x39:0, x40:0, x41:0, x42:0, x43:0) -> f_4011(x36:0, x37:0, x38:0, x39:0, x40:0, x41:0, x42:0, x43:0) :|: x42:0 < 1001 && x33:0 < 1000
f_4011(x130:0, x131:0, x132:0, x133:0, x134:0, x135:0, x136:0, x137:0) -> f_4011(2, 4, 8, 1 + x133:0, 1 + x133:0 + (x133:0 + x133:0 * x133:0), 1 + x133:0 + (x133:0 + x133:0 * x133:0) + (x133:0 + x133:0 * x133:0 + x133:0 * x133:0 * (1 + x133:0)), 2, x133:0) :|: x133:0 > 1 && x133:0 < 1001 && x130:0 > 1000 && 1 + x133:0 + (x133:0 + x133:0 * x133:0) + (x133:0 + x133:0 * x133:0 + x133:0 * x133:0 * (1 + x133:0)) < -7 && x136:0 * x136:0 * x136:0 > 1 + (1 + x133:0 + (x133:0 + x133:0 * x133:0) + (x133:0 + x133:0 * x133:0 + x133:0 * x133:0 * (1 + x133:0))) && x136:0 > 999 && x133:0 < 1000
f_4011(x122:0, x123:0, x124:0, x125:0, x126:0, x127:0, x128:0, x129:0) -> f_4011(2, 4, 8, 1 + x125:0, 1 + x125:0 + (x125:0 + x125:0 * x125:0), 1 + x125:0 + (x125:0 + x125:0 * x125:0) + (x125:0 + x125:0 * x125:0 + x125:0 * x125:0 * (1 + x125:0)), 2, x125:0) :|: x125:0 > 1 && x125:0 < 1001 && x122:0 > 1000 && 1 + x125:0 + (x125:0 + x125:0 * x125:0) + (x125:0 + x125:0 * x125:0 + x125:0 * x125:0 * (1 + x125:0)) > -7 && x128:0 * x128:0 * x128:0 > 1 + (1 + x125:0 + (x125:0 + x125:0 * x125:0) + (x125:0 + x125:0 * x125:0 + x125:0 * x125:0 * (1 + x125:0))) && x128:0 > 999 && x125:0 < 1000
f_3988(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f_4011(1 + x3, 1 + x3 + (x3 + x3 * x3), 1 + x3 + (x3 + x3 * x3) + (x3 + x3 * x3 + x3 * x3 * (1 + x3)), x6, x6 * x6, x6 * x6 * x6, 2, x10) :|: x3 < 1000 && x3 < 1001 && 1 + x3 + (x3 + x3 * x3) + (x3 + x3 * x3 + x3 * x3 * (1 + x3)) + x6 * x6 * x6 < 1 && x3 > 0 && x = 1000 && x1 = 1000000 && x2 = 1000000000 && x7 = x6 * x6 && x8 = x6 * x6 * x6 && x9 = 1001
f_4011(x74:0, x75:0, x76:0, x77:0, x78:0, x79:0, x80:0, x81:0) -> f_3988(1 + x80:0, 1 + x80:0 + (x80:0 + x80:0 * x80:0), 1 + x80:0 + (x80:0 + x80:0 * x80:0) + (x80:0 + x80:0 * x80:0 + x80:0 * x80:0 * (1 + x80:0)), 1, 1, 1, 1 + x77:0, 1 + x77:0 + (x77:0 + x77:0 * x77:0), 1 + x77:0 + (x77:0 + x77:0 * x77:0) + (x77:0 + x77:0 * x77:0 + x77:0 * x77:0 * (1 + x77:0)), 1 + (1 + x80:0), x77:0) :|: x77:0 < 1001 && x80:0 < 1000 && x77:0 > 1 && 1 + x80:0 + (x80:0 + x80:0 * x80:0) + (x80:0 + x80:0 * x80:0 + x80:0 * x80:0 * (1 + x80:0)) < 1 + (1 + x77:0 + (x77:0 + x77:0 * x77:0) + (x77:0 + x77:0 * x77:0 + x77:0 * x77:0 * (1 + x77:0))) && x74:0 > 1000 && x80:0 * x80:0 * x80:0 > 1 + (1 + x77:0 + (x77:0 + x77:0 * x77:0) + (x77:0 + x77:0 * x77:0 + x77:0 * x77:0 * (1 + x77:0))) && x80:0 > 1 && x77:0 < 1000
f_3988(x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21) -> f_3988(2, 4, 8, 1, 1, 1, 1 + x17, 1 + x17 + (x17 + x17 * x17), 1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17)), 3, x17) :|: 1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17)) < 0 && 7 < 1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17)) && x17 < 1000 && x17 > 1 && x17 < 1001 && x11 = 1000 && x12 = 1000000 && x13 = 1000000000 && x14 = 1000 && x15 = 1000000 && x16 = 1000000000 && x20 = 1001
f_4011(x66:0, x67:0, x68:0, x69:0, x70:0, x71:0, x72:0, x73:0) -> f_3988(1 + x72:0, 1 + x72:0 + (x72:0 + x72:0 * x72:0), 1 + x72:0 + (x72:0 + x72:0 * x72:0) + (x72:0 + x72:0 * x72:0 + x72:0 * x72:0 * (1 + x72:0)), 1, 1, 1, 1 + x69:0, 1 + x69:0 + (x69:0 + x69:0 * x69:0), 1 + x69:0 + (x69:0 + x69:0 * x69:0) + (x69:0 + x69:0 * x69:0 + x69:0 * x69:0 * (1 + x69:0)), 1 + (1 + x72:0), x69:0) :|: x69:0 < 1001 && x72:0 < 1000 && x69:0 > 1 && 1 + x72:0 + (x72:0 + x72:0 * x72:0) + (x72:0 + x72:0 * x72:0 + x72:0 * x72:0 * (1 + x72:0)) > 1 + (1 + x69:0 + (x69:0 + x69:0 * x69:0) + (x69:0 + x69:0 * x69:0 + x69:0 * x69:0 * (1 + x69:0))) && x66:0 > 1000 && x72:0 * x72:0 * x72:0 < 1 + (1 + x69:0 + (x69:0 + x69:0 * x69:0) + (x69:0 + x69:0 * x69:0 + x69:0 * x69:0 * (1 + x69:0))) && x72:0 > 1 && x69:0 < 1000
f_3988(x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32) -> f_4011(1 + x25, 1 + x25 + (x25 + x25 * x25), 1 + x25 + (x25 + x25 * x25) + (x25 + x25 * x25 + x25 * x25 * (1 + x25)), x28, x28 * x28, x28 * x28 * x28, 2, x32) :|: x25 < 1000 && x25 < 1001 && 1 + x25 + (x25 + x25 * x25) + (x25 + x25 * x25 + x25 * x25 * (1 + x25)) + x28 * x28 * x28 > 1 && x25 > 0 && x22 = 1000 && x23 = 1000000 && x24 = 1000000000 && x29 = x28 * x28 && x30 = x28 * x28 * x28 && x31 = 1001
f_4011(x114:0, x115:0, x116:0, x117:0, x118:0, x119:0, x120:0, x121:0) -> f_4011(2, 4, 8, 1 + x117:0, 1 + x117:0 + (x117:0 + x117:0 * x117:0), 1 + x117:0 + (x117:0 + x117:0 * x117:0) + (x117:0 + x117:0 * x117:0 + x117:0 * x117:0 * (1 + x117:0)), 2, x117:0) :|: x117:0 > 1 && x117:0 < 1001 && x114:0 > 1000 && 1 + x117:0 + (x117:0 + x117:0 * x117:0) + (x117:0 + x117:0 * x117:0 + x117:0 * x117:0 * (1 + x117:0)) < -7 && x120:0 * x120:0 * x120:0 < 1 + (1 + x117:0 + (x117:0 + x117:0 * x117:0) + (x117:0 + x117:0 * x117:0 + x117:0 * x117:0 * (1 + x117:0))) && x120:0 > 999 && x117:0 < 1000
f_4011(x98:0, times~x98:0~x98:0, times~times~x98:0~x98:0~x98:0, x101:0, times~x101:0~x101:0, times~times~x101:0~x101:0~x101:0, x104:0, x105:0) -> f_3988(x104:0, x104:0 * x104:0, x104:0 * x104:0 * x104:0, x98:0, x98:0 * x98:0, x98:0 * x98:0 * x98:0, x101:0, x101:0 * x101:0, x101:0 * x101:0 * x101:0, 1 + x104:0, x105:0) :|: x104:0 > 1 && x104:0 < 1001 && x98:0 * x98:0 * x98:0 + x101:0 * x101:0 * x101:0 < x104:0 * x104:0 * x104:0 && x101:0 < 1001 && x98:0 < 1001 && x105:0 < 1000 && times~x98:0~x98:0 = x98:0 * x98:0 && times~times~x98:0~x98:0~x98:0 = x98:0 * x98:0 * x98:0 && times~x101:0~x101:0 = x101:0 * x101:0 && times~times~x101:0~x101:0~x101:0 = x101:0 * x101:0 * x101:0
f_3988(x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43) -> f_3988(2, 4, 8, 1, 1, 1, 1 + x39, 1 + x39 + (x39 + x39 * x39), 1 + x39 + (x39 + x39 * x39) + (x39 + x39 * x39 + x39 * x39 * (1 + x39)), 3, x39) :|: 1 + x39 + (x39 + x39 * x39) + (x39 + x39 * x39 + x39 * x39 * (1 + x39)) < 0 && 7 > 1 + x39 + (x39 + x39 * x39) + (x39 + x39 * x39 + x39 * x39 * (1 + x39)) && x39 < 1000 && x39 > 1 && x39 < 1001 && x33 = 1000 && x34 = 1000000 && x35 = 1000000000 && x36 = 1000 && x37 = 1000000 && x38 = 1000000000 && x42 = 1001
f_3988(x44, x45, x46, x47, x48, x49, x50, x51, x52, x53, x54) -> f_3988(2, 4, 8, 1, 1, 1, 1 + x50, 1 + x50 + (x50 + x50 * x50), 1 + x50 + (x50 + x50 * x50) + (x50 + x50 * x50 + x50 * x50 * (1 + x50)), 3, x50) :|: x50 < 1000 && x50 < 1001 && 7 < 1 + x50 + (x50 + x50 * x50) + (x50 + x50 * x50 + x50 * x50 * (1 + x50)) && x50 > 1 && x44 = 1000 && x45 = 1000000 && x46 = 1000000000 && x47 = 1000 && x48 = 1000000 && x49 = 1000000000 && x53 = 1001
f_4011(x90:0, times~x90:0~x90:0, times~times~x90:0~x90:0~x90:0, x93:0, times~x93:0~x93:0, times~times~x93:0~x93:0~x93:0, x96:0, x97:0) -> f_3988(x96:0, x96:0 * x96:0, x96:0 * x96:0 * x96:0, x90:0, x90:0 * x90:0, x90:0 * x90:0 * x90:0, x93:0, x93:0 * x93:0, x93:0 * x93:0 * x93:0, 1 + x96:0, x97:0) :|: x96:0 > 1 && x96:0 < 1001 && x96:0 * x96:0 * x96:0 < x90:0 * x90:0 * x90:0 + x93:0 * x93:0 * x93:0 && x93:0 < 1001 && x90:0 < 1001 && x97:0 < 1000 && times~x90:0~x90:0 = x90:0 * x90:0 && times~times~x90:0~x90:0~x90:0 = x90:0 * x90:0 * x90:0 && times~x93:0~x93:0 = x93:0 * x93:0 && times~times~x93:0~x93:0~x93:0 = x93:0 * x93:0 * x93:0
f_4011(v27010:0:0, v27011:0:0, v27012:0:0, v27013:0:0, v27014:0:0, v27015:0:0, v27018:0:0, v27022:0:0) -> f_3988(1 + v27018:0:0, 1 + v27018:0:0 + (v27018:0:0 + v27018:0:0 * v27018:0:0), 1 + v27018:0:0 + (v27018:0:0 + v27018:0:0 * v27018:0:0) + (v27018:0:0 + v27018:0:0 * v27018:0:0 + v27018:0:0 * v27018:0:0 * (1 + v27018:0:0)), 1, 1, 1, 1 + v27013:0:0, 1 + v27013:0:0 + (v27013:0:0 + v27013:0:0 * v27013:0:0), 1 + v27013:0:0 + (v27013:0:0 + v27013:0:0 * v27013:0:0) + (v27013:0:0 + v27013:0:0 * v27013:0:0 + v27013:0:0 * v27013:0:0 * (1 + v27013:0:0)), 1 + (1 + v27018:0:0), v27013:0:0) :|: v27013:0:0 < 1001 && v27018:0:0 < 1000 && v27013:0:0 > 1 && 1 + v27018:0:0 + (v27018:0:0 + v27018:0:0 * v27018:0:0) + (v27018:0:0 + v27018:0:0 * v27018:0:0 + v27018:0:0 * v27018:0:0 * (1 + v27018:0:0)) < 1 + (1 + v27013:0:0 + (v27013:0:0 + v27013:0:0 * v27013:0:0) + (v27013:0:0 + v27013:0:0 * v27013:0:0 + v27013:0:0 * v27013:0:0 * (1 + v27013:0:0))) && v27010:0:0 > 1000 && v27018:0:0 * v27018:0:0 * v27018:0:0 < 1 + (1 + v27013:0:0 + (v27013:0:0 + v27013:0:0 * v27013:0:0) + (v27013:0:0 + v27013:0:0 * v27013:0:0 + v27013:0:0 * v27013:0:0 * (1 + v27013:0:0))) && v27018:0:0 > 1 && v27013:0:0 < 1000
f_4011(x82:0, x83:0, x84:0, x85:0, x86:0, x87:0, x88:0, x89:0) -> f_3988(1 + x88:0, 1 + x88:0 + (x88:0 + x88:0 * x88:0), 1 + x88:0 + (x88:0 + x88:0 * x88:0) + (x88:0 + x88:0 * x88:0 + x88:0 * x88:0 * (1 + x88:0)), 1, 1, 1, 1 + x85:0, 1 + x85:0 + (x85:0 + x85:0 * x85:0), 1 + x85:0 + (x85:0 + x85:0 * x85:0) + (x85:0 + x85:0 * x85:0 + x85:0 * x85:0 * (1 + x85:0)), 1 + (1 + x88:0), x85:0) :|: x85:0 < 1001 && x88:0 < 1000 && x85:0 > 1 && 1 + x88:0 + (x88:0 + x88:0 * x88:0) + (x88:0 + x88:0 * x88:0 + x88:0 * x88:0 * (1 + x88:0)) > 1 + (1 + x85:0 + (x85:0 + x85:0 * x85:0) + (x85:0 + x85:0 * x85:0 + x85:0 * x85:0 * (1 + x85:0))) && x82:0 > 1000 && x88:0 * x88:0 * x88:0 > 1 + (1 + x85:0 + (x85:0 + x85:0 * x85:0) + (x85:0 + x85:0 * x85:0 + x85:0 * x85:0 * (1 + x85:0))) && x88:0 > 1 && x85:0 < 1000

----------------------------------------

(12) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_4011(x, x1, x2, x3, x4, x5, x6, x7)] = 1000 - x3
[f_3988(x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)] = 1000 - x14

The following rules are decreasing:
f_4011(x106:0, x107:0, x108:0, x109:0, x110:0, x111:0, x112:0, x113:0) -> f_4011(2, 4, 8, 1 + x109:0, 1 + x109:0 + (x109:0 + x109:0 * x109:0), 1 + x109:0 + (x109:0 + x109:0 * x109:0) + (x109:0 + x109:0 * x109:0 + x109:0 * x109:0 * (1 + x109:0)), 2, x109:0) :|: x109:0 > 1 && x109:0 < 1001 && x106:0 > 1000 && 1 + x109:0 + (x109:0 + x109:0 * x109:0) + (x109:0 + x109:0 * x109:0 + x109:0 * x109:0 * (1 + x109:0)) > -7 && x112:0 * x112:0 * x112:0 < 1 + (1 + x109:0 + (x109:0 + x109:0 * x109:0) + (x109:0 + x109:0 * x109:0 + x109:0 * x109:0 * (1 + x109:0))) && x112:0 > 999 && x109:0 < 1000
f_3988(cons_1000, cons_1000000, cons_1000000000, cons_10001, cons_10000001, cons_10000000001, x6:0, x7:0, x8:0, cons_1001, x10:0) -> f_3988(2, 4, 8, 1, 1, 1, 1 + x6:0, 1 + x6:0 + (x6:0 + x6:0 * x6:0), 1 + x6:0 + (x6:0 + x6:0 * x6:0) + (x6:0 + x6:0 * x6:0 + x6:0 * x6:0 * (1 + x6:0)), 3, x6:0) :|: 1 + x6:0 + (x6:0 + x6:0 * x6:0) + (x6:0 + x6:0 * x6:0 + x6:0 * x6:0 * (1 + x6:0)) > 0 && 7 > 1 + x6:0 + (x6:0 + x6:0 * x6:0) + (x6:0 + x6:0 * x6:0 + x6:0 * x6:0 * (1 + x6:0)) && x6:0 < 1000 && x6:0 > 1 && x6:0 < 1001 && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && cons_10001 = 1000 && cons_10000001 = 1000000 && cons_10000000001 = 1000000000 && cons_1001 = 1001
f_4011(x130:0, x131:0, x132:0, x133:0, x134:0, x135:0, x136:0, x137:0) -> f_4011(2, 4, 8, 1 + x133:0, 1 + x133:0 + (x133:0 + x133:0 * x133:0), 1 + x133:0 + (x133:0 + x133:0 * x133:0) + (x133:0 + x133:0 * x133:0 + x133:0 * x133:0 * (1 + x133:0)), 2, x133:0) :|: x133:0 > 1 && x133:0 < 1001 && x130:0 > 1000 && 1 + x133:0 + (x133:0 + x133:0 * x133:0) + (x133:0 + x133:0 * x133:0 + x133:0 * x133:0 * (1 + x133:0)) < -7 && x136:0 * x136:0 * x136:0 > 1 + (1 + x133:0 + (x133:0 + x133:0 * x133:0) + (x133:0 + x133:0 * x133:0 + x133:0 * x133:0 * (1 + x133:0))) && x136:0 > 999 && x133:0 < 1000
f_4011(x122:0, x123:0, x124:0, x125:0, x126:0, x127:0, x128:0, x129:0) -> f_4011(2, 4, 8, 1 + x125:0, 1 + x125:0 + (x125:0 + x125:0 * x125:0), 1 + x125:0 + (x125:0 + x125:0 * x125:0) + (x125:0 + x125:0 * x125:0 + x125:0 * x125:0 * (1 + x125:0)), 2, x125:0) :|: x125:0 > 1 && x125:0 < 1001 && x122:0 > 1000 && 1 + x125:0 + (x125:0 + x125:0 * x125:0) + (x125:0 + x125:0 * x125:0 + x125:0 * x125:0 * (1 + x125:0)) > -7 && x128:0 * x128:0 * x128:0 > 1 + (1 + x125:0 + (x125:0 + x125:0 * x125:0) + (x125:0 + x125:0 * x125:0 + x125:0 * x125:0 * (1 + x125:0))) && x128:0 > 999 && x125:0 < 1000
f_4011(x74:0, x75:0, x76:0, x77:0, x78:0, x79:0, x80:0, x81:0) -> f_3988(1 + x80:0, 1 + x80:0 + (x80:0 + x80:0 * x80:0), 1 + x80:0 + (x80:0 + x80:0 * x80:0) + (x80:0 + x80:0 * x80:0 + x80:0 * x80:0 * (1 + x80:0)), 1, 1, 1, 1 + x77:0, 1 + x77:0 + (x77:0 + x77:0 * x77:0), 1 + x77:0 + (x77:0 + x77:0 * x77:0) + (x77:0 + x77:0 * x77:0 + x77:0 * x77:0 * (1 + x77:0)), 1 + (1 + x80:0), x77:0) :|: x77:0 < 1001 && x80:0 < 1000 && x77:0 > 1 && 1 + x80:0 + (x80:0 + x80:0 * x80:0) + (x80:0 + x80:0 * x80:0 + x80:0 * x80:0 * (1 + x80:0)) < 1 + (1 + x77:0 + (x77:0 + x77:0 * x77:0) + (x77:0 + x77:0 * x77:0 + x77:0 * x77:0 * (1 + x77:0))) && x74:0 > 1000 && x80:0 * x80:0 * x80:0 > 1 + (1 + x77:0 + (x77:0 + x77:0 * x77:0) + (x77:0 + x77:0 * x77:0 + x77:0 * x77:0 * (1 + x77:0))) && x80:0 > 1 && x77:0 < 1000
f_3988(x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21) -> f_3988(2, 4, 8, 1, 1, 1, 1 + x17, 1 + x17 + (x17 + x17 * x17), 1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17)), 3, x17) :|: 1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17)) < 0 && 7 < 1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17)) && x17 < 1000 && x17 > 1 && x17 < 1001 && x11 = 1000 && x12 = 1000000 && x13 = 1000000000 && x14 = 1000 && x15 = 1000000 && x16 = 1000000000 && x20 = 1001
f_4011(x66:0, x67:0, x68:0, x69:0, x70:0, x71:0, x72:0, x73:0) -> f_3988(1 + x72:0, 1 + x72:0 + (x72:0 + x72:0 * x72:0), 1 + x72:0 + (x72:0 + x72:0 * x72:0) + (x72:0 + x72:0 * x72:0 + x72:0 * x72:0 * (1 + x72:0)), 1, 1, 1, 1 + x69:0, 1 + x69:0 + (x69:0 + x69:0 * x69:0), 1 + x69:0 + (x69:0 + x69:0 * x69:0) + (x69:0 + x69:0 * x69:0 + x69:0 * x69:0 * (1 + x69:0)), 1 + (1 + x72:0), x69:0) :|: x69:0 < 1001 && x72:0 < 1000 && x69:0 > 1 && 1 + x72:0 + (x72:0 + x72:0 * x72:0) + (x72:0 + x72:0 * x72:0 + x72:0 * x72:0 * (1 + x72:0)) > 1 + (1 + x69:0 + (x69:0 + x69:0 * x69:0) + (x69:0 + x69:0 * x69:0 + x69:0 * x69:0 * (1 + x69:0))) && x66:0 > 1000 && x72:0 * x72:0 * x72:0 < 1 + (1 + x69:0 + (x69:0 + x69:0 * x69:0) + (x69:0 + x69:0 * x69:0 + x69:0 * x69:0 * (1 + x69:0))) && x72:0 > 1 && x69:0 < 1000
f_4011(x114:0, x115:0, x116:0, x117:0, x118:0, x119:0, x120:0, x121:0) -> f_4011(2, 4, 8, 1 + x117:0, 1 + x117:0 + (x117:0 + x117:0 * x117:0), 1 + x117:0 + (x117:0 + x117:0 * x117:0) + (x117:0 + x117:0 * x117:0 + x117:0 * x117:0 * (1 + x117:0)), 2, x117:0) :|: x117:0 > 1 && x117:0 < 1001 && x114:0 > 1000 && 1 + x117:0 + (x117:0 + x117:0 * x117:0) + (x117:0 + x117:0 * x117:0 + x117:0 * x117:0 * (1 + x117:0)) < -7 && x120:0 * x120:0 * x120:0 < 1 + (1 + x117:0 + (x117:0 + x117:0 * x117:0) + (x117:0 + x117:0 * x117:0 + x117:0 * x117:0 * (1 + x117:0))) && x120:0 > 999 && x117:0 < 1000
f_3988(x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43) -> f_3988(2, 4, 8, 1, 1, 1, 1 + x39, 1 + x39 + (x39 + x39 * x39), 1 + x39 + (x39 + x39 * x39) + (x39 + x39 * x39 + x39 * x39 * (1 + x39)), 3, x39) :|: 1 + x39 + (x39 + x39 * x39) + (x39 + x39 * x39 + x39 * x39 * (1 + x39)) < 0 && 7 > 1 + x39 + (x39 + x39 * x39) + (x39 + x39 * x39 + x39 * x39 * (1 + x39)) && x39 < 1000 && x39 > 1 && x39 < 1001 && x33 = 1000 && x34 = 1000000 && x35 = 1000000000 && x36 = 1000 && x37 = 1000000 && x38 = 1000000000 && x42 = 1001
f_3988(x44, x45, x46, x47, x48, x49, x50, x51, x52, x53, x54) -> f_3988(2, 4, 8, 1, 1, 1, 1 + x50, 1 + x50 + (x50 + x50 * x50), 1 + x50 + (x50 + x50 * x50) + (x50 + x50 * x50 + x50 * x50 * (1 + x50)), 3, x50) :|: x50 < 1000 && x50 < 1001 && 7 < 1 + x50 + (x50 + x50 * x50) + (x50 + x50 * x50 + x50 * x50 * (1 + x50)) && x50 > 1 && x44 = 1000 && x45 = 1000000 && x46 = 1000000000 && x47 = 1000 && x48 = 1000000 && x49 = 1000000000 && x53 = 1001
f_4011(v27010:0:0, v27011:0:0, v27012:0:0, v27013:0:0, v27014:0:0, v27015:0:0, v27018:0:0, v27022:0:0) -> f_3988(1 + v27018:0:0, 1 + v27018:0:0 + (v27018:0:0 + v27018:0:0 * v27018:0:0), 1 + v27018:0:0 + (v27018:0:0 + v27018:0:0 * v27018:0:0) + (v27018:0:0 + v27018:0:0 * v27018:0:0 + v27018:0:0 * v27018:0:0 * (1 + v27018:0:0)), 1, 1, 1, 1 + v27013:0:0, 1 + v27013:0:0 + (v27013:0:0 + v27013:0:0 * v27013:0:0), 1 + v27013:0:0 + (v27013:0:0 + v27013:0:0 * v27013:0:0) + (v27013:0:0 + v27013:0:0 * v27013:0:0 + v27013:0:0 * v27013:0:0 * (1 + v27013:0:0)), 1 + (1 + v27018:0:0), v27013:0:0) :|: v27013:0:0 < 1001 && v27018:0:0 < 1000 && v27013:0:0 > 1 && 1 + v27018:0:0 + (v27018:0:0 + v27018:0:0 * v27018:0:0) + (v27018:0:0 + v27018:0:0 * v27018:0:0 + v27018:0:0 * v27018:0:0 * (1 + v27018:0:0)) < 1 + (1 + v27013:0:0 + (v27013:0:0 + v27013:0:0 * v27013:0:0) + (v27013:0:0 + v27013:0:0 * v27013:0:0 + v27013:0:0 * v27013:0:0 * (1 + v27013:0:0))) && v27010:0:0 > 1000 && v27018:0:0 * v27018:0:0 * v27018:0:0 < 1 + (1 + v27013:0:0 + (v27013:0:0 + v27013:0:0 * v27013:0:0) + (v27013:0:0 + v27013:0:0 * v27013:0:0 + v27013:0:0 * v27013:0:0 * (1 + v27013:0:0))) && v27018:0:0 > 1 && v27013:0:0 < 1000
f_4011(x82:0, x83:0, x84:0, x85:0, x86:0, x87:0, x88:0, x89:0) -> f_3988(1 + x88:0, 1 + x88:0 + (x88:0 + x88:0 * x88:0), 1 + x88:0 + (x88:0 + x88:0 * x88:0) + (x88:0 + x88:0 * x88:0 + x88:0 * x88:0 * (1 + x88:0)), 1, 1, 1, 1 + x85:0, 1 + x85:0 + (x85:0 + x85:0 * x85:0), 1 + x85:0 + (x85:0 + x85:0 * x85:0) + (x85:0 + x85:0 * x85:0 + x85:0 * x85:0 * (1 + x85:0)), 1 + (1 + x88:0), x85:0) :|: x85:0 < 1001 && x88:0 < 1000 && x85:0 > 1 && 1 + x88:0 + (x88:0 + x88:0 * x88:0) + (x88:0 + x88:0 * x88:0 + x88:0 * x88:0 * (1 + x88:0)) > 1 + (1 + x85:0 + (x85:0 + x85:0 * x85:0) + (x85:0 + x85:0 * x85:0 + x85:0 * x85:0 * (1 + x85:0))) && x82:0 > 1000 && x88:0 * x88:0 * x88:0 > 1 + (1 + x85:0 + (x85:0 + x85:0 * x85:0) + (x85:0 + x85:0 * x85:0 + x85:0 * x85:0 * (1 + x85:0))) && x88:0 > 1 && x85:0 < 1000
The following rules are bounded:
f_4011(x98:0, times~x98:0~x98:0, times~times~x98:0~x98:0~x98:0, x101:0, times~x101:0~x101:0, times~times~x101:0~x101:0~x101:0, x104:0, x105:0) -> f_3988(x104:0, x104:0 * x104:0, x104:0 * x104:0 * x104:0, x98:0, x98:0 * x98:0, x98:0 * x98:0 * x98:0, x101:0, x101:0 * x101:0, x101:0 * x101:0 * x101:0, 1 + x104:0, x105:0) :|: x104:0 > 1 && x104:0 < 1001 && x98:0 * x98:0 * x98:0 + x101:0 * x101:0 * x101:0 < x104:0 * x104:0 * x104:0 && x101:0 < 1001 && x98:0 < 1001 && x105:0 < 1000 && times~x98:0~x98:0 = x98:0 * x98:0 && times~times~x98:0~x98:0~x98:0 = x98:0 * x98:0 * x98:0 && times~x101:0~x101:0 = x101:0 * x101:0 && times~times~x101:0~x101:0~x101:0 = x101:0 * x101:0 * x101:0
f_4011(x90:0, times~x90:0~x90:0, times~times~x90:0~x90:0~x90:0, x93:0, times~x93:0~x93:0, times~times~x93:0~x93:0~x93:0, x96:0, x97:0) -> f_3988(x96:0, x96:0 * x96:0, x96:0 * x96:0 * x96:0, x90:0, x90:0 * x90:0, x90:0 * x90:0 * x90:0, x93:0, x93:0 * x93:0, x93:0 * x93:0 * x93:0, 1 + x96:0, x97:0) :|: x96:0 > 1 && x96:0 < 1001 && x96:0 * x96:0 * x96:0 < x90:0 * x90:0 * x90:0 + x93:0 * x93:0 * x93:0 && x93:0 < 1001 && x90:0 < 1001 && x97:0 < 1000 && times~x90:0~x90:0 = x90:0 * x90:0 && times~times~x90:0~x90:0~x90:0 = x90:0 * x90:0 * x90:0 && times~x93:0~x93:0 = x93:0 * x93:0 && times~times~x93:0~x93:0~x93:0 = x93:0 * x93:0 * x93:0

----------------------------------------

(13)
Complex Obligation (AND)

----------------------------------------

(14)
Obligation:
Rules:
f_3988(x33:0, x34:0, x35:0, x36:0, x37:0, x38:0, x39:0, x40:0, x41:0, x42:0, x43:0) -> f_4011(x36:0, x37:0, x38:0, x39:0, x40:0, x41:0, x42:0, x43:0) :|: x42:0 < 1001 && x33:0 < 1000
f_3988(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f_4011(1 + x3, 1 + x3 + (x3 + x3 * x3), 1 + x3 + (x3 + x3 * x3) + (x3 + x3 * x3 + x3 * x3 * (1 + x3)), x6, x6 * x6, x6 * x6 * x6, 2, x10) :|: x3 < 1000 && x3 < 1001 && 1 + x3 + (x3 + x3 * x3) + (x3 + x3 * x3 + x3 * x3 * (1 + x3)) + x6 * x6 * x6 < 1 && x3 > 0 && x = 1000 && x1 = 1000000 && x2 = 1000000000 && x7 = x6 * x6 && x8 = x6 * x6 * x6 && x9 = 1001
f_3988(x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32) -> f_4011(1 + x25, 1 + x25 + (x25 + x25 * x25), 1 + x25 + (x25 + x25 * x25) + (x25 + x25 * x25 + x25 * x25 * (1 + x25)), x28, x28 * x28, x28 * x28 * x28, 2, x32) :|: x25 < 1000 && x25 < 1001 && 1 + x25 + (x25 + x25 * x25) + (x25 + x25 * x25 + x25 * x25 * (1 + x25)) + x28 * x28 * x28 > 1 && x25 > 0 && x22 = 1000 && x23 = 1000000 && x24 = 1000000000 && x29 = x28 * x28 && x30 = x28 * x28 * x28 && x31 = 1001
f_4011(x98:0, times~x98:0~x98:0, times~times~x98:0~x98:0~x98:0, x101:0, times~x101:0~x101:0, times~times~x101:0~x101:0~x101:0, x104:0, x105:0) -> f_3988(x104:0, x104:0 * x104:0, x104:0 * x104:0 * x104:0, x98:0, x98:0 * x98:0, x98:0 * x98:0 * x98:0, x101:0, x101:0 * x101:0, x101:0 * x101:0 * x101:0, 1 + x104:0, x105:0) :|: x104:0 > 1 && x104:0 < 1001 && x98:0 * x98:0 * x98:0 + x101:0 * x101:0 * x101:0 < x104:0 * x104:0 * x104:0 && x101:0 < 1001 && x98:0 < 1001 && x105:0 < 1000 && times~x98:0~x98:0 = x98:0 * x98:0 && times~times~x98:0~x98:0~x98:0 = x98:0 * x98:0 * x98:0 && times~x101:0~x101:0 = x101:0 * x101:0 && times~times~x101:0~x101:0~x101:0 = x101:0 * x101:0 * x101:0
f_4011(x90:0, times~x90:0~x90:0, times~times~x90:0~x90:0~x90:0, x93:0, times~x93:0~x93:0, times~times~x93:0~x93:0~x93:0, x96:0, x97:0) -> f_3988(x96:0, x96:0 * x96:0, x96:0 * x96:0 * x96:0, x90:0, x90:0 * x90:0, x90:0 * x90:0 * x90:0, x93:0, x93:0 * x93:0, x93:0 * x93:0 * x93:0, 1 + x96:0, x97:0) :|: x96:0 > 1 && x96:0 < 1001 && x96:0 * x96:0 * x96:0 < x90:0 * x90:0 * x90:0 + x93:0 * x93:0 * x93:0 && x93:0 < 1001 && x90:0 < 1001 && x97:0 < 1000 && times~x90:0~x90:0 = x90:0 * x90:0 && times~times~x90:0~x90:0~x90:0 = x90:0 * x90:0 * x90:0 && times~x93:0~x93:0 = x93:0 * x93:0 && times~times~x93:0~x93:0~x93:0 = x93:0 * x93:0 * x93:0

----------------------------------------

(15) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(16)
Obligation:
Rules:
f_3988(x33:0:0, x34:0:0, x35:0:0, x36:0:0, x37:0:0, x38:0:0, x39:0:0, x40:0:0, x41:0:0, x42:0:0, x43:0:0) -> f_4011(x36:0:0, x37:0:0, x38:0:0, x39:0:0, x40:0:0, x41:0:0, x42:0:0, x43:0:0) :|: x42:0:0 < 1001 && x33:0:0 < 1000
f_3988(cons_1000, cons_1000000, cons_1000000000, x3:0, x4:0, x5:0, x6:0, times~x6:0~x6:0, times~times~x6:0~x6:0~x6:0, cons_1001, x10:0) -> f_4011(1 + x3:0, 1 + x3:0 + (x3:0 + x3:0 * x3:0), 1 + x3:0 + (x3:0 + x3:0 * x3:0) + (x3:0 + x3:0 * x3:0 + x3:0 * x3:0 * (1 + x3:0)), x6:0, x6:0 * x6:0, x6:0 * x6:0 * x6:0, 2, x10:0) :|: 1 + x3:0 + (x3:0 + x3:0 * x3:0) + (x3:0 + x3:0 * x3:0 + x3:0 * x3:0 * (1 + x3:0)) + x6:0 * x6:0 * x6:0 < 1 && x3:0 > 0 && x3:0 < 1001 && x3:0 < 1000 && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && times~x6:0~x6:0 = x6:0 * x6:0 && times~times~x6:0~x6:0~x6:0 = x6:0 * x6:0 * x6:0 && cons_1001 = 1001
f_4011(x98:0:0, times~x98:0:0~x98:0:0, times~times~x98:0:0~x98:0:0~x98:0:0, x101:0:0, times~x101:0:0~x101:0:0, times~times~x101:0:0~x101:0:0~x101:0:0, x104:0:0, x105:0:0) -> f_3988(x104:0:0, x104:0:0 * x104:0:0, x104:0:0 * x104:0:0 * x104:0:0, x98:0:0, x98:0:0 * x98:0:0, x98:0:0 * x98:0:0 * x98:0:0, x101:0:0, x101:0:0 * x101:0:0, x101:0:0 * x101:0:0 * x101:0:0, 1 + x104:0:0, x105:0:0) :|: x98:0:0 < 1001 && x105:0:0 < 1000 && x101:0:0 < 1001 && x98:0:0 * x98:0:0 * x98:0:0 + x101:0:0 * x101:0:0 * x101:0:0 < x104:0:0 * x104:0:0 * x104:0:0 && x104:0:0 < 1001 && x104:0:0 > 1 && times~x98:0:0~x98:0:0 = x98:0:0 * x98:0:0 && times~times~x98:0:0~x98:0:0~x98:0:0 = x98:0:0 * x98:0:0 * x98:0:0 && times~x101:0:0~x101:0:0 = x101:0:0 * x101:0:0 && times~times~x101:0:0~x101:0:0~x101:0:0 = x101:0:0 * x101:0:0 * x101:0:0
f_4011(x90:0:0, times~x90:0:0~x90:0:0, times~times~x90:0:0~x90:0:0~x90:0:0, x93:0:0, times~x93:0:0~x93:0:0, times~times~x93:0:0~x93:0:0~x93:0:0, x96:0:0, x97:0:0) -> f_3988(x96:0:0, x96:0:0 * x96:0:0, x96:0:0 * x96:0:0 * x96:0:0, x90:0:0, x90:0:0 * x90:0:0, x90:0:0 * x90:0:0 * x90:0:0, x93:0:0, x93:0:0 * x93:0:0, x93:0:0 * x93:0:0 * x93:0:0, 1 + x96:0:0, x97:0:0) :|: x90:0:0 < 1001 && x97:0:0 < 1000 && x93:0:0 < 1001 && x96:0:0 * x96:0:0 * x96:0:0 < x90:0:0 * x90:0:0 * x90:0:0 + x93:0:0 * x93:0:0 * x93:0:0 && x96:0:0 < 1001 && x96:0:0 > 1 && times~x90:0:0~x90:0:0 = x90:0:0 * x90:0:0 && times~times~x90:0:0~x90:0:0~x90:0:0 = x90:0:0 * x90:0:0 * x90:0:0 && times~x93:0:0~x93:0:0 = x93:0:0 * x93:0:0 && times~times~x93:0:0~x93:0:0~x93:0:0 = x93:0:0 * x93:0:0 * x93:0:0
f_3988(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f_4011(1 + x3, 1 + x3 + (x3 + x3 * x3), 1 + x3 + (x3 + x3 * x3) + (x3 + x3 * x3 + x3 * x3 * (1 + x3)), x6, x6 * x6, x6 * x6 * x6, 2, x10) :|: 1 + x3 + (x3 + x3 * x3) + (x3 + x3 * x3 + x3 * x3 * (1 + x3)) + x6 * x6 * x6 > 1 && x3 > 0 && x3 < 1001 && x3 < 1000 && x = 1000 && x1 = 1000000 && x2 = 1000000000 && x7 = x6 * x6 && x8 = x6 * x6 * x6 && x9 = 1001

----------------------------------------

(17) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_3988 ] = -2*f_3988_10 + -1998*f_3988_4 + 1
[ f_4011 ] = -1998*f_4011_1 + -2*f_4011_7

The following rules are decreasing:
f_3988(x33:0:0, x34:0:0, x35:0:0, x36:0:0, x37:0:0, x38:0:0, x39:0:0, x40:0:0, x41:0:0, x42:0:0, x43:0:0) -> f_4011(x36:0:0, x37:0:0, x38:0:0, x39:0:0, x40:0:0, x41:0:0, x42:0:0, x43:0:0) :|: x42:0:0 < 1001 && x33:0:0 < 1000
f_3988(cons_1000, cons_1000000, cons_1000000000, x3:0, x4:0, x5:0, x6:0, times~x6:0~x6:0, times~times~x6:0~x6:0~x6:0, cons_1001, x10:0) -> f_4011(1 + x3:0, 1 + x3:0 + (x3:0 + x3:0 * x3:0), 1 + x3:0 + (x3:0 + x3:0 * x3:0) + (x3:0 + x3:0 * x3:0 + x3:0 * x3:0 * (1 + x3:0)), x6:0, x6:0 * x6:0, x6:0 * x6:0 * x6:0, 2, x10:0) :|: 1 + x3:0 + (x3:0 + x3:0 * x3:0) + (x3:0 + x3:0 * x3:0 + x3:0 * x3:0 * (1 + x3:0)) + x6:0 * x6:0 * x6:0 < 1 && x3:0 > 0 && x3:0 < 1001 && x3:0 < 1000 && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && times~x6:0~x6:0 = x6:0 * x6:0 && times~times~x6:0~x6:0~x6:0 = x6:0 * x6:0 * x6:0 && cons_1001 = 1001
f_4011(x98:0:0, times~x98:0:0~x98:0:0, times~times~x98:0:0~x98:0:0~x98:0:0, x101:0:0, times~x101:0:0~x101:0:0, times~times~x101:0:0~x101:0:0~x101:0:0, x104:0:0, x105:0:0) -> f_3988(x104:0:0, x104:0:0 * x104:0:0, x104:0:0 * x104:0:0 * x104:0:0, x98:0:0, x98:0:0 * x98:0:0, x98:0:0 * x98:0:0 * x98:0:0, x101:0:0, x101:0:0 * x101:0:0, x101:0:0 * x101:0:0 * x101:0:0, 1 + x104:0:0, x105:0:0) :|: x98:0:0 < 1001 && x105:0:0 < 1000 && x101:0:0 < 1001 && x98:0:0 * x98:0:0 * x98:0:0 + x101:0:0 * x101:0:0 * x101:0:0 < x104:0:0 * x104:0:0 * x104:0:0 && x104:0:0 < 1001 && x104:0:0 > 1 && times~x98:0:0~x98:0:0 = x98:0:0 * x98:0:0 && times~times~x98:0:0~x98:0:0~x98:0:0 = x98:0:0 * x98:0:0 * x98:0:0 && times~x101:0:0~x101:0:0 = x101:0:0 * x101:0:0 && times~times~x101:0:0~x101:0:0~x101:0:0 = x101:0:0 * x101:0:0 * x101:0:0
f_4011(x90:0:0, times~x90:0:0~x90:0:0, times~times~x90:0:0~x90:0:0~x90:0:0, x93:0:0, times~x93:0:0~x93:0:0, times~times~x93:0:0~x93:0:0~x93:0:0, x96:0:0, x97:0:0) -> f_3988(x96:0:0, x96:0:0 * x96:0:0, x96:0:0 * x96:0:0 * x96:0:0, x90:0:0, x90:0:0 * x90:0:0, x90:0:0 * x90:0:0 * x90:0:0, x93:0:0, x93:0:0 * x93:0:0, x93:0:0 * x93:0:0 * x93:0:0, 1 + x96:0:0, x97:0:0) :|: x90:0:0 < 1001 && x97:0:0 < 1000 && x93:0:0 < 1001 && x96:0:0 * x96:0:0 * x96:0:0 < x90:0:0 * x90:0:0 * x90:0:0 + x93:0:0 * x93:0:0 * x93:0:0 && x96:0:0 < 1001 && x96:0:0 > 1 && times~x90:0:0~x90:0:0 = x90:0:0 * x90:0:0 && times~times~x90:0:0~x90:0:0~x90:0:0 = x90:0:0 * x90:0:0 * x90:0:0 && times~x93:0:0~x93:0:0 = x93:0:0 * x93:0:0 && times~times~x93:0:0~x93:0:0~x93:0:0 = x93:0:0 * x93:0:0 * x93:0:0
f_3988(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f_4011(1 + x3, 1 + x3 + (x3 + x3 * x3), 1 + x3 + (x3 + x3 * x3) + (x3 + x3 * x3 + x3 * x3 * (1 + x3)), x6, x6 * x6, x6 * x6 * x6, 2, x10) :|: 1 + x3 + (x3 + x3 * x3) + (x3 + x3 * x3 + x3 * x3 * (1 + x3)) + x6 * x6 * x6 > 1 && x3 > 0 && x3 < 1001 && x3 < 1000 && x = 1000 && x1 = 1000000 && x2 = 1000000000 && x7 = x6 * x6 && x8 = x6 * x6 * x6 && x9 = 1001

The following rules are bounded:
f_3988(cons_1000, cons_1000000, cons_1000000000, x3:0, x4:0, x5:0, x6:0, times~x6:0~x6:0, times~times~x6:0~x6:0~x6:0, cons_1001, x10:0) -> f_4011(1 + x3:0, 1 + x3:0 + (x3:0 + x3:0 * x3:0), 1 + x3:0 + (x3:0 + x3:0 * x3:0) + (x3:0 + x3:0 * x3:0 + x3:0 * x3:0 * (1 + x3:0)), x6:0, x6:0 * x6:0, x6:0 * x6:0 * x6:0, 2, x10:0) :|: 1 + x3:0 + (x3:0 + x3:0 * x3:0) + (x3:0 + x3:0 * x3:0 + x3:0 * x3:0 * (1 + x3:0)) + x6:0 * x6:0 * x6:0 < 1 && x3:0 > 0 && x3:0 < 1001 && x3:0 < 1000 && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && times~x6:0~x6:0 = x6:0 * x6:0 && times~times~x6:0~x6:0~x6:0 = x6:0 * x6:0 * x6:0 && cons_1001 = 1001
f_4011(x90:0:0, times~x90:0:0~x90:0:0, times~times~x90:0:0~x90:0:0~x90:0:0, x93:0:0, times~x93:0:0~x93:0:0, times~times~x93:0:0~x93:0:0~x93:0:0, x96:0:0, x97:0:0) -> f_3988(x96:0:0, x96:0:0 * x96:0:0, x96:0:0 * x96:0:0 * x96:0:0, x90:0:0, x90:0:0 * x90:0:0, x90:0:0 * x90:0:0 * x90:0:0, x93:0:0, x93:0:0 * x93:0:0, x93:0:0 * x93:0:0 * x93:0:0, 1 + x96:0:0, x97:0:0) :|: x90:0:0 < 1001 && x97:0:0 < 1000 && x93:0:0 < 1001 && x96:0:0 * x96:0:0 * x96:0:0 < x90:0:0 * x90:0:0 * x90:0:0 + x93:0:0 * x93:0:0 * x93:0:0 && x96:0:0 < 1001 && x96:0:0 > 1 && times~x90:0:0~x90:0:0 = x90:0:0 * x90:0:0 && times~times~x90:0:0~x90:0:0~x90:0:0 = x90:0:0 * x90:0:0 * x90:0:0 && times~x93:0:0~x93:0:0 = x93:0:0 * x93:0:0 && times~times~x93:0:0~x93:0:0~x93:0:0 = x93:0:0 * x93:0:0 * x93:0:0


----------------------------------------

(18)
Obligation:
Rules:
f_3988(x33:0:0, x34:0:0, x35:0:0, x36:0:0, x37:0:0, x38:0:0, x39:0:0, x40:0:0, x41:0:0, x42:0:0, x43:0:0) -> f_4011(x36:0:0, x37:0:0, x38:0:0, x39:0:0, x40:0:0, x41:0:0, x42:0:0, x43:0:0) :|: x42:0:0 < 1001 && x33:0:0 < 1000
f_4011(x98:0:0, times~x98:0:0~x98:0:0, times~times~x98:0:0~x98:0:0~x98:0:0, x101:0:0, times~x101:0:0~x101:0:0, times~times~x101:0:0~x101:0:0~x101:0:0, x104:0:0, x105:0:0) -> f_3988(x104:0:0, x104:0:0 * x104:0:0, x104:0:0 * x104:0:0 * x104:0:0, x98:0:0, x98:0:0 * x98:0:0, x98:0:0 * x98:0:0 * x98:0:0, x101:0:0, x101:0:0 * x101:0:0, x101:0:0 * x101:0:0 * x101:0:0, 1 + x104:0:0, x105:0:0) :|: x98:0:0 < 1001 && x105:0:0 < 1000 && x101:0:0 < 1001 && x98:0:0 * x98:0:0 * x98:0:0 + x101:0:0 * x101:0:0 * x101:0:0 < x104:0:0 * x104:0:0 * x104:0:0 && x104:0:0 < 1001 && x104:0:0 > 1 && times~x98:0:0~x98:0:0 = x98:0:0 * x98:0:0 && times~times~x98:0:0~x98:0:0~x98:0:0 = x98:0:0 * x98:0:0 * x98:0:0 && times~x101:0:0~x101:0:0 = x101:0:0 * x101:0:0 && times~times~x101:0:0~x101:0:0~x101:0:0 = x101:0:0 * x101:0:0 * x101:0:0
f_3988(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f_4011(1 + x3, 1 + x3 + (x3 + x3 * x3), 1 + x3 + (x3 + x3 * x3) + (x3 + x3 * x3 + x3 * x3 * (1 + x3)), x6, x6 * x6, x6 * x6 * x6, 2, x10) :|: 1 + x3 + (x3 + x3 * x3) + (x3 + x3 * x3 + x3 * x3 * (1 + x3)) + x6 * x6 * x6 > 1 && x3 > 0 && x3 < 1001 && x3 < 1000 && x = 1000 && x1 = 1000000 && x2 = 1000000000 && x7 = x6 * x6 && x8 = x6 * x6 * x6 && x9 = 1001

----------------------------------------

(19) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(20)
Obligation:
Rules:
f_3988(cons_1000, cons_1000000, cons_1000000000, x3:0, x4:0, x5:0, x6:0, times~x6:0~x6:0, times~times~x6:0~x6:0~x6:0, cons_1001, x10:0) -> f_3988(2, 4, 8, 1 + x3:0, (1 + x3:0) * (1 + x3:0), (1 + x3:0) * (1 + x3:0) * (1 + x3:0), x6:0, x6:0 * x6:0, x6:0 * x6:0 * x6:0, 3, x10:0) :|: 1 + x3:0 + (x3:0 + x3:0 * x3:0) = (1 + x3:0) * (1 + x3:0) && 1 + x3:0 + (x3:0 + x3:0 * x3:0) + (x3:0 + x3:0 * x3:0 + x3:0 * x3:0 * (1 + x3:0)) = (1 + x3:0) * (1 + x3:0) * (1 + x3:0) && 8 > (1 + x3:0) * (1 + x3:0) * (1 + x3:0) + x6:0 * x6:0 * x6:0 && x3:0 < 1001 && x6:0 < 1001 && 1 + x3:0 + (x3:0 + x3:0 * x3:0) + (x3:0 + x3:0 * x3:0 + x3:0 * x3:0 * (1 + x3:0)) + x6:0 * x6:0 * x6:0 > 1 && x3:0 > 0 && x10:0 < 1000 && x3:0 < 1000 && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && times~x6:0~x6:0 = x6:0 * x6:0 && times~times~x6:0~x6:0~x6:0 = x6:0 * x6:0 * x6:0 && cons_1001 = 1001
f_3988(x33:0:0:0, x34:0:0:0, x35:0:0:0, x36:0:0:0, times~x36:0:0:0~x36:0:0:0, times~times~x36:0:0:0~x36:0:0:0~x36:0:0:0, x39:0:0:0, times~x39:0:0:0~x39:0:0:0, times~times~x39:0:0:0~x39:0:0:0~x39:0:0:0, x42:0:0:0, x43:0:0:0) -> f_3988(x42:0:0:0, x42:0:0:0 * x42:0:0:0, x42:0:0:0 * x42:0:0:0 * x42:0:0:0, x36:0:0:0, x36:0:0:0 * x36:0:0:0, x36:0:0:0 * x36:0:0:0 * x36:0:0:0, x39:0:0:0, x39:0:0:0 * x39:0:0:0, x39:0:0:0 * x39:0:0:0 * x39:0:0:0, 1 + x42:0:0:0, x43:0:0:0) :|: x33:0:0:0 < 1000 && x42:0:0:0 > 1 && x42:0:0:0 < 1001 && x42:0:0:0 * x42:0:0:0 * x42:0:0:0 > x36:0:0:0 * x36:0:0:0 * x36:0:0:0 + x39:0:0:0 * x39:0:0:0 * x39:0:0:0 && x39:0:0:0 < 1001 && x43:0:0:0 < 1000 && x36:0:0:0 < 1001 && times~x36:0:0:0~x36:0:0:0 = x36:0:0:0 * x36:0:0:0 && times~times~x36:0:0:0~x36:0:0:0~x36:0:0:0 = x36:0:0:0 * x36:0:0:0 * x36:0:0:0 && times~x39:0:0:0~x39:0:0:0 = x39:0:0:0 * x39:0:0:0 && times~times~x39:0:0:0~x39:0:0:0~x39:0:0:0 = x39:0:0:0 * x39:0:0:0 * x39:0:0:0

----------------------------------------

(21) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_3988(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)] = 1000 - x3

The following rules are decreasing:
f_3988(cons_1000, cons_1000000, cons_1000000000, x3:0, x4:0, x5:0, x6:0, times~x6:0~x6:0, times~times~x6:0~x6:0~x6:0, cons_1001, x10:0) -> f_3988(2, 4, 8, 1 + x3:0, (1 + x3:0) * (1 + x3:0), (1 + x3:0) * (1 + x3:0) * (1 + x3:0), x6:0, x6:0 * x6:0, x6:0 * x6:0 * x6:0, 3, x10:0) :|: 1 + x3:0 + (x3:0 + x3:0 * x3:0) = (1 + x3:0) * (1 + x3:0) && 1 + x3:0 + (x3:0 + x3:0 * x3:0) + (x3:0 + x3:0 * x3:0 + x3:0 * x3:0 * (1 + x3:0)) = (1 + x3:0) * (1 + x3:0) * (1 + x3:0) && 8 > (1 + x3:0) * (1 + x3:0) * (1 + x3:0) + x6:0 * x6:0 * x6:0 && x3:0 < 1001 && x6:0 < 1001 && 1 + x3:0 + (x3:0 + x3:0 * x3:0) + (x3:0 + x3:0 * x3:0 + x3:0 * x3:0 * (1 + x3:0)) + x6:0 * x6:0 * x6:0 > 1 && x3:0 > 0 && x10:0 < 1000 && x3:0 < 1000 && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && times~x6:0~x6:0 = x6:0 * x6:0 && times~times~x6:0~x6:0~x6:0 = x6:0 * x6:0 * x6:0 && cons_1001 = 1001
The following rules are bounded:
f_3988(cons_1000, cons_1000000, cons_1000000000, x3:0, x4:0, x5:0, x6:0, times~x6:0~x6:0, times~times~x6:0~x6:0~x6:0, cons_1001, x10:0) -> f_3988(2, 4, 8, 1 + x3:0, (1 + x3:0) * (1 + x3:0), (1 + x3:0) * (1 + x3:0) * (1 + x3:0), x6:0, x6:0 * x6:0, x6:0 * x6:0 * x6:0, 3, x10:0) :|: 1 + x3:0 + (x3:0 + x3:0 * x3:0) = (1 + x3:0) * (1 + x3:0) && 1 + x3:0 + (x3:0 + x3:0 * x3:0) + (x3:0 + x3:0 * x3:0 + x3:0 * x3:0 * (1 + x3:0)) = (1 + x3:0) * (1 + x3:0) * (1 + x3:0) && 8 > (1 + x3:0) * (1 + x3:0) * (1 + x3:0) + x6:0 * x6:0 * x6:0 && x3:0 < 1001 && x6:0 < 1001 && 1 + x3:0 + (x3:0 + x3:0 * x3:0) + (x3:0 + x3:0 * x3:0 + x3:0 * x3:0 * (1 + x3:0)) + x6:0 * x6:0 * x6:0 > 1 && x3:0 > 0 && x10:0 < 1000 && x3:0 < 1000 && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && times~x6:0~x6:0 = x6:0 * x6:0 && times~times~x6:0~x6:0~x6:0 = x6:0 * x6:0 * x6:0 && cons_1001 = 1001
f_3988(x33:0:0:0, x34:0:0:0, x35:0:0:0, x36:0:0:0, times~x36:0:0:0~x36:0:0:0, times~times~x36:0:0:0~x36:0:0:0~x36:0:0:0, x39:0:0:0, times~x39:0:0:0~x39:0:0:0, times~times~x39:0:0:0~x39:0:0:0~x39:0:0:0, x42:0:0:0, x43:0:0:0) -> f_3988(x42:0:0:0, x42:0:0:0 * x42:0:0:0, x42:0:0:0 * x42:0:0:0 * x42:0:0:0, x36:0:0:0, x36:0:0:0 * x36:0:0:0, x36:0:0:0 * x36:0:0:0 * x36:0:0:0, x39:0:0:0, x39:0:0:0 * x39:0:0:0, x39:0:0:0 * x39:0:0:0 * x39:0:0:0, 1 + x42:0:0:0, x43:0:0:0) :|: x33:0:0:0 < 1000 && x42:0:0:0 > 1 && x42:0:0:0 < 1001 && x42:0:0:0 * x42:0:0:0 * x42:0:0:0 > x36:0:0:0 * x36:0:0:0 * x36:0:0:0 + x39:0:0:0 * x39:0:0:0 * x39:0:0:0 && x39:0:0:0 < 1001 && x43:0:0:0 < 1000 && x36:0:0:0 < 1001 && times~x36:0:0:0~x36:0:0:0 = x36:0:0:0 * x36:0:0:0 && times~times~x36:0:0:0~x36:0:0:0~x36:0:0:0 = x36:0:0:0 * x36:0:0:0 * x36:0:0:0 && times~x39:0:0:0~x39:0:0:0 = x39:0:0:0 * x39:0:0:0 && times~times~x39:0:0:0~x39:0:0:0~x39:0:0:0 = x39:0:0:0 * x39:0:0:0 * x39:0:0:0

----------------------------------------

(22)
Obligation:
Rules:
f_3988(x33:0:0:0, x34:0:0:0, x35:0:0:0, x36:0:0:0, times~x36:0:0:0~x36:0:0:0, times~times~x36:0:0:0~x36:0:0:0~x36:0:0:0, x39:0:0:0, times~x39:0:0:0~x39:0:0:0, times~times~x39:0:0:0~x39:0:0:0~x39:0:0:0, x42:0:0:0, x43:0:0:0) -> f_3988(x42:0:0:0, x42:0:0:0 * x42:0:0:0, x42:0:0:0 * x42:0:0:0 * x42:0:0:0, x36:0:0:0, x36:0:0:0 * x36:0:0:0, x36:0:0:0 * x36:0:0:0 * x36:0:0:0, x39:0:0:0, x39:0:0:0 * x39:0:0:0, x39:0:0:0 * x39:0:0:0 * x39:0:0:0, 1 + x42:0:0:0, x43:0:0:0) :|: x33:0:0:0 < 1000 && x42:0:0:0 > 1 && x42:0:0:0 < 1001 && x42:0:0:0 * x42:0:0:0 * x42:0:0:0 > x36:0:0:0 * x36:0:0:0 * x36:0:0:0 + x39:0:0:0 * x39:0:0:0 * x39:0:0:0 && x39:0:0:0 < 1001 && x43:0:0:0 < 1000 && x36:0:0:0 < 1001 && times~x36:0:0:0~x36:0:0:0 = x36:0:0:0 * x36:0:0:0 && times~times~x36:0:0:0~x36:0:0:0~x36:0:0:0 = x36:0:0:0 * x36:0:0:0 * x36:0:0:0 && times~x39:0:0:0~x39:0:0:0 = x39:0:0:0 * x39:0:0:0 && times~times~x39:0:0:0~x39:0:0:0~x39:0:0:0 = x39:0:0:0 * x39:0:0:0 * x39:0:0:0

----------------------------------------

(23) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(24)
Obligation:
Rules:
f_3988(x33:0:0:0:0, x34:0:0:0:0, x35:0:0:0:0, x36:0:0:0:0, times~x36:0:0:0:0~x36:0:0:0:0, times~times~x36:0:0:0:0~x36:0:0:0:0~x36:0:0:0:0, x39:0:0:0:0, times~x39:0:0:0:0~x39:0:0:0:0, times~times~x39:0:0:0:0~x39:0:0:0:0~x39:0:0:0:0, x42:0:0:0:0, x43:0:0:0:0) -> f_3988(x42:0:0:0:0, x42:0:0:0:0 * x42:0:0:0:0, x42:0:0:0:0 * x42:0:0:0:0 * x42:0:0:0:0, x36:0:0:0:0, x36:0:0:0:0 * x36:0:0:0:0, x36:0:0:0:0 * x36:0:0:0:0 * x36:0:0:0:0, x39:0:0:0:0, x39:0:0:0:0 * x39:0:0:0:0, x39:0:0:0:0 * x39:0:0:0:0 * x39:0:0:0:0, 1 + x42:0:0:0:0, x43:0:0:0:0) :|: x43:0:0:0:0 < 1000 && x36:0:0:0:0 < 1001 && x39:0:0:0:0 < 1001 && x42:0:0:0:0 * x42:0:0:0:0 * x42:0:0:0:0 > x36:0:0:0:0 * x36:0:0:0:0 * x36:0:0:0:0 + x39:0:0:0:0 * x39:0:0:0:0 * x39:0:0:0:0 && x42:0:0:0:0 < 1001 && x42:0:0:0:0 > 1 && x33:0:0:0:0 < 1000 && times~x36:0:0:0:0~x36:0:0:0:0 = x36:0:0:0:0 * x36:0:0:0:0 && times~times~x36:0:0:0:0~x36:0:0:0:0~x36:0:0:0:0 = x36:0:0:0:0 * x36:0:0:0:0 * x36:0:0:0:0 && times~x39:0:0:0:0~x39:0:0:0:0 = x39:0:0:0:0 * x39:0:0:0:0 && times~times~x39:0:0:0:0~x39:0:0:0:0~x39:0:0:0:0 = x39:0:0:0:0 * x39:0:0:0:0 * x39:0:0:0:0

----------------------------------------

(25) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_3988(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11) -> f_3988(x1, x4, x5, x6, x7, x8, x9, x10, x11)

----------------------------------------

(26)
Obligation:
Rules:
f_3988(x33:0:0:0:0, x36:0:0:0:0, times~x36:0:0:0:0~x36:0:0:0:0, times~times~x36:0:0:0:0~x36:0:0:0:0~x36:0:0:0:0, x39:0:0:0:0, times~x39:0:0:0:0~x39:0:0:0:0, times~times~x39:0:0:0:0~x39:0:0:0:0~x39:0:0:0:0, x42:0:0:0:0, x43:0:0:0:0) -> f_3988(x42:0:0:0:0, x36:0:0:0:0, x36:0:0:0:0 * x36:0:0:0:0, x36:0:0:0:0 * x36:0:0:0:0 * x36:0:0:0:0, x39:0:0:0:0, x39:0:0:0:0 * x39:0:0:0:0, x39:0:0:0:0 * x39:0:0:0:0 * x39:0:0:0:0, 1 + x42:0:0:0:0, x43:0:0:0:0) :|: x43:0:0:0:0 < 1000 && x36:0:0:0:0 < 1001 && x39:0:0:0:0 < 1001 && x42:0:0:0:0 * x42:0:0:0:0 * x42:0:0:0:0 > x36:0:0:0:0 * x36:0:0:0:0 * x36:0:0:0:0 + x39:0:0:0:0 * x39:0:0:0:0 * x39:0:0:0:0 && x42:0:0:0:0 < 1001 && x42:0:0:0:0 > 1 && x33:0:0:0:0 < 1000 && times~x36:0:0:0:0~x36:0:0:0:0 = x36:0:0:0:0 * x36:0:0:0:0 && times~times~x36:0:0:0:0~x36:0:0:0:0~x36:0:0:0:0 = x36:0:0:0:0 * x36:0:0:0:0 * x36:0:0:0:0 && times~x39:0:0:0:0~x39:0:0:0:0 = x39:0:0:0:0 * x39:0:0:0:0 && times~times~x39:0:0:0:0~x39:0:0:0:0~x39:0:0:0:0 = x39:0:0:0:0 * x39:0:0:0:0 * x39:0:0:0:0

----------------------------------------

(27) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_3988 ] = -1*f_3988_8

The following rules are decreasing:
f_3988(x33:0:0:0:0, x36:0:0:0:0, times~x36:0:0:0:0~x36:0:0:0:0, times~times~x36:0:0:0:0~x36:0:0:0:0~x36:0:0:0:0, x39:0:0:0:0, times~x39:0:0:0:0~x39:0:0:0:0, times~times~x39:0:0:0:0~x39:0:0:0:0~x39:0:0:0:0, x42:0:0:0:0, x43:0:0:0:0) -> f_3988(x42:0:0:0:0, x36:0:0:0:0, x36:0:0:0:0 * x36:0:0:0:0, x36:0:0:0:0 * x36:0:0:0:0 * x36:0:0:0:0, x39:0:0:0:0, x39:0:0:0:0 * x39:0:0:0:0, x39:0:0:0:0 * x39:0:0:0:0 * x39:0:0:0:0, 1 + x42:0:0:0:0, x43:0:0:0:0) :|: x43:0:0:0:0 < 1000 && x36:0:0:0:0 < 1001 && x39:0:0:0:0 < 1001 && x42:0:0:0:0 * x42:0:0:0:0 * x42:0:0:0:0 > x36:0:0:0:0 * x36:0:0:0:0 * x36:0:0:0:0 + x39:0:0:0:0 * x39:0:0:0:0 * x39:0:0:0:0 && x42:0:0:0:0 < 1001 && x42:0:0:0:0 > 1 && x33:0:0:0:0 < 1000 && times~x36:0:0:0:0~x36:0:0:0:0 = x36:0:0:0:0 * x36:0:0:0:0 && times~times~x36:0:0:0:0~x36:0:0:0:0~x36:0:0:0:0 = x36:0:0:0:0 * x36:0:0:0:0 * x36:0:0:0:0 && times~x39:0:0:0:0~x39:0:0:0:0 = x39:0:0:0:0 * x39:0:0:0:0 && times~times~x39:0:0:0:0~x39:0:0:0:0~x39:0:0:0:0 = x39:0:0:0:0 * x39:0:0:0:0 * x39:0:0:0:0

The following rules are bounded:
f_3988(x33:0:0:0:0, x36:0:0:0:0, times~x36:0:0:0:0~x36:0:0:0:0, times~times~x36:0:0:0:0~x36:0:0:0:0~x36:0:0:0:0, x39:0:0:0:0, times~x39:0:0:0:0~x39:0:0:0:0, times~times~x39:0:0:0:0~x39:0:0:0:0~x39:0:0:0:0, x42:0:0:0:0, x43:0:0:0:0) -> f_3988(x42:0:0:0:0, x36:0:0:0:0, x36:0:0:0:0 * x36:0:0:0:0, x36:0:0:0:0 * x36:0:0:0:0 * x36:0:0:0:0, x39:0:0:0:0, x39:0:0:0:0 * x39:0:0:0:0, x39:0:0:0:0 * x39:0:0:0:0 * x39:0:0:0:0, 1 + x42:0:0:0:0, x43:0:0:0:0) :|: x43:0:0:0:0 < 1000 && x36:0:0:0:0 < 1001 && x39:0:0:0:0 < 1001 && x42:0:0:0:0 * x42:0:0:0:0 * x42:0:0:0:0 > x36:0:0:0:0 * x36:0:0:0:0 * x36:0:0:0:0 + x39:0:0:0:0 * x39:0:0:0:0 * x39:0:0:0:0 && x42:0:0:0:0 < 1001 && x42:0:0:0:0 > 1 && x33:0:0:0:0 < 1000 && times~x36:0:0:0:0~x36:0:0:0:0 = x36:0:0:0:0 * x36:0:0:0:0 && times~times~x36:0:0:0:0~x36:0:0:0:0~x36:0:0:0:0 = x36:0:0:0:0 * x36:0:0:0:0 * x36:0:0:0:0 && times~x39:0:0:0:0~x39:0:0:0:0 = x39:0:0:0:0 * x39:0:0:0:0 && times~times~x39:0:0:0:0~x39:0:0:0:0~x39:0:0:0:0 = x39:0:0:0:0 * x39:0:0:0:0 * x39:0:0:0:0


----------------------------------------

(28)
YES

----------------------------------------

(29)
Obligation:
Rules:
f_4011(x106:0, x107:0, x108:0, x109:0, x110:0, x111:0, x112:0, x113:0) -> f_4011(2, 4, 8, 1 + x109:0, 1 + x109:0 + (x109:0 + x109:0 * x109:0), 1 + x109:0 + (x109:0 + x109:0 * x109:0) + (x109:0 + x109:0 * x109:0 + x109:0 * x109:0 * (1 + x109:0)), 2, x109:0) :|: x109:0 > 1 && x109:0 < 1001 && x106:0 > 1000 && 1 + x109:0 + (x109:0 + x109:0 * x109:0) + (x109:0 + x109:0 * x109:0 + x109:0 * x109:0 * (1 + x109:0)) > -7 && x112:0 * x112:0 * x112:0 < 1 + (1 + x109:0 + (x109:0 + x109:0 * x109:0) + (x109:0 + x109:0 * x109:0 + x109:0 * x109:0 * (1 + x109:0))) && x112:0 > 999 && x109:0 < 1000
f_3988(cons_1000, cons_1000000, cons_1000000000, cons_10001, cons_10000001, cons_10000000001, x6:0, x7:0, x8:0, cons_1001, x10:0) -> f_3988(2, 4, 8, 1, 1, 1, 1 + x6:0, 1 + x6:0 + (x6:0 + x6:0 * x6:0), 1 + x6:0 + (x6:0 + x6:0 * x6:0) + (x6:0 + x6:0 * x6:0 + x6:0 * x6:0 * (1 + x6:0)), 3, x6:0) :|: 1 + x6:0 + (x6:0 + x6:0 * x6:0) + (x6:0 + x6:0 * x6:0 + x6:0 * x6:0 * (1 + x6:0)) > 0 && 7 > 1 + x6:0 + (x6:0 + x6:0 * x6:0) + (x6:0 + x6:0 * x6:0 + x6:0 * x6:0 * (1 + x6:0)) && x6:0 < 1000 && x6:0 > 1 && x6:0 < 1001 && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && cons_10001 = 1000 && cons_10000001 = 1000000 && cons_10000000001 = 1000000000 && cons_1001 = 1001
f_3988(x33:0, x34:0, x35:0, x36:0, x37:0, x38:0, x39:0, x40:0, x41:0, x42:0, x43:0) -> f_4011(x36:0, x37:0, x38:0, x39:0, x40:0, x41:0, x42:0, x43:0) :|: x42:0 < 1001 && x33:0 < 1000
f_4011(x130:0, x131:0, x132:0, x133:0, x134:0, x135:0, x136:0, x137:0) -> f_4011(2, 4, 8, 1 + x133:0, 1 + x133:0 + (x133:0 + x133:0 * x133:0), 1 + x133:0 + (x133:0 + x133:0 * x133:0) + (x133:0 + x133:0 * x133:0 + x133:0 * x133:0 * (1 + x133:0)), 2, x133:0) :|: x133:0 > 1 && x133:0 < 1001 && x130:0 > 1000 && 1 + x133:0 + (x133:0 + x133:0 * x133:0) + (x133:0 + x133:0 * x133:0 + x133:0 * x133:0 * (1 + x133:0)) < -7 && x136:0 * x136:0 * x136:0 > 1 + (1 + x133:0 + (x133:0 + x133:0 * x133:0) + (x133:0 + x133:0 * x133:0 + x133:0 * x133:0 * (1 + x133:0))) && x136:0 > 999 && x133:0 < 1000
f_4011(x122:0, x123:0, x124:0, x125:0, x126:0, x127:0, x128:0, x129:0) -> f_4011(2, 4, 8, 1 + x125:0, 1 + x125:0 + (x125:0 + x125:0 * x125:0), 1 + x125:0 + (x125:0 + x125:0 * x125:0) + (x125:0 + x125:0 * x125:0 + x125:0 * x125:0 * (1 + x125:0)), 2, x125:0) :|: x125:0 > 1 && x125:0 < 1001 && x122:0 > 1000 && 1 + x125:0 + (x125:0 + x125:0 * x125:0) + (x125:0 + x125:0 * x125:0 + x125:0 * x125:0 * (1 + x125:0)) > -7 && x128:0 * x128:0 * x128:0 > 1 + (1 + x125:0 + (x125:0 + x125:0 * x125:0) + (x125:0 + x125:0 * x125:0 + x125:0 * x125:0 * (1 + x125:0))) && x128:0 > 999 && x125:0 < 1000
f_3988(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f_4011(1 + x3, 1 + x3 + (x3 + x3 * x3), 1 + x3 + (x3 + x3 * x3) + (x3 + x3 * x3 + x3 * x3 * (1 + x3)), x6, x6 * x6, x6 * x6 * x6, 2, x10) :|: x3 < 1000 && x3 < 1001 && 1 + x3 + (x3 + x3 * x3) + (x3 + x3 * x3 + x3 * x3 * (1 + x3)) + x6 * x6 * x6 < 1 && x3 > 0 && x = 1000 && x1 = 1000000 && x2 = 1000000000 && x7 = x6 * x6 && x8 = x6 * x6 * x6 && x9 = 1001
f_4011(x74:0, x75:0, x76:0, x77:0, x78:0, x79:0, x80:0, x81:0) -> f_3988(1 + x80:0, 1 + x80:0 + (x80:0 + x80:0 * x80:0), 1 + x80:0 + (x80:0 + x80:0 * x80:0) + (x80:0 + x80:0 * x80:0 + x80:0 * x80:0 * (1 + x80:0)), 1, 1, 1, 1 + x77:0, 1 + x77:0 + (x77:0 + x77:0 * x77:0), 1 + x77:0 + (x77:0 + x77:0 * x77:0) + (x77:0 + x77:0 * x77:0 + x77:0 * x77:0 * (1 + x77:0)), 1 + (1 + x80:0), x77:0) :|: x77:0 < 1001 && x80:0 < 1000 && x77:0 > 1 && 1 + x80:0 + (x80:0 + x80:0 * x80:0) + (x80:0 + x80:0 * x80:0 + x80:0 * x80:0 * (1 + x80:0)) < 1 + (1 + x77:0 + (x77:0 + x77:0 * x77:0) + (x77:0 + x77:0 * x77:0 + x77:0 * x77:0 * (1 + x77:0))) && x74:0 > 1000 && x80:0 * x80:0 * x80:0 > 1 + (1 + x77:0 + (x77:0 + x77:0 * x77:0) + (x77:0 + x77:0 * x77:0 + x77:0 * x77:0 * (1 + x77:0))) && x80:0 > 1 && x77:0 < 1000
f_3988(x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21) -> f_3988(2, 4, 8, 1, 1, 1, 1 + x17, 1 + x17 + (x17 + x17 * x17), 1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17)), 3, x17) :|: 1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17)) < 0 && 7 < 1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17)) && x17 < 1000 && x17 > 1 && x17 < 1001 && x11 = 1000 && x12 = 1000000 && x13 = 1000000000 && x14 = 1000 && x15 = 1000000 && x16 = 1000000000 && x20 = 1001
f_4011(x66:0, x67:0, x68:0, x69:0, x70:0, x71:0, x72:0, x73:0) -> f_3988(1 + x72:0, 1 + x72:0 + (x72:0 + x72:0 * x72:0), 1 + x72:0 + (x72:0 + x72:0 * x72:0) + (x72:0 + x72:0 * x72:0 + x72:0 * x72:0 * (1 + x72:0)), 1, 1, 1, 1 + x69:0, 1 + x69:0 + (x69:0 + x69:0 * x69:0), 1 + x69:0 + (x69:0 + x69:0 * x69:0) + (x69:0 + x69:0 * x69:0 + x69:0 * x69:0 * (1 + x69:0)), 1 + (1 + x72:0), x69:0) :|: x69:0 < 1001 && x72:0 < 1000 && x69:0 > 1 && 1 + x72:0 + (x72:0 + x72:0 * x72:0) + (x72:0 + x72:0 * x72:0 + x72:0 * x72:0 * (1 + x72:0)) > 1 + (1 + x69:0 + (x69:0 + x69:0 * x69:0) + (x69:0 + x69:0 * x69:0 + x69:0 * x69:0 * (1 + x69:0))) && x66:0 > 1000 && x72:0 * x72:0 * x72:0 < 1 + (1 + x69:0 + (x69:0 + x69:0 * x69:0) + (x69:0 + x69:0 * x69:0 + x69:0 * x69:0 * (1 + x69:0))) && x72:0 > 1 && x69:0 < 1000
f_3988(x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32) -> f_4011(1 + x25, 1 + x25 + (x25 + x25 * x25), 1 + x25 + (x25 + x25 * x25) + (x25 + x25 * x25 + x25 * x25 * (1 + x25)), x28, x28 * x28, x28 * x28 * x28, 2, x32) :|: x25 < 1000 && x25 < 1001 && 1 + x25 + (x25 + x25 * x25) + (x25 + x25 * x25 + x25 * x25 * (1 + x25)) + x28 * x28 * x28 > 1 && x25 > 0 && x22 = 1000 && x23 = 1000000 && x24 = 1000000000 && x29 = x28 * x28 && x30 = x28 * x28 * x28 && x31 = 1001
f_4011(x114:0, x115:0, x116:0, x117:0, x118:0, x119:0, x120:0, x121:0) -> f_4011(2, 4, 8, 1 + x117:0, 1 + x117:0 + (x117:0 + x117:0 * x117:0), 1 + x117:0 + (x117:0 + x117:0 * x117:0) + (x117:0 + x117:0 * x117:0 + x117:0 * x117:0 * (1 + x117:0)), 2, x117:0) :|: x117:0 > 1 && x117:0 < 1001 && x114:0 > 1000 && 1 + x117:0 + (x117:0 + x117:0 * x117:0) + (x117:0 + x117:0 * x117:0 + x117:0 * x117:0 * (1 + x117:0)) < -7 && x120:0 * x120:0 * x120:0 < 1 + (1 + x117:0 + (x117:0 + x117:0 * x117:0) + (x117:0 + x117:0 * x117:0 + x117:0 * x117:0 * (1 + x117:0))) && x120:0 > 999 && x117:0 < 1000
f_3988(x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43) -> f_3988(2, 4, 8, 1, 1, 1, 1 + x39, 1 + x39 + (x39 + x39 * x39), 1 + x39 + (x39 + x39 * x39) + (x39 + x39 * x39 + x39 * x39 * (1 + x39)), 3, x39) :|: 1 + x39 + (x39 + x39 * x39) + (x39 + x39 * x39 + x39 * x39 * (1 + x39)) < 0 && 7 > 1 + x39 + (x39 + x39 * x39) + (x39 + x39 * x39 + x39 * x39 * (1 + x39)) && x39 < 1000 && x39 > 1 && x39 < 1001 && x33 = 1000 && x34 = 1000000 && x35 = 1000000000 && x36 = 1000 && x37 = 1000000 && x38 = 1000000000 && x42 = 1001
f_3988(x44, x45, x46, x47, x48, x49, x50, x51, x52, x53, x54) -> f_3988(2, 4, 8, 1, 1, 1, 1 + x50, 1 + x50 + (x50 + x50 * x50), 1 + x50 + (x50 + x50 * x50) + (x50 + x50 * x50 + x50 * x50 * (1 + x50)), 3, x50) :|: x50 < 1000 && x50 < 1001 && 7 < 1 + x50 + (x50 + x50 * x50) + (x50 + x50 * x50 + x50 * x50 * (1 + x50)) && x50 > 1 && x44 = 1000 && x45 = 1000000 && x46 = 1000000000 && x47 = 1000 && x48 = 1000000 && x49 = 1000000000 && x53 = 1001
f_4011(v27010:0:0, v27011:0:0, v27012:0:0, v27013:0:0, v27014:0:0, v27015:0:0, v27018:0:0, v27022:0:0) -> f_3988(1 + v27018:0:0, 1 + v27018:0:0 + (v27018:0:0 + v27018:0:0 * v27018:0:0), 1 + v27018:0:0 + (v27018:0:0 + v27018:0:0 * v27018:0:0) + (v27018:0:0 + v27018:0:0 * v27018:0:0 + v27018:0:0 * v27018:0:0 * (1 + v27018:0:0)), 1, 1, 1, 1 + v27013:0:0, 1 + v27013:0:0 + (v27013:0:0 + v27013:0:0 * v27013:0:0), 1 + v27013:0:0 + (v27013:0:0 + v27013:0:0 * v27013:0:0) + (v27013:0:0 + v27013:0:0 * v27013:0:0 + v27013:0:0 * v27013:0:0 * (1 + v27013:0:0)), 1 + (1 + v27018:0:0), v27013:0:0) :|: v27013:0:0 < 1001 && v27018:0:0 < 1000 && v27013:0:0 > 1 && 1 + v27018:0:0 + (v27018:0:0 + v27018:0:0 * v27018:0:0) + (v27018:0:0 + v27018:0:0 * v27018:0:0 + v27018:0:0 * v27018:0:0 * (1 + v27018:0:0)) < 1 + (1 + v27013:0:0 + (v27013:0:0 + v27013:0:0 * v27013:0:0) + (v27013:0:0 + v27013:0:0 * v27013:0:0 + v27013:0:0 * v27013:0:0 * (1 + v27013:0:0))) && v27010:0:0 > 1000 && v27018:0:0 * v27018:0:0 * v27018:0:0 < 1 + (1 + v27013:0:0 + (v27013:0:0 + v27013:0:0 * v27013:0:0) + (v27013:0:0 + v27013:0:0 * v27013:0:0 + v27013:0:0 * v27013:0:0 * (1 + v27013:0:0))) && v27018:0:0 > 1 && v27013:0:0 < 1000
f_4011(x82:0, x83:0, x84:0, x85:0, x86:0, x87:0, x88:0, x89:0) -> f_3988(1 + x88:0, 1 + x88:0 + (x88:0 + x88:0 * x88:0), 1 + x88:0 + (x88:0 + x88:0 * x88:0) + (x88:0 + x88:0 * x88:0 + x88:0 * x88:0 * (1 + x88:0)), 1, 1, 1, 1 + x85:0, 1 + x85:0 + (x85:0 + x85:0 * x85:0), 1 + x85:0 + (x85:0 + x85:0 * x85:0) + (x85:0 + x85:0 * x85:0 + x85:0 * x85:0 * (1 + x85:0)), 1 + (1 + x88:0), x85:0) :|: x85:0 < 1001 && x88:0 < 1000 && x85:0 > 1 && 1 + x88:0 + (x88:0 + x88:0 * x88:0) + (x88:0 + x88:0 * x88:0 + x88:0 * x88:0 * (1 + x88:0)) > 1 + (1 + x85:0 + (x85:0 + x85:0 * x85:0) + (x85:0 + x85:0 * x85:0 + x85:0 * x85:0 * (1 + x85:0))) && x82:0 > 1000 && x88:0 * x88:0 * x88:0 > 1 + (1 + x85:0 + (x85:0 + x85:0 * x85:0) + (x85:0 + x85:0 * x85:0 + x85:0 * x85:0 * (1 + x85:0))) && x88:0 > 1 && x85:0 < 1000

----------------------------------------

(30) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained one non-trivial SCC.

----------------------------------------

(31)
Obligation:
Rules:
f_3988(x33:0, x34:0, x35:0, x36:0, x37:0, x38:0, x39:0, x40:0, x41:0, x42:0, x43:0) -> f_4011(x36:0, x37:0, x38:0, x39:0, x40:0, x41:0, x42:0, x43:0) :|: x42:0 < 1001 && x33:0 < 1000
f_4011(x74:0, x75:0, x76:0, x77:0, x78:0, x79:0, x80:0, x81:0) -> f_3988(1 + x80:0, 1 + x80:0 + (x80:0 + x80:0 * x80:0), 1 + x80:0 + (x80:0 + x80:0 * x80:0) + (x80:0 + x80:0 * x80:0 + x80:0 * x80:0 * (1 + x80:0)), 1, 1, 1, 1 + x77:0, 1 + x77:0 + (x77:0 + x77:0 * x77:0), 1 + x77:0 + (x77:0 + x77:0 * x77:0) + (x77:0 + x77:0 * x77:0 + x77:0 * x77:0 * (1 + x77:0)), 1 + (1 + x80:0), x77:0) :|: x77:0 < 1001 && x80:0 < 1000 && x77:0 > 1 && 1 + x80:0 + (x80:0 + x80:0 * x80:0) + (x80:0 + x80:0 * x80:0 + x80:0 * x80:0 * (1 + x80:0)) < 1 + (1 + x77:0 + (x77:0 + x77:0 * x77:0) + (x77:0 + x77:0 * x77:0 + x77:0 * x77:0 * (1 + x77:0))) && x74:0 > 1000 && x80:0 * x80:0 * x80:0 > 1 + (1 + x77:0 + (x77:0 + x77:0 * x77:0) + (x77:0 + x77:0 * x77:0 + x77:0 * x77:0 * (1 + x77:0))) && x80:0 > 1 && x77:0 < 1000
f_4011(x66:0, x67:0, x68:0, x69:0, x70:0, x71:0, x72:0, x73:0) -> f_3988(1 + x72:0, 1 + x72:0 + (x72:0 + x72:0 * x72:0), 1 + x72:0 + (x72:0 + x72:0 * x72:0) + (x72:0 + x72:0 * x72:0 + x72:0 * x72:0 * (1 + x72:0)), 1, 1, 1, 1 + x69:0, 1 + x69:0 + (x69:0 + x69:0 * x69:0), 1 + x69:0 + (x69:0 + x69:0 * x69:0) + (x69:0 + x69:0 * x69:0 + x69:0 * x69:0 * (1 + x69:0)), 1 + (1 + x72:0), x69:0) :|: x69:0 < 1001 && x72:0 < 1000 && x69:0 > 1 && 1 + x72:0 + (x72:0 + x72:0 * x72:0) + (x72:0 + x72:0 * x72:0 + x72:0 * x72:0 * (1 + x72:0)) > 1 + (1 + x69:0 + (x69:0 + x69:0 * x69:0) + (x69:0 + x69:0 * x69:0 + x69:0 * x69:0 * (1 + x69:0))) && x66:0 > 1000 && x72:0 * x72:0 * x72:0 < 1 + (1 + x69:0 + (x69:0 + x69:0 * x69:0) + (x69:0 + x69:0 * x69:0 + x69:0 * x69:0 * (1 + x69:0))) && x72:0 > 1 && x69:0 < 1000
f_4011(v27010:0:0, v27011:0:0, v27012:0:0, v27013:0:0, v27014:0:0, v27015:0:0, v27018:0:0, v27022:0:0) -> f_3988(1 + v27018:0:0, 1 + v27018:0:0 + (v27018:0:0 + v27018:0:0 * v27018:0:0), 1 + v27018:0:0 + (v27018:0:0 + v27018:0:0 * v27018:0:0) + (v27018:0:0 + v27018:0:0 * v27018:0:0 + v27018:0:0 * v27018:0:0 * (1 + v27018:0:0)), 1, 1, 1, 1 + v27013:0:0, 1 + v27013:0:0 + (v27013:0:0 + v27013:0:0 * v27013:0:0), 1 + v27013:0:0 + (v27013:0:0 + v27013:0:0 * v27013:0:0) + (v27013:0:0 + v27013:0:0 * v27013:0:0 + v27013:0:0 * v27013:0:0 * (1 + v27013:0:0)), 1 + (1 + v27018:0:0), v27013:0:0) :|: v27013:0:0 < 1001 && v27018:0:0 < 1000 && v27013:0:0 > 1 && 1 + v27018:0:0 + (v27018:0:0 + v27018:0:0 * v27018:0:0) + (v27018:0:0 + v27018:0:0 * v27018:0:0 + v27018:0:0 * v27018:0:0 * (1 + v27018:0:0)) < 1 + (1 + v27013:0:0 + (v27013:0:0 + v27013:0:0 * v27013:0:0) + (v27013:0:0 + v27013:0:0 * v27013:0:0 + v27013:0:0 * v27013:0:0 * (1 + v27013:0:0))) && v27010:0:0 > 1000 && v27018:0:0 * v27018:0:0 * v27018:0:0 < 1 + (1 + v27013:0:0 + (v27013:0:0 + v27013:0:0 * v27013:0:0) + (v27013:0:0 + v27013:0:0 * v27013:0:0 + v27013:0:0 * v27013:0:0 * (1 + v27013:0:0))) && v27018:0:0 > 1 && v27013:0:0 < 1000
f_4011(x82:0, x83:0, x84:0, x85:0, x86:0, x87:0, x88:0, x89:0) -> f_3988(1 + x88:0, 1 + x88:0 + (x88:0 + x88:0 * x88:0), 1 + x88:0 + (x88:0 + x88:0 * x88:0) + (x88:0 + x88:0 * x88:0 + x88:0 * x88:0 * (1 + x88:0)), 1, 1, 1, 1 + x85:0, 1 + x85:0 + (x85:0 + x85:0 * x85:0), 1 + x85:0 + (x85:0 + x85:0 * x85:0) + (x85:0 + x85:0 * x85:0 + x85:0 * x85:0 * (1 + x85:0)), 1 + (1 + x88:0), x85:0) :|: x85:0 < 1001 && x88:0 < 1000 && x85:0 > 1 && 1 + x88:0 + (x88:0 + x88:0 * x88:0) + (x88:0 + x88:0 * x88:0 + x88:0 * x88:0 * (1 + x88:0)) > 1 + (1 + x85:0 + (x85:0 + x85:0 * x85:0) + (x85:0 + x85:0 * x85:0 + x85:0 * x85:0 * (1 + x85:0))) && x82:0 > 1000 && x88:0 * x88:0 * x88:0 > 1 + (1 + x85:0 + (x85:0 + x85:0 * x85:0) + (x85:0 + x85:0 * x85:0 + x85:0 * x85:0 * (1 + x85:0))) && x88:0 > 1 && x85:0 < 1000

----------------------------------------

(32) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(33)
Obligation:
Rules:
f_3988(x33:0:0, x34:0:0, x35:0:0, x36:0:0, x37:0:0, x38:0:0, x39:0:0, x40:0:0, x41:0:0, x42:0:0, x43:0:0) -> f_3988(1 + x42:0:0, 1 + x42:0:0 + (x42:0:0 + x42:0:0 * x42:0:0), 1 + x42:0:0 + (x42:0:0 + x42:0:0 * x42:0:0) + (x42:0:0 + x42:0:0 * x42:0:0 + x42:0:0 * x42:0:0 * (1 + x42:0:0)), 1, 1, 1, 1 + x39:0:0, 1 + x39:0:0 + (x39:0:0 + x39:0:0 * x39:0:0), 1 + x39:0:0 + (x39:0:0 + x39:0:0 * x39:0:0) + (x39:0:0 + x39:0:0 * x39:0:0 + x39:0:0 * x39:0:0 * (1 + x39:0:0)), 1 + (1 + x42:0:0), x39:0:0) :|: x33:0:0 < 1000 && x42:0:0 < 1001 && x39:0:0 < 1000 && x42:0:0 > 1 && x42:0:0 * x42:0:0 * x42:0:0 > 1 + (1 + x39:0:0 + (x39:0:0 + x39:0:0 * x39:0:0) + (x39:0:0 + x39:0:0 * x39:0:0 + x39:0:0 * x39:0:0 * (1 + x39:0:0))) && x36:0:0 > 1000 && 1 + x42:0:0 + (x42:0:0 + x42:0:0 * x42:0:0) + (x42:0:0 + x42:0:0 * x42:0:0 + x42:0:0 * x42:0:0 * (1 + x42:0:0)) > 1 + (1 + x39:0:0 + (x39:0:0 + x39:0:0 * x39:0:0) + (x39:0:0 + x39:0:0 * x39:0:0 + x39:0:0 * x39:0:0 * (1 + x39:0:0))) && x39:0:0 > 1 && x42:0:0 < 1000 && x39:0:0 < 1001
f_3988(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f_3988(1 + x9, 1 + x9 + (x9 + x9 * x9), 1 + x9 + (x9 + x9 * x9) + (x9 + x9 * x9 + x9 * x9 * (1 + x9)), 1, 1, 1, 1 + x6, 1 + x6 + (x6 + x6 * x6), 1 + x6 + (x6 + x6 * x6) + (x6 + x6 * x6 + x6 * x6 * (1 + x6)), 1 + (1 + x9), x6) :|: x < 1000 && x9 < 1001 && x6 < 1000 && x9 > 1 && x9 * x9 * x9 > 1 + (1 + x6 + (x6 + x6 * x6) + (x6 + x6 * x6 + x6 * x6 * (1 + x6))) && x3 > 1000 && 1 + x9 + (x9 + x9 * x9) + (x9 + x9 * x9 + x9 * x9 * (1 + x9)) < 1 + (1 + x6 + (x6 + x6 * x6) + (x6 + x6 * x6 + x6 * x6 * (1 + x6))) && x6 > 1 && x9 < 1000 && x6 < 1001
f_3988(x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21) -> f_3988(1 + x20, 1 + x20 + (x20 + x20 * x20), 1 + x20 + (x20 + x20 * x20) + (x20 + x20 * x20 + x20 * x20 * (1 + x20)), 1, 1, 1, 1 + x17, 1 + x17 + (x17 + x17 * x17), 1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17)), 1 + (1 + x20), x17) :|: x11 < 1000 && x20 < 1001 && x17 < 1000 && x20 > 1 && x20 * x20 * x20 < 1 + (1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17))) && x14 > 1000 && 1 + x20 + (x20 + x20 * x20) + (x20 + x20 * x20 + x20 * x20 * (1 + x20)) > 1 + (1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17))) && x17 > 1 && x20 < 1000 && x17 < 1001
f_3988(x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32) -> f_3988(1 + x31, 1 + x31 + (x31 + x31 * x31), 1 + x31 + (x31 + x31 * x31) + (x31 + x31 * x31 + x31 * x31 * (1 + x31)), 1, 1, 1, 1 + x28, 1 + x28 + (x28 + x28 * x28), 1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28)), 1 + (1 + x31), x28) :|: x22 < 1000 && x31 < 1001 && x28 < 1000 && x31 > 1 && x31 * x31 * x31 < 1 + (1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28))) && x25 > 1000 && 1 + x31 + (x31 + x31 * x31) + (x31 + x31 * x31 + x31 * x31 * (1 + x31)) < 1 + (1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28))) && x28 > 1 && x31 < 1000 && x28 < 1001

----------------------------------------

(34) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_3988(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11) -> f_3988(x1, x4, x7, x10)

----------------------------------------

(35)
Obligation:
Rules:
f_3988(x33:0:0, x36:0:0, x39:0:0, x42:0:0) -> f_3988(1 + x42:0:0, 1, 1 + x39:0:0, 1 + (1 + x42:0:0)) :|: x33:0:0 < 1000 && x42:0:0 < 1001 && x39:0:0 < 1000 && x42:0:0 > 1 && x42:0:0 * x42:0:0 * x42:0:0 > 1 + (1 + x39:0:0 + (x39:0:0 + x39:0:0 * x39:0:0) + (x39:0:0 + x39:0:0 * x39:0:0 + x39:0:0 * x39:0:0 * (1 + x39:0:0))) && x36:0:0 > 1000 && 1 + x42:0:0 + (x42:0:0 + x42:0:0 * x42:0:0) + (x42:0:0 + x42:0:0 * x42:0:0 + x42:0:0 * x42:0:0 * (1 + x42:0:0)) > 1 + (1 + x39:0:0 + (x39:0:0 + x39:0:0 * x39:0:0) + (x39:0:0 + x39:0:0 * x39:0:0 + x39:0:0 * x39:0:0 * (1 + x39:0:0))) && x39:0:0 > 1 && x42:0:0 < 1000 && x39:0:0 < 1001
f_3988(x, x3, x6, x9) -> f_3988(1 + x9, 1, 1 + x6, 1 + (1 + x9)) :|: x < 1000 && x9 < 1001 && x6 < 1000 && x9 > 1 && x9 * x9 * x9 > 1 + (1 + x6 + (x6 + x6 * x6) + (x6 + x6 * x6 + x6 * x6 * (1 + x6))) && x3 > 1000 && 1 + x9 + (x9 + x9 * x9) + (x9 + x9 * x9 + x9 * x9 * (1 + x9)) < 1 + (1 + x6 + (x6 + x6 * x6) + (x6 + x6 * x6 + x6 * x6 * (1 + x6))) && x6 > 1 && x9 < 1000 && x6 < 1001
f_3988(x11, x14, x17, x20) -> f_3988(1 + x20, 1, 1 + x17, 1 + (1 + x20)) :|: x11 < 1000 && x20 < 1001 && x17 < 1000 && x20 > 1 && x20 * x20 * x20 < 1 + (1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17))) && x14 > 1000 && 1 + x20 + (x20 + x20 * x20) + (x20 + x20 * x20 + x20 * x20 * (1 + x20)) > 1 + (1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17))) && x17 > 1 && x20 < 1000 && x17 < 1001
f_3988(x22, x25, x28, x31) -> f_3988(1 + x31, 1, 1 + x28, 1 + (1 + x31)) :|: x22 < 1000 && x31 < 1001 && x28 < 1000 && x31 > 1 && x31 * x31 * x31 < 1 + (1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28))) && x25 > 1000 && 1 + x31 + (x31 + x31 * x31) + (x31 + x31 * x31 + x31 * x31 * (1 + x31)) < 1 + (1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28))) && x28 > 1 && x31 < 1000 && x28 < 1001

----------------------------------------

(36) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_3988 ] = -1*f_3988_3

The following rules are decreasing:
f_3988(x33:0:0, x36:0:0, x39:0:0, x42:0:0) -> f_3988(1 + x42:0:0, 1, 1 + x39:0:0, 1 + (1 + x42:0:0)) :|: x33:0:0 < 1000 && x42:0:0 < 1001 && x39:0:0 < 1000 && x42:0:0 > 1 && x42:0:0 * x42:0:0 * x42:0:0 > 1 + (1 + x39:0:0 + (x39:0:0 + x39:0:0 * x39:0:0) + (x39:0:0 + x39:0:0 * x39:0:0 + x39:0:0 * x39:0:0 * (1 + x39:0:0))) && x36:0:0 > 1000 && 1 + x42:0:0 + (x42:0:0 + x42:0:0 * x42:0:0) + (x42:0:0 + x42:0:0 * x42:0:0 + x42:0:0 * x42:0:0 * (1 + x42:0:0)) > 1 + (1 + x39:0:0 + (x39:0:0 + x39:0:0 * x39:0:0) + (x39:0:0 + x39:0:0 * x39:0:0 + x39:0:0 * x39:0:0 * (1 + x39:0:0))) && x39:0:0 > 1 && x42:0:0 < 1000 && x39:0:0 < 1001
f_3988(x, x3, x6, x9) -> f_3988(1 + x9, 1, 1 + x6, 1 + (1 + x9)) :|: x < 1000 && x9 < 1001 && x6 < 1000 && x9 > 1 && x9 * x9 * x9 > 1 + (1 + x6 + (x6 + x6 * x6) + (x6 + x6 * x6 + x6 * x6 * (1 + x6))) && x3 > 1000 && 1 + x9 + (x9 + x9 * x9) + (x9 + x9 * x9 + x9 * x9 * (1 + x9)) < 1 + (1 + x6 + (x6 + x6 * x6) + (x6 + x6 * x6 + x6 * x6 * (1 + x6))) && x6 > 1 && x9 < 1000 && x6 < 1001
f_3988(x11, x14, x17, x20) -> f_3988(1 + x20, 1, 1 + x17, 1 + (1 + x20)) :|: x11 < 1000 && x20 < 1001 && x17 < 1000 && x20 > 1 && x20 * x20 * x20 < 1 + (1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17))) && x14 > 1000 && 1 + x20 + (x20 + x20 * x20) + (x20 + x20 * x20 + x20 * x20 * (1 + x20)) > 1 + (1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17))) && x17 > 1 && x20 < 1000 && x17 < 1001
f_3988(x22, x25, x28, x31) -> f_3988(1 + x31, 1, 1 + x28, 1 + (1 + x31)) :|: x22 < 1000 && x31 < 1001 && x28 < 1000 && x31 > 1 && x31 * x31 * x31 < 1 + (1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28))) && x25 > 1000 && 1 + x31 + (x31 + x31 * x31) + (x31 + x31 * x31 + x31 * x31 * (1 + x31)) < 1 + (1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28))) && x28 > 1 && x31 < 1000 && x28 < 1001

The following rules are bounded:
f_3988(x33:0:0, x36:0:0, x39:0:0, x42:0:0) -> f_3988(1 + x42:0:0, 1, 1 + x39:0:0, 1 + (1 + x42:0:0)) :|: x33:0:0 < 1000 && x42:0:0 < 1001 && x39:0:0 < 1000 && x42:0:0 > 1 && x42:0:0 * x42:0:0 * x42:0:0 > 1 + (1 + x39:0:0 + (x39:0:0 + x39:0:0 * x39:0:0) + (x39:0:0 + x39:0:0 * x39:0:0 + x39:0:0 * x39:0:0 * (1 + x39:0:0))) && x36:0:0 > 1000 && 1 + x42:0:0 + (x42:0:0 + x42:0:0 * x42:0:0) + (x42:0:0 + x42:0:0 * x42:0:0 + x42:0:0 * x42:0:0 * (1 + x42:0:0)) > 1 + (1 + x39:0:0 + (x39:0:0 + x39:0:0 * x39:0:0) + (x39:0:0 + x39:0:0 * x39:0:0 + x39:0:0 * x39:0:0 * (1 + x39:0:0))) && x39:0:0 > 1 && x42:0:0 < 1000 && x39:0:0 < 1001
f_3988(x, x3, x6, x9) -> f_3988(1 + x9, 1, 1 + x6, 1 + (1 + x9)) :|: x < 1000 && x9 < 1001 && x6 < 1000 && x9 > 1 && x9 * x9 * x9 > 1 + (1 + x6 + (x6 + x6 * x6) + (x6 + x6 * x6 + x6 * x6 * (1 + x6))) && x3 > 1000 && 1 + x9 + (x9 + x9 * x9) + (x9 + x9 * x9 + x9 * x9 * (1 + x9)) < 1 + (1 + x6 + (x6 + x6 * x6) + (x6 + x6 * x6 + x6 * x6 * (1 + x6))) && x6 > 1 && x9 < 1000 && x6 < 1001
f_3988(x11, x14, x17, x20) -> f_3988(1 + x20, 1, 1 + x17, 1 + (1 + x20)) :|: x11 < 1000 && x20 < 1001 && x17 < 1000 && x20 > 1 && x20 * x20 * x20 < 1 + (1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17))) && x14 > 1000 && 1 + x20 + (x20 + x20 * x20) + (x20 + x20 * x20 + x20 * x20 * (1 + x20)) > 1 + (1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17))) && x17 > 1 && x20 < 1000 && x17 < 1001
f_3988(x22, x25, x28, x31) -> f_3988(1 + x31, 1, 1 + x28, 1 + (1 + x31)) :|: x22 < 1000 && x31 < 1001 && x28 < 1000 && x31 > 1 && x31 * x31 * x31 < 1 + (1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28))) && x25 > 1000 && 1 + x31 + (x31 + x31 * x31) + (x31 + x31 * x31 + x31 * x31 * (1 + x31)) < 1 + (1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28))) && x28 > 1 && x31 < 1000 && x28 < 1001


----------------------------------------

(37)
YES

----------------------------------------

(38)
Obligation:
SCC
----------------------------------------

(39) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 118 rulesP rules:
f_2539(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, v10886, v10887, v10888, v10889, v10890, v10891, 1, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 1001, 2, 4, 8) -> f_2542(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, v10886, v10887, v10888, v10889, v10890, v10891, 1, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 1001, 2, 4, 8) :|: 0 = 0
f_2542(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, v10886, v10887, v10888, v10889, v10890, v10891, 1, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 1001, 2, 4, 8) -> f_2545(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, v10886, v10887, v10888, v10889, v10890, v10891, 1, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 1001, 2, 4, 8) :|: 0 = 0
f_2545(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, v10886, v10887, v10888, v10889, v10890, v10891, 1, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 1001, 2, 4, 8) -> f_2548(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, v10886, v10887, v10888, v10889, v10890, v10891, 1, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 1001, 2, 4, 8) :|: 0 = 0
f_2548(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, v10886, v10887, v10888, v10889, v10890, v10891, 1, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 1001, 2, 4, 8) -> f_2552(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, v10886, v10887, v10888, v10889, v10890, v10891, 1, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: v10897 <= 1000 && v10889 <= 999
f_2552(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, v10886, v10887, v10888, v10889, v10890, v10891, 1, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2556(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, v10886, v10887, v10888, v10889, v10890, v10891, 1, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_2556(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, v10886, v10887, v10888, v10889, v10890, v10891, 1, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2560(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, v10886, v10887, v10888, v10889, v10890, v10891, 1, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: TRUE
f_2560(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, v10886, v10887, v10888, v10889, v10890, v10891, 1, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2564(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, v10886, v10887, v10888, v10889, v10890, v10891, 1, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_2564(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, v10886, v10887, v10888, v10889, v10890, v10891, 1, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2568(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, v10886, v10887, v10888, v10889, v10890, v10891, 1, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_2568(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, v10886, v10887, v10888, v10889, v10890, v10891, 1, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2572(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, v10886, v10887, v10888, v10889, v10890, v10891, 1, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_2572(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, v10886, v10887, v10888, v10889, v10890, v10891, 1, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2576(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, v10886, v10887, v10888, v10889, v10890, v10891, 1, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_2576(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, v10886, v10887, v10888, v10889, v10890, v10891, 1, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2580(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, v10886, v10887, v10888, v10889, v10890, v10891, 1, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_2580(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, v10886, v10887, v10888, v10889, v10890, v10891, 1, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2584(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, v10886, v10887, v10888, v10889, v10890, v10891, 1, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: TRUE
f_2584(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, v10886, v10887, v10888, v10889, v10890, v10891, 1, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2588(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, v10886, v10887, v10888, v10889, v10890, v10891, 1, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: TRUE
f_2588(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, v10886, v10887, v10888, v10889, v10890, v10891, 1, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2592(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, v10886, v10887, v10888, v10889, v10890, v10891, 1, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_2592(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, v10886, v10887, v10888, v10889, v10890, v10891, 1, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2596(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10886, v10887, v10888, v10889, v10890, v10891, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_2596(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10886, v10887, v10888, v10889, v10890, v10891, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2600(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10886, v10887, v10888, v10889, v10890, v10891, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_2600(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10886, v10887, v10888, v10889, v10890, v10891, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2604(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10887, v10886, v10888, v10889, v10890, v10891, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_2604(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10887, v10886, v10888, v10889, v10890, v10891, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2608(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10886, v10888, v10889, v10890, v10891, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_2608(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10886, v10888, v10889, v10890, v10891, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2612(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10886, v10888, v10889, v10890, v10891, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_2612(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10886, v10888, v10889, v10890, v10891, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2616(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10888, v10889, v10890, v10891, v10893, 0, v10886, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_2616(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10888, v10889, v10890, v10891, v10893, 0, v10886, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2620(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10889, v10890, v10891, v10893, 0, v10886, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_2620(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10889, v10890, v10891, v10893, 0, v10886, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2624(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10889, v10890, v10891, v10893, 0, v10886, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_2624(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10889, v10890, v10891, v10893, 0, v10886, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2628(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v10889, v10890, v10891, v10893, 0, v10886, v10895, 1000, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_2628(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v10889, v10890, v10891, v10893, 0, v10886, v10895, 1000, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2632(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v10889, v10890, v10891, v10893, 0, v10886, v10895, 1000, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_2632(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v10889, v10890, v10891, v10893, 0, v10886, v10895, 1000, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2636(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v10890, v10889, v10891, v10893, 0, v10886, v10895, 1000, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_2636(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v10890, v10889, v10891, v10893, 0, v10886, v10895, 1000, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2640(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v10889, v10891, v10893, 0, v10886, v10895, 1000, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: v12181 = v10897 * v10897
f_2640(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v10889, v10891, v10893, 0, v10886, v10895, 1000, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2644(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v10889, v10891, v10893, 0, v10886, v10895, 1000, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_2644(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v10889, v10891, v10893, 0, v10886, v10895, 1000, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2648(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v10891, v10893, 0, v10886, v10895, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_2648(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v10891, v10893, 0, v10886, v10895, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2652(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v10893, 0, v10886, v10895, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: v12182 = v12181 * v10897
f_2652(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v10893, 0, v10886, v10895, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2656(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v10893, 0, v10886, v10895, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_2656(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v10893, 0, v10886, v10895, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2660(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v10893, 0, v10886, v10895, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_2660(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v10893, 0, v10886, v10895, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2664(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v10893, 0, v10886, v10895, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_2664(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v10893, 0, v10886, v10895, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2668(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v10893, 0, v10886, v10895, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_2668(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v10893, 0, v10886, v10895, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2672(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v10893, 0, v10886, v10895, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_2672(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v10893, 0, v10886, v10895, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2676(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v10893, 0, v10886, v10895, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_2676(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v10893, 0, v10886, v10895, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2680(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v10893, 0, v10886, v10895, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_2680(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v10893, 0, v10886, v10895, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2684(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v10893, 0, v10886, v10895, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_2684(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v10893, 0, v10886, v10895, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2689(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v12183, 0, v10886, v10895, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: v12183 = 1 + v12182
f_2689(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v12183, 0, v10886, v10895, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2695(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v12183, 0, v10886, v10895, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: 1 != v12183
f_2695(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v12183, 0, v10886, v10895, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2701(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v12183, 0, v10886, v10895, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_2701(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v12183, 0, v10886, v10895, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2707(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v12183, 0, v10886, v10895, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: TRUE
f_2707(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v12183, 0, v10886, v10895, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2713(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v12183, 0, v10886, v10895, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_2713(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v12183, 0, v10886, v10895, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2719(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v12183, 0, v10895, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) :|: 0 = 0
f_2719(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v12183, 0, v10895, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 2, 4, 8) -> f_2724(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v12183, 0, 2, v10895, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 4, 8) :|: 0 = 0
f_2724(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v12183, 0, 2, v10895, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 4, 8) -> f_2728(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v12183, 0, 2, v10895, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 4, 8) :|: TRUE
f_2728(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v12183, 0, 2, v10895, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 4, 8) -> f_2732(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v12183, 0, 2, v10895, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 4, 8) :|: 0 = 0
f_2732(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v12183, 0, 2, v10895, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 1001, 4, 8) -> f_2736(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v12183, 0, 2, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 4, 8) :|: 0 = 0
f_2736(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v12183, 0, 2, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 4, 8) -> f_2740(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v12183, 0, 2, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 4, 8) :|: 0 = 0
f_2740(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v12183, 0, 2, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 4, 8) -> f_2745(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v12183, 0, 2, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 4, 8) :|: 0 = 0
f_2745(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v12183, 0, 2, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 4, 8) -> f_2750(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v12183, 0, 2, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 4, 8) :|: 0 = 0
f_2750(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v12183, 0, 2, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 4, 8) -> f_2755(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v12183, 0, 2, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 4, 8) :|: TRUE
f_2755(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, v10897, v12181, v12182, v12183, 0, 2, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 999, 4, 8) -> f_2756(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, 1, 1, 1, v10897, v12181, v12182, 1, v12183, 0, 2, 1000, v10889, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 2, 4, 8) :|: TRUE
f_2756(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12885, v12886, v12887, v12888, v12889, v12890, 1, v12892, 0, v12894, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 4, 8) -> f_2758(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12885, v12886, v12887, v12888, v12889, v12890, 1, v12892, 0, v12894, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 4, 8) :|: 0 = 0
f_2758(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12885, v12886, v12887, v12888, v12889, v12890, 1, v12892, 0, v12894, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 4, 8) -> f_2760(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12885, v12886, v12887, v12888, v12889, v12890, 1, v12892, 0, v12894, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 4, 8) :|: 0 = 0
f_2760(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12885, v12886, v12887, v12888, v12889, v12890, 1, v12892, 0, v12894, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 4, 8) -> f_2762(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12885, v12886, v12887, v12888, v12889, v12890, 1, v12892, 0, v12894, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 4, 8) :|: 0 = 0
f_2762(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12885, v12886, v12887, v12888, v12889, v12890, 1, v12892, 0, v12894, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 4, 8) -> f_2764(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12885, v12886, v12887, v12888, v12889, v12890, 1, v12892, 0, v12894, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 4, 8) :|: 0 = 0
f_2764(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12885, v12886, v12887, v12888, v12889, v12890, 1, v12892, 0, v12894, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 4, 8) -> f_2767(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12885, v12886, v12887, v12888, v12889, v12890, 1, v12892, 0, v12894, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: v12888 <= 1000 && v12896 <= 999
f_2767(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12885, v12886, v12887, v12888, v12889, v12890, 1, v12892, 0, v12894, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2770(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12885, v12886, v12887, v12888, v12889, v12890, 1, v12892, 0, v12894, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_2770(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12885, v12886, v12887, v12888, v12889, v12890, 1, v12892, 0, v12894, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2773(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12885, v12886, v12887, v12888, v12889, v12890, 1, v12892, 0, v12894, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: TRUE
f_2773(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12885, v12886, v12887, v12888, v12889, v12890, 1, v12892, 0, v12894, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2776(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12885, v12886, v12887, v12888, v12889, v12890, 1, v12892, 0, v12894, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_2776(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12885, v12886, v12887, v12888, v12889, v12890, 1, v12892, 0, v12894, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2779(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12885, v12886, v12887, v12888, v12889, v12890, 1, v12892, 0, v12894, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_2779(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12885, v12886, v12887, v12888, v12889, v12890, 1, v12892, 0, v12894, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2782(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12885, v12886, v12887, v12888, v12889, v12890, 1, v12892, 0, v12894, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_2782(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12885, v12886, v12887, v12888, v12889, v12890, 1, v12892, 0, v12894, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2785(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12885, v12886, v12887, v12888, v12889, v12890, 1, v12892, 0, v12894, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_2785(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12885, v12886, v12887, v12888, v12889, v12890, 1, v12892, 0, v12894, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2788(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12885, v12886, v12887, v12888, v12889, v12890, 1, v12892, 0, v12894, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_2788(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12885, v12886, v12887, v12888, v12889, v12890, 1, v12892, 0, v12894, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2791(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12885, v12886, v12887, v12888, v12889, v12890, 1, v12892, 0, v12894, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: TRUE
f_2791(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12885, v12886, v12887, v12888, v12889, v12890, 1, v12892, 0, v12894, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2794(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12885, v12886, v12887, v12888, v12889, v12890, 1, v12892, 0, v12894, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: TRUE
f_2794(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12885, v12886, v12887, v12888, v12889, v12890, 1, v12892, 0, v12894, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2797(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12885, v12886, v12887, v12888, v12889, v12890, 1, v12892, 0, v12894, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_2797(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12885, v12886, v12887, v12888, v12889, v12890, 1, v12892, 0, v12894, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2800(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v12885, v12886, v12887, v12888, v12889, v12890, 1, v12892, 0, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_2800(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v12885, v12886, v12887, v12888, v12889, v12890, 1, v12892, 0, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2803(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v12885, v12886, v12887, v12888, v12889, v12890, 1, v12892, 0, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_2803(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v12885, v12886, v12887, v12888, v12889, v12890, 1, v12892, 0, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2806(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v12886, v12885, v12887, v12888, v12889, v12890, 1, v12892, 0, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_2806(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v12886, v12885, v12887, v12888, v12889, v12890, 1, v12892, 0, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2809(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v12885, v12887, v12888, v12889, v12890, 1, v12892, 0, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: v13598 = v12894 * v12894
f_2809(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v12885, v12887, v12888, v12889, v12890, 1, v12892, 0, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2812(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v12885, v12887, v12888, v12889, v12890, 1, v12892, 0, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_2812(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v12885, v12887, v12888, v12889, v12890, 1, v12892, 0, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2815(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v12887, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_2815(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v12887, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2818(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: v13803 = v13598 * v12894
f_2818(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2821(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_2821(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2824(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_2824(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2827(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_2827(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2830(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_2830(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2833(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: v12889 = v12888 * v12888
f_2833(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2836(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_2836(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2839(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_2839(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2842(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: v12890 = v12889 * v12888
f_2842(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2845(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_2845(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2848(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_2848(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2851(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_2851(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2854(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_2854(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2857(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_2857(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2860(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_2860(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2863(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_2863(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2866(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_2866(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2869(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: v12892 = 1 + v12890
f_2869(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2873(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: v13803 != v12892
f_2873(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2877(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_2877(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2881(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: TRUE
f_2881(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2885(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_2885(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v12885, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2889(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_2889(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2893(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: v13910 = 1 + v12894 && 3 <= v13910
f_2893(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2896(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: TRUE
f_2896(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2900(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_2900(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2904(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_2904(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2908(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_2908(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2912(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_2912(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2916(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8, 1001) :|: 1000 < v13910 && 1000 <= v12894
f_2912(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2917(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: v13910 <= 1000 && v12894 <= 999
f_2916(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8, 1001) -> f_2921(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8, 1001) :|: 0 = 0
f_2921(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8, 1001) -> f_2925(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8, 1001) :|: TRUE
f_2925(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8, 1001) -> f_2929(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8, 1001) :|: 0 = 0
f_2929(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8, 1001) -> f_2932(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8, 1001) :|: TRUE
f_2932(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8, 1001) -> f_2935(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8, 1001) :|: 0 = 0
f_2935(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8, 1001) -> f_2938(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 4, 8, 1001) :|: 0 = 0
f_2938(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 4, 8, 1001) -> f_2942(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v14350, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 4, 8, 1001) :|: v14350 = 1 + v12888 && 3 <= v14350 && v14350 <= 1001
f_2942(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v14350, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 4, 8, 1001) -> f_2946(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v14350, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 4, 8, 1001) :|: TRUE
f_2946(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v14350, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 4, 8, 1001) -> f_2951(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v14350, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 4, 8, 1001) :|: TRUE
f_2951(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v14350, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 4, 8, 1001) -> f_2536(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v14350, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 1001, 2, 4, 8) :|: TRUE
f_2536(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, v10886, v10887, v10888, v10889, v10890, v10891, 1, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 1001, 2, 4, 8) -> f_2539(v10877, v10878, v10879, v10880, v10881, v10882, v10883, v10884, v10885, v10886, v10887, v10888, v10889, v10890, v10891, 1, v10893, 0, v10895, 1000, v10897, v10898, v10899, v10900, v10901, v10902, v10903, v10904, v10905, v10906, 3, 7, 1001, 2, 4, 8) :|: 0 = 0
f_2917(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2922(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: 0 = 0
f_2922(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2926(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) :|: TRUE
f_2926(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 999, 4, 8) -> f_2756(v12876, v12877, v12878, v12879, v12880, v12881, v12882, v12883, v12884, v12894, v13598, v13803, v12888, v12889, v12890, 1, v12892, 0, v13910, 1000, v12896, v12897, v12898, v12899, v12900, v12901, v12902, v12903, v12904, v12905, 3, 7, 2, 4, 8) :|: TRUE
Combined rules. Obtained 6 rulesP rules:
f_2912(v12876:0, v12877:0, v12878:0, v12879:0, v12880:0, v12881:0, v12882:0, v12883:0, v12884:0, v12894:0, v13598:0, v13803:0, v12888:0, v12889:0, v12890:0, 1, v12892:0, 0, v13910:0, 1000, v12896:0, v12897:0, v12898:0, v12899:0, v12900:0, v12901:0, v12902:0, v12903:0, v12904:0, v12905:0, 3, 7, 2, 999, 4, 8) -> f_2912(v12876:0, v12877:0, v12878:0, v12879:0, v12880:0, v12881:0, v12882:0, v12883:0, v12884:0, 2, 4, 8, 1 + v12888:0, (1 + v12888:0) * (1 + v12888:0), (1 + v12888:0) * (1 + v12888:0) * (1 + v12888:0), 1, 1 + (1 + v12888:0) * (1 + v12888:0) * (1 + v12888:0), 0, 3, 1000, v12888:0, v12897:0, v12898:0, v12899:0, v12900:0, v12901:0, v12902:0, v12903:0, v12904:0, v12905:0, 3, 7, 2, 999, 4, 8) :|: 7 < (1 + v12888:0) * (1 + v12888:0) * (1 + v12888:0) && v12888:0 < 1000 && v12894:0 > 999 && v13910:0 > 1000 && v12888:0 < 1001 && v12888:0 > 1
f_2912(v12876:0, v12877:0, v12878:0, v12879:0, v12880:0, v12881:0, v12882:0, v12883:0, v12884:0, v12894:0, v13598:0, v13803:0, v12888:0, v12889:0, v12890:0, 1, v12892:0, 0, v13910:0, 1000, v12896:0, v12897:0, v12898:0, v12899:0, v12900:0, v12901:0, v12902:0, v12903:0, v12904:0, v12905:0, 3, 7, 2, 999, 4, 8) -> f_2912(v12876:0, v12877:0, v12878:0, v12879:0, v12880:0, v12881:0, v12882:0, v12883:0, v12884:0, 2, 4, 8, 1 + v12888:0, (1 + v12888:0) * (1 + v12888:0), (1 + v12888:0) * (1 + v12888:0) * (1 + v12888:0), 1, 1 + (1 + v12888:0) * (1 + v12888:0) * (1 + v12888:0), 0, 3, 1000, v12888:0, v12897:0, v12898:0, v12899:0, v12900:0, v12901:0, v12902:0, v12903:0, v12904:0, v12905:0, 3, 7, 2, 999, 4, 8) :|: v12888:0 < 1000 && (1 + v12888:0) * (1 + v12888:0) * (1 + v12888:0) > 0 && v12894:0 > 999 && v13910:0 > 1000 && 7 > (1 + v12888:0) * (1 + v12888:0) * (1 + v12888:0) && v12888:0 < 1001 && v12888:0 > 1
f_2912(v12876:0, v12877:0, v12878:0, v12879:0, v12880:0, v12881:0, v12882:0, v12883:0, v12884:0, v12894:0, v13598:0, v13803:0, v12888:0, v12889:0, v12890:0, 1, v12892:0, 0, v13910:0, 1000, v12896:0, v12897:0, v12898:0, v12899:0, v12900:0, v12901:0, v12902:0, v12903:0, v12904:0, v12905:0, 3, 7, 2, 999, 4, 8) -> f_2912(v12876:0, v12877:0, v12878:0, v12879:0, v12880:0, v12881:0, v12882:0, v12883:0, v12884:0, 2, 4, 8, 1 + v12888:0, (1 + v12888:0) * (1 + v12888:0), (1 + v12888:0) * (1 + v12888:0) * (1 + v12888:0), 1, 1 + (1 + v12888:0) * (1 + v12888:0) * (1 + v12888:0), 0, 3, 1000, v12888:0, v12897:0, v12898:0, v12899:0, v12900:0, v12901:0, v12902:0, v12903:0, v12904:0, v12905:0, 3, 7, 2, 999, 4, 8) :|: v12888:0 < 1000 && (1 + v12888:0) * (1 + v12888:0) * (1 + v12888:0) < 0 && v12894:0 > 999 && v13910:0 > 1000 && 7 < (1 + v12888:0) * (1 + v12888:0) * (1 + v12888:0) && v12888:0 < 1001 && v12888:0 > 1
f_2912(v12876:0, v12877:0, v12878:0, v12879:0, v12880:0, v12881:0, v12882:0, v12883:0, v12884:0, v12894:0, v13598:0, v13803:0, v12888:0, v12889:0, v12890:0, 1, v12892:0, 0, v13910:0, 1000, v12896:0, v12897:0, v12898:0, v12899:0, v12900:0, v12901:0, v12902:0, v12903:0, v12904:0, v12905:0, 3, 7, 2, 999, 4, 8) -> f_2912(v12876:0, v12877:0, v12878:0, v12879:0, v12880:0, v12881:0, v12882:0, v12883:0, v12884:0, 2, 4, 8, 1 + v12888:0, (1 + v12888:0) * (1 + v12888:0), (1 + v12888:0) * (1 + v12888:0) * (1 + v12888:0), 1, 1 + (1 + v12888:0) * (1 + v12888:0) * (1 + v12888:0), 0, 3, 1000, v12888:0, v12897:0, v12898:0, v12899:0, v12900:0, v12901:0, v12902:0, v12903:0, v12904:0, v12905:0, 3, 7, 2, 999, 4, 8) :|: v12888:0 < 1000 && (1 + v12888:0) * (1 + v12888:0) * (1 + v12888:0) < 0 && v12894:0 > 999 && v13910:0 > 1000 && 7 > (1 + v12888:0) * (1 + v12888:0) * (1 + v12888:0) && v12888:0 < 1001 && v12888:0 > 1
f_2912(v12876:0, v12877:0, v12878:0, v12879:0, v12880:0, v12881:0, v12882:0, v12883:0, v12884:0, v12894:0, v13598:0, v13803:0, v12888:0, v12888:0 * v12888:0, v12888:0 * v12888:0 * v12888:0, 1, 1 + v12888:0 * v12888:0 * v12888:0, 0, v13910:0, 1000, v12896:0, v12897:0, v12898:0, v12899:0, v12900:0, v12901:0, v12902:0, v12903:0, v12904:0, v12905:0, 3, 7, 2, 999, 4, 8) -> f_2912(v12876:0, v12877:0, v12878:0, v12879:0, v12880:0, v12881:0, v12882:0, v12883:0, v12884:0, v13910:0, v13910:0 * v13910:0, v13910:0 * v13910:0 * v13910:0, v12888:0, v12888:0 * v12888:0, v12888:0 * v12888:0 * v12888:0, 1, 1 + v12888:0 * v12888:0 * v12888:0, 0, 1 + v13910:0, 1000, v12896:0, v12897:0, v12898:0, v12899:0, v12900:0, v12901:0, v12902:0, v12903:0, v12904:0, v12905:0, 3, 7, 2, 999, 4, 8) :|: v12896:0 < 1000 && v12888:0 < 1001 && v13910:0 * v13910:0 * v13910:0 < 1 + v12888:0 * v12888:0 * v12888:0 && v13910:0 > 1 && v13910:0 < 1001 && v12894:0 < 1000
f_2912(v12876:0, v12877:0, v12878:0, v12879:0, v12880:0, v12881:0, v12882:0, v12883:0, v12884:0, v12894:0, v13598:0, v13803:0, v12888:0, v12888:0 * v12888:0, v12888:0 * v12888:0 * v12888:0, 1, 1 + v12888:0 * v12888:0 * v12888:0, 0, v13910:0, 1000, v12896:0, v12897:0, v12898:0, v12899:0, v12900:0, v12901:0, v12902:0, v12903:0, v12904:0, v12905:0, 3, 7, 2, 999, 4, 8) -> f_2912(v12876:0, v12877:0, v12878:0, v12879:0, v12880:0, v12881:0, v12882:0, v12883:0, v12884:0, v13910:0, v13910:0 * v13910:0, v13910:0 * v13910:0 * v13910:0, v12888:0, v12888:0 * v12888:0, v12888:0 * v12888:0 * v12888:0, 1, 1 + v12888:0 * v12888:0 * v12888:0, 0, 1 + v13910:0, 1000, v12896:0, v12897:0, v12898:0, v12899:0, v12900:0, v12901:0, v12902:0, v12903:0, v12904:0, v12905:0, 3, 7, 2, 999, 4, 8) :|: v12896:0 < 1000 && v12888:0 < 1001 && v13910:0 * v13910:0 * v13910:0 > 1 + v12888:0 * v12888:0 * v12888:0 && v13910:0 > 1 && v13910:0 < 1001 && v12894:0 < 1000
Filtered unneeded arguments:
   f_2912(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36) -> f_2912(x10, x13, x14, x15, x17, x19, x21)
Removed division, modulo operations, cleaned up constraints. Obtained 6 rules.P rules:
f_2912(v12894:0, v12888:0, v12889:0, v12890:0, v12892:0, v13910:0, v12896:0) -> f_2912(2, 1 + v12888:0, 1 + v12888:0 + (v12888:0 + v12888:0 * v12888:0), 1 + v12888:0 + (v12888:0 + v12888:0 * v12888:0) + (v12888:0 + v12888:0 * v12888:0 + v12888:0 * v12888:0 * (1 + v12888:0)), 1 + (1 + v12888:0 + (v12888:0 + v12888:0 * v12888:0) + (v12888:0 + v12888:0 * v12888:0 + v12888:0 * v12888:0 * (1 + v12888:0))), 3, v12888:0) :|: v12888:0 < 1000 && 7 < 1 + v12888:0 + (v12888:0 + v12888:0 * v12888:0) + (v12888:0 + v12888:0 * v12888:0 + v12888:0 * v12888:0 * (1 + v12888:0)) && v12894:0 > 999 && v13910:0 > 1000 && v12888:0 > 1 && v12888:0 < 1001
f_2912(v12894:0, v12888:0, v12889:0, v12890:0, v12892:0, v13910:0, v12896:0) -> f_2912(2, 1 + v12888:0, 1 + v12888:0 + (v12888:0 + v12888:0 * v12888:0), 1 + v12888:0 + (v12888:0 + v12888:0 * v12888:0) + (v12888:0 + v12888:0 * v12888:0 + v12888:0 * v12888:0 * (1 + v12888:0)), 1 + (1 + v12888:0 + (v12888:0 + v12888:0 * v12888:0) + (v12888:0 + v12888:0 * v12888:0 + v12888:0 * v12888:0 * (1 + v12888:0))), 3, v12888:0) :|: 1 + v12888:0 + (v12888:0 + v12888:0 * v12888:0) + (v12888:0 + v12888:0 * v12888:0 + v12888:0 * v12888:0 * (1 + v12888:0)) > 0 && v12888:0 < 1000 && v12894:0 > 999 && v13910:0 > 1000 && 7 > 1 + v12888:0 + (v12888:0 + v12888:0 * v12888:0) + (v12888:0 + v12888:0 * v12888:0 + v12888:0 * v12888:0 * (1 + v12888:0)) && v12888:0 > 1 && v12888:0 < 1001
f_2912(v12894:0, v12888:0, v12889:0, v12890:0, v12892:0, v13910:0, v12896:0) -> f_2912(2, 1 + v12888:0, 1 + v12888:0 + (v12888:0 + v12888:0 * v12888:0), 1 + v12888:0 + (v12888:0 + v12888:0 * v12888:0) + (v12888:0 + v12888:0 * v12888:0 + v12888:0 * v12888:0 * (1 + v12888:0)), 1 + (1 + v12888:0 + (v12888:0 + v12888:0 * v12888:0) + (v12888:0 + v12888:0 * v12888:0 + v12888:0 * v12888:0 * (1 + v12888:0))), 3, v12888:0) :|: 1 + v12888:0 + (v12888:0 + v12888:0 * v12888:0) + (v12888:0 + v12888:0 * v12888:0 + v12888:0 * v12888:0 * (1 + v12888:0)) < 0 && v12888:0 < 1000 && v12894:0 > 999 && v13910:0 > 1000 && 7 < 1 + v12888:0 + (v12888:0 + v12888:0 * v12888:0) + (v12888:0 + v12888:0 * v12888:0 + v12888:0 * v12888:0 * (1 + v12888:0)) && v12888:0 > 1 && v12888:0 < 1001
f_2912(v12894:0, v12888:0, v12889:0, v12890:0, v12892:0, v13910:0, v12896:0) -> f_2912(2, 1 + v12888:0, 1 + v12888:0 + (v12888:0 + v12888:0 * v12888:0), 1 + v12888:0 + (v12888:0 + v12888:0 * v12888:0) + (v12888:0 + v12888:0 * v12888:0 + v12888:0 * v12888:0 * (1 + v12888:0)), 1 + (1 + v12888:0 + (v12888:0 + v12888:0 * v12888:0) + (v12888:0 + v12888:0 * v12888:0 + v12888:0 * v12888:0 * (1 + v12888:0))), 3, v12888:0) :|: 1 + v12888:0 + (v12888:0 + v12888:0 * v12888:0) + (v12888:0 + v12888:0 * v12888:0 + v12888:0 * v12888:0 * (1 + v12888:0)) < 0 && v12888:0 < 1000 && v12894:0 > 999 && v13910:0 > 1000 && 7 > 1 + v12888:0 + (v12888:0 + v12888:0 * v12888:0) + (v12888:0 + v12888:0 * v12888:0 + v12888:0 * v12888:0 * (1 + v12888:0)) && v12888:0 > 1 && v12888:0 < 1001
f_2912(v12894:0, v12888:0, times~v12888:0~v12888:0, times~times~v12888:0~v12888:0~v12888:0, sum~cons_1~times~times~v12888:0~v12888:0~v12888:0, v13910:0, v12896:0) -> f_2912(v13910:0, v12888:0, v12888:0 * v12888:0, v12888:0 * v12888:0 * v12888:0, 1 + v12888:0 * v12888:0 * v12888:0, 1 + v13910:0, v12896:0) :|: v12888:0 < 1001 && v12896:0 < 1000 && v13910:0 * v13910:0 * v13910:0 < 1 + v12888:0 * v12888:0 * v12888:0 && v13910:0 > 1 && v12894:0 < 1000 && v13910:0 < 1001 && times~v12888:0~v12888:0 = v12888:0 * v12888:0 && times~times~v12888:0~v12888:0~v12888:0 = v12888:0 * v12888:0 * v12888:0 && sum~cons_1~times~times~v12888:0~v12888:0~v12888:0 = 1 + v12888:0 * v12888:0 * v12888:0
f_2912(v12894:0, v12888:0, times~v12888:0~v12888:0, times~times~v12888:0~v12888:0~v12888:0, sum~cons_1~times~times~v12888:0~v12888:0~v12888:0, v13910:0, v12896:0) -> f_2912(v13910:0, v12888:0, v12888:0 * v12888:0, v12888:0 * v12888:0 * v12888:0, 1 + v12888:0 * v12888:0 * v12888:0, 1 + v13910:0, v12896:0) :|: v12888:0 < 1001 && v12896:0 < 1000 && v13910:0 * v13910:0 * v13910:0 > 1 + v12888:0 * v12888:0 * v12888:0 && v13910:0 > 1 && v12894:0 < 1000 && v13910:0 < 1001 && times~v12888:0~v12888:0 = v12888:0 * v12888:0 && times~times~v12888:0~v12888:0~v12888:0 = v12888:0 * v12888:0 * v12888:0 && sum~cons_1~times~times~v12888:0~v12888:0~v12888:0 = 1 + v12888:0 * v12888:0 * v12888:0

----------------------------------------

(40)
Obligation:
Rules:
f_2912(v12894:0, v12888:0, v12889:0, v12890:0, v12892:0, v13910:0, v12896:0) -> f_2912(2, 1 + v12888:0, 1 + v12888:0 + (v12888:0 + v12888:0 * v12888:0), 1 + v12888:0 + (v12888:0 + v12888:0 * v12888:0) + (v12888:0 + v12888:0 * v12888:0 + v12888:0 * v12888:0 * (1 + v12888:0)), 1 + (1 + v12888:0 + (v12888:0 + v12888:0 * v12888:0) + (v12888:0 + v12888:0 * v12888:0 + v12888:0 * v12888:0 * (1 + v12888:0))), 3, v12888:0) :|: v12888:0 < 1000 && 7 < 1 + v12888:0 + (v12888:0 + v12888:0 * v12888:0) + (v12888:0 + v12888:0 * v12888:0 + v12888:0 * v12888:0 * (1 + v12888:0)) && v12894:0 > 999 && v13910:0 > 1000 && v12888:0 > 1 && v12888:0 < 1001
f_2912(x, x1, x2, x3, x4, x5, x6) -> f_2912(2, 1 + x1, 1 + x1 + (x1 + x1 * x1), 1 + x1 + (x1 + x1 * x1) + (x1 + x1 * x1 + x1 * x1 * (1 + x1)), 1 + (1 + x1 + (x1 + x1 * x1) + (x1 + x1 * x1 + x1 * x1 * (1 + x1))), 3, x1) :|: 1 + x1 + (x1 + x1 * x1) + (x1 + x1 * x1 + x1 * x1 * (1 + x1)) > 0 && x1 < 1000 && x > 999 && x5 > 1000 && 7 > 1 + x1 + (x1 + x1 * x1) + (x1 + x1 * x1 + x1 * x1 * (1 + x1)) && x1 > 1 && x1 < 1001
f_2912(x7, x8, x9, x10, x11, x12, x13) -> f_2912(2, 1 + x8, 1 + x8 + (x8 + x8 * x8), 1 + x8 + (x8 + x8 * x8) + (x8 + x8 * x8 + x8 * x8 * (1 + x8)), 1 + (1 + x8 + (x8 + x8 * x8) + (x8 + x8 * x8 + x8 * x8 * (1 + x8))), 3, x8) :|: 1 + x8 + (x8 + x8 * x8) + (x8 + x8 * x8 + x8 * x8 * (1 + x8)) < 0 && x8 < 1000 && x7 > 999 && x12 > 1000 && 7 < 1 + x8 + (x8 + x8 * x8) + (x8 + x8 * x8 + x8 * x8 * (1 + x8)) && x8 > 1 && x8 < 1001
f_2912(x14, x15, x16, x17, x18, x19, x20) -> f_2912(2, 1 + x15, 1 + x15 + (x15 + x15 * x15), 1 + x15 + (x15 + x15 * x15) + (x15 + x15 * x15 + x15 * x15 * (1 + x15)), 1 + (1 + x15 + (x15 + x15 * x15) + (x15 + x15 * x15 + x15 * x15 * (1 + x15))), 3, x15) :|: 1 + x15 + (x15 + x15 * x15) + (x15 + x15 * x15 + x15 * x15 * (1 + x15)) < 0 && x15 < 1000 && x14 > 999 && x19 > 1000 && 7 > 1 + x15 + (x15 + x15 * x15) + (x15 + x15 * x15 + x15 * x15 * (1 + x15)) && x15 > 1 && x15 < 1001
f_2912(x21, x22, x23, x24, x25, x26, x27) -> f_2912(x26, x22, x22 * x22, x22 * x22 * x22, 1 + x22 * x22 * x22, 1 + x26, x27) :|: x22 < 1001 && x27 < 1000 && x26 * x26 * x26 < 1 + x22 * x22 * x22 && x26 > 1 && x21 < 1000 && x26 < 1001 && x23 = x22 * x22 && x24 = x22 * x22 * x22 && x25 = 1 + x22 * x22 * x22
f_2912(x28, x29, x30, x31, x32, x33, x34) -> f_2912(x33, x29, x29 * x29, x29 * x29 * x29, 1 + x29 * x29 * x29, 1 + x33, x34) :|: x29 < 1001 && x34 < 1000 && x33 * x33 * x33 > 1 + x29 * x29 * x29 && x33 > 1 && x28 < 1000 && x33 < 1001 && x30 = x29 * x29 && x31 = x29 * x29 * x29 && x32 = 1 + x29 * x29 * x29

----------------------------------------

(41) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(42)
Obligation:
Rules:
f_2912(x7:0, x8:0, x9:0, x10:0, x11:0, x12:0, x13:0) -> f_2912(2, 1 + x8:0, 1 + x8:0 + (x8:0 + x8:0 * x8:0), 1 + x8:0 + (x8:0 + x8:0 * x8:0) + (x8:0 + x8:0 * x8:0 + x8:0 * x8:0 * (1 + x8:0)), 1 + (1 + x8:0 + (x8:0 + x8:0 * x8:0) + (x8:0 + x8:0 * x8:0 + x8:0 * x8:0 * (1 + x8:0))), 3, x8:0) :|: x8:0 > 1 && x8:0 < 1001 && 7 < 1 + x8:0 + (x8:0 + x8:0 * x8:0) + (x8:0 + x8:0 * x8:0 + x8:0 * x8:0 * (1 + x8:0)) && x12:0 > 1000 && x7:0 > 999 && x8:0 < 1000 && 1 + x8:0 + (x8:0 + x8:0 * x8:0) + (x8:0 + x8:0 * x8:0 + x8:0 * x8:0 * (1 + x8:0)) < 0
f_2912(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0) -> f_2912(2, 1 + x1:0, 1 + x1:0 + (x1:0 + x1:0 * x1:0), 1 + x1:0 + (x1:0 + x1:0 * x1:0) + (x1:0 + x1:0 * x1:0 + x1:0 * x1:0 * (1 + x1:0)), 1 + (1 + x1:0 + (x1:0 + x1:0 * x1:0) + (x1:0 + x1:0 * x1:0 + x1:0 * x1:0 * (1 + x1:0))), 3, x1:0) :|: x1:0 > 1 && x1:0 < 1001 && 7 > 1 + x1:0 + (x1:0 + x1:0 * x1:0) + (x1:0 + x1:0 * x1:0 + x1:0 * x1:0 * (1 + x1:0)) && x5:0 > 1000 && x:0 > 999 && x1:0 < 1000 && 1 + x1:0 + (x1:0 + x1:0 * x1:0) + (x1:0 + x1:0 * x1:0 + x1:0 * x1:0 * (1 + x1:0)) > 0
f_2912(v12894:0:0, v12888:0:0, v12889:0:0, v12890:0:0, v12892:0:0, v13910:0:0, v12896:0:0) -> f_2912(2, 1 + v12888:0:0, 1 + v12888:0:0 + (v12888:0:0 + v12888:0:0 * v12888:0:0), 1 + v12888:0:0 + (v12888:0:0 + v12888:0:0 * v12888:0:0) + (v12888:0:0 + v12888:0:0 * v12888:0:0 + v12888:0:0 * v12888:0:0 * (1 + v12888:0:0)), 1 + (1 + v12888:0:0 + (v12888:0:0 + v12888:0:0 * v12888:0:0) + (v12888:0:0 + v12888:0:0 * v12888:0:0 + v12888:0:0 * v12888:0:0 * (1 + v12888:0:0))), 3, v12888:0:0) :|: v12888:0:0 > 1 && v12888:0:0 < 1001 && v13910:0:0 > 1000 && v12894:0:0 > 999 && 7 < 1 + v12888:0:0 + (v12888:0:0 + v12888:0:0 * v12888:0:0) + (v12888:0:0 + v12888:0:0 * v12888:0:0 + v12888:0:0 * v12888:0:0 * (1 + v12888:0:0)) && v12888:0:0 < 1000
f_2912(x14:0, x15:0, x16:0, x17:0, x18:0, x19:0, x20:0) -> f_2912(2, 1 + x15:0, 1 + x15:0 + (x15:0 + x15:0 * x15:0), 1 + x15:0 + (x15:0 + x15:0 * x15:0) + (x15:0 + x15:0 * x15:0 + x15:0 * x15:0 * (1 + x15:0)), 1 + (1 + x15:0 + (x15:0 + x15:0 * x15:0) + (x15:0 + x15:0 * x15:0 + x15:0 * x15:0 * (1 + x15:0))), 3, x15:0) :|: x15:0 > 1 && x15:0 < 1001 && 7 > 1 + x15:0 + (x15:0 + x15:0 * x15:0) + (x15:0 + x15:0 * x15:0 + x15:0 * x15:0 * (1 + x15:0)) && x19:0 > 1000 && x14:0 > 999 && x15:0 < 1000 && 1 + x15:0 + (x15:0 + x15:0 * x15:0) + (x15:0 + x15:0 * x15:0 + x15:0 * x15:0 * (1 + x15:0)) < 0
f_2912(x28:0, x29:0, times~x29:0~x29:0, times~times~x29:0~x29:0~x29:0, sum~cons_1~times~times~x29:0~x29:0~x29:0, x33:0, x34:0) -> f_2912(x33:0, x29:0, x29:0 * x29:0, x29:0 * x29:0 * x29:0, 1 + x29:0 * x29:0 * x29:0, 1 + x33:0, x34:0) :|: x28:0 < 1000 && x33:0 < 1001 && x33:0 > 1 && x33:0 * x33:0 * x33:0 > 1 + x29:0 * x29:0 * x29:0 && x34:0 < 1000 && x29:0 < 1001 && times~x29:0~x29:0 = x29:0 * x29:0 && times~times~x29:0~x29:0~x29:0 = x29:0 * x29:0 * x29:0 && sum~cons_1~times~times~x29:0~x29:0~x29:0 = 1 + x29:0 * x29:0 * x29:0
f_2912(x21:0, x22:0, times~x22:0~x22:0, times~times~x22:0~x22:0~x22:0, sum~cons_1~times~times~x22:0~x22:0~x22:0, x26:0, x27:0) -> f_2912(x26:0, x22:0, x22:0 * x22:0, x22:0 * x22:0 * x22:0, 1 + x22:0 * x22:0 * x22:0, 1 + x26:0, x27:0) :|: x21:0 < 1000 && x26:0 < 1001 && x26:0 > 1 && x26:0 * x26:0 * x26:0 < 1 + x22:0 * x22:0 * x22:0 && x27:0 < 1000 && x22:0 < 1001 && times~x22:0~x22:0 = x22:0 * x22:0 && times~times~x22:0~x22:0~x22:0 = x22:0 * x22:0 * x22:0 && sum~cons_1~times~times~x22:0~x22:0~x22:0 = 1 + x22:0 * x22:0 * x22:0

----------------------------------------

(43) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_2912(x, x1, x2, x3, x4, x5, x6)] = 1000 - x1

The following rules are decreasing:
f_2912(x7:0, x8:0, x9:0, x10:0, x11:0, x12:0, x13:0) -> f_2912(2, 1 + x8:0, 1 + x8:0 + (x8:0 + x8:0 * x8:0), 1 + x8:0 + (x8:0 + x8:0 * x8:0) + (x8:0 + x8:0 * x8:0 + x8:0 * x8:0 * (1 + x8:0)), 1 + (1 + x8:0 + (x8:0 + x8:0 * x8:0) + (x8:0 + x8:0 * x8:0 + x8:0 * x8:0 * (1 + x8:0))), 3, x8:0) :|: x8:0 > 1 && x8:0 < 1001 && 7 < 1 + x8:0 + (x8:0 + x8:0 * x8:0) + (x8:0 + x8:0 * x8:0 + x8:0 * x8:0 * (1 + x8:0)) && x12:0 > 1000 && x7:0 > 999 && x8:0 < 1000 && 1 + x8:0 + (x8:0 + x8:0 * x8:0) + (x8:0 + x8:0 * x8:0 + x8:0 * x8:0 * (1 + x8:0)) < 0
f_2912(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0) -> f_2912(2, 1 + x1:0, 1 + x1:0 + (x1:0 + x1:0 * x1:0), 1 + x1:0 + (x1:0 + x1:0 * x1:0) + (x1:0 + x1:0 * x1:0 + x1:0 * x1:0 * (1 + x1:0)), 1 + (1 + x1:0 + (x1:0 + x1:0 * x1:0) + (x1:0 + x1:0 * x1:0 + x1:0 * x1:0 * (1 + x1:0))), 3, x1:0) :|: x1:0 > 1 && x1:0 < 1001 && 7 > 1 + x1:0 + (x1:0 + x1:0 * x1:0) + (x1:0 + x1:0 * x1:0 + x1:0 * x1:0 * (1 + x1:0)) && x5:0 > 1000 && x:0 > 999 && x1:0 < 1000 && 1 + x1:0 + (x1:0 + x1:0 * x1:0) + (x1:0 + x1:0 * x1:0 + x1:0 * x1:0 * (1 + x1:0)) > 0
f_2912(v12894:0:0, v12888:0:0, v12889:0:0, v12890:0:0, v12892:0:0, v13910:0:0, v12896:0:0) -> f_2912(2, 1 + v12888:0:0, 1 + v12888:0:0 + (v12888:0:0 + v12888:0:0 * v12888:0:0), 1 + v12888:0:0 + (v12888:0:0 + v12888:0:0 * v12888:0:0) + (v12888:0:0 + v12888:0:0 * v12888:0:0 + v12888:0:0 * v12888:0:0 * (1 + v12888:0:0)), 1 + (1 + v12888:0:0 + (v12888:0:0 + v12888:0:0 * v12888:0:0) + (v12888:0:0 + v12888:0:0 * v12888:0:0 + v12888:0:0 * v12888:0:0 * (1 + v12888:0:0))), 3, v12888:0:0) :|: v12888:0:0 > 1 && v12888:0:0 < 1001 && v13910:0:0 > 1000 && v12894:0:0 > 999 && 7 < 1 + v12888:0:0 + (v12888:0:0 + v12888:0:0 * v12888:0:0) + (v12888:0:0 + v12888:0:0 * v12888:0:0 + v12888:0:0 * v12888:0:0 * (1 + v12888:0:0)) && v12888:0:0 < 1000
f_2912(x14:0, x15:0, x16:0, x17:0, x18:0, x19:0, x20:0) -> f_2912(2, 1 + x15:0, 1 + x15:0 + (x15:0 + x15:0 * x15:0), 1 + x15:0 + (x15:0 + x15:0 * x15:0) + (x15:0 + x15:0 * x15:0 + x15:0 * x15:0 * (1 + x15:0)), 1 + (1 + x15:0 + (x15:0 + x15:0 * x15:0) + (x15:0 + x15:0 * x15:0 + x15:0 * x15:0 * (1 + x15:0))), 3, x15:0) :|: x15:0 > 1 && x15:0 < 1001 && 7 > 1 + x15:0 + (x15:0 + x15:0 * x15:0) + (x15:0 + x15:0 * x15:0 + x15:0 * x15:0 * (1 + x15:0)) && x19:0 > 1000 && x14:0 > 999 && x15:0 < 1000 && 1 + x15:0 + (x15:0 + x15:0 * x15:0) + (x15:0 + x15:0 * x15:0 + x15:0 * x15:0 * (1 + x15:0)) < 0
The following rules are bounded:
f_2912(x28:0, x29:0, times~x29:0~x29:0, times~times~x29:0~x29:0~x29:0, sum~cons_1~times~times~x29:0~x29:0~x29:0, x33:0, x34:0) -> f_2912(x33:0, x29:0, x29:0 * x29:0, x29:0 * x29:0 * x29:0, 1 + x29:0 * x29:0 * x29:0, 1 + x33:0, x34:0) :|: x28:0 < 1000 && x33:0 < 1001 && x33:0 > 1 && x33:0 * x33:0 * x33:0 > 1 + x29:0 * x29:0 * x29:0 && x34:0 < 1000 && x29:0 < 1001 && times~x29:0~x29:0 = x29:0 * x29:0 && times~times~x29:0~x29:0~x29:0 = x29:0 * x29:0 * x29:0 && sum~cons_1~times~times~x29:0~x29:0~x29:0 = 1 + x29:0 * x29:0 * x29:0
f_2912(x21:0, x22:0, times~x22:0~x22:0, times~times~x22:0~x22:0~x22:0, sum~cons_1~times~times~x22:0~x22:0~x22:0, x26:0, x27:0) -> f_2912(x26:0, x22:0, x22:0 * x22:0, x22:0 * x22:0 * x22:0, 1 + x22:0 * x22:0 * x22:0, 1 + x26:0, x27:0) :|: x21:0 < 1000 && x26:0 < 1001 && x26:0 > 1 && x26:0 * x26:0 * x26:0 < 1 + x22:0 * x22:0 * x22:0 && x27:0 < 1000 && x22:0 < 1001 && times~x22:0~x22:0 = x22:0 * x22:0 && times~times~x22:0~x22:0~x22:0 = x22:0 * x22:0 * x22:0 && sum~cons_1~times~times~x22:0~x22:0~x22:0 = 1 + x22:0 * x22:0 * x22:0

----------------------------------------

(44)
Complex Obligation (AND)

----------------------------------------

(45)
Obligation:
Rules:
f_2912(x28:0, x29:0, times~x29:0~x29:0, times~times~x29:0~x29:0~x29:0, sum~cons_1~times~times~x29:0~x29:0~x29:0, x33:0, x34:0) -> f_2912(x33:0, x29:0, x29:0 * x29:0, x29:0 * x29:0 * x29:0, 1 + x29:0 * x29:0 * x29:0, 1 + x33:0, x34:0) :|: x28:0 < 1000 && x33:0 < 1001 && x33:0 > 1 && x33:0 * x33:0 * x33:0 > 1 + x29:0 * x29:0 * x29:0 && x34:0 < 1000 && x29:0 < 1001 && times~x29:0~x29:0 = x29:0 * x29:0 && times~times~x29:0~x29:0~x29:0 = x29:0 * x29:0 * x29:0 && sum~cons_1~times~times~x29:0~x29:0~x29:0 = 1 + x29:0 * x29:0 * x29:0
f_2912(x21:0, x22:0, times~x22:0~x22:0, times~times~x22:0~x22:0~x22:0, sum~cons_1~times~times~x22:0~x22:0~x22:0, x26:0, x27:0) -> f_2912(x26:0, x22:0, x22:0 * x22:0, x22:0 * x22:0 * x22:0, 1 + x22:0 * x22:0 * x22:0, 1 + x26:0, x27:0) :|: x21:0 < 1000 && x26:0 < 1001 && x26:0 > 1 && x26:0 * x26:0 * x26:0 < 1 + x22:0 * x22:0 * x22:0 && x27:0 < 1000 && x22:0 < 1001 && times~x22:0~x22:0 = x22:0 * x22:0 && times~times~x22:0~x22:0~x22:0 = x22:0 * x22:0 * x22:0 && sum~cons_1~times~times~x22:0~x22:0~x22:0 = 1 + x22:0 * x22:0 * x22:0

----------------------------------------

(46) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(47)
Obligation:
Rules:
f_2912(x21:0:0, x22:0:0, times~x22:0:0~x22:0:0, times~times~x22:0:0~x22:0:0~x22:0:0, sum~cons_1~times~times~x22:0:0~x22:0:0~x22:0:0, x26:0:0, x27:0:0) -> f_2912(x26:0:0, x22:0:0, x22:0:0 * x22:0:0, x22:0:0 * x22:0:0 * x22:0:0, 1 + x22:0:0 * x22:0:0 * x22:0:0, 1 + x26:0:0, x27:0:0) :|: x27:0:0 < 1000 && x22:0:0 < 1001 && x26:0:0 * x26:0:0 * x26:0:0 < 1 + x22:0:0 * x22:0:0 * x22:0:0 && x26:0:0 > 1 && x26:0:0 < 1001 && x21:0:0 < 1000 && times~x22:0:0~x22:0:0 = x22:0:0 * x22:0:0 && times~times~x22:0:0~x22:0:0~x22:0:0 = x22:0:0 * x22:0:0 * x22:0:0 && sum~cons_1~times~times~x22:0:0~x22:0:0~x22:0:0 = 1 + x22:0:0 * x22:0:0 * x22:0:0
f_2912(x28:0:0, x29:0:0, times~x29:0:0~x29:0:0, times~times~x29:0:0~x29:0:0~x29:0:0, sum~cons_1~times~times~x29:0:0~x29:0:0~x29:0:0, x33:0:0, x34:0:0) -> f_2912(x33:0:0, x29:0:0, x29:0:0 * x29:0:0, x29:0:0 * x29:0:0 * x29:0:0, 1 + x29:0:0 * x29:0:0 * x29:0:0, 1 + x33:0:0, x34:0:0) :|: x34:0:0 < 1000 && x29:0:0 < 1001 && x33:0:0 * x33:0:0 * x33:0:0 > 1 + x29:0:0 * x29:0:0 * x29:0:0 && x33:0:0 > 1 && x33:0:0 < 1001 && x28:0:0 < 1000 && times~x29:0:0~x29:0:0 = x29:0:0 * x29:0:0 && times~times~x29:0:0~x29:0:0~x29:0:0 = x29:0:0 * x29:0:0 * x29:0:0 && sum~cons_1~times~times~x29:0:0~x29:0:0~x29:0:0 = 1 + x29:0:0 * x29:0:0 * x29:0:0

----------------------------------------

(48) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_2912 ] = -1*f_2912_6

The following rules are decreasing:
f_2912(x21:0:0, x22:0:0, times~x22:0:0~x22:0:0, times~times~x22:0:0~x22:0:0~x22:0:0, sum~cons_1~times~times~x22:0:0~x22:0:0~x22:0:0, x26:0:0, x27:0:0) -> f_2912(x26:0:0, x22:0:0, x22:0:0 * x22:0:0, x22:0:0 * x22:0:0 * x22:0:0, 1 + x22:0:0 * x22:0:0 * x22:0:0, 1 + x26:0:0, x27:0:0) :|: x27:0:0 < 1000 && x22:0:0 < 1001 && x26:0:0 * x26:0:0 * x26:0:0 < 1 + x22:0:0 * x22:0:0 * x22:0:0 && x26:0:0 > 1 && x26:0:0 < 1001 && x21:0:0 < 1000 && times~x22:0:0~x22:0:0 = x22:0:0 * x22:0:0 && times~times~x22:0:0~x22:0:0~x22:0:0 = x22:0:0 * x22:0:0 * x22:0:0 && sum~cons_1~times~times~x22:0:0~x22:0:0~x22:0:0 = 1 + x22:0:0 * x22:0:0 * x22:0:0
f_2912(x28:0:0, x29:0:0, times~x29:0:0~x29:0:0, times~times~x29:0:0~x29:0:0~x29:0:0, sum~cons_1~times~times~x29:0:0~x29:0:0~x29:0:0, x33:0:0, x34:0:0) -> f_2912(x33:0:0, x29:0:0, x29:0:0 * x29:0:0, x29:0:0 * x29:0:0 * x29:0:0, 1 + x29:0:0 * x29:0:0 * x29:0:0, 1 + x33:0:0, x34:0:0) :|: x34:0:0 < 1000 && x29:0:0 < 1001 && x33:0:0 * x33:0:0 * x33:0:0 > 1 + x29:0:0 * x29:0:0 * x29:0:0 && x33:0:0 > 1 && x33:0:0 < 1001 && x28:0:0 < 1000 && times~x29:0:0~x29:0:0 = x29:0:0 * x29:0:0 && times~times~x29:0:0~x29:0:0~x29:0:0 = x29:0:0 * x29:0:0 * x29:0:0 && sum~cons_1~times~times~x29:0:0~x29:0:0~x29:0:0 = 1 + x29:0:0 * x29:0:0 * x29:0:0

The following rules are bounded:
f_2912(x21:0:0, x22:0:0, times~x22:0:0~x22:0:0, times~times~x22:0:0~x22:0:0~x22:0:0, sum~cons_1~times~times~x22:0:0~x22:0:0~x22:0:0, x26:0:0, x27:0:0) -> f_2912(x26:0:0, x22:0:0, x22:0:0 * x22:0:0, x22:0:0 * x22:0:0 * x22:0:0, 1 + x22:0:0 * x22:0:0 * x22:0:0, 1 + x26:0:0, x27:0:0) :|: x27:0:0 < 1000 && x22:0:0 < 1001 && x26:0:0 * x26:0:0 * x26:0:0 < 1 + x22:0:0 * x22:0:0 * x22:0:0 && x26:0:0 > 1 && x26:0:0 < 1001 && x21:0:0 < 1000 && times~x22:0:0~x22:0:0 = x22:0:0 * x22:0:0 && times~times~x22:0:0~x22:0:0~x22:0:0 = x22:0:0 * x22:0:0 * x22:0:0 && sum~cons_1~times~times~x22:0:0~x22:0:0~x22:0:0 = 1 + x22:0:0 * x22:0:0 * x22:0:0
f_2912(x28:0:0, x29:0:0, times~x29:0:0~x29:0:0, times~times~x29:0:0~x29:0:0~x29:0:0, sum~cons_1~times~times~x29:0:0~x29:0:0~x29:0:0, x33:0:0, x34:0:0) -> f_2912(x33:0:0, x29:0:0, x29:0:0 * x29:0:0, x29:0:0 * x29:0:0 * x29:0:0, 1 + x29:0:0 * x29:0:0 * x29:0:0, 1 + x33:0:0, x34:0:0) :|: x34:0:0 < 1000 && x29:0:0 < 1001 && x33:0:0 * x33:0:0 * x33:0:0 > 1 + x29:0:0 * x29:0:0 * x29:0:0 && x33:0:0 > 1 && x33:0:0 < 1001 && x28:0:0 < 1000 && times~x29:0:0~x29:0:0 = x29:0:0 * x29:0:0 && times~times~x29:0:0~x29:0:0~x29:0:0 = x29:0:0 * x29:0:0 * x29:0:0 && sum~cons_1~times~times~x29:0:0~x29:0:0~x29:0:0 = 1 + x29:0:0 * x29:0:0 * x29:0:0


----------------------------------------

(49)
YES

----------------------------------------

(50)
Obligation:
Rules:
f_2912(x7:0, x8:0, x9:0, x10:0, x11:0, x12:0, x13:0) -> f_2912(2, 1 + x8:0, 1 + x8:0 + (x8:0 + x8:0 * x8:0), 1 + x8:0 + (x8:0 + x8:0 * x8:0) + (x8:0 + x8:0 * x8:0 + x8:0 * x8:0 * (1 + x8:0)), 1 + (1 + x8:0 + (x8:0 + x8:0 * x8:0) + (x8:0 + x8:0 * x8:0 + x8:0 * x8:0 * (1 + x8:0))), 3, x8:0) :|: x8:0 > 1 && x8:0 < 1001 && 7 < 1 + x8:0 + (x8:0 + x8:0 * x8:0) + (x8:0 + x8:0 * x8:0 + x8:0 * x8:0 * (1 + x8:0)) && x12:0 > 1000 && x7:0 > 999 && x8:0 < 1000 && 1 + x8:0 + (x8:0 + x8:0 * x8:0) + (x8:0 + x8:0 * x8:0 + x8:0 * x8:0 * (1 + x8:0)) < 0
f_2912(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0) -> f_2912(2, 1 + x1:0, 1 + x1:0 + (x1:0 + x1:0 * x1:0), 1 + x1:0 + (x1:0 + x1:0 * x1:0) + (x1:0 + x1:0 * x1:0 + x1:0 * x1:0 * (1 + x1:0)), 1 + (1 + x1:0 + (x1:0 + x1:0 * x1:0) + (x1:0 + x1:0 * x1:0 + x1:0 * x1:0 * (1 + x1:0))), 3, x1:0) :|: x1:0 > 1 && x1:0 < 1001 && 7 > 1 + x1:0 + (x1:0 + x1:0 * x1:0) + (x1:0 + x1:0 * x1:0 + x1:0 * x1:0 * (1 + x1:0)) && x5:0 > 1000 && x:0 > 999 && x1:0 < 1000 && 1 + x1:0 + (x1:0 + x1:0 * x1:0) + (x1:0 + x1:0 * x1:0 + x1:0 * x1:0 * (1 + x1:0)) > 0
f_2912(v12894:0:0, v12888:0:0, v12889:0:0, v12890:0:0, v12892:0:0, v13910:0:0, v12896:0:0) -> f_2912(2, 1 + v12888:0:0, 1 + v12888:0:0 + (v12888:0:0 + v12888:0:0 * v12888:0:0), 1 + v12888:0:0 + (v12888:0:0 + v12888:0:0 * v12888:0:0) + (v12888:0:0 + v12888:0:0 * v12888:0:0 + v12888:0:0 * v12888:0:0 * (1 + v12888:0:0)), 1 + (1 + v12888:0:0 + (v12888:0:0 + v12888:0:0 * v12888:0:0) + (v12888:0:0 + v12888:0:0 * v12888:0:0 + v12888:0:0 * v12888:0:0 * (1 + v12888:0:0))), 3, v12888:0:0) :|: v12888:0:0 > 1 && v12888:0:0 < 1001 && v13910:0:0 > 1000 && v12894:0:0 > 999 && 7 < 1 + v12888:0:0 + (v12888:0:0 + v12888:0:0 * v12888:0:0) + (v12888:0:0 + v12888:0:0 * v12888:0:0 + v12888:0:0 * v12888:0:0 * (1 + v12888:0:0)) && v12888:0:0 < 1000
f_2912(x14:0, x15:0, x16:0, x17:0, x18:0, x19:0, x20:0) -> f_2912(2, 1 + x15:0, 1 + x15:0 + (x15:0 + x15:0 * x15:0), 1 + x15:0 + (x15:0 + x15:0 * x15:0) + (x15:0 + x15:0 * x15:0 + x15:0 * x15:0 * (1 + x15:0)), 1 + (1 + x15:0 + (x15:0 + x15:0 * x15:0) + (x15:0 + x15:0 * x15:0 + x15:0 * x15:0 * (1 + x15:0))), 3, x15:0) :|: x15:0 > 1 && x15:0 < 1001 && 7 > 1 + x15:0 + (x15:0 + x15:0 * x15:0) + (x15:0 + x15:0 * x15:0 + x15:0 * x15:0 * (1 + x15:0)) && x19:0 > 1000 && x14:0 > 999 && x15:0 < 1000 && 1 + x15:0 + (x15:0 + x15:0 * x15:0) + (x15:0 + x15:0 * x15:0 + x15:0 * x15:0 * (1 + x15:0)) < 0

----------------------------------------

(51) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained no non-trivial SCC(s).

----------------------------------------

(52)
YES

----------------------------------------

(53)
Obligation:
SCC
----------------------------------------

(54) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 53 rulesP rules:
f_783(v227, v228, v229, v230, v231, v232, v233, v234, v235, v236, v237, v238, 1, 2, 0, v242, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) -> f_784(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v236, v237, v238, 1, 2, 0, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) :|: 0 = 0
f_784(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v236, v237, v238, 1, 2, 0, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) -> f_785(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v236, v237, v238, 1, 2, 0, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) :|: 0 = 0
f_785(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v236, v237, v238, 1, 2, 0, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) -> f_786(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v237, v236, v238, 1, 2, 0, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) :|: 0 = 0
f_786(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v237, v236, v238, 1, 2, 0, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) -> f_787(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v236, v238, 1, 2, 0, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) :|: v253 = v242 * v242
f_787(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v236, v238, 1, 2, 0, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) -> f_788(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v236, v238, 1, 2, 0, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) :|: 0 = 0
f_788(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v236, v238, 1, 2, 0, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) -> f_789(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v238, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) :|: 0 = 0
f_789(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v238, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) -> f_790(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) :|: v254 = v253 * v242
f_790(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) -> f_791(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) :|: 0 = 0
f_791(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) -> f_792(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) :|: 0 = 0
f_792(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) -> f_793(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) :|: 0 = 0
f_793(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) -> f_794(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) :|: 0 = 0
f_794(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) -> f_795(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) :|: 0 = 0
f_795(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) -> f_796(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) :|: 0 = 0
f_796(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) -> f_797(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) :|: 0 = 0
f_797(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) -> f_798(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) :|: 0 = 0
f_798(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) -> f_799(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) :|: 0 = 0
f_799(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) -> f_800(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) :|: 0 = 0
f_800(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) -> f_801(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) :|: 0 = 0
f_801(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) -> f_802(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) :|: 0 = 0
f_802(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) -> f_803(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) :|: 0 = 0
f_803(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) -> f_804(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) :|: 0 = 0
f_804(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) -> f_805(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) :|: 0 = 0
f_805(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) -> f_806(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) :|: 0 = 0
f_806(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) -> f_807(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) :|: 0 = 0
f_807(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) -> f_809(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) :|: v254 != 2
f_809(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) -> f_811(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) :|: 0 = 0
f_811(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) -> f_813(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) :|: TRUE
f_813(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) -> f_815(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) :|: 0 = 0
f_815(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v236, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) -> f_817(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) :|: 0 = 0
f_817(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) -> f_819(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) :|: v255 = 1 + v242 && 3 <= v255
f_819(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) -> f_820(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) :|: TRUE
f_820(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) -> f_821(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) :|: 0 = 0
f_821(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) -> f_822(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) :|: 0 = 0
f_822(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) -> f_823(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) :|: 0 = 0
f_823(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) -> f_824(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) :|: 0 = 0
f_824(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) -> f_826(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 999, 4, 8) :|: v255 <= 1000 && v242 <= 999
f_826(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 999, 4, 8) -> f_828(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 999, 4, 8) :|: 0 = 0
f_828(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 999, 4, 8) -> f_830(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 999, 4, 8) :|: TRUE
f_830(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 999, 4, 8) -> f_832(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 999, 4, 8) :|: 0 = 0
f_832(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 999, 4, 8) -> f_834(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 999, 4, 8) :|: 0 = 0
f_834(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 999, 4, 8) -> f_836(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 999, 4, 8) :|: 0 = 0
f_836(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 999, 4, 8) -> f_838(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 999, 4, 8) :|: 0 = 0
f_838(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 999, 4, 8) -> f_840(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 999, 4, 8) :|: 0 = 0
f_840(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 999, 4, 8) -> f_842(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 999, 4, 8) :|: TRUE
f_842(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 999, 4, 8) -> f_844(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 999, 4, 8) :|: 0 = 0
f_844(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 999, 4, 8) -> f_846(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 999, 4, 8) :|: 0 = 0
f_846(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 999, 4, 8) -> f_848(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 999, 4, 8) :|: 0 = 0
f_848(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 999, 4, 8) -> f_850(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 999, 4, 8) :|: 0 = 0
f_850(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 999, 4, 8) -> f_852(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 999, 4, 8) :|: 0 = 0
f_852(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 999, 4, 8) -> f_854(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 999, 4, 8) :|: TRUE
f_854(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 999, 4, 8) -> f_856(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 999, 4, 8) :|: TRUE
f_856(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 999, 4, 8) -> f_782(v227, v228, v229, v230, v231, v232, v233, v234, v235, v242, v253, v254, 1, 2, 0, v255, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) :|: TRUE
f_782(v227, v228, v229, v230, v231, v232, v233, v234, v235, v236, v237, v238, 1, 2, 0, v242, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) -> f_783(v227, v228, v229, v230, v231, v232, v233, v234, v235, v236, v237, v238, 1, 2, 0, v242, 1000, v244, v245, v246, v247, v248, v249, v250, v251, v252, 3, 7, 4, 8) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_783(v227:0, v228:0, v229:0, v230:0, v231:0, v232:0, v233:0, v234:0, v235:0, v236:0, v237:0, v238:0, 1, 2, 0, v242:0, 1000, v244:0, v245:0, v246:0, v247:0, v248:0, v249:0, v250:0, v251:0, v252:0, 3, 7, 4, 8) -> f_783(v227:0, v228:0, v229:0, v230:0, v231:0, v232:0, v233:0, v234:0, v235:0, v242:0, v242:0 * v242:0, v242:0 * v242:0 * v242:0, 1, 2, 0, 1 + v242:0, 1000, v244:0, v245:0, v246:0, v247:0, v248:0, v249:0, v250:0, v251:0, v252:0, 3, 7, 4, 8) :|: v242:0 * v242:0 * v242:0 < 2 && v242:0 > 1 && v242:0 < 1000
f_783(v227:0, v228:0, v229:0, v230:0, v231:0, v232:0, v233:0, v234:0, v235:0, v236:0, v237:0, v238:0, 1, 2, 0, v242:0, 1000, v244:0, v245:0, v246:0, v247:0, v248:0, v249:0, v250:0, v251:0, v252:0, 3, 7, 4, 8) -> f_783(v227:0, v228:0, v229:0, v230:0, v231:0, v232:0, v233:0, v234:0, v235:0, v242:0, v242:0 * v242:0, v242:0 * v242:0 * v242:0, 1, 2, 0, 1 + v242:0, 1000, v244:0, v245:0, v246:0, v247:0, v248:0, v249:0, v250:0, v251:0, v252:0, 3, 7, 4, 8) :|: v242:0 * v242:0 * v242:0 > 2 && v242:0 > 1 && v242:0 < 1000
Filtered unneeded arguments:
   f_783(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30) -> f_783(x16)
Removed division, modulo operations, cleaned up constraints. Obtained 2 rules.P rules:
f_783(v242:0) -> f_783(1 + v242:0) :|: v242:0 > 1 && v242:0 < 1000 && v242:0 * v242:0 * v242:0 < 2
f_783(v242:0) -> f_783(1 + v242:0) :|: v242:0 > 1 && v242:0 < 1000 && v242:0 * v242:0 * v242:0 > 2

----------------------------------------

(55)
Obligation:
Rules:
f_783(v242:0) -> f_783(1 + v242:0) :|: v242:0 > 1 && v242:0 < 1000 && v242:0 * v242:0 * v242:0 < 2
f_783(x) -> f_783(1 + x) :|: x > 1 && x < 1000 && x * x * x > 2

----------------------------------------

(56) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(57)
Obligation:
Rules:
f_783(v242:0:0) -> f_783(1 + v242:0:0) :|: v242:0:0 > 1 && v242:0:0 < 1000 && v242:0:0 * v242:0:0 * v242:0:0 < 2
f_783(x:0) -> f_783(1 + x:0) :|: x:0 > 1 && x:0 < 1000 && x:0 * x:0 * x:0 > 2

----------------------------------------

(58) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_783(x)] = 999 - x

The following rules are decreasing:
f_783(v242:0:0) -> f_783(1 + v242:0:0) :|: v242:0:0 > 1 && v242:0:0 < 1000 && v242:0:0 * v242:0:0 * v242:0:0 < 2
f_783(x:0) -> f_783(1 + x:0) :|: x:0 > 1 && x:0 < 1000 && x:0 * x:0 * x:0 > 2
The following rules are bounded:
f_783(v242:0:0) -> f_783(1 + v242:0:0) :|: v242:0:0 > 1 && v242:0:0 < 1000 && v242:0:0 * v242:0:0 * v242:0:0 < 2
f_783(x:0) -> f_783(1 + x:0) :|: x:0 > 1 && x:0 < 1000 && x:0 * x:0 * x:0 > 2

----------------------------------------

(59)
YES
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.001s
