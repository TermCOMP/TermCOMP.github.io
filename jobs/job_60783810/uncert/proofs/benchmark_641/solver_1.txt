MAYBE
proof of /hpcwork/ff862203/termcomp25/benchmarks/527RD.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could not be shown:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 68 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 4327 ms]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) LLVM Symbolic Execution SCC
        (8) SCC2IRS [SOUND, 20 ms]
        (9) IntTRS
            (10) IntTRSPeriodicNontermProof [COMPLETE, 2 ms]
            (11) NO
        (12) SCC2IRS [SOUND, 17 ms]
        (13) IntTRS
            (14) IntTRSCompressionProof [EQUIVALENT, 0 ms]
            (15) IntTRS
    (16) LLVM Symbolic Execution SCC
        (17) SCC2IRS [SOUND, 28 ms]
        (18) IntTRS
        (19) TerminationGraphProcessor [EQUIVALENT, 1 ms]
        (20) IntTRS
        (21) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (22) IntTRS
    (23) LLVM Symbolic Execution SCC
        (24) SCC2IRS [SOUND, 27 ms]
        (25) IntTRS
            (26) IntTRSPeriodicNontermProof [COMPLETE, 1 ms]
            (27) NO
        (28) SCC2IRS [SOUND, 18 ms]
        (29) IntTRS
            (30) IntTRSCompressionProof [EQUIVALENT, 0 ms]
            (31) IntTRS
            (32) IntTRSPeriodicNontermProof [COMPLETE, 6 ms]
            (33) NO
    (34) LLVM Symbolic Execution SCC
        (35) SCC2IRS [SOUND, 21 ms]
        (36) IntTRS
        (37) TerminationGraphProcessor [EQUIVALENT, 0 ms]
        (38) IntTRS
        (39) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (40) IntTRS
    (41) LLVM Symbolic Execution SCC
        (42) SCC2IRS [SOUND, 100 ms]
        (43) IntTRS


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/527RD.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/527RD.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

struct.node --> BasicStructureType(elementType: i32, elementType: *struct.node)

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "llvm.dbg.label" returnParam: BasicVoidType parameters: (BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "malloc" returnParam: *i8 noalias parameters: (i64) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: true visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_error" returnParam: BasicVoidType parameters: () variableLength: true visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "free" returnParam: BasicVoidType parameters: (*i8) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "exit" linkageType: EXTERNALLY_VISIBLE returnParam: BasicVoidType parameters: (0 i32) variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 16
	0:
		%2 = alloca i32, align 4
		store %0, %2
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		br %3
	3:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.label()
		br %3

*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 25
	0:
		%1 = alloca i32, align 4
		%2 = alloca *BasicTypeName typeName: struct.nodeBasicStructureType(elementType: i32, elementType: *struct.node), align 8
		%3 = alloca *BasicTypeName typeName: struct.nodeBasicStructureType(elementType: i32, elementType: *struct.node), align 8
		%4 = alloca *BasicTypeName typeName: struct.nodeBasicStructureType(elementType: i32, elementType: *struct.node), align 8
		%5 = alloca i32, align 4
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**BasicTypeName typeName: struct.nodeBasicStructureType(elementType: i32, elementType: *struct.node) %2)
		%6 = call noalias *i8 @malloc(i64 16)
		%7 = bitcast *i8 %6 to *BasicTypeName typeName: struct.nodeBasicStructureType(elementType: i32, elementType: *struct.node)
		store %7, %2
		%8 = load %2
		%9 = icmp eq %8 null
		br %9, %10, %11
	10:
		Unnamed Call-Instruction = call BasicVoidType @exit(i32 1)
		unreachable
	11:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**BasicTypeName typeName: struct.nodeBasicStructureType(elementType: i32, elementType: *struct.node) %3)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**BasicTypeName typeName: struct.nodeBasicStructureType(elementType: i32, elementType: *struct.node) %4)
		%12 = load %2
		store %12, %4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %5)
		store 0, %5
		br %13
	13:
		%14 = load %5
		%15 = icmp slt %14 30
		br %15, %16, %19
	16:
		%17 = call i32 (...)* @__VERIFIER_nondet_int()
		%18 = icmp ne %17 0
		br %19
	19:
		%20 = phi [0, %13], [%18, %16]
		br %20, %21, %39
	21:
		%22 = load %5
		%23 = load %4
		%24 = getelementptr %23, 0, 0
		store %22, %24
		%25 = call noalias *i8 @malloc(i64 16)
		%26 = bitcast *i8 %25 to *BasicTypeName typeName: struct.nodeBasicStructureType(elementType: i32, elementType: *struct.node)
		store %26, %3
		%27 = load %3
		%28 = icmp eq %27 null
		br %28, %29, %30
	29:
		Unnamed Call-Instruction = call BasicVoidType @exit(i32 1)
		unreachable
	30:
		%31 = load %3
		%32 = load %4
		%33 = getelementptr %32, 0, 1
		store %31, %33
		%34 = load %4
		%35 = getelementptr %34, 0, 1
		%36 = load %35
		store %36, %4
		%37 = load %5
		%38 = add i32 %37, 1
		store %38, %5
		br %13
	39:
		%40 = load %5
		%41 = load %4
		%42 = getelementptr %41, 0, 0
		store %40, %42
		%43 = load %4
		%44 = getelementptr %43, 0, 1
		store null, %44
		%45 = load %2
		store %45, %4
		store 0, %5
		br %46
	46:
		%47 = load %4
		%48 = icmp ne %47 null
		br %48, %49, %63
	49:
		%50 = load %4
		%51 = getelementptr %50, 0, 0
		%52 = load %51
		%53 = load %5
		%54 = icmp ne %52 %53
		br %54, %55, %57
	55:
		br %56
	56:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.label()
		Unnamed Call-Instruction = call BasicVoidType (...)* @__VERIFIER_error()
		unreachable
	57:
		%58 = load %4
		%59 = getelementptr %58, 0, 1
		%60 = load %59
		store %60, %4
		%61 = load %5
		%62 = add i32 %61, 1
		store %62, %5
		br %46
	63:
		%64 = load %2
		store %64, %4
		br %65
	65:
		%66 = load %4
		%67 = icmp ne %66 null
		br %67, %68, %75
	68:
		%69 = load %4
		%70 = getelementptr %69, 0, 1
		%71 = load %70
		store %71, %3
		%72 = load %4
		%73 = bitcast *BasicTypeName typeName: struct.nodeBasicStructureType(elementType: i32, elementType: *struct.node) %72 to *i8
		Unnamed Call-Instruction = call BasicVoidType @free(*i8 %73)
		%74 = load %3
		store %74, %4
		br %65
	75:
		ret 0


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 5 SCCs.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC
----------------------------------------

(8) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 15 rulesP rules:
f_1477(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6259, v6260, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1478(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6259, v6260, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: 0 < v6261
f_1478(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6259, v6260, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1480(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6259, v6260, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: 0 = 0
f_1480(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6259, v6260, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1482(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6259, v6260, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: TRUE
f_1482(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6259, v6260, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1484(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6260, v6259, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: 0 = 0
f_1484(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6260, v6259, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1485(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6353, v6259, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: v6353 = 8 + v6261 && 9 <= v6353
f_1485(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6353, v6259, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1486(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6353, v6354, v6259, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: TRUE
f_1486(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6353, v6354, v6259, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1487(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6353, v6354, v6259, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: TRUE
f_1487(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6353, v6354, v6259, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1488(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6353, v6354, v6259, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: 0 = 0
f_1488(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6353, v6354, v6259, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1489(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6353, v6354, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: 0 = 0
f_1489(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6353, v6354, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1490(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6353, v6354, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: TRUE
f_1490(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6353, v6354, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1491(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6353, v6354, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: 0 = 0
f_1491(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6353, v6354, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1492(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6353, v6354, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: TRUE
f_1492(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6353, v6354, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1493(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6353, v6354, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: TRUE
f_1493(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6353, v6354, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1476(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6353, v6354, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: TRUE
f_1476(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6259, v6260, v6261, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1477(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6259, v6260, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_1477(v6233:0, v6234:0, v6235:0, v6236:0, v6237:0, v6238:0, 0, v6240:0, v6241:0, 1, v6243:0, v6244:0, v6245:0, v6246:0, v6247:0, v6248:0, v6249:0, v6250:0, v6251:0, v6252:0, v6253:0, v6254:0, v6255:0, v6256:0, v6257:0, v6258:0, v6261:0, v6259:0, v6260:0, v6262:0, v6263:0, v6264:0, v6265:0, v6266:0, v6267:0, v6268:0, v6269:0, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1477(v6233:0, v6234:0, v6235:0, v6236:0, v6237:0, v6238:0, 0, v6240:0, v6241:0, 1, v6243:0, v6244:0, v6245:0, v6246:0, v6247:0, v6248:0, v6249:0, v6250:0, v6251:0, v6252:0, v6253:0, v6254:0, v6255:0, v6256:0, v6257:0, v6258:0, v6354:0, v6261:0, 8 + v6261:0, v6262:0, v6263:0, v6264:0, v6265:0, v6266:0, v6267:0, v6268:0, v6269:0, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: v6261:0 > 0
Filtered unneeded arguments:
   f_1477(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46) -> f_1477(x27)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1477(v6261:0) -> f_1477(v6354:0) :|: v6261:0 > 0

----------------------------------------

(9)
Obligation:
Rules:
f_1477(v6261:0) -> f_1477(v6354:0) :|: v6261:0 > 0

----------------------------------------

(10) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, v6261:0) -> f(1, v6354:0) :|: pc = 1 && v6261:0 > 0
Witness term starting non-terminating reduction: f(1, 1)
----------------------------------------

(11)
NO

----------------------------------------

(12) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 15 rulesP rules:
f_1477(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6259, v6260, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1478(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6259, v6260, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: 0 < v6261
f_1478(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6259, v6260, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1480(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6259, v6260, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: 0 = 0
f_1480(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6259, v6260, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1482(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6259, v6260, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: TRUE
f_1482(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6259, v6260, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1484(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6260, v6259, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: 0 = 0
f_1484(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6260, v6259, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1485(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6353, v6259, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: v6353 = 8 + v6261 && 9 <= v6353
f_1485(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6353, v6259, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1486(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6353, v6354, v6259, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: TRUE
f_1486(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6353, v6354, v6259, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1487(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6353, v6354, v6259, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: TRUE
f_1487(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6353, v6354, v6259, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1488(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6353, v6354, v6259, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: 0 = 0
f_1488(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6353, v6354, v6259, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1489(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6353, v6354, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: 0 = 0
f_1489(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6353, v6354, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1490(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6353, v6354, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: TRUE
f_1490(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6353, v6354, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1491(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6353, v6354, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: 0 = 0
f_1491(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6353, v6354, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1492(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6353, v6354, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: TRUE
f_1492(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6353, v6354, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1493(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6353, v6354, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: TRUE
f_1493(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6353, v6354, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1476(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6353, v6354, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: 1 <= v6233 && 1 <= v6234 && 1 <= v6235 && 1 <= v6236 && 1 <= v6237 && 1 <= v6238 && 30 <= v6240 && v6243 <= 29 && 0 <= v6244 && 1 <= v6245 && 0 <= v6246 && 8 <= v6247 && 0 <= v6248 && 8 <= v6249 && 0 <= v6250 && 29 <= v6251 && 0 <= v6252 && 8 <= v6253 && 1 <= v6254 && 1 <= v6255 && 0 <= v6256 && 9 <= v6257 && 1 <= v6258 && 1 <= v6261 && 9 <= v6353 && 0 <= v6354 && 4 <= v6262 && 8 <= v6263 && 8 <= v6264 && 8 <= v6265 && 4 <= v6266 && 16 <= v6267 && 1 <= v6268 && 16 <= v6269 && v6233 <= v6262 && v6234 <= v6263 && v6235 <= v6264 && v6236 <= v6265 && v6237 <= v6266 && v6245 <= v6267 && v6268 <= v6269
f_1476(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6259, v6260, v6261, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1477(v6233, v6234, v6235, v6236, v6237, v6238, 0, v6240, v6241, 1, v6243, v6244, v6245, v6246, v6247, v6248, v6249, v6250, v6251, v6252, v6253, v6254, v6255, v6256, v6257, v6258, v6261, v6259, v6260, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_1477(v6233:0, v6234:0, v6235:0, v6236:0, v6237:0, v6238:0, 0, v6240:0, v6241:0, 1, v6243:0, v6244:0, v6245:0, v6246:0, v6247:0, v6248:0, v6249:0, v6250:0, v6251:0, v6252:0, v6253:0, v6254:0, v6255:0, v6256:0, v6257:0, v6258:0, v6261:0, v6259:0, v6260:0, v6262:0, v6263:0, v6264:0, v6265:0, v6266:0, v6267:0, v6268:0, v6269:0, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1477(v6233:0, v6234:0, v6235:0, v6236:0, v6237:0, v6238:0, 0, v6240:0, v6241:0, 1, v6243:0, v6244:0, v6245:0, v6246:0, v6247:0, v6248:0, v6249:0, v6250:0, v6251:0, v6252:0, v6253:0, v6254:0, v6255:0, v6256:0, v6257:0, v6258:0, v6354:0, v6261:0, 8 + v6261:0, v6262:0, v6263:0, v6264:0, v6265:0, v6266:0, v6267:0, v6268:0, v6269:0, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: v6234:0 > 0 && v6233:0 > 0 && v6235:0 > 0 && v6236:0 > 0 && v6237:0 > 0 && v6238:0 > 0 && v6240:0 > 29 && v6243:0 < 30 && v6244:0 > -1 && v6245:0 > 0 && v6246:0 > -1 && v6247:0 > 7 && v6248:0 > -1 && v6249:0 > 7 && v6250:0 > -1 && v6251:0 > 28 && v6252:0 > -1 && v6253:0 > 7 && v6254:0 > 0 && v6255:0 > 0 && v6256:0 > -1 && v6257:0 > 8 && v6258:0 > 0 && v6261:0 > 0 && v6354:0 > -1 && v6262:0 > 3 && v6263:0 > 7 && v6264:0 > 7 && v6265:0 > 7 && v6266:0 > 3 && v6267:0 > 15 && v6268:0 > 0 && v6269:0 > 15 && v6262:0 >= v6233:0 && v6263:0 >= v6234:0 && v6264:0 >= v6235:0 && v6265:0 >= v6236:0 && v6266:0 >= v6237:0 && v6269:0 >= v6268:0 && v6267:0 >= v6245:0
Filtered unneeded arguments:
   f_1477(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46) -> f_1477(x1, x2, x3, x4, x5, x6, x8, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x30, x31, x32, x33, x34, x35, x36, x37)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1477(v6233:0, v6234:0, v6235:0, v6236:0, v6237:0, v6238:0, v6240:0, v6243:0, v6244:0, v6245:0, v6246:0, v6247:0, v6248:0, v6249:0, v6250:0, v6251:0, v6252:0, v6253:0, v6254:0, v6255:0, v6256:0, v6257:0, v6258:0, v6261:0, v6262:0, v6263:0, v6264:0, v6265:0, v6266:0, v6267:0, v6268:0, v6269:0) -> f_1477(v6233:0, v6234:0, v6235:0, v6236:0, v6237:0, v6238:0, v6240:0, v6243:0, v6244:0, v6245:0, v6246:0, v6247:0, v6248:0, v6249:0, v6250:0, v6251:0, v6252:0, v6253:0, v6254:0, v6255:0, v6256:0, v6257:0, v6258:0, v6354:0, v6262:0, v6263:0, v6264:0, v6265:0, v6266:0, v6267:0, v6268:0, v6269:0) :|: v6233:0 > 0 && v6234:0 > 0 && v6235:0 > 0 && v6236:0 > 0 && v6237:0 > 0 && v6238:0 > 0 && v6240:0 > 29 && v6243:0 < 30 && v6244:0 > -1 && v6245:0 > 0 && v6246:0 > -1 && v6247:0 > 7 && v6248:0 > -1 && v6249:0 > 7 && v6250:0 > -1 && v6251:0 > 28 && v6252:0 > -1 && v6253:0 > 7 && v6254:0 > 0 && v6255:0 > 0 && v6256:0 > -1 && v6257:0 > 8 && v6258:0 > 0 && v6261:0 > 0 && v6354:0 > -1 && v6262:0 > 3 && v6263:0 > 7 && v6264:0 > 7 && v6265:0 > 7 && v6266:0 > 3 && v6267:0 > 15 && v6268:0 > 0 && v6269:0 > 15 && v6262:0 >= v6233:0 && v6263:0 >= v6234:0 && v6264:0 >= v6235:0 && v6265:0 >= v6236:0 && v6266:0 >= v6237:0 && v6267:0 >= v6245:0 && v6269:0 >= v6268:0

----------------------------------------

(13)
Obligation:
Rules:
f_1477(v6233:0, v6234:0, v6235:0, v6236:0, v6237:0, v6238:0, v6240:0, v6243:0, v6244:0, v6245:0, v6246:0, v6247:0, v6248:0, v6249:0, v6250:0, v6251:0, v6252:0, v6253:0, v6254:0, v6255:0, v6256:0, v6257:0, v6258:0, v6261:0, v6262:0, v6263:0, v6264:0, v6265:0, v6266:0, v6267:0, v6268:0, v6269:0) -> f_1477(v6233:0, v6234:0, v6235:0, v6236:0, v6237:0, v6238:0, v6240:0, v6243:0, v6244:0, v6245:0, v6246:0, v6247:0, v6248:0, v6249:0, v6250:0, v6251:0, v6252:0, v6253:0, v6254:0, v6255:0, v6256:0, v6257:0, v6258:0, v6354:0, v6262:0, v6263:0, v6264:0, v6265:0, v6266:0, v6267:0, v6268:0, v6269:0) :|: v6233:0 > 0 && v6234:0 > 0 && v6235:0 > 0 && v6236:0 > 0 && v6237:0 > 0 && v6238:0 > 0 && v6240:0 > 29 && v6243:0 < 30 && v6244:0 > -1 && v6245:0 > 0 && v6246:0 > -1 && v6247:0 > 7 && v6248:0 > -1 && v6249:0 > 7 && v6250:0 > -1 && v6251:0 > 28 && v6252:0 > -1 && v6253:0 > 7 && v6254:0 > 0 && v6255:0 > 0 && v6256:0 > -1 && v6257:0 > 8 && v6258:0 > 0 && v6261:0 > 0 && v6354:0 > -1 && v6262:0 > 3 && v6263:0 > 7 && v6264:0 > 7 && v6265:0 > 7 && v6266:0 > 3 && v6267:0 > 15 && v6268:0 > 0 && v6269:0 > 15 && v6262:0 >= v6233:0 && v6263:0 >= v6234:0 && v6264:0 >= v6235:0 && v6265:0 >= v6236:0 && v6266:0 >= v6237:0 && v6267:0 >= v6245:0 && v6269:0 >= v6268:0

----------------------------------------

(14) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(15)
Obligation:
Rules:
f_1477(v6233:0:0, v6234:0:0, v6235:0:0, v6236:0:0, v6237:0:0, v6238:0:0, v6240:0:0, v6243:0:0, v6244:0:0, v6245:0:0, v6246:0:0, v6247:0:0, v6248:0:0, v6249:0:0, v6250:0:0, v6251:0:0, v6252:0:0, v6253:0:0, v6254:0:0, v6255:0:0, v6256:0:0, v6257:0:0, v6258:0:0, v6261:0:0, v6262:0:0, v6263:0:0, v6264:0:0, v6265:0:0, v6266:0:0, v6267:0:0, v6268:0:0, v6269:0:0) -> f_1477(v6233:0:0, v6234:0:0, v6235:0:0, v6236:0:0, v6237:0:0, v6238:0:0, v6240:0:0, v6243:0:0, v6244:0:0, v6245:0:0, v6246:0:0, v6247:0:0, v6248:0:0, v6249:0:0, v6250:0:0, v6251:0:0, v6252:0:0, v6253:0:0, v6254:0:0, v6255:0:0, v6256:0:0, v6257:0:0, v6258:0:0, v6354:0:0, v6262:0:0, v6263:0:0, v6264:0:0, v6265:0:0, v6266:0:0, v6267:0:0, v6268:0:0, v6269:0:0) :|: v6267:0:0 >= v6245:0:0 && v6269:0:0 >= v6268:0:0 && v6266:0:0 >= v6237:0:0 && v6265:0:0 >= v6236:0:0 && v6264:0:0 >= v6235:0:0 && v6263:0:0 >= v6234:0:0 && v6262:0:0 >= v6233:0:0 && v6269:0:0 > 15 && v6268:0:0 > 0 && v6267:0:0 > 15 && v6266:0:0 > 3 && v6265:0:0 > 7 && v6264:0:0 > 7 && v6263:0:0 > 7 && v6262:0:0 > 3 && v6354:0:0 > -1 && v6261:0:0 > 0 && v6258:0:0 > 0 && v6257:0:0 > 8 && v6256:0:0 > -1 && v6255:0:0 > 0 && v6254:0:0 > 0 && v6253:0:0 > 7 && v6252:0:0 > -1 && v6251:0:0 > 28 && v6250:0:0 > -1 && v6249:0:0 > 7 && v6248:0:0 > -1 && v6247:0:0 > 7 && v6246:0:0 > -1 && v6245:0:0 > 0 && v6244:0:0 > -1 && v6243:0:0 < 30 && v6240:0:0 > 29 && v6238:0:0 > 0 && v6237:0:0 > 0 && v6236:0:0 > 0 && v6235:0:0 > 0 && v6234:0:0 > 0 && v6233:0:0 > 0

----------------------------------------

(16)
Obligation:
SCC
----------------------------------------

(17) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 20 rulesP rules:
f_1415(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5577, v5578, v5579, v5581, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1416(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5577, v5578, v5579, v5581, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: 0 < v5580
f_1416(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5577, v5578, v5579, v5581, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1418(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5577, v5578, v5579, v5581, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: 0 = 0
f_1418(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5577, v5578, v5579, v5581, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1420(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5577, v5578, v5579, v5581, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: TRUE
f_1420(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5577, v5578, v5579, v5581, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1422(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5577, v5578, v5579, v5581, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: 0 = 0
f_1422(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5577, v5578, v5579, v5581, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1424(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5578, v5577, v5579, v5581, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: 0 = 0
f_1424(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5578, v5577, v5579, v5581, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1426(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5677, v5578, v5577, v5579, v5581, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: TRUE
f_1426(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5677, v5578, v5577, v5579, v5581, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1428(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5677, v5581, v5577, v5579, v5578, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: 0 = 0
f_1428(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5677, v5581, v5577, v5579, v5578, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1431(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5581, v5577, v5579, v5578, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: v5677 = v5581
f_1431(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5581, v5577, v5579, v5578, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1434(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5581, v5577, v5579, v5578, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: 0 = 0
f_1434(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5581, v5577, v5579, v5578, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1437(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5581, v5577, v5579, v5578, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: TRUE
f_1437(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5581, v5577, v5579, v5578, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1440(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5581, v5579, v5578, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: 0 = 0
f_1440(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5581, v5579, v5578, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1443(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5581, v5868, v5578, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 16, 9) :|: v5868 = 8 + v5580 && 9 <= v5868
f_1443(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5581, v5868, v5578, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 16, 9) -> f_1446(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5581, v5868, v5871, v5578, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 16, 9) :|: TRUE
f_1446(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5581, v5868, v5871, v5578, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 16, 9) -> f_1448(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5581, v5868, v5871, v5578, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 16, 9) :|: TRUE
f_1448(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5581, v5868, v5871, v5578, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 16, 9) -> f_1450(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5581, v5868, v5871, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 16, 9) :|: 0 = 0
f_1450(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5581, v5868, v5871, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 16, 9) -> f_1452(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5581, v5868, v5871, v5875, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 16, 9, 2) :|: v5875 = 1 + v5581 && 2 <= v5875
f_1452(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5581, v5868, v5871, v5875, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 16, 9, 2) -> f_1454(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5581, v5868, v5871, v5875, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 16, 9, 2) :|: TRUE
f_1454(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5581, v5868, v5871, v5875, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 16, 9, 2) -> f_1456(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5581, v5868, v5871, v5875, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 16, 9, 2) :|: TRUE
f_1456(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5581, v5868, v5871, v5875, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 16, 9, 2) -> f_1414(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5581, v5868, v5871, v5875, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: TRUE
f_1414(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5577, v5578, v5579, v5580, v5581, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1415(v5555, v5556, v5557, v5558, v5559, v5560, 0, v5562, v5563, 1, v5565, v5566, v5567, v5568, v5569, v5570, v5571, v5572, v5573, v5574, v5575, v5576, v5580, v5577, v5578, v5579, v5581, v5582, v5583, v5584, v5585, v5586, v5587, v5588, v5589, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_1415(v5555:0, v5556:0, v5557:0, v5558:0, v5559:0, v5560:0, 0, v5562:0, v5563:0, 1, v5565:0, v5566:0, v5567:0, v5568:0, v5569:0, v5570:0, v5571:0, v5572:0, v5573:0, v5574:0, v5575:0, v5576:0, v5580:0, v5577:0, v5578:0, v5579:0, v5581:0, v5582:0, v5583:0, v5584:0, v5585:0, v5586:0, v5587:0, v5588:0, v5589:0, 3, 7, 4, 15, 8, 30, 29, 9, 16) -> f_1415(v5555:0, v5556:0, v5557:0, v5558:0, v5559:0, v5560:0, 0, v5562:0, v5563:0, 1, v5565:0, v5566:0, v5567:0, v5568:0, v5569:0, v5570:0, v5571:0, v5572:0, v5573:0, v5574:0, v5575:0, v5576:0, v5871:0, v5580:0, v5581:0, 8 + v5580:0, 1 + v5581:0, v5582:0, v5583:0, v5584:0, v5585:0, v5586:0, v5587:0, v5588:0, v5589:0, 3, 7, 4, 15, 8, 30, 29, 9, 16) :|: v5580:0 > 0 && v5581:0 > 0
Filtered unneeded arguments:
   f_1415(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44) -> f_1415(x23, x27)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1415(v5580:0, v5581:0) -> f_1415(v5871:0, 1 + v5581:0) :|: v5580:0 > 0 && v5581:0 > 0

----------------------------------------

(18)
Obligation:
Rules:
f_1415(v5580:0, v5581:0) -> f_1415(v5871:0, 1 + v5581:0) :|: v5580:0 > 0 && v5581:0 > 0

----------------------------------------

(19) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained one non-trivial SCC.

f_1415(v5580:0, v5581:0) -> f_1415(v5871:0, 1 + v5581:0) :|: v5580:0 > 0 && v5581:0 > 0
has been transformed into
f_1415(v5580:0, v5581:0) -> f_1415(v5871:0, 1 + v5581:0) :|: v5581:0 = 1 + x7 && (v5580:0 > 0 && v5581:0 > 0) && x7 > 0.


f_1415(v5580:0, v5581:0) -> f_1415(v5871:0, 1 + v5581:0) :|: v5581:0 = 1 + x7 && (v5580:0 > 0 && v5581:0 > 0) && x7 > 0 and 
f_1415(v5580:0, v5581:0) -> f_1415(v5871:0, 1 + v5581:0) :|: v5581:0 = 1 + x7 && (v5580:0 > 0 && v5581:0 > 0) && x7 > 0
have been merged into the new rule
f_1415(x17, x18) -> f_1415(x19, 1 + (1 + x18)) :|: x18 = 1 + x20 && (x17 > 0 && x18 > 0) && x20 > 0 && (1 + x18 = 1 + x21 && (x22 > 0 && 1 + x18 > 0) && x21 > 0)


----------------------------------------

(20)
Obligation:
Rules:
f_1415(x23, x24) -> f_1415(x25, 2 + x24) :|: TRUE && x24 + -1 * x26 = 1 && x23 >= 1 && x24 >= 1 && x26 >= 1 && x24 + -1 * x27 = 0 && x28 >= 1 && x27 >= 1

----------------------------------------

(21) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(22)
Obligation:
Rules:
f_1415(x23:0, x24:0) -> f_1415(x25:0, 2 + x24:0) :|: x28:0 > 0 && x27:0 > 0 && x24:0 + -1 * x27:0 = 0 && x26:0 > 0 && x24:0 > 0 && x24:0 + -1 * x26:0 = 1 && x23:0 > 0

----------------------------------------

(23)
Obligation:
SCC
----------------------------------------

(24) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 15 rulesP rules:
f_1269(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4166, v4167, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1271(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4166, v4167, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: 0 < v4168
f_1271(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4166, v4167, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1275(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4166, v4167, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: 0 = 0
f_1275(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4166, v4167, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1279(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4166, v4167, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: TRUE
f_1279(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4166, v4167, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1283(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4167, v4166, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: 0 = 0
f_1283(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4167, v4166, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1286(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4407, v4166, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: v4407 = 8 + v4168 && 9 <= v4407
f_1286(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4407, v4166, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1289(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4407, v4409, v4166, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: TRUE
f_1289(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4407, v4409, v4166, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1292(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4407, v4409, v4166, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: TRUE
f_1292(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4407, v4409, v4166, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1295(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4407, v4409, v4166, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: 0 = 0
f_1295(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4407, v4409, v4166, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1299(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4407, v4409, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: 0 = 0
f_1299(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4407, v4409, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1303(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4407, v4409, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: TRUE
f_1303(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4407, v4409, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1307(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4407, v4409, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: 0 = 0
f_1307(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4407, v4409, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1311(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4407, v4409, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: TRUE
f_1311(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4407, v4409, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1315(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4407, v4409, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: TRUE
f_1315(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4407, v4409, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1266(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4407, v4409, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: TRUE
f_1266(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4166, v4167, v4168, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1269(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4166, v4167, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_1269(v4141:0, v4142:0, v4143:0, v4144:0, v4145:0, v4146:0, 0, v4148:0, 1, v4150:0, v4151:0, v4152:0, v4153:0, v4154:0, v4155:0, v4156:0, v4157:0, v4158:0, v4159:0, v4160:0, v4161:0, v4162:0, v4163:0, v4164:0, v4165:0, v4168:0, v4166:0, v4167:0, v4169:0, v4170:0, v4171:0, v4172:0, v4173:0, v4174:0, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1269(v4141:0, v4142:0, v4143:0, v4144:0, v4145:0, v4146:0, 0, v4148:0, 1, v4150:0, v4151:0, v4152:0, v4153:0, v4154:0, v4155:0, v4156:0, v4157:0, v4158:0, v4159:0, v4160:0, v4161:0, v4162:0, v4163:0, v4164:0, v4165:0, v4409:0, v4168:0, 8 + v4168:0, v4169:0, v4170:0, v4171:0, v4172:0, v4173:0, v4174:0, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: v4168:0 > 0
Filtered unneeded arguments:
   f_1269(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43) -> f_1269(x26)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1269(v4168:0) -> f_1269(v4409:0) :|: v4168:0 > 0

----------------------------------------

(25)
Obligation:
Rules:
f_1269(v4168:0) -> f_1269(v4409:0) :|: v4168:0 > 0

----------------------------------------

(26) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, v4168:0) -> f(1, v4409:0) :|: pc = 1 && v4168:0 > 0
Witness term starting non-terminating reduction: f(1, 1)
----------------------------------------

(27)
NO

----------------------------------------

(28) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 15 rulesP rules:
f_1269(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4166, v4167, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1271(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4166, v4167, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: 0 < v4168
f_1271(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4166, v4167, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1275(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4166, v4167, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: 0 = 0
f_1275(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4166, v4167, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1279(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4166, v4167, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: TRUE
f_1279(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4166, v4167, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1283(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4167, v4166, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: 0 = 0
f_1283(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4167, v4166, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1286(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4407, v4166, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: v4407 = 8 + v4168 && 9 <= v4407
f_1286(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4407, v4166, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1289(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4407, v4409, v4166, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: TRUE
f_1289(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4407, v4409, v4166, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1292(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4407, v4409, v4166, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: TRUE
f_1292(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4407, v4409, v4166, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1295(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4407, v4409, v4166, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: 0 = 0
f_1295(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4407, v4409, v4166, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1299(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4407, v4409, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: 0 = 0
f_1299(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4407, v4409, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1303(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4407, v4409, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: TRUE
f_1303(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4407, v4409, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1307(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4407, v4409, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: 0 = 0
f_1307(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4407, v4409, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1311(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4407, v4409, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: TRUE
f_1311(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4407, v4409, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1315(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4407, v4409, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: TRUE
f_1315(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4407, v4409, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1266(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4407, v4409, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: 1 <= v4141 && 1 <= v4142 && 1 <= v4143 && 1 <= v4144 && 1 <= v4145 && 1 <= v4146 && v4148 <= 29 && 0 <= v4151 && 1 <= v4152 && 0 <= v4153 && 8 <= v4154 && 0 <= v4155 && 8 <= v4156 && 0 <= v4157 && v4158 <= 28 && 0 <= v4159 && 8 <= v4160 && 1 <= v4161 && 1 <= v4162 && 0 <= v4163 && 9 <= v4164 && 1 <= v4165 && 1 <= v4168 && 9 <= v4407 && 0 <= v4409 && 4 <= v4169 && 8 <= v4170 && 8 <= v4171 && 8 <= v4172 && 4 <= v4173 && 16 <= v4174 && v4141 <= v4169 && v4142 <= v4170 && v4143 <= v4171 && v4144 <= v4172 && v4145 <= v4173 && v4152 <= v4174
f_1266(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4166, v4167, v4168, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1269(v4141, v4142, v4143, v4144, v4145, v4146, 0, v4148, 1, v4150, v4151, v4152, v4153, v4154, v4155, v4156, v4157, v4158, v4159, v4160, v4161, v4162, v4163, v4164, v4165, v4168, v4166, v4167, v4169, v4170, v4171, v4172, v4173, v4174, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_1269(v4141:0, v4142:0, v4143:0, v4144:0, v4145:0, v4146:0, 0, v4148:0, 1, v4150:0, v4151:0, v4152:0, v4153:0, v4154:0, v4155:0, v4156:0, v4157:0, v4158:0, v4159:0, v4160:0, v4161:0, v4162:0, v4163:0, v4164:0, v4165:0, v4168:0, v4166:0, v4167:0, v4169:0, v4170:0, v4171:0, v4172:0, v4173:0, v4174:0, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1269(v4141:0, v4142:0, v4143:0, v4144:0, v4145:0, v4146:0, 0, v4148:0, 1, v4150:0, v4151:0, v4152:0, v4153:0, v4154:0, v4155:0, v4156:0, v4157:0, v4158:0, v4159:0, v4160:0, v4161:0, v4162:0, v4163:0, v4164:0, v4165:0, v4409:0, v4168:0, 8 + v4168:0, v4169:0, v4170:0, v4171:0, v4172:0, v4173:0, v4174:0, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: v4142:0 > 0 && v4141:0 > 0 && v4143:0 > 0 && v4144:0 > 0 && v4145:0 > 0 && v4146:0 > 0 && v4148:0 < 30 && v4151:0 > -1 && v4152:0 > 0 && v4153:0 > -1 && v4154:0 > 7 && v4155:0 > -1 && v4156:0 > 7 && v4157:0 > -1 && v4158:0 < 29 && v4159:0 > -1 && v4160:0 > 7 && v4161:0 > 0 && v4162:0 > 0 && v4163:0 > -1 && v4164:0 > 8 && v4165:0 > 0 && v4168:0 > 0 && v4409:0 > -1 && v4169:0 > 3 && v4170:0 > 7 && v4171:0 > 7 && v4172:0 > 7 && v4173:0 > 3 && v4174:0 > 15 && v4169:0 >= v4141:0 && v4170:0 >= v4142:0 && v4171:0 >= v4143:0 && v4172:0 >= v4144:0 && v4174:0 >= v4152:0 && v4173:0 >= v4145:0
Filtered unneeded arguments:
   f_1269(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43) -> f_1269(x1, x2, x3, x4, x5, x6, x8, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x29, x30, x31, x32, x33, x34)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1269(v4141:0, v4142:0, v4143:0, v4144:0, v4145:0, v4146:0, v4148:0, v4151:0, v4152:0, v4153:0, v4154:0, v4155:0, v4156:0, v4157:0, v4158:0, v4159:0, v4160:0, v4161:0, v4162:0, v4163:0, v4164:0, v4165:0, v4168:0, v4169:0, v4170:0, v4171:0, v4172:0, v4173:0, v4174:0) -> f_1269(v4141:0, v4142:0, v4143:0, v4144:0, v4145:0, v4146:0, v4148:0, v4151:0, v4152:0, v4153:0, v4154:0, v4155:0, v4156:0, v4157:0, v4158:0, v4159:0, v4160:0, v4161:0, v4162:0, v4163:0, v4164:0, v4165:0, v4409:0, v4169:0, v4170:0, v4171:0, v4172:0, v4173:0, v4174:0) :|: v4141:0 > 0 && v4142:0 > 0 && v4143:0 > 0 && v4144:0 > 0 && v4145:0 > 0 && v4146:0 > 0 && v4148:0 < 30 && v4151:0 > -1 && v4152:0 > 0 && v4153:0 > -1 && v4154:0 > 7 && v4155:0 > -1 && v4156:0 > 7 && v4157:0 > -1 && v4158:0 < 29 && v4159:0 > -1 && v4160:0 > 7 && v4161:0 > 0 && v4162:0 > 0 && v4163:0 > -1 && v4164:0 > 8 && v4165:0 > 0 && v4168:0 > 0 && v4409:0 > -1 && v4169:0 > 3 && v4170:0 > 7 && v4171:0 > 7 && v4172:0 > 7 && v4173:0 > 3 && v4174:0 > 15 && v4169:0 >= v4141:0 && v4170:0 >= v4142:0 && v4171:0 >= v4143:0 && v4172:0 >= v4144:0 && v4173:0 >= v4145:0 && v4174:0 >= v4152:0

----------------------------------------

(29)
Obligation:
Rules:
f_1269(v4141:0, v4142:0, v4143:0, v4144:0, v4145:0, v4146:0, v4148:0, v4151:0, v4152:0, v4153:0, v4154:0, v4155:0, v4156:0, v4157:0, v4158:0, v4159:0, v4160:0, v4161:0, v4162:0, v4163:0, v4164:0, v4165:0, v4168:0, v4169:0, v4170:0, v4171:0, v4172:0, v4173:0, v4174:0) -> f_1269(v4141:0, v4142:0, v4143:0, v4144:0, v4145:0, v4146:0, v4148:0, v4151:0, v4152:0, v4153:0, v4154:0, v4155:0, v4156:0, v4157:0, v4158:0, v4159:0, v4160:0, v4161:0, v4162:0, v4163:0, v4164:0, v4165:0, v4409:0, v4169:0, v4170:0, v4171:0, v4172:0, v4173:0, v4174:0) :|: v4141:0 > 0 && v4142:0 > 0 && v4143:0 > 0 && v4144:0 > 0 && v4145:0 > 0 && v4146:0 > 0 && v4148:0 < 30 && v4151:0 > -1 && v4152:0 > 0 && v4153:0 > -1 && v4154:0 > 7 && v4155:0 > -1 && v4156:0 > 7 && v4157:0 > -1 && v4158:0 < 29 && v4159:0 > -1 && v4160:0 > 7 && v4161:0 > 0 && v4162:0 > 0 && v4163:0 > -1 && v4164:0 > 8 && v4165:0 > 0 && v4168:0 > 0 && v4409:0 > -1 && v4169:0 > 3 && v4170:0 > 7 && v4171:0 > 7 && v4172:0 > 7 && v4173:0 > 3 && v4174:0 > 15 && v4169:0 >= v4141:0 && v4170:0 >= v4142:0 && v4171:0 >= v4143:0 && v4172:0 >= v4144:0 && v4173:0 >= v4145:0 && v4174:0 >= v4152:0

----------------------------------------

(30) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(31)
Obligation:
Rules:
f_1269(v4141:0:0, v4142:0:0, v4143:0:0, v4144:0:0, v4145:0:0, v4146:0:0, v4148:0:0, v4151:0:0, v4152:0:0, v4153:0:0, v4154:0:0, v4155:0:0, v4156:0:0, v4157:0:0, v4158:0:0, v4159:0:0, v4160:0:0, v4161:0:0, v4162:0:0, v4163:0:0, v4164:0:0, v4165:0:0, v4168:0:0, v4169:0:0, v4170:0:0, v4171:0:0, v4172:0:0, v4173:0:0, v4174:0:0) -> f_1269(v4141:0:0, v4142:0:0, v4143:0:0, v4144:0:0, v4145:0:0, v4146:0:0, v4148:0:0, v4151:0:0, v4152:0:0, v4153:0:0, v4154:0:0, v4155:0:0, v4156:0:0, v4157:0:0, v4158:0:0, v4159:0:0, v4160:0:0, v4161:0:0, v4162:0:0, v4163:0:0, v4164:0:0, v4165:0:0, v4409:0:0, v4169:0:0, v4170:0:0, v4171:0:0, v4172:0:0, v4173:0:0, v4174:0:0) :|: v4173:0:0 >= v4145:0:0 && v4174:0:0 >= v4152:0:0 && v4172:0:0 >= v4144:0:0 && v4171:0:0 >= v4143:0:0 && v4170:0:0 >= v4142:0:0 && v4169:0:0 >= v4141:0:0 && v4174:0:0 > 15 && v4173:0:0 > 3 && v4172:0:0 > 7 && v4171:0:0 > 7 && v4170:0:0 > 7 && v4169:0:0 > 3 && v4409:0:0 > -1 && v4168:0:0 > 0 && v4165:0:0 > 0 && v4164:0:0 > 8 && v4163:0:0 > -1 && v4162:0:0 > 0 && v4161:0:0 > 0 && v4160:0:0 > 7 && v4159:0:0 > -1 && v4158:0:0 < 29 && v4157:0:0 > -1 && v4156:0:0 > 7 && v4155:0:0 > -1 && v4154:0:0 > 7 && v4153:0:0 > -1 && v4152:0:0 > 0 && v4151:0:0 > -1 && v4148:0:0 < 30 && v4146:0:0 > 0 && v4145:0:0 > 0 && v4144:0:0 > 0 && v4143:0:0 > 0 && v4142:0:0 > 0 && v4141:0:0 > 0

----------------------------------------

(32) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, v4141:0:0, v4142:0:0, v4143:0:0, v4144:0:0, v4145:0:0, v4146:0:0, v4148:0:0, v4151:0:0, v4152:0:0, v4153:0:0, v4154:0:0, v4155:0:0, v4156:0:0, v4157:0:0, v4158:0:0, v4159:0:0, v4160:0:0, v4161:0:0, v4162:0:0, v4163:0:0, v4164:0:0, v4165:0:0, v4168:0:0, v4169:0:0, v4170:0:0, v4171:0:0, v4172:0:0, v4173:0:0, v4174:0:0) -> f(1, v4141:0:0, v4142:0:0, v4143:0:0, v4144:0:0, v4145:0:0, v4146:0:0, v4148:0:0, v4151:0:0, v4152:0:0, v4153:0:0, v4154:0:0, v4155:0:0, v4156:0:0, v4157:0:0, v4158:0:0, v4159:0:0, v4160:0:0, v4161:0:0, v4162:0:0, v4163:0:0, v4164:0:0, v4165:0:0, v4409:0:0, v4169:0:0, v4170:0:0, v4171:0:0, v4172:0:0, v4173:0:0, v4174:0:0) :|: pc = 1 && (v4173:0:0 >= v4145:0:0 && v4174:0:0 >= v4152:0:0 && v4172:0:0 >= v4144:0:0 && v4171:0:0 >= v4143:0:0 && v4170:0:0 >= v4142:0:0 && v4169:0:0 >= v4141:0:0 && v4174:0:0 > 15 && v4173:0:0 > 3 && v4172:0:0 > 7 && v4171:0:0 > 7 && v4170:0:0 > 7 && v4169:0:0 > 3 && v4409:0:0 > -1 && v4168:0:0 > 0 && v4165:0:0 > 0 && v4164:0:0 > 8 && v4163:0:0 > -1 && v4162:0:0 > 0 && v4161:0:0 > 0 && v4160:0:0 > 7 && v4159:0:0 > -1 && v4158:0:0 < 29 && v4157:0:0 > -1 && v4156:0:0 > 7 && v4155:0:0 > -1 && v4154:0:0 > 7 && v4153:0:0 > -1 && v4152:0:0 > 0 && v4151:0:0 > -1 && v4148:0:0 < 30 && v4146:0:0 > 0 && v4145:0:0 > 0 && v4144:0:0 > 0 && v4143:0:0 > 0 && v4142:0:0 > 0 && v4141:0:0 > 0)
Witness term starting non-terminating reduction: f(1, 1, 64, 1, 1, 1, 1, 29, 0, 1, 0, 64, 0, 64, 0, 28, 0, 64, 1, 1, 0, 12, 1, 63, 36, 70, 71, 70, 67, 72)
----------------------------------------

(33)
NO

----------------------------------------

(34)
Obligation:
SCC
----------------------------------------

(35) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 20 rulesP rules:
f_1128(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v2978, v2979, v2980, v2982, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1131(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v2978, v2979, v2980, v2982, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: 0 < v2981
f_1131(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v2978, v2979, v2980, v2982, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1135(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v2978, v2979, v2980, v2982, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: 0 = 0
f_1135(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v2978, v2979, v2980, v2982, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1139(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v2978, v2979, v2980, v2982, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: TRUE
f_1139(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v2978, v2979, v2980, v2982, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1143(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v2978, v2979, v2980, v2982, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: 0 = 0
f_1143(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v2978, v2979, v2980, v2982, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1148(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v2979, v2978, v2980, v2982, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: 0 = 0
f_1148(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v2979, v2978, v2980, v2982, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1153(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v3175, v2979, v2978, v2980, v2982, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: TRUE
f_1153(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v3175, v2979, v2978, v2980, v2982, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1158(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v3175, v2982, v2978, v2980, v2979, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: 0 = 0
f_1158(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v3175, v2982, v2978, v2980, v2979, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1164(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v2982, v2978, v2980, v2979, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: v3175 = v2982
f_1164(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v2982, v2978, v2980, v2979, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1170(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v2982, v2978, v2980, v2979, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: 0 = 0
f_1170(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v2982, v2978, v2980, v2979, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1176(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v2982, v2978, v2980, v2979, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: TRUE
f_1176(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v2982, v2978, v2980, v2979, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1181(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v2982, v2980, v2979, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: 0 = 0
f_1181(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v2982, v2980, v2979, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1186(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v2982, v3403, v2979, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 16, 9) :|: v3403 = 8 + v2981 && 9 <= v3403
f_1186(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v2982, v3403, v2979, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 16, 9) -> f_1191(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v2982, v3403, v3407, v2979, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 16, 9) :|: TRUE
f_1191(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v2982, v3403, v3407, v2979, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 16, 9) -> f_1195(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v2982, v3403, v3407, v2979, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 16, 9) :|: TRUE
f_1195(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v2982, v3403, v3407, v2979, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 16, 9) -> f_1199(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v2982, v3403, v3407, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 16, 9) :|: 0 = 0
f_1199(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v2982, v3403, v3407, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 16, 9) -> f_1202(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v2982, v3403, v3407, v3501, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 16, 9, 2) :|: v3501 = 1 + v2982 && 2 <= v3501
f_1202(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v2982, v3403, v3407, v3501, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 16, 9, 2) -> f_1206(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v2982, v3403, v3407, v3501, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 16, 9, 2) :|: TRUE
f_1206(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v2982, v3403, v3407, v3501, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 16, 9, 2) -> f_1210(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v2982, v3403, v3407, v3501, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 16, 9, 2) :|: TRUE
f_1210(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v2982, v3403, v3407, v3501, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 16, 9, 2) -> f_1125(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v2982, v3403, v3407, v3501, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: TRUE
f_1125(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2978, v2979, v2980, v2981, v2982, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1128(v2957, v2958, v2959, v2960, v2961, v2962, 0, v2964, 1, v2966, v2967, v2968, v2969, v2970, v2971, v2972, v2973, v2974, v2975, v2976, v2977, v2981, v2978, v2979, v2980, v2982, v2983, v2984, v2985, v2986, v2987, v2988, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_1128(v2957:0, v2958:0, v2959:0, v2960:0, v2961:0, v2962:0, 0, v2964:0, 1, v2966:0, v2967:0, v2968:0, v2969:0, v2970:0, v2971:0, v2972:0, v2973:0, v2974:0, v2975:0, v2976:0, v2977:0, v2981:0, v2978:0, v2979:0, v2980:0, v2982:0, v2983:0, v2984:0, v2985:0, v2986:0, v2987:0, v2988:0, 3, 7, 4, 15, 8, 29, 28, 9, 16) -> f_1128(v2957:0, v2958:0, v2959:0, v2960:0, v2961:0, v2962:0, 0, v2964:0, 1, v2966:0, v2967:0, v2968:0, v2969:0, v2970:0, v2971:0, v2972:0, v2973:0, v2974:0, v2975:0, v2976:0, v2977:0, v3407:0, v2981:0, v2982:0, 8 + v2981:0, 1 + v2982:0, v2983:0, v2984:0, v2985:0, v2986:0, v2987:0, v2988:0, 3, 7, 4, 15, 8, 29, 28, 9, 16) :|: v2981:0 > 0 && v2982:0 > 0
Filtered unneeded arguments:
   f_1128(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41) -> f_1128(x22, x26)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1128(v2981:0, v2982:0) -> f_1128(v3407:0, 1 + v2982:0) :|: v2981:0 > 0 && v2982:0 > 0

----------------------------------------

(36)
Obligation:
Rules:
f_1128(v2981:0, v2982:0) -> f_1128(v3407:0, 1 + v2982:0) :|: v2981:0 > 0 && v2982:0 > 0

----------------------------------------

(37) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained one non-trivial SCC.

f_1128(v2981:0, v2982:0) -> f_1128(v3407:0, 1 + v2982:0) :|: v2981:0 > 0 && v2982:0 > 0
has been transformed into
f_1128(v2981:0, v2982:0) -> f_1128(v3407:0, 1 + v2982:0) :|: v2982:0 = 1 + x7 && (v2981:0 > 0 && v2982:0 > 0) && x7 > 0.


f_1128(v2981:0, v2982:0) -> f_1128(v3407:0, 1 + v2982:0) :|: v2982:0 = 1 + x7 && (v2981:0 > 0 && v2982:0 > 0) && x7 > 0 and 
f_1128(v2981:0, v2982:0) -> f_1128(v3407:0, 1 + v2982:0) :|: v2982:0 = 1 + x7 && (v2981:0 > 0 && v2982:0 > 0) && x7 > 0
have been merged into the new rule
f_1128(x17, x18) -> f_1128(x19, 1 + (1 + x18)) :|: x18 = 1 + x20 && (x17 > 0 && x18 > 0) && x20 > 0 && (1 + x18 = 1 + x21 && (x22 > 0 && 1 + x18 > 0) && x21 > 0)


----------------------------------------

(38)
Obligation:
Rules:
f_1128(x23, x24) -> f_1128(x25, 2 + x24) :|: TRUE && x24 + -1 * x26 = 1 && x23 >= 1 && x24 >= 1 && x26 >= 1 && x24 + -1 * x27 = 0 && x28 >= 1 && x27 >= 1

----------------------------------------

(39) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(40)
Obligation:
Rules:
f_1128(x23:0, x24:0) -> f_1128(x25:0, 2 + x24:0) :|: x28:0 > 0 && x27:0 > 0 && x24:0 + -1 * x27:0 = 0 && x26:0 > 0 && x24:0 > 0 && x24:0 + -1 * x26:0 = 1 && x23:0 > 0

----------------------------------------

(41)
Obligation:
SCC
----------------------------------------

(42) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 32 rulesP rules:
f_707(v555, v556, v557, v558, v559, v560, 0, v562, 1, v564, v565, v566, v568, v569, v570, v571, v572, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 28, 16) -> f_711(v555, v556, v557, v558, v559, v560, 0, v562, 1, v564, v565, v566, v599, v569, v570, v571, v572, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 28, 16) :|: TRUE
f_711(v555, v556, v557, v558, v559, v560, 0, v562, 1, v564, v565, v566, v599, v569, v570, v571, v572, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 28, 16) -> f_715(v555, v556, v557, v558, v559, v560, 0, v562, 1, v564, v565, v566, v599, v604, v570, v571, v572, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 28, 16) :|: v604 = 8 + v599 && 8 <= v604
f_715(v555, v556, v557, v558, v559, v560, 0, v562, 1, v564, v565, v566, v599, v604, v570, v571, v572, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 28, 16) -> f_719(v555, v556, v557, v558, v559, v560, 0, v562, 1, v564, v565, v566, v599, v604, v570, v571, v572, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 28, 16) :|: TRUE
f_719(v555, v556, v557, v558, v559, v560, 0, v562, 1, v564, v565, v566, v599, v604, v570, v571, v572, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 28, 16) -> f_722(v555, v556, v557, v558, v559, v560, 0, v562, 1, v564, v565, v566, v599, v604, v610, v571, v572, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 28, 16) :|: TRUE
f_722(v555, v556, v557, v558, v559, v560, 0, v562, 1, v564, v565, v566, v599, v604, v610, v571, v572, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 28, 16) -> f_725(v555, v556, v557, v558, v559, v560, 0, v562, 1, v564, v565, v566, v599, v604, v610, v612, v572, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 28, 16) :|: v612 = 8 + v610 && 8 <= v612
f_725(v555, v556, v557, v558, v559, v560, 0, v562, 1, v564, v565, v566, v599, v604, v610, v612, v572, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 28, 16) -> f_728(v555, v556, v557, v558, v559, v560, 0, v562, 1, v564, v565, v566, v599, v604, v610, v612, v613, v572, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 28, 16) :|: TRUE
f_728(v555, v556, v557, v558, v559, v560, 0, v562, 1, v564, v565, v566, v599, v604, v610, v612, v613, v572, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 28, 16) -> f_731(v555, v556, v557, v558, v559, v560, 0, v562, 1, v564, v565, v566, v599, v604, v610, v612, v613, v572, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 28, 16) :|: TRUE
f_731(v555, v556, v557, v558, v559, v560, 0, v562, 1, v564, v565, v566, v599, v604, v610, v612, v613, v572, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 28, 16) -> f_734(v555, v556, v557, v558, v559, v560, 0, v562, 1, v564, v565, v566, v599, v604, v610, v612, v613, v679, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 16) :|: TRUE
f_734(v555, v556, v557, v558, v559, v560, 0, v562, 1, v564, v565, v566, v599, v604, v610, v612, v613, v679, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 16) -> f_736(v555, v556, v557, v558, v559, v560, 0, v562, 1, v564, v565, v566, v599, v604, v610, v612, v613, v679, v681, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 16) :|: v681 = 1 + v679
f_736(v555, v556, v557, v558, v559, v560, 0, v562, 1, v564, v565, v566, v599, v604, v610, v612, v613, v679, v681, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 16) -> f_739(v555, v556, v557, v558, v559, v560, 0, v562, 1, v564, v565, v566, v599, v604, v610, v612, v613, v679, v681, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 16) :|: TRUE
f_739(v555, v556, v557, v558, v559, v560, 0, v562, 1, v564, v565, v566, v599, v604, v610, v612, v613, v679, v681, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 16) -> f_742(v555, v556, v557, v558, v559, v560, 0, v562, 1, v564, v565, v566, v599, v604, v610, v612, v613, v679, v681, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 16) :|: TRUE
f_742(v555, v556, v557, v558, v559, v560, 0, v562, 1, v564, v565, v566, v599, v604, v610, v612, v613, v679, v681, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 16) -> f_745(v555, v556, v557, v558, v559, v560, 0, v681, 1, v564, v562, v565, v566, v599, v604, v610, v612, v613, v679, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 16) :|: 0 = 0
f_745(v555, v556, v557, v558, v559, v560, 0, v681, 1, v564, v562, v565, v566, v599, v604, v610, v612, v613, v679, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 16) -> f_748(v555, v556, v557, v558, v559, v560, 0, v681, 1, v564, v562, v565, v566, v599, v604, v610, v612, v613, v679, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 16, 28) :|: v681 < 30 && v679 <= 28
f_748(v555, v556, v557, v558, v559, v560, 0, v681, 1, v564, v562, v565, v566, v599, v604, v610, v612, v613, v679, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 16, 28) -> f_752(v555, v556, v557, v558, v559, v560, 0, v681, 1, v564, v562, v565, v566, v599, v604, v610, v612, v613, v679, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 16, 28) :|: 0 = 0
f_752(v555, v556, v557, v558, v559, v560, 0, v681, 1, v564, v562, v565, v566, v599, v604, v610, v612, v613, v679, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 16, 28) -> f_756(v555, v556, v557, v558, v559, v560, 0, v681, 1, v564, v562, v565, v566, v599, v604, v610, v612, v613, v679, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 16, 28) :|: TRUE
f_756(v555, v556, v557, v558, v559, v560, 0, v681, 1, v564, v562, v565, v566, v599, v604, v610, v612, v613, v679, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 16, 28) -> f_760(v555, v556, v557, v558, v559, v560, 0, v681, 1, v778, v562, v565, v566, v599, v604, v610, v612, v613, v679, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 16, 28) :|: TRUE
f_760(v555, v556, v557, v558, v559, v560, 0, v681, 1, v778, v562, v565, v566, v599, v604, v610, v612, v613, v679, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 16, 28) -> f_765(v555, v556, v557, v558, v559, v560, 0, v681, 1, v778, v562, v565, v566, v599, v604, v610, v612, v613, v679, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 16, 28) :|: v778 != 0
f_765(v555, v556, v557, v558, v559, v560, 0, v681, 1, v778, v562, v565, v566, v599, v604, v610, v612, v613, v679, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 16, 28) -> f_771(v555, v556, v557, v558, v559, v560, 0, v681, 1, v778, v562, v565, v566, v599, v604, v610, v612, v613, v679, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 16, 28) :|: 0 = 0
f_771(v555, v556, v557, v558, v559, v560, 0, v681, 1, v778, v562, v565, v566, v599, v604, v610, v612, v613, v679, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 16, 28) -> f_777(v555, v556, v557, v558, v559, v560, 0, v681, 1, v778, v562, v565, v566, v599, v604, v610, v612, v613, v679, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 16, 28) :|: 0 = 0
f_777(v555, v556, v557, v558, v559, v560, 0, v681, 1, v778, v562, v565, v566, v599, v604, v610, v612, v613, v679, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 16, 28) -> f_783(v555, v556, v557, v558, v559, v560, 0, v681, 1, v778, v562, v565, v566, v599, v604, v610, v612, v613, v679, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 16, 28) :|: TRUE
f_783(v555, v556, v557, v558, v559, v560, 0, v681, 1, v778, v562, v565, v566, v599, v604, v610, v612, v613, v679, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 16, 28) -> f_789(v555, v556, v557, v558, v559, v560, 0, v681, 1, v778, v565, v566, v599, v604, v610, v612, v613, v679, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 16, 28, 29) :|: 0 = 0
f_789(v555, v556, v557, v558, v559, v560, 0, v681, 1, v778, v565, v566, v599, v604, v610, v612, v613, v679, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 16, 28, 29) -> f_795(v555, v556, v557, v558, v559, v560, 0, v681, 1, v778, v613, v565, v566, v599, v604, v610, v612, v679, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 16, 28, 29) :|: 0 = 0
f_795(v555, v556, v557, v558, v559, v560, 0, v681, 1, v778, v613, v565, v566, v599, v604, v610, v612, v679, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 16, 28, 29) -> f_800(v555, v556, v557, v558, v559, v560, 0, v681, 1, v778, v613, v566, v599, v604, v610, v612, v679, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 16, 28, 29) :|: 0 = 0
f_800(v555, v556, v557, v558, v559, v560, 0, v681, 1, v778, v613, v566, v599, v604, v610, v612, v679, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 16, 28, 29) -> f_805(v555, v556, v557, v558, v559, v560, 0, v681, 1, v778, v613, v566, v599, v604, v610, v612, v679, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 16, 28, 29) :|: TRUE
f_805(v555, v556, v557, v558, v559, v560, 0, v681, 1, v778, v613, v566, v599, v604, v610, v612, v679, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 16, 28, 29) -> f_810(v555, v556, v557, v558, v559, v560, 0, v681, 1, v778, v613, v907, v566, v599, v604, v610, v612, v679, v573, v574, v575, v576, v577, v567, v578, v579, v908, 3, 7, 4, 15, 8, 16, 28, 29) :|: v908 = 15 + v907 && v907 % 4 = 0 && 16 <= v908
f_810(v555, v556, v557, v558, v559, v560, 0, v681, 1, v778, v613, v907, v566, v599, v604, v610, v612, v679, v573, v574, v575, v576, v577, v567, v578, v579, v908, 3, 7, 4, 15, 8, 16, 28, 29) -> f_815(v555, v556, v557, v558, v559, v560, 0, v681, 1, v778, v613, v907, v566, v599, v604, v610, v612, v679, v573, v574, v575, v576, v577, v567, v578, v579, v908, 3, 7, 4, 15, 8, 16, 28, 29) :|: 0 = 0
f_815(v555, v556, v557, v558, v559, v560, 0, v681, 1, v778, v613, v907, v566, v599, v604, v610, v612, v679, v573, v574, v575, v576, v577, v567, v578, v579, v908, 3, 7, 4, 15, 8, 16, 28, 29) -> f_820(v555, v556, v557, v558, v559, v560, 0, v681, 1, v778, v613, v907, v566, v599, v604, v610, v612, v679, v573, v574, v575, v576, v577, v567, v578, v579, v908, 3, 7, 4, 15, 8, 16, 28, 29) :|: TRUE
f_820(v555, v556, v557, v558, v559, v560, 0, v681, 1, v778, v613, v907, v566, v599, v604, v610, v612, v679, v573, v574, v575, v576, v577, v567, v578, v579, v908, 3, 7, 4, 15, 8, 16, 28, 29) -> f_824(v555, v556, v557, v558, v559, v560, 0, v681, 1, v778, v613, v907, v566, v599, v604, v610, v612, v679, v573, v574, v575, v576, v577, v567, v578, v579, v908, 3, 7, 4, 15, 8, 16, 28, 29) :|: 0 = 0
f_824(v555, v556, v557, v558, v559, v560, 0, v681, 1, v778, v613, v907, v566, v599, v604, v610, v612, v679, v573, v574, v575, v576, v577, v567, v578, v579, v908, 3, 7, 4, 15, 8, 16, 28, 29) -> f_829(v555, v556, v557, v558, v559, v560, 0, v681, 1, v778, v613, v907, v566, v599, v604, v610, v612, v679, v573, v574, v575, v576, v577, v567, v578, v579, v908, 3, 7, 4, 15, 8, 16, 28, 29) :|: 0 = 0
f_829(v555, v556, v557, v558, v559, v560, 0, v681, 1, v778, v613, v907, v566, v599, v604, v610, v612, v679, v573, v574, v575, v576, v577, v567, v578, v579, v908, 3, 7, 4, 15, 8, 16, 28, 29) -> f_835(v555, v556, v557, v558, v559, v560, 0, v681, 1, v778, v613, v907, v566, v599, v604, v610, v612, v679, v573, v574, v575, v576, v577, v567, v578, v579, v908, 3, 7, 4, 15, 8, 16, 28, 29) :|: TRUE
f_835(v555, v556, v557, v558, v559, v560, 0, v681, 1, v778, v613, v907, v566, v599, v604, v610, v612, v679, v573, v574, v575, v576, v577, v567, v578, v579, v908, 3, 7, 4, 15, 8, 16, 28, 29) -> f_703(v555, v556, v557, v558, v559, v560, 0, v681, 1, v778, v613, v907, v566, v599, v604, v610, v612, v679, v573, v574, v575, v576, v577, v579, v908, 3, 7, 4, 15, 8, 29, 28, 16) :|: TRUE
f_703(v555, v556, v557, v558, v559, v560, 0, v562, 1, v564, v565, v566, v567, v568, v569, v570, v571, v572, v573, v574, v575, v576, v577, v578, v579, 3, 7, 4, 15, 8, 29, 28, 16) -> f_707(v555, v556, v557, v558, v559, v560, 0, v562, 1, v564, v565, v566, v568, v569, v570, v571, v572, v573, v574, v575, v576, v577, v567, v578, v579, 3, 7, 4, 15, 8, 29, 28, 16) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_707(v555:0, v556:0, v557:0, v558:0, v559:0, v560:0, 0, v562:0, 1, v564:0, v565:0, v566:0, v568:0, v569:0, v570:0, v571:0, v572:0, v573:0, v574:0, v575:0, v576:0, v577:0, v567:0, v578:0, v579:0, 3, 7, 4, 15, 8, 29, 28, 16) -> f_707(v555:0, v556:0, v557:0, v558:0, v559:0, v560:0, 0, 1 + v679:0, 1, v778:0, v613:0, v907:0, v599:0, 8 + v599:0, v610:0, 8 + v610:0, v679:0, v573:0, v574:0, v575:0, v576:0, v577:0, v566:0, v579:0, 15 + v907:0, 3, 7, 4, 15, 8, 29, 28, 16) :|: v599:0 > -1 && v610:0 > -1 && v679:0 < 29 && v778:0 < 0 && v907:0 > 0 && v907:0 % 4 = 0
f_707(v555:0, v556:0, v557:0, v558:0, v559:0, v560:0, 0, v562:0, 1, v564:0, v565:0, v566:0, v568:0, v569:0, v570:0, v571:0, v572:0, v573:0, v574:0, v575:0, v576:0, v577:0, v567:0, v578:0, v579:0, 3, 7, 4, 15, 8, 29, 28, 16) -> f_707(v555:0, v556:0, v557:0, v558:0, v559:0, v560:0, 0, 1 + v679:0, 1, v778:0, v613:0, v907:0, v599:0, 8 + v599:0, v610:0, 8 + v610:0, v679:0, v573:0, v574:0, v575:0, v576:0, v577:0, v566:0, v579:0, 15 + v907:0, 3, 7, 4, 15, 8, 29, 28, 16) :|: v599:0 > -1 && v610:0 > -1 && v679:0 < 29 && v778:0 > 0 && v907:0 > 0 && v907:0 % 4 = 0
Removed division, modulo operations, cleaned up constraints. Obtained 4 rules.P rules:
f_707(v555:0, v556:0, v557:0, v558:0, v559:0, v560:0, cons_0, v562:0, cons_1, v564:0, v565:0, v566:0, v568:0, v569:0, v570:0, v571:0, v572:0, v573:0, v574:0, v575:0, v576:0, v577:0, v567:0, v578:0, v579:0, cons_3, cons_7, cons_4, cons_15, cons_8, cons_29, cons_28, cons_16) -> f_707'(v555:0, v556:0, v557:0, v558:0, v559:0, v560:0, 0, v562:0, 1, v564:0, v565:0, v566:0, v568:0, v569:0, v570:0, v571:0, v572:0, v573:0, v574:0, v575:0, v576:0, v577:0, v567:0, v578:0, v579:0, 3, 7, 4, 15, 8, 29, 28, 16) :|: v610:0 > -1 && v599:0 > -1 && v679:0 < 29 && v778:0 < 0 && v907:0 - 4 * div = 0 && v907:0 > 0 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_4 = 4 && cons_15 = 15 && cons_8 = 8 && cons_29 = 29 && cons_28 = 28 && cons_16 = 16
f_707'(v555:0, v556:0, v557:0, v558:0, v559:0, v560:0, cons_0, v562:0, cons_1, v564:0, v565:0, v566:0, v568:0, v569:0, v570:0, v571:0, v572:0, v573:0, v574:0, v575:0, v576:0, v577:0, v567:0, v578:0, v579:0, cons_3, cons_7, cons_4, cons_15, cons_8, cons_29, cons_28, cons_16) -> f_707(v555:0, v556:0, v557:0, v558:0, v559:0, v560:0, 0, 1 + v679:0, 1, v778:0, v613:0, v907:0, v599:0, 8 + v599:0, v610:0, 8 + v610:0, v679:0, v573:0, v574:0, v575:0, v576:0, v577:0, v566:0, v579:0, 15 + v907:0, 3, 7, 4, 15, 8, 29, 28, 16) :|: v907:0 > 0 && v610:0 > -1 && v599:0 > -1 && v679:0 < 29 && v778:0 < 0 && v907:0 - 4 * div = 0 && v907:0 - 4 * div < 4 && v907:0 - 4 * div >= 0 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_4 = 4 && cons_15 = 15 && cons_8 = 8 && cons_29 = 29 && cons_28 = 28 && cons_16 = 16
f_707(v555:0, v556:0, v557:0, v558:0, v559:0, v560:0, cons_0, v562:0, cons_1, v564:0, v565:0, v566:0, v568:0, v569:0, v570:0, v571:0, v572:0, v573:0, v574:0, v575:0, v576:0, v577:0, v567:0, v578:0, v579:0, cons_3, cons_7, cons_4, cons_15, cons_8, cons_29, cons_28, cons_16) -> f_707'(v555:0, v556:0, v557:0, v558:0, v559:0, v560:0, 0, v562:0, 1, v564:0, v565:0, v566:0, v568:0, v569:0, v570:0, v571:0, v572:0, v573:0, v574:0, v575:0, v576:0, v577:0, v567:0, v578:0, v579:0, 3, 7, 4, 15, 8, 29, 28, 16) :|: v610:0 > -1 && v599:0 > -1 && v679:0 < 29 && v778:0 > 0 && v907:0 - 4 * div = 0 && v907:0 > 0 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_4 = 4 && cons_15 = 15 && cons_8 = 8 && cons_29 = 29 && cons_28 = 28 && cons_16 = 16
f_707'(v555:0, v556:0, v557:0, v558:0, v559:0, v560:0, cons_0, v562:0, cons_1, v564:0, v565:0, v566:0, v568:0, v569:0, v570:0, v571:0, v572:0, v573:0, v574:0, v575:0, v576:0, v577:0, v567:0, v578:0, v579:0, cons_3, cons_7, cons_4, cons_15, cons_8, cons_29, cons_28, cons_16) -> f_707(v555:0, v556:0, v557:0, v558:0, v559:0, v560:0, 0, 1 + v679:0, 1, v778:0, v613:0, v907:0, v599:0, 8 + v599:0, v610:0, 8 + v610:0, v679:0, v573:0, v574:0, v575:0, v576:0, v577:0, v566:0, v579:0, 15 + v907:0, 3, 7, 4, 15, 8, 29, 28, 16) :|: v907:0 > 0 && v610:0 > -1 && v599:0 > -1 && v679:0 < 29 && v778:0 > 0 && v907:0 - 4 * div = 0 && v907:0 - 4 * div < 4 && v907:0 - 4 * div >= 0 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_4 = 4 && cons_15 = 15 && cons_8 = 8 && cons_29 = 29 && cons_28 = 28 && cons_16 = 16

----------------------------------------

(43)
Obligation:
Rules:
f_707(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32) -> f_707'(x, x1, x2, x3, x4, x5, 0, x7, 1, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, 3, 7, 4, 15, 8, 29, 28, 16) :|: x33 > -1 && x34 > -1 && x35 < 29 && x36 < 0 && x37 - 4 * x38 = 0 && x37 > 0 && x6 = 0 && x8 = 1 && x25 = 3 && x26 = 7 && x27 = 4 && x28 = 15 && x29 = 8 && x30 = 29 && x31 = 28 && x32 = 16
f_707'(x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65, x66, x67, x68, x69, x70, x71) -> f_707(x39, x40, x41, x42, x43, x44, 0, 1 + x72, 1, x73, x74, x75, x76, 8 + x76, x77, 8 + x77, x72, x56, x57, x58, x59, x60, x50, x63, 15 + x75, 3, 7, 4, 15, 8, 29, 28, 16) :|: x75 > 0 && x77 > -1 && x76 > -1 && x72 < 29 && x73 < 0 && x75 - 4 * x78 = 0 && x75 - 4 * x78 < 4 && x75 - 4 * x78 >= 0 && x45 = 0 && x47 = 1 && x64 = 3 && x65 = 7 && x66 = 4 && x67 = 15 && x68 = 8 && x69 = 29 && x70 = 28 && x71 = 16
f_707(x79, x80, x81, x82, x83, x84, x85, x86, x87, x88, x89, x90, x91, x92, x93, x94, x95, x96, x97, x98, x99, x100, x101, x102, x103, x104, x105, x106, x107, x108, x109, x110, x111) -> f_707'(x79, x80, x81, x82, x83, x84, 0, x86, 1, x88, x89, x90, x91, x92, x93, x94, x95, x96, x97, x98, x99, x100, x101, x102, x103, 3, 7, 4, 15, 8, 29, 28, 16) :|: x112 > -1 && x113 > -1 && x114 < 29 && x115 > 0 && x116 - 4 * x117 = 0 && x116 > 0 && x85 = 0 && x87 = 1 && x104 = 3 && x105 = 7 && x106 = 4 && x107 = 15 && x108 = 8 && x109 = 29 && x110 = 28 && x111 = 16
f_707'(x118, x119, x120, x121, x122, x123, x124, x125, x126, x127, x128, x129, x130, x131, x132, x133, x134, x135, x136, x137, x138, x139, x140, x141, x142, x143, x144, x145, x146, x147, x148, x149, x150) -> f_707(x118, x119, x120, x121, x122, x123, 0, 1 + x151, 1, x152, x153, x154, x155, 8 + x155, x156, 8 + x156, x151, x135, x136, x137, x138, x139, x129, x142, 15 + x154, 3, 7, 4, 15, 8, 29, 28, 16) :|: x154 > 0 && x156 > -1 && x155 > -1 && x151 < 29 && x152 > 0 && x154 - 4 * x157 = 0 && x154 - 4 * x157 < 4 && x154 - 4 * x157 >= 0 && x124 = 0 && x126 = 1 && x143 = 3 && x144 = 7 && x145 = 4 && x146 = 15 && x147 = 8 && x148 = 29 && x149 = 28 && x150 = 16
/hpcwork/ff862203/termcomp25/benchmarks/527RD.c:47:75: warning: unknown attribute '__leaf__' ignored [-Wunknown-attributes]
extern size_t __ctype_get_mb_cur_max (void) __attribute__ ((__nothrow__ , __leaf__)) ;
                                                                          ^
/hpcwork/ff862203/termcomp25/benchmarks/527RD.c:50:36: warning: unknown attribute '__leaf__' ignored [-Wunknown-attributes]
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;
                                   ^
/hpcwork/ff862203/termcomp25/benchmarks/527RD.c:52:36: warning: unknown attribute '__leaf__' ignored [-Wunknown-attributes]
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;
                                   ^
/hpcwork/ff862203/termcomp25/benchmarks/527RD.c:54:36: warning: unknown attribute '__leaf__' ignored [-Wunknown-attributes]
