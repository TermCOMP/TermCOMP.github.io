YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/Tc8Q7.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could be proven:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 40 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 5160 ms]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) LLVM Symbolic Execution SCC
        (8) SCC2IRS [SOUND, 148 ms]
        (9) IntTRS
        (10) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (11) IntTRS
        (12) PolynomialOrderProcessor [EQUIVALENT, 8 ms]
        (13) IntTRS
        (14) TerminationGraphProcessor [EQUIVALENT, 16 ms]
        (15) IntTRS
        (16) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (17) IntTRS
        (18) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
        (19) IntTRS
        (20) PolynomialOrderProcessor [EQUIVALENT, 2 ms]
        (21) YES
    (22) LLVM Symbolic Execution SCC
        (23) SCC2IRS [SOUND, 122 ms]
        (24) IntTRS
        (25) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (26) IntTRS
        (27) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
        (28) IntTRS
        (29) PolynomialOrderProcessor [EQUIVALENT, 4 ms]
        (30) YES


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/Tc8Q7.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/Tc8Q7.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "subseq" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: (0 *i8, 1 *i8) variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 10
	0:
		%3 = alloca i32, align 4
		%4 = alloca *i8, align 8
		%5 = alloca *i8, align 8
		%6 = alloca *i8, align 8
		%7 = alloca *i8, align 8
		store %0, %4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %4)
		store %1, %5
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %5)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %6)
		%8 = load %4
		store %8, %6
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %7)
		%9 = load %5
		store %9, %7
		br %10
	10:
		%11 = load %6
		%12 = load %11
		%13 = sext i8 %12 to i32
		%14 = icmp ne %13 0
		br %14, %15, %20
	15:
		%16 = load %7
		%17 = load %16
		%18 = sext i8 %17 to i32
		%19 = icmp ne %18 0
		br %20
	20:
		%21 = phi [0, %10], [%19, %15]
		br %21, %22, %36
	22:
		%23 = load %6
		%24 = load %23
		%25 = sext i8 %24 to i32
		%26 = load %7
		%27 = load %26
		%28 = sext i8 %27 to i32
		%29 = icmp eq %25 %28
		br %29, %30, %33
	30:
		%31 = load %6
		%32 = getelementptr %31, 1
		store %32, %6
		br %33
	33:
		%34 = load %7
		%35 = getelementptr %34, 1
		store %35, %7
		br %10
	36:
		%37 = load %7
		%38 = load %37
		%39 = sext i8 %38 to i32
		%40 = icmp eq %39 0
		br %40, %41, %42
	41:
		store 1, %3
		br %43
	42:
		store 0, %3
		br %43
	43:
		%44 = load %3
		ret %44

*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 56
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		%3 = alloca i32, align 4
		%4 = alloca *i8, align 8
		%5 = alloca *i8, align 8
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		%6 = call i32 @__VERIFIER_nondet_int()
		store %6, %2
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		%7 = call i32 @__VERIFIER_nondet_int()
		store %7, %3
		%8 = load %2
		%9 = icmp slt %8 1
		br %9, %10, %11
	10:
		store 1, %2
		br %11
	11:
		%12 = load %3
		%13 = icmp slt %12 1
		br %13, %14, %15
	14:
		store 1, %3
		br %15
	15:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %4)
		%16 = load %2
		%17 = sext i32 %16 to i64
		%18 = mul i64 %17, 1
		%19 = alloca i8, numElementsLit: %18, align 16
		store %19, %4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %5)
		%20 = load %3
		%21 = sext i32 %20 to i64
		%22 = mul i64 %21, 1
		%23 = alloca i8, numElementsLit: %22, align 16
		store %23, %5
		%24 = load %4
		%25 = load %2
		%26 = sub i32 %25, 1
		%27 = sext i32 %26 to i64
		%28 = getelementptr %24, %27
		store 0, %28
		%29 = load %5
		%30 = load %3
		%31 = sub i32 %30, 1
		%32 = sext i32 %31 to i64
		%33 = getelementptr %29, %32
		store 0, %33
		%34 = load %4
		%35 = load %5
		%36 = call i32 @subseq(*i8 %34, *i8 %35)
		ret %36


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 2 SCCs.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC
----------------------------------------

(8) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 67 rulesP rules:
f_1160(v6339, v6340, v6341, v6342, v6343, v6344, v6345, v6351, v6523, 1, v6349, v6347, v6346, v6434, v6352, v6364, v6353, v6365, v6354, v6366, v6355, v6367, v6356, v6368, v6361, v6363, v6369, v6370, v6371, v6372, v6373, v6374, v6375, v6350, v6376, 0, v6357, v6358, v6360, v6362, 3, 7, 2, 4, 8) -> f_1163(v6339, v6340, v6341, v6342, v6343, v6344, v6345, v6351, v6523, 1, v6349, v6347, v6346, v6434, v6352, v6364, v6353, v6365, v6354, v6366, v6355, v6367, v6356, v6368, v6361, v6363, v6369, v6370, v6371, v6372, v6373, v6374, v6375, v6350, v6376, 0, v6357, v6358, v6360, v6362, 3, 7, 2, 4, 8) :|: 0 = 0
f_1163(v6339, v6340, v6341, v6342, v6343, v6344, v6345, v6351, v6523, 1, v6349, v6347, v6346, v6434, v6352, v6364, v6353, v6365, v6354, v6366, v6355, v6367, v6356, v6368, v6361, v6363, v6369, v6370, v6371, v6372, v6373, v6374, v6375, v6350, v6376, 0, v6357, v6358, v6360, v6362, 3, 7, 2, 4, 8) -> f_1167(v6339, v6340, v6341, v6342, v6343, v6344, v6345, v6351, v6523, 1, v6349, v6347, v6346, v6434, v6352, v6364, v6353, v6365, v6354, v6366, v6355, v6367, v6356, v6368, v6361, v6363, v6369, v6370, v6371, v6372, v6373, v6374, v6375, v6350, v6376, 0, v6357, v6358, v6360, v6362, 3, 7, 2, 4, 8) :|: TRUE
f_1167(v6339, v6340, v6341, v6342, v6343, v6344, v6345, v6351, v6523, 1, v6349, v6347, v6346, v6434, v6352, v6364, v6353, v6365, v6354, v6366, v6355, v6367, v6356, v6368, v6361, v6363, v6369, v6370, v6371, v6372, v6373, v6374, v6375, v6350, v6376, 0, v6357, v6358, v6360, v6362, 3, 7, 2, 4, 8) -> f_1171(v6339, v6340, v6341, v6342, v6343, v6344, v6345, v6351, v6523, 1, v6434, v6347, v6346, v6349, v6352, v6364, v6353, v6365, v6354, v6366, v6355, v6367, v6356, v6368, v6361, v6363, v6369, v6370, v6371, v6372, v6373, v6374, v6375, v6350, v6376, 0, v6357, v6358, v6360, v6362, 3, 7, 2, 4, 8) :|: 0 = 0
f_1171(v6339, v6340, v6341, v6342, v6343, v6344, v6345, v6351, v6523, 1, v6434, v6347, v6346, v6349, v6352, v6364, v6353, v6365, v6354, v6366, v6355, v6367, v6356, v6368, v6361, v6363, v6369, v6370, v6371, v6372, v6373, v6374, v6375, v6350, v6376, 0, v6357, v6358, v6360, v6362, 3, 7, 2, 4, 8) -> f_1174(v6339, v6340, v6341, v6342, v6343, v6344, v6345, v6351, v6523, 1, v6434, v6962, v6347, v6346, v6349, v6352, v6364, v6353, v6365, v6354, v6366, v6355, v6367, v6356, v6368, v6361, v6363, v6369, v6370, v6371, v6372, v6373, v6374, v6375, v6350, v6376, 0, v6357, v6358, v6360, v6362, 3, 7, 2, 4, 8) :|: TRUE
f_1174(v6339, v6340, v6341, v6342, v6343, v6344, v6345, v6351, v6523, 1, v6434, v6962, v6347, v6346, v6349, v6352, v6364, v6353, v6365, v6354, v6366, v6355, v6367, v6356, v6368, v6361, v6363, v6369, v6370, v6371, v6372, v6373, v6374, v6375, v6350, v6376, 0, v6357, v6358, v6360, v6362, 3, 7, 2, 4, 8) -> f_1177(v6339, v6340, v6341, v6342, v6343, v6344, v6345, v6351, v6523, 1, v6434, v6962, v6346, v6347, v6349, v6352, v6364, v6353, v6365, v6354, v6366, v6355, v6367, v6356, v6368, v6361, v6363, v6369, v6370, v6371, v6372, v6373, v6374, v6375, v6350, v6376, 0, v6357, v6358, v6360, v6362, 3, 7, 2, 4, 8) :|: 0 = 0
f_1177(v6339, v6340, v6341, v6342, v6343, v6344, v6345, v6351, v6523, 1, v6434, v6962, v6346, v6347, v6349, v6352, v6364, v6353, v6365, v6354, v6366, v6355, v6367, v6356, v6368, v6361, v6363, v6369, v6370, v6371, v6372, v6373, v6374, v6375, v6350, v6376, 0, v6357, v6358, v6360, v6362, 3, 7, 2, 4, 8) -> f_1180(v6339, v6340, v6341, v6342, v6343, v6344, v6345, v6351, v6523, 1, v6434, v6962, v6346, v6347, v6349, v6352, v6364, v6353, v6365, v6354, v6366, v6355, v6367, v6356, v6368, v6361, v6363, v6369, v6370, v6371, v6372, v6373, v6374, v6375, v6350, v6376, 0, v6357, v6358, v6360, v6362, 3, 7, 2, 4, 8) :|: v6962 != 0 && v6434 < v6363 && 4 <= v6363
f_1180(v6339, v6340, v6341, v6342, v6343, v6344, v6345, v6351, v6523, 1, v6434, v6962, v6346, v6347, v6349, v6352, v6364, v6353, v6365, v6354, v6366, v6355, v6367, v6356, v6368, v6361, v6363, v6369, v6370, v6371, v6372, v6373, v6374, v6375, v6350, v6376, 0, v6357, v6358, v6360, v6362, 3, 7, 2, 4, 8) -> f_1184(v6339, v6340, v6341, v6342, v6343, v6344, v6345, v6351, v6523, 1, v6434, v6962, v6346, v6347, v6349, v6352, v6364, v6353, v6365, v6354, v6366, v6355, v6367, v6356, v6368, v6361, v6363, v6369, v6370, v6371, v6372, v6373, v6374, v6375, v6350, v6376, 0, v6357, v6358, v6360, v6362, 3, 7, 2, 4, 8) :|: 0 = 0
f_1184(v6339, v6340, v6341, v6342, v6343, v6344, v6345, v6351, v6523, 1, v6434, v6962, v6346, v6347, v6349, v6352, v6364, v6353, v6365, v6354, v6366, v6355, v6367, v6356, v6368, v6361, v6363, v6369, v6370, v6371, v6372, v6373, v6374, v6375, v6350, v6376, 0, v6357, v6358, v6360, v6362, 3, 7, 2, 4, 8) -> f_1188(v6339, v6340, v6341, v6342, v6343, v6344, v6345, v6351, v6523, 1, v6434, v6962, v6346, v6347, v6349, v6352, v6364, v6353, v6365, v6354, v6366, v6355, v6367, v6356, v6368, v6361, v6363, v6369, v6370, v6371, v6372, v6373, v6374, v6375, v6350, v6376, 0, v6357, v6358, v6360, v6362, 3, 7, 2, 4, 8) :|: 0 = 0
f_1188(v6339, v6340, v6341, v6342, v6343, v6344, v6345, v6351, v6523, 1, v6434, v6962, v6346, v6347, v6349, v6352, v6364, v6353, v6365, v6354, v6366, v6355, v6367, v6356, v6368, v6361, v6363, v6369, v6370, v6371, v6372, v6373, v6374, v6375, v6350, v6376, 0, v6357, v6358, v6360, v6362, 3, 7, 2, 4, 8) -> f_1105(v6339, v6340, v6341, v6342, v6343, v6344, v6345, v6351, v6523, 1, v6434, v6962, v6346, v6347, v6349, v6352, v6364, v6353, v6365, v6354, v6366, v6355, v6367, v6356, v6368, v6361, v6363, v6369, v6370, v6371, v6372, v6373, v6374, v6375, 0, v6357, v6358, v5761, v5763, 3, 7, 2, 4, 8) :|: TRUE
f_1105(v5738, v5739, v5740, v5741, v5742, v5743, v5744, v5745, v5746, 1, v5748, v5749, v5750, v5751, v5752, v5753, v5765, v5754, v5766, v5755, v5767, v5756, v5768, v5757, v5769, v5762, v5764, v5770, v5771, v5772, v5773, v5774, v5775, v5776, 0, v5758, v5759, v5761, v5763, 3, 7, 2, 4, 8) -> f_1109(v5738, v5739, v5740, v5741, v5742, v5743, v5744, v5745, v5746, 1, v5748, v5749, v5750, v5751, v5752, v5753, v5765, v5754, v5766, v5755, v5767, v5756, v5768, v5757, v5769, v5762, v5764, v5770, v5771, v5772, v5773, v5774, v5775, v5776, 0, v5758, v5759, v5761, v5763, 3, 7, 2, 4, 8) :|: TRUE
f_1109(v5738, v5739, v5740, v5741, v5742, v5743, v5744, v5745, v5746, 1, v5748, v5749, v5750, v5751, v5752, v5753, v5765, v5754, v5766, v5755, v5767, v5756, v5768, v5757, v5769, v5762, v5764, v5770, v5771, v5772, v5773, v5774, v5775, v5776, 0, v5758, v5759, v5761, v5763, 3, 7, 2, 4, 8) -> f_1112(v5738, v5739, v5740, v5741, v5742, v5743, v5744, v5745, v5746, 1, v5748, v5749, v5751, v5752, v5750, v5753, v5765, v5754, v5766, v5755, v5767, v5756, v5768, v5757, v5769, v5762, v5764, v5770, v5771, v5772, v5773, v5774, v5775, v5776, 0, v5758, v5759, v5761, v5763, 3, 7, 2, 4, 8) :|: 0 = 0
f_1112(v5738, v5739, v5740, v5741, v5742, v5743, v5744, v5745, v5746, 1, v5748, v5749, v5751, v5752, v5750, v5753, v5765, v5754, v5766, v5755, v5767, v5756, v5768, v5757, v5769, v5762, v5764, v5770, v5771, v5772, v5773, v5774, v5775, v5776, 0, v5758, v5759, v5761, v5763, 3, 7, 2, 4, 8) -> f_1115(v5738, v5739, v5740, v5741, v5742, v5743, v5744, v5745, v5746, 1, v5748, v5749, v5751, v5752, v5750, v5753, v5765, v5754, v5766, v5755, v5767, v5756, v5768, v5757, v5769, v5762, v5764, v5770, v5771, v5772, v5773, v5774, v5775, v5776, 0, v5758, v5759, v5761, v5763, 3, 7, 2, 4, 8) :|: 0 = 0
f_1115(v5738, v5739, v5740, v5741, v5742, v5743, v5744, v5745, v5746, 1, v5748, v5749, v5751, v5752, v5750, v5753, v5765, v5754, v5766, v5755, v5767, v5756, v5768, v5757, v5769, v5762, v5764, v5770, v5771, v5772, v5773, v5774, v5775, v5776, 0, v5758, v5759, v5761, v5763, 3, 7, 2, 4, 8) -> f_1118(v5738, v5739, v5740, v5741, v5742, v5743, v5744, v5745, v5746, 1, v5748, v5749, v5752, v5751, v5750, v5753, v5765, v5754, v5766, v5755, v5767, v5756, v5768, v5757, v5769, v5762, v5764, v5770, v5771, v5772, v5773, v5774, v5775, v5776, 0, v5758, v5759, v5761, v5763, 3, 7, 2, 4, 8) :|: 0 = 0
f_1118(v5738, v5739, v5740, v5741, v5742, v5743, v5744, v5745, v5746, 1, v5748, v5749, v5752, v5751, v5750, v5753, v5765, v5754, v5766, v5755, v5767, v5756, v5768, v5757, v5769, v5762, v5764, v5770, v5771, v5772, v5773, v5774, v5775, v5776, 0, v5758, v5759, v5761, v5763, 3, 7, 2, 4, 8) -> f_1121(v5738, v5739, v5740, v5741, v5742, v5743, v5744, v5745, v5746, 1, v5748, v5749, v5751, v5750, v5752, v5753, v5765, v5754, v5766, v5755, v5767, v5756, v5768, v5757, v5769, v5762, v5764, v5770, v5771, v5772, v5773, v5774, v5775, v5776, 0, v5758, v5759, v5761, v5763, 3, 7, 2, 4, 8) :|: 0 = 0
f_1121(v5738, v5739, v5740, v5741, v5742, v5743, v5744, v5745, v5746, 1, v5748, v5749, v5751, v5750, v5752, v5753, v5765, v5754, v5766, v5755, v5767, v5756, v5768, v5757, v5769, v5762, v5764, v5770, v5771, v5772, v5773, v5774, v5775, v5776, 0, v5758, v5759, v5761, v5763, 3, 7, 2, 4, 8) -> f_1124(v5738, v5739, v5740, v5741, v5742, v5743, v5744, v5745, v5746, 1, v5748, v5749, v5751, v5750, v5752, v5753, v5765, v5754, v5766, v5755, v5767, v5756, v5768, v5757, v5769, v5762, v5764, v5770, v5771, v5772, v5773, v5774, v5775, v5776, 0, v5758, v5759, v5761, v5763, 3, 7, 2, 4, 8) :|: 0 = 0
f_1124(v5738, v5739, v5740, v5741, v5742, v5743, v5744, v5745, v5746, 1, v5748, v5749, v5751, v5750, v5752, v5753, v5765, v5754, v5766, v5755, v5767, v5756, v5768, v5757, v5769, v5762, v5764, v5770, v5771, v5772, v5773, v5774, v5775, v5776, 0, v5758, v5759, v5761, v5763, 3, 7, 2, 4, 8) -> f_1126(v5738, v5739, v5740, v5741, v5742, v5743, v5744, v5745, v5746, 1, v5748, v5749, v5750, v5752, v5753, v5765, v5754, v5766, v5755, v5767, v5756, v5768, v5757, v5769, v5762, v5764, v5770, v5771, v5772, v5773, v5774, v5775, v5776, v5751, 0, v5758, v5759, v5761, v5763, 3, 7, 2, 4, 8) :|: 0 = 0
f_1126(v5738, v5739, v5740, v5741, v5742, v5743, v5744, v5745, v5746, 1, v5748, v5749, v5750, v5752, v5753, v5765, v5754, v5766, v5755, v5767, v5756, v5768, v5757, v5769, v5762, v5764, v5770, v5771, v5772, v5773, v5774, v5775, v5776, v5751, 0, v5758, v5759, v5761, v5763, 3, 7, 2, 4, 8) -> f_1128(v5738, v5739, v5740, v5741, v5742, v5743, v5744, v5745, v5749, 1, v5748, v5750, v5752, v5753, v5765, v5754, v5766, v5755, v5767, v5756, v5768, v5757, v5769, v5762, v5764, v5770, v5771, v5772, v5773, v5774, v5775, v5776, v5751, 0, v5758, v5759, v5761, v5763, 3, 7, 2, 4, 8) :|: v5746 = v5749
f_1126(v5738, v5739, v5740, v5741, v5742, v5743, v5744, v5745, v5746, 1, v5748, v5749, v5750, v5752, v5753, v5765, v5754, v5766, v5755, v5767, v5756, v5768, v5757, v5769, v5762, v5764, v5770, v5771, v5772, v5773, v5774, v5775, v5776, v5751, 0, v5758, v5759, v5761, v5763, 3, 7, 2, 4, 8) -> f_1129(v5738, v5739, v5740, v5741, v5742, v5743, v5744, v5745, v5746, 1, v5748, v5749, v5750, v5752, v5753, v5765, v5754, v5766, v5755, v5767, v5756, v5768, v5757, v5769, v5762, v5764, v5770, v5771, v5772, v5773, v5774, v5775, v5776, v5751, 0, v5758, v5759, v5761, v5763, 3, 7, 2, 4, 8) :|: v5746 != v5749
f_1128(v5738, v5739, v5740, v5741, v5742, v5743, v5744, v5745, v5749, 1, v5748, v5750, v5752, v5753, v5765, v5754, v5766, v5755, v5767, v5756, v5768, v5757, v5769, v5762, v5764, v5770, v5771, v5772, v5773, v5774, v5775, v5776, v5751, 0, v5758, v5759, v5761, v5763, 3, 7, 2, 4, 8) -> f_1131(v5738, v5739, v5740, v5741, v5742, v5743, v5744, v5745, v5749, 1, v5748, v5750, v5752, v5753, v5765, v5754, v5766, v5755, v5767, v5756, v5768, v5757, v5769, v5762, v5764, v5770, v5771, v5772, v5773, v5774, v5775, v5776, v5751, 0, v5758, v5759, v5761, v5763, 3, 7, 2, 4, 8) :|: 0 = 0
f_1131(v5738, v5739, v5740, v5741, v5742, v5743, v5744, v5745, v5749, 1, v5748, v5750, v5752, v5753, v5765, v5754, v5766, v5755, v5767, v5756, v5768, v5757, v5769, v5762, v5764, v5770, v5771, v5772, v5773, v5774, v5775, v5776, v5751, 0, v5758, v5759, v5761, v5763, 3, 7, 2, 4, 8) -> f_1134(v5738, v5739, v5740, v5741, v5742, v5743, v5744, v5745, v5749, 1, v5748, v5750, v5752, v5753, v5765, v5754, v5766, v5755, v5767, v5756, v5768, v5757, v5769, v5762, v5764, v5770, v5771, v5772, v5773, v5774, v5775, v5776, v5751, 0, v5758, v5759, v5761, v5763, 3, 7, 2, 4, 8) :|: TRUE
f_1134(v5738, v5739, v5740, v5741, v5742, v5743, v5744, v5745, v5749, 1, v5748, v5750, v5752, v5753, v5765, v5754, v5766, v5755, v5767, v5756, v5768, v5757, v5769, v5762, v5764, v5770, v5771, v5772, v5773, v5774, v5775, v5776, v5751, 0, v5758, v5759, v5761, v5763, 3, 7, 2, 4, 8) -> f_1209(v5738, v5739, v5740, v5741, v5742, v5743, v5744, v5745, v5749, 1, v5748, v5750, v5752, v5753, v5765, v5754, v5766, v5755, v5767, v5756, v5768, v5757, v5769, v5762, v5764, v5770, v5771, v5772, v5773, v5774, v5775, v5776, v5751, v5751, 0, v5758, v5759, v7650, v7652, 3, 7, 2, 4, 8) :|: TRUE
f_1209(v7629, v7630, v7631, v7632, v7633, v7634, v7635, v7636, v7637, 1, v7639, v7640, v7641, v7642, v7654, v7643, v7655, v7644, v7656, v7645, v7657, v7646, v7658, v7651, v7653, v7659, v7660, v7661, v7662, v7663, v7664, v7665, v7666, v7667, 0, v7647, v7648, v7650, v7652, 3, 7, 2, 4, 8) -> f_1213(v7629, v7630, v7631, v7632, v7633, v7634, v7635, v7636, v7637, 1, v7639, v7641, v7642, v7654, v7643, v7655, v7644, v7656, v7645, v7657, v7646, v7658, v7651, v7653, v7659, v7660, v7661, v7662, v7663, v7664, v7665, v7640, v7666, v7667, 0, v7647, v7648, v7650, v7652, 3, 7, 2, 4, 8) :|: 0 = 0
f_1213(v7629, v7630, v7631, v7632, v7633, v7634, v7635, v7636, v7637, 1, v7639, v7641, v7642, v7654, v7643, v7655, v7644, v7656, v7645, v7657, v7646, v7658, v7651, v7653, v7659, v7660, v7661, v7662, v7663, v7664, v7665, v7640, v7666, v7667, 0, v7647, v7648, v7650, v7652, 3, 7, 2, 4, 8) -> f_1216(v7629, v7630, v7631, v7632, v7633, v7634, v7635, v7636, v7637, 1, v7639, v7802, v7641, v7642, v7654, v7643, v7655, v7644, v7656, v7645, v7657, v7646, v7658, v7651, v7653, v7659, v7660, v7661, v7662, v7663, v7664, v7665, v7640, v7666, v7667, 0, v7647, v7648, v7650, v7652, 3, 7, 2, 4, 8) :|: v7802 = 1 + v7636 && 3 <= v7802
f_1216(v7629, v7630, v7631, v7632, v7633, v7634, v7635, v7636, v7637, 1, v7639, v7802, v7641, v7642, v7654, v7643, v7655, v7644, v7656, v7645, v7657, v7646, v7658, v7651, v7653, v7659, v7660, v7661, v7662, v7663, v7664, v7665, v7640, v7666, v7667, 0, v7647, v7648, v7650, v7652, 3, 7, 2, 4, 8) -> f_1219(v7629, v7630, v7631, v7632, v7633, v7634, v7635, v7636, v7637, 1, v7639, v7802, v7641, v7642, v7654, v7643, v7655, v7644, v7656, v7645, v7657, v7646, v7658, v7651, v7653, v7659, v7660, v7661, v7662, v7663, v7664, v7665, v7640, v7666, v7667, 0, v7647, v7648, v7650, v7652, 3, 7, 2, 4, 8) :|: TRUE
f_1219(v7629, v7630, v7631, v7632, v7633, v7634, v7635, v7636, v7637, 1, v7639, v7802, v7641, v7642, v7654, v7643, v7655, v7644, v7656, v7645, v7657, v7646, v7658, v7651, v7653, v7659, v7660, v7661, v7662, v7663, v7664, v7665, v7640, v7666, v7667, 0, v7647, v7648, v7650, v7652, 3, 7, 2, 4, 8) -> f_1222(v7629, v7630, v7631, v7632, v7633, v7634, v7635, v7636, v7637, 1, v7639, v7802, v7641, v7642, v7654, v7643, v7655, v7644, v7656, v7645, v7657, v7646, v7658, v7651, v7653, v7659, v7660, v7661, v7662, v7663, v7664, v7665, v7640, v7666, v7667, 0, v7647, v7648, v7650, v7652, 3, 7, 2, 4, 8) :|: TRUE
f_1222(v7629, v7630, v7631, v7632, v7633, v7634, v7635, v7636, v7637, 1, v7639, v7802, v7641, v7642, v7654, v7643, v7655, v7644, v7656, v7645, v7657, v7646, v7658, v7651, v7653, v7659, v7660, v7661, v7662, v7663, v7664, v7665, v7640, v7666, v7667, 0, v7647, v7648, v7650, v7652, 3, 7, 2, 4, 8) -> f_1144(v7629, v7630, v7631, v7632, v7633, v7634, v7635, v7636, v7637, 1, v7639, v7641, v7802, v7642, v7654, v7643, v7655, v7644, v7656, v7645, v7657, v7646, v7658, v7651, v7653, v7659, v7660, v7661, v7662, v7663, v7664, v7665, v7667, 0, v7647, v7648, v6360, v6362, 3, 7, 2, 4, 8) :|: TRUE
f_1144(v6339, v6340, v6341, v6342, v6343, v6344, v6345, v6346, v6347, 1, v6349, v6350, v6351, v6352, v6364, v6353, v6365, v6354, v6366, v6355, v6367, v6356, v6368, v6361, v6363, v6369, v6370, v6371, v6372, v6373, v6374, v6375, v6376, 0, v6357, v6358, v6360, v6362, 3, 7, 2, 4, 8) -> f_1146(v6339, v6340, v6341, v6342, v6343, v6344, v6345, v6346, v6347, 1, v6349, v6351, v6352, v6364, v6353, v6365, v6354, v6366, v6355, v6367, v6356, v6368, v6361, v6363, v6369, v6370, v6371, v6372, v6373, v6374, v6375, v6350, v6376, 0, v6357, v6358, v6360, v6362, 3, 7, 2, 4, 8) :|: 0 = 0
f_1146(v6339, v6340, v6341, v6342, v6343, v6344, v6345, v6346, v6347, 1, v6349, v6351, v6352, v6364, v6353, v6365, v6354, v6366, v6355, v6367, v6356, v6368, v6361, v6363, v6369, v6370, v6371, v6372, v6373, v6374, v6375, v6350, v6376, 0, v6357, v6358, v6360, v6362, 3, 7, 2, 4, 8) -> f_1148(v6339, v6340, v6341, v6342, v6343, v6344, v6345, v6346, v6347, 1, v6349, v6434, v6351, v6352, v6364, v6353, v6365, v6354, v6366, v6355, v6367, v6356, v6368, v6361, v6363, v6369, v6370, v6371, v6372, v6373, v6374, v6375, v6350, v6376, 0, v6357, v6358, v6360, v6362, 3, 7, 2, 4, 8) :|: v6434 = 1 + v6349 && 3 <= v6434
f_1148(v6339, v6340, v6341, v6342, v6343, v6344, v6345, v6346, v6347, 1, v6349, v6434, v6351, v6352, v6364, v6353, v6365, v6354, v6366, v6355, v6367, v6356, v6368, v6361, v6363, v6369, v6370, v6371, v6372, v6373, v6374, v6375, v6350, v6376, 0, v6357, v6358, v6360, v6362, 3, 7, 2, 4, 8) -> f_1150(v6339, v6340, v6341, v6342, v6343, v6344, v6345, v6346, v6347, 1, v6349, v6434, v6351, v6352, v6364, v6353, v6365, v6354, v6366, v6355, v6367, v6356, v6368, v6361, v6363, v6369, v6370, v6371, v6372, v6373, v6374, v6375, v6350, v6376, 0, v6357, v6358, v6360, v6362, 3, 7, 2, 4, 8) :|: TRUE
f_1150(v6339, v6340, v6341, v6342, v6343, v6344, v6345, v6346, v6347, 1, v6349, v6434, v6351, v6352, v6364, v6353, v6365, v6354, v6366, v6355, v6367, v6356, v6368, v6361, v6363, v6369, v6370, v6371, v6372, v6373, v6374, v6375, v6350, v6376, 0, v6357, v6358, v6360, v6362, 3, 7, 2, 4, 8) -> f_1152(v6339, v6340, v6341, v6342, v6343, v6344, v6345, v6346, v6347, 1, v6349, v6434, v6351, v6352, v6364, v6353, v6365, v6354, v6366, v6355, v6367, v6356, v6368, v6361, v6363, v6369, v6370, v6371, v6372, v6373, v6374, v6375, v6350, v6376, 0, v6357, v6358, v6360, v6362, 3, 7, 2, 4, 8) :|: TRUE
f_1152(v6339, v6340, v6341, v6342, v6343, v6344, v6345, v6346, v6347, 1, v6349, v6434, v6351, v6352, v6364, v6353, v6365, v6354, v6366, v6355, v6367, v6356, v6368, v6361, v6363, v6369, v6370, v6371, v6372, v6373, v6374, v6375, v6350, v6376, 0, v6357, v6358, v6360, v6362, 3, 7, 2, 4, 8) -> f_1154(v6339, v6340, v6341, v6342, v6343, v6344, v6345, v6351, v6347, 1, v6349, v6346, v6434, v6352, v6364, v6353, v6365, v6354, v6366, v6355, v6367, v6356, v6368, v6361, v6363, v6369, v6370, v6371, v6372, v6373, v6374, v6375, v6350, v6376, 0, v6357, v6358, v6360, v6362, 3, 7, 2, 4, 8) :|: 0 = 0
f_1154(v6339, v6340, v6341, v6342, v6343, v6344, v6345, v6351, v6347, 1, v6349, v6346, v6434, v6352, v6364, v6353, v6365, v6354, v6366, v6355, v6367, v6356, v6368, v6361, v6363, v6369, v6370, v6371, v6372, v6373, v6374, v6375, v6350, v6376, 0, v6357, v6358, v6360, v6362, 3, 7, 2, 4, 8) -> f_1156(v6339, v6340, v6341, v6342, v6343, v6344, v6345, v6351, v6523, v6347, 1, v6349, v6346, v6434, v6352, v6364, v6353, v6365, v6354, v6366, v6355, v6367, v6356, v6368, v6361, v6363, v6369, v6370, v6371, v6372, v6373, v6374, v6375, v6350, v6376, 0, v6357, v6358, v6360, v6362, 3, 7, 2, 4, 8) :|: TRUE
f_1156(v6339, v6340, v6341, v6342, v6343, v6344, v6345, v6351, v6523, v6347, 1, v6349, v6346, v6434, v6352, v6364, v6353, v6365, v6354, v6366, v6355, v6367, v6356, v6368, v6361, v6363, v6369, v6370, v6371, v6372, v6373, v6374, v6375, v6350, v6376, 0, v6357, v6358, v6360, v6362, 3, 7, 2, 4, 8) -> f_1158(v6339, v6340, v6341, v6342, v6343, v6344, v6345, v6351, v6523, 1, v6349, v6347, v6346, v6434, v6352, v6364, v6353, v6365, v6354, v6366, v6355, v6367, v6356, v6368, v6361, v6363, v6369, v6370, v6371, v6372, v6373, v6374, v6375, v6350, v6376, 0, v6357, v6358, v6360, v6362, 3, 7, 2, 4, 8) :|: 0 = 0
f_1158(v6339, v6340, v6341, v6342, v6343, v6344, v6345, v6351, v6523, 1, v6349, v6347, v6346, v6434, v6352, v6364, v6353, v6365, v6354, v6366, v6355, v6367, v6356, v6368, v6361, v6363, v6369, v6370, v6371, v6372, v6373, v6374, v6375, v6350, v6376, 0, v6357, v6358, v6360, v6362, 3, 7, 2, 4, 8) -> f_1160(v6339, v6340, v6341, v6342, v6343, v6344, v6345, v6351, v6523, 1, v6349, v6347, v6346, v6434, v6352, v6364, v6353, v6365, v6354, v6366, v6355, v6367, v6356, v6368, v6361, v6363, v6369, v6370, v6371, v6372, v6373, v6374, v6375, v6350, v6376, 0, v6357, v6358, v6360, v6362, 3, 7, 2, 4, 8) :|: v6523 != 0 && v6351 < v6361 && 3 <= v6361
f_1129(v5738, v5739, v5740, v5741, v5742, v5743, v5744, v5745, v5746, 1, v5748, v5749, v5750, v5752, v5753, v5765, v5754, v5766, v5755, v5767, v5756, v5768, v5757, v5769, v5762, v5764, v5770, v5771, v5772, v5773, v5774, v5775, v5776, v5751, 0, v5758, v5759, v5761, v5763, 3, 7, 2, 4, 8) -> f_1132(v5738, v5739, v5740, v5741, v5742, v5743, v5744, v5745, v5746, 1, v5748, v5749, 0, v5750, v5752, v5753, v5765, v5754, v5766, v5755, v5767, v5756, v5768, v5757, v5769, v5762, v5764, v5770, v5771, v5772, v5773, v5774, v5775, v5776, v5751, v5758, v5759, v5761, v5763, 3, 7, 2, 4, 8) :|: 0 = 0
f_1132(v5738, v5739, v5740, v5741, v5742, v5743, v5744, v5745, v5746, 1, v5748, v5749, 0, v5750, v5752, v5753, v5765, v5754, v5766, v5755, v5767, v5756, v5768, v5757, v5769, v5762, v5764, v5770, v5771, v5772, v5773, v5774, v5775, v5776, v5751, v5758, v5759, v5761, v5763, 3, 7, 2, 4, 8) -> f_1135(v5738, v5739, v5740, v5741, v5742, v5743, v5744, v5745, v5746, 1, v5748, v5749, 0, v5750, v5752, v5753, v5765, v5754, v5766, v5755, v5767, v5756, v5768, v5757, v5769, v5762, v5764, v5770, v5771, v5772, v5773, v5774, v5775, v5776, v5751, v5758, v5759, v5761, v5763, 3, 7, 2, 4, 8) :|: TRUE
f_1135(v5738, v5739, v5740, v5741, v5742, v5743, v5744, v5745, v5746, 1, v5748, v5749, 0, v5750, v5752, v5753, v5765, v5754, v5766, v5755, v5767, v5756, v5768, v5757, v5769, v5762, v5764, v5770, v5771, v5772, v5773, v5774, v5775, v5776, v5751, v5758, v5759, v5761, v5763, 3, 7, 2, 4, 8) -> f_1211(v5738, v5739, v5740, v5741, v5742, v5743, v5744, v5745, v5746, 1, v5748, v5749, 0, v5750, v5752, v5753, v5765, v5754, v5766, v5755, v5767, v5756, v5768, v5757, v5769, v5762, v5764, v5770, v5771, v5772, v5773, v5774, v5775, v5776, v5751, v5751, v5758, v5759, v7716, v7718, 3, 7, 2, 4, 8) :|: TRUE
f_1211(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7704, v7705, 0, v7707, v7708, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) -> f_1214(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7704, v7705, 0, v7707, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) :|: 0 = 0
f_1214(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7704, v7705, 0, v7707, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) -> f_1217(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7704, v7705, 0, v7707, v7803, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) :|: v7803 = 1 + v7704 && 3 <= v7803
f_1217(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7704, v7705, 0, v7707, v7803, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) -> f_1220(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7704, v7705, 0, v7707, v7803, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) :|: TRUE
f_1220(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7704, v7705, 0, v7707, v7803, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) -> f_1223(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7704, v7705, 0, v7707, v7803, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) :|: TRUE
f_1223(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7704, v7705, 0, v7707, v7803, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) -> f_1225(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7704, v7705, 0, v7707, v7803, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) :|: 0 = 0
f_1225(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7704, v7705, 0, v7707, v7803, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) -> f_1226(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7704, v7705, 0, v7707, v7803, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) :|: 0 = 0
f_1226(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7704, v7705, 0, v7707, v7803, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) -> f_1227(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7704, v7705, 0, v7707, v7803, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) :|: 0 = 0
f_1227(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7704, v7705, 0, v7707, v7803, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) -> f_1228(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7704, v7705, 0, v7707, v7803, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) :|: 0 = 0
f_1228(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7704, v7705, 0, v7707, v7803, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) -> f_1229(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7704, v7705, 0, v7707, v7803, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) :|: TRUE
f_1229(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7704, v7705, 0, v7707, v7803, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) -> f_1230(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7803, v7705, v7704, 0, v7707, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) :|: 0 = 0
f_1230(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7803, v7705, v7704, 0, v7707, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) -> f_1231(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7803, v8058, v7705, v7704, 0, v7707, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) :|: TRUE
f_1231(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7803, v8058, v7705, v7704, 0, v7707, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) -> f_1232(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7803, v8058, v7704, v7705, 0, v7707, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) :|: 0 = 0
f_1232(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7803, v8058, v7704, v7705, 0, v7707, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) -> f_1233(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7803, v8058, v7704, v7705, 0, v7707, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) :|: v8058 != 0 && v7803 < v7719 && 4 <= v7719
f_1233(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7803, v8058, v7704, v7705, 0, v7707, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) -> f_1235(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7803, v8058, v7704, v7705, 0, v7707, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) :|: 0 = 0
f_1235(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7803, v8058, v7704, v7705, 0, v7707, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) -> f_1237(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7803, v8058, v7704, v7705, 0, v7707, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) :|: 0 = 0
f_1237(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7803, v8058, v7704, v7705, 0, v7707, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) -> f_1239(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7803, v8058, v7704, v7705, 0, v7707, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) :|: TRUE
f_1239(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7803, v8058, v7704, v7705, 0, v7707, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) -> f_1241(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7803, v8058, v7704, v7705, 0, v7707, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) :|: 0 = 0
f_1241(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7803, v8058, v7704, v7705, 0, v7707, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) -> f_1243(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7803, v8058, v7704, v7705, 0, v7707, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) :|: 0 = 0
f_1243(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7803, v8058, v7704, v7705, 0, v7707, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) -> f_1245(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7803, v8058, v7704, v7705, 0, v7707, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) :|: 0 = 0
f_1245(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7803, v8058, v7704, v7705, 0, v7707, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) -> f_1247(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7803, v8058, v7705, 0, v7707, v7704, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) :|: 0 = 0
f_1247(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7803, v8058, v7705, 0, v7707, v7704, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) -> f_1249(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7803, v8058, v7705, 0, v7707, v7704, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) :|: 0 = 0
f_1249(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7803, v8058, v7705, 0, v7707, v7704, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) -> f_1251(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7803, v8058, 0, v7707, v7704, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7705, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) :|: 0 = 0
f_1251(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7803, v8058, 0, v7707, v7704, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7705, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) -> f_1253(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v8058, 1, v7803, 0, v7707, v7704, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7705, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) :|: v7702 = v8058
f_1251(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7803, v8058, 0, v7707, v7704, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7705, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) -> f_1254(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7803, v8058, 0, v7707, v7704, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7705, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) :|: v7702 != v8058
f_1253(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v8058, 1, v7803, 0, v7707, v7704, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7705, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) -> f_1256(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v8058, 1, v7803, v7707, v7704, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7705, v7732, v7708, v7733, 0, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) :|: 0 = 0
f_1256(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v8058, 1, v7803, v7707, v7704, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7705, v7732, v7708, v7733, 0, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) -> f_1259(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v8058, 1, v7803, v7707, v7704, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7705, v7732, v7708, v7733, 0, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) :|: TRUE
f_1259(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v8058, 1, v7803, v7707, v7704, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7705, v7732, v7708, v7733, 0, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) -> f_1209(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v8058, 1, v7803, v7707, v7704, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7705, 0, v7714, v7715, v7650, v7652, 3, 7, 2, 4, 8) :|: TRUE
f_1254(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7803, v8058, 0, v7707, v7704, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7705, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) -> f_1257(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7803, v8058, 0, v7707, v7704, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7705, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) :|: 0 = 0
f_1257(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7803, v8058, 0, v7707, v7704, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7705, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) -> f_1260(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7803, v8058, 0, v7707, v7704, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7705, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) :|: TRUE
f_1260(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7803, v8058, 0, v7707, v7704, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7705, v7732, v7708, v7733, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) -> f_1211(v7694, v7695, v7696, v7697, v7698, v7699, v7700, v7701, v7702, 1, v7803, v8058, 0, v7707, v7704, v7709, v7720, v7710, v7721, v7711, v7722, v7712, v7723, v7713, v7724, v7717, v7719, v7725, v7726, v7727, v7728, v7729, v7730, v7731, v7732, v7705, v7714, v7715, v7716, v7718, 3, 7, 2, 4, 8) :|: TRUE
Combined rules. Obtained 18 rulesP rules:
f_1251(v7694:0, v7695:0, v7696:0, v7697:0, v7698:0, v7699:0, v7700:0, v7701:0, v7702:0, 1, v7803:0, v8058:0, 0, v7707:0, v7704:0, v7709:0, v7720:0, v7710:0, v7721:0, v7711:0, v7722:0, v7712:0, v7723:0, v7713:0, v7724:0, v7717:0, v7719:0, v7725:0, v7726:0, v7727:0, v7728:0, v7729:0, v7730:0, v7731:0, v7705:0, v7732:0, v7708:0, v7733:0, v7714:0, v7715:0, v7716:0, v7718:0, 3, 7, 2, 4, 8) -> f_1251(v7694:0, v7695:0, v7696:0, v7697:0, v7698:0, v7699:0, v7700:0, v7701:0, v7702:0, 1, 1 + v7803:0, v8058:1, 0, v7707:0, v7803:0, v7709:0, v7720:0, v7710:0, v7721:0, v7711:0, v7722:0, v7712:0, v7723:0, v7713:0, v7724:0, v7717:0, v7719:0, v7725:0, v7726:0, v7727:0, v7728:0, v7729:0, v7730:0, v7731:0, v8058:0, v7732:0, v7704:0, v7705:0, v7714:0, v7715:0, v7716:0, v7718:0, 3, 7, 2, 4, 8) :|: v7803:0 > 1 && v7719:0 > 1 + v7803:0 && v8058:1 < 0 && v8058:0 > v7702:0 && v7719:0 > 3
f_1251(v7694:0, v7695:0, v7696:0, v7697:0, v7698:0, v7699:0, v7700:0, v7701:0, v7702:0, 1, v7803:0, v8058:0, 0, v7707:0, v7704:0, v7709:0, v7720:0, v7710:0, v7721:0, v7711:0, v7722:0, v7712:0, v7723:0, v7713:0, v7724:0, v7717:0, v7719:0, v7725:0, v7726:0, v7727:0, v7728:0, v7729:0, v7730:0, v7731:0, v7705:0, v7732:0, v7708:0, v7733:0, v7714:0, v7715:0, v7716:0, v7718:0, 3, 7, 2, 4, 8) -> f_1251(v7694:0, v7695:0, v7696:0, v7697:0, v7698:0, v7699:0, v7700:0, v7701:0, v7702:0, 1, 1 + v7803:0, v8058:1, 0, v7707:0, v7803:0, v7709:0, v7720:0, v7710:0, v7721:0, v7711:0, v7722:0, v7712:0, v7723:0, v7713:0, v7724:0, v7717:0, v7719:0, v7725:0, v7726:0, v7727:0, v7728:0, v7729:0, v7730:0, v7731:0, v8058:0, v7732:0, v7704:0, v7705:0, v7714:0, v7715:0, v7716:0, v7718:0, 3, 7, 2, 4, 8) :|: v7803:0 > 1 && v7719:0 > 1 + v7803:0 && v8058:1 > 0 && v8058:0 > v7702:0 && v7719:0 > 3
f_1251(v7694:0, v7695:0, v7696:0, v7697:0, v7698:0, v7699:0, v7700:0, v7701:0, v7702:0, 1, v7803:0, v8058:0, 0, v7707:0, v7704:0, v7709:0, v7720:0, v7710:0, v7721:0, v7711:0, v7722:0, v7712:0, v7723:0, v7713:0, v7724:0, v7717:0, v7719:0, v7725:0, v7726:0, v7727:0, v7728:0, v7729:0, v7730:0, v7731:0, v7705:0, v7732:0, v7708:0, v7733:0, v7714:0, v7715:0, v7716:0, v7718:0, 3, 7, 2, 4, 8) -> f_1251(v7694:0, v7695:0, v7696:0, v7697:0, v7698:0, v7699:0, v7700:0, v7701:0, v7702:0, 1, 1 + v7803:0, v8058:1, 0, v7707:0, v7803:0, v7709:0, v7720:0, v7710:0, v7721:0, v7711:0, v7722:0, v7712:0, v7723:0, v7713:0, v7724:0, v7717:0, v7719:0, v7725:0, v7726:0, v7727:0, v7728:0, v7729:0, v7730:0, v7731:0, v8058:0, v7732:0, v7704:0, v7705:0, v7714:0, v7715:0, v7716:0, v7718:0, 3, 7, 2, 4, 8) :|: v7803:0 > 1 && v7719:0 > 1 + v7803:0 && v8058:1 < 0 && v8058:0 < v7702:0 && v7719:0 > 3
f_1251(v7694:0, v7695:0, v7696:0, v7697:0, v7698:0, v7699:0, v7700:0, v7701:0, v7702:0, 1, v7803:0, v8058:0, 0, v7707:0, v7704:0, v7709:0, v7720:0, v7710:0, v7721:0, v7711:0, v7722:0, v7712:0, v7723:0, v7713:0, v7724:0, v7717:0, v7719:0, v7725:0, v7726:0, v7727:0, v7728:0, v7729:0, v7730:0, v7731:0, v7705:0, v7732:0, v7708:0, v7733:0, v7714:0, v7715:0, v7716:0, v7718:0, 3, 7, 2, 4, 8) -> f_1251(v7694:0, v7695:0, v7696:0, v7697:0, v7698:0, v7699:0, v7700:0, v7701:0, v7702:0, 1, 1 + v7803:0, v8058:1, 0, v7707:0, v7803:0, v7709:0, v7720:0, v7710:0, v7721:0, v7711:0, v7722:0, v7712:0, v7723:0, v7713:0, v7724:0, v7717:0, v7719:0, v7725:0, v7726:0, v7727:0, v7728:0, v7729:0, v7730:0, v7731:0, v8058:0, v7732:0, v7704:0, v7705:0, v7714:0, v7715:0, v7716:0, v7718:0, 3, 7, 2, 4, 8) :|: v7803:0 > 1 && v7719:0 > 1 + v7803:0 && v8058:1 > 0 && v8058:0 < v7702:0 && v7719:0 > 3
f_1160(v6339:0, v6340:0, v6341:0, v6342:0, v6343:0, v6344:0, v6345:0, v6351:0, v6523:0, 1, v6349:0, v6347:0, v6346:0, v6434:0, v6352:0, v6364:0, v6353:0, v6365:0, v6354:0, v6366:0, v6355:0, v6367:0, v6356:0, v6368:0, v6361:0, v6363:0, v6369:0, v6370:0, v6371:0, v6372:0, v6373:0, v6374:0, v6375:0, v6350:0, v6376:0, 0, v6357:0, v6358:0, v6360:0, v6362:0, 3, 7, 2, 4, 8) -> f_1160(v6339:0, v6340:0, v6341:0, v6342:0, v6343:0, v6344:0, v6345:0, 1 + v6351:0, v6523:1, 1, v6434:0, v6523:0, v6351:0, 1 + v6434:0, v6352:0, v6364:0, v6353:0, v6365:0, v6354:0, v6366:0, v6355:0, v6367:0, v6356:0, v6368:0, v6361:0, v6363:0, v6369:0, v6370:0, v6371:0, v6372:0, v6373:0, v6374:0, v6375:0, v6349:0, v6347:0, 0, v6357:0, v6358:0, v6360:1, v6362:1, 3, 7, 2, 4, 8) :|: v6434:0 < v6363:0 && v6523:0 < 0 && v6363:0 > 3 && v6351:0 > 1 && v6434:0 > 1 && v6361:0 > 1 + v6351:0 && v6361:0 > 2 && v6523:1 < 0
f_1160(v6339:0, v6340:0, v6341:0, v6342:0, v6343:0, v6344:0, v6345:0, v6351:0, v6523:0, 1, v6349:0, v6347:0, v6346:0, v6434:0, v6352:0, v6364:0, v6353:0, v6365:0, v6354:0, v6366:0, v6355:0, v6367:0, v6356:0, v6368:0, v6361:0, v6363:0, v6369:0, v6370:0, v6371:0, v6372:0, v6373:0, v6374:0, v6375:0, v6350:0, v6376:0, 0, v6357:0, v6358:0, v6360:0, v6362:0, 3, 7, 2, 4, 8) -> f_1160(v6339:0, v6340:0, v6341:0, v6342:0, v6343:0, v6344:0, v6345:0, 1 + v6351:0, v6523:1, 1, v6434:0, v6523:0, v6351:0, 1 + v6434:0, v6352:0, v6364:0, v6353:0, v6365:0, v6354:0, v6366:0, v6355:0, v6367:0, v6356:0, v6368:0, v6361:0, v6363:0, v6369:0, v6370:0, v6371:0, v6372:0, v6373:0, v6374:0, v6375:0, v6349:0, v6347:0, 0, v6357:0, v6358:0, v6360:1, v6362:1, 3, 7, 2, 4, 8) :|: v6434:0 < v6363:0 && v6523:0 < 0 && v6363:0 > 3 && v6351:0 > 1 && v6434:0 > 1 && v6361:0 > 1 + v6351:0 && v6361:0 > 2 && v6523:1 > 0
f_1160(v6339:0, v6340:0, v6341:0, v6342:0, v6343:0, v6344:0, v6345:0, v6351:0, v6523:0, 1, v6349:0, v6347:0, v6346:0, v6434:0, v6352:0, v6364:0, v6353:0, v6365:0, v6354:0, v6366:0, v6355:0, v6367:0, v6356:0, v6368:0, v6361:0, v6363:0, v6369:0, v6370:0, v6371:0, v6372:0, v6373:0, v6374:0, v6375:0, v6350:0, v6376:0, 0, v6357:0, v6358:0, v6360:0, v6362:0, 3, 7, 2, 4, 8) -> f_1160(v6339:0, v6340:0, v6341:0, v6342:0, v6343:0, v6344:0, v6345:0, 1 + v6351:0, v6523:1, 1, v6434:0, v6523:0, v6351:0, 1 + v6434:0, v6352:0, v6364:0, v6353:0, v6365:0, v6354:0, v6366:0, v6355:0, v6367:0, v6356:0, v6368:0, v6361:0, v6363:0, v6369:0, v6370:0, v6371:0, v6372:0, v6373:0, v6374:0, v6375:0, v6349:0, v6347:0, 0, v6357:0, v6358:0, v6360:1, v6362:1, 3, 7, 2, 4, 8) :|: v6434:0 < v6363:0 && v6523:0 > 0 && v6363:0 > 3 && v6351:0 > 1 && v6434:0 > 1 && v6361:0 > 1 + v6351:0 && v6361:0 > 2 && v6523:1 < 0
f_1160(v6339:0, v6340:0, v6341:0, v6342:0, v6343:0, v6344:0, v6345:0, v6351:0, v6523:0, 1, v6349:0, v6347:0, v6346:0, v6434:0, v6352:0, v6364:0, v6353:0, v6365:0, v6354:0, v6366:0, v6355:0, v6367:0, v6356:0, v6368:0, v6361:0, v6363:0, v6369:0, v6370:0, v6371:0, v6372:0, v6373:0, v6374:0, v6375:0, v6350:0, v6376:0, 0, v6357:0, v6358:0, v6360:0, v6362:0, 3, 7, 2, 4, 8) -> f_1160(v6339:0, v6340:0, v6341:0, v6342:0, v6343:0, v6344:0, v6345:0, 1 + v6351:0, v6523:1, 1, v6434:0, v6523:0, v6351:0, 1 + v6434:0, v6352:0, v6364:0, v6353:0, v6365:0, v6354:0, v6366:0, v6355:0, v6367:0, v6356:0, v6368:0, v6361:0, v6363:0, v6369:0, v6370:0, v6371:0, v6372:0, v6373:0, v6374:0, v6375:0, v6349:0, v6347:0, 0, v6357:0, v6358:0, v6360:1, v6362:1, 3, 7, 2, 4, 8) :|: v6434:0 < v6363:0 && v6523:0 > 0 && v6363:0 > 3 && v6351:0 > 1 && v6434:0 > 1 && v6361:0 > 1 + v6351:0 && v6361:0 > 2 && v6523:1 > 0
f_1160(v6339:0, v6340:0, v6341:0, v6342:0, v6343:0, v6344:0, v6345:0, v6351:0, v6523:0, 1, v6349:0, v6347:0, v6346:0, v6434:0, v6352:0, v6364:0, v6353:0, v6365:0, v6354:0, v6366:0, v6355:0, v6367:0, v6356:0, v6368:0, v6361:0, v6363:0, v6369:0, v6370:0, v6371:0, v6372:0, v6373:0, v6374:0, v6375:0, v6350:0, v6376:0, 0, v6357:0, v6358:0, v6360:0, v6362:0, 3, 7, 2, 4, 8) -> f_1251(v6339:0, v6340:0, v6341:0, v6342:0, v6343:0, v6344:0, v6345:0, v6351:0, v6523:0, 1, 1 + v6434:0, v8058:0, 0, v6346:0, v6434:0, v6352:0, v6364:0, v6353:0, v6365:0, v6354:0, v6366:0, v6355:0, v6367:0, v6356:0, v6368:0, v6361:0, v6363:0, v6369:0, v6370:0, v6371:0, v6372:0, v6373:0, v6374:0, v6375:0, v6962:0, v6347:0, v6349:0, v6347:0, v6357:0, v6358:0, v7716:0, v7718:0, 3, 7, 2, 4, 8) :|: v6363:0 > 1 + v6434:0 && v6962:0 < 0 && v6363:0 > 3 && v6962:0 > v6523:0 && v6434:0 > 1 && v8058:0 < 0
f_1160(v6339:0, v6340:0, v6341:0, v6342:0, v6343:0, v6344:0, v6345:0, v6351:0, v6523:0, 1, v6349:0, v6347:0, v6346:0, v6434:0, v6352:0, v6364:0, v6353:0, v6365:0, v6354:0, v6366:0, v6355:0, v6367:0, v6356:0, v6368:0, v6361:0, v6363:0, v6369:0, v6370:0, v6371:0, v6372:0, v6373:0, v6374:0, v6375:0, v6350:0, v6376:0, 0, v6357:0, v6358:0, v6360:0, v6362:0, 3, 7, 2, 4, 8) -> f_1251(v6339:0, v6340:0, v6341:0, v6342:0, v6343:0, v6344:0, v6345:0, v6351:0, v6523:0, 1, 1 + v6434:0, v8058:0, 0, v6346:0, v6434:0, v6352:0, v6364:0, v6353:0, v6365:0, v6354:0, v6366:0, v6355:0, v6367:0, v6356:0, v6368:0, v6361:0, v6363:0, v6369:0, v6370:0, v6371:0, v6372:0, v6373:0, v6374:0, v6375:0, v6962:0, v6347:0, v6349:0, v6347:0, v6357:0, v6358:0, v7716:0, v7718:0, 3, 7, 2, 4, 8) :|: v6363:0 > 1 + v6434:0 && v6962:0 < 0 && v6363:0 > 3 && v6962:0 > v6523:0 && v6434:0 > 1 && v8058:0 > 0
f_1160(v6339:0, v6340:0, v6341:0, v6342:0, v6343:0, v6344:0, v6345:0, v6351:0, v6523:0, 1, v6349:0, v6347:0, v6346:0, v6434:0, v6352:0, v6364:0, v6353:0, v6365:0, v6354:0, v6366:0, v6355:0, v6367:0, v6356:0, v6368:0, v6361:0, v6363:0, v6369:0, v6370:0, v6371:0, v6372:0, v6373:0, v6374:0, v6375:0, v6350:0, v6376:0, 0, v6357:0, v6358:0, v6360:0, v6362:0, 3, 7, 2, 4, 8) -> f_1251(v6339:0, v6340:0, v6341:0, v6342:0, v6343:0, v6344:0, v6345:0, v6351:0, v6523:0, 1, 1 + v6434:0, v8058:0, 0, v6346:0, v6434:0, v6352:0, v6364:0, v6353:0, v6365:0, v6354:0, v6366:0, v6355:0, v6367:0, v6356:0, v6368:0, v6361:0, v6363:0, v6369:0, v6370:0, v6371:0, v6372:0, v6373:0, v6374:0, v6375:0, v6962:0, v6347:0, v6349:0, v6347:0, v6357:0, v6358:0, v7716:0, v7718:0, 3, 7, 2, 4, 8) :|: v6363:0 > 1 + v6434:0 && v6962:0 < 0 && v6363:0 > 3 && v6962:0 < v6523:0 && v6434:0 > 1 && v8058:0 < 0
f_1160(v6339:0, v6340:0, v6341:0, v6342:0, v6343:0, v6344:0, v6345:0, v6351:0, v6523:0, 1, v6349:0, v6347:0, v6346:0, v6434:0, v6352:0, v6364:0, v6353:0, v6365:0, v6354:0, v6366:0, v6355:0, v6367:0, v6356:0, v6368:0, v6361:0, v6363:0, v6369:0, v6370:0, v6371:0, v6372:0, v6373:0, v6374:0, v6375:0, v6350:0, v6376:0, 0, v6357:0, v6358:0, v6360:0, v6362:0, 3, 7, 2, 4, 8) -> f_1251(v6339:0, v6340:0, v6341:0, v6342:0, v6343:0, v6344:0, v6345:0, v6351:0, v6523:0, 1, 1 + v6434:0, v8058:0, 0, v6346:0, v6434:0, v6352:0, v6364:0, v6353:0, v6365:0, v6354:0, v6366:0, v6355:0, v6367:0, v6356:0, v6368:0, v6361:0, v6363:0, v6369:0, v6370:0, v6371:0, v6372:0, v6373:0, v6374:0, v6375:0, v6962:0, v6347:0, v6349:0, v6347:0, v6357:0, v6358:0, v7716:0, v7718:0, 3, 7, 2, 4, 8) :|: v6363:0 > 1 + v6434:0 && v6962:0 < 0 && v6363:0 > 3 && v6962:0 < v6523:0 && v6434:0 > 1 && v8058:0 > 0
f_1160(v6339:0, v6340:0, v6341:0, v6342:0, v6343:0, v6344:0, v6345:0, v6351:0, v6523:0, 1, v6349:0, v6347:0, v6346:0, v6434:0, v6352:0, v6364:0, v6353:0, v6365:0, v6354:0, v6366:0, v6355:0, v6367:0, v6356:0, v6368:0, v6361:0, v6363:0, v6369:0, v6370:0, v6371:0, v6372:0, v6373:0, v6374:0, v6375:0, v6350:0, v6376:0, 0, v6357:0, v6358:0, v6360:0, v6362:0, 3, 7, 2, 4, 8) -> f_1251(v6339:0, v6340:0, v6341:0, v6342:0, v6343:0, v6344:0, v6345:0, v6351:0, v6523:0, 1, 1 + v6434:0, v8058:0, 0, v6346:0, v6434:0, v6352:0, v6364:0, v6353:0, v6365:0, v6354:0, v6366:0, v6355:0, v6367:0, v6356:0, v6368:0, v6361:0, v6363:0, v6369:0, v6370:0, v6371:0, v6372:0, v6373:0, v6374:0, v6375:0, v6962:0, v6347:0, v6349:0, v6347:0, v6357:0, v6358:0, v7716:0, v7718:0, 3, 7, 2, 4, 8) :|: v6363:0 > 1 + v6434:0 && v6962:0 > 0 && v6363:0 > 3 && v6962:0 > v6523:0 && v6434:0 > 1 && v8058:0 < 0
f_1160(v6339:0, v6340:0, v6341:0, v6342:0, v6343:0, v6344:0, v6345:0, v6351:0, v6523:0, 1, v6349:0, v6347:0, v6346:0, v6434:0, v6352:0, v6364:0, v6353:0, v6365:0, v6354:0, v6366:0, v6355:0, v6367:0, v6356:0, v6368:0, v6361:0, v6363:0, v6369:0, v6370:0, v6371:0, v6372:0, v6373:0, v6374:0, v6375:0, v6350:0, v6376:0, 0, v6357:0, v6358:0, v6360:0, v6362:0, 3, 7, 2, 4, 8) -> f_1251(v6339:0, v6340:0, v6341:0, v6342:0, v6343:0, v6344:0, v6345:0, v6351:0, v6523:0, 1, 1 + v6434:0, v8058:0, 0, v6346:0, v6434:0, v6352:0, v6364:0, v6353:0, v6365:0, v6354:0, v6366:0, v6355:0, v6367:0, v6356:0, v6368:0, v6361:0, v6363:0, v6369:0, v6370:0, v6371:0, v6372:0, v6373:0, v6374:0, v6375:0, v6962:0, v6347:0, v6349:0, v6347:0, v6357:0, v6358:0, v7716:0, v7718:0, 3, 7, 2, 4, 8) :|: v6363:0 > 1 + v6434:0 && v6962:0 > 0 && v6363:0 > 3 && v6962:0 > v6523:0 && v6434:0 > 1 && v8058:0 > 0
f_1160(v6339:0, v6340:0, v6341:0, v6342:0, v6343:0, v6344:0, v6345:0, v6351:0, v6523:0, 1, v6349:0, v6347:0, v6346:0, v6434:0, v6352:0, v6364:0, v6353:0, v6365:0, v6354:0, v6366:0, v6355:0, v6367:0, v6356:0, v6368:0, v6361:0, v6363:0, v6369:0, v6370:0, v6371:0, v6372:0, v6373:0, v6374:0, v6375:0, v6350:0, v6376:0, 0, v6357:0, v6358:0, v6360:0, v6362:0, 3, 7, 2, 4, 8) -> f_1251(v6339:0, v6340:0, v6341:0, v6342:0, v6343:0, v6344:0, v6345:0, v6351:0, v6523:0, 1, 1 + v6434:0, v8058:0, 0, v6346:0, v6434:0, v6352:0, v6364:0, v6353:0, v6365:0, v6354:0, v6366:0, v6355:0, v6367:0, v6356:0, v6368:0, v6361:0, v6363:0, v6369:0, v6370:0, v6371:0, v6372:0, v6373:0, v6374:0, v6375:0, v6962:0, v6347:0, v6349:0, v6347:0, v6357:0, v6358:0, v7716:0, v7718:0, 3, 7, 2, 4, 8) :|: v6363:0 > 1 + v6434:0 && v6962:0 > 0 && v6363:0 > 3 && v6962:0 < v6523:0 && v6434:0 > 1 && v8058:0 < 0
f_1160(v6339:0, v6340:0, v6341:0, v6342:0, v6343:0, v6344:0, v6345:0, v6351:0, v6523:0, 1, v6349:0, v6347:0, v6346:0, v6434:0, v6352:0, v6364:0, v6353:0, v6365:0, v6354:0, v6366:0, v6355:0, v6367:0, v6356:0, v6368:0, v6361:0, v6363:0, v6369:0, v6370:0, v6371:0, v6372:0, v6373:0, v6374:0, v6375:0, v6350:0, v6376:0, 0, v6357:0, v6358:0, v6360:0, v6362:0, 3, 7, 2, 4, 8) -> f_1251(v6339:0, v6340:0, v6341:0, v6342:0, v6343:0, v6344:0, v6345:0, v6351:0, v6523:0, 1, 1 + v6434:0, v8058:0, 0, v6346:0, v6434:0, v6352:0, v6364:0, v6353:0, v6365:0, v6354:0, v6366:0, v6355:0, v6367:0, v6356:0, v6368:0, v6361:0, v6363:0, v6369:0, v6370:0, v6371:0, v6372:0, v6373:0, v6374:0, v6375:0, v6962:0, v6347:0, v6349:0, v6347:0, v6357:0, v6358:0, v7716:0, v7718:0, 3, 7, 2, 4, 8) :|: v6363:0 > 1 + v6434:0 && v6962:0 > 0 && v6363:0 > 3 && v6962:0 < v6523:0 && v6434:0 > 1 && v8058:0 > 0
f_1251(v7694:0, v7695:0, v7696:0, v7697:0, v7698:0, v7699:0, v7700:0, v7701:0, v7702:0, 1, v7803:0, v7702:0, 0, v7707:0, v7704:0, v7709:0, v7720:0, v7710:0, v7721:0, v7711:0, v7722:0, v7712:0, v7723:0, v7713:0, v7724:0, v7717:0, v7719:0, v7725:0, v7726:0, v7727:0, v7728:0, v7729:0, v7730:0, v7731:0, v7705:0, v7732:0, v7708:0, v7733:0, v7714:0, v7715:0, v7716:0, v7718:0, 3, 7, 2, 4, 8) -> f_1160(v7694:0, v7695:0, v7696:0, v7697:0, v7698:0, v7699:0, v7700:0, 1 + v7701:0, v6523:0, 1, v7803:0, v7702:0, v7701:0, 1 + v7803:0, v7709:0, v7720:0, v7710:0, v7721:0, v7711:0, v7722:0, v7712:0, v7723:0, v7713:0, v7724:0, v7717:0, v7719:0, v7725:0, v7726:0, v7727:0, v7728:0, v7729:0, v7730:0, v7731:0, v7704:0, v7705:0, 0, v7714:0, v7715:0, v6360:0, v6362:0, 3, 7, 2, 4, 8) :|: v7701:0 > 1 && v7803:0 > 1 && v7717:0 > 1 + v7701:0 && v7717:0 > 2 && v6523:0 < 0
f_1251(v7694:0, v7695:0, v7696:0, v7697:0, v7698:0, v7699:0, v7700:0, v7701:0, v7702:0, 1, v7803:0, v7702:0, 0, v7707:0, v7704:0, v7709:0, v7720:0, v7710:0, v7721:0, v7711:0, v7722:0, v7712:0, v7723:0, v7713:0, v7724:0, v7717:0, v7719:0, v7725:0, v7726:0, v7727:0, v7728:0, v7729:0, v7730:0, v7731:0, v7705:0, v7732:0, v7708:0, v7733:0, v7714:0, v7715:0, v7716:0, v7718:0, 3, 7, 2, 4, 8) -> f_1160(v7694:0, v7695:0, v7696:0, v7697:0, v7698:0, v7699:0, v7700:0, 1 + v7701:0, v6523:0, 1, v7803:0, v7702:0, v7701:0, 1 + v7803:0, v7709:0, v7720:0, v7710:0, v7721:0, v7711:0, v7722:0, v7712:0, v7723:0, v7713:0, v7724:0, v7717:0, v7719:0, v7725:0, v7726:0, v7727:0, v7728:0, v7729:0, v7730:0, v7731:0, v7704:0, v7705:0, 0, v7714:0, v7715:0, v6360:0, v6362:0, 3, 7, 2, 4, 8) :|: v7701:0 > 1 && v7803:0 > 1 && v7717:0 > 1 + v7701:0 && v7717:0 > 2 && v6523:0 > 0
Filtered unneeded arguments:
   f_1251(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47) -> f_1251(x8, x9, x11, x12, x26, x27)
   f_1160(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45) -> f_1160(x8, x9, x14, x25, x26)
Removed division, modulo operations, cleaned up constraints. Obtained 12 rules.P rules:
f_1251(v7701:0, v7702:0, v7803:0, v8058:0, v7717:0, v7719:0) -> f_1251(v7701:0, v7702:0, 1 + v7803:0, v8058:1, v7717:0, v7719:0) :|: v7719:0 > 1 + v7803:0 && v7803:0 > 1 && v8058:1 < 0 && v7719:0 > 3 && v8058:0 > v7702:0
f_1251(v7701:0, v7702:0, v7803:0, v8058:0, v7717:0, v7719:0) -> f_1251(v7701:0, v7702:0, 1 + v7803:0, v8058:1, v7717:0, v7719:0) :|: v7719:0 > 1 + v7803:0 && v7803:0 > 1 && v8058:1 > 0 && v7719:0 > 3 && v8058:0 > v7702:0
f_1251(v7701:0, v7702:0, v7803:0, v8058:0, v7717:0, v7719:0) -> f_1251(v7701:0, v7702:0, 1 + v7803:0, v8058:1, v7717:0, v7719:0) :|: v7719:0 > 1 + v7803:0 && v7803:0 > 1 && v8058:1 < 0 && v7719:0 > 3 && v8058:0 < v7702:0
f_1251(v7701:0, v7702:0, v7803:0, v8058:0, v7717:0, v7719:0) -> f_1251(v7701:0, v7702:0, 1 + v7803:0, v8058:1, v7717:0, v7719:0) :|: v7719:0 > 1 + v7803:0 && v7803:0 > 1 && v8058:1 > 0 && v7719:0 > 3 && v8058:0 < v7702:0
f_1160(v6351:0, v6523:0, v6434:0, v6361:0, v6363:0) -> f_1160(1 + v6351:0, v6523:1, 1 + v6434:0, v6361:0, v6363:0) :|: v6523:0 < 0 && v6434:0 < v6363:0 && v6363:0 > 3 && v6351:0 > 1 && v6434:0 > 1 && v6361:0 > 1 + v6351:0 && v6523:1 < 0 && v6361:0 > 2
f_1160(v6351:0, v6523:0, v6434:0, v6361:0, v6363:0) -> f_1160(1 + v6351:0, v6523:1, 1 + v6434:0, v6361:0, v6363:0) :|: v6523:0 < 0 && v6434:0 < v6363:0 && v6363:0 > 3 && v6351:0 > 1 && v6434:0 > 1 && v6361:0 > 1 + v6351:0 && v6523:1 > 0 && v6361:0 > 2
f_1160(v6351:0, v6523:0, v6434:0, v6361:0, v6363:0) -> f_1160(1 + v6351:0, v6523:1, 1 + v6434:0, v6361:0, v6363:0) :|: v6523:0 > 0 && v6434:0 < v6363:0 && v6363:0 > 3 && v6351:0 > 1 && v6434:0 > 1 && v6361:0 > 1 + v6351:0 && v6523:1 < 0 && v6361:0 > 2
f_1160(v6351:0, v6523:0, v6434:0, v6361:0, v6363:0) -> f_1160(1 + v6351:0, v6523:1, 1 + v6434:0, v6361:0, v6363:0) :|: v6523:0 > 0 && v6434:0 < v6363:0 && v6363:0 > 3 && v6351:0 > 1 && v6434:0 > 1 && v6361:0 > 1 + v6351:0 && v6523:1 > 0 && v6361:0 > 2
f_1160(v6351:0, v6523:0, v6434:0, v6361:0, v6363:0) -> f_1251(v6351:0, v6523:0, 1 + v6434:0, v8058:0, v6361:0, v6363:0) :|: v6363:0 > 3 && v6363:0 > 1 + v6434:0 && v8058:0 < 0 && v6434:0 > 1
f_1160(v6351:0, v6523:0, v6434:0, v6361:0, v6363:0) -> f_1251(v6351:0, v6523:0, 1 + v6434:0, v8058:0, v6361:0, v6363:0) :|: v6363:0 > 3 && v6363:0 > 1 + v6434:0 && v8058:0 > 0 && v6434:0 > 1
f_1251(v7701:0, v7702:0, v7803:0, v7702:01, v7717:0, v7719:0) -> f_1160(1 + v7701:0, v6523:0, 1 + v7803:0, v7717:0, v7719:0) :|: v7803:0 > 1 && v7701:0 > 1 && v7717:0 > 1 + v7701:0 && v6523:0 < 0 && v7717:0 > 2 && v7702:0 = v7702:01
f_1251(v7701:0, v7702:0, v7803:0, v7702:01, v7717:0, v7719:0) -> f_1160(1 + v7701:0, v6523:0, 1 + v7803:0, v7717:0, v7719:0) :|: v7803:0 > 1 && v7701:0 > 1 && v7717:0 > 1 + v7701:0 && v6523:0 > 0 && v7717:0 > 2 && v7702:0 = v7702:01

----------------------------------------

(9)
Obligation:
Rules:
f_1251(v7701:0, v7702:0, v7803:0, v8058:0, v7717:0, v7719:0) -> f_1251(v7701:0, v7702:0, 1 + v7803:0, v8058:1, v7717:0, v7719:0) :|: v7719:0 > 1 + v7803:0 && v7803:0 > 1 && v8058:1 < 0 && v7719:0 > 3 && v8058:0 > v7702:0
f_1251(x, x1, x2, x3, x4, x5) -> f_1251(x, x1, 1 + x2, x6, x4, x5) :|: x5 > 1 + x2 && x2 > 1 && x6 > 0 && x5 > 3 && x3 > x1
f_1251(x7, x8, x9, x10, x11, x12) -> f_1251(x7, x8, 1 + x9, x13, x11, x12) :|: x12 > 1 + x9 && x9 > 1 && x13 < 0 && x12 > 3 && x10 < x8
f_1251(x14, x15, x16, x17, x18, x19) -> f_1251(x14, x15, 1 + x16, x20, x18, x19) :|: x19 > 1 + x16 && x16 > 1 && x20 > 0 && x19 > 3 && x17 < x15
f_1160(v6351:0, v6523:0, v6434:0, v6361:0, v6363:0) -> f_1160(1 + v6351:0, v6523:1, 1 + v6434:0, v6361:0, v6363:0) :|: v6523:0 < 0 && v6434:0 < v6363:0 && v6363:0 > 3 && v6351:0 > 1 && v6434:0 > 1 && v6361:0 > 1 + v6351:0 && v6523:1 < 0 && v6361:0 > 2
f_1160(x21, x22, x23, x24, x25) -> f_1160(1 + x21, x26, 1 + x23, x24, x25) :|: x22 < 0 && x23 < x25 && x25 > 3 && x21 > 1 && x23 > 1 && x24 > 1 + x21 && x26 > 0 && x24 > 2
f_1160(x27, x28, x29, x30, x31) -> f_1160(1 + x27, x32, 1 + x29, x30, x31) :|: x28 > 0 && x29 < x31 && x31 > 3 && x27 > 1 && x29 > 1 && x30 > 1 + x27 && x32 < 0 && x30 > 2
f_1160(x33, x34, x35, x36, x37) -> f_1160(1 + x33, x38, 1 + x35, x36, x37) :|: x34 > 0 && x35 < x37 && x37 > 3 && x33 > 1 && x35 > 1 && x36 > 1 + x33 && x38 > 0 && x36 > 2
f_1160(x39, x40, x41, x42, x43) -> f_1251(x39, x40, 1 + x41, x44, x42, x43) :|: x43 > 3 && x43 > 1 + x41 && x44 < 0 && x41 > 1
f_1160(x45, x46, x47, x48, x49) -> f_1251(x45, x46, 1 + x47, x50, x48, x49) :|: x49 > 3 && x49 > 1 + x47 && x50 > 0 && x47 > 1
f_1251(x51, x52, x53, x54, x55, x56) -> f_1160(1 + x51, x57, 1 + x53, x55, x56) :|: x53 > 1 && x51 > 1 && x55 > 1 + x51 && x57 < 0 && x55 > 2 && x52 = x54
f_1251(x58, x59, x60, x61, x62, x63) -> f_1160(1 + x58, x64, 1 + x60, x62, x63) :|: x60 > 1 && x58 > 1 && x62 > 1 + x58 && x64 > 0 && x62 > 2 && x59 = x61

----------------------------------------

(10) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(11)
Obligation:
Rules:
f_1160(x39:0, x40:0, x41:0, x42:0, x43:0) -> f_1251(x39:0, x40:0, 1 + x41:0, x44:0, x42:0, x43:0) :|: x44:0 < 0 && x41:0 > 1 && x43:0 > 1 + x41:0 && x43:0 > 3
f_1251(x51:0, x52:0, x53:0, x52:01, x55:0, x56:0) -> f_1160(1 + x51:0, x57:0, 1 + x53:0, x55:0, x56:0) :|: x57:0 < 0 && x55:0 > 2 && x55:0 > 1 + x51:0 && x51:0 > 1 && x53:0 > 1 && x52:0 = x52:01
f_1251(x:0, x1:0, x2:0, x3:0, x4:0, x5:0) -> f_1251(x:0, x1:0, 1 + x2:0, x6:0, x4:0, x5:0) :|: x5:0 > 3 && x3:0 > x1:0 && x6:0 > 0 && x2:0 > 1 && x5:0 > 1 + x2:0
f_1160(x33:0, x34:0, x35:0, x36:0, x37:0) -> f_1160(1 + x33:0, x38:0, 1 + x35:0, x36:0, x37:0) :|: x38:0 > 0 && x36:0 > 2 && x36:0 > 1 + x33:0 && x35:0 > 1 && x33:0 > 1 && x37:0 > 3 && x37:0 > x35:0 && x34:0 > 0
f_1251(x7:0, x8:0, x9:0, x10:0, x11:0, x12:0) -> f_1251(x7:0, x8:0, 1 + x9:0, x13:0, x11:0, x12:0) :|: x12:0 > 3 && x8:0 > x10:0 && x13:0 < 0 && x9:0 > 1 && x12:0 > 1 + x9:0
f_1160(x21:0, x22:0, x23:0, x24:0, x25:0) -> f_1160(1 + x21:0, x26:0, 1 + x23:0, x24:0, x25:0) :|: x26:0 > 0 && x24:0 > 2 && x24:0 > 1 + x21:0 && x23:0 > 1 && x21:0 > 1 && x25:0 > 3 && x25:0 > x23:0 && x22:0 < 0
f_1251(x14:0, x15:0, x16:0, x17:0, x18:0, x19:0) -> f_1251(x14:0, x15:0, 1 + x16:0, x20:0, x18:0, x19:0) :|: x19:0 > 3 && x17:0 < x15:0 && x20:0 > 0 && x16:0 > 1 && x19:0 > 1 + x16:0
f_1160(x27:0, x28:0, x29:0, x30:0, x31:0) -> f_1160(1 + x27:0, x32:0, 1 + x29:0, x30:0, x31:0) :|: x32:0 < 0 && x30:0 > 2 && x30:0 > 1 + x27:0 && x29:0 > 1 && x27:0 > 1 && x31:0 > 3 && x31:0 > x29:0 && x28:0 > 0
f_1160(x45:0, x46:0, x47:0, x48:0, x49:0) -> f_1251(x45:0, x46:0, 1 + x47:0, x50:0, x48:0, x49:0) :|: x50:0 > 0 && x47:0 > 1 && x49:0 > 1 + x47:0 && x49:0 > 3
f_1160(v6351:0:0, v6523:0:0, v6434:0:0, v6361:0:0, v6363:0:0) -> f_1160(1 + v6351:0:0, v6523:1:0, 1 + v6434:0:0, v6361:0:0, v6363:0:0) :|: v6523:1:0 < 0 && v6361:0:0 > 2 && v6361:0:0 > 1 + v6351:0:0 && v6434:0:0 > 1 && v6351:0:0 > 1 && v6363:0:0 > 3 && v6434:0:0 < v6363:0:0 && v6523:0:0 < 0
f_1251(x58:0, x59:0, x60:0, x59:01, x62:0, x63:0) -> f_1160(1 + x58:0, x64:0, 1 + x60:0, x62:0, x63:0) :|: x64:0 > 0 && x62:0 > 2 && x62:0 > 1 + x58:0 && x58:0 > 1 && x60:0 > 1 && x59:0 = x59:01
f_1251(v7701:0:0, v7702:0:0, v7803:0:0, v8058:0:0, v7717:0:0, v7719:0:0) -> f_1251(v7701:0:0, v7702:0:0, 1 + v7803:0:0, v8058:1:0, v7717:0:0, v7719:0:0) :|: v7719:0:0 > 3 && v8058:0:0 > v7702:0:0 && v8058:1:0 < 0 && v7803:0:0 > 1 && v7719:0:0 > 1 + v7803:0:0

----------------------------------------

(12) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1160(x, x1, x2, x3, x4)] = -1 - x + x3
[f_1251(x5, x6, x7, x8, x9, x10)] = -1 - x5 + x9

The following rules are decreasing:
f_1251(x51:0, x52:0, x53:0, x52:01, x55:0, x56:0) -> f_1160(1 + x51:0, x57:0, 1 + x53:0, x55:0, x56:0) :|: x57:0 < 0 && x55:0 > 2 && x55:0 > 1 + x51:0 && x51:0 > 1 && x53:0 > 1 && x52:0 = x52:01
f_1160(x33:0, x34:0, x35:0, x36:0, x37:0) -> f_1160(1 + x33:0, x38:0, 1 + x35:0, x36:0, x37:0) :|: x38:0 > 0 && x36:0 > 2 && x36:0 > 1 + x33:0 && x35:0 > 1 && x33:0 > 1 && x37:0 > 3 && x37:0 > x35:0 && x34:0 > 0
f_1160(x21:0, x22:0, x23:0, x24:0, x25:0) -> f_1160(1 + x21:0, x26:0, 1 + x23:0, x24:0, x25:0) :|: x26:0 > 0 && x24:0 > 2 && x24:0 > 1 + x21:0 && x23:0 > 1 && x21:0 > 1 && x25:0 > 3 && x25:0 > x23:0 && x22:0 < 0
f_1160(x27:0, x28:0, x29:0, x30:0, x31:0) -> f_1160(1 + x27:0, x32:0, 1 + x29:0, x30:0, x31:0) :|: x32:0 < 0 && x30:0 > 2 && x30:0 > 1 + x27:0 && x29:0 > 1 && x27:0 > 1 && x31:0 > 3 && x31:0 > x29:0 && x28:0 > 0
f_1160(v6351:0:0, v6523:0:0, v6434:0:0, v6361:0:0, v6363:0:0) -> f_1160(1 + v6351:0:0, v6523:1:0, 1 + v6434:0:0, v6361:0:0, v6363:0:0) :|: v6523:1:0 < 0 && v6361:0:0 > 2 && v6361:0:0 > 1 + v6351:0:0 && v6434:0:0 > 1 && v6351:0:0 > 1 && v6363:0:0 > 3 && v6434:0:0 < v6363:0:0 && v6523:0:0 < 0
f_1251(x58:0, x59:0, x60:0, x59:01, x62:0, x63:0) -> f_1160(1 + x58:0, x64:0, 1 + x60:0, x62:0, x63:0) :|: x64:0 > 0 && x62:0 > 2 && x62:0 > 1 + x58:0 && x58:0 > 1 && x60:0 > 1 && x59:0 = x59:01
The following rules are bounded:
f_1251(x51:0, x52:0, x53:0, x52:01, x55:0, x56:0) -> f_1160(1 + x51:0, x57:0, 1 + x53:0, x55:0, x56:0) :|: x57:0 < 0 && x55:0 > 2 && x55:0 > 1 + x51:0 && x51:0 > 1 && x53:0 > 1 && x52:0 = x52:01
f_1160(x33:0, x34:0, x35:0, x36:0, x37:0) -> f_1160(1 + x33:0, x38:0, 1 + x35:0, x36:0, x37:0) :|: x38:0 > 0 && x36:0 > 2 && x36:0 > 1 + x33:0 && x35:0 > 1 && x33:0 > 1 && x37:0 > 3 && x37:0 > x35:0 && x34:0 > 0
f_1160(x21:0, x22:0, x23:0, x24:0, x25:0) -> f_1160(1 + x21:0, x26:0, 1 + x23:0, x24:0, x25:0) :|: x26:0 > 0 && x24:0 > 2 && x24:0 > 1 + x21:0 && x23:0 > 1 && x21:0 > 1 && x25:0 > 3 && x25:0 > x23:0 && x22:0 < 0
f_1160(x27:0, x28:0, x29:0, x30:0, x31:0) -> f_1160(1 + x27:0, x32:0, 1 + x29:0, x30:0, x31:0) :|: x32:0 < 0 && x30:0 > 2 && x30:0 > 1 + x27:0 && x29:0 > 1 && x27:0 > 1 && x31:0 > 3 && x31:0 > x29:0 && x28:0 > 0
f_1160(v6351:0:0, v6523:0:0, v6434:0:0, v6361:0:0, v6363:0:0) -> f_1160(1 + v6351:0:0, v6523:1:0, 1 + v6434:0:0, v6361:0:0, v6363:0:0) :|: v6523:1:0 < 0 && v6361:0:0 > 2 && v6361:0:0 > 1 + v6351:0:0 && v6434:0:0 > 1 && v6351:0:0 > 1 && v6363:0:0 > 3 && v6434:0:0 < v6363:0:0 && v6523:0:0 < 0
f_1251(x58:0, x59:0, x60:0, x59:01, x62:0, x63:0) -> f_1160(1 + x58:0, x64:0, 1 + x60:0, x62:0, x63:0) :|: x64:0 > 0 && x62:0 > 2 && x62:0 > 1 + x58:0 && x58:0 > 1 && x60:0 > 1 && x59:0 = x59:01

----------------------------------------

(13)
Obligation:
Rules:
f_1160(x39:0, x40:0, x41:0, x42:0, x43:0) -> f_1251(x39:0, x40:0, 1 + x41:0, x44:0, x42:0, x43:0) :|: x44:0 < 0 && x41:0 > 1 && x43:0 > 1 + x41:0 && x43:0 > 3
f_1251(x:0, x1:0, x2:0, x3:0, x4:0, x5:0) -> f_1251(x:0, x1:0, 1 + x2:0, x6:0, x4:0, x5:0) :|: x5:0 > 3 && x3:0 > x1:0 && x6:0 > 0 && x2:0 > 1 && x5:0 > 1 + x2:0
f_1251(x7:0, x8:0, x9:0, x10:0, x11:0, x12:0) -> f_1251(x7:0, x8:0, 1 + x9:0, x13:0, x11:0, x12:0) :|: x12:0 > 3 && x8:0 > x10:0 && x13:0 < 0 && x9:0 > 1 && x12:0 > 1 + x9:0
f_1251(x14:0, x15:0, x16:0, x17:0, x18:0, x19:0) -> f_1251(x14:0, x15:0, 1 + x16:0, x20:0, x18:0, x19:0) :|: x19:0 > 3 && x17:0 < x15:0 && x20:0 > 0 && x16:0 > 1 && x19:0 > 1 + x16:0
f_1160(x45:0, x46:0, x47:0, x48:0, x49:0) -> f_1251(x45:0, x46:0, 1 + x47:0, x50:0, x48:0, x49:0) :|: x50:0 > 0 && x47:0 > 1 && x49:0 > 1 + x47:0 && x49:0 > 3
f_1251(v7701:0:0, v7702:0:0, v7803:0:0, v8058:0:0, v7717:0:0, v7719:0:0) -> f_1251(v7701:0:0, v7702:0:0, 1 + v7803:0:0, v8058:1:0, v7717:0:0, v7719:0:0) :|: v7719:0:0 > 3 && v8058:0:0 > v7702:0:0 && v8058:1:0 < 0 && v7803:0:0 > 1 && v7719:0:0 > 1 + v7803:0:0

----------------------------------------

(14) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained one non-trivial SCC.

----------------------------------------

(15)
Obligation:
Rules:
f_1251(x:0, x1:0, x2:0, x3:0, x4:0, x5:0) -> f_1251(x:0, x1:0, 1 + x2:0, x6:0, x4:0, x5:0) :|: x5:0 > 3 && x3:0 > x1:0 && x6:0 > 0 && x2:0 > 1 && x5:0 > 1 + x2:0
f_1251(x7:0, x8:0, x9:0, x10:0, x11:0, x12:0) -> f_1251(x7:0, x8:0, 1 + x9:0, x13:0, x11:0, x12:0) :|: x12:0 > 3 && x8:0 > x10:0 && x13:0 < 0 && x9:0 > 1 && x12:0 > 1 + x9:0
f_1251(x14:0, x15:0, x16:0, x17:0, x18:0, x19:0) -> f_1251(x14:0, x15:0, 1 + x16:0, x20:0, x18:0, x19:0) :|: x19:0 > 3 && x17:0 < x15:0 && x20:0 > 0 && x16:0 > 1 && x19:0 > 1 + x16:0
f_1251(v7701:0:0, v7702:0:0, v7803:0:0, v8058:0:0, v7717:0:0, v7719:0:0) -> f_1251(v7701:0:0, v7702:0:0, 1 + v7803:0:0, v8058:1:0, v7717:0:0, v7719:0:0) :|: v7719:0:0 > 3 && v8058:0:0 > v7702:0:0 && v8058:1:0 < 0 && v7803:0:0 > 1 && v7719:0:0 > 1 + v7803:0:0

----------------------------------------

(16) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(17)
Obligation:
Rules:
f_1251(x14:0:0, x15:0:0, x16:0:0, x17:0:0, x18:0:0, x19:0:0) -> f_1251(x14:0:0, x15:0:0, 1 + x16:0:0, x20:0:0, x18:0:0, x19:0:0) :|: x16:0:0 > 1 && x19:0:0 > 1 + x16:0:0 && x20:0:0 > 0 && x17:0:0 < x15:0:0 && x19:0:0 > 3
f_1251(x7:0:0, x8:0:0, x9:0:0, x10:0:0, x11:0:0, x12:0:0) -> f_1251(x7:0:0, x8:0:0, 1 + x9:0:0, x13:0:0, x11:0:0, x12:0:0) :|: x9:0:0 > 1 && x12:0:0 > 1 + x9:0:0 && x13:0:0 < 0 && x8:0:0 > x10:0:0 && x12:0:0 > 3
f_1251(v7701:0:0:0, v7702:0:0:0, v7803:0:0:0, v8058:0:0:0, v7717:0:0:0, v7719:0:0:0) -> f_1251(v7701:0:0:0, v7702:0:0:0, 1 + v7803:0:0:0, v8058:1:0:0, v7717:0:0:0, v7719:0:0:0) :|: v7803:0:0:0 > 1 && v7719:0:0:0 > 1 + v7803:0:0:0 && v8058:1:0:0 < 0 && v8058:0:0:0 > v7702:0:0:0 && v7719:0:0:0 > 3
f_1251(x:0:0, x1:0:0, x2:0:0, x3:0:0, x4:0:0, x5:0:0) -> f_1251(x:0:0, x1:0:0, 1 + x2:0:0, x6:0:0, x4:0:0, x5:0:0) :|: x2:0:0 > 1 && x5:0:0 > 1 + x2:0:0 && x6:0:0 > 0 && x3:0:0 > x1:0:0 && x5:0:0 > 3

----------------------------------------

(18) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1251(x1, x2, x3, x4, x5, x6) -> f_1251(x2, x3, x4, x6)

----------------------------------------

(19)
Obligation:
Rules:
f_1251(x15:0:0, x16:0:0, x17:0:0, x19:0:0) -> f_1251(x15:0:0, 1 + x16:0:0, x20:0:0, x19:0:0) :|: x16:0:0 > 1 && x19:0:0 > 1 + x16:0:0 && x20:0:0 > 0 && x17:0:0 < x15:0:0 && x19:0:0 > 3
f_1251(x8:0:0, x9:0:0, x10:0:0, x12:0:0) -> f_1251(x8:0:0, 1 + x9:0:0, x13:0:0, x12:0:0) :|: x9:0:0 > 1 && x12:0:0 > 1 + x9:0:0 && x13:0:0 < 0 && x8:0:0 > x10:0:0 && x12:0:0 > 3
f_1251(v7702:0:0:0, v7803:0:0:0, v8058:0:0:0, v7719:0:0:0) -> f_1251(v7702:0:0:0, 1 + v7803:0:0:0, v8058:1:0:0, v7719:0:0:0) :|: v7803:0:0:0 > 1 && v7719:0:0:0 > 1 + v7803:0:0:0 && v8058:1:0:0 < 0 && v8058:0:0:0 > v7702:0:0:0 && v7719:0:0:0 > 3
f_1251(x1:0:0, x2:0:0, x3:0:0, x5:0:0) -> f_1251(x1:0:0, 1 + x2:0:0, x6:0:0, x5:0:0) :|: x2:0:0 > 1 && x5:0:0 > 1 + x2:0:0 && x6:0:0 > 0 && x3:0:0 > x1:0:0 && x5:0:0 > 3

----------------------------------------

(20) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1251(x, x1, x2, x3)] = -2 - x1 + x3

The following rules are decreasing:
f_1251(x15:0:0, x16:0:0, x17:0:0, x19:0:0) -> f_1251(x15:0:0, 1 + x16:0:0, x20:0:0, x19:0:0) :|: x16:0:0 > 1 && x19:0:0 > 1 + x16:0:0 && x20:0:0 > 0 && x17:0:0 < x15:0:0 && x19:0:0 > 3
f_1251(x8:0:0, x9:0:0, x10:0:0, x12:0:0) -> f_1251(x8:0:0, 1 + x9:0:0, x13:0:0, x12:0:0) :|: x9:0:0 > 1 && x12:0:0 > 1 + x9:0:0 && x13:0:0 < 0 && x8:0:0 > x10:0:0 && x12:0:0 > 3
f_1251(v7702:0:0:0, v7803:0:0:0, v8058:0:0:0, v7719:0:0:0) -> f_1251(v7702:0:0:0, 1 + v7803:0:0:0, v8058:1:0:0, v7719:0:0:0) :|: v7803:0:0:0 > 1 && v7719:0:0:0 > 1 + v7803:0:0:0 && v8058:1:0:0 < 0 && v8058:0:0:0 > v7702:0:0:0 && v7719:0:0:0 > 3
f_1251(x1:0:0, x2:0:0, x3:0:0, x5:0:0) -> f_1251(x1:0:0, 1 + x2:0:0, x6:0:0, x5:0:0) :|: x2:0:0 > 1 && x5:0:0 > 1 + x2:0:0 && x6:0:0 > 0 && x3:0:0 > x1:0:0 && x5:0:0 > 3
The following rules are bounded:
f_1251(x15:0:0, x16:0:0, x17:0:0, x19:0:0) -> f_1251(x15:0:0, 1 + x16:0:0, x20:0:0, x19:0:0) :|: x16:0:0 > 1 && x19:0:0 > 1 + x16:0:0 && x20:0:0 > 0 && x17:0:0 < x15:0:0 && x19:0:0 > 3
f_1251(x8:0:0, x9:0:0, x10:0:0, x12:0:0) -> f_1251(x8:0:0, 1 + x9:0:0, x13:0:0, x12:0:0) :|: x9:0:0 > 1 && x12:0:0 > 1 + x9:0:0 && x13:0:0 < 0 && x8:0:0 > x10:0:0 && x12:0:0 > 3
f_1251(v7702:0:0:0, v7803:0:0:0, v8058:0:0:0, v7719:0:0:0) -> f_1251(v7702:0:0:0, 1 + v7803:0:0:0, v8058:1:0:0, v7719:0:0:0) :|: v7803:0:0:0 > 1 && v7719:0:0:0 > 1 + v7803:0:0:0 && v8058:1:0:0 < 0 && v8058:0:0:0 > v7702:0:0:0 && v7719:0:0:0 > 3
f_1251(x1:0:0, x2:0:0, x3:0:0, x5:0:0) -> f_1251(x1:0:0, 1 + x2:0:0, x6:0:0, x5:0:0) :|: x2:0:0 > 1 && x5:0:0 > 1 + x2:0:0 && x6:0:0 > 0 && x3:0:0 > x1:0:0 && x5:0:0 > 3

----------------------------------------

(21)
YES

----------------------------------------

(22)
Obligation:
SCC
----------------------------------------

(23) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 26 rulesP rules:
f_1002(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, 0, v3737, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3738, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) -> f_1010(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, 0, v3737, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3738, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) :|: 0 = 0
f_1010(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, 0, v3737, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3738, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) -> f_1017(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, 0, v3737, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3738, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) :|: TRUE
f_1017(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, 0, v3737, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3738, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) -> f_1022(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, 0, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3737, v3738, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) :|: 0 = 0
f_1022(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, 0, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3737, v3738, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) -> f_1027(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, 0, v4665, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3737, v3738, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) :|: v4665 = 1 + v3735 && 3 <= v4665
f_1027(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, 0, v4665, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3737, v3738, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) -> f_1033(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, 0, v4665, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3737, v3738, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) :|: TRUE
f_1033(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, 0, v4665, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3737, v3738, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) -> f_1039(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, 0, v4665, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3737, v3738, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) :|: TRUE
f_1039(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, 0, v4665, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3737, v3738, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) -> f_1043(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, 0, v4665, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3737, v3738, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) :|: 0 = 0
f_1043(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, 0, v4665, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3737, v3738, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) -> f_1046(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, 0, v4665, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3737, v3738, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) :|: 0 = 0
f_1046(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, 0, v4665, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3737, v3738, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) -> f_1049(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, 0, v4665, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3737, v3738, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) :|: 0 = 0
f_1049(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, 0, v4665, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3737, v3738, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) -> f_1052(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, 0, v4665, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3737, v3738, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) :|: 0 = 0
f_1052(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, 0, v4665, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3737, v3738, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) -> f_1055(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, 0, v4665, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3737, v3738, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) :|: TRUE
f_1055(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, 0, v4665, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3737, v3738, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) -> f_1058(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v4665, v3736, v3735, 0, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3737, v3738, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) :|: 0 = 0
f_1058(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v4665, v3736, v3735, 0, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3737, v3738, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) -> f_1061(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v4665, v5024, v3736, v3735, 0, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3737, v3738, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) :|: TRUE
f_1061(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v4665, v5024, v3736, v3735, 0, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3737, v3738, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) -> f_1065(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v4665, v5024, v3735, v3736, 0, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3737, v3738, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) :|: 0 = 0
f_1065(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v4665, v5024, v3735, v3736, 0, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3737, v3738, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) -> f_1070(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v4665, v5024, v3735, v3736, 0, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3737, v3738, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) :|: v5024 != 0 && v4665 < v3750 && 4 <= v3750
f_1070(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v4665, v5024, v3735, v3736, 0, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3737, v3738, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) -> f_1076(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v4665, v5024, v3735, v3736, 0, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3737, v3738, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) :|: 0 = 0
f_1076(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v4665, v5024, v3735, v3736, 0, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3737, v3738, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) -> f_1081(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v4665, v5024, v3735, v3736, 0, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3737, v3738, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) :|: 0 = 0
f_1081(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v4665, v5024, v3735, v3736, 0, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3737, v3738, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) -> f_961(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v4665, v5024, v3735, v3736, 0, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) :|: TRUE
f_961(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, v3737, v3738, 0, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) -> f_965(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, v3737, v3738, 0, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) :|: TRUE
f_965(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, v3737, v3738, 0, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) -> f_969(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, v3737, v3738, 0, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) :|: 0 = 0
f_969(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, v3737, v3738, 0, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) -> f_973(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, v3737, v3738, 0, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) :|: 0 = 0
f_973(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, v3737, v3738, 0, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) -> f_978(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, v3737, v3738, 0, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) :|: 0 = 0
f_978(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, v3737, v3738, 0, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) -> f_983(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, v3738, 0, v3737, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) :|: 0 = 0
f_983(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, v3738, 0, v3737, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) -> f_988(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, v3738, 0, v3737, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) :|: 0 = 0
f_988(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, v3738, 0, v3737, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) -> f_994(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, 0, v3737, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3738, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) :|: 0 = 0
f_994(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, 0, v3737, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3738, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) -> f_1002(v3726, v3727, v3728, v3729, v3730, v3731, v3732, v3733, 1, v3735, v3736, 0, v3737, v3740, v3751, v3741, v3752, v3742, v3753, v3743, v3754, v3744, v3755, v3748, v3750, v3756, v3757, v3758, v3759, v3760, v3761, v3738, v3745, v3746, v3747, v3749, 3, 7, 2, 4, 8) :|: v3733 != v3736
Combined rules. Obtained 4 rulesP rules:
f_1002(v3726:0, v3727:0, v3728:0, v3729:0, v3730:0, v3731:0, v3732:0, v3733:0, 1, v3735:0, v3736:0, 0, v3737:0, v3740:0, v3751:0, v3741:0, v3752:0, v3742:0, v3753:0, v3743:0, v3754:0, v3744:0, v3755:0, v3748:0, v3750:0, v3756:0, v3757:0, v3758:0, v3759:0, v3760:0, v3761:0, v3738:0, v3745:0, v3746:0, v3747:0, v3749:0, 3, 7, 2, 4, 8) -> f_1002(v3726:0, v3727:0, v3728:0, v3729:0, v3730:0, v3731:0, v3732:0, v3733:0, 1, 1 + v3735:0, v5024:0, 0, v3735:0, v3740:0, v3751:0, v3741:0, v3752:0, v3742:0, v3753:0, v3743:0, v3754:0, v3744:0, v3755:0, v3748:0, v3750:0, v3756:0, v3757:0, v3758:0, v3759:0, v3760:0, v3761:0, v3736:0, v3745:0, v3746:0, v3747:0, v3749:0, 3, 7, 2, 4, 8) :|: v3735:0 > 1 && v3750:0 > 1 + v3735:0 && v5024:0 < 0 && v5024:0 > v3733:0 && v3750:0 > 3
f_1002(v3726:0, v3727:0, v3728:0, v3729:0, v3730:0, v3731:0, v3732:0, v3733:0, 1, v3735:0, v3736:0, 0, v3737:0, v3740:0, v3751:0, v3741:0, v3752:0, v3742:0, v3753:0, v3743:0, v3754:0, v3744:0, v3755:0, v3748:0, v3750:0, v3756:0, v3757:0, v3758:0, v3759:0, v3760:0, v3761:0, v3738:0, v3745:0, v3746:0, v3747:0, v3749:0, 3, 7, 2, 4, 8) -> f_1002(v3726:0, v3727:0, v3728:0, v3729:0, v3730:0, v3731:0, v3732:0, v3733:0, 1, 1 + v3735:0, v5024:0, 0, v3735:0, v3740:0, v3751:0, v3741:0, v3752:0, v3742:0, v3753:0, v3743:0, v3754:0, v3744:0, v3755:0, v3748:0, v3750:0, v3756:0, v3757:0, v3758:0, v3759:0, v3760:0, v3761:0, v3736:0, v3745:0, v3746:0, v3747:0, v3749:0, 3, 7, 2, 4, 8) :|: v3735:0 > 1 && v3750:0 > 1 + v3735:0 && v5024:0 < 0 && v5024:0 < v3733:0 && v3750:0 > 3
f_1002(v3726:0, v3727:0, v3728:0, v3729:0, v3730:0, v3731:0, v3732:0, v3733:0, 1, v3735:0, v3736:0, 0, v3737:0, v3740:0, v3751:0, v3741:0, v3752:0, v3742:0, v3753:0, v3743:0, v3754:0, v3744:0, v3755:0, v3748:0, v3750:0, v3756:0, v3757:0, v3758:0, v3759:0, v3760:0, v3761:0, v3738:0, v3745:0, v3746:0, v3747:0, v3749:0, 3, 7, 2, 4, 8) -> f_1002(v3726:0, v3727:0, v3728:0, v3729:0, v3730:0, v3731:0, v3732:0, v3733:0, 1, 1 + v3735:0, v5024:0, 0, v3735:0, v3740:0, v3751:0, v3741:0, v3752:0, v3742:0, v3753:0, v3743:0, v3754:0, v3744:0, v3755:0, v3748:0, v3750:0, v3756:0, v3757:0, v3758:0, v3759:0, v3760:0, v3761:0, v3736:0, v3745:0, v3746:0, v3747:0, v3749:0, 3, 7, 2, 4, 8) :|: v3735:0 > 1 && v3750:0 > 1 + v3735:0 && v5024:0 > 0 && v5024:0 > v3733:0 && v3750:0 > 3
f_1002(v3726:0, v3727:0, v3728:0, v3729:0, v3730:0, v3731:0, v3732:0, v3733:0, 1, v3735:0, v3736:0, 0, v3737:0, v3740:0, v3751:0, v3741:0, v3752:0, v3742:0, v3753:0, v3743:0, v3754:0, v3744:0, v3755:0, v3748:0, v3750:0, v3756:0, v3757:0, v3758:0, v3759:0, v3760:0, v3761:0, v3738:0, v3745:0, v3746:0, v3747:0, v3749:0, 3, 7, 2, 4, 8) -> f_1002(v3726:0, v3727:0, v3728:0, v3729:0, v3730:0, v3731:0, v3732:0, v3733:0, 1, 1 + v3735:0, v5024:0, 0, v3735:0, v3740:0, v3751:0, v3741:0, v3752:0, v3742:0, v3753:0, v3743:0, v3754:0, v3744:0, v3755:0, v3748:0, v3750:0, v3756:0, v3757:0, v3758:0, v3759:0, v3760:0, v3761:0, v3736:0, v3745:0, v3746:0, v3747:0, v3749:0, 3, 7, 2, 4, 8) :|: v3735:0 > 1 && v3750:0 > 1 + v3735:0 && v5024:0 > 0 && v5024:0 < v3733:0 && v3750:0 > 3
Filtered unneeded arguments:
   f_1002(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41) -> f_1002(x8, x10, x25)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1002(v3733:0, v3735:0, v3750:0) -> f_1002(v3733:0, 1 + v3735:0, v3750:0) :|: v3750:0 > 1 + v3735:0 && v3750:0 > 3 && v3735:0 > 1

----------------------------------------

(24)
Obligation:
Rules:
f_1002(v3733:0, v3735:0, v3750:0) -> f_1002(v3733:0, 1 + v3735:0, v3750:0) :|: v3750:0 > 1 + v3735:0 && v3750:0 > 3 && v3735:0 > 1

----------------------------------------

(25) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(26)
Obligation:
Rules:
f_1002(v3733:0:0, v3735:0:0, v3750:0:0) -> f_1002(v3733:0:0, 1 + v3735:0:0, v3750:0:0) :|: v3750:0:0 > 1 + v3735:0:0 && v3750:0:0 > 3 && v3735:0:0 > 1

----------------------------------------

(27) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1002(x1, x2, x3) -> f_1002(x2, x3)

----------------------------------------

(28)
Obligation:
Rules:
f_1002(v3735:0:0, v3750:0:0) -> f_1002(1 + v3735:0:0, v3750:0:0) :|: v3750:0:0 > 1 + v3735:0:0 && v3750:0:0 > 3 && v3735:0:0 > 1

----------------------------------------

(29) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1002(x, x1)] = -x + x1

The following rules are decreasing:
f_1002(v3735:0:0, v3750:0:0) -> f_1002(1 + v3735:0:0, v3750:0:0) :|: v3750:0:0 > 1 + v3735:0:0 && v3750:0:0 > 3 && v3735:0:0 > 1
The following rules are bounded:
f_1002(v3735:0:0, v3750:0:0) -> f_1002(1 + v3735:0:0, v3750:0:0) :|: v3750:0:0 > 1 + v3735:0:0 && v3750:0:0 > 3 && v3735:0:0 > 1

----------------------------------------

(30)
YES
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.001s
