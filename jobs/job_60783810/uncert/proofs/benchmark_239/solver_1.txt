YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/VmxQ1.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could be proven:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 39 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 7163 ms]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) LLVM Symbolic Execution SCC
        (8) SCC2IRS [SOUND, 179 ms]
        (9) IntTRS
        (10) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (11) IntTRS
        (12) PolynomialOrderProcessor [EQUIVALENT, 7 ms]
        (13) AND
            (14) IntTRS
                (15) TerminationGraphProcessor [EQUIVALENT, 0 ms]
                (16) YES
            (17) IntTRS
                (18) TerminationGraphProcessor [EQUIVALENT, 0 ms]
                (19) YES
    (20) LLVM Symbolic Execution SCC
        (21) SCC2IRS [SOUND, 63 ms]
        (22) IntTRS
        (23) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (24) IntTRS
        (25) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
        (26) IntTRS
        (27) PolynomialOrderProcessor [EQUIVALENT, 6 ms]
        (28) YES
    (29) LLVM Symbolic Execution SCC
        (30) SCC2IRS [SOUND, 49 ms]
        (31) IntTRS
        (32) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (33) IntTRS
        (34) PolynomialOrderProcessor [EQUIVALENT, 2 ms]
        (35) YES
    (36) LLVM Symbolic Execution SCC
        (37) SCC2IRS [SOUND, 50 ms]
        (38) IntTRS
        (39) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (40) IntTRS
        (41) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
        (42) IntTRS
        (43) PolynomialOrderProcessor [EQUIVALENT, 5 ms]
        (44) YES
    (45) LLVM Symbolic Execution SCC
        (46) SCC2IRS [SOUND, 50 ms]
        (47) IntTRS
        (48) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (49) IntTRS
        (50) PolynomialOrderProcessor [EQUIVALENT, 1 ms]
        (51) YES


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/VmxQ1.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/VmxQ1.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

struct.list --> BasicStructureType(elementType: i32, elementType: *struct.list)

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "malloc" returnParam: *i8 noalias parameters: (i64) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: true visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "init_list" linkageType: EXTERNALLY_VISIBLE returnParam: *BasicTypeName typeName: struct.listBasicStructureType(elementType: i32, elementType: *struct.list) parameters: (0 i32) variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 9
	0:
		%2 = alloca i32, align 4
		%3 = alloca *BasicTypeName typeName: struct.listBasicStructureType(elementType: i32, elementType: *struct.list), align 8
		%4 = alloca *BasicTypeName typeName: struct.listBasicStructureType(elementType: i32, elementType: *struct.list), align 8
		%5 = alloca i32, align 4
		store %0, %2
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**BasicTypeName typeName: struct.listBasicStructureType(elementType: i32, elementType: *struct.list) %3)
		store null, %3
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**BasicTypeName typeName: struct.listBasicStructureType(elementType: i32, elementType: *struct.list) %4)
		%6 = load %3
		store %6, %4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %5)
		store 0, %5
		br %7
	7:
		%8 = load %5
		%9 = load %2
		%10 = icmp slt %8 %9
		br %10, %11, %24
	11:
		%12 = call noalias *i8 @malloc(i64 16)
		%13 = bitcast *i8 %12 to *BasicTypeName typeName: struct.listBasicStructureType(elementType: i32, elementType: *struct.list)
		store %13, %3
		%14 = call i32 (...)* @__VERIFIER_nondet_int()
		%15 = load %3
		%16 = getelementptr %15, 0, 0
		store %14, %16
		%17 = load %4
		%18 = load %3
		%19 = getelementptr %18, 0, 1
		store %17, %19
		%20 = load %3
		store %20, %4
		br %21
	21:
		%22 = load %5
		%23 = add i32 %22, 1
		store %23, %5
		br %7
	24:
		%25 = load %3
		ret %25

*BasicFunctionTypename: "delete" linkageType: EXTERNALLY_VISIBLE returnParam: BasicVoidType parameters: (0 **BasicTypeName typeName: struct.listBasicStructureType(elementType: i32, elementType: *struct.list), 1 i32) variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 55
	0:
		%3 = alloca **BasicTypeName typeName: struct.listBasicStructureType(elementType: i32, elementType: *struct.list), align 8
		%4 = alloca i32, align 4
		%5 = alloca *BasicTypeName typeName: struct.listBasicStructureType(elementType: i32, elementType: *struct.list), align 8
		%6 = alloca *BasicTypeName typeName: struct.listBasicStructureType(elementType: i32, elementType: *struct.list), align 8
		store %0, %3
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(***BasicTypeName typeName: struct.listBasicStructureType(elementType: i32, elementType: *struct.list) %3)
		store %1, %4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %4)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**BasicTypeName typeName: struct.listBasicStructureType(elementType: i32, elementType: *struct.list) %5)
		%7 = load %3
		%8 = load %7
		store %8, %5
		%9 = load %5
		%10 = icmp eq %9 null
		br %10, %11, %12
	11:
		br %53
	12:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**BasicTypeName typeName: struct.listBasicStructureType(elementType: i32, elementType: *struct.list) %6)
		%13 = load %5
		store %13, %6
		br %14
	14:
		%15 = load %6
		%16 = getelementptr %15, 0, 1
		%17 = load %16
		%18 = icmp ne %17 null
		br %18, %19, %40
	19:
		%20 = load %6
		%21 = getelementptr %20, 0, 1
		%22 = load %21
		%23 = getelementptr %22, 0, 0
		%24 = load %23
		%25 = load %4
		%26 = icmp eq %24 %25
		br %26, %27, %35
	27:
		%28 = load %6
		%29 = getelementptr %28, 0, 1
		%30 = load %29
		%31 = getelementptr %30, 0, 1
		%32 = load %31
		%33 = load %6
		%34 = getelementptr %33, 0, 1
		store %32, %34
		br %39
	35:
		%36 = load %6
		%37 = getelementptr %36, 0, 1
		%38 = load %37
		store %38, %6
		br %39
	39:
		br %14
	40:
		%41 = load %5
		%42 = getelementptr %41, 0, 0
		%43 = load %42
		%44 = load %4
		%45 = icmp eq %43 %44
		br %45, %46, %50
	46:
		%47 = load %5
		%48 = getelementptr %47, 0, 1
		%49 = load %48
		store %49, %5
		br %50
	50:
		%51 = load %5
		%52 = load %3
		store %51, %52
		br %53
	53:
		ret void

*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 116
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		%3 = alloca i32, align 4
		%4 = alloca *BasicTypeName typeName: struct.listBasicStructureType(elementType: i32, elementType: *struct.list), align 8
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		%5 = call i32 (...)* @__VERIFIER_nondet_int()
		store %5, %2
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		%6 = call i32 (...)* @__VERIFIER_nondet_int()
		store %6, %3
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**BasicTypeName typeName: struct.listBasicStructureType(elementType: i32, elementType: *struct.list) %4)
		%7 = load %2
		%8 = call *BasicTypeName typeName: struct.listBasicStructureType(elementType: i32, elementType: *struct.list) @init_list(i32 %7)
		store %8, %4
		%9 = load %3
		Unnamed Call-Instruction = call BasicVoidType @delete(**BasicTypeName typeName: struct.listBasicStructureType(elementType: i32, elementType: *struct.list) %4, i32 %9)
		ret 0


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 5 SCCs.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC
----------------------------------------

(8) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 102 rulesP rules:
f_2045(v9561, v9562, v9563, v9564, v9565, v9566, v9567, 0, v9569, v9570, v9571, 1, v9573, v9574, v9575, v9576, v9577, v9581, v9578, v9582, v9579, v9583, v9584, v9585, v9586, v9587, v9588, v9589, v9591, v9592, v9593, v9594, v9596, v9580, 3, 7, 4, 8, 15, 9, 2, 16, v9590, v9595) -> f_2046(v9561, v9562, v9563, v9564, v9565, v9566, v9567, 0, v9569, v9570, v9571, 1, v9575, v9576, v9573, v9574, v9577, v9581, v9578, v9582, v9579, v9583, v9584, v9585, v9586, v9587, v9588, v9589, v9591, v9592, v9593, v9594, v9596, v9580, 3, 7, 4, 8, 15, 9, 2, 16, v9590, v9595) :|: TRUE
f_2046(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9762, 1, v9764, v9765, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) -> f_2047(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9762, 1, v9764, v9765, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) :|: 0 = 0
f_2047(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9762, 1, v9764, v9765, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) -> f_2048(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9762, 1, v9764, v9765, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) :|: v9761 = 8 + v9760
f_2048(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9762, 1, v9764, v9765, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) -> f_2049(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9762, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) :|: 0 = 0
f_2049(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9762, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) -> f_2050(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9762, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) :|: 0 < v9765 && 2 <= v9786
f_2050(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9762, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) -> f_2052(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9762, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) :|: 0 = 0
f_2052(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9762, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) -> f_2054(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9762, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) :|: TRUE
f_2054(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9762, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) -> f_2056(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9762, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) :|: 0 = 0
f_2056(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9762, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) -> f_2058(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9762, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) :|: v9761 = 8 + v9760
f_2058(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9762, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) -> f_2060(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9762, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) :|: 0 = 0
f_2060(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9762, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) -> f_2062(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9762, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) :|: 0 = 0
f_2062(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9762, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) -> f_2064(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9895, v9762, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) :|: TRUE
f_2064(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9895, v9762, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) -> f_2067(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9895, v9762, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) :|: 0 = 0
f_2067(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9895, v9762, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) -> f_2070(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9762, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) :|: v9895 = v9753
f_2067(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9895, v9762, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) -> f_2071(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9895, v9762, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) :|: v9895 != v9753
f_2070(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9762, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) -> f_2074(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9762, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) :|: 0 = 0
f_2074(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9762, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) -> f_2078(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9762, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) :|: TRUE
f_2078(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9762, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) -> f_2088(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9762, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) :|: 0 = 0
f_2088(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9762, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) -> f_2092(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9762, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) :|: v9761 = 8 + v9760
f_2092(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9762, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) -> f_2096(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9762, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) :|: 0 = 0
f_2096(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9762, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) -> f_2100(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v10284, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9762, v10289, v9782, v9783, v9784, v9785, v9771, v9787, v10285, v9764, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10286) :|: v10284 = 8 + v9765 && 1 + v10286 = v9786 && v10289 = 15 + v9762 && v10287 = 1 + v9781 && v10288 = 1 + v10286 && 9 <= v10284 && 16 <= v10289 && 1 <= v10286
f_2100(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v10284, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9762, v10289, v9782, v9783, v9784, v9785, v9771, v9787, v10285, v9764, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10286) -> f_2103(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v10284, v10285, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9762, v10289, v9782, v9783, v9784, v9785, v9771, v9787, v9764, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10286) :|: 0 = 0
f_2103(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v10284, v10285, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9762, v10289, v9782, v9783, v9784, v9785, v9771, v9787, v9764, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10286) -> f_2106(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v10284, v10285, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9762, v10289, v9782, v9783, v9784, v9785, v9771, v9787, v9764, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10286) :|: 0 = 0
f_2106(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v10284, v10285, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9762, v10289, v9782, v9783, v9784, v9785, v9771, v9787, v9764, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10286) -> f_2109(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v10284, v10285, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9762, v10289, v9782, v9783, v9784, v9785, v9771, v9787, v9764, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10286) :|: v9761 = 8 + v9760
f_2109(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v10284, v10285, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9762, v10289, v9782, v9783, v9784, v9785, v9771, v9787, v9764, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10286) -> f_2112(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v10284, v10285, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9762, v10289, v9782, v9783, v9784, v9785, v9771, v9787, v9764, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10286) :|: TRUE
f_2112(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v10284, v10285, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9762, v10289, v9782, v9783, v9784, v9785, v9771, v9787, v9764, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10286) -> f_2115(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v10284, v10285, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9762, v10289, v9782, v9783, v9784, v9785, v9771, v9787, v9764, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10286) :|: TRUE
f_2115(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v10284, v10285, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9762, v10289, v9782, v9783, v9784, v9785, v9771, v9787, v9764, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10286) -> f_2040(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9766, v9767, v10284, v10285, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10286) :|: TRUE
f_2040(v9561, v9562, v9563, v9564, v9565, v9566, v9567, 0, v9569, v9570, v9571, 1, v9573, v9574, v9575, v9576, v9577, v9581, v9578, v9582, v9579, v9583, v9584, v9585, v9586, v9587, v9588, v9589, v9591, v9592, v9593, v9594, v9596, v9580, 3, 7, 4, 8, 15, 9, 2, 16, v9590, v9595) -> f_2045(v9561, v9562, v9563, v9564, v9565, v9566, v9567, 0, v9569, v9570, v9571, 1, v9573, v9574, v9575, v9576, v9577, v9581, v9578, v9582, v9579, v9583, v9584, v9585, v9586, v9587, v9588, v9589, v9591, v9592, v9593, v9594, v9596, v9580, 3, 7, 4, 8, 15, 9, 2, 16, v9590, v9595) :|: TRUE
f_2071(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9895, v9762, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) -> f_2075(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9895, v9762, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) :|: 0 = 0
f_2075(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9895, v9762, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) -> f_2079(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9895, v9762, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) :|: TRUE
f_2079(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9895, v9762, v9764, v9766, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) -> f_2089(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9895, v9762, v9764, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) :|: 0 = 0
f_2089(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9895, v9762, v9764, v9767, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) -> f_2093(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9895, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) :|: v9761 = 8 + v9760
f_2093(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9895, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) -> f_2097(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9895, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) :|: 0 = 0
f_2097(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9895, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) -> f_2101(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9895, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) :|: TRUE
f_2101(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9895, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) -> f_2104(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9895, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) :|: TRUE
f_2104(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9895, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) -> f_2107(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9895, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) :|: TRUE
f_2107(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9760, v9761, v9765, 1, v9895, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) -> f_2110(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v9761, 1, v9760, v9895, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) :|: 0 = 0
f_2110(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v9761, 1, v9760, v9895, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v9782, v9783, v9784, v9785, v9787, v9771, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v9786) -> f_2113(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v10517, 1, v9760, v9761, v9895, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v10523, v9782, v9783, v9784, v9785, v9771, v10520, v9787, v10518, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10519) :|: v10517 = 8 + v9765 && v10523 = 15 + v9762 && v10521 = 1 + v9781 && v10522 = 1 + v10519 && 1 + v10519 = v9786 && 9 <= v10517 && 16 <= v10523 && 1 <= v10519
f_2113(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v10517, 1, v9760, v9761, v9895, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v10523, v9782, v9783, v9784, v9785, v9771, v10520, v9787, v10518, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10519) -> f_2116(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v10517, v10518, 1, v9760, v9761, v9895, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v10523, v9782, v9783, v9784, v9785, v9771, v10520, v9787, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10519) :|: 0 = 0
f_2116(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v10517, v10518, 1, v9760, v9761, v9895, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v10523, v9782, v9783, v9784, v9785, v9771, v10520, v9787, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10519) -> f_2117(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v10517, v10518, 1, v9760, v9761, v9895, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v10523, v9782, v9783, v9784, v9785, v9771, v10520, v9787, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10519) :|: 0 < v10518 && 2 <= v10519
f_2117(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v10517, v10518, 1, v9760, v9761, v9895, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v10523, v9782, v9783, v9784, v9785, v9771, v10520, v9787, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10519) -> f_2119(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v10517, v10518, 1, v9760, v9761, v9895, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v10523, v9782, v9783, v9784, v9785, v9771, v10520, v9787, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10519) :|: 0 = 0
f_2119(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v10517, v10518, 1, v9760, v9761, v9895, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v10523, v9782, v9783, v9784, v9785, v9771, v10520, v9787, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10519) -> f_2121(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v10517, v10518, 1, v9760, v9761, v9895, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v10523, v9782, v9783, v9784, v9785, v9771, v10520, v9787, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10519) :|: TRUE
f_2121(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v10517, v10518, 1, v9760, v9761, v9895, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v10523, v9782, v9783, v9784, v9785, v9771, v10520, v9787, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10519) -> f_2123(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v10517, v10518, 1, v9761, v9895, v9760, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v10523, v9782, v9783, v9784, v9785, v9771, v10520, v9787, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10519) :|: 0 = 0
f_2123(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v10517, v10518, 1, v9761, v9895, v9760, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v10523, v9782, v9783, v9784, v9785, v9771, v10520, v9787, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10519) -> f_2131(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v10517, v10518, 1, v9895, v9760, v9761, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v10523, v10755, v9782, v9783, v9784, v9785, v9771, v10754, v9787, v10752, v10520, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10753) :|: v10517 = 8 + v9765 && 1 + v10753 = v10519 && v10757 = 1 + v10753 && v10756 = 1 + v9781 && v10755 = 15 + v9765 && 16 <= v10755 && 1 <= v10753
f_2131(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v10517, v10518, 1, v9895, v9760, v9761, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v10523, v10755, v9782, v9783, v9784, v9785, v9771, v10754, v9787, v10752, v10520, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10753) -> f_2133(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v10517, v10518, 1, v9895, v9760, v9761, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v10523, v10755, v9782, v9783, v9784, v9785, v9771, v10754, v9787, v10752, v10520, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10753) :|: 0 = 0
f_2133(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v10517, v10518, 1, v9895, v9760, v9761, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v10523, v10755, v9782, v9783, v9784, v9785, v9771, v10754, v9787, v10752, v10520, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10753) -> f_2135(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v10517, v10518, 1, v9895, v9760, v9761, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v10523, v10755, v9782, v9783, v9784, v9785, v9771, v10754, v9787, v10752, v10520, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10753) :|: 0 = 0
f_2135(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v10517, v10518, 1, v9895, v9760, v9761, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v10523, v10755, v9782, v9783, v9784, v9785, v9771, v10754, v9787, v10752, v10520, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10753) -> f_2137(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v10517, v10518, 1, v10754, v9760, v9761, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v10523, v10755, v9782, v9783, v9784, v9785, v9771, v9787, v10752, v10520, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10753) :|: 0 = 0
f_2137(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v10517, v10518, 1, v10754, v9760, v9761, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v10523, v10755, v9782, v9783, v9784, v9785, v9771, v9787, v10752, v10520, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10753) -> f_2140(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v10517, v10518, 1, v10754, v9760, v9761, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v10523, v10755, v9782, v9783, v9784, v9785, v9771, v9787, v10752, v10520, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10753) :|: 0 = 0
f_2140(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v10517, v10518, 1, v10754, v9760, v9761, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v10523, v10755, v9782, v9783, v9784, v9785, v9771, v9787, v10752, v10520, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10753) -> f_2143(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v10517, v10518, 1, v9760, v9761, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v10523, v10755, v9782, v9783, v9784, v9785, v9771, v9787, v10752, v10520, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10753) :|: v10754 = v9753
f_2140(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v10517, v10518, 1, v10754, v9760, v9761, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v10523, v10755, v9782, v9783, v9784, v9785, v9771, v9787, v10752, v10520, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10753) -> f_2144(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v10517, v10518, 1, v10754, v9760, v9761, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v10523, v10755, v9782, v9783, v9784, v9785, v9771, v9787, v10752, v10520, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10753) :|: v10754 != v9753
f_2143(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v10517, v10518, 1, v9760, v9761, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v10523, v10755, v9782, v9783, v9784, v9785, v9771, v9787, v10752, v10520, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10753) -> f_2147(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v10517, v10518, 1, v9760, v9761, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v10523, v10755, v9782, v9783, v9784, v9785, v9771, v9787, v10752, v10520, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10753) :|: 0 = 0
f_2147(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v10517, v10518, 1, v9760, v9761, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v10523, v10755, v9782, v9783, v9784, v9785, v9771, v9787, v10752, v10520, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10753) -> f_2151(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v10517, v10518, 1, v9760, v9761, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v10523, v10755, v9782, v9783, v9784, v9785, v9771, v9787, v10752, v10520, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10753) :|: TRUE
f_2151(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v10517, v10518, 1, v9760, v9761, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v10523, v10755, v9782, v9783, v9784, v9785, v9771, v9787, v10752, v10520, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10753) -> f_2237(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v10517, v10518, 1, v9760, v9761, v9762, v9764, v9765, v9760, v9761, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v10755, v9782, v9783, v9784, v9785, v10520, v10520, v9787, v10752, v9771, v12122, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10753, v12121) :|: TRUE
f_2237(v12075, v12076, v12077, v12078, v12079, v12080, v12081, 0, v12083, v12084, v12085, 1, v12087, v12088, v12089, v12090, v12091, v12092, v12093, v12094, v12098, v12095, v12099, v12096, v12100, v12101, v12102, v12103, v12104, v12105, v12106, v12108, v12112, v12113, v12114, v12115, v12116, v12117, v12119, v12120, v12097, v12122, 3, 7, 4, 8, 15, 9, 2, 16, v12111, v12118, v12121) -> f_2240(v12075, v12076, v12077, v12078, v12079, v12080, v12081, 0, v12083, v12084, v12085, 1, v12088, v12089, v12090, v12091, v12087, v12092, v12093, v12094, v12098, v12095, v12099, v12096, v12100, v12101, v12102, v12103, v12104, v12105, v12106, v12108, v12112, v12113, v12114, v12115, v12116, v12117, v12119, v12120, v12097, v12122, 3, 7, 4, 8, 15, 9, 2, 16, v12111, v12118, v12121) :|: 0 = 0
f_2240(v12075, v12076, v12077, v12078, v12079, v12080, v12081, 0, v12083, v12084, v12085, 1, v12088, v12089, v12090, v12091, v12087, v12092, v12093, v12094, v12098, v12095, v12099, v12096, v12100, v12101, v12102, v12103, v12104, v12105, v12106, v12108, v12112, v12113, v12114, v12115, v12116, v12117, v12119, v12120, v12097, v12122, 3, 7, 4, 8, 15, 9, 2, 16, v12111, v12118, v12121) -> f_2242(v12075, v12076, v12077, v12078, v12079, v12080, v12081, 0, v12083, v12084, v12085, 1, v12089, v12090, v12091, v12087, v12088, v12092, v12093, v12094, v12098, v12095, v12099, v12096, v12100, v12101, v12102, v12103, v12104, v12105, v12106, v12108, v12112, v12113, v12114, v12115, v12116, v12117, v12119, v12120, v12097, v12122, 3, 7, 4, 8, 15, 9, 2, 16, v12111, v12118, v12121) :|: v12084 = 8 + v12083
f_2242(v12075, v12076, v12077, v12078, v12079, v12080, v12081, 0, v12083, v12084, v12085, 1, v12089, v12090, v12091, v12087, v12088, v12092, v12093, v12094, v12098, v12095, v12099, v12096, v12100, v12101, v12102, v12103, v12104, v12105, v12106, v12108, v12112, v12113, v12114, v12115, v12116, v12117, v12119, v12120, v12097, v12122, 3, 7, 4, 8, 15, 9, 2, 16, v12111, v12118, v12121) -> f_2244(v12075, v12076, v12077, v12078, v12079, v12080, v12081, 0, v12083, v12084, v12085, 1, v12090, v12091, v12087, v12088, v12092, v12093, v12094, v12098, v12095, v12099, v12096, v12100, v12101, v12102, v12103, v12104, v12105, v12106, v12108, v12112, v12113, v12114, v12115, v12116, v12117, v12119, v12120, v12089, v12097, v12122, 3, 7, 4, 8, 15, 9, 2, 16, v12111, v12118, v12121) :|: 0 = 0
f_2244(v12075, v12076, v12077, v12078, v12079, v12080, v12081, 0, v12083, v12084, v12085, 1, v12090, v12091, v12087, v12088, v12092, v12093, v12094, v12098, v12095, v12099, v12096, v12100, v12101, v12102, v12103, v12104, v12105, v12106, v12108, v12112, v12113, v12114, v12115, v12116, v12117, v12119, v12120, v12089, v12097, v12122, 3, 7, 4, 8, 15, 9, 2, 16, v12111, v12118, v12121) -> f_2252(v12075, v12076, v12077, v12078, v12079, v12080, v12081, 0, v12083, v12084, v12085, 1, v12223, v12091, v12087, v12088, v12092, v12093, v12094, v12098, v12095, v12099, v12096, v12100, v12101, v12102, v12103, v12104, v12105, v12106, v12108, v12112, v12113, v12114, v12115, v12116, v12117, v12119, v12120, v12089, v12090, v12097, v12122, 3, 7, 4, 8, 15, 9, 2, 16, v12111, v12118, v12121) :|: v12223 = 8 + v12085 && 9 <= v12223
f_2252(v12075, v12076, v12077, v12078, v12079, v12080, v12081, 0, v12083, v12084, v12085, 1, v12223, v12091, v12087, v12088, v12092, v12093, v12094, v12098, v12095, v12099, v12096, v12100, v12101, v12102, v12103, v12104, v12105, v12106, v12108, v12112, v12113, v12114, v12115, v12116, v12117, v12119, v12120, v12089, v12090, v12097, v12122, 3, 7, 4, 8, 15, 9, 2, 16, v12111, v12118, v12121) -> f_2254(v12075, v12076, v12077, v12078, v12079, v12080, v12081, 0, v12083, v12084, v12085, 1, v12223, v12120, v12087, v12088, v12092, v12093, v12094, v12098, v12095, v12099, v12096, v12100, v12101, v12102, v12103, v12104, v12105, v12106, v12108, v12112, v12113, v12114, v12115, v12116, v12091, v12117, v12119, v12089, v12090, v12097, v12122, 3, 7, 4, 8, 15, 9, 2, 16, v12111, v12118, v12121) :|: 0 = 0
f_2254(v12075, v12076, v12077, v12078, v12079, v12080, v12081, 0, v12083, v12084, v12085, 1, v12223, v12120, v12087, v12088, v12092, v12093, v12094, v12098, v12095, v12099, v12096, v12100, v12101, v12102, v12103, v12104, v12105, v12106, v12108, v12112, v12113, v12114, v12115, v12116, v12091, v12117, v12119, v12089, v12090, v12097, v12122, 3, 7, 4, 8, 15, 9, 2, 16, v12111, v12118, v12121) -> f_2256(v12075, v12076, v12077, v12078, v12079, v12080, v12081, 0, v12083, v12084, v12085, 1, v12223, v12120, v12088, v12092, v12093, v12094, v12098, v12095, v12099, v12096, v12100, v12101, v12102, v12103, v12104, v12105, v12087, v12106, v12108, v12112, v12113, v12114, v12115, v12116, v12091, v12117, v12119, v12089, v12090, v12097, v12122, 3, 7, 4, 8, 15, 9, 2, 16, v12111, v12118, v12121) :|: 0 = 0
f_2256(v12075, v12076, v12077, v12078, v12079, v12080, v12081, 0, v12083, v12084, v12085, 1, v12223, v12120, v12088, v12092, v12093, v12094, v12098, v12095, v12099, v12096, v12100, v12101, v12102, v12103, v12104, v12105, v12087, v12106, v12108, v12112, v12113, v12114, v12115, v12116, v12091, v12117, v12119, v12089, v12090, v12097, v12122, 3, 7, 4, 8, 15, 9, 2, 16, v12111, v12118, v12121) -> f_2258(v12075, v12076, v12077, v12078, v12079, v12080, v12081, 0, v12083, v12084, v12085, 1, v12223, v12120, v12092, v12093, v12094, v12098, v12095, v12099, v12096, v12100, v12101, v12102, v12103, v12104, v12105, v12087, v12106, v12108, v12112, v12113, v12114, v12115, v12116, v12091, v12117, v12119, v12088, v12089, v12090, v12097, v12122, 3, 7, 4, 8, 15, 9, 2, 16, v12111, v12118, v12121) :|: v12084 = 8 + v12083
f_2258(v12075, v12076, v12077, v12078, v12079, v12080, v12081, 0, v12083, v12084, v12085, 1, v12223, v12120, v12092, v12093, v12094, v12098, v12095, v12099, v12096, v12100, v12101, v12102, v12103, v12104, v12105, v12087, v12106, v12108, v12112, v12113, v12114, v12115, v12116, v12091, v12117, v12119, v12088, v12089, v12090, v12097, v12122, 3, 7, 4, 8, 15, 9, 2, 16, v12111, v12118, v12121) -> f_2260(v12075, v12076, v12077, v12078, v12079, v12080, v12081, 0, v12083, v12084, v12085, 1, v12223, v12120, v12092, v12093, v12094, v12098, v12095, v12099, v12096, v12100, v12101, v12102, v12103, v12104, v12105, v12087, v12106, v12108, v12112, v12113, v12114, v12115, v12116, v12119, v12088, v12091, v12097, v12089, v12122, 3, 7, 4, 8, 15, 9, 2, 16, v12111, v12118, v12121) :|: TRUE
f_2260(v12075, v12076, v12077, v12078, v12079, v12080, v12081, 0, v12083, v12084, v12085, 1, v12223, v12120, v12092, v12093, v12094, v12098, v12095, v12099, v12096, v12100, v12101, v12102, v12103, v12104, v12105, v12087, v12106, v12108, v12112, v12113, v12114, v12115, v12116, v12119, v12088, v12091, v12097, v12089, v12122, 3, 7, 4, 8, 15, 9, 2, 16, v12111, v12118, v12121) -> f_2268(v12075, v12076, v12077, v12078, v12079, v12080, v12081, 0, v12083, v12084, v12085, 1, v12223, v12120, v12092, v12093, v12094, v12098, v12095, v12099, v12096, v12100, v12101, v12102, v12103, v12104, v12105, v12087, v12106, v12108, v12112, v12113, v12114, v12115, v12116, v12119, v12088, v12091, v12097, v12089, v12122, 3, 7, 4, 8, 15, 9, 2, 16, v12111, v12118, v12121) :|: TRUE
f_2268(v12075, v12076, v12077, v12078, v12079, v12080, v12081, 0, v12083, v12084, v12085, 1, v12223, v12120, v12092, v12093, v12094, v12098, v12095, v12099, v12096, v12100, v12101, v12102, v12103, v12104, v12105, v12087, v12106, v12108, v12112, v12113, v12114, v12115, v12116, v12119, v12088, v12091, v12097, v12089, v12122, 3, 7, 4, 8, 15, 9, 2, 16, v12111, v12118, v12121) -> f_2040(v12075, v12076, v12077, v12078, v12079, v12080, v12081, 0, v12083, v12084, v12085, 1, v12092, v12093, v12223, v12120, v12094, v12098, v12095, v12099, v12096, v12100, v12101, v12102, v12103, v12104, v12105, v12108, v12112, v12113, v12114, v12115, v12119, v12097, 3, 7, 4, 8, 15, 9, 2, 16, v12111, v12118) :|: TRUE
f_2144(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v10517, v10518, 1, v10754, v9760, v9761, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v10523, v10755, v9782, v9783, v9784, v9785, v9771, v9787, v10752, v10520, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10753) -> f_2148(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v10517, v10518, 1, v10754, v9760, v9761, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v10523, v10755, v9782, v9783, v9784, v9785, v9771, v9787, v10752, v10520, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10753) :|: 0 = 0
f_2148(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v10517, v10518, 1, v10754, v9760, v9761, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v10523, v10755, v9782, v9783, v9784, v9785, v9771, v9787, v10752, v10520, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10753) -> f_2152(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v10517, v10518, 1, v10754, v9760, v9761, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v10523, v10755, v9782, v9783, v9784, v9785, v9771, v9787, v10752, v10520, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10753) :|: TRUE
f_2152(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v10517, v10518, 1, v10754, v9760, v9761, v9762, v9764, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v10523, v10755, v9782, v9783, v9784, v9785, v9771, v9787, v10752, v10520, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10753) -> f_2239(v9752, v9753, v9754, v9755, v9756, v9757, v9758, 0, v9765, v10517, v10518, 1, v10754, v9760, v9761, v9762, v9764, v9765, v9760, v9761, v9768, v9772, v9769, v9773, v9770, v9774, v9775, v9776, v9777, v9778, v9779, v9780, v10755, v9782, v9783, v9784, v9785, v10520, v10520, v9787, v10752, v9771, v12222, 3, 7, 4, 8, 15, 9, 2, 16, v9781, v10753, v12221) :|: TRUE
f_2239(v12174, v12175, v12176, v12177, v12178, v12179, v12180, 0, v12182, v12183, v12184, 1, v12186, v12187, v12188, v12189, v12190, v12191, v12192, v12193, v12194, v12198, v12195, v12199, v12196, v12200, v12201, v12202, v12203, v12204, v12205, v12206, v12208, v12212, v12213, v12214, v12215, v12216, v12217, v12219, v12220, v12197, v12222, 3, 7, 4, 8, 15, 9, 2, 16, v12211, v12218, v12221) -> f_2306(v12174, v12175, v12176, v12177, v12178, v12179, v12180, 0, v12182, v12183, v12184, 1, v12186, v12187, v12188, v12189, v12190, v12191, v12192, v12193, v12194, v12198, v12195, v12199, v12196, v12200, v12201, v12202, v12203, v12204, v12205, v12206, v12208, v12212, v12213, v12214, v12215, v12219, v12220, v12222, v12197, 3, 7, 4, 8, 15, 9, 2, 16, v12211, v12218, v12221) :|: TRUE
f_2306(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12978, v12979, v12980, 1, v12982, v12983, v12984, v12985, v12986, v12987, v12988, v12989, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13005, v13006, v13007, v13008, v13010, v13011, v13013, v12993, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13009, v13012) -> f_2307(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12978, v12979, v12980, 1, v12982, v12983, v12984, v12985, v12986, v12987, v12989, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13005, v13006, v13007, v13008, v13010, v13011, v13013, v12993, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13009, v13012) :|: 0 = 0
f_2307(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12978, v12979, v12980, 1, v12982, v12983, v12984, v12985, v12986, v12987, v12989, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13005, v13006, v13007, v13008, v13010, v13011, v13013, v12993, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13009, v13012) -> f_2308(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12978, v12979, v12980, 1, v12982, v12983, v12984, v12985, v12986, v12987, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13005, v13006, v13007, v13008, v13010, v13011, v13013, v12989, v12993, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13009, v13012) :|: v12979 = 8 + v12978
f_2308(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12978, v12979, v12980, 1, v12982, v12983, v12984, v12985, v12986, v12987, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13005, v13006, v13007, v13008, v13010, v13011, v13013, v12989, v12993, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13009, v13012) -> f_2309(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12978, v12979, v12980, 1, v12982, v12983, v12984, v12985, v12986, v12987, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13005, v13006, v13007, v13008, v13010, v13011, v13013, v12989, v12993, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13009, v13012) :|: 0 = 0
f_2309(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12978, v12979, v12980, 1, v12982, v12983, v12984, v12985, v12986, v12987, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13005, v13006, v13007, v13008, v13010, v13011, v13013, v12989, v12993, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13009, v13012) -> f_2310(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12978, v12979, v12980, 1, v12982, v12983, v12984, v12985, v12986, v12987, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13005, v13006, v13007, v13008, v13010, v13011, v13013, v12993, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13009, v13012) :|: TRUE
f_2310(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12978, v12979, v12980, 1, v12982, v12983, v12984, v12985, v12986, v12987, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13005, v13006, v13007, v13008, v13010, v13011, v13013, v12993, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13009, v13012) -> f_2311(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12978, v12979, v12980, 1, v12982, v12983, v12984, v12985, v12986, v12987, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13005, v13006, v13007, v13008, v13010, v13011, v13013, v12993, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13009, v13012) :|: TRUE
f_2311(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12978, v12979, v12980, 1, v12982, v12983, v12984, v12985, v12986, v12987, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13005, v13006, v13007, v13008, v13010, v13011, v13013, v12993, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13009, v13012) -> f_2312(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12978, v12979, v12980, 1, v12982, v12983, v12984, v12985, v12986, v12987, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13005, v13006, v13007, v13008, v13010, v13011, v13013, v12993, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13009, v13012) :|: TRUE
f_2312(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12978, v12979, v12980, 1, v12982, v12983, v12984, v12985, v12986, v12987, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13005, v13006, v13007, v13008, v13010, v13011, v13013, v12993, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13009, v13012) -> f_2313(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v12979, 1, v12978, v12982, v12983, v12984, v12985, v12986, v12987, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13005, v13006, v13007, v13008, v13010, v13011, v13013, v12993, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13009, v13012) :|: 0 = 0
f_2313(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v12979, 1, v12978, v12982, v12983, v12984, v12985, v12986, v12987, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13005, v13006, v13007, v13008, v13010, v13011, v13013, v12993, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13009, v13012) -> f_2320(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, 1, v12978, v12979, v12982, v12983, v12984, v12985, v12986, v12987, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13005, v13006, v13007, v13008, v13010, v13011, v13013, v12993, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13009, v13012) :|: v13152 = 8 + v12980 && 9 <= v13152
f_2320(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, 1, v12978, v12979, v12982, v12983, v12984, v12985, v12986, v12987, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13005, v13006, v13007, v13008, v13010, v13011, v13013, v12993, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13009, v13012) -> f_2321(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v12978, v12979, v12982, v12983, v12984, v12985, v12986, v12987, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13005, v13006, v13007, v13008, v13010, v13013, v12993, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13009, v13012) :|: 0 = 0
f_2321(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v12978, v12979, v12982, v12983, v12984, v12985, v12986, v12987, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13005, v13006, v13007, v13008, v13010, v13013, v12993, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13009, v13012) -> f_2322(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v12978, v12979, v12982, v12983, v12984, v12985, v12986, v12987, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13005, v13006, v13007, v13008, v13010, v13013, v12993, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13009, v13012) :|: 0 < v13011 && 2 <= v13009
f_2322(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v12978, v12979, v12982, v12983, v12984, v12985, v12986, v12987, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13005, v13006, v13007, v13008, v13010, v13013, v12993, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13009, v13012) -> f_2324(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v12978, v12979, v12982, v12983, v12984, v12985, v12986, v12987, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13005, v13006, v13007, v13008, v13010, v13013, v12993, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13009, v13012) :|: 0 = 0
f_2324(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v12978, v12979, v12982, v12983, v12984, v12985, v12986, v12987, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13005, v13006, v13007, v13008, v13010, v13013, v12993, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13009, v13012) -> f_2326(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v12978, v12979, v12982, v12983, v12984, v12985, v12986, v12987, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13005, v13006, v13007, v13008, v13010, v13013, v12993, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13009, v13012) :|: TRUE
f_2326(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v12978, v12979, v12982, v12983, v12984, v12985, v12986, v12987, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13005, v13006, v13007, v13008, v13010, v13013, v12993, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13009, v13012) -> f_2328(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v12979, v12982, v12983, v12984, v12985, v12986, v12987, v12978, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13005, v13006, v13007, v13008, v13010, v13013, v12993, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13009, v13012) :|: 0 = 0
f_2328(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v12979, v12982, v12983, v12984, v12985, v12986, v12987, v12978, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13005, v13006, v13007, v13008, v13010, v13013, v12993, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13009, v13012) -> f_2336(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v12982, v12983, v12984, v12985, v12986, v12987, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12993, v13288, v13010, v13286, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) :|: v13152 = 8 + v12980 && v13289 = 15 + v12980 && 1 + v13287 = v13009 && v13290 = 1 + v13004 && v13291 = 1 + v13012 && 16 <= v13289 && 1 <= v13287 && 2 <= v13291
f_2336(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v12982, v12983, v12984, v12985, v12986, v12987, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12993, v13288, v13010, v13286, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) -> f_2338(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v12982, v12983, v12984, v12985, v12986, v12987, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12993, v13288, v13010, v13286, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) :|: 0 = 0
f_2338(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v12982, v12983, v12984, v12985, v12986, v12987, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12993, v13288, v13010, v13286, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) -> f_2340(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v12982, v12983, v12984, v12985, v12986, v12987, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12993, v13288, v13010, v13286, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) :|: 0 = 0
f_2340(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v12982, v12983, v12984, v12985, v12986, v12987, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12993, v13288, v13010, v13286, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) -> f_2342(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v13288, v12983, v12984, v12985, v12986, v12987, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12993, v13010, v13286, v12982, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) :|: 0 = 0
f_2342(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v13288, v12983, v12984, v12985, v12986, v12987, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12993, v13010, v13286, v12982, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) -> f_2345(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v13288, v12983, v12984, v12985, v12986, v12987, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12993, v13010, v13286, v12982, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) :|: 0 = 0
f_2345(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v13288, v12983, v12984, v12985, v12986, v12987, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12993, v13010, v13286, v12982, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) -> f_2348(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v12983, v12984, v12985, v12986, v12987, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12993, v13010, v13286, v12982, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) :|: v13288 = v12971
f_2345(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v13288, v12983, v12984, v12985, v12986, v12987, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12993, v13010, v13286, v12982, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) -> f_2349(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v13288, v12983, v12984, v12985, v12986, v12987, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12993, v13010, v13286, v12982, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) :|: v13288 != v12971
f_2348(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v12983, v12984, v12985, v12986, v12987, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12993, v13010, v13286, v12982, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) -> f_2352(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v12983, v12984, v12985, v12986, v12987, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12993, v13010, v13286, v12982, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) :|: 0 = 0
f_2352(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v12983, v12984, v12985, v12986, v12987, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12993, v13010, v13286, v12982, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) -> f_2356(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v12983, v12984, v12985, v12986, v12987, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12993, v13010, v13286, v12982, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) :|: TRUE
f_2356(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v12983, v12984, v12985, v12986, v12987, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12993, v13010, v13286, v12982, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) -> f_2366(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v12984, v12985, v12986, v12987, v12983, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12993, v13010, v13286, v12982, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) :|: 0 = 0
f_2366(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v12984, v12985, v12986, v12987, v12983, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12993, v13010, v13286, v12982, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) -> f_2369(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v12985, v12986, v12987, v12983, v12984, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12993, v13010, v13286, v12982, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) :|: v13152 = 8 + v12980
f_2369(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v12985, v12986, v12987, v12983, v12984, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12993, v13010, v13286, v12982, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) -> f_2372(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v12986, v12987, v12983, v12984, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12993, v13010, v13286, v12985, v12982, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) :|: 0 = 0
f_2372(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v12986, v12987, v12983, v12984, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12993, v13010, v13286, v12985, v12982, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) -> f_2381(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v13963, v12987, v12983, v12984, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12993, v13010, v13286, v12985, v12982, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) :|: v13963 = 8 + v13011 && 9 <= v13963
f_2381(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v13963, v12987, v12983, v12984, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12993, v13010, v13286, v12985, v12982, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) -> f_2383(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v13963, v13286, v12983, v12984, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12987, v12993, v13010, v12985, v12982, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) :|: 0 = 0
f_2383(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v13963, v13286, v12983, v12984, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12987, v12993, v13010, v12985, v12982, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) -> f_2385(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v13963, v13286, v12984, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v12983, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12987, v12993, v13010, v12985, v12982, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) :|: 0 = 0
f_2385(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v13963, v13286, v12984, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v12983, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12987, v12993, v13010, v12985, v12982, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) -> f_2387(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v13963, v13286, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v12983, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12984, v12987, v12993, v13010, v12985, v12982, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) :|: v13152 = 8 + v12980
f_2387(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v13963, v13286, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v12983, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12984, v12987, v12993, v13010, v12985, v12982, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) -> f_2389(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v13963, v13286, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v12983, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12984, v12987, v12993, v13010, v12985, v12982, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) :|: TRUE
f_2389(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v13963, v13286, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v12983, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12984, v12987, v12993, v13010, v12985, v12982, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) -> f_2391(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v13963, v13286, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v12983, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12984, v12987, v12993, v13010, v12985, v12982, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) :|: TRUE
f_2391(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v13963, v13286, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v12983, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12984, v12987, v12993, v13010, v12985, v12982, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) -> f_2040(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v12978, v12979, v13963, v13286, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13289, v13005, v13006, v13007, v13008, v13010, v12993, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287) :|: TRUE
f_2349(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v13288, v12983, v12984, v12985, v12986, v12987, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12993, v13010, v13286, v12982, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) -> f_2353(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v13288, v12983, v12984, v12985, v12986, v12987, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12993, v13010, v13286, v12982, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) :|: 0 = 0
f_2353(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v13288, v12983, v12984, v12985, v12986, v12987, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12993, v13010, v13286, v12982, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) -> f_2357(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v13288, v12983, v12984, v12985, v12986, v12987, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12993, v13010, v13286, v12982, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) :|: TRUE
f_2357(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v13288, v12983, v12984, v12985, v12986, v12987, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13003, v13289, v13005, v13006, v13007, v13008, v12993, v13010, v13286, v12982, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) -> f_2306(v12970, v12971, v12972, v12973, v12974, v12975, v12976, 0, v12980, v13152, v13011, 1, v13288, v12983, v12984, v12985, v12986, v12987, v12978, v12979, v12990, v12994, v12991, v12995, v12992, v12996, v12997, v12998, v12999, v13000, v13001, v13002, v13289, v13005, v13006, v13007, v13008, v13010, v13286, v12982, v12993, 3, 7, 4, 8, 15, 9, 2, 16, v13004, v13287, v13291) :|: TRUE
Combined rules. Obtained 10 rulesP rules:
f_2345(v12970:0, v12971:0, v12972:0, v12973:0, v12974:0, v12975:0, v12976:0, 0, v12980:0, 8 + v12980:0, v13011:0, 1, v12971:0, v12983:0, v12984:0, v12985:0, v12986:0, v12987:0, v12978:0, v12979:0, v12990:0, v12994:0, v12991:0, v12995:0, v12992:0, v12996:0, v12997:0, v12998:0, v12999:0, v13000:0, v13001:0, v13002:0, v13003:0, v13289:0, v13005:0, v13006:0, v13007:0, v13008:0, v12993:0, v13010:0, v13286:0, v12982:0, 3, 7, 4, 8, 15, 9, 2, 16, v13004:0, v13287:0, v13291:0) -> f_2045(v12970:0, v12971:0, v12972:0, v12973:0, v12974:0, v12975:0, v12976:0, 0, v12980:0, 8 + v12980:0, v13011:0, 1, v12978:0, v12979:0, 8 + v13011:0, v13286:0, v12990:0, v12994:0, v12991:0, v12995:0, v12992:0, v12996:0, v12997:0, v12998:0, v12999:0, v13000:0, v13001:0, v13289:0, v13005:0, v13006:0, v13007:0, v13008:0, v13010:0, v12993:0, 3, 7, 4, 8, 15, 9, 2, 16, v13004:0, v13287:0) :|: v13011:0 > 0
f_2045(v9561:0, v10754:0, v9563:0, v9564:0, v9565:0, v9566:0, v9567:0, 0, v9569:0, 8 + v9569:0, v9571:0, 1, v9573:0, v9574:0, v9575:0, v9576:0, v9577:0, v9581:0, v9578:0, v9582:0, v9579:0, v9583:0, v9584:0, v9585:0, v9586:0, v9587:0, v9588:0, v9589:0, v9591:0, v9592:0, v9593:0, v9594:0, v9596:0, v9580:0, 3, 7, 4, 8, 15, 9, 2, 16, v9590:0, 1 + (1 + v10753:0)) -> f_2045(v9561:0, v10754:0, v9563:0, v9564:0, v9565:0, v9566:0, v9567:0, 0, v9576:0, 8 + v9576:0, v10518:0, 1, v9569:0, 8 + v9569:0, 8 + v10518:0, v10752:0, v9577:0, v9581:0, v9578:0, v9582:0, v9579:0, v9583:0, v9584:0, v9585:0, v9586:0, v9587:0, v9588:0, 15 + v9576:0, v9591:0, v9592:0, v9593:0, v9594:0, v9596:0, v9580:0, 3, 7, 4, 8, 15, 9, 2, 16, v9590:0, v10753:0) :|: v10753:0 > 0 && v9576:0 > 0 && v9895:0 < v10754:0 && v9571:0 > 0 && v10518:0 > 0
f_2045(v9561:0, v10754:0, v9563:0, v9564:0, v9565:0, v9566:0, v9567:0, 0, v9569:0, 8 + v9569:0, v9571:0, 1, v9573:0, v9574:0, v9575:0, v9576:0, v9577:0, v9581:0, v9578:0, v9582:0, v9579:0, v9583:0, v9584:0, v9585:0, v9586:0, v9587:0, v9588:0, v9589:0, v9591:0, v9592:0, v9593:0, v9594:0, v9596:0, v9580:0, 3, 7, 4, 8, 15, 9, 2, 16, v9590:0, 1 + (1 + v10753:0)) -> f_2045(v9561:0, v10754:0, v9563:0, v9564:0, v9565:0, v9566:0, v9567:0, 0, v9576:0, 8 + v9576:0, v10518:0, 1, v9569:0, 8 + v9569:0, 8 + v10518:0, v10752:0, v9577:0, v9581:0, v9578:0, v9582:0, v9579:0, v9583:0, v9584:0, v9585:0, v9586:0, v9587:0, v9588:0, 15 + v9576:0, v9591:0, v9592:0, v9593:0, v9594:0, v9596:0, v9580:0, 3, 7, 4, 8, 15, 9, 2, 16, v9590:0, v10753:0) :|: v10753:0 > 0 && v9576:0 > 0 && v9895:0 > v10754:0 && v9571:0 > 0 && v10518:0 > 0
f_2045(v9561:0, v9562:0, v9563:0, v9564:0, v9565:0, v9566:0, v9567:0, 0, v9569:0, 8 + v9569:0, v9571:0, 1, v9573:0, v9574:0, v9575:0, v9576:0, v9577:0, v9581:0, v9578:0, v9582:0, v9579:0, v9583:0, v9584:0, v9585:0, v9586:0, v9587:0, v9588:0, v9589:0, v9591:0, v9592:0, v9593:0, v9594:0, v9596:0, v9580:0, 3, 7, 4, 8, 15, 9, 2, 16, v9590:0, 1 + (1 + (1 + v13287:0))) -> f_2345(v9561:0, v9562:0, v9563:0, v9564:0, v9565:0, v9566:0, v9567:0, 0, v10518:0, 8 + v10518:0, v10752:0, 1, v13288:0, v9569:0, 8 + v9569:0, v9571:0, v9575:0, v9576:0, v9576:0, 8 + v9576:0, v9577:0, v9581:0, v9578:0, v9582:0, v9579:0, v9583:0, v9584:0, v9585:0, v9586:0, v9587:0, v9588:0, v9589:0, 15 + v9576:0, 15 + v10518:0, v9591:0, v9592:0, v9593:0, v9594:0, v9580:0, v9596:0, v13286:0, v10754:0, 3, 7, 4, 8, 15, 9, 2, 16, v9590:0, v13287:0, 1 + v12221:0) :|: v13287:0 > 0 && v9576:0 > 0 && v9895:0 < v9562:0 && v9571:0 > 0 && v10518:0 > 0 && v9562:0 > v10754:0 && v10752:0 > 0 && v12221:0 > 0
f_2045(v9561:0, v9562:0, v9563:0, v9564:0, v9565:0, v9566:0, v9567:0, 0, v9569:0, 8 + v9569:0, v9571:0, 1, v9573:0, v9574:0, v9575:0, v9576:0, v9577:0, v9581:0, v9578:0, v9582:0, v9579:0, v9583:0, v9584:0, v9585:0, v9586:0, v9587:0, v9588:0, v9589:0, v9591:0, v9592:0, v9593:0, v9594:0, v9596:0, v9580:0, 3, 7, 4, 8, 15, 9, 2, 16, v9590:0, 1 + (1 + (1 + v13287:0))) -> f_2345(v9561:0, v9562:0, v9563:0, v9564:0, v9565:0, v9566:0, v9567:0, 0, v10518:0, 8 + v10518:0, v10752:0, 1, v13288:0, v9569:0, 8 + v9569:0, v9571:0, v9575:0, v9576:0, v9576:0, 8 + v9576:0, v9577:0, v9581:0, v9578:0, v9582:0, v9579:0, v9583:0, v9584:0, v9585:0, v9586:0, v9587:0, v9588:0, v9589:0, 15 + v9576:0, 15 + v10518:0, v9591:0, v9592:0, v9593:0, v9594:0, v9580:0, v9596:0, v13286:0, v10754:0, 3, 7, 4, 8, 15, 9, 2, 16, v9590:0, v13287:0, 1 + v12221:0) :|: v13287:0 > 0 && v9576:0 > 0 && v9895:0 < v9562:0 && v9571:0 > 0 && v10518:0 > 0 && v9562:0 < v10754:0 && v10752:0 > 0 && v12221:0 > 0
f_2045(v9561:0, v9562:0, v9563:0, v9564:0, v9565:0, v9566:0, v9567:0, 0, v9569:0, 8 + v9569:0, v9571:0, 1, v9573:0, v9574:0, v9575:0, v9576:0, v9577:0, v9581:0, v9578:0, v9582:0, v9579:0, v9583:0, v9584:0, v9585:0, v9586:0, v9587:0, v9588:0, v9589:0, v9591:0, v9592:0, v9593:0, v9594:0, v9596:0, v9580:0, 3, 7, 4, 8, 15, 9, 2, 16, v9590:0, 1 + (1 + (1 + v13287:0))) -> f_2345(v9561:0, v9562:0, v9563:0, v9564:0, v9565:0, v9566:0, v9567:0, 0, v10518:0, 8 + v10518:0, v10752:0, 1, v13288:0, v9569:0, 8 + v9569:0, v9571:0, v9575:0, v9576:0, v9576:0, 8 + v9576:0, v9577:0, v9581:0, v9578:0, v9582:0, v9579:0, v9583:0, v9584:0, v9585:0, v9586:0, v9587:0, v9588:0, v9589:0, 15 + v9576:0, 15 + v10518:0, v9591:0, v9592:0, v9593:0, v9594:0, v9580:0, v9596:0, v13286:0, v10754:0, 3, 7, 4, 8, 15, 9, 2, 16, v9590:0, v13287:0, 1 + v12221:0) :|: v13287:0 > 0 && v9576:0 > 0 && v9895:0 > v9562:0 && v9571:0 > 0 && v10518:0 > 0 && v9562:0 > v10754:0 && v10752:0 > 0 && v12221:0 > 0
f_2045(v9561:0, v9562:0, v9563:0, v9564:0, v9565:0, v9566:0, v9567:0, 0, v9569:0, 8 + v9569:0, v9571:0, 1, v9573:0, v9574:0, v9575:0, v9576:0, v9577:0, v9581:0, v9578:0, v9582:0, v9579:0, v9583:0, v9584:0, v9585:0, v9586:0, v9587:0, v9588:0, v9589:0, v9591:0, v9592:0, v9593:0, v9594:0, v9596:0, v9580:0, 3, 7, 4, 8, 15, 9, 2, 16, v9590:0, 1 + (1 + (1 + v13287:0))) -> f_2345(v9561:0, v9562:0, v9563:0, v9564:0, v9565:0, v9566:0, v9567:0, 0, v10518:0, 8 + v10518:0, v10752:0, 1, v13288:0, v9569:0, 8 + v9569:0, v9571:0, v9575:0, v9576:0, v9576:0, 8 + v9576:0, v9577:0, v9581:0, v9578:0, v9582:0, v9579:0, v9583:0, v9584:0, v9585:0, v9586:0, v9587:0, v9588:0, v9589:0, 15 + v9576:0, 15 + v10518:0, v9591:0, v9592:0, v9593:0, v9594:0, v9580:0, v9596:0, v13286:0, v10754:0, 3, 7, 4, 8, 15, 9, 2, 16, v9590:0, v13287:0, 1 + v12221:0) :|: v13287:0 > 0 && v9576:0 > 0 && v9895:0 > v9562:0 && v9571:0 > 0 && v10518:0 > 0 && v9562:0 < v10754:0 && v10752:0 > 0 && v12221:0 > 0
f_2345(v12970:0, v12971:0, v12972:0, v12973:0, v12974:0, v12975:0, v12976:0, 0, v12980:0, 8 + v12980:0, v13011:0, 1, v13288:0, v12983:0, v12984:0, v12985:0, v12986:0, v12987:0, v12978:0, v12979:0, v12990:0, v12994:0, v12991:0, v12995:0, v12992:0, v12996:0, v12997:0, v12998:0, v12999:0, v13000:0, v13001:0, v13002:0, v13003:0, v13289:0, v13005:0, v13006:0, v13007:0, v13008:0, v12993:0, v13010:0, v13286:0, v12982:0, 3, 7, 4, 8, 15, 9, 2, 16, v13004:0, 1 + v13287:1, v13291:0) -> f_2345(v12970:0, v12971:0, v12972:0, v12973:0, v12974:0, v12975:0, v12976:0, 0, v13011:0, 8 + v13011:0, v13286:0, 1, v13288:1, v12983:0, v12984:0, v12985:0, v12986:0, v12987:0, v12980:0, 8 + v12980:0, v12990:0, v12994:0, v12991:0, v12995:0, v12992:0, v12996:0, v12997:0, v12998:0, v12999:0, v13000:0, v13001:0, v13002:0, v13289:0, 15 + v13011:0, v13005:0, v13006:0, v13007:0, v13008:0, v12993:0, v13010:0, v13286:1, v13288:0, 3, 7, 4, 8, 15, 9, 2, 16, v13004:0, v13287:1, 1 + v13291:0) :|: v13011:0 > 0 && v13287:1 > 0 && v13286:0 > 0 && v13288:0 < v12971:0 && v13291:0 > 0
f_2345(v12970:0, v12971:0, v12972:0, v12973:0, v12974:0, v12975:0, v12976:0, 0, v12980:0, 8 + v12980:0, v13011:0, 1, v13288:0, v12983:0, v12984:0, v12985:0, v12986:0, v12987:0, v12978:0, v12979:0, v12990:0, v12994:0, v12991:0, v12995:0, v12992:0, v12996:0, v12997:0, v12998:0, v12999:0, v13000:0, v13001:0, v13002:0, v13003:0, v13289:0, v13005:0, v13006:0, v13007:0, v13008:0, v12993:0, v13010:0, v13286:0, v12982:0, 3, 7, 4, 8, 15, 9, 2, 16, v13004:0, 1 + v13287:1, v13291:0) -> f_2345(v12970:0, v12971:0, v12972:0, v12973:0, v12974:0, v12975:0, v12976:0, 0, v13011:0, 8 + v13011:0, v13286:0, 1, v13288:1, v12983:0, v12984:0, v12985:0, v12986:0, v12987:0, v12980:0, 8 + v12980:0, v12990:0, v12994:0, v12991:0, v12995:0, v12992:0, v12996:0, v12997:0, v12998:0, v12999:0, v13000:0, v13001:0, v13002:0, v13289:0, 15 + v13011:0, v13005:0, v13006:0, v13007:0, v13008:0, v12993:0, v13010:0, v13286:1, v13288:0, 3, 7, 4, 8, 15, 9, 2, 16, v13004:0, v13287:1, 1 + v13291:0) :|: v13011:0 > 0 && v13287:1 > 0 && v13286:0 > 0 && v13288:0 > v12971:0 && v13291:0 > 0
f_2045(v9561:0, v9562:0, v9563:0, v9564:0, v9565:0, v9566:0, v9567:0, 0, v9569:0, 8 + v9569:0, v9571:0, 1, v9573:0, v9574:0, v9575:0, v9576:0, v9577:0, v9581:0, v9578:0, v9582:0, v9579:0, v9583:0, v9584:0, v9585:0, v9586:0, v9587:0, v9588:0, v9589:0, v9591:0, v9592:0, v9593:0, v9594:0, v9596:0, v9580:0, 3, 7, 4, 8, 15, 9, 2, 16, v9590:0, 1 + v10286:0) -> f_2045(v9561:0, v9562:0, v9563:0, v9564:0, v9565:0, v9566:0, v9567:0, 0, v9569:0, 8 + v9569:0, v9576:0, 1, v9573:0, v9574:0, 8 + v9576:0, v10285:0, v9577:0, v9581:0, v9578:0, v9582:0, v9579:0, v9583:0, v9584:0, v9585:0, v9586:0, v9587:0, v9588:0, v9589:0, v9591:0, v9592:0, v9593:0, v9594:0, v9596:0, v9580:0, 3, 7, 4, 8, 15, 9, 2, 16, v9590:0, v10286:0) :|: v10286:0 > 0 && v9576:0 > 0 && v9571:0 > 0
Filtered unneeded arguments:
   f_2345(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49, x50, x51, x52, x53) -> f_2345(x2, x9, x10, x11, x13, x41, x52, x53)
   f_2045(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44) -> f_2045(x2, x9, x10, x11, x16, x44)
Removed division, modulo operations, cleaned up constraints. Obtained 6 rules.P rules:
f_2345(v12971:0, v12980:0, sum~cons_8~v12980:0, v13011:0, v12971:01, v13286:0, v13287:0, v13291:0) -> f_2045(v12971:0, v12980:0, 8 + v12980:0, v13011:0, v13286:0, v13287:0) :|: v13011:0 > 0 && sum~cons_8~v12980:0 = 8 + v12980:0 && v12971:0 = v12971:01
f_2045(v10754:0, v9569:0, sum~cons_8~v9569:0, v9571:0, v9576:0, sum~cons_1~sum~cons_1~v10753:0) -> f_2045(v10754:0, v9576:0, 8 + v9576:0, v10518:0, v10752:0, v10753:0) :|: v9576:0 > 0 && v10753:0 > 0 && v10518:0 > 0 && v9571:0 > 0 && sum~cons_8~v9569:0 = 8 + v9569:0 && sum~cons_1~sum~cons_1~v10753:0 = 1 + (1 + v10753:0)
f_2045(v9562:0, v9569:0, sum~cons_8~v9569:0, v9571:0, v9576:0, sum~cons_1~sum~cons_1~sum~cons_1~v13287:0) -> f_2345(v9562:0, v10518:0, 8 + v10518:0, v10752:0, v13288:0, v13286:0, v13287:0, 1 + v12221:0) :|: v9576:0 > 0 && v13287:0 > 0 && v9571:0 > 0 && v10518:0 > 0 && v12221:0 > 0 && v10752:0 > 0 && sum~cons_8~v9569:0 = 8 + v9569:0 && sum~cons_1~sum~cons_1~sum~cons_1~v13287:0 = 1 + (1 + (1 + v13287:0))
f_2345(v12971:0, v12980:0, sum~cons_8~v12980:0, v13011:0, v13288:0, v13286:0, sum~cons_1~v13287:1, v13291:0) -> f_2345(v12971:0, v13011:0, 8 + v13011:0, v13286:0, v13288:1, v13286:1, v13287:1, 1 + v13291:0) :|: v13287:1 > 0 && v13011:0 > 0 && v13286:0 > 0 && v13291:0 > 0 && v13288:0 < v12971:0 && sum~cons_8~v12980:0 = 8 + v12980:0 && sum~cons_1~v13287:1 = 1 + v13287:1
f_2345(v12971:0, v12980:0, sum~cons_8~v12980:0, v13011:0, v13288:0, v13286:0, sum~cons_1~v13287:1, v13291:0) -> f_2345(v12971:0, v13011:0, 8 + v13011:0, v13286:0, v13288:1, v13286:1, v13287:1, 1 + v13291:0) :|: v13287:1 > 0 && v13011:0 > 0 && v13286:0 > 0 && v13291:0 > 0 && v13288:0 > v12971:0 && sum~cons_8~v12980:0 = 8 + v12980:0 && sum~cons_1~v13287:1 = 1 + v13287:1
f_2045(v9562:0, v9569:0, sum~cons_8~v9569:0, v9571:0, v9576:0, sum~cons_1~v10286:0) -> f_2045(v9562:0, v9569:0, 8 + v9569:0, v9576:0, v10285:0, v10286:0) :|: v9576:0 > 0 && v9571:0 > 0 && v10286:0 > 0 && sum~cons_8~v9569:0 = 8 + v9569:0 && sum~cons_1~v10286:0 = 1 + v10286:0

----------------------------------------

(9)
Obligation:
Rules:
f_2345(v12971:0, v12980:0, sum~cons_8~v12980:0, v13011:0, v12971:01, v13286:0, v13287:0, v13291:0) -> f_2045(v12971:0, v12980:0, 8 + v12980:0, v13011:0, v13286:0, v13287:0) :|: v13011:0 > 0 && sum~cons_8~v12980:0 = 8 + v12980:0 && v12971:0 = v12971:01
f_2045(v10754:0, v9569:0, sum~cons_8~v9569:0, v9571:0, v9576:0, sum~cons_1~sum~cons_1~v10753:0) -> f_2045(v10754:0, v9576:0, 8 + v9576:0, v10518:0, v10752:0, v10753:0) :|: v9576:0 > 0 && v10753:0 > 0 && v10518:0 > 0 && v9571:0 > 0 && sum~cons_8~v9569:0 = 8 + v9569:0 && sum~cons_1~sum~cons_1~v10753:0 = 1 + (1 + v10753:0)
f_2045(x, x1, x2, x3, x4, x5) -> f_2345(x, x6, 8 + x6, x7, x8, x9, x10, 1 + x11) :|: x4 > 0 && x10 > 0 && x3 > 0 && x6 > 0 && x11 > 0 && x7 > 0 && x2 = 8 + x1 && x5 = 1 + (1 + (1 + x10))
f_2345(x12, x13, x14, x15, x16, x17, x18, x19) -> f_2345(x12, x15, 8 + x15, x17, x20, x21, x22, 1 + x19) :|: x22 > 0 && x15 > 0 && x17 > 0 && x19 > 0 && x16 < x12 && x14 = 8 + x13 && x18 = 1 + x22
f_2345(x23, x24, x25, x26, x27, x28, x29, x30) -> f_2345(x23, x26, 8 + x26, x28, x31, x32, x33, 1 + x30) :|: x33 > 0 && x26 > 0 && x28 > 0 && x30 > 0 && x27 > x23 && x25 = 8 + x24 && x29 = 1 + x33
f_2045(x34, x35, x36, x37, x38, x39) -> f_2045(x34, x35, 8 + x35, x38, x40, x41) :|: x38 > 0 && x37 > 0 && x41 > 0 && x36 = 8 + x35 && x39 = 1 + x41

----------------------------------------

(10) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(11)
Obligation:
Rules:
f_2045(x:0, x1:0, sum~cons_8~x1:0, x3:0, x4:0, sum~cons_1~sum~cons_1~sum~cons_1~x10:0) -> f_2345(x:0, x6:0, 8 + x6:0, x7:0, x8:0, x9:0, x10:0, 1 + x11:0) :|: x11:0 > 0 && x7:0 > 0 && x6:0 > 0 && x3:0 > 0 && x10:0 > 0 && x4:0 > 0 && sum~cons_8~x1:0 = 8 + x1:0 && sum~cons_1~sum~cons_1~sum~cons_1~x10:0 = 1 + (1 + (1 + x10:0))
f_2045(x34:0, x35:0, sum~cons_8~x35:0, x37:0, x38:0, sum~cons_1~x41:0) -> f_2045(x34:0, x35:0, 8 + x35:0, x38:0, x40:0, x41:0) :|: x38:0 > 0 && x37:0 > 0 && x41:0 > 0 && sum~cons_8~x35:0 = 8 + x35:0 && sum~cons_1~x41:0 = 1 + x41:0
f_2345(x12:0, x13:0, sum~cons_8~x13:0, x15:0, x16:0, x17:0, sum~cons_1~x22:0, x19:0) -> f_2345(x12:0, x15:0, 8 + x15:0, x17:0, x20:0, x21:0, x22:0, 1 + x19:0) :|: x19:0 > 0 && x16:0 < x12:0 && x17:0 > 0 && x15:0 > 0 && x22:0 > 0 && sum~cons_8~x13:0 = 8 + x13:0 && sum~cons_1~x22:0 = 1 + x22:0
f_2345(v12971:01:0, v12980:0:0, sum~cons_8~v12980:0:0, v13011:0:0, v12971:01:01, v13286:0:0, v13287:0:0, v13291:0:0) -> f_2045(v12971:01:0, v12980:0:0, 8 + v12980:0:0, v13011:0:0, v13286:0:0, v13287:0:0) :|: v13011:0:0 > 0 && sum~cons_8~v12980:0:0 = 8 + v12980:0:0 && v12971:01:0 = v12971:01:01
f_2345(x23:0, x24:0, sum~cons_8~x24:0, x26:0, x27:0, x28:0, sum~cons_1~x33:0, x30:0) -> f_2345(x23:0, x26:0, 8 + x26:0, x28:0, x31:0, x32:0, x33:0, 1 + x30:0) :|: x30:0 > 0 && x27:0 > x23:0 && x28:0 > 0 && x26:0 > 0 && x33:0 > 0 && sum~cons_8~x24:0 = 8 + x24:0 && sum~cons_1~x33:0 = 1 + x33:0
f_2045(v10754:0:0, v9569:0:0, sum~cons_8~v9569:0:0, v9571:0:0, v9576:0:0, sum~cons_1~sum~cons_1~v10753:0:0) -> f_2045(v10754:0:0, v9576:0:0, 8 + v9576:0:0, v10518:0:0, v10752:0:0, v10753:0:0) :|: v10518:0:0 > 0 && v9571:0:0 > 0 && v10753:0:0 > 0 && v9576:0:0 > 0 && sum~cons_8~v9569:0:0 = 8 + v9569:0:0 && sum~cons_1~sum~cons_1~v10753:0:0 = 1 + (1 + v10753:0:0)

----------------------------------------

(12) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_2045(x, x1, x2, x3, x4, x5)] = 6 + x1 - x2 + x5
[f_2345(x6, x7, x8, x9, x10, x11, x12, x13)] = 1 + x12

The following rules are decreasing:
f_2045(x34:0, x35:0, sum~cons_8~x35:0, x37:0, x38:0, sum~cons_1~x41:0) -> f_2045(x34:0, x35:0, 8 + x35:0, x38:0, x40:0, x41:0) :|: x38:0 > 0 && x37:0 > 0 && x41:0 > 0 && sum~cons_8~x35:0 = 8 + x35:0 && sum~cons_1~x41:0 = 1 + x41:0
f_2345(x12:0, x13:0, sum~cons_8~x13:0, x15:0, x16:0, x17:0, sum~cons_1~x22:0, x19:0) -> f_2345(x12:0, x15:0, 8 + x15:0, x17:0, x20:0, x21:0, x22:0, 1 + x19:0) :|: x19:0 > 0 && x16:0 < x12:0 && x17:0 > 0 && x15:0 > 0 && x22:0 > 0 && sum~cons_8~x13:0 = 8 + x13:0 && sum~cons_1~x22:0 = 1 + x22:0
f_2345(v12971:01:0, v12980:0:0, sum~cons_8~v12980:0:0, v13011:0:0, v12971:01:01, v13286:0:0, v13287:0:0, v13291:0:0) -> f_2045(v12971:01:0, v12980:0:0, 8 + v12980:0:0, v13011:0:0, v13286:0:0, v13287:0:0) :|: v13011:0:0 > 0 && sum~cons_8~v12980:0:0 = 8 + v12980:0:0 && v12971:01:0 = v12971:01:01
f_2345(x23:0, x24:0, sum~cons_8~x24:0, x26:0, x27:0, x28:0, sum~cons_1~x33:0, x30:0) -> f_2345(x23:0, x26:0, 8 + x26:0, x28:0, x31:0, x32:0, x33:0, 1 + x30:0) :|: x30:0 > 0 && x27:0 > x23:0 && x28:0 > 0 && x26:0 > 0 && x33:0 > 0 && sum~cons_8~x24:0 = 8 + x24:0 && sum~cons_1~x33:0 = 1 + x33:0
f_2045(v10754:0:0, v9569:0:0, sum~cons_8~v9569:0:0, v9571:0:0, v9576:0:0, sum~cons_1~sum~cons_1~v10753:0:0) -> f_2045(v10754:0:0, v9576:0:0, 8 + v9576:0:0, v10518:0:0, v10752:0:0, v10753:0:0) :|: v10518:0:0 > 0 && v9571:0:0 > 0 && v10753:0:0 > 0 && v9576:0:0 > 0 && sum~cons_8~v9569:0:0 = 8 + v9569:0:0 && sum~cons_1~sum~cons_1~v10753:0:0 = 1 + (1 + v10753:0:0)
The following rules are bounded:
f_2045(x:0, x1:0, sum~cons_8~x1:0, x3:0, x4:0, sum~cons_1~sum~cons_1~sum~cons_1~x10:0) -> f_2345(x:0, x6:0, 8 + x6:0, x7:0, x8:0, x9:0, x10:0, 1 + x11:0) :|: x11:0 > 0 && x7:0 > 0 && x6:0 > 0 && x3:0 > 0 && x10:0 > 0 && x4:0 > 0 && sum~cons_8~x1:0 = 8 + x1:0 && sum~cons_1~sum~cons_1~sum~cons_1~x10:0 = 1 + (1 + (1 + x10:0))
f_2045(x34:0, x35:0, sum~cons_8~x35:0, x37:0, x38:0, sum~cons_1~x41:0) -> f_2045(x34:0, x35:0, 8 + x35:0, x38:0, x40:0, x41:0) :|: x38:0 > 0 && x37:0 > 0 && x41:0 > 0 && sum~cons_8~x35:0 = 8 + x35:0 && sum~cons_1~x41:0 = 1 + x41:0
f_2345(x12:0, x13:0, sum~cons_8~x13:0, x15:0, x16:0, x17:0, sum~cons_1~x22:0, x19:0) -> f_2345(x12:0, x15:0, 8 + x15:0, x17:0, x20:0, x21:0, x22:0, 1 + x19:0) :|: x19:0 > 0 && x16:0 < x12:0 && x17:0 > 0 && x15:0 > 0 && x22:0 > 0 && sum~cons_8~x13:0 = 8 + x13:0 && sum~cons_1~x22:0 = 1 + x22:0
f_2345(x23:0, x24:0, sum~cons_8~x24:0, x26:0, x27:0, x28:0, sum~cons_1~x33:0, x30:0) -> f_2345(x23:0, x26:0, 8 + x26:0, x28:0, x31:0, x32:0, x33:0, 1 + x30:0) :|: x30:0 > 0 && x27:0 > x23:0 && x28:0 > 0 && x26:0 > 0 && x33:0 > 0 && sum~cons_8~x24:0 = 8 + x24:0 && sum~cons_1~x33:0 = 1 + x33:0
f_2045(v10754:0:0, v9569:0:0, sum~cons_8~v9569:0:0, v9571:0:0, v9576:0:0, sum~cons_1~sum~cons_1~v10753:0:0) -> f_2045(v10754:0:0, v9576:0:0, 8 + v9576:0:0, v10518:0:0, v10752:0:0, v10753:0:0) :|: v10518:0:0 > 0 && v9571:0:0 > 0 && v10753:0:0 > 0 && v9576:0:0 > 0 && sum~cons_8~v9569:0:0 = 8 + v9569:0:0 && sum~cons_1~sum~cons_1~v10753:0:0 = 1 + (1 + v10753:0:0)

----------------------------------------

(13)
Complex Obligation (AND)

----------------------------------------

(14)
Obligation:
Rules:
f_2045(x:0, x1:0, sum~cons_8~x1:0, x3:0, x4:0, sum~cons_1~sum~cons_1~sum~cons_1~x10:0) -> f_2345(x:0, x6:0, 8 + x6:0, x7:0, x8:0, x9:0, x10:0, 1 + x11:0) :|: x11:0 > 0 && x7:0 > 0 && x6:0 > 0 && x3:0 > 0 && x10:0 > 0 && x4:0 > 0 && sum~cons_8~x1:0 = 8 + x1:0 && sum~cons_1~sum~cons_1~sum~cons_1~x10:0 = 1 + (1 + (1 + x10:0))

----------------------------------------

(15) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained no non-trivial SCC(s).

----------------------------------------

(16)
YES

----------------------------------------

(17)
Obligation:
Rules:
f_2345(v12971:01:0, v12980:0:0, sum~cons_8~v12980:0:0, v13011:0:0, v12971:01:01, v13286:0:0, v13287:0:0, v13291:0:0) -> f_2045(v12971:01:0, v12980:0:0, 8 + v12980:0:0, v13011:0:0, v13286:0:0, v13287:0:0) :|: v13011:0:0 > 0 && sum~cons_8~v12980:0:0 = 8 + v12980:0:0 && v12971:01:0 = v12971:01:01

----------------------------------------

(18) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained no non-trivial SCC(s).

----------------------------------------

(19)
YES

----------------------------------------

(20)
Obligation:
SCC
----------------------------------------

(21) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 22 rulesP rules:
f_1850(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7697, v7698, v7699, 1, v7701, v7702, v7703, v7704, v7705, v7707, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7722, v7723, v7724, v7726, v7727, v7729, v7711, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v7725, v7728) -> f_1853(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7697, v7698, v7699, 1, v7701, v7702, v7703, v7704, v7705, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7722, v7723, v7724, v7726, v7727, v7729, v7707, v7711, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v7725, v7728) :|: v7698 = 8 + v7697
f_1853(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7697, v7698, v7699, 1, v7701, v7702, v7703, v7704, v7705, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7722, v7723, v7724, v7726, v7727, v7729, v7707, v7711, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v7725, v7728) -> f_1856(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7697, v7698, v7699, 1, v7701, v7702, v7703, v7704, v7705, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7722, v7723, v7724, v7726, v7727, v7729, v7707, v7711, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v7725, v7728) :|: 0 = 0
f_1856(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7697, v7698, v7699, 1, v7701, v7702, v7703, v7704, v7705, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7722, v7723, v7724, v7726, v7727, v7729, v7707, v7711, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v7725, v7728) -> f_1860(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7697, v7698, v7699, 1, v7701, v7702, v7703, v7704, v7705, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7722, v7723, v7724, v7726, v7727, v7729, v7711, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v7725, v7728) :|: TRUE
f_1860(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7697, v7698, v7699, 1, v7701, v7702, v7703, v7704, v7705, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7722, v7723, v7724, v7726, v7727, v7729, v7711, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v7725, v7728) -> f_1864(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7697, v7698, v7699, 1, v7701, v7702, v7703, v7704, v7705, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7722, v7723, v7724, v7726, v7727, v7729, v7711, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v7725, v7728) :|: TRUE
f_1864(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7697, v7698, v7699, 1, v7701, v7702, v7703, v7704, v7705, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7722, v7723, v7724, v7726, v7727, v7729, v7711, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v7725, v7728) -> f_1869(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7697, v7698, v7699, 1, v7701, v7702, v7703, v7704, v7705, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7722, v7723, v7724, v7726, v7727, v7729, v7711, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v7725, v7728) :|: TRUE
f_1869(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7697, v7698, v7699, 1, v7701, v7702, v7703, v7704, v7705, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7722, v7723, v7724, v7726, v7727, v7729, v7711, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v7725, v7728) -> f_1874(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7699, v7698, 1, v7697, v7701, v7702, v7703, v7704, v7705, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7722, v7723, v7724, v7726, v7727, v7729, v7711, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v7725, v7728) :|: 0 = 0
f_1874(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7699, v7698, 1, v7697, v7701, v7702, v7703, v7704, v7705, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7722, v7723, v7724, v7726, v7727, v7729, v7711, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v7725, v7728) -> f_1891(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7699, v7972, 1, v7697, v7698, v7701, v7702, v7703, v7704, v7705, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7722, v7723, v7724, v7726, v7727, v7729, v7711, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v7725, v7728) :|: v7972 = 8 + v7699 && 9 <= v7972
f_1891(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7699, v7972, 1, v7697, v7698, v7701, v7702, v7703, v7704, v7705, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7722, v7723, v7724, v7726, v7727, v7729, v7711, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v7725, v7728) -> f_1896(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7699, v7972, v7727, 1, v7697, v7698, v7701, v7702, v7703, v7704, v7705, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7722, v7723, v7724, v7726, v7729, v7711, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v7725, v7728) :|: 0 = 0
f_1896(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7699, v7972, v7727, 1, v7697, v7698, v7701, v7702, v7703, v7704, v7705, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7722, v7723, v7724, v7726, v7729, v7711, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v7725, v7728) -> f_1901(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7699, v7972, v7727, 1, v7697, v7698, v7701, v7702, v7703, v7704, v7705, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7722, v7723, v7724, v7726, v7729, v7711, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v7725, v7728) :|: 0 < v7727 && 2 <= v7725
f_1901(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7699, v7972, v7727, 1, v7697, v7698, v7701, v7702, v7703, v7704, v7705, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7722, v7723, v7724, v7726, v7729, v7711, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v7725, v7728) -> f_1907(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7699, v7972, v7727, 1, v7697, v7698, v7701, v7702, v7703, v7704, v7705, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7722, v7723, v7724, v7726, v7729, v7711, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v7725, v7728) :|: 0 = 0
f_1907(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7699, v7972, v7727, 1, v7697, v7698, v7701, v7702, v7703, v7704, v7705, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7722, v7723, v7724, v7726, v7729, v7711, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v7725, v7728) -> f_1912(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7699, v7972, v7727, 1, v7697, v7698, v7701, v7702, v7703, v7704, v7705, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7722, v7723, v7724, v7726, v7729, v7711, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v7725, v7728) :|: TRUE
f_1912(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7699, v7972, v7727, 1, v7697, v7698, v7701, v7702, v7703, v7704, v7705, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7722, v7723, v7724, v7726, v7729, v7711, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v7725, v7728) -> f_1917(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7699, v7972, v7727, 1, v7698, v7701, v7702, v7703, v7704, v7705, v7697, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7722, v7723, v7724, v7726, v7729, v7711, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v7725, v7728) :|: 0 = 0
f_1917(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7699, v7972, v7727, 1, v7698, v7701, v7702, v7703, v7704, v7705, v7697, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7722, v7723, v7724, v7726, v7729, v7711, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v7725, v7728) -> f_1928(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7699, v7972, v7727, 1, v7701, v7702, v7703, v7704, v7705, v7697, v7698, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v8316, v7722, v7723, v7724, v7711, v8315, v7726, v8313, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v8314, v8318) :|: v7972 = 8 + v7699 && v8317 = 1 + v7721 && 1 + v8314 = v7725 && v8318 = 1 + v7728 && v8316 = 15 + v7699 && 16 <= v8316 && 1 <= v8314 && 2 <= v8318
f_1928(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7699, v7972, v7727, 1, v7701, v7702, v7703, v7704, v7705, v7697, v7698, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v8316, v7722, v7723, v7724, v7711, v8315, v7726, v8313, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v8314, v8318) -> f_1933(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7699, v7972, v7727, 1, v7701, v7702, v7703, v7704, v7705, v7697, v7698, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v8316, v7722, v7723, v7724, v7711, v8315, v7726, v8313, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v8314, v8318) :|: 0 = 0
f_1933(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7699, v7972, v7727, 1, v7701, v7702, v7703, v7704, v7705, v7697, v7698, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v8316, v7722, v7723, v7724, v7711, v8315, v7726, v8313, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v8314, v8318) -> f_1938(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7699, v7972, v7727, 1, v7701, v7702, v7703, v7704, v7705, v7697, v7698, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v8316, v7722, v7723, v7724, v7711, v8315, v7726, v8313, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v8314, v8318) :|: 0 = 0
f_1938(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7699, v7972, v7727, 1, v7701, v7702, v7703, v7704, v7705, v7697, v7698, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v8316, v7722, v7723, v7724, v7711, v8315, v7726, v8313, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v8314, v8318) -> f_1942(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7699, v7972, v7727, 1, v8315, v7702, v7703, v7704, v7705, v7697, v7698, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v8316, v7722, v7723, v7724, v7711, v7726, v8313, v7701, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v8314, v8318) :|: 0 = 0
f_1942(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7699, v7972, v7727, 1, v8315, v7702, v7703, v7704, v7705, v7697, v7698, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v8316, v7722, v7723, v7724, v7711, v7726, v8313, v7701, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v8314, v8318) -> f_1947(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7699, v7972, v7727, 1, v8315, v7702, v7703, v7704, v7705, v7697, v7698, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v8316, v7722, v7723, v7724, v7711, v7726, v8313, v7701, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v8314, v8318) :|: 0 = 0
f_1947(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7699, v7972, v7727, 1, v8315, v7702, v7703, v7704, v7705, v7697, v7698, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v8316, v7722, v7723, v7724, v7711, v7726, v8313, v7701, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v8314, v8318) -> f_1953(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7699, v7972, v7727, 1, v8315, v7702, v7703, v7704, v7705, v7697, v7698, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v8316, v7722, v7723, v7724, v7711, v7726, v8313, v7701, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v8314, v8318) :|: v8315 != v7690
f_1953(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7699, v7972, v7727, 1, v8315, v7702, v7703, v7704, v7705, v7697, v7698, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v8316, v7722, v7723, v7724, v7711, v7726, v8313, v7701, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v8314, v8318) -> f_1959(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7699, v7972, v7727, 1, v8315, v7702, v7703, v7704, v7705, v7697, v7698, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v8316, v7722, v7723, v7724, v7711, v7726, v8313, v7701, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v8314, v8318) :|: 0 = 0
f_1959(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7699, v7972, v7727, 1, v8315, v7702, v7703, v7704, v7705, v7697, v7698, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v8316, v7722, v7723, v7724, v7711, v7726, v8313, v7701, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v8314, v8318) -> f_1965(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7699, v7972, v7727, 1, v8315, v7702, v7703, v7704, v7705, v7697, v7698, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v8316, v7722, v7723, v7724, v7711, v7726, v8313, v7701, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v8314, v8318) :|: TRUE
f_1965(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7699, v7972, v7727, 1, v8315, v7702, v7703, v7704, v7705, v7697, v7698, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v8316, v7722, v7723, v7724, v7711, v7726, v8313, v7701, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v8314, v8318) -> f_1847(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7699, v7972, v7727, 1, v8315, v7702, v7703, v7704, v7705, v7697, v7698, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v8316, v7722, v7723, v7724, v7726, v8313, v7701, v7711, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v8314, v8318) :|: TRUE
f_1847(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7697, v7698, v7699, 1, v7701, v7702, v7703, v7704, v7705, v7706, v7707, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7722, v7723, v7724, v7726, v7727, v7729, v7711, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v7725, v7728) -> f_1850(v7689, v7690, v7691, v7692, v7693, v7694, v7695, 0, v7697, v7698, v7699, 1, v7701, v7702, v7703, v7704, v7705, v7707, v7708, v7712, v7709, v7713, v7710, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7722, v7723, v7724, v7726, v7727, v7729, v7711, 3, 7, 4, 8, 15, 9, 2, 16, v7721, v7725, v7728) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_1850(v7689:0, v7690:0, v7691:0, v7692:0, v7693:0, v7694:0, v7695:0, 0, v7697:0, 8 + v7697:0, v7699:0, 1, v7701:0, v7702:0, v7703:0, v7704:0, v7705:0, v7707:0, v7708:0, v7712:0, v7709:0, v7713:0, v7710:0, v7714:0, v7715:0, v7716:0, v7717:0, v7718:0, v7719:0, v7720:0, v7722:0, v7723:0, v7724:0, v7726:0, v7727:0, v7729:0, v7711:0, 3, 7, 4, 8, 15, 9, 2, 16, v7721:0, 1 + v8314:0, v7728:0) -> f_1850(v7689:0, v7690:0, v7691:0, v7692:0, v7693:0, v7694:0, v7695:0, 0, v7699:0, 8 + v7699:0, v7727:0, 1, v8315:0, v7702:0, v7703:0, v7704:0, v7705:0, 8 + v7697:0, v7708:0, v7712:0, v7709:0, v7713:0, v7710:0, v7714:0, v7715:0, v7716:0, v7717:0, v7718:0, v7719:0, 15 + v7699:0, v7722:0, v7723:0, v7724:0, v7726:0, v8313:0, v7701:0, v7711:0, 3, 7, 4, 8, 15, 9, 2, 16, v7721:0, v8314:0, 1 + v7728:0) :|: v7699:0 > 0 && v8314:0 > 0 && v7727:0 > 0 && v8315:0 < v7690:0 && v7728:0 > 0
f_1850(v7689:0, v7690:0, v7691:0, v7692:0, v7693:0, v7694:0, v7695:0, 0, v7697:0, 8 + v7697:0, v7699:0, 1, v7701:0, v7702:0, v7703:0, v7704:0, v7705:0, v7707:0, v7708:0, v7712:0, v7709:0, v7713:0, v7710:0, v7714:0, v7715:0, v7716:0, v7717:0, v7718:0, v7719:0, v7720:0, v7722:0, v7723:0, v7724:0, v7726:0, v7727:0, v7729:0, v7711:0, 3, 7, 4, 8, 15, 9, 2, 16, v7721:0, 1 + v8314:0, v7728:0) -> f_1850(v7689:0, v7690:0, v7691:0, v7692:0, v7693:0, v7694:0, v7695:0, 0, v7699:0, 8 + v7699:0, v7727:0, 1, v8315:0, v7702:0, v7703:0, v7704:0, v7705:0, 8 + v7697:0, v7708:0, v7712:0, v7709:0, v7713:0, v7710:0, v7714:0, v7715:0, v7716:0, v7717:0, v7718:0, v7719:0, 15 + v7699:0, v7722:0, v7723:0, v7724:0, v7726:0, v8313:0, v7701:0, v7711:0, 3, 7, 4, 8, 15, 9, 2, 16, v7721:0, v8314:0, 1 + v7728:0) :|: v7699:0 > 0 && v8314:0 > 0 && v7727:0 > 0 && v8315:0 > v7690:0 && v7728:0 > 0
Filtered unneeded arguments:
   f_1850(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48) -> f_1850(x2, x9, x10, x11, x35, x47, x48)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1850(v7690:0, v7697:0, sum~cons_8~v7697:0, v7699:0, v7727:0, sum~cons_1~v8314:0, v7728:0) -> f_1850(v7690:0, v7699:0, 8 + v7699:0, v7727:0, v8313:0, v8314:0, 1 + v7728:0) :|: v8314:0 > 0 && v7699:0 > 0 && v7728:0 > 0 && v7727:0 > 0 && sum~cons_8~v7697:0 = 8 + v7697:0 && sum~cons_1~v8314:0 = 1 + v8314:0

----------------------------------------

(22)
Obligation:
Rules:
f_1850(v7690:0, v7697:0, sum~cons_8~v7697:0, v7699:0, v7727:0, sum~cons_1~v8314:0, v7728:0) -> f_1850(v7690:0, v7699:0, 8 + v7699:0, v7727:0, v8313:0, v8314:0, 1 + v7728:0) :|: v8314:0 > 0 && v7699:0 > 0 && v7728:0 > 0 && v7727:0 > 0 && sum~cons_8~v7697:0 = 8 + v7697:0 && sum~cons_1~v8314:0 = 1 + v8314:0

----------------------------------------

(23) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(24)
Obligation:
Rules:
f_1850(v7690:0:0, v7697:0:0, sum~cons_8~v7697:0:0, v7699:0:0, v7727:0:0, sum~cons_1~v8314:0:0, v7728:0:0) -> f_1850(v7690:0:0, v7699:0:0, 8 + v7699:0:0, v7727:0:0, v8313:0:0, v8314:0:0, 1 + v7728:0:0) :|: v7728:0:0 > 0 && v7727:0:0 > 0 && v7699:0:0 > 0 && v8314:0:0 > 0 && sum~cons_8~v7697:0:0 = 8 + v7697:0:0 && sum~cons_1~v8314:0:0 = 1 + v8314:0:0

----------------------------------------

(25) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1850(x1, x2, x3, x4, x5, x6, x7) -> f_1850(x2, x3, x4, x5, x6, x7)

----------------------------------------

(26)
Obligation:
Rules:
f_1850(v7697:0:0, sum~cons_8~v7697:0:0, v7699:0:0, v7727:0:0, sum~cons_1~v8314:0:0, v7728:0:0) -> f_1850(v7699:0:0, 8 + v7699:0:0, v7727:0:0, v8313:0:0, v8314:0:0, 1 + v7728:0:0) :|: v7728:0:0 > 0 && v7727:0:0 > 0 && v7699:0:0 > 0 && v8314:0:0 > 0 && sum~cons_8~v7697:0:0 = 8 + v7697:0:0 && sum~cons_1~v8314:0:0 = 1 + v8314:0:0

----------------------------------------

(27) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1850(x, x1, x2, x3, x4, x5)] = -2 + x4

The following rules are decreasing:
f_1850(v7697:0:0, sum~cons_8~v7697:0:0, v7699:0:0, v7727:0:0, sum~cons_1~v8314:0:0, v7728:0:0) -> f_1850(v7699:0:0, 8 + v7699:0:0, v7727:0:0, v8313:0:0, v8314:0:0, 1 + v7728:0:0) :|: v7728:0:0 > 0 && v7727:0:0 > 0 && v7699:0:0 > 0 && v8314:0:0 > 0 && sum~cons_8~v7697:0:0 = 8 + v7697:0:0 && sum~cons_1~v8314:0:0 = 1 + v8314:0:0
The following rules are bounded:
f_1850(v7697:0:0, sum~cons_8~v7697:0:0, v7699:0:0, v7727:0:0, sum~cons_1~v8314:0:0, v7728:0:0) -> f_1850(v7699:0:0, 8 + v7699:0:0, v7727:0:0, v8313:0:0, v8314:0:0, 1 + v7728:0:0) :|: v7728:0:0 > 0 && v7727:0:0 > 0 && v7699:0:0 > 0 && v8314:0:0 > 0 && sum~cons_8~v7697:0:0 = 8 + v7697:0:0 && sum~cons_1~v8314:0:0 = 1 + v8314:0:0

----------------------------------------

(28)
YES

----------------------------------------

(29)
Obligation:
SCC
----------------------------------------

(30) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 26 rulesP rules:
f_1153(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1177, 1, v1179, v1180, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) -> f_1157(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1177, 1, v1179, v1180, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) :|: 0 = 0
f_1157(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1177, 1, v1179, v1180, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) -> f_1162(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1177, 1, v1179, v1180, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) :|: v1176 = 8 + v1174
f_1162(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1177, 1, v1179, v1180, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) -> f_1167(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1177, v1179, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) :|: 0 = 0
f_1167(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1177, v1179, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) -> f_1178(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1177, v1179, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) :|: 0 < v1180 && 2 <= v1195
f_1178(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1177, v1179, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) -> f_1184(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1177, v1179, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) :|: 0 = 0
f_1184(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1177, v1179, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) -> f_1190(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1177, v1179, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) :|: TRUE
f_1190(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1177, v1179, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) -> f_1196(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1177, v1179, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) :|: 0 = 0
f_1196(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1177, v1179, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) -> f_1207(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1177, v1179, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) :|: v1176 = 8 + v1174
f_1207(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1177, v1179, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) -> f_1212(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1177, v1179, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) :|: 0 = 0
f_1212(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1177, v1179, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) -> f_1217(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1177, v1179, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) :|: 0 = 0
f_1217(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1177, v1179, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) -> f_1221(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1363, v1177, v1179, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) :|: TRUE
f_1221(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1363, v1177, v1179, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) -> f_1226(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1363, v1177, v1179, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) :|: 0 = 0
f_1226(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1363, v1177, v1179, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) -> f_1230(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1177, v1179, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) :|: v1363 = v1169
f_1230(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1177, v1179, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) -> f_1235(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1177, v1179, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) :|: 0 = 0
f_1235(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1177, v1179, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) -> f_1240(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1177, v1179, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) :|: TRUE
f_1240(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1177, v1179, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) -> f_1245(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1177, v1179, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) :|: 0 = 0
f_1245(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1177, v1179, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) -> f_1250(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1177, v1179, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) :|: v1176 = 8 + v1174
f_1250(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1177, v1179, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) -> f_1256(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1179, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1177, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) :|: 0 = 0
f_1256(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1179, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1177, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) -> f_1262(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1576, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1177, v1580, v1194, v1184, v1196, v1577, v1179, 3, 7, 4, 8, 15, 9, 2, 16, v1578) :|: v1576 = 8 + v1180 && v1580 = 15 + v1177 && v1579 = 1 + v1578 && 1 + v1578 = v1195 && 9 <= v1576 && 16 <= v1580 && 1 <= v1578
f_1262(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1576, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1177, v1580, v1194, v1184, v1196, v1577, v1179, 3, 7, 4, 8, 15, 9, 2, 16, v1578) -> f_1267(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1576, v1577, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1177, v1580, v1194, v1184, v1196, v1179, 3, 7, 4, 8, 15, 9, 2, 16, v1578) :|: 0 = 0
f_1267(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1576, v1577, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1177, v1580, v1194, v1184, v1196, v1179, 3, 7, 4, 8, 15, 9, 2, 16, v1578) -> f_1272(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1576, v1577, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1177, v1580, v1194, v1184, v1196, v1179, 3, 7, 4, 8, 15, 9, 2, 16, v1578) :|: 0 = 0
f_1272(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1576, v1577, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1177, v1580, v1194, v1184, v1196, v1179, 3, 7, 4, 8, 15, 9, 2, 16, v1578) -> f_1277(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1576, v1577, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1177, v1580, v1194, v1184, v1196, v1179, 3, 7, 4, 8, 15, 9, 2, 16, v1578) :|: v1176 = 8 + v1174
f_1277(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1576, v1577, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1177, v1580, v1194, v1184, v1196, v1179, 3, 7, 4, 8, 15, 9, 2, 16, v1578) -> f_1282(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1576, v1577, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1177, v1580, v1194, v1184, v1196, v1179, 3, 7, 4, 8, 15, 9, 2, 16, v1578) :|: TRUE
f_1282(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1576, v1577, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1177, v1580, v1194, v1184, v1196, v1179, 3, 7, 4, 8, 15, 9, 2, 16, v1578) -> f_1287(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1576, v1577, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1177, v1580, v1194, v1184, v1196, v1179, 3, 7, 4, 8, 15, 9, 2, 16, v1578) :|: TRUE
f_1287(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1576, v1577, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1177, v1580, v1194, v1184, v1196, v1179, 3, 7, 4, 8, 15, 9, 2, 16, v1578) -> f_1149(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1180, 1, v1576, v1577, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1578) :|: TRUE
f_1149(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1177, 1, v1179, v1180, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) -> f_1153(v1168, v1169, v1170, v1171, v1172, v1173, v1174, 0, v1176, v1177, 1, v1179, v1180, v1181, v1185, v1182, v1186, v1183, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1196, v1184, 3, 7, 4, 8, 15, 9, 2, 16, v1195) :|: TRUE
Combined rules. Obtained 1 rulesP rules:
f_1153(v1168:0, v1169:0, v1170:0, v1171:0, v1172:0, v1173:0, v1174:0, 0, 8 + v1174:0, v1177:0, 1, v1179:0, v1180:0, v1181:0, v1185:0, v1182:0, v1186:0, v1183:0, v1187:0, v1188:0, v1189:0, v1190:0, v1191:0, v1192:0, v1193:0, v1194:0, v1196:0, v1184:0, 3, 7, 4, 8, 15, 9, 2, 16, 1 + v1578:0) -> f_1153(v1168:0, v1169:0, v1170:0, v1171:0, v1172:0, v1173:0, v1174:0, 0, 8 + v1174:0, v1180:0, 1, 8 + v1180:0, v1577:0, v1181:0, v1185:0, v1182:0, v1186:0, v1183:0, v1187:0, v1188:0, v1189:0, v1190:0, v1191:0, v1192:0, v1193:0, v1194:0, v1196:0, v1184:0, 3, 7, 4, 8, 15, 9, 2, 16, v1578:0) :|: v1578:0 > 0 && v1180:0 > 0 && v1177:0 > 0
Filtered unneeded arguments:
   f_1153(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37) -> f_1153(x7, x9, x10, x13, x37)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1153(v1174:0, sum~cons_8~v1174:0, v1177:0, v1180:0, sum~cons_1~v1578:0) -> f_1153(v1174:0, 8 + v1174:0, v1180:0, v1577:0, v1578:0) :|: v1180:0 > 0 && v1177:0 > 0 && v1578:0 > 0 && sum~cons_8~v1174:0 = 8 + v1174:0 && sum~cons_1~v1578:0 = 1 + v1578:0

----------------------------------------

(31)
Obligation:
Rules:
f_1153(v1174:0, sum~cons_8~v1174:0, v1177:0, v1180:0, sum~cons_1~v1578:0) -> f_1153(v1174:0, 8 + v1174:0, v1180:0, v1577:0, v1578:0) :|: v1180:0 > 0 && v1177:0 > 0 && v1578:0 > 0 && sum~cons_8~v1174:0 = 8 + v1174:0 && sum~cons_1~v1578:0 = 1 + v1578:0

----------------------------------------

(32) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(33)
Obligation:
Rules:
f_1153(v1174:0:0, sum~cons_8~v1174:0:0, v1177:0:0, v1180:0:0, sum~cons_1~v1578:0:0) -> f_1153(v1174:0:0, 8 + v1174:0:0, v1180:0:0, v1577:0:0, v1578:0:0) :|: v1180:0:0 > 0 && v1177:0:0 > 0 && v1578:0:0 > 0 && sum~cons_8~v1174:0:0 = 8 + v1174:0:0 && sum~cons_1~v1578:0:0 = 1 + v1578:0:0

----------------------------------------

(34) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1153(x, x1, x2, x3, x4)] = x4

The following rules are decreasing:
f_1153(v1174:0:0, sum~cons_8~v1174:0:0, v1177:0:0, v1180:0:0, sum~cons_1~v1578:0:0) -> f_1153(v1174:0:0, 8 + v1174:0:0, v1180:0:0, v1577:0:0, v1578:0:0) :|: v1180:0:0 > 0 && v1177:0:0 > 0 && v1578:0:0 > 0 && sum~cons_8~v1174:0:0 = 8 + v1174:0:0 && sum~cons_1~v1578:0:0 = 1 + v1578:0:0
The following rules are bounded:
f_1153(v1174:0:0, sum~cons_8~v1174:0:0, v1177:0:0, v1180:0:0, sum~cons_1~v1578:0:0) -> f_1153(v1174:0:0, 8 + v1174:0:0, v1180:0:0, v1577:0:0, v1578:0:0) :|: v1180:0:0 > 0 && v1177:0:0 > 0 && v1578:0:0 > 0 && sum~cons_8~v1174:0:0 = 8 + v1174:0:0 && sum~cons_1~v1578:0:0 = 1 + v1578:0:0

----------------------------------------

(35)
YES

----------------------------------------

(36)
Obligation:
SCC
----------------------------------------

(37) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 22 rulesP rules:
f_1088(v979, v980, v981, v982, v983, v984, v985, 0, v989, v988, 1, v987, v991, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1005, v1006, v1007, v1009, v1010, v995, 3, 7, 4, 8, 9, 2, v1004, v1008) -> f_1099(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, 1, v987, v988, v991, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1005, v1006, v1007, v1009, v1010, v995, 3, 7, 4, 8, 9, 2, v1004, v1008) :|: v1017 = 8 + v989 && 9 <= v1017
f_1099(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, 1, v987, v988, v991, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1005, v1006, v1007, v1009, v1010, v995, 3, 7, 4, 8, 9, 2, v1004, v1008) -> f_1104(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v987, v988, v991, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1005, v1006, v1007, v1009, v995, 3, 7, 4, 8, 9, 2, v1004, v1008) :|: 0 = 0
f_1104(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v987, v988, v991, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1005, v1006, v1007, v1009, v995, 3, 7, 4, 8, 9, 2, v1004, v1008) -> f_1109(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v987, v988, v991, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1005, v1006, v1007, v1009, v995, 3, 7, 4, 8, 9, 2, v1004, v1008) :|: 0 < v1010 && 2 <= v1008
f_1109(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v987, v988, v991, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1005, v1006, v1007, v1009, v995, 3, 7, 4, 8, 9, 2, v1004, v1008) -> f_1115(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v987, v988, v991, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1005, v1006, v1007, v1009, v995, 3, 7, 4, 8, 9, 2, v1004, v1008) :|: 0 = 0
f_1115(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v987, v988, v991, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1005, v1006, v1007, v1009, v995, 3, 7, 4, 8, 9, 2, v1004, v1008) -> f_1120(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v987, v988, v991, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1005, v1006, v1007, v1009, v995, 3, 7, 4, 8, 9, 2, v1004, v1008) :|: TRUE
f_1120(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v987, v988, v991, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1005, v1006, v1007, v1009, v995, 3, 7, 4, 8, 9, 2, v1004, v1008) -> f_1125(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v988, v991, v987, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1005, v1006, v1007, v1009, v995, 3, 7, 4, 8, 9, 2, v1004, v1008) :|: 0 = 0
f_1125(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v988, v991, v987, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1005, v1006, v1007, v1009, v995, 3, 7, 4, 8, 9, 2, v1004, v1008) -> f_1136(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v991, v987, v988, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1124, v995, v1123, v1009, v1121, v1005, v1007, 3, 7, 4, 8, 15, 9, 2, v1122, 16, v1125) :|: v1017 = 8 + v989 && v1125 = 1 + v1004 && 1 + v1122 = v1008 && v1124 = 15 + v989 && 16 <= v1124 && 1 <= v1122 && 0 <= v1125
f_1136(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v991, v987, v988, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1124, v995, v1123, v1009, v1121, v1005, v1007, 3, 7, 4, 8, 15, 9, 2, v1122, 16, v1125) -> f_1141(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v991, v987, v988, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1124, v995, v1123, v1009, v1121, v1005, v1007, 3, 7, 4, 8, 15, 9, 2, v1122, 16, v1125) :|: 0 = 0
f_1141(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v991, v987, v988, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1124, v995, v1123, v1009, v1121, v1005, v1007, 3, 7, 4, 8, 15, 9, 2, v1122, 16, v1125) -> f_1146(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v991, v987, v988, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1124, v995, v1123, v1009, v1121, v1005, v1007, 3, 7, 4, 8, 15, 9, 2, v1122, 16, v1125) :|: 0 = 0
f_1146(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v991, v987, v988, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1124, v995, v1123, v1009, v1121, v1005, v1007, 3, 7, 4, 8, 15, 9, 2, v1122, 16, v1125) -> f_1150(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v1123, v987, v988, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1124, v995, v1009, v1121, v1005, v991, v1007, 3, 7, 4, 8, 15, 9, 2, v1122, 16, v1125) :|: 0 = 0
f_1150(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v1123, v987, v988, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1124, v995, v1009, v1121, v1005, v991, v1007, 3, 7, 4, 8, 15, 9, 2, v1122, 16, v1125) -> f_1154(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v1123, v987, v988, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1124, v995, v1009, v1121, v1005, v991, v1007, 3, 7, 4, 8, 15, 9, 2, v1122, 16, v1125) :|: 0 = 0
f_1154(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v1123, v987, v988, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1124, v995, v1009, v1121, v1005, v991, v1007, 3, 7, 4, 8, 15, 9, 2, v1122, 16, v1125) -> f_1159(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v1123, v987, v988, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1124, v995, v1009, v1121, v1005, v991, v1007, 3, 7, 4, 8, 15, 9, 2, v1122, 16, v1125) :|: v1123 != v980
f_1159(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v1123, v987, v988, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1124, v995, v1009, v1121, v1005, v991, v1007, 3, 7, 4, 8, 15, 9, 2, v1122, 16, v1125) -> f_1164(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v1123, v987, v988, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1124, v995, v1009, v1121, v1005, v991, v1007, 3, 7, 4, 8, 15, 9, 2, v1122, 16, v1125) :|: 0 = 0
f_1164(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v1123, v987, v988, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1124, v995, v1009, v1121, v1005, v991, v1007, 3, 7, 4, 8, 15, 9, 2, v1122, 16, v1125) -> f_1169(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v1123, v987, v988, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1124, v995, v1009, v1121, v1005, v991, v1007, 3, 7, 4, 8, 15, 9, 2, v1122, 16, v1125) :|: TRUE
f_1169(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v1123, v987, v988, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1124, v995, v1009, v1121, v1005, v991, v1007, 3, 7, 4, 8, 15, 9, 2, v1122, 16, v1125) -> f_1181(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v1123, v988, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1124, v995, v1009, v1121, v1005, v991, v1007, 3, 7, 4, 8, 15, 9, 2, v1122, 16, v1125) :|: 0 = 0
f_1181(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v1123, v988, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1124, v995, v1009, v1121, v1005, v991, v1007, 3, 7, 4, 8, 15, 9, 2, v1122, 16, v1125) -> f_1187(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v1123, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1124, v988, v995, v1009, v1121, v1005, v991, v1007, 3, 7, 4, 8, 15, 9, 2, v1122, 16, v1125) :|: v1017 = 8 + v989
f_1187(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v1123, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1124, v988, v995, v1009, v1121, v1005, v991, v1007, 3, 7, 4, 8, 15, 9, 2, v1122, 16, v1125) -> f_1193(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v1123, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1124, v988, v995, v1009, v1121, v1005, v991, v1007, 3, 7, 4, 8, 15, 9, 2, v1122, 16, v1125) :|: 0 = 0
f_1193(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v1123, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1124, v988, v995, v1009, v1121, v1005, v991, v1007, 3, 7, 4, 8, 15, 9, 2, v1122, 16, v1125) -> f_1205(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v1123, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1124, v995, v1009, v1121, v1005, v991, v1007, 3, 7, 4, 8, 15, 2, 9, v1122, 16, v1125) :|: TRUE
f_1205(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v1123, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1124, v995, v1009, v1121, v1005, v991, v1007, 3, 7, 4, 8, 15, 2, 9, v1122, 16, v1125) -> f_1210(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v1123, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1124, v995, v1009, v1121, v1005, v991, v1007, 3, 7, 4, 8, 15, 2, 9, v1122, 16, v1125) :|: TRUE
f_1210(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v1123, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1124, v995, v1009, v1121, v1005, v991, v1007, 3, 7, 4, 8, 15, 2, 9, v1122, 16, v1125) -> f_1215(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v1123, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1124, v995, v1009, v1121, v1005, v991, v1007, 3, 7, 4, 8, 15, 2, 9, v1122, 16, v1125) :|: TRUE
f_1215(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v1123, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1124, v995, v1009, v1121, v1005, v991, v1007, 3, 7, 4, 8, 15, 2, 9, v1122, 16, v1125) -> f_1083(v979, v980, v981, v982, v983, v984, v985, 0, v989, v1017, v1010, 1, v1123, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1005, v991, v1007, v1009, v1121, v995, 3, 7, 4, 8, 9, 2, v1125, v1122) :|: TRUE
f_1083(v979, v980, v981, v982, v983, v984, v985, 0, v987, v988, v989, 1, v991, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1005, v1006, v1007, v1009, v1010, v995, 3, 7, 4, 8, 9, 2, v1004, v1008) -> f_1088(v979, v980, v981, v982, v983, v984, v985, 0, v989, v988, 1, v987, v991, v992, v996, v993, v997, v994, v998, v999, v1000, v1001, v1002, v1003, v1005, v1006, v1007, v1009, v1010, v995, 3, 7, 4, 8, 9, 2, v1004, v1008) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_1088(v979:0, v980:0, v981:0, v982:0, v983:0, v984:0, v985:0, 0, v989:0, v988:0, 1, v987:0, v991:0, v992:0, v996:0, v993:0, v997:0, v994:0, v998:0, v999:0, v1000:0, v1001:0, v1002:0, v1003:0, v1005:0, v1006:0, v1007:0, v1009:0, v1010:0, v995:0, 3, 7, 4, 8, 9, 2, v1004:0, 1 + v1122:0) -> f_1088(v979:0, v980:0, v981:0, v982:0, v983:0, v984:0, v985:0, 0, v1010:0, 8 + v989:0, 1, v989:0, v1123:0, v992:0, v996:0, v993:0, v997:0, v994:0, v998:0, v999:0, v1000:0, v1001:0, v1002:0, v1003:0, v1005:0, v991:0, v1007:0, v1009:0, v1121:0, v995:0, 3, 7, 4, 8, 9, 2, 1 + v1004:0, v1122:0) :|: v989:0 > 0 && v1122:0 > 0 && v1010:0 > 0 && v980:0 > v1123:0 && v1004:0 > -2
f_1088(v979:0, v980:0, v981:0, v982:0, v983:0, v984:0, v985:0, 0, v989:0, v988:0, 1, v987:0, v991:0, v992:0, v996:0, v993:0, v997:0, v994:0, v998:0, v999:0, v1000:0, v1001:0, v1002:0, v1003:0, v1005:0, v1006:0, v1007:0, v1009:0, v1010:0, v995:0, 3, 7, 4, 8, 9, 2, v1004:0, 1 + v1122:0) -> f_1088(v979:0, v980:0, v981:0, v982:0, v983:0, v984:0, v985:0, 0, v1010:0, 8 + v989:0, 1, v989:0, v1123:0, v992:0, v996:0, v993:0, v997:0, v994:0, v998:0, v999:0, v1000:0, v1001:0, v1002:0, v1003:0, v1005:0, v991:0, v1007:0, v1009:0, v1121:0, v995:0, 3, 7, 4, 8, 9, 2, 1 + v1004:0, v1122:0) :|: v989:0 > 0 && v1122:0 > 0 && v1010:0 > 0 && v980:0 < v1123:0 && v1004:0 > -2
Filtered unneeded arguments:
   f_1088(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38) -> f_1088(x2, x9, x29, x37, x38)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1088(v980:0, v989:0, v1010:0, v1004:0, sum~cons_1~v1122:0) -> f_1088(v980:0, v1010:0, v1121:0, 1 + v1004:0, v1122:0) :|: v1122:0 > 0 && v989:0 > 0 && v1004:0 > -2 && v1010:0 > 0 && sum~cons_1~v1122:0 = 1 + v1122:0

----------------------------------------

(38)
Obligation:
Rules:
f_1088(v980:0, v989:0, v1010:0, v1004:0, sum~cons_1~v1122:0) -> f_1088(v980:0, v1010:0, v1121:0, 1 + v1004:0, v1122:0) :|: v1122:0 > 0 && v989:0 > 0 && v1004:0 > -2 && v1010:0 > 0 && sum~cons_1~v1122:0 = 1 + v1122:0

----------------------------------------

(39) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(40)
Obligation:
Rules:
f_1088(v980:0:0, v989:0:0, v1010:0:0, v1004:0:0, sum~cons_1~v1122:0:0) -> f_1088(v980:0:0, v1010:0:0, v1121:0:0, 1 + v1004:0:0, v1122:0:0) :|: v1004:0:0 > -2 && v1010:0:0 > 0 && v989:0:0 > 0 && v1122:0:0 > 0 && sum~cons_1~v1122:0:0 = 1 + v1122:0:0

----------------------------------------

(41) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1088(x1, x2, x3, x4, x5) -> f_1088(x2, x3, x4, x5)

----------------------------------------

(42)
Obligation:
Rules:
f_1088(v989:0:0, v1010:0:0, v1004:0:0, sum~cons_1~v1122:0:0) -> f_1088(v1010:0:0, v1121:0:0, 1 + v1004:0:0, v1122:0:0) :|: v1004:0:0 > -2 && v1010:0:0 > 0 && v989:0:0 > 0 && v1122:0:0 > 0 && sum~cons_1~v1122:0:0 = 1 + v1122:0:0

----------------------------------------

(43) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1088(x, x1, x2, x3)] = x3

The following rules are decreasing:
f_1088(v989:0:0, v1010:0:0, v1004:0:0, sum~cons_1~v1122:0:0) -> f_1088(v1010:0:0, v1121:0:0, 1 + v1004:0:0, v1122:0:0) :|: v1004:0:0 > -2 && v1010:0:0 > 0 && v989:0:0 > 0 && v1122:0:0 > 0 && sum~cons_1~v1122:0:0 = 1 + v1122:0:0
The following rules are bounded:
f_1088(v989:0:0, v1010:0:0, v1004:0:0, sum~cons_1~v1122:0:0) -> f_1088(v1010:0:0, v1121:0:0, 1 + v1004:0:0, v1122:0:0) :|: v1004:0:0 > -2 && v1010:0:0 > 0 && v989:0:0 > 0 && v1122:0:0 > 0 && sum~cons_1~v1122:0:0 = 1 + v1122:0:0

----------------------------------------

(44)
YES

----------------------------------------

(45)
Obligation:
SCC
----------------------------------------

(46) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 24 rulesP rules:
f_708(v305, v306, v307, v308, v309, 0, v317, 1, v313, v314, v315, v316, v311, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v331, v322, 3, 7, 4, 8, 9) -> f_709(v305, v306, v307, v308, v309, 0, v317, 1, v313, v314, v315, v316, v311, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v331, v322, 3, 7, 4, 8, 9) :|: 0 = 0
f_709(v305, v306, v307, v308, v309, 0, v317, 1, v313, v314, v315, v316, v311, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v331, v322, 3, 7, 4, 8, 9) -> f_710(v305, v306, v307, v308, v309, 0, v317, 1, v313, v314, v315, v316, v311, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v331, v322, 3, 7, 4, 8, 2, 9) :|: v317 < v305 && 2 <= v305
f_710(v305, v306, v307, v308, v309, 0, v317, 1, v313, v314, v315, v316, v311, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v331, v322, 3, 7, 4, 8, 2, 9) -> f_712(v305, v306, v307, v308, v309, 0, v317, 1, v313, v314, v315, v316, v311, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v331, v322, 3, 7, 4, 8, 2, 9) :|: 0 = 0
f_712(v305, v306, v307, v308, v309, 0, v317, 1, v313, v314, v315, v316, v311, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v331, v322, 3, 7, 4, 8, 2, 9) -> f_714(v305, v306, v307, v308, v309, 0, v317, 1, v313, v314, v315, v316, v311, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v331, v322, 3, 7, 4, 8, 2, 9) :|: TRUE
f_714(v305, v306, v307, v308, v309, 0, v317, 1, v313, v314, v315, v316, v311, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v331, v322, 3, 7, 4, 8, 2, 9) -> f_716(v305, v306, v307, v308, v309, 0, v317, 1, v332, v313, v314, v315, v316, v311, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v333, v331, v322, 3, 7, 4, 8, 15, 2, 9, 16) :|: v333 = 15 + v332 && v332 % 4 = 0 && 16 <= v333
f_716(v305, v306, v307, v308, v309, 0, v317, 1, v332, v313, v314, v315, v316, v311, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v333, v331, v322, 3, 7, 4, 8, 15, 2, 9, 16) -> f_718(v305, v306, v307, v308, v309, 0, v317, 1, v332, v314, v313, v315, v316, v311, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v333, v331, v322, 3, 7, 4, 8, 15, 2, 9, 16) :|: 0 = 0
f_718(v305, v306, v307, v308, v309, 0, v317, 1, v332, v314, v313, v315, v316, v311, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v333, v331, v322, 3, 7, 4, 8, 15, 2, 9, 16) -> f_720(v305, v306, v307, v308, v309, 0, v317, 1, v332, v314, v313, v315, v316, v311, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v333, v331, v322, 3, 7, 4, 8, 15, 2, 9, 16) :|: TRUE
f_720(v305, v306, v307, v308, v309, 0, v317, 1, v332, v314, v313, v315, v316, v311, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v333, v331, v322, 3, 7, 4, 8, 15, 2, 9, 16) -> f_722(v305, v306, v307, v308, v309, 0, v317, 1, v332, v336, v313, v315, v316, v311, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v333, v314, v331, v322, 3, 7, 4, 8, 15, 2, 9, 16) :|: TRUE
f_722(v305, v306, v307, v308, v309, 0, v317, 1, v332, v336, v313, v315, v316, v311, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v333, v314, v331, v322, 3, 7, 4, 8, 15, 2, 9, 16) -> f_724(v305, v306, v307, v308, v309, 0, v317, 1, v332, v336, v313, v315, v316, v311, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v333, v314, v331, v322, 3, 7, 4, 8, 15, 2, 9, 16) :|: 0 = 0
f_724(v305, v306, v307, v308, v309, 0, v317, 1, v332, v336, v313, v315, v316, v311, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v333, v314, v331, v322, 3, 7, 4, 8, 15, 2, 9, 16) -> f_726(v305, v306, v307, v308, v309, 0, v317, 1, v332, v336, v315, v313, v316, v311, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v333, v314, v331, v322, 3, 7, 4, 8, 15, 2, 9, 16) :|: 0 = 0
f_726(v305, v306, v307, v308, v309, 0, v317, 1, v332, v336, v315, v313, v316, v311, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v333, v314, v331, v322, 3, 7, 4, 8, 15, 2, 9, 16) -> f_728(v305, v306, v307, v308, v309, 0, v317, 1, v332, v336, v315, v313, v316, v311, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v333, v314, v331, v322, 3, 7, 4, 8, 15, 2, 9, 16) :|: TRUE
f_728(v305, v306, v307, v308, v309, 0, v317, 1, v332, v336, v315, v313, v316, v311, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v333, v314, v331, v322, 3, 7, 4, 8, 15, 2, 9, 16) -> f_730(v305, v306, v307, v308, v309, 0, v317, 1, v332, v336, v313, v316, v311, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v333, v314, v331, v315, v322, 3, 7, 4, 8, 15, 2, 9, 16) :|: 0 = 0
f_730(v305, v306, v307, v308, v309, 0, v317, 1, v332, v336, v313, v316, v311, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v333, v314, v331, v315, v322, 3, 7, 4, 8, 15, 2, 9, 16) -> f_732(v305, v306, v307, v308, v309, 0, v317, 1, v332, v336, v313, v316, v311, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v333, v314, v331, v315, v322, 3, 7, 4, 8, 15, 2, 9, 16) :|: 0 = 0
f_732(v305, v306, v307, v308, v309, 0, v317, 1, v332, v336, v313, v316, v311, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v333, v314, v331, v315, v322, 3, 7, 4, 8, 15, 2, 9, 16) -> f_734(v305, v306, v307, v308, v309, 0, v317, 1, v332, v336, v313, v346, v311, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v333, v314, v331, v315, v322, 3, 7, 4, 15, 8, 2, 16, 9) :|: v346 = 8 + v332 && 9 <= v346
f_734(v305, v306, v307, v308, v309, 0, v317, 1, v332, v336, v313, v346, v311, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v333, v314, v331, v315, v322, 3, 7, 4, 15, 8, 2, 16, 9) -> f_736(v305, v306, v307, v308, v309, 0, v317, 1, v332, v336, v313, v346, v311, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v322, v331, 3, 7, 4, 8, v349, 2, 9) :|: v349 = 1 + v317 && 2 <= v349
f_736(v305, v306, v307, v308, v309, 0, v317, 1, v332, v336, v313, v346, v311, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v322, v331, 3, 7, 4, 8, v349, 2, 9) -> f_738(v305, v306, v307, v308, v309, 0, v317, 1, v332, v336, v313, v346, v311, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v322, v331, 3, 7, 4, 8, v349, 2, 9) :|: 0 = 0
f_738(v305, v306, v307, v308, v309, 0, v317, 1, v332, v336, v313, v346, v311, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v322, v331, 3, 7, 4, 8, v349, 2, 9) -> f_740(v305, v306, v307, v308, v309, 0, v317, 1, v332, v336, v313, v346, v311, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v322, v331, 3, 7, 4, 8, v349, 2, 9) :|: TRUE
f_740(v305, v306, v307, v308, v309, 0, v317, 1, v332, v336, v313, v346, v311, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v322, v331, 3, 7, 4, 8, v349, 2, 9) -> f_742(v305, v306, v307, v308, v309, 0, v317, 1, v332, v336, v313, v346, v311, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v322, v331, 3, 7, 4, 8, v349, 2, 9) :|: TRUE
f_742(v305, v306, v307, v308, v309, 0, v317, 1, v332, v336, v313, v346, v311, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v322, v331, 3, 7, 4, 8, v349, 2, 9) -> f_744(v305, v306, v307, v308, v309, 0, v317, 1, v332, v336, v313, v346, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v322, v331, 3, 7, 4, 8, v349, 2, 9) :|: 0 = 0
f_744(v305, v306, v307, v308, v309, 0, v317, 1, v332, v336, v313, v346, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v322, v331, 3, 7, 4, 8, v349, 2, 9) -> f_746(v305, v306, v307, v308, v309, 0, v317, 1, v332, v336, v313, v346, v349, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v322, v331, 3, 7, 4, 8, 2, 9) :|: v349 = 1 + v317
f_746(v305, v306, v307, v308, v309, 0, v317, 1, v332, v336, v313, v346, v349, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v322, v331, 3, 7, 4, 8, 2, 9) -> f_748(v305, v306, v307, v308, v309, 0, v317, 1, v332, v336, v313, v346, v349, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v322, v331, 3, 7, 4, 8, 2, 9) :|: TRUE
f_748(v305, v306, v307, v308, v309, 0, v317, 1, v332, v336, v313, v346, v349, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v322, v331, 3, 7, 4, 8, 2, 9) -> f_750(v305, v306, v307, v308, v309, 0, v317, 1, v332, v336, v313, v346, v349, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v322, v331, 3, 7, 4, 8, 2, 9) :|: TRUE
f_750(v305, v306, v307, v308, v309, 0, v317, 1, v332, v336, v313, v346, v349, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v322, v331, 3, 7, 4, 8, 2, 9) -> f_707(v305, v306, v307, v308, v309, 0, v317, 1, v332, v336, v313, v346, v349, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v331, v322, 3, 7, 4, 8, 9) :|: TRUE
f_707(v305, v306, v307, v308, v309, 0, v311, 1, v313, v314, v315, v316, v317, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v331, v322, 3, 7, 4, 8, 9) -> f_708(v305, v306, v307, v308, v309, 0, v317, 1, v313, v314, v315, v316, v311, v318, v323, v319, v324, v320, v325, v321, v326, v327, v328, v329, v330, v331, v322, 3, 7, 4, 8, 9) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_708(v305:0, v306:0, v307:0, v308:0, v309:0, 0, v317:0, 1, v313:0, v314:0, v315:0, v316:0, v311:0, v318:0, v323:0, v319:0, v324:0, v320:0, v325:0, v321:0, v326:0, v327:0, v328:0, v329:0, v330:0, v331:0, v322:0, 3, 7, 4, 8, 9) -> f_708(v305:0, v306:0, v307:0, v308:0, v309:0, 0, 1 + v317:0, 1, v332:0, v336:0, v313:0, 8 + v332:0, v317:0, v318:0, v323:0, v319:0, v324:0, v320:0, v325:0, v321:0, v326:0, v327:0, v328:0, v329:0, v330:0, v331:0, v322:0, 3, 7, 4, 8, 9) :|: v305:0 > 1 && v317:0 < v305:0 && v332:0 % 4 = 0 && v332:0 > 0 && v317:0 > 0
Filtered unneeded arguments:
   f_708(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32) -> f_708(x1, x7)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_708(v305:0, v317:0) -> f_708(v305:0, 1 + v317:0) :|: v317:0 < v305:0 && v317:0 > 0 && v305:0 > 1

----------------------------------------

(47)
Obligation:
Rules:
f_708(v305:0, v317:0) -> f_708(v305:0, 1 + v317:0) :|: v317:0 < v305:0 && v317:0 > 0 && v305:0 > 1

----------------------------------------

(48) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(49)
Obligation:
Rules:
f_708(v305:0:0, v317:0:0) -> f_708(v305:0:0, 1 + v317:0:0) :|: v317:0:0 < v305:0:0 && v317:0:0 > 0 && v305:0:0 > 1

----------------------------------------

(50) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_708(x, x1)] = -1 + x - x1

The following rules are decreasing:
f_708(v305:0:0, v317:0:0) -> f_708(v305:0:0, 1 + v317:0:0) :|: v317:0:0 < v305:0:0 && v317:0:0 > 0 && v305:0:0 > 1
The following rules are bounded:
f_708(v305:0:0, v317:0:0) -> f_708(v305:0:0, 1 + v317:0:0) :|: v317:0:0 < v305:0:0 && v317:0:0 > 0 && v305:0:0 > 1

----------------------------------------

(51)
YES
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.001s
