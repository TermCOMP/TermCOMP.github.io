MAYBE
proof of /hpcwork/ff862203/termcomp25/benchmarks/6iHiX.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could not be shown:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 70 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 8980 ms]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) LLVM Symbolic Execution SCC
        (8) SCC2IRS [SOUND, 43 ms]
        (9) IntTRS
            (10) IntTRSCompressionProof [EQUIVALENT, 0 ms]
            (11) IntTRS
            (12) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
            (13) IntTRS
            (14) IntTRSPeriodicNontermProof [COMPLETE, 4 ms]
            (15) NO
        (16) SCC2IRS [SOUND, 50 ms]
        (17) IntTRS
            (18) IntTRSCompressionProof [EQUIVALENT, 0 ms]
            (19) IntTRS
    (20) LLVM Symbolic Execution SCC
        (21) SCC2IRS [SOUND, 1 ms]
        (22) IntTRS
            (23) IntTRSCompressionProof [EQUIVALENT, 0 ms]
            (24) IntTRS
            (25) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
            (26) IntTRS
            (27) IntTRSPeriodicNontermProof [COMPLETE, 4 ms]
            (28) NO
        (29) SCC2IRS [SOUND, 28 ms]
        (30) IntTRS
    (31) LLVM Symbolic Execution SCC
        (32) SCC2IRS [SOUND, 2 ms]
        (33) IntTRS
            (34) IntTRSNonPeriodicNontermProof [COMPLETE, 1 ms]
            (35) NO
        (36) SCC2IRS [SOUND, 4 ms]
        (37) IntTRS
            (38) IntTRSCompressionProof [EQUIVALENT, 0 ms]
            (39) IntTRS
    (40) LLVM Symbolic Execution SCC
        (41) SCC2IRS [SOUND, 4 ms]
        (42) IntTRS
            (43) IntTRSPeriodicNontermProof [COMPLETE, 2 ms]
            (44) NO
        (45) SCC2IRS [SOUND, 0 ms]
        (46) IntTRS
            (47) IntTRSCompressionProof [EQUIVALENT, 0 ms]
            (48) IntTRS
    (49) LLVM Symbolic Execution SCC
        (50) SCC2IRS [SOUND, 3 ms]
        (51) IntTRS
            (52) IntTRSNonPeriodicNontermProof [COMPLETE, 1 ms]
            (53) NO
        (54) SCC2IRS [SOUND, 10 ms]
        (55) IntTRS
            (56) IntTRSCompressionProof [EQUIVALENT, 0 ms]
            (57) IntTRS
            (58) IntTRSNonPeriodicNontermProof [COMPLETE, 2 ms]
            (59) NO


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/6iHiX.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/6iHiX.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "cstrcat" linkageType: EXTERNALLY_VISIBLE returnParam: *i8 parameters: (0 *i8, 1 *i8) variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 10
	0:
		%3 = alloca *i8, align 8
		%4 = alloca *i8, align 8
		%5 = alloca *i8, align 8
		store %0, %3
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %3)
		store %1, %4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %4)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %5)
		%6 = load %3
		store %6, %5
		br %7
	7:
		%8 = load %3
		%9 = load %8
		%10 = icmp ne %9 0
		br %10, %11, %15
	11:
		br %12
	12:
		%13 = load %3
		%14 = getelementptr %13, 1
		store %14, %3
		br %7
	15:
		br %16
	16:
		%17 = load %4
		%18 = getelementptr %17, 1
		store %18, %4
		%19 = load %17
		%20 = load %3
		%21 = getelementptr %20, 1
		store %21, %3
		store %19, %20
		%22 = sext i8 %19 to i32
		%23 = icmp ne %22 0
		br %23, %24, %25
	24:
		br %16
	25:
		%26 = load %5
		ret %26

*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 44
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		%3 = alloca i32, align 4
		%4 = alloca i32, align 4
		%5 = alloca *i8, align 8
		%6 = alloca *i8, align 8
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		%7 = call i32 @__VERIFIER_nondet_int()
		store %7, %2
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		%8 = call i32 @__VERIFIER_nondet_int()
		store %8, %3
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %4)
		%9 = call i32 @__VERIFIER_nondet_int()
		store %9, %4
		%10 = load %2
		%11 = icmp slt %10 1
		br %11, %12, %13
	12:
		store 1, %2
		br %13
	13:
		%14 = load %3
		%15 = icmp slt %14 2
		br %15, %16, %17
	16:
		store 2, %3
		br %17
	17:
		%18 = load %4
		%19 = icmp slt %18 1
		br %19, %20, %21
	20:
		store 1, %4
		br %21
	21:
		%22 = load %3
		%23 = load %4
		%24 = sub i32 %22, %23
		%25 = load %2
		%26 = icmp slt %24 %25
		br %26, %31, %27
	27:
		%28 = load %4
		%29 = load %3
		%30 = icmp sgt %28 %29
		br %30, %31, %32
	31:
		store 0, %1
		br %54
	32:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %5)
		%33 = load %2
		%34 = sext i32 %33 to i64
		%35 = mul i64 %34, 1
		%36 = alloca i8, numElementsLit: %35, align 16
		store %36, %5
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %6)
		%37 = load %3
		%38 = sext i32 %37 to i64
		%39 = mul i64 %38, 1
		%40 = alloca i8, numElementsLit: %39, align 16
		store %40, %6
		%41 = load %5
		%42 = load %2
		%43 = sub i32 %42, 1
		%44 = sext i32 %43 to i64
		%45 = getelementptr %41, %44
		store 0, %45
		%46 = load %6
		%47 = load %4
		%48 = sub i32 %47, 1
		%49 = sext i32 %48 to i64
		%50 = getelementptr %46, %49
		store 0, %50
		%51 = load %6
		%52 = load %5
		%53 = call *i8 @cstrcat(*i8 %51, *i8 %52)
		store 0, %1
		br %54
	54:
		%55 = load %1
		ret %55


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 5 SCCs.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC
----------------------------------------

(8) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 15 rulesP rules:
f_1419(v7694, v7695, v7696, v7697, v7698, v7699, 0, v7701, v7702, v7703, v7704, v7705, v7706, 1, v7708, v7726, v7709, v7727, v7710, v7728, v7711, v7729, v7712, v7730, v7713, v7731, v7720, v7723, v7721, v7732, v7733, v7734, v7735, v7714, v7715, v7716, v7717, v7718, v7719, v7722, v7724, v7725, 3, 7, 2, 4, 8) -> f_1420(v7694, v7695, v7696, v7697, v7698, v7699, 0, v7701, v7702, v7703, v7704, v7705, v7706, 1, v7708, v7726, v7709, v7727, v7710, v7728, v7711, v7729, v7712, v7730, v7713, v7731, v7720, v7723, v7721, v7732, v7733, v7734, v7735, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) :|: TRUE
f_1420(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7923, v7924, v7925, v7926, v7927, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) -> f_1422(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7924, v7925, v7926, v7927, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) :|: TRUE
f_1422(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7924, v7925, v7926, v7927, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) -> f_1424(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v7925, v7926, v7927, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) :|: v7959 = 1 + v7957 && 1 <= v7959
f_1424(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v7925, v7926, v7927, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) -> f_1426(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v7925, v7926, v7927, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) :|: TRUE
f_1426(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v7925, v7926, v7927, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) -> f_1428(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v8066, v7926, v7927, v7925, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) :|: TRUE
f_1428(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v8066, v7926, v7927, v7925, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) -> f_1429(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v8066, v8068, v7927, v7925, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) :|: TRUE
f_1429(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v8066, v8068, v7927, v7925, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) -> f_1430(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v8066, v8068, v8070, v7925, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) :|: v8070 = 1 + v8068 && 1 <= v8070
f_1430(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v8066, v8068, v8070, v7925, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) -> f_1431(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v8066, v8068, v8070, v7925, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) :|: TRUE
f_1431(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v8066, v8068, v8070, v7925, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) -> f_1432(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v8066, v8068, v8070, v7925, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) :|: TRUE
f_1432(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v8066, v8068, v8070, v7925, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) -> f_1433(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v8066, v8068, v8070, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) :|: 0 = 0
f_1433(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v8066, v8068, v8070, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) -> f_1434(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v8066, v8068, v8070, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) :|: v8066 != 0
f_1434(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v8066, v8068, v8070, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) -> f_1436(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v8066, v8068, v8070, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) :|: 0 = 0
f_1436(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v8066, v8068, v8070, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) -> f_1438(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v8066, v8068, v8070, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) :|: TRUE
f_1438(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v8066, v8068, v8070, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) -> f_1416(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v8066, v8068, v8070, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7714, v7715, v7716, v7717, v7718, v7719, v7722, v7724, v7725, 3, 7, 2, 4, 8) :|: TRUE
f_1416(v7694, v7695, v7696, v7697, v7698, v7699, 0, v7701, v7702, v7703, v7704, v7705, v7706, 1, v7708, v7726, v7709, v7727, v7710, v7728, v7711, v7729, v7712, v7730, v7713, v7731, v7720, v7723, v7721, v7732, v7733, v7734, v7735, v7714, v7715, v7716, v7717, v7718, v7719, v7722, v7724, v7725, 3, 7, 2, 4, 8) -> f_1419(v7694, v7695, v7696, v7697, v7698, v7699, 0, v7701, v7702, v7703, v7704, v7705, v7706, 1, v7708, v7726, v7709, v7727, v7710, v7728, v7711, v7729, v7712, v7730, v7713, v7731, v7720, v7723, v7721, v7732, v7733, v7734, v7735, v7714, v7715, v7716, v7717, v7718, v7719, v7722, v7724, v7725, 3, 7, 2, 4, 8) :|: TRUE
Combined rules. Obtained 2 rulesP rules:
f_1419(v7694:0, v7695:0, v7696:0, v7697:0, v7698:0, v7699:0, 0, v7701:0, v7702:0, v7703:0, v7704:0, v7705:0, v7706:0, 1, v7708:0, v7726:0, v7709:0, v7727:0, v7710:0, v7728:0, v7711:0, v7729:0, v7712:0, v7730:0, v7713:0, v7731:0, v7720:0, v7723:0, v7721:0, v7732:0, v7733:0, v7734:0, v7735:0, v7714:0, v7715:0, v7716:0, v7717:0, v7718:0, v7719:0, v7722:0, v7724:0, v7725:0, 3, 7, 2, 4, 8) -> f_1419(v7694:0, v7695:0, v7696:0, v7697:0, v7698:0, v7699:0, 0, v7701:0, v7957:0, 1 + v7957:0, v8066:0, v8068:0, 1 + v8068:0, 1, v7708:0, v7726:0, v7709:0, v7727:0, v7710:0, v7728:0, v7711:0, v7729:0, v7712:0, v7730:0, v7713:0, v7731:0, v7720:0, v7723:0, v7721:0, v7732:0, v7733:0, v7734:0, v7735:0, v7714:1, v7715:1, v7716:1, v7717:1, v7718:1, v7719:1, v7722:1, v7724:1, v7725:1, 3, 7, 2, 4, 8) :|: v7957:0 > -1 && v8066:0 < 0 && v8068:0 > -1
f_1419(v7694:0, v7695:0, v7696:0, v7697:0, v7698:0, v7699:0, 0, v7701:0, v7702:0, v7703:0, v7704:0, v7705:0, v7706:0, 1, v7708:0, v7726:0, v7709:0, v7727:0, v7710:0, v7728:0, v7711:0, v7729:0, v7712:0, v7730:0, v7713:0, v7731:0, v7720:0, v7723:0, v7721:0, v7732:0, v7733:0, v7734:0, v7735:0, v7714:0, v7715:0, v7716:0, v7717:0, v7718:0, v7719:0, v7722:0, v7724:0, v7725:0, 3, 7, 2, 4, 8) -> f_1419(v7694:0, v7695:0, v7696:0, v7697:0, v7698:0, v7699:0, 0, v7701:0, v7957:0, 1 + v7957:0, v8066:0, v8068:0, 1 + v8068:0, 1, v7708:0, v7726:0, v7709:0, v7727:0, v7710:0, v7728:0, v7711:0, v7729:0, v7712:0, v7730:0, v7713:0, v7731:0, v7720:0, v7723:0, v7721:0, v7732:0, v7733:0, v7734:0, v7735:0, v7714:1, v7715:1, v7716:1, v7717:1, v7718:1, v7719:1, v7722:1, v7724:1, v7725:1, 3, 7, 2, 4, 8) :|: v7957:0 > -1 && v8066:0 > 0 && v8068:0 > -1
Removed division, modulo operations, cleaned up constraints. Obtained 2 rules.P rules:
f_1419(v7694:0, v7695:0, v7696:0, v7697:0, v7698:0, v7699:0, cons_0, v7701:0, v7702:0, v7703:0, v7704:0, v7705:0, v7706:0, cons_1, v7708:0, v7726:0, v7709:0, v7727:0, v7710:0, v7728:0, v7711:0, v7729:0, v7712:0, v7730:0, v7713:0, v7731:0, v7720:0, v7723:0, v7721:0, v7732:0, v7733:0, v7734:0, v7735:0, v7714:0, v7715:0, v7716:0, v7717:0, v7718:0, v7719:0, v7722:0, v7724:0, v7725:0, cons_3, cons_7, cons_2, cons_4, cons_8) -> f_1419(v7694:0, v7695:0, v7696:0, v7697:0, v7698:0, v7699:0, 0, v7701:0, v7957:0, 1 + v7957:0, v8066:0, v8068:0, 1 + v8068:0, 1, v7708:0, v7726:0, v7709:0, v7727:0, v7710:0, v7728:0, v7711:0, v7729:0, v7712:0, v7730:0, v7713:0, v7731:0, v7720:0, v7723:0, v7721:0, v7732:0, v7733:0, v7734:0, v7735:0, v7714:1, v7715:1, v7716:1, v7717:1, v7718:1, v7719:1, v7722:1, v7724:1, v7725:1, 3, 7, 2, 4, 8) :|: v8066:0 < 0 && v8068:0 > -1 && v7957:0 > -1 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_2 = 2 && cons_4 = 4 && cons_8 = 8
f_1419(v7694:0, v7695:0, v7696:0, v7697:0, v7698:0, v7699:0, cons_0, v7701:0, v7702:0, v7703:0, v7704:0, v7705:0, v7706:0, cons_1, v7708:0, v7726:0, v7709:0, v7727:0, v7710:0, v7728:0, v7711:0, v7729:0, v7712:0, v7730:0, v7713:0, v7731:0, v7720:0, v7723:0, v7721:0, v7732:0, v7733:0, v7734:0, v7735:0, v7714:0, v7715:0, v7716:0, v7717:0, v7718:0, v7719:0, v7722:0, v7724:0, v7725:0, cons_3, cons_7, cons_2, cons_4, cons_8) -> f_1419(v7694:0, v7695:0, v7696:0, v7697:0, v7698:0, v7699:0, 0, v7701:0, v7957:0, 1 + v7957:0, v8066:0, v8068:0, 1 + v8068:0, 1, v7708:0, v7726:0, v7709:0, v7727:0, v7710:0, v7728:0, v7711:0, v7729:0, v7712:0, v7730:0, v7713:0, v7731:0, v7720:0, v7723:0, v7721:0, v7732:0, v7733:0, v7734:0, v7735:0, v7714:1, v7715:1, v7716:1, v7717:1, v7718:1, v7719:1, v7722:1, v7724:1, v7725:1, 3, 7, 2, 4, 8) :|: v8066:0 > 0 && v8068:0 > -1 && v7957:0 > -1 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_2 = 2 && cons_4 = 4 && cons_8 = 8

----------------------------------------

(9)
Obligation:
Rules:
f_1419(v7694:0, v7695:0, v7696:0, v7697:0, v7698:0, v7699:0, cons_0, v7701:0, v7702:0, v7703:0, v7704:0, v7705:0, v7706:0, cons_1, v7708:0, v7726:0, v7709:0, v7727:0, v7710:0, v7728:0, v7711:0, v7729:0, v7712:0, v7730:0, v7713:0, v7731:0, v7720:0, v7723:0, v7721:0, v7732:0, v7733:0, v7734:0, v7735:0, v7714:0, v7715:0, v7716:0, v7717:0, v7718:0, v7719:0, v7722:0, v7724:0, v7725:0, cons_3, cons_7, cons_2, cons_4, cons_8) -> f_1419(v7694:0, v7695:0, v7696:0, v7697:0, v7698:0, v7699:0, 0, v7701:0, v7957:0, 1 + v7957:0, v8066:0, v8068:0, 1 + v8068:0, 1, v7708:0, v7726:0, v7709:0, v7727:0, v7710:0, v7728:0, v7711:0, v7729:0, v7712:0, v7730:0, v7713:0, v7731:0, v7720:0, v7723:0, v7721:0, v7732:0, v7733:0, v7734:0, v7735:0, v7714:1, v7715:1, v7716:1, v7717:1, v7718:1, v7719:1, v7722:1, v7724:1, v7725:1, 3, 7, 2, 4, 8) :|: v8066:0 < 0 && v8068:0 > -1 && v7957:0 > -1 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_2 = 2 && cons_4 = 4 && cons_8 = 8
f_1419(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46) -> f_1419(x, x1, x2, x3, x4, x5, 0, x7, x47, 1 + x47, x48, x49, 1 + x49, 1, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x50, x51, x52, x53, x54, x55, x56, x57, x58, 3, 7, 2, 4, 8) :|: x48 > 0 && x49 > -1 && x47 > -1 && x6 = 0 && x13 = 1 && x42 = 3 && x43 = 7 && x44 = 2 && x45 = 4 && x46 = 8

----------------------------------------

(10) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(11)
Obligation:
Rules:
f_1419(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, cons_0, x7:0, x8:0, x9:0, x10:0, x11:0, x12:0, cons_1, x14:0, x15:0, x16:0, x17:0, x18:0, x19:0, x20:0, x21:0, x22:0, x23:0, x24:0, x25:0, x26:0, x27:0, x28:0, x29:0, x30:0, x31:0, x32:0, x33:0, x34:0, x35:0, x36:0, x37:0, x38:0, x39:0, x40:0, x41:0, cons_3, cons_7, cons_2, cons_4, cons_8) -> f_1419(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, 0, x7:0, x47:0, 1 + x47:0, x48:0, x49:0, 1 + x49:0, 1, x14:0, x15:0, x16:0, x17:0, x18:0, x19:0, x20:0, x21:0, x22:0, x23:0, x24:0, x25:0, x26:0, x27:0, x28:0, x29:0, x30:0, x31:0, x32:0, x50:0, x51:0, x52:0, x53:0, x54:0, x55:0, x56:0, x57:0, x58:0, 3, 7, 2, 4, 8) :|: x48:0 > 0 && x49:0 > -1 && x47:0 > -1 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_2 = 2 && cons_4 = 4 && cons_8 = 8
f_1419(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46) -> f_1419(x, x1, x2, x3, x4, x5, 0, x7, x47, 1 + x47, x48, x49, 1 + x49, 1, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x50, x51, x52, x53, x54, x55, x56, x57, x58, 3, 7, 2, 4, 8) :|: x48 < 0 && x49 > -1 && x47 > -1 && x6 = 0 && x13 = 1 && x42 = 3 && x43 = 7 && x44 = 2 && x45 = 4 && x46 = 8

----------------------------------------

(12) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1419(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47) -> f_1419(x7, x14, x43, x44, x45, x46, x47)

----------------------------------------

(13)
Obligation:
Rules:
f_1419(cons_0, cons_1, cons_3, cons_7, cons_2, cons_4, cons_8) -> f_1419(0, 1, 3, 7, 2, 4, 8) :|: x48:0 > 0 && x49:0 > -1 && x47:0 > -1 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_2 = 2 && cons_4 = 4 && cons_8 = 8
f_1419(x6, x13, x42, x43, x44, x45, x46) -> f_1419(0, 1, 3, 7, 2, 4, 8) :|: x48 < 0 && x49 > -1 && x47 > -1 && x6 = 0 && x13 = 1 && x42 = 3 && x43 = 7 && x44 = 2 && x45 = 4 && x46 = 8

----------------------------------------

(14) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, cons_0, cons_1, cons_3, cons_7, cons_2, cons_4, cons_8) -> f(1, 0, 1, 3, 7, 2, 4, 8) :|: pc = 1 && (x48:0 > 0 && x49:0 > -1 && x47:0 > -1 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_2 = 2 && cons_4 = 4 && cons_8 = 8)
f(pc, x6, x13, x42, x43, x44, x45, x46) -> f(1, 0, 1, 3, 7, 2, 4, 8) :|: pc = 1 && (x48 < 0 && x49 > -1 && x47 > -1 && x6 = 0 && x13 = 1 && x42 = 3 && x43 = 7 && x44 = 2 && x45 = 4 && x46 = 8)
Witness term starting non-terminating reduction: f(1, 0, 1, 3, 7, 2, 4, 8)
----------------------------------------

(15)
NO

----------------------------------------

(16) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 15 rulesP rules:
f_1419(v7694, v7695, v7696, v7697, v7698, v7699, 0, v7701, v7702, v7703, v7704, v7705, v7706, 1, v7708, v7726, v7709, v7727, v7710, v7728, v7711, v7729, v7712, v7730, v7713, v7731, v7720, v7723, v7721, v7732, v7733, v7734, v7735, v7714, v7715, v7716, v7717, v7718, v7719, v7722, v7724, v7725, 3, 7, 2, 4, 8) -> f_1420(v7694, v7695, v7696, v7697, v7698, v7699, 0, v7701, v7702, v7703, v7704, v7705, v7706, 1, v7708, v7726, v7709, v7727, v7710, v7728, v7711, v7729, v7712, v7730, v7713, v7731, v7720, v7723, v7721, v7732, v7733, v7734, v7735, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) :|: v7935 <= 1 + v7943 && v7935 <= v7939 && v7940 <= v7939 && v7720 + v7940 <= 1 + v7723 && v7721 + v7936 <= 1 + v7732 && 0 <= v7694 && 0 <= v7695 && 1 <= v7696 && 1 <= v7697 && 1 <= v7698 && 1 <= v7699 && 0 <= v7701 && 0 <= v7702 && 1 <= v7703 && 0 <= v7705 && 1 <= v7706 && 1 <= v7708 && 1 <= v7709 && 1 <= v7710 && 1 <= v7711 && 1 <= v7712 && 1 <= v7713 && 2 <= v7936 && 1 <= v7937 && 0 <= v7938 && v7938 <= 1 && 1 <= v7939 && 1 <= v7940 && 1 <= v7720 && 1 <= v7721 && 0 <= v7943 && 1 <= v7723 && 0 <= v7945 && 1 <= v7946 && 4 <= v7726 && 4 <= v7727 && 4 <= v7728 && 4 <= v7729 && 8 <= v7730 && 8 <= v7731 && 2 <= v7732 && 8 <= v7733 && 8 <= v7734 && 8 <= v7735 && v7708 <= v7726 && v7709 <= v7727 && v7710 <= v7728 && v7711 <= v7729 && v7712 <= v7730 && v7713 <= v7731 && v7720 <= v7723 && v7721 <= v7732 && v7696 <= v7733 && v7697 <= v7734 && v7698 <= v7735
f_1420(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7923, v7924, v7925, v7926, v7927, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) -> f_1422(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7924, v7925, v7926, v7927, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) :|: TRUE
f_1422(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7924, v7925, v7926, v7927, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) -> f_1424(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v7925, v7926, v7927, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) :|: v7959 = 1 + v7957 && 1 <= v7959
f_1424(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v7925, v7926, v7927, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) -> f_1426(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v7925, v7926, v7927, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) :|: TRUE
f_1426(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v7925, v7926, v7927, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) -> f_1428(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v8066, v7926, v7927, v7925, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) :|: TRUE
f_1428(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v8066, v7926, v7927, v7925, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) -> f_1429(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v8066, v8068, v7927, v7925, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) :|: TRUE
f_1429(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v8066, v8068, v7927, v7925, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) -> f_1430(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v8066, v8068, v8070, v7925, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) :|: v8070 = 1 + v8068 && 1 <= v8070
f_1430(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v8066, v8068, v8070, v7925, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) -> f_1431(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v8066, v8068, v8070, v7925, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) :|: TRUE
f_1431(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v8066, v8068, v8070, v7925, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) -> f_1432(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v8066, v8068, v8070, v7925, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) :|: TRUE
f_1432(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v8066, v8068, v8070, v7925, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) -> f_1433(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v8066, v8068, v8070, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) :|: 0 = 0
f_1433(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v8066, v8068, v8070, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) -> f_1434(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v8066, v8068, v8070, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) :|: v8066 != 0
f_1434(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v8066, v8068, v8070, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) -> f_1436(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v8066, v8068, v8070, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) :|: 0 = 0
f_1436(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v8066, v8068, v8070, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) -> f_1438(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v8066, v8068, v8070, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) :|: TRUE
f_1438(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v8066, v8068, v8070, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7935, v7936, v7937, v7938, v7939, v7940, v7943, v7945, v7946, 3, 7, 2, 4, 8) -> f_1416(v7915, v7916, v7917, v7918, v7919, v7920, 0, v7922, v7957, v7959, v8066, v8068, v8070, 1, v7929, v7947, v7930, v7948, v7931, v7949, v7932, v7950, v7933, v7951, v7934, v7952, v7941, v7944, v7942, v7953, v7954, v7955, v7956, v7714, v7715, v7716, v7717, v7718, v7719, v7722, v7724, v7725, 3, 7, 2, 4, 8) :|: v7714 <= 1 + v7722 && v7714 <= v7718 && v7719 <= v7718 && v7941 + v7714 <= 1 + v7944 && v7941 + v7719 <= 1 + v7944 && v7942 + v7715 <= 1 + v7953 && 0 <= v7915 && 0 <= v7916 && 1 <= v7917 && 1 <= v7918 && 1 <= v7919 && 1 <= v7920 && 0 <= v7922 && 0 <= v7957 && 1 <= v7959 && 0 <= v8068 && 1 <= v8070 && 1 <= v7929 && 1 <= v7930 && 1 <= v7931 && 1 <= v7932 && 1 <= v7933 && 1 <= v7934 && 2 <= v7715 && 1 <= v7716 && 0 <= v7717 && v7717 <= 1 && 1 <= v7718 && 1 <= v7719 && 1 <= v7941 && 1 <= v7942 && 0 <= v7722 && 1 <= v7944 && 0 <= v7724 && 1 <= v7725 && 4 <= v7947 && 4 <= v7948 && 4 <= v7949 && 4 <= v7950 && 8 <= v7951 && 8 <= v7952 && 2 <= v7953 && 8 <= v7954 && 8 <= v7955 && 8 <= v7956 && v7929 <= v7947 && v7930 <= v7948 && v7931 <= v7949 && v7932 <= v7950 && v7933 <= v7951 && v7934 <= v7952 && v7941 <= v7944 && v7942 <= v7953 && v7917 <= v7954 && v7918 <= v7955 && v7919 <= v7956
f_1416(v7694, v7695, v7696, v7697, v7698, v7699, 0, v7701, v7702, v7703, v7704, v7705, v7706, 1, v7708, v7726, v7709, v7727, v7710, v7728, v7711, v7729, v7712, v7730, v7713, v7731, v7720, v7723, v7721, v7732, v7733, v7734, v7735, v7714, v7715, v7716, v7717, v7718, v7719, v7722, v7724, v7725, 3, 7, 2, 4, 8) -> f_1419(v7694, v7695, v7696, v7697, v7698, v7699, 0, v7701, v7702, v7703, v7704, v7705, v7706, 1, v7708, v7726, v7709, v7727, v7710, v7728, v7711, v7729, v7712, v7730, v7713, v7731, v7720, v7723, v7721, v7732, v7733, v7734, v7735, v7714, v7715, v7716, v7717, v7718, v7719, v7722, v7724, v7725, 3, 7, 2, 4, 8) :|: TRUE
Combined rules. Obtained 2 rulesP rules:
f_1419(v7694:0, v7695:0, v7696:0, v7697:0, v7698:0, v7699:0, 0, v7701:0, v7702:0, v7703:0, v7704:0, v7705:0, v7706:0, 1, v7708:0, v7726:0, v7709:0, v7727:0, v7710:0, v7728:0, v7711:0, v7729:0, v7712:0, v7730:0, v7713:0, v7731:0, v7720:0, v7723:0, v7721:0, v7732:0, v7733:0, v7734:0, v7735:0, v7714:0, v7715:0, v7716:0, v7717:0, v7718:0, v7719:0, v7722:0, v7724:0, v7725:0, 3, 7, 2, 4, 8) -> f_1419(v7694:0, v7695:0, v7696:0, v7697:0, v7698:0, v7699:0, 0, v7701:0, v7957:0, 1 + v7957:0, v8066:0, v8068:0, 1 + v8068:0, 1, v7708:0, v7726:0, v7709:0, v7727:0, v7710:0, v7728:0, v7711:0, v7729:0, v7712:0, v7730:0, v7713:0, v7731:0, v7720:0, v7723:0, v7721:0, v7732:0, v7733:0, v7734:0, v7735:0, v7714:1, v7715:1, v7716:1, v7717:1, v7718:1, v7719:1, v7722:1, v7724:1, v7725:1, 3, 7, 2, 4, 8) :|: v7939:0 >= v7935:0 && v7935:0 <= 1 + v7943:0 && v7940:0 <= v7939:0 && v7720:0 + v7940:0 <= 1 + v7723:0 && v7721:0 + v7936:0 <= 1 + v7732:0 && v7694:0 > -1 && v7695:0 > -1 && v7696:0 > 0 && v7697:0 > 0 && v7698:0 > 0 && v7699:0 > 0 && v7701:0 > -1 && v7718:1 >= v7714:1 && v7714:1 <= 1 + v7722:1 && v7702:0 > -1 && v7719:1 <= v7718:1 && v7703:0 > 0 && v7720:0 + v7714:1 <= 1 + v7723:0 && v7705:0 > -1 && v7720:0 + v7719:1 <= 1 + v7723:0 && v7706:0 > 0 && v7721:0 + v7715:1 <= 1 + v7732:0 && v7708:0 > 0 && v7709:0 > 0 && v7710:0 > 0 && v7711:0 > 0 && v7712:0 > 0 && v7713:0 > 0 && v7936:0 > 1 && v7937:0 > 0 && v7957:0 > -1 && v7938:0 > -1 && v7938:0 < 2 && v8068:0 > -1 && v7939:0 > 0 && v7940:0 > 0 && v7720:0 > 0 && v7721:0 > 0 && v7943:0 > -1 && v7723:0 > 0 && v7945:0 > -1 && v7946:0 > 0 && v7715:1 > 1 && v7726:0 > 3 && v7716:1 > 0 && v7727:0 > 3 && v7717:1 > -1 && v7728:0 > 3 && v7717:1 < 2 && v7729:0 > 3 && v7718:1 > 0 && v7730:0 > 7 && v7719:1 > 0 && v7731:0 > 7 && v7732:0 > 1 && v7733:0 > 7 && v7722:1 > -1 && v7734:0 > 7 && v7735:0 > 7 && v7724:1 > -1 && v7726:0 >= v7708:0 && v7725:1 > 0 && v7727:0 >= v7709:0 && v7728:0 >= v7710:0 && v7729:0 >= v7711:0 && v7730:0 >= v7712:0 && v7731:0 >= v7713:0 && v7723:0 >= v7720:0 && v7732:0 >= v7721:0 && v7733:0 >= v7696:0 && v7734:0 >= v7697:0 && v7735:0 >= v7698:0 && v8066:0 < 0
f_1419(v7694:0, v7695:0, v7696:0, v7697:0, v7698:0, v7699:0, 0, v7701:0, v7702:0, v7703:0, v7704:0, v7705:0, v7706:0, 1, v7708:0, v7726:0, v7709:0, v7727:0, v7710:0, v7728:0, v7711:0, v7729:0, v7712:0, v7730:0, v7713:0, v7731:0, v7720:0, v7723:0, v7721:0, v7732:0, v7733:0, v7734:0, v7735:0, v7714:0, v7715:0, v7716:0, v7717:0, v7718:0, v7719:0, v7722:0, v7724:0, v7725:0, 3, 7, 2, 4, 8) -> f_1419(v7694:0, v7695:0, v7696:0, v7697:0, v7698:0, v7699:0, 0, v7701:0, v7957:0, 1 + v7957:0, v8066:0, v8068:0, 1 + v8068:0, 1, v7708:0, v7726:0, v7709:0, v7727:0, v7710:0, v7728:0, v7711:0, v7729:0, v7712:0, v7730:0, v7713:0, v7731:0, v7720:0, v7723:0, v7721:0, v7732:0, v7733:0, v7734:0, v7735:0, v7714:1, v7715:1, v7716:1, v7717:1, v7718:1, v7719:1, v7722:1, v7724:1, v7725:1, 3, 7, 2, 4, 8) :|: v7939:0 >= v7935:0 && v7935:0 <= 1 + v7943:0 && v7940:0 <= v7939:0 && v7720:0 + v7940:0 <= 1 + v7723:0 && v7721:0 + v7936:0 <= 1 + v7732:0 && v7694:0 > -1 && v7695:0 > -1 && v7696:0 > 0 && v7697:0 > 0 && v7698:0 > 0 && v7699:0 > 0 && v7701:0 > -1 && v7718:1 >= v7714:1 && v7714:1 <= 1 + v7722:1 && v7702:0 > -1 && v7719:1 <= v7718:1 && v7703:0 > 0 && v7720:0 + v7714:1 <= 1 + v7723:0 && v7705:0 > -1 && v7720:0 + v7719:1 <= 1 + v7723:0 && v7706:0 > 0 && v7721:0 + v7715:1 <= 1 + v7732:0 && v7708:0 > 0 && v7709:0 > 0 && v7710:0 > 0 && v7711:0 > 0 && v7712:0 > 0 && v7713:0 > 0 && v7936:0 > 1 && v7937:0 > 0 && v7957:0 > -1 && v7938:0 > -1 && v7938:0 < 2 && v8068:0 > -1 && v7939:0 > 0 && v7940:0 > 0 && v7720:0 > 0 && v7721:0 > 0 && v7943:0 > -1 && v7723:0 > 0 && v7945:0 > -1 && v7946:0 > 0 && v7715:1 > 1 && v7726:0 > 3 && v7716:1 > 0 && v7727:0 > 3 && v7717:1 > -1 && v7728:0 > 3 && v7717:1 < 2 && v7729:0 > 3 && v7718:1 > 0 && v7730:0 > 7 && v7719:1 > 0 && v7731:0 > 7 && v7732:0 > 1 && v7733:0 > 7 && v7722:1 > -1 && v7734:0 > 7 && v7735:0 > 7 && v7724:1 > -1 && v7726:0 >= v7708:0 && v7725:1 > 0 && v7727:0 >= v7709:0 && v7728:0 >= v7710:0 && v7729:0 >= v7711:0 && v7730:0 >= v7712:0 && v7731:0 >= v7713:0 && v7723:0 >= v7720:0 && v7732:0 >= v7721:0 && v7733:0 >= v7696:0 && v7734:0 >= v7697:0 && v7735:0 >= v7698:0 && v8066:0 > 0
Filtered unneeded arguments:
   f_1419(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47) -> f_1419(x1, x2, x3, x4, x5, x6, x8, x9, x10, x12, x13, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1419(v7694:0, v7695:0, v7696:0, v7697:0, v7698:0, v7699:0, v7701:0, v7702:0, v7703:0, v7705:0, v7706:0, v7708:0, v7726:0, v7709:0, v7727:0, v7710:0, v7728:0, v7711:0, v7729:0, v7712:0, v7730:0, v7713:0, v7731:0, v7720:0, v7723:0, v7721:0, v7732:0, v7733:0, v7734:0, v7735:0) -> f_1419(v7694:0, v7695:0, v7696:0, v7697:0, v7698:0, v7699:0, v7701:0, v7957:0, 1 + v7957:0, v8068:0, 1 + v8068:0, v7708:0, v7726:0, v7709:0, v7727:0, v7710:0, v7728:0, v7711:0, v7729:0, v7712:0, v7730:0, v7713:0, v7731:0, v7720:0, v7723:0, v7721:0, v7732:0, v7733:0, v7734:0, v7735:0) :|: v7695:0 > -1 && v7694:0 > -1 && v7696:0 > 0 && v7697:0 > 0 && v7698:0 > 0 && v7699:0 > 0 && v7701:0 > -1 && v7702:0 > -1 && v7703:0 > 0 && v7705:0 > -1 && v7706:0 > 0 && v7708:0 > 0 && v7709:0 > 0 && v7710:0 > 0 && v7711:0 > 0 && v7712:0 > 0 && v7713:0 > 0 && v7957:0 > -1 && v8068:0 > -1 && v7720:0 > 0 && v7721:0 > 0 && v7723:0 > 0 && v7726:0 > 3 && v7727:0 > 3 && v7728:0 > 3 && v7729:0 > 3 && v7730:0 > 7 && v7731:0 > 7 && v7732:0 > 1 && v7733:0 > 7 && v7734:0 > 7 && v7735:0 > 7 && v7726:0 >= v7708:0 && v7727:0 >= v7709:0 && v7728:0 >= v7710:0 && v7729:0 >= v7711:0 && v7730:0 >= v7712:0 && v7731:0 >= v7713:0 && v7723:0 >= v7720:0 && v7732:0 >= v7721:0 && v7733:0 >= v7696:0 && v7735:0 >= v7698:0 && v7734:0 >= v7697:0

----------------------------------------

(17)
Obligation:
Rules:
f_1419(v7694:0, v7695:0, v7696:0, v7697:0, v7698:0, v7699:0, v7701:0, v7702:0, v7703:0, v7705:0, v7706:0, v7708:0, v7726:0, v7709:0, v7727:0, v7710:0, v7728:0, v7711:0, v7729:0, v7712:0, v7730:0, v7713:0, v7731:0, v7720:0, v7723:0, v7721:0, v7732:0, v7733:0, v7734:0, v7735:0) -> f_1419(v7694:0, v7695:0, v7696:0, v7697:0, v7698:0, v7699:0, v7701:0, v7957:0, 1 + v7957:0, v8068:0, 1 + v8068:0, v7708:0, v7726:0, v7709:0, v7727:0, v7710:0, v7728:0, v7711:0, v7729:0, v7712:0, v7730:0, v7713:0, v7731:0, v7720:0, v7723:0, v7721:0, v7732:0, v7733:0, v7734:0, v7735:0) :|: v7695:0 > -1 && v7694:0 > -1 && v7696:0 > 0 && v7697:0 > 0 && v7698:0 > 0 && v7699:0 > 0 && v7701:0 > -1 && v7702:0 > -1 && v7703:0 > 0 && v7705:0 > -1 && v7706:0 > 0 && v7708:0 > 0 && v7709:0 > 0 && v7710:0 > 0 && v7711:0 > 0 && v7712:0 > 0 && v7713:0 > 0 && v7957:0 > -1 && v8068:0 > -1 && v7720:0 > 0 && v7721:0 > 0 && v7723:0 > 0 && v7726:0 > 3 && v7727:0 > 3 && v7728:0 > 3 && v7729:0 > 3 && v7730:0 > 7 && v7731:0 > 7 && v7732:0 > 1 && v7733:0 > 7 && v7734:0 > 7 && v7735:0 > 7 && v7726:0 >= v7708:0 && v7727:0 >= v7709:0 && v7728:0 >= v7710:0 && v7729:0 >= v7711:0 && v7730:0 >= v7712:0 && v7731:0 >= v7713:0 && v7723:0 >= v7720:0 && v7732:0 >= v7721:0 && v7733:0 >= v7696:0 && v7735:0 >= v7698:0 && v7734:0 >= v7697:0

----------------------------------------

(18) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(19)
Obligation:
Rules:
f_1419(v7694:0:0, v7695:0:0, v7696:0:0, v7697:0:0, v7698:0:0, v7699:0:0, v7701:0:0, v7702:0:0, v7703:0:0, v7705:0:0, v7706:0:0, v7708:0:0, v7726:0:0, v7709:0:0, v7727:0:0, v7710:0:0, v7728:0:0, v7711:0:0, v7729:0:0, v7712:0:0, v7730:0:0, v7713:0:0, v7731:0:0, v7720:0:0, v7723:0:0, v7721:0:0, v7732:0:0, v7733:0:0, v7734:0:0, v7735:0:0) -> f_1419(v7694:0:0, v7695:0:0, v7696:0:0, v7697:0:0, v7698:0:0, v7699:0:0, v7701:0:0, v7957:0:0, 1 + v7957:0:0, v8068:0:0, 1 + v8068:0:0, v7708:0:0, v7726:0:0, v7709:0:0, v7727:0:0, v7710:0:0, v7728:0:0, v7711:0:0, v7729:0:0, v7712:0:0, v7730:0:0, v7713:0:0, v7731:0:0, v7720:0:0, v7723:0:0, v7721:0:0, v7732:0:0, v7733:0:0, v7734:0:0, v7735:0:0) :|: v7735:0:0 >= v7698:0:0 && v7734:0:0 >= v7697:0:0 && v7733:0:0 >= v7696:0:0 && v7732:0:0 >= v7721:0:0 && v7723:0:0 >= v7720:0:0 && v7731:0:0 >= v7713:0:0 && v7730:0:0 >= v7712:0:0 && v7729:0:0 >= v7711:0:0 && v7728:0:0 >= v7710:0:0 && v7727:0:0 >= v7709:0:0 && v7726:0:0 >= v7708:0:0 && v7735:0:0 > 7 && v7734:0:0 > 7 && v7733:0:0 > 7 && v7732:0:0 > 1 && v7731:0:0 > 7 && v7730:0:0 > 7 && v7729:0:0 > 3 && v7728:0:0 > 3 && v7727:0:0 > 3 && v7726:0:0 > 3 && v7723:0:0 > 0 && v7721:0:0 > 0 && v7720:0:0 > 0 && v8068:0:0 > -1 && v7957:0:0 > -1 && v7713:0:0 > 0 && v7712:0:0 > 0 && v7711:0:0 > 0 && v7710:0:0 > 0 && v7709:0:0 > 0 && v7708:0:0 > 0 && v7706:0:0 > 0 && v7705:0:0 > -1 && v7703:0:0 > 0 && v7702:0:0 > -1 && v7701:0:0 > -1 && v7699:0:0 > 0 && v7698:0:0 > 0 && v7697:0:0 > 0 && v7696:0:0 > 0 && v7694:0:0 > -1 && v7695:0:0 > -1

----------------------------------------

(20)
Obligation:
SCC
----------------------------------------

(21) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 15 rulesP rules:
f_1378(v6463, v6464, v6465, v6466, v6467, 0, v6469, v6470, v6471, v6472, v6473, 1, v6475, v6493, v6476, v6494, v6477, v6495, v6478, v6496, v6479, v6497, v6480, v6498, v6487, v6490, v6488, v6499, v6500, v6501, v6502, v6481, v6482, v6483, v6484, v6485, v6486, v6489, v6491, v6492, 3, 7, 2, 4, 8) -> f_1379(v6463, v6464, v6465, v6466, v6467, 0, v6469, v6470, v6471, v6472, v6473, 1, v6475, v6493, v6476, v6494, v6477, v6495, v6478, v6496, v6479, v6497, v6480, v6498, v6487, v6490, v6488, v6499, v6500, v6501, v6502, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) :|: TRUE
f_1379(v6900, v6901, v6902, v6903, v6904, 0, v6906, v6907, v6908, v6909, v6910, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) -> f_1383(v6900, v6901, v6902, v6903, v6904, 0, v7121, v6907, v6908, v6909, v6910, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) :|: TRUE
f_1383(v6900, v6901, v6902, v6903, v6904, 0, v7121, v6907, v6908, v6909, v6910, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) -> f_1386(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v6908, v6909, v6910, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) :|: v7125 = 1 + v7121 && 1 <= v7125
f_1386(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v6908, v6909, v6910, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) -> f_1389(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v6908, v6909, v6910, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) :|: TRUE
f_1389(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v6908, v6909, v6910, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) -> f_1392(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v7245, v6909, v6910, v6908, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) :|: TRUE
f_1392(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v7245, v6909, v6910, v6908, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) -> f_1395(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v7245, v7249, v6910, v6908, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) :|: TRUE
f_1395(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v7245, v7249, v6910, v6908, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) -> f_1397(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v7245, v7249, v7253, v6908, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) :|: v7253 = 1 + v7249 && 1 <= v7253
f_1397(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v7245, v7249, v7253, v6908, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) -> f_1399(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v7245, v7249, v7253, v6908, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) :|: TRUE
f_1399(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v7245, v7249, v7253, v6908, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) -> f_1401(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v7245, v7249, v7253, v6908, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) :|: TRUE
f_1401(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v7245, v7249, v7253, v6908, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) -> f_1403(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v7245, v7249, v7253, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) :|: 0 = 0
f_1403(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v7245, v7249, v7253, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) -> f_1405(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v7245, v7249, v7253, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) :|: v7245 != 0
f_1405(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v7245, v7249, v7253, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) -> f_1409(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v7245, v7249, v7253, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) :|: 0 = 0
f_1409(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v7245, v7249, v7253, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) -> f_1413(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v7245, v7249, v7253, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) :|: TRUE
f_1413(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v7245, v7249, v7253, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) -> f_1373(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v7245, v7249, v7253, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6481, v6482, v6483, v6484, v6485, v6486, v6489, v6491, v6492, 3, 7, 2, 4, 8) :|: TRUE
f_1373(v6463, v6464, v6465, v6466, v6467, 0, v6469, v6470, v6471, v6472, v6473, 1, v6475, v6493, v6476, v6494, v6477, v6495, v6478, v6496, v6479, v6497, v6480, v6498, v6487, v6490, v6488, v6499, v6500, v6501, v6502, v6481, v6482, v6483, v6484, v6485, v6486, v6489, v6491, v6492, 3, 7, 2, 4, 8) -> f_1378(v6463, v6464, v6465, v6466, v6467, 0, v6469, v6470, v6471, v6472, v6473, 1, v6475, v6493, v6476, v6494, v6477, v6495, v6478, v6496, v6479, v6497, v6480, v6498, v6487, v6490, v6488, v6499, v6500, v6501, v6502, v6481, v6482, v6483, v6484, v6485, v6486, v6489, v6491, v6492, 3, 7, 2, 4, 8) :|: TRUE
Combined rules. Obtained 2 rulesP rules:
f_1378(v6463:0, v6464:0, v6465:0, v6466:0, v6467:0, 0, v6469:0, v6470:0, v6471:0, v6472:0, v6473:0, 1, v6475:0, v6493:0, v6476:0, v6494:0, v6477:0, v6495:0, v6478:0, v6496:0, v6479:0, v6497:0, v6480:0, v6498:0, v6487:0, v6490:0, v6488:0, v6499:0, v6500:0, v6501:0, v6502:0, v6481:0, v6482:0, v6483:0, v6484:0, v6485:0, v6486:0, v6489:0, v6491:0, v6492:0, 3, 7, 2, 4, 8) -> f_1378(v6463:0, v6464:0, v6465:0, v6466:0, v6467:0, 0, v7121:0, 1 + v7121:0, v7245:0, v7249:0, 1 + v7249:0, 1, v6475:0, v6493:0, v6476:0, v6494:0, v6477:0, v6495:0, v6478:0, v6496:0, v6479:0, v6497:0, v6480:0, v6498:0, v6487:0, v6490:0, v6488:0, v6499:0, v6500:0, v6501:0, v6502:0, v6481:1, v6482:1, v6483:1, v6484:1, v6485:1, v6486:1, v6489:1, v6491:1, v6492:1, 3, 7, 2, 4, 8) :|: v7121:0 > -1 && v7245:0 < 0 && v7249:0 > -1
f_1378(v6463:0, v6464:0, v6465:0, v6466:0, v6467:0, 0, v6469:0, v6470:0, v6471:0, v6472:0, v6473:0, 1, v6475:0, v6493:0, v6476:0, v6494:0, v6477:0, v6495:0, v6478:0, v6496:0, v6479:0, v6497:0, v6480:0, v6498:0, v6487:0, v6490:0, v6488:0, v6499:0, v6500:0, v6501:0, v6502:0, v6481:0, v6482:0, v6483:0, v6484:0, v6485:0, v6486:0, v6489:0, v6491:0, v6492:0, 3, 7, 2, 4, 8) -> f_1378(v6463:0, v6464:0, v6465:0, v6466:0, v6467:0, 0, v7121:0, 1 + v7121:0, v7245:0, v7249:0, 1 + v7249:0, 1, v6475:0, v6493:0, v6476:0, v6494:0, v6477:0, v6495:0, v6478:0, v6496:0, v6479:0, v6497:0, v6480:0, v6498:0, v6487:0, v6490:0, v6488:0, v6499:0, v6500:0, v6501:0, v6502:0, v6481:1, v6482:1, v6483:1, v6484:1, v6485:1, v6486:1, v6489:1, v6491:1, v6492:1, 3, 7, 2, 4, 8) :|: v7121:0 > -1 && v7245:0 > 0 && v7249:0 > -1
Removed division, modulo operations, cleaned up constraints. Obtained 2 rules.P rules:
f_1378(v6463:0, v6464:0, v6465:0, v6466:0, v6467:0, cons_0, v6469:0, v6470:0, v6471:0, v6472:0, v6473:0, cons_1, v6475:0, v6493:0, v6476:0, v6494:0, v6477:0, v6495:0, v6478:0, v6496:0, v6479:0, v6497:0, v6480:0, v6498:0, v6487:0, v6490:0, v6488:0, v6499:0, v6500:0, v6501:0, v6502:0, v6481:0, v6482:0, v6483:0, v6484:0, v6485:0, v6486:0, v6489:0, v6491:0, v6492:0, cons_3, cons_7, cons_2, cons_4, cons_8) -> f_1378(v6463:0, v6464:0, v6465:0, v6466:0, v6467:0, 0, v7121:0, 1 + v7121:0, v7245:0, v7249:0, 1 + v7249:0, 1, v6475:0, v6493:0, v6476:0, v6494:0, v6477:0, v6495:0, v6478:0, v6496:0, v6479:0, v6497:0, v6480:0, v6498:0, v6487:0, v6490:0, v6488:0, v6499:0, v6500:0, v6501:0, v6502:0, v6481:1, v6482:1, v6483:1, v6484:1, v6485:1, v6486:1, v6489:1, v6491:1, v6492:1, 3, 7, 2, 4, 8) :|: v7245:0 < 0 && v7249:0 > -1 && v7121:0 > -1 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_2 = 2 && cons_4 = 4 && cons_8 = 8
f_1378(v6463:0, v6464:0, v6465:0, v6466:0, v6467:0, cons_0, v6469:0, v6470:0, v6471:0, v6472:0, v6473:0, cons_1, v6475:0, v6493:0, v6476:0, v6494:0, v6477:0, v6495:0, v6478:0, v6496:0, v6479:0, v6497:0, v6480:0, v6498:0, v6487:0, v6490:0, v6488:0, v6499:0, v6500:0, v6501:0, v6502:0, v6481:0, v6482:0, v6483:0, v6484:0, v6485:0, v6486:0, v6489:0, v6491:0, v6492:0, cons_3, cons_7, cons_2, cons_4, cons_8) -> f_1378(v6463:0, v6464:0, v6465:0, v6466:0, v6467:0, 0, v7121:0, 1 + v7121:0, v7245:0, v7249:0, 1 + v7249:0, 1, v6475:0, v6493:0, v6476:0, v6494:0, v6477:0, v6495:0, v6478:0, v6496:0, v6479:0, v6497:0, v6480:0, v6498:0, v6487:0, v6490:0, v6488:0, v6499:0, v6500:0, v6501:0, v6502:0, v6481:1, v6482:1, v6483:1, v6484:1, v6485:1, v6486:1, v6489:1, v6491:1, v6492:1, 3, 7, 2, 4, 8) :|: v7245:0 > 0 && v7249:0 > -1 && v7121:0 > -1 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_2 = 2 && cons_4 = 4 && cons_8 = 8

----------------------------------------

(22)
Obligation:
Rules:
f_1378(v6463:0, v6464:0, v6465:0, v6466:0, v6467:0, cons_0, v6469:0, v6470:0, v6471:0, v6472:0, v6473:0, cons_1, v6475:0, v6493:0, v6476:0, v6494:0, v6477:0, v6495:0, v6478:0, v6496:0, v6479:0, v6497:0, v6480:0, v6498:0, v6487:0, v6490:0, v6488:0, v6499:0, v6500:0, v6501:0, v6502:0, v6481:0, v6482:0, v6483:0, v6484:0, v6485:0, v6486:0, v6489:0, v6491:0, v6492:0, cons_3, cons_7, cons_2, cons_4, cons_8) -> f_1378(v6463:0, v6464:0, v6465:0, v6466:0, v6467:0, 0, v7121:0, 1 + v7121:0, v7245:0, v7249:0, 1 + v7249:0, 1, v6475:0, v6493:0, v6476:0, v6494:0, v6477:0, v6495:0, v6478:0, v6496:0, v6479:0, v6497:0, v6480:0, v6498:0, v6487:0, v6490:0, v6488:0, v6499:0, v6500:0, v6501:0, v6502:0, v6481:1, v6482:1, v6483:1, v6484:1, v6485:1, v6486:1, v6489:1, v6491:1, v6492:1, 3, 7, 2, 4, 8) :|: v7245:0 < 0 && v7249:0 > -1 && v7121:0 > -1 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_2 = 2 && cons_4 = 4 && cons_8 = 8
f_1378(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44) -> f_1378(x, x1, x2, x3, x4, 0, x45, 1 + x45, x46, x47, 1 + x47, 1, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x48, x49, x50, x51, x52, x53, x54, x55, x56, 3, 7, 2, 4, 8) :|: x46 > 0 && x47 > -1 && x45 > -1 && x5 = 0 && x11 = 1 && x40 = 3 && x41 = 7 && x42 = 2 && x43 = 4 && x44 = 8

----------------------------------------

(23) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(24)
Obligation:
Rules:
f_1378(v6463:0:0, v6464:0:0, v6465:0:0, v6466:0:0, v6467:0:0, cons_0, v6469:0:0, v6470:0:0, v6471:0:0, v6472:0:0, v6473:0:0, cons_1, v6475:0:0, v6493:0:0, v6476:0:0, v6494:0:0, v6477:0:0, v6495:0:0, v6478:0:0, v6496:0:0, v6479:0:0, v6497:0:0, v6480:0:0, v6498:0:0, v6487:0:0, v6490:0:0, v6488:0:0, v6499:0:0, v6500:0:0, v6501:0:0, v6502:0:0, v6481:0:0, v6482:0:0, v6483:0:0, v6484:0:0, v6485:0:0, v6486:0:0, v6489:0:0, v6491:0:0, v6492:0:0, cons_3, cons_7, cons_2, cons_4, cons_8) -> f_1378(v6463:0:0, v6464:0:0, v6465:0:0, v6466:0:0, v6467:0:0, 0, v7121:0:0, 1 + v7121:0:0, v7245:0:0, v7249:0:0, 1 + v7249:0:0, 1, v6475:0:0, v6493:0:0, v6476:0:0, v6494:0:0, v6477:0:0, v6495:0:0, v6478:0:0, v6496:0:0, v6479:0:0, v6497:0:0, v6480:0:0, v6498:0:0, v6487:0:0, v6490:0:0, v6488:0:0, v6499:0:0, v6500:0:0, v6501:0:0, v6502:0:0, v6481:1:0, v6482:1:0, v6483:1:0, v6484:1:0, v6485:1:0, v6486:1:0, v6489:1:0, v6491:1:0, v6492:1:0, 3, 7, 2, 4, 8) :|: v7245:0:0 < 0 && v7249:0:0 > -1 && v7121:0:0 > -1 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_2 = 2 && cons_4 = 4 && cons_8 = 8
f_1378(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44) -> f_1378(x, x1, x2, x3, x4, 0, x45, 1 + x45, x46, x47, 1 + x47, 1, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x48, x49, x50, x51, x52, x53, x54, x55, x56, 3, 7, 2, 4, 8) :|: x46 > 0 && x47 > -1 && x45 > -1 && x5 = 0 && x11 = 1 && x40 = 3 && x41 = 7 && x42 = 2 && x43 = 4 && x44 = 8

----------------------------------------

(25) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1378(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45) -> f_1378(x6, x12, x41, x42, x43, x44, x45)

----------------------------------------

(26)
Obligation:
Rules:
f_1378(cons_0, cons_1, cons_3, cons_7, cons_2, cons_4, cons_8) -> f_1378(0, 1, 3, 7, 2, 4, 8) :|: v7245:0:0 < 0 && v7249:0:0 > -1 && v7121:0:0 > -1 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_2 = 2 && cons_4 = 4 && cons_8 = 8
f_1378(x5, x11, x40, x41, x42, x43, x44) -> f_1378(0, 1, 3, 7, 2, 4, 8) :|: x46 > 0 && x47 > -1 && x45 > -1 && x5 = 0 && x11 = 1 && x40 = 3 && x41 = 7 && x42 = 2 && x43 = 4 && x44 = 8

----------------------------------------

(27) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, cons_0, cons_1, cons_3, cons_7, cons_2, cons_4, cons_8) -> f(1, 0, 1, 3, 7, 2, 4, 8) :|: pc = 1 && (v7245:0:0 < 0 && v7249:0:0 > -1 && v7121:0:0 > -1 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_2 = 2 && cons_4 = 4 && cons_8 = 8)
f(pc, x5, x11, x40, x41, x42, x43, x44) -> f(1, 0, 1, 3, 7, 2, 4, 8) :|: pc = 1 && (x46 > 0 && x47 > -1 && x45 > -1 && x5 = 0 && x11 = 1 && x40 = 3 && x41 = 7 && x42 = 2 && x43 = 4 && x44 = 8)
Witness term starting non-terminating reduction: f(1, 0, 1, 3, 7, 2, 4, 8)
----------------------------------------

(28)
NO

----------------------------------------

(29) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 15 rulesP rules:
f_1378(v6463, v6464, v6465, v6466, v6467, 0, v6469, v6470, v6471, v6472, v6473, 1, v6475, v6493, v6476, v6494, v6477, v6495, v6478, v6496, v6479, v6497, v6480, v6498, v6487, v6490, v6488, v6499, v6500, v6501, v6502, v6481, v6482, v6483, v6484, v6485, v6486, v6489, v6491, v6492, 3, 7, 2, 4, 8) -> f_1379(v6463, v6464, v6465, v6466, v6467, 0, v6469, v6470, v6471, v6472, v6473, 1, v6475, v6493, v6476, v6494, v6477, v6495, v6478, v6496, v6479, v6497, v6480, v6498, v6487, v6490, v6488, v6499, v6500, v6501, v6502, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) :|: v6921 < v6490 && v6920 <= 1 + v6928 && v6918 <= v6923 && v6487 + v6918 <= 1 + v6490 && v6488 + v6919 <= 1 + v6499 && v6921 <= v6463 && v6921 <= v6464 && 0 <= v6463 && 0 <= v6464 && 1 <= v6465 && 1 <= v6466 && 1 <= v6467 && 0 <= v6469 && 1 <= v6470 && 0 <= v6472 && 1 <= v6473 && 1 <= v6475 && 1 <= v6476 && 1 <= v6477 && 1 <= v6478 && 1 <= v6479 && 1 <= v6480 && 1 <= v6918 && 2 <= v6919 && 0 <= v6921 && v6921 <= 1 && 1 <= v6922 && 1 <= v6923 && 1 <= v6487 && 1 <= v6488 && 0 <= v6926 && 1 <= v6490 && 0 <= v6928 && 1 <= v6929 && 4 <= v6493 && 4 <= v6494 && 4 <= v6495 && 4 <= v6496 && 8 <= v6497 && 8 <= v6498 && 2 <= v6499 && 8 <= v6500 && 8 <= v6501 && 8 <= v6502 && v6475 <= v6493 && v6476 <= v6494 && v6477 <= v6495 && v6478 <= v6496 && v6479 <= v6497 && v6480 <= v6498 && v6487 <= v6490 && v6488 <= v6499 && v6465 <= v6500 && v6466 <= v6501 && v6467 <= v6502
f_1379(v6900, v6901, v6902, v6903, v6904, 0, v6906, v6907, v6908, v6909, v6910, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) -> f_1383(v6900, v6901, v6902, v6903, v6904, 0, v7121, v6907, v6908, v6909, v6910, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) :|: TRUE
f_1383(v6900, v6901, v6902, v6903, v6904, 0, v7121, v6907, v6908, v6909, v6910, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) -> f_1386(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v6908, v6909, v6910, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) :|: v7125 = 1 + v7121 && 1 <= v7125
f_1386(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v6908, v6909, v6910, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) -> f_1389(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v6908, v6909, v6910, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) :|: TRUE
f_1389(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v6908, v6909, v6910, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) -> f_1392(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v7245, v6909, v6910, v6908, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) :|: TRUE
f_1392(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v7245, v6909, v6910, v6908, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) -> f_1395(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v7245, v7249, v6910, v6908, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) :|: TRUE
f_1395(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v7245, v7249, v6910, v6908, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) -> f_1397(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v7245, v7249, v7253, v6908, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) :|: v7253 = 1 + v7249 && 1 <= v7253
f_1397(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v7245, v7249, v7253, v6908, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) -> f_1399(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v7245, v7249, v7253, v6908, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) :|: TRUE
f_1399(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v7245, v7249, v7253, v6908, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) -> f_1401(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v7245, v7249, v7253, v6908, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) :|: TRUE
f_1401(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v7245, v7249, v7253, v6908, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) -> f_1403(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v7245, v7249, v7253, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) :|: 0 = 0
f_1403(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v7245, v7249, v7253, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) -> f_1405(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v7245, v7249, v7253, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) :|: v7245 != 0
f_1405(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v7245, v7249, v7253, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) -> f_1409(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v7245, v7249, v7253, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) :|: 0 = 0
f_1409(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v7245, v7249, v7253, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) -> f_1413(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v7245, v7249, v7253, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) :|: TRUE
f_1413(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v7245, v7249, v7253, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6918, v6919, v6920, v6921, v6922, v6923, v6926, v6928, v6929, 3, 7, 2, 4, 8) -> f_1373(v6900, v6901, v6902, v6903, v6904, 0, v7121, v7125, v7245, v7249, v7253, 1, v6912, v6930, v6913, v6931, v6914, v6932, v6915, v6933, v6916, v6934, v6917, v6935, v6924, v6927, v6925, v6936, v6937, v6938, v6939, v6481, v6482, v6483, v6484, v6485, v6486, v6489, v6491, v6492, 3, 7, 2, 4, 8) :|: v6484 < v6927 && v6483 <= 1 + v6491 && v6481 <= v6486 && v6924 + v6481 <= 1 + v6927 && v6925 + v6482 <= 1 + v6936 && v6484 <= v6900 && v6484 <= v6901 && 0 <= v6900 && 0 <= v6901 && 1 <= v6902 && 1 <= v6903 && 1 <= v6904 && 0 <= v7121 && 1 <= v7125 && 0 <= v7249 && 1 <= v7253 && 1 <= v6912 && 1 <= v6913 && 1 <= v6914 && 1 <= v6915 && 1 <= v6916 && 1 <= v6917 && 1 <= v6481 && 2 <= v6482 && 0 <= v6484 && v6484 <= 1 && 1 <= v6485 && 1 <= v6486 && 1 <= v6924 && 1 <= v6925 && 0 <= v6489 && 1 <= v6927 && 0 <= v6491 && 1 <= v6492 && 4 <= v6930 && 4 <= v6931 && 4 <= v6932 && 4 <= v6933 && 8 <= v6934 && 8 <= v6935 && 2 <= v6936 && 8 <= v6937 && 8 <= v6938 && 8 <= v6939 && v6912 <= v6930 && v6913 <= v6931 && v6914 <= v6932 && v6915 <= v6933 && v6916 <= v6934 && v6917 <= v6935 && v6924 <= v6927 && v6925 <= v6936 && v6902 <= v6937 && v6903 <= v6938 && v6904 <= v6939
f_1373(v6463, v6464, v6465, v6466, v6467, 0, v6469, v6470, v6471, v6472, v6473, 1, v6475, v6493, v6476, v6494, v6477, v6495, v6478, v6496, v6479, v6497, v6480, v6498, v6487, v6490, v6488, v6499, v6500, v6501, v6502, v6481, v6482, v6483, v6484, v6485, v6486, v6489, v6491, v6492, 3, 7, 2, 4, 8) -> f_1378(v6463, v6464, v6465, v6466, v6467, 0, v6469, v6470, v6471, v6472, v6473, 1, v6475, v6493, v6476, v6494, v6477, v6495, v6478, v6496, v6479, v6497, v6480, v6498, v6487, v6490, v6488, v6499, v6500, v6501, v6502, v6481, v6482, v6483, v6484, v6485, v6486, v6489, v6491, v6492, 3, 7, 2, 4, 8) :|: TRUE
Combined rules. Obtained 2 rulesP rules:
f_1378(v6463:0, v6464:0, v6465:0, v6466:0, v6467:0, 0, v6469:0, v6470:0, v6471:0, v6472:0, v6473:0, 1, v6475:0, v6493:0, v6476:0, v6494:0, v6477:0, v6495:0, v6478:0, v6496:0, v6479:0, v6497:0, v6480:0, v6498:0, v6487:0, v6490:0, v6488:0, v6499:0, v6500:0, v6501:0, v6502:0, v6481:0, v6482:0, v6483:0, v6484:0, v6485:0, v6486:0, v6489:0, v6491:0, v6492:0, 3, 7, 2, 4, 8) -> f_1378(v6463:0, v6464:0, v6465:0, v6466:0, v6467:0, 0, v7121:0, 1 + v7121:0, v7245:0, v7249:0, 1 + v7249:0, 1, v6475:0, v6493:0, v6476:0, v6494:0, v6477:0, v6495:0, v6478:0, v6496:0, v6479:0, v6497:0, v6480:0, v6498:0, v6487:0, v6490:0, v6488:0, v6499:0, v6500:0, v6501:0, v6502:0, v6481:1, v6482:1, v6483:1, v6484:1, v6485:1, v6486:1, v6489:1, v6491:1, v6492:1, 3, 7, 2, 4, 8) :|: v6920:0 <= 1 + v6928:0 && v6921:0 < v6490:0 && v6923:0 >= v6918:0 && v6487:0 + v6918:0 <= 1 + v6490:0 && v6488:0 + v6919:0 <= 1 + v6499:0 && v6921:0 <= v6463:0 && v6921:0 <= v6464:0 && v6463:0 > -1 && v6464:0 > -1 && v6465:0 > 0 && v6466:0 > 0 && v6467:0 > 0 && v6469:0 > -1 && v6483:1 <= 1 + v6491:1 && v6490:0 > v6484:1 && v6470:0 > 0 && v6486:1 >= v6481:1 && v6472:0 > -1 && v6487:0 + v6481:1 <= 1 + v6490:0 && v6473:0 > 0 && v6488:0 + v6482:1 <= 1 + v6499:0 && v6475:0 > 0 && v6484:1 <= v6463:0 && v6476:0 > 0 && v6484:1 <= v6464:0 && v6477:0 > 0 && v6478:0 > 0 && v6479:0 > 0 && v6480:0 > 0 && v6918:0 > 0 && v6919:0 > 1 && v7121:0 > -1 && v6921:0 > -1 && v6921:0 < 2 && v7249:0 > -1 && v6922:0 > 0 && v6923:0 > 0 && v6487:0 > 0 && v6488:0 > 0 && v6926:0 > -1 && v6490:0 > 0 && v6928:0 > -1 && v6929:0 > 0 && v6481:1 > 0 && v6493:0 > 3 && v6482:1 > 1 && v6494:0 > 3 && v6484:1 > -1 && v6495:0 > 3 && v6484:1 < 2 && v6496:0 > 3 && v6485:1 > 0 && v6497:0 > 7 && v6486:1 > 0 && v6498:0 > 7 && v6499:0 > 1 && v6500:0 > 7 && v6489:1 > -1 && v6501:0 > 7 && v6502:0 > 7 && v6491:1 > -1 && v6493:0 >= v6475:0 && v6492:1 > 0 && v6494:0 >= v6476:0 && v6495:0 >= v6477:0 && v6496:0 >= v6478:0 && v6497:0 >= v6479:0 && v6498:0 >= v6480:0 && v6490:0 >= v6487:0 && v6499:0 >= v6488:0 && v6500:0 >= v6465:0 && v6501:0 >= v6466:0 && v6502:0 >= v6467:0 && v7245:0 < 0
f_1378(v6463:0, v6464:0, v6465:0, v6466:0, v6467:0, 0, v6469:0, v6470:0, v6471:0, v6472:0, v6473:0, 1, v6475:0, v6493:0, v6476:0, v6494:0, v6477:0, v6495:0, v6478:0, v6496:0, v6479:0, v6497:0, v6480:0, v6498:0, v6487:0, v6490:0, v6488:0, v6499:0, v6500:0, v6501:0, v6502:0, v6481:0, v6482:0, v6483:0, v6484:0, v6485:0, v6486:0, v6489:0, v6491:0, v6492:0, 3, 7, 2, 4, 8) -> f_1378(v6463:0, v6464:0, v6465:0, v6466:0, v6467:0, 0, v7121:0, 1 + v7121:0, v7245:0, v7249:0, 1 + v7249:0, 1, v6475:0, v6493:0, v6476:0, v6494:0, v6477:0, v6495:0, v6478:0, v6496:0, v6479:0, v6497:0, v6480:0, v6498:0, v6487:0, v6490:0, v6488:0, v6499:0, v6500:0, v6501:0, v6502:0, v6481:1, v6482:1, v6483:1, v6484:1, v6485:1, v6486:1, v6489:1, v6491:1, v6492:1, 3, 7, 2, 4, 8) :|: v6920:0 <= 1 + v6928:0 && v6921:0 < v6490:0 && v6923:0 >= v6918:0 && v6487:0 + v6918:0 <= 1 + v6490:0 && v6488:0 + v6919:0 <= 1 + v6499:0 && v6921:0 <= v6463:0 && v6921:0 <= v6464:0 && v6463:0 > -1 && v6464:0 > -1 && v6465:0 > 0 && v6466:0 > 0 && v6467:0 > 0 && v6469:0 > -1 && v6483:1 <= 1 + v6491:1 && v6490:0 > v6484:1 && v6470:0 > 0 && v6486:1 >= v6481:1 && v6472:0 > -1 && v6487:0 + v6481:1 <= 1 + v6490:0 && v6473:0 > 0 && v6488:0 + v6482:1 <= 1 + v6499:0 && v6475:0 > 0 && v6484:1 <= v6463:0 && v6476:0 > 0 && v6484:1 <= v6464:0 && v6477:0 > 0 && v6478:0 > 0 && v6479:0 > 0 && v6480:0 > 0 && v6918:0 > 0 && v6919:0 > 1 && v7121:0 > -1 && v6921:0 > -1 && v6921:0 < 2 && v7249:0 > -1 && v6922:0 > 0 && v6923:0 > 0 && v6487:0 > 0 && v6488:0 > 0 && v6926:0 > -1 && v6490:0 > 0 && v6928:0 > -1 && v6929:0 > 0 && v6481:1 > 0 && v6493:0 > 3 && v6482:1 > 1 && v6494:0 > 3 && v6484:1 > -1 && v6495:0 > 3 && v6484:1 < 2 && v6496:0 > 3 && v6485:1 > 0 && v6497:0 > 7 && v6486:1 > 0 && v6498:0 > 7 && v6499:0 > 1 && v6500:0 > 7 && v6489:1 > -1 && v6501:0 > 7 && v6502:0 > 7 && v6491:1 > -1 && v6493:0 >= v6475:0 && v6492:1 > 0 && v6494:0 >= v6476:0 && v6495:0 >= v6477:0 && v6496:0 >= v6478:0 && v6497:0 >= v6479:0 && v6498:0 >= v6480:0 && v6490:0 >= v6487:0 && v6499:0 >= v6488:0 && v6500:0 >= v6465:0 && v6501:0 >= v6466:0 && v6502:0 >= v6467:0 && v7245:0 > 0
Filtered unneeded arguments:
   f_1378(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45) -> f_1378(x1, x2, x3, x4, x5, x7, x8, x10, x11, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1378(v6463:0, v6464:0, v6465:0, v6466:0, v6467:0, v6469:0, v6470:0, v6472:0, v6473:0, v6475:0, v6493:0, v6476:0, v6494:0, v6477:0, v6495:0, v6478:0, v6496:0, v6479:0, v6497:0, v6480:0, v6498:0, v6487:0, v6490:0, v6488:0, v6499:0, v6500:0, v6501:0, v6502:0) -> f_1378(v6463:0, v6464:0, v6465:0, v6466:0, v6467:0, v7121:0, 1 + v7121:0, v7249:0, 1 + v7249:0, v6475:0, v6493:0, v6476:0, v6494:0, v6477:0, v6495:0, v6478:0, v6496:0, v6479:0, v6497:0, v6480:0, v6498:0, v6487:0, v6490:0, v6488:0, v6499:0, v6500:0, v6501:0, v6502:0) :|: v6464:0 > -1 && v6463:0 > -1 && v6465:0 > 0 && v6466:0 > 0 && v6467:0 > 0 && v6469:0 > -1 && v6470:0 > 0 && v6472:0 > -1 && v6473:0 > 0 && v6475:0 > 0 && v6476:0 > 0 && v6477:0 > 0 && v6478:0 > 0 && v6479:0 > 0 && v6480:0 > 0 && v7121:0 > -1 && v7249:0 > -1 && v6487:0 > 0 && v6488:0 > 0 && v6490:0 > 0 && v6493:0 > 3 && v6494:0 > 3 && v6495:0 > 3 && v6496:0 > 3 && v6497:0 > 7 && v6498:0 > 7 && v6499:0 > 1 && v6500:0 > 7 && v6501:0 > 7 && v6502:0 > 7 && v6493:0 >= v6475:0 && v6494:0 >= v6476:0 && v6495:0 >= v6477:0 && v6496:0 >= v6478:0 && v6497:0 >= v6479:0 && v6498:0 >= v6480:0 && v6490:0 >= v6487:0 && v6499:0 >= v6488:0 && v6500:0 >= v6465:0 && v6502:0 >= v6467:0 && v6501:0 >= v6466:0

----------------------------------------

(30)
Obligation:
Rules:
f_1378(v6463:0, v6464:0, v6465:0, v6466:0, v6467:0, v6469:0, v6470:0, v6472:0, v6473:0, v6475:0, v6493:0, v6476:0, v6494:0, v6477:0, v6495:0, v6478:0, v6496:0, v6479:0, v6497:0, v6480:0, v6498:0, v6487:0, v6490:0, v6488:0, v6499:0, v6500:0, v6501:0, v6502:0) -> f_1378(v6463:0, v6464:0, v6465:0, v6466:0, v6467:0, v7121:0, 1 + v7121:0, v7249:0, 1 + v7249:0, v6475:0, v6493:0, v6476:0, v6494:0, v6477:0, v6495:0, v6478:0, v6496:0, v6479:0, v6497:0, v6480:0, v6498:0, v6487:0, v6490:0, v6488:0, v6499:0, v6500:0, v6501:0, v6502:0) :|: v6464:0 > -1 && v6463:0 > -1 && v6465:0 > 0 && v6466:0 > 0 && v6467:0 > 0 && v6469:0 > -1 && v6470:0 > 0 && v6472:0 > -1 && v6473:0 > 0 && v6475:0 > 0 && v6476:0 > 0 && v6477:0 > 0 && v6478:0 > 0 && v6479:0 > 0 && v6480:0 > 0 && v7121:0 > -1 && v7249:0 > -1 && v6487:0 > 0 && v6488:0 > 0 && v6490:0 > 0 && v6493:0 > 3 && v6494:0 > 3 && v6495:0 > 3 && v6496:0 > 3 && v6497:0 > 7 && v6498:0 > 7 && v6499:0 > 1 && v6500:0 > 7 && v6501:0 > 7 && v6502:0 > 7 && v6493:0 >= v6475:0 && v6494:0 >= v6476:0 && v6495:0 >= v6477:0 && v6496:0 >= v6478:0 && v6497:0 >= v6479:0 && v6498:0 >= v6480:0 && v6490:0 >= v6487:0 && v6499:0 >= v6488:0 && v6500:0 >= v6465:0 && v6502:0 >= v6467:0 && v6501:0 >= v6466:0

----------------------------------------

(31)
Obligation:
SCC
----------------------------------------

(32) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 11 rulesP rules:
f_1257(v4199, v4200, v4201, v4202, v4203, v4207, v4205, 1, v4204, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) -> f_1265(v4199, v4200, v4201, v4202, v4203, v4207, v4430, 1, v4204, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) :|: TRUE
f_1265(v4199, v4200, v4201, v4202, v4203, v4207, v4430, 1, v4204, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) -> f_1274(v4199, v4200, v4201, v4202, v4203, v4207, v4430, 1, v4204, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) :|: v4430 != 0
f_1274(v4199, v4200, v4201, v4202, v4203, v4207, v4430, 1, v4204, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) -> f_1284(v4199, v4200, v4201, v4202, v4203, v4207, v4430, 1, v4204, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) :|: 0 = 0
f_1284(v4199, v4200, v4201, v4202, v4203, v4207, v4430, 1, v4204, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) -> f_1294(v4199, v4200, v4201, v4202, v4203, v4207, v4430, 1, v4204, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) :|: TRUE
f_1294(v4199, v4200, v4201, v4202, v4203, v4207, v4430, 1, v4204, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) -> f_1305(v4199, v4200, v4201, v4202, v4203, v4207, v4430, 1, v4204, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) :|: TRUE
f_1305(v4199, v4200, v4201, v4202, v4203, v4207, v4430, 1, v4204, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) -> f_1313(v4199, v4200, v4201, v4202, v4203, v4207, v4430, 1, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) :|: 0 = 0
f_1313(v4199, v4200, v4201, v4202, v4203, v4207, v4430, 1, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) -> f_1321(v4199, v4200, v4201, v4202, v4203, v4207, v4430, 1, v5651, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) :|: v5651 = 1 + v4207 && 3 <= v5651
f_1321(v4199, v4200, v4201, v4202, v4203, v4207, v4430, 1, v5651, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) -> f_1329(v4199, v4200, v4201, v4202, v4203, v4207, v4430, 1, v5651, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) :|: TRUE
f_1329(v4199, v4200, v4201, v4202, v4203, v4207, v4430, 1, v5651, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) -> f_1337(v4199, v4200, v4201, v4202, v4203, v4207, v4430, 1, v5651, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) :|: TRUE
f_1337(v4199, v4200, v4201, v4202, v4203, v4207, v4430, 1, v5651, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) -> f_1249(v4199, v4200, v4201, v4202, v4203, v4207, v4430, 1, v5651, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) :|: TRUE
f_1249(v4199, v4200, v4201, v4202, v4203, v4204, v4205, 1, v4207, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) -> f_1257(v4199, v4200, v4201, v4202, v4203, v4207, v4205, 1, v4204, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_1257(v4199:0, v4200:0, v4201:0, v4202:0, v4203:0, v4207:0, v4205:0, 1, v4204:0, v4208:0, v4225:0, v4209:0, v4226:0, v4210:0, v4227:0, v4211:0, v4228:0, v4212:0, v4229:0, v4213:0, v4230:0, v4219:0, v4222:0, v4220:0, v4231:0, v4232:0, v4233:0, v4234:0, v4214:0, v4215:0, v4216:0, 0, v4218:0, v4221:0, v4223:0, v4224:0, 3, 7, 2, 4, 8) -> f_1257(v4199:0, v4200:0, v4201:0, v4202:0, v4203:0, 1 + v4207:0, v4430:0, 1, v4207:0, v4208:0, v4225:0, v4209:0, v4226:0, v4210:0, v4227:0, v4211:0, v4228:0, v4212:0, v4229:0, v4213:0, v4230:0, v4219:0, v4222:0, v4220:0, v4231:0, v4232:0, v4233:0, v4234:0, v4214:0, v4215:0, v4216:0, 0, v4218:0, v4221:0, v4223:0, v4224:0, 3, 7, 2, 4, 8) :|: v4207:0 > 1 && v4430:0 < 0
f_1257(v4199:0, v4200:0, v4201:0, v4202:0, v4203:0, v4207:0, v4205:0, 1, v4204:0, v4208:0, v4225:0, v4209:0, v4226:0, v4210:0, v4227:0, v4211:0, v4228:0, v4212:0, v4229:0, v4213:0, v4230:0, v4219:0, v4222:0, v4220:0, v4231:0, v4232:0, v4233:0, v4234:0, v4214:0, v4215:0, v4216:0, 0, v4218:0, v4221:0, v4223:0, v4224:0, 3, 7, 2, 4, 8) -> f_1257(v4199:0, v4200:0, v4201:0, v4202:0, v4203:0, 1 + v4207:0, v4430:0, 1, v4207:0, v4208:0, v4225:0, v4209:0, v4226:0, v4210:0, v4227:0, v4211:0, v4228:0, v4212:0, v4229:0, v4213:0, v4230:0, v4219:0, v4222:0, v4220:0, v4231:0, v4232:0, v4233:0, v4234:0, v4214:0, v4215:0, v4216:0, 0, v4218:0, v4221:0, v4223:0, v4224:0, 3, 7, 2, 4, 8) :|: v4207:0 > 1 && v4430:0 > 0
Filtered unneeded arguments:
   f_1257(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41) -> f_1257(x6)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1257(v4207:0) -> f_1257(1 + v4207:0) :|: v4207:0 > 1

----------------------------------------

(33)
Obligation:
Rules:
f_1257(v4207:0) -> f_1257(1 + v4207:0) :|: v4207:0 > 1

----------------------------------------

(34) IntTRSNonPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, v4207:0) -> f(1, 1 + v4207:0) :|: pc = 1 && v4207:0 > 1
Proved unsatisfiability of the following formula, indicating that the system is never left after entering:
(((run2_0 = ((1 * 1)) and run2_1 = ((1 * 1) + (run1_1 * 1))) and (((run1_0 * 1)) = ((1 * 1)) and ((run1_1 * 1)) > ((1 * 1)))) and !(((run2_0 * 1)) = ((1 * 1)) and ((run2_1 * 1)) > ((1 * 1))))
Proved satisfiability of the following formula, indicating that the system is entered at least once:
((run2_0 = ((1 * 1)) and run2_1 = ((1 * 1) + (run1_1 * 1))) and (((run1_0 * 1)) = ((1 * 1)) and ((run1_1 * 1)) > ((1 * 1))))

----------------------------------------

(35)
NO

----------------------------------------

(36) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 11 rulesP rules:
f_1257(v4199, v4200, v4201, v4202, v4203, v4207, v4205, 1, v4204, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) -> f_1265(v4199, v4200, v4201, v4202, v4203, v4207, v4430, 1, v4204, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) :|: TRUE
f_1265(v4199, v4200, v4201, v4202, v4203, v4207, v4430, 1, v4204, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) -> f_1274(v4199, v4200, v4201, v4202, v4203, v4207, v4430, 1, v4204, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) :|: v4430 != 0
f_1274(v4199, v4200, v4201, v4202, v4203, v4207, v4430, 1, v4204, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) -> f_1284(v4199, v4200, v4201, v4202, v4203, v4207, v4430, 1, v4204, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) :|: 0 = 0
f_1284(v4199, v4200, v4201, v4202, v4203, v4207, v4430, 1, v4204, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) -> f_1294(v4199, v4200, v4201, v4202, v4203, v4207, v4430, 1, v4204, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) :|: TRUE
f_1294(v4199, v4200, v4201, v4202, v4203, v4207, v4430, 1, v4204, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) -> f_1305(v4199, v4200, v4201, v4202, v4203, v4207, v4430, 1, v4204, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) :|: TRUE
f_1305(v4199, v4200, v4201, v4202, v4203, v4207, v4430, 1, v4204, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) -> f_1313(v4199, v4200, v4201, v4202, v4203, v4207, v4430, 1, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) :|: 0 = 0
f_1313(v4199, v4200, v4201, v4202, v4203, v4207, v4430, 1, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) -> f_1321(v4199, v4200, v4201, v4202, v4203, v4207, v4430, 1, v5651, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) :|: v5651 = 1 + v4207 && 3 <= v5651
f_1321(v4199, v4200, v4201, v4202, v4203, v4207, v4430, 1, v5651, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) -> f_1329(v4199, v4200, v4201, v4202, v4203, v4207, v4430, 1, v5651, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) :|: TRUE
f_1329(v4199, v4200, v4201, v4202, v4203, v4207, v4430, 1, v5651, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) -> f_1337(v4199, v4200, v4201, v4202, v4203, v4207, v4430, 1, v5651, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) :|: TRUE
f_1337(v4199, v4200, v4201, v4202, v4203, v4207, v4430, 1, v5651, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) -> f_1249(v4199, v4200, v4201, v4202, v4203, v4207, v4430, 1, v5651, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) :|: v4214 <= v4218 && v4219 + v4214 <= 1 + v4222 && v4220 + v4215 <= 1 + v4231 && 0 <= v4199 && 0 <= v4200 && 1 <= v4201 && 1 <= v4202 && 1 <= v4203 && 1 <= v4207 && 2 <= v5651 && 1 <= v4208 && 1 <= v4209 && 1 <= v4210 && 1 <= v4211 && 1 <= v4212 && 1 <= v4213 && 1 <= v4214 && 2 <= v4215 && 1 <= v4216 && 1 <= v4218 && 1 <= v4219 && 1 <= v4220 && 0 <= v4221 && 1 <= v4222 && 0 <= v4223 && 1 <= v4224 && 4 <= v4225 && 4 <= v4226 && 4 <= v4227 && 4 <= v4228 && 8 <= v4229 && 8 <= v4230 && 2 <= v4231 && 8 <= v4232 && 8 <= v4233 && 8 <= v4234 && v4208 <= v4225 && v4209 <= v4226 && v4210 <= v4227 && v4211 <= v4228 && v4212 <= v4229 && v4213 <= v4230 && v4219 <= v4222 && v4220 <= v4231 && v4201 <= v4232 && v4202 <= v4233 && v4203 <= v4234
f_1249(v4199, v4200, v4201, v4202, v4203, v4204, v4205, 1, v4207, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) -> f_1257(v4199, v4200, v4201, v4202, v4203, v4207, v4205, 1, v4204, v4208, v4225, v4209, v4226, v4210, v4227, v4211, v4228, v4212, v4229, v4213, v4230, v4219, v4222, v4220, v4231, v4232, v4233, v4234, v4214, v4215, v4216, 0, v4218, v4221, v4223, v4224, 3, 7, 2, 4, 8) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_1257(v4199:0, v4200:0, v4201:0, v4202:0, v4203:0, v4207:0, v4205:0, 1, v4204:0, v4208:0, v4225:0, v4209:0, v4226:0, v4210:0, v4227:0, v4211:0, v4228:0, v4212:0, v4229:0, v4213:0, v4230:0, v4219:0, v4222:0, v4220:0, v4231:0, v4232:0, v4233:0, v4234:0, v4214:0, v4215:0, v4216:0, 0, v4218:0, v4221:0, v4223:0, v4224:0, 3, 7, 2, 4, 8) -> f_1257(v4199:0, v4200:0, v4201:0, v4202:0, v4203:0, 1 + v4207:0, v4430:0, 1, v4207:0, v4208:0, v4225:0, v4209:0, v4226:0, v4210:0, v4227:0, v4211:0, v4228:0, v4212:0, v4229:0, v4213:0, v4230:0, v4219:0, v4222:0, v4220:0, v4231:0, v4232:0, v4233:0, v4234:0, v4214:0, v4215:0, v4216:0, 0, v4218:0, v4221:0, v4223:0, v4224:0, 3, 7, 2, 4, 8) :|: v4207:0 > 1 && v4219:0 + v4214:0 <= 1 + v4222:0 && v4218:0 >= v4214:0 && v4220:0 + v4215:0 <= 1 + v4231:0 && v4199:0 > -1 && v4200:0 > -1 && v4201:0 > 0 && v4202:0 > 0 && v4203:0 > 0 && v4208:0 > 0 && v4209:0 > 0 && v4210:0 > 0 && v4211:0 > 0 && v4212:0 > 0 && v4213:0 > 0 && v4214:0 > 0 && v4215:0 > 1 && v4216:0 > 0 && v4218:0 > 0 && v4219:0 > 0 && v4220:0 > 0 && v4221:0 > -1 && v4222:0 > 0 && v4223:0 > -1 && v4224:0 > 0 && v4225:0 > 3 && v4226:0 > 3 && v4227:0 > 3 && v4228:0 > 3 && v4229:0 > 7 && v4230:0 > 7 && v4231:0 > 1 && v4232:0 > 7 && v4233:0 > 7 && v4234:0 > 7 && v4225:0 >= v4208:0 && v4226:0 >= v4209:0 && v4227:0 >= v4210:0 && v4228:0 >= v4211:0 && v4430:0 < 0 && v4229:0 >= v4212:0 && v4230:0 >= v4213:0 && v4222:0 >= v4219:0 && v4231:0 >= v4220:0 && v4232:0 >= v4201:0 && v4234:0 >= v4203:0 && v4233:0 >= v4202:0
f_1257(v4199:0, v4200:0, v4201:0, v4202:0, v4203:0, v4207:0, v4205:0, 1, v4204:0, v4208:0, v4225:0, v4209:0, v4226:0, v4210:0, v4227:0, v4211:0, v4228:0, v4212:0, v4229:0, v4213:0, v4230:0, v4219:0, v4222:0, v4220:0, v4231:0, v4232:0, v4233:0, v4234:0, v4214:0, v4215:0, v4216:0, 0, v4218:0, v4221:0, v4223:0, v4224:0, 3, 7, 2, 4, 8) -> f_1257(v4199:0, v4200:0, v4201:0, v4202:0, v4203:0, 1 + v4207:0, v4430:0, 1, v4207:0, v4208:0, v4225:0, v4209:0, v4226:0, v4210:0, v4227:0, v4211:0, v4228:0, v4212:0, v4229:0, v4213:0, v4230:0, v4219:0, v4222:0, v4220:0, v4231:0, v4232:0, v4233:0, v4234:0, v4214:0, v4215:0, v4216:0, 0, v4218:0, v4221:0, v4223:0, v4224:0, 3, 7, 2, 4, 8) :|: v4207:0 > 1 && v4219:0 + v4214:0 <= 1 + v4222:0 && v4218:0 >= v4214:0 && v4220:0 + v4215:0 <= 1 + v4231:0 && v4199:0 > -1 && v4200:0 > -1 && v4201:0 > 0 && v4202:0 > 0 && v4203:0 > 0 && v4208:0 > 0 && v4209:0 > 0 && v4210:0 > 0 && v4211:0 > 0 && v4212:0 > 0 && v4213:0 > 0 && v4214:0 > 0 && v4215:0 > 1 && v4216:0 > 0 && v4218:0 > 0 && v4219:0 > 0 && v4220:0 > 0 && v4221:0 > -1 && v4222:0 > 0 && v4223:0 > -1 && v4224:0 > 0 && v4225:0 > 3 && v4226:0 > 3 && v4227:0 > 3 && v4228:0 > 3 && v4229:0 > 7 && v4230:0 > 7 && v4231:0 > 1 && v4232:0 > 7 && v4233:0 > 7 && v4234:0 > 7 && v4225:0 >= v4208:0 && v4226:0 >= v4209:0 && v4227:0 >= v4210:0 && v4228:0 >= v4211:0 && v4430:0 > 0 && v4229:0 >= v4212:0 && v4230:0 >= v4213:0 && v4222:0 >= v4219:0 && v4231:0 >= v4220:0 && v4232:0 >= v4201:0 && v4234:0 >= v4203:0 && v4233:0 >= v4202:0
Filtered unneeded arguments:
   f_1257(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41) -> f_1257(x1, x2, x3, x4, x5, x6, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x33, x34, x35, x36)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1257(v4199:0, v4200:0, v4201:0, v4202:0, v4203:0, v4207:0, v4208:0, v4225:0, v4209:0, v4226:0, v4210:0, v4227:0, v4211:0, v4228:0, v4212:0, v4229:0, v4213:0, v4230:0, v4219:0, v4222:0, v4220:0, v4231:0, v4232:0, v4233:0, v4234:0, v4214:0, v4215:0, v4216:0, v4218:0, v4221:0, v4223:0, v4224:0) -> f_1257(v4199:0, v4200:0, v4201:0, v4202:0, v4203:0, 1 + v4207:0, v4208:0, v4225:0, v4209:0, v4226:0, v4210:0, v4227:0, v4211:0, v4228:0, v4212:0, v4229:0, v4213:0, v4230:0, v4219:0, v4222:0, v4220:0, v4231:0, v4232:0, v4233:0, v4234:0, v4214:0, v4215:0, v4216:0, v4218:0, v4221:0, v4223:0, v4224:0) :|: v4219:0 + v4214:0 <= 1 + v4222:0 && v4207:0 > 1 && v4218:0 >= v4214:0 && v4220:0 + v4215:0 <= 1 + v4231:0 && v4199:0 > -1 && v4200:0 > -1 && v4201:0 > 0 && v4202:0 > 0 && v4203:0 > 0 && v4208:0 > 0 && v4209:0 > 0 && v4210:0 > 0 && v4211:0 > 0 && v4212:0 > 0 && v4213:0 > 0 && v4214:0 > 0 && v4215:0 > 1 && v4216:0 > 0 && v4218:0 > 0 && v4219:0 > 0 && v4220:0 > 0 && v4221:0 > -1 && v4222:0 > 0 && v4223:0 > -1 && v4224:0 > 0 && v4225:0 > 3 && v4226:0 > 3 && v4227:0 > 3 && v4228:0 > 3 && v4229:0 > 7 && v4230:0 > 7 && v4231:0 > 1 && v4232:0 > 7 && v4233:0 > 7 && v4234:0 > 7 && v4225:0 >= v4208:0 && v4226:0 >= v4209:0 && v4227:0 >= v4210:0 && v4228:0 >= v4211:0 && v4229:0 >= v4212:0 && v4230:0 >= v4213:0 && v4222:0 >= v4219:0 && v4231:0 >= v4220:0 && v4232:0 >= v4201:0 && v4233:0 >= v4202:0 && v4234:0 >= v4203:0

----------------------------------------

(37)
Obligation:
Rules:
f_1257(v4199:0, v4200:0, v4201:0, v4202:0, v4203:0, v4207:0, v4208:0, v4225:0, v4209:0, v4226:0, v4210:0, v4227:0, v4211:0, v4228:0, v4212:0, v4229:0, v4213:0, v4230:0, v4219:0, v4222:0, v4220:0, v4231:0, v4232:0, v4233:0, v4234:0, v4214:0, v4215:0, v4216:0, v4218:0, v4221:0, v4223:0, v4224:0) -> f_1257(v4199:0, v4200:0, v4201:0, v4202:0, v4203:0, 1 + v4207:0, v4208:0, v4225:0, v4209:0, v4226:0, v4210:0, v4227:0, v4211:0, v4228:0, v4212:0, v4229:0, v4213:0, v4230:0, v4219:0, v4222:0, v4220:0, v4231:0, v4232:0, v4233:0, v4234:0, v4214:0, v4215:0, v4216:0, v4218:0, v4221:0, v4223:0, v4224:0) :|: v4219:0 + v4214:0 <= 1 + v4222:0 && v4207:0 > 1 && v4218:0 >= v4214:0 && v4220:0 + v4215:0 <= 1 + v4231:0 && v4199:0 > -1 && v4200:0 > -1 && v4201:0 > 0 && v4202:0 > 0 && v4203:0 > 0 && v4208:0 > 0 && v4209:0 > 0 && v4210:0 > 0 && v4211:0 > 0 && v4212:0 > 0 && v4213:0 > 0 && v4214:0 > 0 && v4215:0 > 1 && v4216:0 > 0 && v4218:0 > 0 && v4219:0 > 0 && v4220:0 > 0 && v4221:0 > -1 && v4222:0 > 0 && v4223:0 > -1 && v4224:0 > 0 && v4225:0 > 3 && v4226:0 > 3 && v4227:0 > 3 && v4228:0 > 3 && v4229:0 > 7 && v4230:0 > 7 && v4231:0 > 1 && v4232:0 > 7 && v4233:0 > 7 && v4234:0 > 7 && v4225:0 >= v4208:0 && v4226:0 >= v4209:0 && v4227:0 >= v4210:0 && v4228:0 >= v4211:0 && v4229:0 >= v4212:0 && v4230:0 >= v4213:0 && v4222:0 >= v4219:0 && v4231:0 >= v4220:0 && v4232:0 >= v4201:0 && v4233:0 >= v4202:0 && v4234:0 >= v4203:0

----------------------------------------

(38) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(39)
Obligation:
Rules:
f_1257(v4199:0:0, v4200:0:0, v4201:0:0, v4202:0:0, v4203:0:0, v4207:0:0, v4208:0:0, v4225:0:0, v4209:0:0, v4226:0:0, v4210:0:0, v4227:0:0, v4211:0:0, v4228:0:0, v4212:0:0, v4229:0:0, v4213:0:0, v4230:0:0, v4219:0:0, v4222:0:0, v4220:0:0, v4231:0:0, v4232:0:0, v4233:0:0, v4234:0:0, v4214:0:0, v4215:0:0, v4216:0:0, v4218:0:0, v4221:0:0, v4223:0:0, v4224:0:0) -> f_1257(v4199:0:0, v4200:0:0, v4201:0:0, v4202:0:0, v4203:0:0, 1 + v4207:0:0, v4208:0:0, v4225:0:0, v4209:0:0, v4226:0:0, v4210:0:0, v4227:0:0, v4211:0:0, v4228:0:0, v4212:0:0, v4229:0:0, v4213:0:0, v4230:0:0, v4219:0:0, v4222:0:0, v4220:0:0, v4231:0:0, v4232:0:0, v4233:0:0, v4234:0:0, v4214:0:0, v4215:0:0, v4216:0:0, v4218:0:0, v4221:0:0, v4223:0:0, v4224:0:0) :|: v4233:0:0 >= v4202:0:0 && v4234:0:0 >= v4203:0:0 && v4232:0:0 >= v4201:0:0 && v4231:0:0 >= v4220:0:0 && v4222:0:0 >= v4219:0:0 && v4230:0:0 >= v4213:0:0 && v4229:0:0 >= v4212:0:0 && v4228:0:0 >= v4211:0:0 && v4227:0:0 >= v4210:0:0 && v4226:0:0 >= v4209:0:0 && v4225:0:0 >= v4208:0:0 && v4234:0:0 > 7 && v4233:0:0 > 7 && v4232:0:0 > 7 && v4231:0:0 > 1 && v4230:0:0 > 7 && v4229:0:0 > 7 && v4228:0:0 > 3 && v4227:0:0 > 3 && v4226:0:0 > 3 && v4225:0:0 > 3 && v4224:0:0 > 0 && v4223:0:0 > -1 && v4222:0:0 > 0 && v4221:0:0 > -1 && v4220:0:0 > 0 && v4219:0:0 > 0 && v4218:0:0 > 0 && v4216:0:0 > 0 && v4215:0:0 > 1 && v4214:0:0 > 0 && v4213:0:0 > 0 && v4212:0:0 > 0 && v4211:0:0 > 0 && v4210:0:0 > 0 && v4209:0:0 > 0 && v4208:0:0 > 0 && v4203:0:0 > 0 && v4202:0:0 > 0 && v4201:0:0 > 0 && v4200:0:0 > -1 && v4199:0:0 > -1 && v4220:0:0 + v4215:0:0 <= 1 + v4231:0:0 && v4218:0:0 >= v4214:0:0 && v4207:0:0 > 1 && v4219:0:0 + v4214:0:0 <= 1 + v4222:0:0

----------------------------------------

(40)
Obligation:
SCC
----------------------------------------

(41) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 14 rulesP rules:
f_1204(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3722, v3723, v3724, v3725, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) -> f_1213(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v3723, v3724, v3725, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) :|: v3943 = 1 + v3807 && 1 <= v3943
f_1213(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v3723, v3724, v3725, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) -> f_1221(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v3723, v3724, v3725, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) :|: TRUE
f_1221(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v3723, v3724, v3725, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) -> f_1229(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v3724, v3725, v3723, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) :|: TRUE
f_1229(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v3724, v3725, v3723, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) -> f_1237(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v4118, v3725, v3723, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) :|: TRUE
f_1237(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v4118, v3725, v3723, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) -> f_1246(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v4118, v4126, v3723, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) :|: v4126 = 1 + v4118 && 1 <= v4126
f_1246(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v4118, v4126, v3723, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) -> f_1255(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v4118, v4126, v3723, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) :|: TRUE
f_1255(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v4118, v4126, v3723, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) -> f_1263(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v4118, v4126, v3723, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) :|: TRUE
f_1263(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v4118, v4126, v3723, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) -> f_1271(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v4118, v4126, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) :|: 0 = 0
f_1271(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v4118, v4126, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) -> f_1280(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v4118, v4126, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) :|: v4113 != 0
f_1280(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v4118, v4126, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) -> f_1290(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v4118, v4126, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) :|: 0 = 0
f_1290(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v4118, v4126, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) -> f_1300(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v4118, v4126, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) :|: TRUE
f_1300(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v4118, v4126, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) -> f_1309(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v4118, v4126, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) :|: TRUE
f_1309(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v4118, v4126, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) -> f_1195(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v4118, v4126, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) :|: TRUE
f_1195(v3715, v3716, v3717, v3718, v3719, 0, v3721, v3722, v3723, v3724, v3725, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) -> f_1204(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3722, v3723, v3724, v3725, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) :|: TRUE
Combined rules. Obtained 2 rulesP rules:
f_1204(v3715:0, v3716:0, v3717:0, v3718:0, v3719:0, 0, v3807:0, v3722:0, v3723:0, v3724:0, v3725:0, 1, v3727:0, v3741:0, v3728:0, v3742:0, v3729:0, v3743:0, v3730:0, v3744:0, v3731:0, v3745:0, v3732:0, v3746:0, v3737:0, v3738:0, v3747:0, v3748:0, v3749:0, v3750:0, v3733:0, v3734:0, v3735:0, v3736:0, v3739:0, v3740:0, 3, 7, 2, 4, 8) -> f_1204(v3715:0, v3716:0, v3717:0, v3718:0, v3719:0, 0, v3807:1, 1 + v3807:0, v4113:0, v4118:0, 1 + v4118:0, 1, v3727:0, v3741:0, v3728:0, v3742:0, v3729:0, v3743:0, v3730:0, v3744:0, v3731:0, v3745:0, v3732:0, v3746:0, v3737:0, v3738:0, v3747:0, v3748:0, v3749:0, v3750:0, v3733:0, v3734:0, v3735:0, v3736:0, v3739:0, v3740:0, 3, 7, 2, 4, 8) :|: v3807:0 > -1 && v4113:0 < 0 && v4118:0 > -1
f_1204(v3715:0, v3716:0, v3717:0, v3718:0, v3719:0, 0, v3807:0, v3722:0, v3723:0, v3724:0, v3725:0, 1, v3727:0, v3741:0, v3728:0, v3742:0, v3729:0, v3743:0, v3730:0, v3744:0, v3731:0, v3745:0, v3732:0, v3746:0, v3737:0, v3738:0, v3747:0, v3748:0, v3749:0, v3750:0, v3733:0, v3734:0, v3735:0, v3736:0, v3739:0, v3740:0, 3, 7, 2, 4, 8) -> f_1204(v3715:0, v3716:0, v3717:0, v3718:0, v3719:0, 0, v3807:1, 1 + v3807:0, v4113:0, v4118:0, 1 + v4118:0, 1, v3727:0, v3741:0, v3728:0, v3742:0, v3729:0, v3743:0, v3730:0, v3744:0, v3731:0, v3745:0, v3732:0, v3746:0, v3737:0, v3738:0, v3747:0, v3748:0, v3749:0, v3750:0, v3733:0, v3734:0, v3735:0, v3736:0, v3739:0, v3740:0, 3, 7, 2, 4, 8) :|: v3807:0 > -1 && v4113:0 > 0 && v4118:0 > -1
Filtered unneeded arguments:
   f_1204(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41) -> f_1204(x7)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1204(v3807:0) -> f_1204(v3807:1) :|: v3807:0 > -1

----------------------------------------

(42)
Obligation:
Rules:
f_1204(v3807:0) -> f_1204(v3807:1) :|: v3807:0 > -1

----------------------------------------

(43) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, v3807:0) -> f(1, v3807:1) :|: pc = 1 && v3807:0 > -1
Witness term starting non-terminating reduction: f(1, 0)
----------------------------------------

(44)
NO

----------------------------------------

(45) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 14 rulesP rules:
f_1204(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3722, v3723, v3724, v3725, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) -> f_1213(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v3723, v3724, v3725, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) :|: v3943 = 1 + v3807 && 1 <= v3943
f_1213(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v3723, v3724, v3725, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) -> f_1221(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v3723, v3724, v3725, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) :|: TRUE
f_1221(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v3723, v3724, v3725, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) -> f_1229(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v3724, v3725, v3723, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) :|: TRUE
f_1229(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v3724, v3725, v3723, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) -> f_1237(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v4118, v3725, v3723, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) :|: TRUE
f_1237(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v4118, v3725, v3723, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) -> f_1246(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v4118, v4126, v3723, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) :|: v4126 = 1 + v4118 && 1 <= v4126
f_1246(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v4118, v4126, v3723, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) -> f_1255(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v4118, v4126, v3723, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) :|: TRUE
f_1255(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v4118, v4126, v3723, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) -> f_1263(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v4118, v4126, v3723, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) :|: TRUE
f_1263(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v4118, v4126, v3723, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) -> f_1271(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v4118, v4126, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) :|: 0 = 0
f_1271(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v4118, v4126, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) -> f_1280(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v4118, v4126, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) :|: v4113 != 0
f_1280(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v4118, v4126, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) -> f_1290(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v4118, v4126, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) :|: 0 = 0
f_1290(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v4118, v4126, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) -> f_1300(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v4118, v4126, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) :|: TRUE
f_1300(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v4118, v4126, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) -> f_1309(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v4118, v4126, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) :|: TRUE
f_1309(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v4118, v4126, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) -> f_1195(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3943, v4113, v4118, v4126, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) :|: v3738 + v3734 <= 1 + v3747 && 0 <= v3715 && 0 <= v3716 && 1 <= v3717 && 1 <= v3718 && 1 <= v3719 && 0 <= v3807 && 1 <= v3943 && 0 <= v4118 && 1 <= v4126 && 1 <= v3727 && 1 <= v3728 && 1 <= v3729 && 1 <= v3730 && 1 <= v3731 && 1 <= v3732 && v3733 <= 0 && 2 <= v3734 && 1 <= v3735 && 1 <= v3736 && 1 <= v3737 && 1 <= v3738 && 0 <= v3739 && 1 <= v3740 && 4 <= v3741 && 4 <= v3742 && 4 <= v3743 && 4 <= v3744 && 8 <= v3745 && 8 <= v3746 && 2 <= v3747 && 8 <= v3748 && 8 <= v3749 && 8 <= v3750 && v3727 <= v3741 && v3728 <= v3742 && v3729 <= v3743 && v3730 <= v3744 && v3731 <= v3745 && v3732 <= v3746 && 0 <= 0 && v3738 <= v3747 && v3717 <= v3748 && v3718 <= v3749 && v3719 <= v3750
f_1195(v3715, v3716, v3717, v3718, v3719, 0, v3721, v3722, v3723, v3724, v3725, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) -> f_1204(v3715, v3716, v3717, v3718, v3719, 0, v3807, v3722, v3723, v3724, v3725, 1, v3727, v3741, v3728, v3742, v3729, v3743, v3730, v3744, v3731, v3745, v3732, v3746, v3737, v3738, v3747, v3748, v3749, v3750, v3733, v3734, v3735, v3736, v3739, v3740, 3, 7, 2, 4, 8) :|: TRUE
Combined rules. Obtained 2 rulesP rules:
f_1204(v3715:0, v3716:0, v3717:0, v3718:0, v3719:0, 0, v3807:0, v3722:0, v3723:0, v3724:0, v3725:0, 1, v3727:0, v3741:0, v3728:0, v3742:0, v3729:0, v3743:0, v3730:0, v3744:0, v3731:0, v3745:0, v3732:0, v3746:0, v3737:0, v3738:0, v3747:0, v3748:0, v3749:0, v3750:0, v3733:0, v3734:0, v3735:0, v3736:0, v3739:0, v3740:0, 3, 7, 2, 4, 8) -> f_1204(v3715:0, v3716:0, v3717:0, v3718:0, v3719:0, 0, v3807:1, 1 + v3807:0, v4113:0, v4118:0, 1 + v4118:0, 1, v3727:0, v3741:0, v3728:0, v3742:0, v3729:0, v3743:0, v3730:0, v3744:0, v3731:0, v3745:0, v3732:0, v3746:0, v3737:0, v3738:0, v3747:0, v3748:0, v3749:0, v3750:0, v3733:0, v3734:0, v3735:0, v3736:0, v3739:0, v3740:0, 3, 7, 2, 4, 8) :|: v3715:0 > -1 && v3738:0 + v3734:0 <= 1 + v3747:0 && v3716:0 > -1 && v3717:0 > 0 && v3718:0 > 0 && v3719:0 > 0 && v3807:0 > -1 && v4118:0 > -1 && v3727:0 > 0 && v3728:0 > 0 && v3729:0 > 0 && v3730:0 > 0 && v3731:0 > 0 && v3732:0 > 0 && v3733:0 < 1 && v3734:0 > 1 && v3735:0 > 0 && v3736:0 > 0 && v3737:0 > 0 && v3738:0 > 0 && v3739:0 > -1 && v3740:0 > 0 && v3741:0 > 3 && v3742:0 > 3 && v3743:0 > 3 && v3744:0 > 3 && v3745:0 > 7 && v3746:0 > 7 && v3747:0 > 1 && v3748:0 > 7 && v3749:0 > 7 && v3750:0 > 7 && v3741:0 >= v3727:0 && v3742:0 >= v3728:0 && v3743:0 >= v3729:0 && v3744:0 >= v3730:0 && v3745:0 >= v3731:0 && v3746:0 >= v3732:0 && v3747:0 >= v3738:0 && v4113:0 < 0 && v3748:0 >= v3717:0 && v3750:0 >= v3719:0 && v3749:0 >= v3718:0
f_1204(v3715:0, v3716:0, v3717:0, v3718:0, v3719:0, 0, v3807:0, v3722:0, v3723:0, v3724:0, v3725:0, 1, v3727:0, v3741:0, v3728:0, v3742:0, v3729:0, v3743:0, v3730:0, v3744:0, v3731:0, v3745:0, v3732:0, v3746:0, v3737:0, v3738:0, v3747:0, v3748:0, v3749:0, v3750:0, v3733:0, v3734:0, v3735:0, v3736:0, v3739:0, v3740:0, 3, 7, 2, 4, 8) -> f_1204(v3715:0, v3716:0, v3717:0, v3718:0, v3719:0, 0, v3807:1, 1 + v3807:0, v4113:0, v4118:0, 1 + v4118:0, 1, v3727:0, v3741:0, v3728:0, v3742:0, v3729:0, v3743:0, v3730:0, v3744:0, v3731:0, v3745:0, v3732:0, v3746:0, v3737:0, v3738:0, v3747:0, v3748:0, v3749:0, v3750:0, v3733:0, v3734:0, v3735:0, v3736:0, v3739:0, v3740:0, 3, 7, 2, 4, 8) :|: v3715:0 > -1 && v3738:0 + v3734:0 <= 1 + v3747:0 && v3716:0 > -1 && v3717:0 > 0 && v3718:0 > 0 && v3719:0 > 0 && v3807:0 > -1 && v4118:0 > -1 && v3727:0 > 0 && v3728:0 > 0 && v3729:0 > 0 && v3730:0 > 0 && v3731:0 > 0 && v3732:0 > 0 && v3733:0 < 1 && v3734:0 > 1 && v3735:0 > 0 && v3736:0 > 0 && v3737:0 > 0 && v3738:0 > 0 && v3739:0 > -1 && v3740:0 > 0 && v3741:0 > 3 && v3742:0 > 3 && v3743:0 > 3 && v3744:0 > 3 && v3745:0 > 7 && v3746:0 > 7 && v3747:0 > 1 && v3748:0 > 7 && v3749:0 > 7 && v3750:0 > 7 && v3741:0 >= v3727:0 && v3742:0 >= v3728:0 && v3743:0 >= v3729:0 && v3744:0 >= v3730:0 && v3745:0 >= v3731:0 && v3746:0 >= v3732:0 && v3747:0 >= v3738:0 && v4113:0 > 0 && v3748:0 >= v3717:0 && v3750:0 >= v3719:0 && v3749:0 >= v3718:0
Filtered unneeded arguments:
   f_1204(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41) -> f_1204(x1, x2, x3, x4, x5, x7, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1204(v3715:0, v3716:0, v3717:0, v3718:0, v3719:0, v3807:0, v3727:0, v3741:0, v3728:0, v3742:0, v3729:0, v3743:0, v3730:0, v3744:0, v3731:0, v3745:0, v3732:0, v3746:0, v3737:0, v3738:0, v3747:0, v3748:0, v3749:0, v3750:0, v3733:0, v3734:0, v3735:0, v3736:0, v3739:0, v3740:0) -> f_1204(v3715:0, v3716:0, v3717:0, v3718:0, v3719:0, v3807:1, v3727:0, v3741:0, v3728:0, v3742:0, v3729:0, v3743:0, v3730:0, v3744:0, v3731:0, v3745:0, v3732:0, v3746:0, v3737:0, v3738:0, v3747:0, v3748:0, v3749:0, v3750:0, v3733:0, v3734:0, v3735:0, v3736:0, v3739:0, v3740:0) :|: v3738:0 + v3734:0 <= 1 + v3747:0 && v3715:0 > -1 && v3716:0 > -1 && v3717:0 > 0 && v3718:0 > 0 && v3719:0 > 0 && v3807:0 > -1 && v3727:0 > 0 && v3728:0 > 0 && v3729:0 > 0 && v3730:0 > 0 && v3731:0 > 0 && v3732:0 > 0 && v3733:0 < 1 && v3734:0 > 1 && v3735:0 > 0 && v3736:0 > 0 && v3737:0 > 0 && v3738:0 > 0 && v3739:0 > -1 && v3740:0 > 0 && v3741:0 > 3 && v3742:0 > 3 && v3743:0 > 3 && v3744:0 > 3 && v3745:0 > 7 && v3746:0 > 7 && v3747:0 > 1 && v3748:0 > 7 && v3749:0 > 7 && v3750:0 > 7 && v3741:0 >= v3727:0 && v3742:0 >= v3728:0 && v3743:0 >= v3729:0 && v3744:0 >= v3730:0 && v3745:0 >= v3731:0 && v3746:0 >= v3732:0 && v3747:0 >= v3738:0 && v3748:0 >= v3717:0 && v3749:0 >= v3718:0 && v3750:0 >= v3719:0

----------------------------------------

(46)
Obligation:
Rules:
f_1204(v3715:0, v3716:0, v3717:0, v3718:0, v3719:0, v3807:0, v3727:0, v3741:0, v3728:0, v3742:0, v3729:0, v3743:0, v3730:0, v3744:0, v3731:0, v3745:0, v3732:0, v3746:0, v3737:0, v3738:0, v3747:0, v3748:0, v3749:0, v3750:0, v3733:0, v3734:0, v3735:0, v3736:0, v3739:0, v3740:0) -> f_1204(v3715:0, v3716:0, v3717:0, v3718:0, v3719:0, v3807:1, v3727:0, v3741:0, v3728:0, v3742:0, v3729:0, v3743:0, v3730:0, v3744:0, v3731:0, v3745:0, v3732:0, v3746:0, v3737:0, v3738:0, v3747:0, v3748:0, v3749:0, v3750:0, v3733:0, v3734:0, v3735:0, v3736:0, v3739:0, v3740:0) :|: v3738:0 + v3734:0 <= 1 + v3747:0 && v3715:0 > -1 && v3716:0 > -1 && v3717:0 > 0 && v3718:0 > 0 && v3719:0 > 0 && v3807:0 > -1 && v3727:0 > 0 && v3728:0 > 0 && v3729:0 > 0 && v3730:0 > 0 && v3731:0 > 0 && v3732:0 > 0 && v3733:0 < 1 && v3734:0 > 1 && v3735:0 > 0 && v3736:0 > 0 && v3737:0 > 0 && v3738:0 > 0 && v3739:0 > -1 && v3740:0 > 0 && v3741:0 > 3 && v3742:0 > 3 && v3743:0 > 3 && v3744:0 > 3 && v3745:0 > 7 && v3746:0 > 7 && v3747:0 > 1 && v3748:0 > 7 && v3749:0 > 7 && v3750:0 > 7 && v3741:0 >= v3727:0 && v3742:0 >= v3728:0 && v3743:0 >= v3729:0 && v3744:0 >= v3730:0 && v3745:0 >= v3731:0 && v3746:0 >= v3732:0 && v3747:0 >= v3738:0 && v3748:0 >= v3717:0 && v3749:0 >= v3718:0 && v3750:0 >= v3719:0

----------------------------------------

(47) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(48)
Obligation:
Rules:
f_1204(v3715:0:0, v3716:0:0, v3717:0:0, v3718:0:0, v3719:0:0, v3807:0:0, v3727:0:0, v3741:0:0, v3728:0:0, v3742:0:0, v3729:0:0, v3743:0:0, v3730:0:0, v3744:0:0, v3731:0:0, v3745:0:0, v3732:0:0, v3746:0:0, v3737:0:0, v3738:0:0, v3747:0:0, v3748:0:0, v3749:0:0, v3750:0:0, v3733:0:0, v3734:0:0, v3735:0:0, v3736:0:0, v3739:0:0, v3740:0:0) -> f_1204(v3715:0:0, v3716:0:0, v3717:0:0, v3718:0:0, v3719:0:0, v3807:1:0, v3727:0:0, v3741:0:0, v3728:0:0, v3742:0:0, v3729:0:0, v3743:0:0, v3730:0:0, v3744:0:0, v3731:0:0, v3745:0:0, v3732:0:0, v3746:0:0, v3737:0:0, v3738:0:0, v3747:0:0, v3748:0:0, v3749:0:0, v3750:0:0, v3733:0:0, v3734:0:0, v3735:0:0, v3736:0:0, v3739:0:0, v3740:0:0) :|: v3749:0:0 >= v3718:0:0 && v3750:0:0 >= v3719:0:0 && v3748:0:0 >= v3717:0:0 && v3747:0:0 >= v3738:0:0 && v3746:0:0 >= v3732:0:0 && v3745:0:0 >= v3731:0:0 && v3744:0:0 >= v3730:0:0 && v3743:0:0 >= v3729:0:0 && v3742:0:0 >= v3728:0:0 && v3741:0:0 >= v3727:0:0 && v3750:0:0 > 7 && v3749:0:0 > 7 && v3748:0:0 > 7 && v3747:0:0 > 1 && v3746:0:0 > 7 && v3745:0:0 > 7 && v3744:0:0 > 3 && v3743:0:0 > 3 && v3742:0:0 > 3 && v3741:0:0 > 3 && v3740:0:0 > 0 && v3739:0:0 > -1 && v3738:0:0 > 0 && v3737:0:0 > 0 && v3736:0:0 > 0 && v3735:0:0 > 0 && v3734:0:0 > 1 && v3733:0:0 < 1 && v3732:0:0 > 0 && v3731:0:0 > 0 && v3730:0:0 > 0 && v3729:0:0 > 0 && v3728:0:0 > 0 && v3727:0:0 > 0 && v3807:0:0 > -1 && v3719:0:0 > 0 && v3718:0:0 > 0 && v3717:0:0 > 0 && v3716:0:0 > -1 && v3715:0:0 > -1 && v3738:0:0 + v3734:0:0 <= 1 + v3747:0:0

----------------------------------------

(49)
Obligation:
SCC
----------------------------------------

(50) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 11 rulesP rules:
f_1183(v3082, v3083, v3084, v3085, v3086, v3090, v3088, 1, v3087, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) -> f_1193(v3082, v3083, v3084, v3085, v3086, v3090, v3624, 1, v3087, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) :|: TRUE
f_1193(v3082, v3083, v3084, v3085, v3086, v3090, v3624, 1, v3087, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) -> f_1202(v3082, v3083, v3084, v3085, v3086, v3090, v3624, 1, v3087, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) :|: v3624 != 0
f_1202(v3082, v3083, v3084, v3085, v3086, v3090, v3624, 1, v3087, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) -> f_1211(v3082, v3083, v3084, v3085, v3086, v3090, v3624, 1, v3087, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) :|: 0 = 0
f_1211(v3082, v3083, v3084, v3085, v3086, v3090, v3624, 1, v3087, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) -> f_1219(v3082, v3083, v3084, v3085, v3086, v3090, v3624, 1, v3087, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) :|: TRUE
f_1219(v3082, v3083, v3084, v3085, v3086, v3090, v3624, 1, v3087, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) -> f_1227(v3082, v3083, v3084, v3085, v3086, v3090, v3624, 1, v3087, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) :|: TRUE
f_1227(v3082, v3083, v3084, v3085, v3086, v3090, v3624, 1, v3087, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) -> f_1235(v3082, v3083, v3084, v3085, v3086, v3090, v3624, 1, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) :|: 0 = 0
f_1235(v3082, v3083, v3084, v3085, v3086, v3090, v3624, 1, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) -> f_1244(v3082, v3083, v3084, v3085, v3086, v3090, v3624, 1, v4124, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) :|: v4124 = 1 + v3090 && 2 <= v4124
f_1244(v3082, v3083, v3084, v3085, v3086, v3090, v3624, 1, v4124, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) -> f_1253(v3082, v3083, v3084, v3085, v3086, v3090, v3624, 1, v4124, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) :|: TRUE
f_1253(v3082, v3083, v3084, v3085, v3086, v3090, v3624, 1, v4124, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) -> f_1261(v3082, v3083, v3084, v3085, v3086, v3090, v3624, 1, v4124, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) :|: TRUE
f_1261(v3082, v3083, v3084, v3085, v3086, v3090, v3624, 1, v4124, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) -> f_1172(v3082, v3083, v3084, v3085, v3086, v3090, v3624, 1, v4124, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) :|: TRUE
f_1172(v3082, v3083, v3084, v3085, v3086, v3087, v3088, 1, v3090, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) -> f_1183(v3082, v3083, v3084, v3085, v3086, v3090, v3088, 1, v3087, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_1183(v3082:0, v3083:0, v3084:0, v3085:0, v3086:0, v3090:0, v3088:0, 1, v3087:0, v3091:0, v3106:0, v3092:0, v3107:0, v3093:0, v3108:0, v3094:0, v3109:0, v3095:0, v3110:0, v3096:0, v3111:0, v3102:0, v3103:0, v3112:0, v3113:0, v3114:0, v3115:0, v3097:0, v3098:0, v3099:0, 0, v3101:0, v3104:0, v3105:0, 3, 7, 2, 4, 8) -> f_1183(v3082:0, v3083:0, v3084:0, v3085:0, v3086:0, 1 + v3090:0, v3624:0, 1, v3090:0, v3091:0, v3106:0, v3092:0, v3107:0, v3093:0, v3108:0, v3094:0, v3109:0, v3095:0, v3110:0, v3096:0, v3111:0, v3102:0, v3103:0, v3112:0, v3113:0, v3114:0, v3115:0, v3097:0, v3098:0, v3099:0, 0, v3101:0, v3104:0, v3105:0, 3, 7, 2, 4, 8) :|: v3090:0 > 0 && v3624:0 < 0
f_1183(v3082:0, v3083:0, v3084:0, v3085:0, v3086:0, v3090:0, v3088:0, 1, v3087:0, v3091:0, v3106:0, v3092:0, v3107:0, v3093:0, v3108:0, v3094:0, v3109:0, v3095:0, v3110:0, v3096:0, v3111:0, v3102:0, v3103:0, v3112:0, v3113:0, v3114:0, v3115:0, v3097:0, v3098:0, v3099:0, 0, v3101:0, v3104:0, v3105:0, 3, 7, 2, 4, 8) -> f_1183(v3082:0, v3083:0, v3084:0, v3085:0, v3086:0, 1 + v3090:0, v3624:0, 1, v3090:0, v3091:0, v3106:0, v3092:0, v3107:0, v3093:0, v3108:0, v3094:0, v3109:0, v3095:0, v3110:0, v3096:0, v3111:0, v3102:0, v3103:0, v3112:0, v3113:0, v3114:0, v3115:0, v3097:0, v3098:0, v3099:0, 0, v3101:0, v3104:0, v3105:0, 3, 7, 2, 4, 8) :|: v3090:0 > 0 && v3624:0 > 0
Filtered unneeded arguments:
   f_1183(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39) -> f_1183(x6)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1183(v3090:0) -> f_1183(1 + v3090:0) :|: v3090:0 > 0

----------------------------------------

(51)
Obligation:
Rules:
f_1183(v3090:0) -> f_1183(1 + v3090:0) :|: v3090:0 > 0

----------------------------------------

(52) IntTRSNonPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, v3090:0) -> f(1, 1 + v3090:0) :|: pc = 1 && v3090:0 > 0
Proved unsatisfiability of the following formula, indicating that the system is never left after entering:
(((run2_0 = ((1 * 1)) and run2_1 = ((1 * 1) + (run1_1 * 1))) and (((run1_0 * 1)) = ((1 * 1)) and ((run1_1 * 1)) > 0)) and !(((run2_0 * 1)) = ((1 * 1)) and ((run2_1 * 1)) > 0))
Proved satisfiability of the following formula, indicating that the system is entered at least once:
((run2_0 = ((1 * 1)) and run2_1 = ((1 * 1) + (run1_1 * 1))) and (((run1_0 * 1)) = ((1 * 1)) and ((run1_1 * 1)) > 0))

----------------------------------------

(53)
NO

----------------------------------------

(54) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 11 rulesP rules:
f_1183(v3082, v3083, v3084, v3085, v3086, v3090, v3088, 1, v3087, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) -> f_1193(v3082, v3083, v3084, v3085, v3086, v3090, v3624, 1, v3087, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) :|: TRUE
f_1193(v3082, v3083, v3084, v3085, v3086, v3090, v3624, 1, v3087, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) -> f_1202(v3082, v3083, v3084, v3085, v3086, v3090, v3624, 1, v3087, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) :|: v3624 != 0
f_1202(v3082, v3083, v3084, v3085, v3086, v3090, v3624, 1, v3087, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) -> f_1211(v3082, v3083, v3084, v3085, v3086, v3090, v3624, 1, v3087, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) :|: 0 = 0
f_1211(v3082, v3083, v3084, v3085, v3086, v3090, v3624, 1, v3087, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) -> f_1219(v3082, v3083, v3084, v3085, v3086, v3090, v3624, 1, v3087, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) :|: TRUE
f_1219(v3082, v3083, v3084, v3085, v3086, v3090, v3624, 1, v3087, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) -> f_1227(v3082, v3083, v3084, v3085, v3086, v3090, v3624, 1, v3087, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) :|: TRUE
f_1227(v3082, v3083, v3084, v3085, v3086, v3090, v3624, 1, v3087, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) -> f_1235(v3082, v3083, v3084, v3085, v3086, v3090, v3624, 1, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) :|: 0 = 0
f_1235(v3082, v3083, v3084, v3085, v3086, v3090, v3624, 1, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) -> f_1244(v3082, v3083, v3084, v3085, v3086, v3090, v3624, 1, v4124, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) :|: v4124 = 1 + v3090 && 2 <= v4124
f_1244(v3082, v3083, v3084, v3085, v3086, v3090, v3624, 1, v4124, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) -> f_1253(v3082, v3083, v3084, v3085, v3086, v3090, v3624, 1, v4124, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) :|: TRUE
f_1253(v3082, v3083, v3084, v3085, v3086, v3090, v3624, 1, v4124, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) -> f_1261(v3082, v3083, v3084, v3085, v3086, v3090, v3624, 1, v4124, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) :|: TRUE
f_1261(v3082, v3083, v3084, v3085, v3086, v3090, v3624, 1, v4124, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) -> f_1172(v3082, v3083, v3084, v3085, v3086, v3090, v3624, 1, v4124, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) :|: v3082 <= v3090 && v3103 + v3098 <= 1 + v3112 && 0 <= v3082 && 0 <= v3083 && 1 <= v3084 && 1 <= v3085 && 1 <= v3086 && 0 <= v3090 && 1 <= v4124 && 1 <= v3091 && 1 <= v3092 && 1 <= v3093 && 1 <= v3094 && 1 <= v3095 && 1 <= v3096 && v3097 <= 0 && 2 <= v3098 && 1 <= v3099 && 1 <= v3101 && 1 <= v3102 && 1 <= v3103 && 0 <= v3104 && 1 <= v3105 && 4 <= v3106 && 4 <= v3107 && 4 <= v3108 && 4 <= v3109 && 8 <= v3110 && 8 <= v3111 && 2 <= v3112 && 8 <= v3113 && 8 <= v3114 && 8 <= v3115 && v3091 <= v3106 && v3092 <= v3107 && v3093 <= v3108 && v3094 <= v3109 && v3095 <= v3110 && v3096 <= v3111 && 0 <= 0 && v3103 <= v3112 && v3084 <= v3113 && v3085 <= v3114 && v3086 <= v3115
f_1172(v3082, v3083, v3084, v3085, v3086, v3087, v3088, 1, v3090, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) -> f_1183(v3082, v3083, v3084, v3085, v3086, v3090, v3088, 1, v3087, v3091, v3106, v3092, v3107, v3093, v3108, v3094, v3109, v3095, v3110, v3096, v3111, v3102, v3103, v3112, v3113, v3114, v3115, v3097, v3098, v3099, 0, v3101, v3104, v3105, 3, 7, 2, 4, 8) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_1183(v3082:0, v3083:0, v3084:0, v3085:0, v3086:0, v3090:0, v3088:0, 1, v3087:0, v3091:0, v3106:0, v3092:0, v3107:0, v3093:0, v3108:0, v3094:0, v3109:0, v3095:0, v3110:0, v3096:0, v3111:0, v3102:0, v3103:0, v3112:0, v3113:0, v3114:0, v3115:0, v3097:0, v3098:0, v3099:0, 0, v3101:0, v3104:0, v3105:0, 3, 7, 2, 4, 8) -> f_1183(v3082:0, v3083:0, v3084:0, v3085:0, v3086:0, 1 + v3090:0, v3624:0, 1, v3090:0, v3091:0, v3106:0, v3092:0, v3107:0, v3093:0, v3108:0, v3094:0, v3109:0, v3095:0, v3110:0, v3096:0, v3111:0, v3102:0, v3103:0, v3112:0, v3113:0, v3114:0, v3115:0, v3097:0, v3098:0, v3099:0, 0, v3101:0, v3104:0, v3105:0, 3, 7, 2, 4, 8) :|: v3090:0 > 0 && v3103:0 + v3098:0 <= 1 + v3112:0 && v3090:0 >= v3082:0 && v3082:0 > -1 && v3083:0 > -1 && v3084:0 > 0 && v3085:0 > 0 && v3086:0 > 0 && v3091:0 > 0 && v3092:0 > 0 && v3093:0 > 0 && v3094:0 > 0 && v3095:0 > 0 && v3096:0 > 0 && v3097:0 < 1 && v3098:0 > 1 && v3099:0 > 0 && v3101:0 > 0 && v3102:0 > 0 && v3103:0 > 0 && v3104:0 > -1 && v3105:0 > 0 && v3106:0 > 3 && v3107:0 > 3 && v3108:0 > 3 && v3109:0 > 3 && v3110:0 > 7 && v3111:0 > 7 && v3112:0 > 1 && v3113:0 > 7 && v3114:0 > 7 && v3115:0 > 7 && v3106:0 >= v3091:0 && v3107:0 >= v3092:0 && v3108:0 >= v3093:0 && v3109:0 >= v3094:0 && v3624:0 < 0 && v3110:0 >= v3095:0 && v3111:0 >= v3096:0 && v3112:0 >= v3103:0 && v3113:0 >= v3084:0 && v3115:0 >= v3086:0 && v3114:0 >= v3085:0
f_1183(v3082:0, v3083:0, v3084:0, v3085:0, v3086:0, v3090:0, v3088:0, 1, v3087:0, v3091:0, v3106:0, v3092:0, v3107:0, v3093:0, v3108:0, v3094:0, v3109:0, v3095:0, v3110:0, v3096:0, v3111:0, v3102:0, v3103:0, v3112:0, v3113:0, v3114:0, v3115:0, v3097:0, v3098:0, v3099:0, 0, v3101:0, v3104:0, v3105:0, 3, 7, 2, 4, 8) -> f_1183(v3082:0, v3083:0, v3084:0, v3085:0, v3086:0, 1 + v3090:0, v3624:0, 1, v3090:0, v3091:0, v3106:0, v3092:0, v3107:0, v3093:0, v3108:0, v3094:0, v3109:0, v3095:0, v3110:0, v3096:0, v3111:0, v3102:0, v3103:0, v3112:0, v3113:0, v3114:0, v3115:0, v3097:0, v3098:0, v3099:0, 0, v3101:0, v3104:0, v3105:0, 3, 7, 2, 4, 8) :|: v3090:0 > 0 && v3103:0 + v3098:0 <= 1 + v3112:0 && v3090:0 >= v3082:0 && v3082:0 > -1 && v3083:0 > -1 && v3084:0 > 0 && v3085:0 > 0 && v3086:0 > 0 && v3091:0 > 0 && v3092:0 > 0 && v3093:0 > 0 && v3094:0 > 0 && v3095:0 > 0 && v3096:0 > 0 && v3097:0 < 1 && v3098:0 > 1 && v3099:0 > 0 && v3101:0 > 0 && v3102:0 > 0 && v3103:0 > 0 && v3104:0 > -1 && v3105:0 > 0 && v3106:0 > 3 && v3107:0 > 3 && v3108:0 > 3 && v3109:0 > 3 && v3110:0 > 7 && v3111:0 > 7 && v3112:0 > 1 && v3113:0 > 7 && v3114:0 > 7 && v3115:0 > 7 && v3106:0 >= v3091:0 && v3107:0 >= v3092:0 && v3108:0 >= v3093:0 && v3109:0 >= v3094:0 && v3624:0 > 0 && v3110:0 >= v3095:0 && v3111:0 >= v3096:0 && v3112:0 >= v3103:0 && v3113:0 >= v3084:0 && v3115:0 >= v3086:0 && v3114:0 >= v3085:0
Filtered unneeded arguments:
   f_1183(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39) -> f_1183(x1, x2, x3, x4, x5, x6, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x32, x33, x34)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1183(v3082:0, v3083:0, v3084:0, v3085:0, v3086:0, v3090:0, v3091:0, v3106:0, v3092:0, v3107:0, v3093:0, v3108:0, v3094:0, v3109:0, v3095:0, v3110:0, v3096:0, v3111:0, v3102:0, v3103:0, v3112:0, v3113:0, v3114:0, v3115:0, v3097:0, v3098:0, v3099:0, v3101:0, v3104:0, v3105:0) -> f_1183(v3082:0, v3083:0, v3084:0, v3085:0, v3086:0, 1 + v3090:0, v3091:0, v3106:0, v3092:0, v3107:0, v3093:0, v3108:0, v3094:0, v3109:0, v3095:0, v3110:0, v3096:0, v3111:0, v3102:0, v3103:0, v3112:0, v3113:0, v3114:0, v3115:0, v3097:0, v3098:0, v3099:0, v3101:0, v3104:0, v3105:0) :|: v3103:0 + v3098:0 <= 1 + v3112:0 && v3090:0 > 0 && v3090:0 >= v3082:0 && v3082:0 > -1 && v3083:0 > -1 && v3084:0 > 0 && v3085:0 > 0 && v3086:0 > 0 && v3091:0 > 0 && v3092:0 > 0 && v3093:0 > 0 && v3094:0 > 0 && v3095:0 > 0 && v3096:0 > 0 && v3097:0 < 1 && v3098:0 > 1 && v3099:0 > 0 && v3101:0 > 0 && v3102:0 > 0 && v3103:0 > 0 && v3104:0 > -1 && v3105:0 > 0 && v3106:0 > 3 && v3107:0 > 3 && v3108:0 > 3 && v3109:0 > 3 && v3110:0 > 7 && v3111:0 > 7 && v3112:0 > 1 && v3113:0 > 7 && v3114:0 > 7 && v3115:0 > 7 && v3106:0 >= v3091:0 && v3107:0 >= v3092:0 && v3108:0 >= v3093:0 && v3109:0 >= v3094:0 && v3110:0 >= v3095:0 && v3111:0 >= v3096:0 && v3112:0 >= v3103:0 && v3113:0 >= v3084:0 && v3114:0 >= v3085:0 && v3115:0 >= v3086:0

----------------------------------------

(55)
Obligation:
Rules:
f_1183(v3082:0, v3083:0, v3084:0, v3085:0, v3086:0, v3090:0, v3091:0, v3106:0, v3092:0, v3107:0, v3093:0, v3108:0, v3094:0, v3109:0, v3095:0, v3110:0, v3096:0, v3111:0, v3102:0, v3103:0, v3112:0, v3113:0, v3114:0, v3115:0, v3097:0, v3098:0, v3099:0, v3101:0, v3104:0, v3105:0) -> f_1183(v3082:0, v3083:0, v3084:0, v3085:0, v3086:0, 1 + v3090:0, v3091:0, v3106:0, v3092:0, v3107:0, v3093:0, v3108:0, v3094:0, v3109:0, v3095:0, v3110:0, v3096:0, v3111:0, v3102:0, v3103:0, v3112:0, v3113:0, v3114:0, v3115:0, v3097:0, v3098:0, v3099:0, v3101:0, v3104:0, v3105:0) :|: v3103:0 + v3098:0 <= 1 + v3112:0 && v3090:0 > 0 && v3090:0 >= v3082:0 && v3082:0 > -1 && v3083:0 > -1 && v3084:0 > 0 && v3085:0 > 0 && v3086:0 > 0 && v3091:0 > 0 && v3092:0 > 0 && v3093:0 > 0 && v3094:0 > 0 && v3095:0 > 0 && v3096:0 > 0 && v3097:0 < 1 && v3098:0 > 1 && v3099:0 > 0 && v3101:0 > 0 && v3102:0 > 0 && v3103:0 > 0 && v3104:0 > -1 && v3105:0 > 0 && v3106:0 > 3 && v3107:0 > 3 && v3108:0 > 3 && v3109:0 > 3 && v3110:0 > 7 && v3111:0 > 7 && v3112:0 > 1 && v3113:0 > 7 && v3114:0 > 7 && v3115:0 > 7 && v3106:0 >= v3091:0 && v3107:0 >= v3092:0 && v3108:0 >= v3093:0 && v3109:0 >= v3094:0 && v3110:0 >= v3095:0 && v3111:0 >= v3096:0 && v3112:0 >= v3103:0 && v3113:0 >= v3084:0 && v3114:0 >= v3085:0 && v3115:0 >= v3086:0

----------------------------------------

(56) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(57)
Obligation:
Rules:
f_1183(v3082:0:0, v3083:0:0, v3084:0:0, v3085:0:0, v3086:0:0, v3090:0:0, v3091:0:0, v3106:0:0, v3092:0:0, v3107:0:0, v3093:0:0, v3108:0:0, v3094:0:0, v3109:0:0, v3095:0:0, v3110:0:0, v3096:0:0, v3111:0:0, v3102:0:0, v3103:0:0, v3112:0:0, v3113:0:0, v3114:0:0, v3115:0:0, v3097:0:0, v3098:0:0, v3099:0:0, v3101:0:0, v3104:0:0, v3105:0:0) -> f_1183(v3082:0:0, v3083:0:0, v3084:0:0, v3085:0:0, v3086:0:0, 1 + v3090:0:0, v3091:0:0, v3106:0:0, v3092:0:0, v3107:0:0, v3093:0:0, v3108:0:0, v3094:0:0, v3109:0:0, v3095:0:0, v3110:0:0, v3096:0:0, v3111:0:0, v3102:0:0, v3103:0:0, v3112:0:0, v3113:0:0, v3114:0:0, v3115:0:0, v3097:0:0, v3098:0:0, v3099:0:0, v3101:0:0, v3104:0:0, v3105:0:0) :|: v3114:0:0 >= v3085:0:0 && v3115:0:0 >= v3086:0:0 && v3113:0:0 >= v3084:0:0 && v3112:0:0 >= v3103:0:0 && v3111:0:0 >= v3096:0:0 && v3110:0:0 >= v3095:0:0 && v3109:0:0 >= v3094:0:0 && v3108:0:0 >= v3093:0:0 && v3107:0:0 >= v3092:0:0 && v3106:0:0 >= v3091:0:0 && v3115:0:0 > 7 && v3114:0:0 > 7 && v3113:0:0 > 7 && v3112:0:0 > 1 && v3111:0:0 > 7 && v3110:0:0 > 7 && v3109:0:0 > 3 && v3108:0:0 > 3 && v3107:0:0 > 3 && v3106:0:0 > 3 && v3105:0:0 > 0 && v3104:0:0 > -1 && v3103:0:0 > 0 && v3102:0:0 > 0 && v3101:0:0 > 0 && v3099:0:0 > 0 && v3098:0:0 > 1 && v3097:0:0 < 1 && v3096:0:0 > 0 && v3095:0:0 > 0 && v3094:0:0 > 0 && v3093:0:0 > 0 && v3092:0:0 > 0 && v3091:0:0 > 0 && v3086:0:0 > 0 && v3085:0:0 > 0 && v3084:0:0 > 0 && v3083:0:0 > -1 && v3082:0:0 > -1 && v3090:0:0 >= v3082:0:0 && v3090:0:0 > 0 && v3103:0:0 + v3098:0:0 <= 1 + v3112:0:0

----------------------------------------

(58) IntTRSNonPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, v3082:0:0, v3083:0:0, v3084:0:0, v3085:0:0, v3086:0:0, v3090:0:0, v3091:0:0, v3106:0:0, v3092:0:0, v3107:0:0, v3093:0:0, v3108:0:0, v3094:0:0, v3109:0:0, v3095:0:0, v3110:0:0, v3096:0:0, v3111:0:0, v3102:0:0, v3103:0:0, v3112:0:0, v3113:0:0, v3114:0:0, v3115:0:0, v3097:0:0, v3098:0:0, v3099:0:0, v3101:0:0, v3104:0:0, v3105:0:0) -> f(1, v3082:0:0, v3083:0:0, v3084:0:0, v3085:0:0, v3086:0:0, 1 + v3090:0:0, v3091:0:0, v3106:0:0, v3092:0:0, v3107:0:0, v3093:0:0, v3108:0:0, v3094:0:0, v3109:0:0, v3095:0:0, v3110:0:0, v3096:0:0, v3111:0:0, v3102:0:0, v3103:0:0, v3112:0:0, v3113:0:0, v3114:0:0, v3115:0:0, v3097:0:0, v3098:0:0, v3099:0:0, v3101:0:0, v3104:0:0, v3105:0:0) :|: pc = 1 && (v3114:0:0 >= v3085:0:0 && v3115:0:0 >= v3086:0:0 && v3113:0:0 >= v3084:0:0 && v3112:0:0 >= v3103:0:0 && v3111:0:0 >= v3096:0:0 && v3110:0:0 >= v3095:0:0 && v3109:0:0 >= v3094:0:0 && v3108:0:0 >= v3093:0:0 && v3107:0:0 >= v3092:0:0 && v3106:0:0 >= v3091:0:0 && v3115:0:0 > 7 && v3114:0:0 > 7 && v3113:0:0 > 7 && v3112:0:0 > 1 && v3111:0:0 > 7 && v3110:0:0 > 7 && v3109:0:0 > 3 && v3108:0:0 > 3 && v3107:0:0 > 3 && v3106:0:0 > 3 && v3105:0:0 > 0 && v3104:0:0 > -1 && v3103:0:0 > 0 && v3102:0:0 > 0 && v3101:0:0 > 0 && v3099:0:0 > 0 && v3098:0:0 > 1 && v3097:0:0 < 1 && v3096:0:0 > 0 && v3095:0:0 > 0 && v3094:0:0 > 0 && v3093:0:0 > 0 && v3092:0:0 > 0 && v3091:0:0 > 0 && v3086:0:0 > 0 && v3085:0:0 > 0 && v3084:0:0 > 0 && v3083:0:0 > -1 && v3082:0:0 > -1 && v3090:0:0 >= v3082:0:0 && v3090:0:0 > 0 && v3103:0:0 + v3098:0:0 <= 1 + v3112:0:0)
Proved unsatisfiability of the following formula, indicating that the system is never left after entering:
(((run2_0 = ((1 * 1)) and run2_1 = ((run1_1 * 1)) and run2_2 = ((run1_2 * 1)) and run2_3 = ((run1_3 * 1)) and run2_4 = ((run1_4 * 1)) and run2_5 = ((run1_5 * 1)) and run2_6 = ((1 * 1) + (run1_6 * 1)) and run2_7 = ((run1_7 * 1)) and run2_8 = ((run1_8 * 1)) and run2_9 = ((run1_9 * 1)) and run2_10 = ((run1_10 * 1)) and run2_11 = ((run1_11 * 1)) and run2_12 = ((run1_12 * 1)) and run2_13 = ((run1_13 * 1)) and run2_14 = ((run1_14 * 1)) and run2_15 = ((run1_15 * 1)) and run2_16 = ((run1_16 * 1)) and run2_17 = ((run1_17 * 1)) and run2_18 = ((run1_18 * 1)) and run2_19 = ((run1_19 * 1)) and run2_20 = ((run1_20 * 1)) and run2_21 = ((run1_21 * 1)) and run2_22 = ((run1_22 * 1)) and run2_23 = ((run1_23 * 1)) and run2_24 = ((run1_24 * 1)) and run2_25 = ((run1_25 * 1)) and run2_26 = ((run1_26 * 1)) and run2_27 = ((run1_27 * 1)) and run2_28 = ((run1_28 * 1)) and run2_29 = ((run1_29 * 1)) and run2_30 = ((run1_30 * 1))) and (((run1_0 * 1)) = ((1 * 1)) and (((((((((((((((((((((((((((((((((((((((((((run1_23 * 1)) >= ((run1_4 * 1)) and ((run1_24 * 1)) >= ((run1_5 * 1))) and ((run1_22 * 1)) >= ((run1_3 * 1))) and ((run1_21 * 1)) >= ((run1_20 * 1))) and ((run1_18 * 1)) >= ((run1_17 * 1))) and ((run1_16 * 1)) >= ((run1_15 * 1))) and ((run1_14 * 1)) >= ((run1_13 * 1))) and ((run1_12 * 1)) >= ((run1_11 * 1))) and ((run1_10 * 1)) >= ((run1_9 * 1))) and ((run1_8 * 1)) >= ((run1_7 * 1))) and ((run1_24 * 1)) > ((1 * 7))) and ((run1_23 * 1)) > ((1 * 7))) and ((run1_22 * 1)) > ((1 * 7))) and ((run1_21 * 1)) > ((1 * 1))) and ((run1_18 * 1)) > ((1 * 7))) and ((run1_16 * 1)) > ((1 * 7))) and ((run1_14 * 1)) > ((1 * 3))) and ((run1_12 * 1)) > ((1 * 3))) and ((run1_10 * 1)) > ((1 * 3))) and ((run1_8 * 1)) > ((1 * 3))) and ((run1_30 * 1)) > 0) and ((run1_29 * 1)) > ((1 * -1))) and ((run1_20 * 1)) > 0) and ((run1_19 * 1)) > 0) and ((run1_28 * 1)) > 0) and ((run1_27 * 1)) > 0) and ((run1_26 * 1)) > ((1 * 1))) and ((run1_25 * 1)) < ((1 * 1))) and ((run1_17 * 1)) > 0) and ((run1_15 * 1)) > 0) and ((run1_13 * 1)) > 0) and ((run1_11 * 1)) > 0) and ((run1_9 * 1)) > 0) and ((run1_7 * 1)) > 0) and ((run1_5 * 1)) > 0) and ((run1_4 * 1)) > 0) and ((run1_3 * 1)) > 0) and ((run1_2 * 1)) > ((1 * -1))) and ((run1_1 * 1)) > ((1 * -1))) and ((run1_6 * 1)) >= ((run1_1 * 1))) and ((run1_6 * 1)) > 0) and ((run1_20 * 1) + (run1_26 * 1)) <= ((1 * 1) + (run1_21 * 1))))) and !(((run2_0 * 1)) = ((1 * 1)) and (((((((((((((((((((((((((((((((((((((((((((run2_23 * 1)) >= ((run2_4 * 1)) and ((run2_24 * 1)) >= ((run2_5 * 1))) and ((run2_22 * 1)) >= ((run2_3 * 1))) and ((run2_21 * 1)) >= ((run2_20 * 1))) and ((run2_18 * 1)) >= ((run2_17 * 1))) and ((run2_16 * 1)) >= ((run2_15 * 1))) and ((run2_14 * 1)) >= ((run2_13 * 1))) and ((run2_12 * 1)) >= ((run2_11 * 1))) and ((run2_10 * 1)) >= ((run2_9 * 1))) and ((run2_8 * 1)) >= ((run2_7 * 1))) and ((run2_24 * 1)) > ((1 * 7))) and ((run2_23 * 1)) > ((1 * 7))) and ((run2_22 * 1)) > ((1 * 7))) and ((run2_21 * 1)) > ((1 * 1))) and ((run2_18 * 1)) > ((1 * 7))) and ((run2_16 * 1)) > ((1 * 7))) and ((run2_14 * 1)) > ((1 * 3))) and ((run2_12 * 1)) > ((1 * 3))) and ((run2_10 * 1)) > ((1 * 3))) and ((run2_8 * 1)) > ((1 * 3))) and ((run2_30 * 1)) > 0) and ((run2_29 * 1)) > ((1 * -1))) and ((run2_20 * 1)) > 0) and ((run2_19 * 1)) > 0) and ((run2_28 * 1)) > 0) and ((run2_27 * 1)) > 0) and ((run2_26 * 1)) > ((1 * 1))) and ((run2_25 * 1)) < ((1 * 1))) and ((run2_17 * 1)) > 0) and ((run2_15 * 1)) > 0) and ((run2_13 * 1)) > 0) and ((run2_11 * 1)) > 0) and ((run2_9 * 1)) > 0) and ((run2_7 * 1)) > 0) and ((run2_5 * 1)) > 0) and ((run2_4 * 1)) > 0) and ((run2_3 * 1)) > 0) and ((run2_2 * 1)) > ((1 * -1))) and ((run2_1 * 1)) > ((1 * -1))) and ((run2_6 * 1)) >= ((run2_1 * 1))) and ((run2_6 * 1)) > 0) and ((run2_20 * 1) + (run2_26 * 1)) <= ((1 * 1) + (run2_21 * 1)))))
Proved satisfiability of the following formula, indicating that the system is entered at least once:
((run2_0 = ((1 * 1)) and run2_1 = ((run1_1 * 1)) and run2_2 = ((run1_2 * 1)) and run2_3 = ((run1_3 * 1)) and run2_4 = ((run1_4 * 1)) and run2_5 = ((run1_5 * 1)) and run2_6 = ((1 * 1) + (run1_6 * 1)) and run2_7 = ((run1_7 * 1)) and run2_8 = ((run1_8 * 1)) and run2_9 = ((run1_9 * 1)) and run2_10 = ((run1_10 * 1)) and run2_11 = ((run1_11 * 1)) and run2_12 = ((run1_12 * 1)) and run2_13 = ((run1_13 * 1)) and run2_14 = ((run1_14 * 1)) and run2_15 = ((run1_15 * 1)) and run2_16 = ((run1_16 * 1)) and run2_17 = ((run1_17 * 1)) and run2_18 = ((run1_18 * 1)) and run2_19 = ((run1_19 * 1)) and run2_20 = ((run1_20 * 1)) and run2_21 = ((run1_21 * 1)) and run2_22 = ((run1_22 * 1)) and run2_23 = ((run1_23 * 1)) and run2_24 = ((run1_24 * 1)) and run2_25 = ((run1_25 * 1)) and run2_26 = ((run1_26 * 1)) and run2_27 = ((run1_27 * 1)) and run2_28 = ((run1_28 * 1)) and run2_29 = ((run1_29 * 1)) and run2_30 = ((run1_30 * 1))) and (((run1_0 * 1)) = ((1 * 1)) and (((((((((((((((((((((((((((((((((((((((((((run1_23 * 1)) >= ((run1_4 * 1)) and ((run1_24 * 1)) >= ((run1_5 * 1))) and ((run1_22 * 1)) >= ((run1_3 * 1))) and ((run1_21 * 1)) >= ((run1_20 * 1))) and ((run1_18 * 1)) >= ((run1_17 * 1))) and ((run1_16 * 1)) >= ((run1_15 * 1))) and ((run1_14 * 1)) >= ((run1_13 * 1))) and ((run1_12 * 1)) >= ((run1_11 * 1))) and ((run1_10 * 1)) >= ((run1_9 * 1))) and ((run1_8 * 1)) >= ((run1_7 * 1))) and ((run1_24 * 1)) > ((1 * 7))) and ((run1_23 * 1)) > ((1 * 7))) and ((run1_22 * 1)) > ((1 * 7))) and ((run1_21 * 1)) > ((1 * 1))) and ((run1_18 * 1)) > ((1 * 7))) and ((run1_16 * 1)) > ((1 * 7))) and ((run1_14 * 1)) > ((1 * 3))) and ((run1_12 * 1)) > ((1 * 3))) and ((run1_10 * 1)) > ((1 * 3))) and ((run1_8 * 1)) > ((1 * 3))) and ((run1_30 * 1)) > 0) and ((run1_29 * 1)) > ((1 * -1))) and ((run1_20 * 1)) > 0) and ((run1_19 * 1)) > 0) and ((run1_28 * 1)) > 0) and ((run1_27 * 1)) > 0) and ((run1_26 * 1)) > ((1 * 1))) and ((run1_25 * 1)) < ((1 * 1))) and ((run1_17 * 1)) > 0) and ((run1_15 * 1)) > 0) and ((run1_13 * 1)) > 0) and ((run1_11 * 1)) > 0) and ((run1_9 * 1)) > 0) and ((run1_7 * 1)) > 0) and ((run1_5 * 1)) > 0) and ((run1_4 * 1)) > 0) and ((run1_3 * 1)) > 0) and ((run1_2 * 1)) > ((1 * -1))) and ((run1_1 * 1)) > ((1 * -1))) and ((run1_6 * 1)) >= ((run1_1 * 1))) and ((run1_6 * 1)) > 0) and ((run1_20 * 1) + (run1_26 * 1)) <= ((1 * 1) + (run1_21 * 1)))))

----------------------------------------

(59)
NO
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.001s
Aborted 1756892221Exec. 6, LLVMSEGraphToIntTRS with some error. Reason: java.lang.NullPointerException: Cannot read field "x" because "allocationIndex.x" is null.
            aprove.InputModules.Programs.llvm.internalStructures.instructions.LLVMStoreInstruction.isOverapproximation(LLVMStoreInstruction.java:407)
            aprove.InputModules.Programs.llvm.states.LLVMAbstractState.isOverapproximation(LLVMAbstractState.java:1401)
            aprove.InputModules.Programs.llvm.processors.LLVMSEGraphToIntTRSProcessor.containsOverapproximation(LLVMSEGraphToIntTRSProcessor.java:48)
            aprove.InputModules.Programs.llvm.processors.LLVMSEGraphToIntTRSProcessor.process(LLVMSEGraphToIntTRSProcessor.java:39)
            aprove.Strategies.ExecutableStrategies.Executor.execute(Executor.java:326)
            aprove.Strategies.ExecutableStrategies.Executor$Runner.wrappedRun(Executor.java:377)
            aprove.Strategies.Abortions.PooledJob.run(PooledJob.java:99)
