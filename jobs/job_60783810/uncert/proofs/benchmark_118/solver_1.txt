YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/ifknq.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could be proven:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 24 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 8196 ms]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) LLVM Symbolic Execution SCC
        (8) SCC2IRS [SOUND, 331 ms]
        (9) IntTRS
        (10) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (11) IntTRS
        (12) PolynomialOrderProcessor [EQUIVALENT, 5 ms]
        (13) AND
            (14) IntTRS
                (15) TerminationGraphProcessor [EQUIVALENT, 4 ms]
                (16) IntTRS
                (17) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                (18) IntTRS
                (19) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                (20) IntTRS
                (21) RankingReductionPairProof [EQUIVALENT, 4 ms]
                (22) YES
            (23) IntTRS
                (24) TerminationGraphProcessor [EQUIVALENT, 1 ms]
                (25) IntTRS
                (26) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                (27) IntTRS
                (28) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                (29) IntTRS
                (30) RankingReductionPairProof [EQUIVALENT, 5 ms]
                (31) YES
    (32) LLVM Symbolic Execution SCC
        (33) SCC2IRS [SOUND, 219 ms]
        (34) IntTRS
        (35) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (36) IntTRS
        (37) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
        (38) IntTRS
        (39) PolynomialOrderProcessor [EQUIVALENT, 1 ms]
        (40) YES
    (41) LLVM Symbolic Execution SCC
        (42) SCC2IRS [SOUND, 220 ms]
        (43) IntTRS
        (44) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (45) IntTRS
        (46) RankingReductionPairProof [EQUIVALENT, 9 ms]
        (47) YES


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/ifknq.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/ifknq.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "substring" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: (0 *i8, 1 *i8) variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 10
	0:
		%3 = alloca i32, align 4
		%4 = alloca *i8, align 8
		%5 = alloca *i8, align 8
		%6 = alloca *i8, align 8
		%7 = alloca *i8, align 8
		%8 = alloca *i8, align 8
		store %0, %4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %4)
		store %1, %5
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %5)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %6)
		%9 = load %4
		store %9, %6
		br %10
	10:
		%11 = load %6
		%12 = load %11
		%13 = sext i8 %12 to i32
		%14 = icmp ne %13 0
		br %14, %15, %47
	15:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %7)
		%16 = load %6
		store %16, %7
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %8)
		%17 = load %5
		store %17, %8
		br %18
	18:
		%19 = load %8
		%20 = load %19
		%21 = sext i8 %20 to i32
		%22 = icmp ne %21 0
		br %22, %23, %31
	23:
		%24 = load %8
		%25 = load %24
		%26 = sext i8 %25 to i32
		%27 = load %7
		%28 = load %27
		%29 = sext i8 %28 to i32
		%30 = icmp eq %26 %29
		br %31
	31:
		%32 = phi [0, %18], [%30, %23]
		br %32, %33, %38
	33:
		%34 = load %8
		%35 = getelementptr %34, 1
		store %35, %8
		%36 = load %7
		%37 = getelementptr %36, 1
		store %37, %7
		br %18
	38:
		%39 = load %8
		%40 = load %39
		%41 = sext i8 %40 to i32
		%42 = icmp eq %41 0
		br %42, %43, %44
	43:
		store 1, %3
		br %48
	44:
		%45 = load %6
		%46 = getelementptr %45, 1
		store %46, %6
		br %10
	47:
		store 0, %3
		br %48
	48:
		%49 = load %3
		ret %49

*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 60
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		%3 = alloca i32, align 4
		%4 = alloca *i8, align 8
		%5 = alloca *i8, align 8
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		%6 = call i32 @__VERIFIER_nondet_int()
		store %6, %2
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		%7 = call i32 @__VERIFIER_nondet_int()
		store %7, %3
		%8 = load %2
		%9 = icmp slt %8 1
		br %9, %10, %11
	10:
		store 1, %2
		br %11
	11:
		%12 = load %3
		%13 = icmp slt %12 1
		br %13, %14, %15
	14:
		store 1, %3
		br %15
	15:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %4)
		%16 = load %2
		%17 = sext i32 %16 to i64
		%18 = mul i64 %17, 1
		%19 = alloca i8, numElementsLit: %18, align 16
		store %19, %4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %5)
		%20 = load %3
		%21 = sext i32 %20 to i64
		%22 = mul i64 %21, 1
		%23 = alloca i8, numElementsLit: %22, align 16
		store %23, %5
		%24 = load %4
		%25 = load %2
		%26 = sub i32 %25, 1
		%27 = sext i32 %26 to i64
		%28 = getelementptr %24, %27
		store 0, %28
		%29 = load %5
		%30 = load %3
		%31 = sub i32 %30, 1
		%32 = sext i32 %31 to i64
		%33 = getelementptr %29, %32
		store 0, %33
		%34 = load %4
		%35 = load %5
		%36 = call i32 @substring(*i8 %34, *i8 %35)
		ret %36


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 3 SCCs.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC
----------------------------------------

(8) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 74 rulesP rules:
f_1340(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9095, v9094, v9096, v9097, v9098, 0, v9100, v9102, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9126, v9108, v9109, v9110, v9112, 3, 7, 2, 4, 8) -> f_1343(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9144, v9095, v9094, v9096, v9097, v9098, 0, v9100, v9102, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9126, v9108, v9109, v9110, v9112, 3, 7, 2, 4, 8) :|: TRUE
f_1343(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9144, v9095, v9094, v9096, v9097, v9098, 0, v9100, v9102, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9126, v9108, v9109, v9110, v9112, 3, 7, 2, 4, 8) -> f_1346(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9144, v9094, v9095, v9096, v9097, v9098, 0, v9100, v9102, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9126, v9108, v9109, v9110, v9112, 3, 7, 2, 4, 8) :|: 0 = 0
f_1346(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9144, v9094, v9095, v9096, v9097, v9098, 0, v9100, v9102, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9126, v9108, v9109, v9110, v9112, 3, 7, 2, 4, 8) -> f_1349(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9144, v9094, v9095, v9096, v9097, v9098, 0, v9100, v9102, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9126, v9108, v9109, v9110, v9112, 3, 7, 2, 4, 8) :|: v9144 != 0 && v9101 < v9113 && 3 <= v9113
f_1349(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9144, v9094, v9095, v9096, v9097, v9098, 0, v9100, v9102, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9126, v9108, v9109, v9110, v9112, 3, 7, 2, 4, 8) -> f_1354(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9144, v9094, v9095, v9096, v9097, v9098, 0, v9100, v9102, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9126, v9108, v9109, v9110, v9112, 3, 7, 2, 4, 8) :|: 0 = 0
f_1354(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9144, v9094, v9095, v9096, v9097, v9098, 0, v9100, v9102, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9126, v9108, v9109, v9110, v9112, 3, 7, 2, 4, 8) -> f_1359(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9144, v9094, v9095, v9096, v9097, v9098, 0, v9100, v9102, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9126, v9108, v9109, v9110, v9112, 3, 7, 2, 4, 8) :|: TRUE
f_1359(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9144, v9094, v9095, v9096, v9097, v9098, 0, v9100, v9102, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9126, v9108, v9109, v9110, v9112, 3, 7, 2, 4, 8) -> f_1365(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9144, v9095, v9096, v9097, v9098, 0, v9100, v9094, v9102, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9126, v9108, v9109, v9110, v9112, 3, 7, 2, 4, 8) :|: 0 = 0
f_1365(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9144, v9095, v9096, v9097, v9098, 0, v9100, v9094, v9102, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9126, v9108, v9109, v9110, v9112, 3, 7, 2, 4, 8) -> f_1369(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9144, v9095, v9096, v9097, v9098, 0, v9100, v9094, v9102, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9126, v9108, v9109, v9110, v9112, 3, 7, 2, 4, 8) :|: 0 = 0
f_1369(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9144, v9095, v9096, v9097, v9098, 0, v9100, v9094, v9102, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9126, v9108, v9109, v9110, v9112, 3, 7, 2, 4, 8) -> f_1373(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9144, v9096, v9095, v9097, v9098, 0, v9100, v9094, v9102, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9126, v9108, v9109, v9110, v9112, 3, 7, 2, 4, 8) :|: 0 = 0
f_1373(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9144, v9096, v9095, v9097, v9098, 0, v9100, v9094, v9102, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9126, v9108, v9109, v9110, v9112, 3, 7, 2, 4, 8) -> f_1377(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9144, v9102, v9095, v9097, v9098, 0, v9100, v9094, v9096, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9126, v9108, v9109, v9110, v9112, 3, 7, 2, 4, 8) :|: 0 = 0
f_1377(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9144, v9102, v9095, v9097, v9098, 0, v9100, v9094, v9096, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9126, v9108, v9109, v9110, v9112, 3, 7, 2, 4, 8) -> f_1381(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9144, v9102, v9980, v9095, v9097, v9098, 0, v9100, v9094, v9096, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9126, v9108, v9109, v9110, v9112, 3, 7, 2, 4, 8) :|: TRUE
f_1381(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9144, v9102, v9980, v9095, v9097, v9098, 0, v9100, v9094, v9096, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9126, v9108, v9109, v9110, v9112, 3, 7, 2, 4, 8) -> f_1385(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9144, v9102, v9980, v9097, v9098, 0, v9100, v9094, v9096, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9095, v9126, v9108, v9109, v9110, v9112, 3, 7, 2, 4, 8) :|: 0 = 0
f_1385(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9144, v9102, v9980, v9097, v9098, 0, v9100, v9094, v9096, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9095, v9126, v9108, v9109, v9110, v9112, 3, 7, 2, 4, 8) -> f_1389(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9980, v9102, v9097, v9098, 0, v9100, v9094, v9096, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9095, v9126, v9108, v9109, v9110, v9112, 3, 7, 2, 4, 8) :|: v9144 = v9980 && v9102 < v9111 && 4 <= v9111
f_1385(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9144, v9102, v9980, v9097, v9098, 0, v9100, v9094, v9096, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9095, v9126, v9108, v9109, v9110, v9112, 3, 7, 2, 4, 8) -> f_1390(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9144, v9102, v9980, v9097, v9098, 0, v9100, v9094, v9096, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9095, v9126, v9108, v9109, v9110, v9112, 3, 7, 2, 4, 8) :|: v9144 != v9980
f_1389(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9980, v9102, v9097, v9098, 0, v9100, v9094, v9096, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9095, v9126, v9108, v9109, v9110, v9112, 3, 7, 2, 4, 8) -> f_1393(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9980, v9102, v9097, v9098, 0, v9100, v9094, v9096, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9095, v9126, v9108, v9109, v9110, v9112, 3, 7, 2, 4, 8) :|: 0 = 0
f_1393(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9980, v9102, v9097, v9098, 0, v9100, v9094, v9096, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9095, v9126, v9108, v9109, v9110, v9112, 3, 7, 2, 4, 8) -> f_1397(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9980, v9102, v9097, v9098, 0, v9100, v9094, v9096, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9095, v9126, v9108, v9109, v9110, v9112, 3, 7, 2, 4, 8) :|: 0 = 0
f_1397(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9980, v9102, v9097, v9098, 0, v9100, v9094, v9096, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9095, v9126, v9108, v9109, v9110, v9112, 3, 7, 2, 4, 8) -> f_1398(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9980, v9102, v9094, v9101, v9096, v9102, v9097, v9098, 0, v9100, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9095, v9980, v9980, v9126, v9108, v9109, v10238, v10240, 3, 7, 2, 4, 8) :|: TRUE
f_1398(v10209, v10210, v10211, v10212, v10213, v10214, v10215, v10216, v10217, v10218, 1, v10220, v10221, v10222, v10223, v10224, v10225, v10226, v10227, v10228, 0, v10230, v10231, v10242, v10232, v10243, v10233, v10244, v10234, v10245, v10235, v10246, v10239, v10241, v10247, v10248, v10249, v10250, v10251, v10252, v10253, v10254, v10255, v10256, v10257, v10236, v10237, v10238, v10240, 3, 7, 2, 4, 8) -> f_1442(v10209, v10210, v10211, v10212, v10213, v10214, v10215, v10216, v10217, v10218, 1, v10220, v10221, v10222, v10223, v10224, v10225, v10226, v10227, v10228, 0, v10230, v10231, v10242, v10232, v10243, v10233, v10244, v10234, v10245, v10235, v10246, v10239, v10241, v10247, v10248, v10249, v10250, v10251, v10252, v10253, v10254, v10255, v10256, v10257, v10236, v10237, v11203, v11205, 3, 7, 2, 4, 8) :|: TRUE
f_1442(v11174, v11175, v11176, v11177, v11178, v11179, v11180, v11181, v11182, v11183, 1, v11185, v11186, v11187, v11188, v11189, v11190, v11191, v11192, v11193, 0, v11195, v11196, v11207, v11197, v11208, v11198, v11209, v11199, v11210, v11200, v11211, v11204, v11206, v11212, v11213, v11214, v11215, v11216, v11217, v11218, v11219, v11220, v11221, v11222, v11201, v11202, v11203, v11205, 3, 7, 2, 4, 8) -> f_1447(v11174, v11175, v11176, v11177, v11178, v11179, v11180, v11181, v11182, v11183, 1, v11185, v11186, v11187, v11188, v11189, v11190, v11191, v11192, v11193, 0, v11195, v11196, v11207, v11197, v11208, v11198, v11209, v11199, v11210, v11200, v11211, v11204, v11206, v11212, v11213, v11214, v11215, v11216, v11217, v11218, v11219, v11220, v11221, v11222, v11201, v11202, v11203, v11205, 3, 7, 2, 4, 8) :|: TRUE
f_1447(v11174, v11175, v11176, v11177, v11178, v11179, v11180, v11181, v11182, v11183, 1, v11185, v11186, v11187, v11188, v11189, v11190, v11191, v11192, v11193, 0, v11195, v11196, v11207, v11197, v11208, v11198, v11209, v11199, v11210, v11200, v11211, v11204, v11206, v11212, v11213, v11214, v11215, v11216, v11217, v11218, v11219, v11220, v11221, v11222, v11201, v11202, v11203, v11205, 3, 7, 2, 4, 8) -> f_1451(v11174, v11175, v11176, v11177, v11178, v11179, v11180, v11181, v11182, v11183, 1, v11185, v11186, v11187, v11189, v11190, v11191, v11192, v11193, 0, v11195, v11196, v11207, v11197, v11208, v11198, v11209, v11199, v11210, v11200, v11211, v11204, v11206, v11212, v11213, v11214, v11215, v11216, v11217, v11218, v11188, v11219, v11220, v11221, v11222, v11201, v11202, v11203, v11205, 3, 7, 2, 4, 8) :|: 0 = 0
f_1451(v11174, v11175, v11176, v11177, v11178, v11179, v11180, v11181, v11182, v11183, 1, v11185, v11186, v11187, v11189, v11190, v11191, v11192, v11193, 0, v11195, v11196, v11207, v11197, v11208, v11198, v11209, v11199, v11210, v11200, v11211, v11204, v11206, v11212, v11213, v11214, v11215, v11216, v11217, v11218, v11188, v11219, v11220, v11221, v11222, v11201, v11202, v11203, v11205, 3, 7, 2, 4, 8) -> f_1455(v11174, v11175, v11176, v11177, v11178, v11179, v11180, v11181, v11182, v11183, 1, v11185, v11186, v11187, v11675, v11190, v11191, v11192, v11193, 0, v11195, v11196, v11207, v11197, v11208, v11198, v11209, v11199, v11210, v11200, v11211, v11204, v11206, v11212, v11213, v11214, v11215, v11216, v11217, v11218, v11188, v11219, v11189, v11220, v11221, v11222, v11201, v11202, v11203, v11205, 3, 7, 2, 4, 8) :|: v11675 = 1 + v11185 && 2 <= v11675
f_1455(v11174, v11175, v11176, v11177, v11178, v11179, v11180, v11181, v11182, v11183, 1, v11185, v11186, v11187, v11675, v11190, v11191, v11192, v11193, 0, v11195, v11196, v11207, v11197, v11208, v11198, v11209, v11199, v11210, v11200, v11211, v11204, v11206, v11212, v11213, v11214, v11215, v11216, v11217, v11218, v11188, v11219, v11189, v11220, v11221, v11222, v11201, v11202, v11203, v11205, 3, 7, 2, 4, 8) -> f_1459(v11174, v11175, v11176, v11177, v11178, v11179, v11180, v11181, v11182, v11183, 1, v11185, v11186, v11187, v11675, v11190, v11191, v11192, v11193, 0, v11195, v11196, v11207, v11197, v11208, v11198, v11209, v11199, v11210, v11200, v11211, v11204, v11206, v11212, v11213, v11214, v11215, v11216, v11217, v11218, v11188, v11219, v11189, v11220, v11221, v11222, v11201, v11202, v11203, v11205, 3, 7, 2, 4, 8) :|: TRUE
f_1459(v11174, v11175, v11176, v11177, v11178, v11179, v11180, v11181, v11182, v11183, 1, v11185, v11186, v11187, v11675, v11190, v11191, v11192, v11193, 0, v11195, v11196, v11207, v11197, v11208, v11198, v11209, v11199, v11210, v11200, v11211, v11204, v11206, v11212, v11213, v11214, v11215, v11216, v11217, v11218, v11188, v11219, v11189, v11220, v11221, v11222, v11201, v11202, v11203, v11205, 3, 7, 2, 4, 8) -> f_1463(v11174, v11175, v11176, v11177, v11178, v11179, v11180, v11181, v11182, v11183, 1, v11185, v11186, v11187, v11675, v11191, v11192, v11193, 0, v11195, v11196, v11207, v11197, v11208, v11198, v11209, v11199, v11210, v11200, v11211, v11204, v11206, v11212, v11213, v11214, v11215, v11216, v11217, v11218, v11188, v11219, v11189, v11220, v11190, v11221, v11222, v11201, v11202, v11203, v11205, 3, 7, 2, 4, 8) :|: 0 = 0
f_1463(v11174, v11175, v11176, v11177, v11178, v11179, v11180, v11181, v11182, v11183, 1, v11185, v11186, v11187, v11675, v11191, v11192, v11193, 0, v11195, v11196, v11207, v11197, v11208, v11198, v11209, v11199, v11210, v11200, v11211, v11204, v11206, v11212, v11213, v11214, v11215, v11216, v11217, v11218, v11188, v11219, v11189, v11220, v11190, v11221, v11222, v11201, v11202, v11203, v11205, 3, 7, 2, 4, 8) -> f_1467(v11174, v11175, v11176, v11177, v11178, v11179, v11180, v11181, v11182, v11183, 1, v11185, v11186, v11187, v11675, v11775, v11192, v11193, 0, v11195, v11196, v11207, v11197, v11208, v11198, v11209, v11199, v11210, v11200, v11211, v11204, v11206, v11212, v11213, v11214, v11215, v11216, v11217, v11218, v11188, v11219, v11189, v11220, v11190, v11191, v11221, v11222, v11201, v11202, v11203, v11205, 3, 7, 2, 4, 8) :|: v11775 = 1 + v11187 && 3 <= v11775
f_1467(v11174, v11175, v11176, v11177, v11178, v11179, v11180, v11181, v11182, v11183, 1, v11185, v11186, v11187, v11675, v11775, v11192, v11193, 0, v11195, v11196, v11207, v11197, v11208, v11198, v11209, v11199, v11210, v11200, v11211, v11204, v11206, v11212, v11213, v11214, v11215, v11216, v11217, v11218, v11188, v11219, v11189, v11220, v11190, v11191, v11221, v11222, v11201, v11202, v11203, v11205, 3, 7, 2, 4, 8) -> f_1470(v11174, v11175, v11176, v11177, v11178, v11179, v11180, v11181, v11182, v11183, 1, v11185, v11186, v11187, v11675, v11775, v11192, v11193, 0, v11195, v11196, v11207, v11197, v11208, v11198, v11209, v11199, v11210, v11200, v11211, v11204, v11206, v11212, v11213, v11214, v11215, v11216, v11217, v11218, v11188, v11219, v11189, v11220, v11190, v11191, v11221, v11222, v11201, v11202, v11203, v11205, 3, 7, 2, 4, 8) :|: TRUE
f_1470(v11174, v11175, v11176, v11177, v11178, v11179, v11180, v11181, v11182, v11183, 1, v11185, v11186, v11187, v11675, v11775, v11192, v11193, 0, v11195, v11196, v11207, v11197, v11208, v11198, v11209, v11199, v11210, v11200, v11211, v11204, v11206, v11212, v11213, v11214, v11215, v11216, v11217, v11218, v11188, v11219, v11189, v11220, v11190, v11191, v11221, v11222, v11201, v11202, v11203, v11205, 3, 7, 2, 4, 8) -> f_1473(v11174, v11175, v11176, v11177, v11178, v11179, v11180, v11181, v11182, v11183, 1, v11185, v11186, v11187, v11675, v11775, v11192, v11193, 0, v11195, v11196, v11207, v11197, v11208, v11198, v11209, v11199, v11210, v11200, v11211, v11204, v11206, v11212, v11213, v11214, v11215, v11216, v11217, v11218, v11188, v11219, v11189, v11220, v11190, v11191, v11221, v11222, v11201, v11202, v11203, v11205, 3, 7, 2, 4, 8) :|: TRUE
f_1473(v11174, v11175, v11176, v11177, v11178, v11179, v11180, v11181, v11182, v11183, 1, v11185, v11186, v11187, v11675, v11775, v11192, v11193, 0, v11195, v11196, v11207, v11197, v11208, v11198, v11209, v11199, v11210, v11200, v11211, v11204, v11206, v11212, v11213, v11214, v11215, v11216, v11217, v11218, v11188, v11219, v11189, v11220, v11190, v11191, v11221, v11222, v11201, v11202, v11203, v11205, 3, 7, 2, 4, 8) -> f_1337(v11174, v11175, v11176, v11177, v11178, v11179, v11180, v11181, v11182, v11183, 1, v11185, v11186, v11187, v11192, v11193, 0, v11195, v11675, v11775, v11196, v11207, v11197, v11208, v11198, v11209, v11199, v11210, v11200, v11211, v11204, v11206, v11212, v11213, v11214, v11215, v11216, v11217, v11218, v11222, v11201, v11202, v9110, v9112, 3, 7, 2, 4, 8) :|: TRUE
f_1337(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9094, v9095, v9096, v9097, v9098, 0, v9100, v9101, v9102, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9126, v9108, v9109, v9110, v9112, 3, 7, 2, 4, 8) -> f_1340(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9095, v9094, v9096, v9097, v9098, 0, v9100, v9102, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9126, v9108, v9109, v9110, v9112, 3, 7, 2, 4, 8) :|: 0 = 0
f_1390(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9144, v9102, v9980, v9097, v9098, 0, v9100, v9094, v9096, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9095, v9126, v9108, v9109, v9110, v9112, 3, 7, 2, 4, 8) -> f_1394(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9144, v9102, v9980, 0, v9097, v9098, v9100, v9094, v9096, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9095, v9126, v9108, v9109, v9110, v9112, 3, 7, 2, 4, 8) :|: 0 = 0
f_1394(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9144, v9102, v9980, 0, v9097, v9098, v9100, v9094, v9096, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9095, v9126, v9108, v9109, v9110, v9112, 3, 7, 2, 4, 8) -> f_1399(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9144, v9102, v9980, 0, v9097, v9098, v9100, v9094, v9096, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9095, v9126, v9108, v9109, v9110, v9112, 3, 7, 2, 4, 8) :|: 0 = 0
f_1399(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9144, v9102, v9980, 0, v9097, v9098, v9100, v9094, v9096, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9095, v9126, v9108, v9109, v9110, v9112, 3, 7, 2, 4, 8) -> f_1494(v9083, v9084, v9085, v9086, v9087, v9088, v9089, v9090, v9091, v9092, 1, v9101, v9144, v9102, v9980, 0, v9097, v9098, v9100, v9094, v9101, v9096, v9102, v9103, v9114, v9104, v9115, v9105, v9116, v9106, v9117, v9107, v9118, v9111, v9113, v9119, v9120, v9121, v9122, v9123, v9124, v9125, v9092, v9144, v9980, v9126, v9095, v9108, v9109, v12475, v12477, 3, 7, 2, 4, 8) :|: TRUE
f_1494(v12445, v12446, v12447, v12448, v12449, v12450, v12451, v12452, v12453, v12454, 1, v12456, v12457, v12458, v12459, 0, v12461, v12462, v12463, v12464, v12465, v12466, v12467, v12468, v12479, v12469, v12480, v12470, v12481, v12471, v12482, v12472, v12483, v12476, v12478, v12484, v12485, v12486, v12487, v12488, v12489, v12490, v12491, v12492, v12493, v12494, v12495, v12473, v12474, v12475, v12477, 3, 7, 2, 4, 8) -> f_1543(v12445, v12446, v12447, v12448, v12449, v12450, v12451, v12452, v12453, v12454, 1, v12456, v12457, v12458, v12459, 0, v12461, v12462, v12463, v12464, v12465, v12466, v12467, v12468, v12479, v12469, v12480, v12470, v12481, v12471, v12482, v12472, v12483, v12476, v12478, v12484, v12485, v12486, v12487, v12488, v12489, v12490, v12491, v12494, v12495, v12492, v12493, v12473, v12474, v13400, v13402, 3, 7, 2, 4, 8) :|: TRUE
f_1543(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13378, v13379, 1, v13381, v13382, v13383, v13384, 0, v13386, v13387, v13388, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) -> f_1544(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13378, v13379, 1, v13381, v13382, v13383, v13384, 0, v13386, v13387, v13388, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) :|: TRUE
f_1544(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13378, v13379, 1, v13381, v13382, v13383, v13384, 0, v13386, v13387, v13388, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) -> f_1545(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13378, v13379, 1, v13381, v13382, v13383, v13384, 0, v13387, v13388, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13386, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) :|: 0 = 0
f_1545(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13378, v13379, 1, v13381, v13382, v13383, v13384, 0, v13387, v13388, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13386, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) -> f_1546(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13378, v13379, 1, v13381, v13382, v13383, v13384, 0, v13387, v13388, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13386, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) :|: 0 = 0
f_1546(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13378, v13379, 1, v13381, v13382, v13383, v13384, 0, v13387, v13388, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13386, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) -> f_1547(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13378, v13379, 1, v13381, v13382, v13383, v13384, 0, v13388, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13386, v13387, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) :|: 0 = 0
f_1547(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13378, v13379, 1, v13381, v13382, v13383, v13384, 0, v13388, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13386, v13387, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) -> f_1548(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13378, v13379, 1, v13381, v13382, v13383, v13384, 0, v13388, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13386, v13387, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) :|: 0 = 0
f_1548(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13378, v13379, 1, v13381, v13382, v13383, v13384, 0, v13388, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13386, v13387, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) -> f_1549(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13378, v13379, 1, v13381, v13382, v13383, v13384, 0, v13388, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13386, v13387, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) :|: TRUE
f_1549(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13378, v13379, 1, v13381, v13382, v13383, v13384, 0, v13388, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13386, v13387, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) -> f_1550(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13378, v13379, 1, v13381, v13382, v13383, v13384, 0, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13386, v13387, v13388, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) :|: 0 = 0
f_1550(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13378, v13379, 1, v13381, v13382, v13383, v13384, 0, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13386, v13387, v13388, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) -> f_1551(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13378, v13379, 1, v13381, v13382, v13383, v13384, 0, v13501, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13386, v13387, v13388, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) :|: v13501 = 1 + v13378 && 3 <= v13501
f_1551(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13378, v13379, 1, v13381, v13382, v13383, v13384, 0, v13501, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13386, v13387, v13388, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) -> f_1552(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13378, v13379, 1, v13381, v13382, v13383, v13384, 0, v13501, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13386, v13387, v13388, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) :|: TRUE
f_1552(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13378, v13379, 1, v13381, v13382, v13383, v13384, 0, v13501, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13386, v13387, v13388, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) -> f_1553(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13378, v13379, 1, v13381, v13382, v13383, v13384, 0, v13501, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13386, v13387, v13388, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) :|: TRUE
f_1553(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13378, v13379, 1, v13381, v13382, v13383, v13384, 0, v13501, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13386, v13387, v13388, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) -> f_1554(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13501, v13379, 1, v13378, v13381, v13382, v13383, v13384, 0, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13386, v13387, v13388, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) :|: 0 = 0
f_1554(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13501, v13379, 1, v13378, v13381, v13382, v13383, v13384, 0, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13386, v13387, v13388, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) -> f_1555(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13501, v13557, v13379, 1, v13378, v13381, v13382, v13383, v13384, 0, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13386, v13387, v13388, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) :|: TRUE
f_1555(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13501, v13557, v13379, 1, v13378, v13381, v13382, v13383, v13384, 0, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13386, v13387, v13388, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) -> f_1556(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13501, v13557, 1, v13378, v13381, v13382, v13383, v13384, 0, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13379, v13386, v13387, v13388, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) :|: 0 = 0
f_1556(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13501, v13557, 1, v13378, v13381, v13382, v13383, v13384, 0, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13379, v13386, v13387, v13388, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) -> f_1557(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13501, v13557, 1, v13378, v13381, v13382, v13383, v13384, 0, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13379, v13386, v13387, v13388, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) :|: v13557 != 0 && v13501 < v13401 && 4 <= v13401
f_1557(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13501, v13557, 1, v13378, v13381, v13382, v13383, v13384, 0, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13379, v13386, v13387, v13388, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) -> f_1559(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13501, v13557, 1, v13378, v13381, v13382, v13383, v13384, 0, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13379, v13386, v13387, v13388, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) :|: 0 = 0
f_1559(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13501, v13557, 1, v13378, v13381, v13382, v13383, v13384, 0, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13379, v13386, v13387, v13388, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) -> f_1561(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13501, v13557, 1, v13378, v13381, v13382, v13383, v13384, 0, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13379, v13386, v13387, v13388, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) :|: TRUE
f_1561(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13501, v13557, 1, v13378, v13381, v13382, v13383, v13384, 0, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13379, v13386, v13387, v13388, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) -> f_1563(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13501, v13557, 1, v13378, v13381, v13382, v13383, v13384, 0, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13379, v13386, v13387, v13388, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) :|: TRUE
f_1563(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13501, v13557, 1, v13378, v13381, v13382, v13383, v13384, 0, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13379, v13386, v13387, v13388, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) -> f_1565(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13501, v13557, 1, v13381, v13382, v13383, v13384, 0, v13378, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13379, v13386, v13387, v13388, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) :|: 0 = 0
f_1565(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13501, v13557, 1, v13381, v13382, v13383, v13384, 0, v13378, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13379, v13386, v13387, v13388, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) -> f_1567(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13501, v13557, 1, v13381, v13382, v13383, v13384, 0, v13378, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13379, v13386, v13387, v13388, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) :|: TRUE
f_1567(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13501, v13557, 1, v13381, v13382, v13383, v13384, 0, v13378, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13379, v13386, v13387, v13388, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) -> f_1569(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13501, v13557, 1, v13381, v13382, v13383, v13384, 0, v13378, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13379, v13386, v13387, v13388, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) :|: TRUE
f_1569(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13501, v13557, 1, v13381, v13382, v13383, v13384, 0, v13378, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13379, v13386, v13387, v13388, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) -> f_1571(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13501, v13557, 1, v13381, v13382, v13383, v13384, 0, v13378, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13379, v13386, v13387, v13388, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) :|: 0 = 0
f_1571(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13501, v13557, 1, v13381, v13382, v13383, v13384, 0, v13378, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13379, v13386, v13387, v13388, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) -> f_1572(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13501, v13557, 1, v13381, v13382, v13383, v13384, 0, v13378, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13379, v13386, v13387, v13388, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) :|: TRUE
f_1572(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13501, v13557, 1, v13381, v13382, v13383, v13384, 0, v13378, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13379, v13386, v13387, v13388, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) -> f_1573(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13501, v13557, 1, v13381, v13382, v13383, v13384, 0, v13378, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13379, v13386, v13387, v13388, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) :|: TRUE
f_1573(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13501, v13557, 1, v13381, v13382, v13383, v13384, 0, v13378, v13389, v13390, v13391, v13392, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13379, v13386, v13387, v13388, v13417, v13418, v13419, v13420, v13398, v13399, v13400, v13402, 3, 7, 2, 4, 8) -> f_1574(v13370, v13371, v13372, v13373, v13374, v13375, v13376, v13377, v13501, v13557, 1, v13381, v13382, v13383, v13384, 0, v13389, v13390, v13391, v13392, v13378, v13393, v13404, v13394, v13405, v13395, v13406, v13396, v13407, v13397, v13408, v13401, v13403, v13409, v13410, v13411, v13412, v13413, v13414, v13415, v13416, v13418, v13419, v13420, v13379, v13398, v13399, v13883, v13885, 3, 7, 2, 4, 8) :|: TRUE
f_1574(v13855, v13856, v13857, v13858, v13859, v13860, v13861, v13862, v13863, v13864, 1, v13866, v13867, v13868, v13869, 0, v13871, v13872, v13873, v13874, v13875, v13876, v13887, v13877, v13888, v13878, v13889, v13879, v13890, v13880, v13891, v13884, v13886, v13892, v13893, v13894, v13895, v13896, v13897, v13898, v13899, v13900, v13901, v13902, v13903, v13881, v13882, v13883, v13885, 3, 7, 2, 4, 8) -> f_1575(v13855, v13856, v13857, v13858, v13859, v13860, v13861, v13862, v13863, v13864, 1, v13867, v13866, v13868, v13869, 0, v13871, v13872, v13873, v13874, v13875, v13876, v13887, v13877, v13888, v13878, v13889, v13879, v13890, v13880, v13891, v13884, v13886, v13892, v13893, v13894, v13895, v13896, v13897, v13898, v13899, v13900, v13901, v13902, v13903, v13881, v13882, v13883, v13885, 3, 7, 2, 4, 8) :|: 0 = 0
f_1575(v13855, v13856, v13857, v13858, v13859, v13860, v13861, v13862, v13863, v13864, 1, v13867, v13866, v13868, v13869, 0, v13871, v13872, v13873, v13874, v13875, v13876, v13887, v13877, v13888, v13878, v13889, v13879, v13890, v13880, v13891, v13884, v13886, v13892, v13893, v13894, v13895, v13896, v13897, v13898, v13899, v13900, v13901, v13902, v13903, v13881, v13882, v13883, v13885, 3, 7, 2, 4, 8) -> f_1576(v13855, v13856, v13857, v13858, v13859, v13860, v13861, v13862, v13863, v13864, 1, v13899, v13867, v13866, v13868, v13869, 0, v13871, v13872, v13873, v13874, v13875, v13876, v13887, v13877, v13888, v13878, v13889, v13879, v13890, v13880, v13891, v13884, v13886, v13892, v13893, v13894, v13895, v13896, v13897, v13898, v13900, v13901, v13902, v13903, v13881, v13882, v13883, v13885, 3, 7, 2, 4, 8) :|: 0 = 0
f_1576(v13855, v13856, v13857, v13858, v13859, v13860, v13861, v13862, v13863, v13864, 1, v13899, v13867, v13866, v13868, v13869, 0, v13871, v13872, v13873, v13874, v13875, v13876, v13887, v13877, v13888, v13878, v13889, v13879, v13890, v13880, v13891, v13884, v13886, v13892, v13893, v13894, v13895, v13896, v13897, v13898, v13900, v13901, v13902, v13903, v13881, v13882, v13883, v13885, 3, 7, 2, 4, 8) -> f_1577(v13855, v13856, v13857, v13858, v13859, v13860, v13861, v13862, v13863, v13864, 1, v13899, v13866, v13867, v13868, v13869, 0, v13871, v13872, v13873, v13874, v13875, v13876, v13887, v13877, v13888, v13878, v13889, v13879, v13890, v13880, v13891, v13884, v13886, v13892, v13893, v13894, v13895, v13896, v13897, v13898, v13900, v13901, v13902, v13903, v13881, v13882, v13883, v13885, 3, 7, 2, 4, 8) :|: 0 = 0
f_1577(v13855, v13856, v13857, v13858, v13859, v13860, v13861, v13862, v13863, v13864, 1, v13899, v13866, v13867, v13868, v13869, 0, v13871, v13872, v13873, v13874, v13875, v13876, v13887, v13877, v13888, v13878, v13889, v13879, v13890, v13880, v13891, v13884, v13886, v13892, v13893, v13894, v13895, v13896, v13897, v13898, v13900, v13901, v13902, v13903, v13881, v13882, v13883, v13885, 3, 7, 2, 4, 8) -> f_1578(v13855, v13856, v13857, v13858, v13859, v13860, v13861, v13862, v13863, v13864, 1, v13899, v13866, v13867, v13868, v13869, 0, v13871, v13872, v13873, v13874, v13875, v13876, v13887, v13877, v13888, v13878, v13889, v13879, v13890, v13880, v13891, v13884, v13886, v13892, v13893, v13894, v13895, v13896, v13897, v13898, v13900, v13901, v13902, v13903, v13881, v13882, v13883, v13885, 3, 7, 2, 4, 8) :|: 0 = 0
f_1578(v13855, v13856, v13857, v13858, v13859, v13860, v13861, v13862, v13863, v13864, 1, v13899, v13866, v13867, v13868, v13869, 0, v13871, v13872, v13873, v13874, v13875, v13876, v13887, v13877, v13888, v13878, v13889, v13879, v13890, v13880, v13891, v13884, v13886, v13892, v13893, v13894, v13895, v13896, v13897, v13898, v13900, v13901, v13902, v13903, v13881, v13882, v13883, v13885, 3, 7, 2, 4, 8) -> f_1579(v13855, v13856, v13857, v13858, v13859, v13860, v13861, v13862, v13863, v13864, 1, v13899, v13866, v13867, v13868, v13869, 0, v13871, v13872, v13873, v13874, v13875, v13876, v13887, v13877, v13888, v13878, v13889, v13879, v13890, v13880, v13891, v13884, v13886, v13892, v13893, v13894, v13895, v13896, v13897, v13898, v13900, v13901, v13902, v13903, v13881, v13882, v13883, v13885, 3, 7, 2, 4, 8) :|: TRUE
f_1579(v13855, v13856, v13857, v13858, v13859, v13860, v13861, v13862, v13863, v13864, 1, v13899, v13866, v13867, v13868, v13869, 0, v13871, v13872, v13873, v13874, v13875, v13876, v13887, v13877, v13888, v13878, v13889, v13879, v13890, v13880, v13891, v13884, v13886, v13892, v13893, v13894, v13895, v13896, v13897, v13898, v13900, v13901, v13902, v13903, v13881, v13882, v13883, v13885, 3, 7, 2, 4, 8) -> f_1580(v13855, v13856, v13857, v13858, v13859, v13860, v13861, v13862, v13863, v13864, 1, v13899, v13867, v13868, v13869, 0, v13871, v13872, v13873, v13874, v13866, v13875, v13876, v13887, v13877, v13888, v13878, v13889, v13879, v13890, v13880, v13891, v13884, v13886, v13892, v13893, v13894, v13895, v13896, v13897, v13898, v13900, v13901, v13902, v13903, v13881, v13882, v13883, v13885, 3, 7, 2, 4, 8) :|: 0 = 0
f_1580(v13855, v13856, v13857, v13858, v13859, v13860, v13861, v13862, v13863, v13864, 1, v13899, v13867, v13868, v13869, 0, v13871, v13872, v13873, v13874, v13866, v13875, v13876, v13887, v13877, v13888, v13878, v13889, v13879, v13890, v13880, v13891, v13884, v13886, v13892, v13893, v13894, v13895, v13896, v13897, v13898, v13900, v13901, v13902, v13903, v13881, v13882, v13883, v13885, 3, 7, 2, 4, 8) -> f_1581(v13855, v13856, v13857, v13858, v13859, v13860, v13861, v13862, v13863, v13864, 1, v13899, v13867, v13868, v13869, 0, v13871, v13872, v13873, v13874, v13866, v13875, v13876, v13887, v13877, v13888, v13878, v13889, v13879, v13890, v13880, v13891, v13884, v13886, v13892, v13893, v13894, v13895, v13896, v13897, v13898, v13900, v13901, v13902, v13903, v13881, v13882, v13883, v13885, 3, 7, 2, 4, 8) :|: 0 = 0
f_1581(v13855, v13856, v13857, v13858, v13859, v13860, v13861, v13862, v13863, v13864, 1, v13899, v13867, v13868, v13869, 0, v13871, v13872, v13873, v13874, v13866, v13875, v13876, v13887, v13877, v13888, v13878, v13889, v13879, v13890, v13880, v13891, v13884, v13886, v13892, v13893, v13894, v13895, v13896, v13897, v13898, v13900, v13901, v13902, v13903, v13881, v13882, v13883, v13885, 3, 7, 2, 4, 8) -> f_1582(v13855, v13856, v13857, v13858, v13859, v13860, v13861, v13862, v13863, v13864, 1, v13899, v13868, v13869, 0, v13871, v13872, v13873, v13874, v13866, v13867, v13875, v13876, v13887, v13877, v13888, v13878, v13889, v13879, v13890, v13880, v13891, v13884, v13886, v13892, v13893, v13894, v13895, v13896, v13897, v13898, v13900, v13901, v13902, v13903, v13881, v13882, v13883, v13885, 3, 7, 2, 4, 8) :|: 0 = 0
f_1582(v13855, v13856, v13857, v13858, v13859, v13860, v13861, v13862, v13863, v13864, 1, v13899, v13868, v13869, 0, v13871, v13872, v13873, v13874, v13866, v13867, v13875, v13876, v13887, v13877, v13888, v13878, v13889, v13879, v13890, v13880, v13891, v13884, v13886, v13892, v13893, v13894, v13895, v13896, v13897, v13898, v13900, v13901, v13902, v13903, v13881, v13882, v13883, v13885, 3, 7, 2, 4, 8) -> f_1583(v13855, v13856, v13857, v13858, v13859, v13860, v13861, v13862, v13863, v13864, 1, v13899, v13869, 0, v13871, v13872, v13873, v13874, v13866, v13867, v13875, v13876, v13887, v13877, v13888, v13878, v13889, v13879, v13890, v13880, v13891, v13884, v13886, v13892, v13893, v13894, v13895, v13896, v13897, v13898, v13868, v13900, v13901, v13902, v13903, v13881, v13882, v13883, v13885, 3, 7, 2, 4, 8) :|: 0 = 0
f_1583(v13855, v13856, v13857, v13858, v13859, v13860, v13861, v13862, v13863, v13864, 1, v13899, v13869, 0, v13871, v13872, v13873, v13874, v13866, v13867, v13875, v13876, v13887, v13877, v13888, v13878, v13889, v13879, v13890, v13880, v13891, v13884, v13886, v13892, v13893, v13894, v13895, v13896, v13897, v13898, v13868, v13900, v13901, v13902, v13903, v13881, v13882, v13883, v13885, 3, 7, 2, 4, 8) -> f_1584(v13855, v13856, v13857, v13858, v13859, v13860, v13861, v13862, v13863, v13864, 1, v13899, v13869, 0, v13871, v13872, v13873, v13874, v13866, v13867, v13875, v13876, v13887, v13877, v13888, v13878, v13889, v13879, v13890, v13880, v13891, v13884, v13886, v13892, v13893, v13894, v13895, v13896, v13897, v13898, v13868, v13900, v13901, v13902, v13903, v13881, v13882, v13883, v13885, 3, 7, 2, 4, 8) :|: 0 = 0
f_1584(v13855, v13856, v13857, v13858, v13859, v13860, v13861, v13862, v13863, v13864, 1, v13899, v13869, 0, v13871, v13872, v13873, v13874, v13866, v13867, v13875, v13876, v13887, v13877, v13888, v13878, v13889, v13879, v13890, v13880, v13891, v13884, v13886, v13892, v13893, v13894, v13895, v13896, v13897, v13898, v13868, v13900, v13901, v13902, v13903, v13881, v13882, v13883, v13885, 3, 7, 2, 4, 8) -> f_1585(v13855, v13856, v13857, v13858, v13859, v13860, v13861, v13862, v13863, v13864, 1, v13899, 0, v13871, v13872, v13873, v13874, v13866, v13867, v13875, v13876, v13887, v13877, v13888, v13878, v13889, v13879, v13890, v13880, v13891, v13884, v13886, v13892, v13893, v13894, v13895, v13896, v13897, v13898, v13868, v13869, v13900, v13901, v13902, v13903, v13881, v13882, v13883, v13885, 3, 7, 2, 4, 8) :|: 0 = 0
f_1585(v13855, v13856, v13857, v13858, v13859, v13860, v13861, v13862, v13863, v13864, 1, v13899, 0, v13871, v13872, v13873, v13874, v13866, v13867, v13875, v13876, v13887, v13877, v13888, v13878, v13889, v13879, v13890, v13880, v13891, v13884, v13886, v13892, v13893, v13894, v13895, v13896, v13897, v13898, v13868, v13869, v13900, v13901, v13902, v13903, v13881, v13882, v13883, v13885, 3, 7, 2, 4, 8) -> f_1586(v13855, v13856, v13857, v13858, v13859, v13860, v13861, v13862, v13863, v13864, 1, 0, v13871, v13872, v13873, v13874, v13866, v13867, v13875, v13876, v13887, v13877, v13888, v13878, v13889, v13879, v13890, v13880, v13891, v13884, v13886, v13892, v13893, v13894, v13895, v13896, v13897, v13898, v13868, v13869, v13900, v13901, v13902, v13903, v13881, v13882, v13883, v13885, 3, 7, 2, 4, 8) :|: v13899 = v13864
f_1585(v13855, v13856, v13857, v13858, v13859, v13860, v13861, v13862, v13863, v13864, 1, v13899, 0, v13871, v13872, v13873, v13874, v13866, v13867, v13875, v13876, v13887, v13877, v13888, v13878, v13889, v13879, v13890, v13880, v13891, v13884, v13886, v13892, v13893, v13894, v13895, v13896, v13897, v13898, v13868, v13869, v13900, v13901, v13902, v13903, v13881, v13882, v13883, v13885, 3, 7, 2, 4, 8) -> f_1587(v13855, v13856, v13857, v13858, v13859, v13860, v13861, v13862, v13863, v13864, 1, v13899, 0, v13871, v13872, v13873, v13874, v13866, v13867, v13875, v13876, v13887, v13877, v13888, v13878, v13889, v13879, v13890, v13880, v13891, v13884, v13886, v13892, v13893, v13894, v13895, v13896, v13897, v13898, v13868, v13869, v13900, v13901, v13902, v13903, v13881, v13882, v13883, v13885, 3, 7, 2, 4, 8) :|: v13899 != v13864
f_1586(v13855, v13856, v13857, v13858, v13859, v13860, v13861, v13862, v13863, v13864, 1, 0, v13871, v13872, v13873, v13874, v13866, v13867, v13875, v13876, v13887, v13877, v13888, v13878, v13889, v13879, v13890, v13880, v13891, v13884, v13886, v13892, v13893, v13894, v13895, v13896, v13897, v13898, v13868, v13869, v13900, v13901, v13902, v13903, v13881, v13882, v13883, v13885, 3, 7, 2, 4, 8) -> f_1588(v13855, v13856, v13857, v13858, v13859, v13860, v13861, v13862, v13863, v13864, 1, 0, v13871, v13872, v13873, v13874, v13866, v13867, v13875, v13876, v13887, v13877, v13888, v13878, v13889, v13879, v13890, v13880, v13891, v13884, v13886, v13892, v13893, v13894, v13895, v13896, v13897, v13898, v13868, v13869, v13900, v13901, v13902, v13903, v13881, v13882, v13883, v13885, 3, 7, 2, 4, 8) :|: 0 = 0
f_1588(v13855, v13856, v13857, v13858, v13859, v13860, v13861, v13862, v13863, v13864, 1, 0, v13871, v13872, v13873, v13874, v13866, v13867, v13875, v13876, v13887, v13877, v13888, v13878, v13889, v13879, v13890, v13880, v13891, v13884, v13886, v13892, v13893, v13894, v13895, v13896, v13897, v13898, v13868, v13869, v13900, v13901, v13902, v13903, v13881, v13882, v13883, v13885, 3, 7, 2, 4, 8) -> f_1590(v13855, v13856, v13857, v13858, v13859, v13860, v13861, v13862, v13863, v13864, 1, v13871, v13872, v13873, v13874, v13866, v13867, 0, v13875, v13876, v13887, v13877, v13888, v13878, v13889, v13879, v13890, v13880, v13891, v13884, v13886, v13892, v13893, v13894, v13895, v13896, v13897, v13898, v13868, v13869, v13900, v13901, v13902, v13903, v13881, v13882, v13883, v13885, 3, 7, 2, 4, 8) :|: 0 = 0
f_1590(v13855, v13856, v13857, v13858, v13859, v13860, v13861, v13862, v13863, v13864, 1, v13871, v13872, v13873, v13874, v13866, v13867, 0, v13875, v13876, v13887, v13877, v13888, v13878, v13889, v13879, v13890, v13880, v13891, v13884, v13886, v13892, v13893, v13894, v13895, v13896, v13897, v13898, v13868, v13869, v13900, v13901, v13902, v13903, v13881, v13882, v13883, v13885, 3, 7, 2, 4, 8) -> f_1442(v13855, v13856, v13857, v13858, v13859, v13860, v13861, v13862, v13863, v13864, 1, v13856, v13864, v13863, v13871, v13872, v13873, v13874, v13866, v13867, 0, v13875, v13876, v13887, v13877, v13888, v13878, v13889, v13879, v13890, v13880, v13891, v13884, v13886, v13892, v13893, v13894, v13895, v13896, v13897, v13898, v13900, v13901, v13902, v13903, v13881, v13882, v11203, v11205, 3, 7, 2, 4, 8) :|: TRUE
f_1587(v13855, v13856, v13857, v13858, v13859, v13860, v13861, v13862, v13863, v13864, 1, v13899, 0, v13871, v13872, v13873, v13874, v13866, v13867, v13875, v13876, v13887, v13877, v13888, v13878, v13889, v13879, v13890, v13880, v13891, v13884, v13886, v13892, v13893, v13894, v13895, v13896, v13897, v13898, v13868, v13869, v13900, v13901, v13902, v13903, v13881, v13882, v13883, v13885, 3, 7, 2, 4, 8) -> f_1589(v13855, v13856, v13857, v13858, v13859, v13860, v13861, v13862, v13863, v13864, 1, v13899, 0, v13871, v13872, v13873, v13874, v13866, v13867, v13875, v13876, v13887, v13877, v13888, v13878, v13889, v13879, v13890, v13880, v13891, v13884, v13886, v13892, v13893, v13894, v13895, v13896, v13897, v13898, v13868, v13869, v13900, v13901, v13902, v13903, v13881, v13882, v13883, v13885, 3, 7, 2, 4, 8) :|: 0 = 0
f_1589(v13855, v13856, v13857, v13858, v13859, v13860, v13861, v13862, v13863, v13864, 1, v13899, 0, v13871, v13872, v13873, v13874, v13866, v13867, v13875, v13876, v13887, v13877, v13888, v13878, v13889, v13879, v13890, v13880, v13891, v13884, v13886, v13892, v13893, v13894, v13895, v13896, v13897, v13898, v13868, v13869, v13900, v13901, v13902, v13903, v13881, v13882, v13883, v13885, 3, 7, 2, 4, 8) -> f_1591(v13855, v13856, v13857, v13858, v13859, v13860, v13861, v13862, v13863, v13864, 1, v13899, 0, v13871, v13872, v13873, v13874, v13866, v13867, v13875, v13876, v13887, v13877, v13888, v13878, v13889, v13879, v13890, v13880, v13891, v13884, v13886, v13892, v13893, v13894, v13895, v13896, v13897, v13898, v13868, v13869, v13900, v13901, v13902, v13903, v13881, v13882, v13883, v13885, 3, 7, 2, 4, 8) :|: 0 = 0
f_1591(v13855, v13856, v13857, v13858, v13859, v13860, v13861, v13862, v13863, v13864, 1, v13899, 0, v13871, v13872, v13873, v13874, v13866, v13867, v13875, v13876, v13887, v13877, v13888, v13878, v13889, v13879, v13890, v13880, v13891, v13884, v13886, v13892, v13893, v13894, v13895, v13896, v13897, v13898, v13868, v13869, v13900, v13901, v13902, v13903, v13881, v13882, v13883, v13885, 3, 7, 2, 4, 8) -> f_1543(v13855, v13856, v13857, v13858, v13859, v13860, v13861, v13862, v13863, v13864, 1, v13856, v13899, v13863, v13864, 0, v13866, v13867, v13875, v13871, v13872, v13873, v13874, v13876, v13887, v13877, v13888, v13878, v13889, v13879, v13890, v13880, v13891, v13884, v13886, v13892, v13893, v13894, v13895, v13896, v13897, v13898, v13899, v13903, v13900, v13901, v13902, v13881, v13882, v13400, v13402, 3, 7, 2, 4, 8) :|: TRUE
Combined rules. Obtained 15 rulesP rules:
f_1340(v9083:0, v9084:0, v9085:0, v9086:0, v9087:0, v9088:0, v9089:0, v9090:0, v9091:0, v9092:0, 1, v9101:0, v9095:0, v9094:0, v9096:0, v9097:0, v9098:0, 0, v9100:0, v9102:0, v9103:0, v9114:0, v9104:0, v9115:0, v9105:0, v9116:0, v9106:0, v9117:0, v9107:0, v9118:0, v9111:0, v9113:0, v9119:0, v9120:0, v9121:0, v9122:0, v9123:0, v9124:0, v9125:0, v9126:0, v9108:0, v9109:0, v9110:0, v9112:0, 3, 7, 2, 4, 8) -> f_1585(v9083:0, v9084:0, v9085:0, v9086:0, v9087:0, v9088:0, v9089:0, v9090:0, 1 + v9091:0, v13557:0, 1, v9092:0, 0, v9094:0, v9101:0, v9096:0, v9102:0, v9101:0, v9144:0, v9091:0, v9103:0, v9114:0, v9104:0, v9115:0, v9105:0, v9116:0, v9106:0, v9117:0, v9107:0, v9118:0, v9111:0, v9113:0, v9119:0, v9120:0, v9121:0, v9122:0, v9123:0, v9124:0, v9125:0, v9102:0, v9980:0, v9095:0, v9144:0, v9980:0, v9092:0, v9108:0, v9109:0, v13883:0, v13885:0, 3, 7, 2, 4, 8) :|: v9113:0 > v9101:0 && v9144:0 < 0 && v9113:0 > 2 && v9980:0 > v9144:0 && v9091:0 > 1 && v9111:0 > 1 + v9091:0 && v9111:0 > 3 && v13557:0 < 0
f_1340(v9083:0, v9084:0, v9085:0, v9086:0, v9087:0, v9088:0, v9089:0, v9090:0, v9091:0, v9092:0, 1, v9101:0, v9095:0, v9094:0, v9096:0, v9097:0, v9098:0, 0, v9100:0, v9102:0, v9103:0, v9114:0, v9104:0, v9115:0, v9105:0, v9116:0, v9106:0, v9117:0, v9107:0, v9118:0, v9111:0, v9113:0, v9119:0, v9120:0, v9121:0, v9122:0, v9123:0, v9124:0, v9125:0, v9126:0, v9108:0, v9109:0, v9110:0, v9112:0, 3, 7, 2, 4, 8) -> f_1585(v9083:0, v9084:0, v9085:0, v9086:0, v9087:0, v9088:0, v9089:0, v9090:0, 1 + v9091:0, v13557:0, 1, v9092:0, 0, v9094:0, v9101:0, v9096:0, v9102:0, v9101:0, v9144:0, v9091:0, v9103:0, v9114:0, v9104:0, v9115:0, v9105:0, v9116:0, v9106:0, v9117:0, v9107:0, v9118:0, v9111:0, v9113:0, v9119:0, v9120:0, v9121:0, v9122:0, v9123:0, v9124:0, v9125:0, v9102:0, v9980:0, v9095:0, v9144:0, v9980:0, v9092:0, v9108:0, v9109:0, v13883:0, v13885:0, 3, 7, 2, 4, 8) :|: v9113:0 > v9101:0 && v9144:0 < 0 && v9113:0 > 2 && v9980:0 > v9144:0 && v9091:0 > 1 && v9111:0 > 1 + v9091:0 && v9111:0 > 3 && v13557:0 > 0
f_1340(v9083:0, v9084:0, v9085:0, v9086:0, v9087:0, v9088:0, v9089:0, v9090:0, v9091:0, v9092:0, 1, v9101:0, v9095:0, v9094:0, v9096:0, v9097:0, v9098:0, 0, v9100:0, v9102:0, v9103:0, v9114:0, v9104:0, v9115:0, v9105:0, v9116:0, v9106:0, v9117:0, v9107:0, v9118:0, v9111:0, v9113:0, v9119:0, v9120:0, v9121:0, v9122:0, v9123:0, v9124:0, v9125:0, v9126:0, v9108:0, v9109:0, v9110:0, v9112:0, 3, 7, 2, 4, 8) -> f_1585(v9083:0, v9084:0, v9085:0, v9086:0, v9087:0, v9088:0, v9089:0, v9090:0, 1 + v9091:0, v13557:0, 1, v9092:0, 0, v9094:0, v9101:0, v9096:0, v9102:0, v9101:0, v9144:0, v9091:0, v9103:0, v9114:0, v9104:0, v9115:0, v9105:0, v9116:0, v9106:0, v9117:0, v9107:0, v9118:0, v9111:0, v9113:0, v9119:0, v9120:0, v9121:0, v9122:0, v9123:0, v9124:0, v9125:0, v9102:0, v9980:0, v9095:0, v9144:0, v9980:0, v9092:0, v9108:0, v9109:0, v13883:0, v13885:0, 3, 7, 2, 4, 8) :|: v9113:0 > v9101:0 && v9144:0 < 0 && v9113:0 > 2 && v9980:0 < v9144:0 && v9091:0 > 1 && v9111:0 > 1 + v9091:0 && v9111:0 > 3 && v13557:0 < 0
f_1340(v9083:0, v9084:0, v9085:0, v9086:0, v9087:0, v9088:0, v9089:0, v9090:0, v9091:0, v9092:0, 1, v9101:0, v9095:0, v9094:0, v9096:0, v9097:0, v9098:0, 0, v9100:0, v9102:0, v9103:0, v9114:0, v9104:0, v9115:0, v9105:0, v9116:0, v9106:0, v9117:0, v9107:0, v9118:0, v9111:0, v9113:0, v9119:0, v9120:0, v9121:0, v9122:0, v9123:0, v9124:0, v9125:0, v9126:0, v9108:0, v9109:0, v9110:0, v9112:0, 3, 7, 2, 4, 8) -> f_1585(v9083:0, v9084:0, v9085:0, v9086:0, v9087:0, v9088:0, v9089:0, v9090:0, 1 + v9091:0, v13557:0, 1, v9092:0, 0, v9094:0, v9101:0, v9096:0, v9102:0, v9101:0, v9144:0, v9091:0, v9103:0, v9114:0, v9104:0, v9115:0, v9105:0, v9116:0, v9106:0, v9117:0, v9107:0, v9118:0, v9111:0, v9113:0, v9119:0, v9120:0, v9121:0, v9122:0, v9123:0, v9124:0, v9125:0, v9102:0, v9980:0, v9095:0, v9144:0, v9980:0, v9092:0, v9108:0, v9109:0, v13883:0, v13885:0, 3, 7, 2, 4, 8) :|: v9113:0 > v9101:0 && v9144:0 < 0 && v9113:0 > 2 && v9980:0 < v9144:0 && v9091:0 > 1 && v9111:0 > 1 + v9091:0 && v9111:0 > 3 && v13557:0 > 0
f_1340(v9083:0, v9084:0, v9085:0, v9086:0, v9087:0, v9088:0, v9089:0, v9090:0, v9091:0, v9092:0, 1, v9101:0, v9095:0, v9094:0, v9096:0, v9097:0, v9098:0, 0, v9100:0, v9102:0, v9103:0, v9114:0, v9104:0, v9115:0, v9105:0, v9116:0, v9106:0, v9117:0, v9107:0, v9118:0, v9111:0, v9113:0, v9119:0, v9120:0, v9121:0, v9122:0, v9123:0, v9124:0, v9125:0, v9126:0, v9108:0, v9109:0, v9110:0, v9112:0, 3, 7, 2, 4, 8) -> f_1585(v9083:0, v9084:0, v9085:0, v9086:0, v9087:0, v9088:0, v9089:0, v9090:0, 1 + v9091:0, v13557:0, 1, v9092:0, 0, v9094:0, v9101:0, v9096:0, v9102:0, v9101:0, v9144:0, v9091:0, v9103:0, v9114:0, v9104:0, v9115:0, v9105:0, v9116:0, v9106:0, v9117:0, v9107:0, v9118:0, v9111:0, v9113:0, v9119:0, v9120:0, v9121:0, v9122:0, v9123:0, v9124:0, v9125:0, v9102:0, v9980:0, v9095:0, v9144:0, v9980:0, v9092:0, v9108:0, v9109:0, v13883:0, v13885:0, 3, 7, 2, 4, 8) :|: v9113:0 > v9101:0 && v9144:0 > 0 && v9113:0 > 2 && v9980:0 > v9144:0 && v9091:0 > 1 && v9111:0 > 1 + v9091:0 && v9111:0 > 3 && v13557:0 < 0
f_1340(v9083:0, v9084:0, v9085:0, v9086:0, v9087:0, v9088:0, v9089:0, v9090:0, v9091:0, v9092:0, 1, v9101:0, v9095:0, v9094:0, v9096:0, v9097:0, v9098:0, 0, v9100:0, v9102:0, v9103:0, v9114:0, v9104:0, v9115:0, v9105:0, v9116:0, v9106:0, v9117:0, v9107:0, v9118:0, v9111:0, v9113:0, v9119:0, v9120:0, v9121:0, v9122:0, v9123:0, v9124:0, v9125:0, v9126:0, v9108:0, v9109:0, v9110:0, v9112:0, 3, 7, 2, 4, 8) -> f_1585(v9083:0, v9084:0, v9085:0, v9086:0, v9087:0, v9088:0, v9089:0, v9090:0, 1 + v9091:0, v13557:0, 1, v9092:0, 0, v9094:0, v9101:0, v9096:0, v9102:0, v9101:0, v9144:0, v9091:0, v9103:0, v9114:0, v9104:0, v9115:0, v9105:0, v9116:0, v9106:0, v9117:0, v9107:0, v9118:0, v9111:0, v9113:0, v9119:0, v9120:0, v9121:0, v9122:0, v9123:0, v9124:0, v9125:0, v9102:0, v9980:0, v9095:0, v9144:0, v9980:0, v9092:0, v9108:0, v9109:0, v13883:0, v13885:0, 3, 7, 2, 4, 8) :|: v9113:0 > v9101:0 && v9144:0 > 0 && v9113:0 > 2 && v9980:0 > v9144:0 && v9091:0 > 1 && v9111:0 > 1 + v9091:0 && v9111:0 > 3 && v13557:0 > 0
f_1340(v9083:0, v9084:0, v9085:0, v9086:0, v9087:0, v9088:0, v9089:0, v9090:0, v9091:0, v9092:0, 1, v9101:0, v9095:0, v9094:0, v9096:0, v9097:0, v9098:0, 0, v9100:0, v9102:0, v9103:0, v9114:0, v9104:0, v9115:0, v9105:0, v9116:0, v9106:0, v9117:0, v9107:0, v9118:0, v9111:0, v9113:0, v9119:0, v9120:0, v9121:0, v9122:0, v9123:0, v9124:0, v9125:0, v9126:0, v9108:0, v9109:0, v9110:0, v9112:0, 3, 7, 2, 4, 8) -> f_1585(v9083:0, v9084:0, v9085:0, v9086:0, v9087:0, v9088:0, v9089:0, v9090:0, 1 + v9091:0, v13557:0, 1, v9092:0, 0, v9094:0, v9101:0, v9096:0, v9102:0, v9101:0, v9144:0, v9091:0, v9103:0, v9114:0, v9104:0, v9115:0, v9105:0, v9116:0, v9106:0, v9117:0, v9107:0, v9118:0, v9111:0, v9113:0, v9119:0, v9120:0, v9121:0, v9122:0, v9123:0, v9124:0, v9125:0, v9102:0, v9980:0, v9095:0, v9144:0, v9980:0, v9092:0, v9108:0, v9109:0, v13883:0, v13885:0, 3, 7, 2, 4, 8) :|: v9113:0 > v9101:0 && v9144:0 > 0 && v9113:0 > 2 && v9980:0 < v9144:0 && v9091:0 > 1 && v9111:0 > 1 + v9091:0 && v9111:0 > 3 && v13557:0 < 0
f_1340(v9083:0, v9084:0, v9085:0, v9086:0, v9087:0, v9088:0, v9089:0, v9090:0, v9091:0, v9092:0, 1, v9101:0, v9095:0, v9094:0, v9096:0, v9097:0, v9098:0, 0, v9100:0, v9102:0, v9103:0, v9114:0, v9104:0, v9115:0, v9105:0, v9116:0, v9106:0, v9117:0, v9107:0, v9118:0, v9111:0, v9113:0, v9119:0, v9120:0, v9121:0, v9122:0, v9123:0, v9124:0, v9125:0, v9126:0, v9108:0, v9109:0, v9110:0, v9112:0, 3, 7, 2, 4, 8) -> f_1585(v9083:0, v9084:0, v9085:0, v9086:0, v9087:0, v9088:0, v9089:0, v9090:0, 1 + v9091:0, v13557:0, 1, v9092:0, 0, v9094:0, v9101:0, v9096:0, v9102:0, v9101:0, v9144:0, v9091:0, v9103:0, v9114:0, v9104:0, v9115:0, v9105:0, v9116:0, v9106:0, v9117:0, v9107:0, v9118:0, v9111:0, v9113:0, v9119:0, v9120:0, v9121:0, v9122:0, v9123:0, v9124:0, v9125:0, v9102:0, v9980:0, v9095:0, v9144:0, v9980:0, v9092:0, v9108:0, v9109:0, v13883:0, v13885:0, 3, 7, 2, 4, 8) :|: v9113:0 > v9101:0 && v9144:0 > 0 && v9113:0 > 2 && v9980:0 < v9144:0 && v9091:0 > 1 && v9111:0 > 1 + v9091:0 && v9111:0 > 3 && v13557:0 > 0
f_1585(v13855:0, v13856:0, v13857:0, v13858:0, v13859:0, v13860:0, v13861:0, v13862:0, v13863:0, v13864:0, 1, v13864:0, 0, v13871:0, v13872:0, v13873:0, v13874:0, v13866:0, v13867:0, v13875:0, v13876:0, v13887:0, v13877:0, v13888:0, v13878:0, v13889:0, v13879:0, v13890:0, v13880:0, v13891:0, v13884:0, v13886:0, v13892:0, v13893:0, v13894:0, v13895:0, v13896:0, v13897:0, v13898:0, v13868:0, v13869:0, v13900:0, v13901:0, v13902:0, v13903:0, v13881:0, v13882:0, v13883:0, v13885:0, 3, 7, 2, 4, 8) -> f_1340(v13855:0, v13856:0, v13857:0, v13858:0, v13859:0, v13860:0, v13861:0, v13862:0, v13863:0, v13864:0, 1, 1 + v13856:0, v13864:0, v13856:0, v13863:0, v13866:0, v13867:0, 0, v13875:0, 1 + v13863:0, v13876:0, v13887:0, v13877:0, v13888:0, v13878:0, v13889:0, v13879:0, v13890:0, v13880:0, v13891:0, v13884:0, v13886:0, v13892:0, v13893:0, v13894:0, v13895:0, v13896:0, v13897:0, v13898:0, v13903:0, v13881:0, v13882:0, v9110:0, v9112:0, 3, 7, 2, 4, 8) :|: v13863:0 > 1 && v13856:0 > 0
f_1340(v9083:0, v9084:0, v9085:0, v9086:0, v9087:0, v9088:0, v9089:0, v9090:0, v9091:0, v9092:0, 1, v9101:0, v9095:0, v9094:0, v9096:0, v9097:0, v9098:0, 0, v9100:0, v9102:0, v9103:0, v9114:0, v9104:0, v9115:0, v9105:0, v9116:0, v9106:0, v9117:0, v9107:0, v9118:0, v9111:0, v9113:0, v9119:0, v9120:0, v9121:0, v9122:0, v9123:0, v9124:0, v9125:0, v9126:0, v9108:0, v9109:0, v9110:0, v9112:0, 3, 7, 2, 4, 8) -> f_1340(v9083:0, v9084:0, v9085:0, v9086:0, v9087:0, v9088:0, v9089:0, v9090:0, v9091:0, v9092:0, 1, 1 + v9101:0, v9144:0, v9101:0, v9102:0, v9097:0, v9098:0, 0, v9100:0, 1 + v9102:0, v9103:0, v9114:0, v9104:0, v9115:0, v9105:0, v9116:0, v9106:0, v9117:0, v9107:0, v9118:0, v9111:0, v9113:0, v9119:0, v9120:0, v9121:0, v9122:0, v9123:0, v9124:0, v9125:0, v9126:0, v9108:0, v9109:0, v9110:1, v9112:1, 3, 7, 2, 4, 8) :|: v9113:0 > v9101:0 && v9144:0 < 0 && v9113:0 > 2 && v9111:0 > v9102:0 && v9111:0 > 3 && v9102:0 > 1 && v9101:0 > 0
f_1340(v9083:0, v9084:0, v9085:0, v9086:0, v9087:0, v9088:0, v9089:0, v9090:0, v9091:0, v9092:0, 1, v9101:0, v9095:0, v9094:0, v9096:0, v9097:0, v9098:0, 0, v9100:0, v9102:0, v9103:0, v9114:0, v9104:0, v9115:0, v9105:0, v9116:0, v9106:0, v9117:0, v9107:0, v9118:0, v9111:0, v9113:0, v9119:0, v9120:0, v9121:0, v9122:0, v9123:0, v9124:0, v9125:0, v9126:0, v9108:0, v9109:0, v9110:0, v9112:0, 3, 7, 2, 4, 8) -> f_1340(v9083:0, v9084:0, v9085:0, v9086:0, v9087:0, v9088:0, v9089:0, v9090:0, v9091:0, v9092:0, 1, 1 + v9101:0, v9144:0, v9101:0, v9102:0, v9097:0, v9098:0, 0, v9100:0, 1 + v9102:0, v9103:0, v9114:0, v9104:0, v9115:0, v9105:0, v9116:0, v9106:0, v9117:0, v9107:0, v9118:0, v9111:0, v9113:0, v9119:0, v9120:0, v9121:0, v9122:0, v9123:0, v9124:0, v9125:0, v9126:0, v9108:0, v9109:0, v9110:1, v9112:1, 3, 7, 2, 4, 8) :|: v9113:0 > v9101:0 && v9144:0 > 0 && v9113:0 > 2 && v9111:0 > v9102:0 && v9111:0 > 3 && v9102:0 > 1 && v9101:0 > 0
f_1585(v13855:0, v13856:0, v13857:0, v13858:0, v13859:0, v13860:0, v13861:0, v13862:0, v13863:0, v13864:0, 1, v13899:0, 0, v13871:0, v13872:0, v13873:0, v13874:0, v13866:0, v13867:0, v13875:0, v13876:0, v13887:0, v13877:0, v13888:0, v13878:0, v13889:0, v13879:0, v13890:0, v13880:0, v13891:0, v13884:0, v13886:0, v13892:0, v13893:0, v13894:0, v13895:0, v13896:0, v13897:0, v13898:0, v13868:0, v13869:0, v13900:0, v13901:0, v13902:0, v13903:0, v13881:0, v13882:0, v13883:0, v13885:0, 3, 7, 2, 4, 8) -> f_1585(v13855:0, v13856:0, v13857:0, v13858:0, v13859:0, v13860:0, v13861:0, v13862:0, 1 + v13863:0, v13557:0, 1, v13899:0, 0, v13871:0, v13872:0, v13873:0, v13874:0, v13856:0, v13899:0, v13863:0, v13876:0, v13887:0, v13877:0, v13888:0, v13878:0, v13889:0, v13879:0, v13890:0, v13880:0, v13891:0, v13884:0, v13886:0, v13892:0, v13893:0, v13894:0, v13895:0, v13896:0, v13897:0, v13898:0, v13863:0, v13864:0, v13900:0, v13901:0, v13902:0, v13864:0, v13881:0, v13882:0, v13883:1, v13885:1, 3, 7, 2, 4, 8) :|: v13863:0 > 1 && v13884:0 > 1 + v13863:0 && v13557:0 < 0 && v13899:0 < v13864:0 && v13884:0 > 3
f_1585(v13855:0, v13856:0, v13857:0, v13858:0, v13859:0, v13860:0, v13861:0, v13862:0, v13863:0, v13864:0, 1, v13899:0, 0, v13871:0, v13872:0, v13873:0, v13874:0, v13866:0, v13867:0, v13875:0, v13876:0, v13887:0, v13877:0, v13888:0, v13878:0, v13889:0, v13879:0, v13890:0, v13880:0, v13891:0, v13884:0, v13886:0, v13892:0, v13893:0, v13894:0, v13895:0, v13896:0, v13897:0, v13898:0, v13868:0, v13869:0, v13900:0, v13901:0, v13902:0, v13903:0, v13881:0, v13882:0, v13883:0, v13885:0, 3, 7, 2, 4, 8) -> f_1585(v13855:0, v13856:0, v13857:0, v13858:0, v13859:0, v13860:0, v13861:0, v13862:0, 1 + v13863:0, v13557:0, 1, v13899:0, 0, v13871:0, v13872:0, v13873:0, v13874:0, v13856:0, v13899:0, v13863:0, v13876:0, v13887:0, v13877:0, v13888:0, v13878:0, v13889:0, v13879:0, v13890:0, v13880:0, v13891:0, v13884:0, v13886:0, v13892:0, v13893:0, v13894:0, v13895:0, v13896:0, v13897:0, v13898:0, v13863:0, v13864:0, v13900:0, v13901:0, v13902:0, v13864:0, v13881:0, v13882:0, v13883:1, v13885:1, 3, 7, 2, 4, 8) :|: v13863:0 > 1 && v13884:0 > 1 + v13863:0 && v13557:0 > 0 && v13899:0 < v13864:0 && v13884:0 > 3
f_1585(v13855:0, v13856:0, v13857:0, v13858:0, v13859:0, v13860:0, v13861:0, v13862:0, v13863:0, v13864:0, 1, v13899:0, 0, v13871:0, v13872:0, v13873:0, v13874:0, v13866:0, v13867:0, v13875:0, v13876:0, v13887:0, v13877:0, v13888:0, v13878:0, v13889:0, v13879:0, v13890:0, v13880:0, v13891:0, v13884:0, v13886:0, v13892:0, v13893:0, v13894:0, v13895:0, v13896:0, v13897:0, v13898:0, v13868:0, v13869:0, v13900:0, v13901:0, v13902:0, v13903:0, v13881:0, v13882:0, v13883:0, v13885:0, 3, 7, 2, 4, 8) -> f_1585(v13855:0, v13856:0, v13857:0, v13858:0, v13859:0, v13860:0, v13861:0, v13862:0, 1 + v13863:0, v13557:0, 1, v13899:0, 0, v13871:0, v13872:0, v13873:0, v13874:0, v13856:0, v13899:0, v13863:0, v13876:0, v13887:0, v13877:0, v13888:0, v13878:0, v13889:0, v13879:0, v13890:0, v13880:0, v13891:0, v13884:0, v13886:0, v13892:0, v13893:0, v13894:0, v13895:0, v13896:0, v13897:0, v13898:0, v13863:0, v13864:0, v13900:0, v13901:0, v13902:0, v13864:0, v13881:0, v13882:0, v13883:1, v13885:1, 3, 7, 2, 4, 8) :|: v13863:0 > 1 && v13884:0 > 1 + v13863:0 && v13557:0 < 0 && v13899:0 > v13864:0 && v13884:0 > 3
f_1585(v13855:0, v13856:0, v13857:0, v13858:0, v13859:0, v13860:0, v13861:0, v13862:0, v13863:0, v13864:0, 1, v13899:0, 0, v13871:0, v13872:0, v13873:0, v13874:0, v13866:0, v13867:0, v13875:0, v13876:0, v13887:0, v13877:0, v13888:0, v13878:0, v13889:0, v13879:0, v13890:0, v13880:0, v13891:0, v13884:0, v13886:0, v13892:0, v13893:0, v13894:0, v13895:0, v13896:0, v13897:0, v13898:0, v13868:0, v13869:0, v13900:0, v13901:0, v13902:0, v13903:0, v13881:0, v13882:0, v13883:0, v13885:0, 3, 7, 2, 4, 8) -> f_1585(v13855:0, v13856:0, v13857:0, v13858:0, v13859:0, v13860:0, v13861:0, v13862:0, 1 + v13863:0, v13557:0, 1, v13899:0, 0, v13871:0, v13872:0, v13873:0, v13874:0, v13856:0, v13899:0, v13863:0, v13876:0, v13887:0, v13877:0, v13888:0, v13878:0, v13889:0, v13879:0, v13890:0, v13880:0, v13891:0, v13884:0, v13886:0, v13892:0, v13893:0, v13894:0, v13895:0, v13896:0, v13897:0, v13898:0, v13863:0, v13864:0, v13900:0, v13901:0, v13902:0, v13864:0, v13881:0, v13882:0, v13883:1, v13885:1, 3, 7, 2, 4, 8) :|: v13863:0 > 1 && v13884:0 > 1 + v13863:0 && v13557:0 > 0 && v13899:0 > v13864:0 && v13884:0 > 3
Filtered unneeded arguments:
   f_1340(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49) -> f_1340(x2, x9, x10, x12, x20, x31, x32)
   f_1585(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49, x50, x51, x52, x53, x54) -> f_1585(x2, x9, x10, x12, x31, x32)
Removed division, modulo operations, cleaned up constraints. Obtained 8 rules.P rules:
f_1340(v9084:0, v9091:0, v9092:0, v9101:0, v9102:0, v9111:0, v9113:0) -> f_1585(v9084:0, 1 + v9091:0, v13557:0, v9092:0, v9111:0, v9113:0) :|: v9113:0 > 2 && v9113:0 > v9101:0 && v9091:0 > 1 && v9111:0 > 1 + v9091:0 && v13557:0 < 0 && v9111:0 > 3
f_1340(v9084:0, v9091:0, v9092:0, v9101:0, v9102:0, v9111:0, v9113:0) -> f_1585(v9084:0, 1 + v9091:0, v13557:0, v9092:0, v9111:0, v9113:0) :|: v9113:0 > 2 && v9113:0 > v9101:0 && v9091:0 > 1 && v9111:0 > 1 + v9091:0 && v13557:0 > 0 && v9111:0 > 3
f_1585(v13856:0, v13863:0, v13864:0, v13864:01, v13884:0, v13886:0) -> f_1340(v13856:0, v13863:0, v13864:0, 1 + v13856:0, 1 + v13863:0, v13884:0, v13886:0) :|: v13863:0 > 1 && v13856:0 > 0 && v13864:0 = v13864:01
f_1340(v9084:0, v9091:0, v9092:0, v9101:0, v9102:0, v9111:0, v9113:0) -> f_1340(v9084:0, v9091:0, v9092:0, 1 + v9101:0, 1 + v9102:0, v9111:0, v9113:0) :|: v9113:0 > 2 && v9113:0 > v9101:0 && v9111:0 > v9102:0 && v9111:0 > 3 && v9101:0 > 0 && v9102:0 > 1
f_1585(v13856:0, v13863:0, v13864:0, v13899:0, v13884:0, v13886:0) -> f_1585(v13856:0, 1 + v13863:0, v13557:0, v13899:0, v13884:0, v13886:0) :|: v13884:0 > 1 + v13863:0 && v13863:0 > 1 && v13557:0 < 0 && v13884:0 > 3 && v13899:0 < v13864:0
f_1585(v13856:0, v13863:0, v13864:0, v13899:0, v13884:0, v13886:0) -> f_1585(v13856:0, 1 + v13863:0, v13557:0, v13899:0, v13884:0, v13886:0) :|: v13884:0 > 1 + v13863:0 && v13863:0 > 1 && v13557:0 > 0 && v13884:0 > 3 && v13899:0 < v13864:0
f_1585(v13856:0, v13863:0, v13864:0, v13899:0, v13884:0, v13886:0) -> f_1585(v13856:0, 1 + v13863:0, v13557:0, v13899:0, v13884:0, v13886:0) :|: v13884:0 > 1 + v13863:0 && v13863:0 > 1 && v13557:0 < 0 && v13884:0 > 3 && v13899:0 > v13864:0
f_1585(v13856:0, v13863:0, v13864:0, v13899:0, v13884:0, v13886:0) -> f_1585(v13856:0, 1 + v13863:0, v13557:0, v13899:0, v13884:0, v13886:0) :|: v13884:0 > 1 + v13863:0 && v13863:0 > 1 && v13557:0 > 0 && v13884:0 > 3 && v13899:0 > v13864:0

----------------------------------------

(9)
Obligation:
Rules:
f_1340(v9084:0, v9091:0, v9092:0, v9101:0, v9102:0, v9111:0, v9113:0) -> f_1585(v9084:0, 1 + v9091:0, v13557:0, v9092:0, v9111:0, v9113:0) :|: v9113:0 > 2 && v9113:0 > v9101:0 && v9091:0 > 1 && v9111:0 > 1 + v9091:0 && v13557:0 < 0 && v9111:0 > 3
f_1340(x, x1, x2, x3, x4, x5, x6) -> f_1585(x, 1 + x1, x7, x2, x5, x6) :|: x6 > 2 && x6 > x3 && x1 > 1 && x5 > 1 + x1 && x7 > 0 && x5 > 3
f_1585(v13856:0, v13863:0, v13864:0, v13864:01, v13884:0, v13886:0) -> f_1340(v13856:0, v13863:0, v13864:0, 1 + v13856:0, 1 + v13863:0, v13884:0, v13886:0) :|: v13863:0 > 1 && v13856:0 > 0 && v13864:0 = v13864:01
f_1340(x8, x9, x10, x11, x12, x13, x14) -> f_1340(x8, x9, x10, 1 + x11, 1 + x12, x13, x14) :|: x14 > 2 && x14 > x11 && x13 > x12 && x13 > 3 && x11 > 0 && x12 > 1
f_1585(x15, x16, x17, x18, x19, x20) -> f_1585(x15, 1 + x16, x21, x18, x19, x20) :|: x19 > 1 + x16 && x16 > 1 && x21 < 0 && x19 > 3 && x18 < x17
f_1585(x22, x23, x24, x25, x26, x27) -> f_1585(x22, 1 + x23, x28, x25, x26, x27) :|: x26 > 1 + x23 && x23 > 1 && x28 > 0 && x26 > 3 && x25 < x24
f_1585(x29, x30, x31, x32, x33, x34) -> f_1585(x29, 1 + x30, x35, x32, x33, x34) :|: x33 > 1 + x30 && x30 > 1 && x35 < 0 && x33 > 3 && x32 > x31
f_1585(x36, x37, x38, x39, x40, x41) -> f_1585(x36, 1 + x37, x42, x39, x40, x41) :|: x40 > 1 + x37 && x37 > 1 && x42 > 0 && x40 > 3 && x39 > x38

----------------------------------------

(10) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(11)
Obligation:
Rules:
f_1340(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0) -> f_1585(x:0, 1 + x1:0, x7:0, x2:0, x5:0, x6:0) :|: x7:0 > 0 && x5:0 > 3 && x5:0 > 1 + x1:0 && x1:0 > 1 && x6:0 > x3:0 && x6:0 > 2
f_1340(x8:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0) -> f_1340(x8:0, x9:0, x10:0, 1 + x11:0, 1 + x12:0, x13:0, x14:0) :|: x11:0 > 0 && x12:0 > 1 && x13:0 > 3 && x13:0 > x12:0 && x14:0 > x11:0 && x14:0 > 2
f_1585(x22:0, x23:0, x24:0, x25:0, x26:0, x27:0) -> f_1585(x22:0, 1 + x23:0, x28:0, x25:0, x26:0, x27:0) :|: x26:0 > 3 && x25:0 < x24:0 && x28:0 > 0 && x23:0 > 1 && x26:0 > 1 + x23:0
f_1585(v13856:0:0, v13863:0:0, v13864:01:0, v13864:01:01, v13884:0:0, v13886:0:0) -> f_1340(v13856:0:0, v13863:0:0, v13864:01:0, 1 + v13856:0:0, 1 + v13863:0:0, v13884:0:0, v13886:0:0) :|: v13863:0:0 > 1 && v13856:0:0 > 0 && v13864:01:0 = v13864:01:01
f_1585(x15:0, x16:0, x17:0, x18:0, x19:0, x20:0) -> f_1585(x15:0, 1 + x16:0, x21:0, x18:0, x19:0, x20:0) :|: x19:0 > 3 && x18:0 < x17:0 && x21:0 < 0 && x16:0 > 1 && x19:0 > 1 + x16:0
f_1585(x36:0, x37:0, x38:0, x39:0, x40:0, x41:0) -> f_1585(x36:0, 1 + x37:0, x42:0, x39:0, x40:0, x41:0) :|: x40:0 > 3 && x39:0 > x38:0 && x42:0 > 0 && x37:0 > 1 && x40:0 > 1 + x37:0
f_1340(v9084:0:0, v9091:0:0, v9092:0:0, v9101:0:0, v9102:0:0, v9111:0:0, v9113:0:0) -> f_1585(v9084:0:0, 1 + v9091:0:0, v13557:0:0, v9092:0:0, v9111:0:0, v9113:0:0) :|: v13557:0:0 < 0 && v9111:0:0 > 3 && v9111:0:0 > 1 + v9091:0:0 && v9091:0:0 > 1 && v9113:0:0 > v9101:0:0 && v9113:0:0 > 2
f_1585(x29:0, x30:0, x31:0, x32:0, x33:0, x34:0) -> f_1585(x29:0, 1 + x30:0, x35:0, x32:0, x33:0, x34:0) :|: x33:0 > 3 && x32:0 > x31:0 && x35:0 < 0 && x30:0 > 1 && x33:0 > 1 + x30:0

----------------------------------------

(12) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1340(x, x1, x2, x3, x4, x5, x6)] = -10 - x1 + 3*x5
[f_1585(x7, x8, x9, x10, x11, x12)] = -9 + 3*x11 - x8

The following rules are decreasing:
f_1585(x22:0, x23:0, x24:0, x25:0, x26:0, x27:0) -> f_1585(x22:0, 1 + x23:0, x28:0, x25:0, x26:0, x27:0) :|: x26:0 > 3 && x25:0 < x24:0 && x28:0 > 0 && x23:0 > 1 && x26:0 > 1 + x23:0
f_1585(v13856:0:0, v13863:0:0, v13864:01:0, v13864:01:01, v13884:0:0, v13886:0:0) -> f_1340(v13856:0:0, v13863:0:0, v13864:01:0, 1 + v13856:0:0, 1 + v13863:0:0, v13884:0:0, v13886:0:0) :|: v13863:0:0 > 1 && v13856:0:0 > 0 && v13864:01:0 = v13864:01:01
f_1585(x15:0, x16:0, x17:0, x18:0, x19:0, x20:0) -> f_1585(x15:0, 1 + x16:0, x21:0, x18:0, x19:0, x20:0) :|: x19:0 > 3 && x18:0 < x17:0 && x21:0 < 0 && x16:0 > 1 && x19:0 > 1 + x16:0
f_1585(x36:0, x37:0, x38:0, x39:0, x40:0, x41:0) -> f_1585(x36:0, 1 + x37:0, x42:0, x39:0, x40:0, x41:0) :|: x40:0 > 3 && x39:0 > x38:0 && x42:0 > 0 && x37:0 > 1 && x40:0 > 1 + x37:0
f_1585(x29:0, x30:0, x31:0, x32:0, x33:0, x34:0) -> f_1585(x29:0, 1 + x30:0, x35:0, x32:0, x33:0, x34:0) :|: x33:0 > 3 && x32:0 > x31:0 && x35:0 < 0 && x30:0 > 1 && x33:0 > 1 + x30:0
The following rules are bounded:
f_1340(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0) -> f_1585(x:0, 1 + x1:0, x7:0, x2:0, x5:0, x6:0) :|: x7:0 > 0 && x5:0 > 3 && x5:0 > 1 + x1:0 && x1:0 > 1 && x6:0 > x3:0 && x6:0 > 2
f_1585(x22:0, x23:0, x24:0, x25:0, x26:0, x27:0) -> f_1585(x22:0, 1 + x23:0, x28:0, x25:0, x26:0, x27:0) :|: x26:0 > 3 && x25:0 < x24:0 && x28:0 > 0 && x23:0 > 1 && x26:0 > 1 + x23:0
f_1585(x15:0, x16:0, x17:0, x18:0, x19:0, x20:0) -> f_1585(x15:0, 1 + x16:0, x21:0, x18:0, x19:0, x20:0) :|: x19:0 > 3 && x18:0 < x17:0 && x21:0 < 0 && x16:0 > 1 && x19:0 > 1 + x16:0
f_1585(x36:0, x37:0, x38:0, x39:0, x40:0, x41:0) -> f_1585(x36:0, 1 + x37:0, x42:0, x39:0, x40:0, x41:0) :|: x40:0 > 3 && x39:0 > x38:0 && x42:0 > 0 && x37:0 > 1 && x40:0 > 1 + x37:0
f_1340(v9084:0:0, v9091:0:0, v9092:0:0, v9101:0:0, v9102:0:0, v9111:0:0, v9113:0:0) -> f_1585(v9084:0:0, 1 + v9091:0:0, v13557:0:0, v9092:0:0, v9111:0:0, v9113:0:0) :|: v13557:0:0 < 0 && v9111:0:0 > 3 && v9111:0:0 > 1 + v9091:0:0 && v9091:0:0 > 1 && v9113:0:0 > v9101:0:0 && v9113:0:0 > 2
f_1585(x29:0, x30:0, x31:0, x32:0, x33:0, x34:0) -> f_1585(x29:0, 1 + x30:0, x35:0, x32:0, x33:0, x34:0) :|: x33:0 > 3 && x32:0 > x31:0 && x35:0 < 0 && x30:0 > 1 && x33:0 > 1 + x30:0

----------------------------------------

(13)
Complex Obligation (AND)

----------------------------------------

(14)
Obligation:
Rules:
f_1340(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0) -> f_1585(x:0, 1 + x1:0, x7:0, x2:0, x5:0, x6:0) :|: x7:0 > 0 && x5:0 > 3 && x5:0 > 1 + x1:0 && x1:0 > 1 && x6:0 > x3:0 && x6:0 > 2
f_1340(x8:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0) -> f_1340(x8:0, x9:0, x10:0, 1 + x11:0, 1 + x12:0, x13:0, x14:0) :|: x11:0 > 0 && x12:0 > 1 && x13:0 > 3 && x13:0 > x12:0 && x14:0 > x11:0 && x14:0 > 2
f_1340(v9084:0:0, v9091:0:0, v9092:0:0, v9101:0:0, v9102:0:0, v9111:0:0, v9113:0:0) -> f_1585(v9084:0:0, 1 + v9091:0:0, v13557:0:0, v9092:0:0, v9111:0:0, v9113:0:0) :|: v13557:0:0 < 0 && v9111:0:0 > 3 && v9111:0:0 > 1 + v9091:0:0 && v9091:0:0 > 1 && v9113:0:0 > v9101:0:0 && v9113:0:0 > 2

----------------------------------------

(15) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained one non-trivial SCC.

----------------------------------------

(16)
Obligation:
Rules:
f_1340(x8:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0) -> f_1340(x8:0, x9:0, x10:0, 1 + x11:0, 1 + x12:0, x13:0, x14:0) :|: x11:0 > 0 && x12:0 > 1 && x13:0 > 3 && x13:0 > x12:0 && x14:0 > x11:0 && x14:0 > 2

----------------------------------------

(17) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(18)
Obligation:
Rules:
f_1340(x8:0:0, x9:0:0, x10:0:0, x11:0:0, x12:0:0, x13:0:0, x14:0:0) -> f_1340(x8:0:0, x9:0:0, x10:0:0, 1 + x11:0:0, 1 + x12:0:0, x13:0:0, x14:0:0) :|: x14:0:0 > x11:0:0 && x14:0:0 > 2 && x13:0:0 > x12:0:0 && x13:0:0 > 3 && x12:0:0 > 1 && x11:0:0 > 0

----------------------------------------

(19) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1340(x1, x2, x3, x4, x5, x6, x7) -> f_1340(x4, x5, x6, x7)

----------------------------------------

(20)
Obligation:
Rules:
f_1340(x11:0:0, x12:0:0, x13:0:0, x14:0:0) -> f_1340(1 + x11:0:0, 1 + x12:0:0, x13:0:0, x14:0:0) :|: x14:0:0 > x11:0:0 && x14:0:0 > 2 && x13:0:0 > x12:0:0 && x13:0:0 > 3 && x12:0:0 > 1 && x11:0:0 > 0

----------------------------------------

(21) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1340 ] = f_1340_4 + -1*f_1340_1

The following rules are decreasing:
f_1340(x11:0:0, x12:0:0, x13:0:0, x14:0:0) -> f_1340(1 + x11:0:0, 1 + x12:0:0, x13:0:0, x14:0:0) :|: x14:0:0 > x11:0:0 && x14:0:0 > 2 && x13:0:0 > x12:0:0 && x13:0:0 > 3 && x12:0:0 > 1 && x11:0:0 > 0

The following rules are bounded:
f_1340(x11:0:0, x12:0:0, x13:0:0, x14:0:0) -> f_1340(1 + x11:0:0, 1 + x12:0:0, x13:0:0, x14:0:0) :|: x14:0:0 > x11:0:0 && x14:0:0 > 2 && x13:0:0 > x12:0:0 && x13:0:0 > 3 && x12:0:0 > 1 && x11:0:0 > 0


----------------------------------------

(22)
YES

----------------------------------------

(23)
Obligation:
Rules:
f_1340(x8:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0) -> f_1340(x8:0, x9:0, x10:0, 1 + x11:0, 1 + x12:0, x13:0, x14:0) :|: x11:0 > 0 && x12:0 > 1 && x13:0 > 3 && x13:0 > x12:0 && x14:0 > x11:0 && x14:0 > 2
f_1585(v13856:0:0, v13863:0:0, v13864:01:0, v13864:01:01, v13884:0:0, v13886:0:0) -> f_1340(v13856:0:0, v13863:0:0, v13864:01:0, 1 + v13856:0:0, 1 + v13863:0:0, v13884:0:0, v13886:0:0) :|: v13863:0:0 > 1 && v13856:0:0 > 0 && v13864:01:0 = v13864:01:01

----------------------------------------

(24) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained one non-trivial SCC.

----------------------------------------

(25)
Obligation:
Rules:
f_1340(x8:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0) -> f_1340(x8:0, x9:0, x10:0, 1 + x11:0, 1 + x12:0, x13:0, x14:0) :|: x11:0 > 0 && x12:0 > 1 && x13:0 > 3 && x13:0 > x12:0 && x14:0 > x11:0 && x14:0 > 2

----------------------------------------

(26) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(27)
Obligation:
Rules:
f_1340(x8:0:0, x9:0:0, x10:0:0, x11:0:0, x12:0:0, x13:0:0, x14:0:0) -> f_1340(x8:0:0, x9:0:0, x10:0:0, 1 + x11:0:0, 1 + x12:0:0, x13:0:0, x14:0:0) :|: x14:0:0 > x11:0:0 && x14:0:0 > 2 && x13:0:0 > x12:0:0 && x13:0:0 > 3 && x12:0:0 > 1 && x11:0:0 > 0

----------------------------------------

(28) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1340(x1, x2, x3, x4, x5, x6, x7) -> f_1340(x4, x5, x6, x7)

----------------------------------------

(29)
Obligation:
Rules:
f_1340(x11:0:0, x12:0:0, x13:0:0, x14:0:0) -> f_1340(1 + x11:0:0, 1 + x12:0:0, x13:0:0, x14:0:0) :|: x14:0:0 > x11:0:0 && x14:0:0 > 2 && x13:0:0 > x12:0:0 && x13:0:0 > 3 && x12:0:0 > 1 && x11:0:0 > 0

----------------------------------------

(30) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1340 ] = f_1340_4 + -1*f_1340_1

The following rules are decreasing:
f_1340(x11:0:0, x12:0:0, x13:0:0, x14:0:0) -> f_1340(1 + x11:0:0, 1 + x12:0:0, x13:0:0, x14:0:0) :|: x14:0:0 > x11:0:0 && x14:0:0 > 2 && x13:0:0 > x12:0:0 && x13:0:0 > 3 && x12:0:0 > 1 && x11:0:0 > 0

The following rules are bounded:
f_1340(x11:0:0, x12:0:0, x13:0:0, x14:0:0) -> f_1340(1 + x11:0:0, 1 + x12:0:0, x13:0:0, x14:0:0) :|: x14:0:0 > x11:0:0 && x14:0:0 > 2 && x13:0:0 > x12:0:0 && x13:0:0 > 3 && x12:0:0 > 1 && x11:0:0 > 0


----------------------------------------

(31)
YES

----------------------------------------

(32)
Obligation:
SCC
----------------------------------------

(33) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 38 rulesP rules:
f_1353(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, 0, v7219, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7220, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) -> f_1358(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, 0, v7219, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7220, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) :|: 0 = 0
f_1358(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, 0, v7219, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7220, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) -> f_1364(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, 0, v7219, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7220, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) :|: 0 = 0
f_1364(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, 0, v7219, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7220, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) -> f_1211(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, 0, v7219, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7220, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) :|: TRUE
f_1211(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7219, v7220, 1, v7222, 0, v7224, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) -> f_1215(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7219, v7220, 1, v7222, 0, v7224, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) :|: TRUE
f_1215(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7219, v7220, 1, v7222, 0, v7224, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) -> f_1218(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7219, v7220, 1, v7222, 0, v7224, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) :|: 0 = 0
f_1218(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7219, v7220, 1, v7222, 0, v7224, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) -> f_1221(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7219, v7220, 1, v7222, 0, v7224, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) :|: 0 = 0
f_1221(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7219, v7220, 1, v7222, 0, v7224, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) -> f_1224(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7219, v7220, 1, v7222, 0, v7224, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) :|: 0 = 0
f_1224(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7219, v7220, 1, v7222, 0, v7224, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) -> f_1227(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7219, v7220, 1, v7222, 0, v7224, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) :|: 0 = 0
f_1227(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7219, v7220, 1, v7222, 0, v7224, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) -> f_1230(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7219, v7220, 1, v7222, 0, v7224, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) :|: TRUE
f_1230(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7219, v7220, 1, v7222, 0, v7224, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) -> f_1233(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7219, v7220, 1, v7222, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) :|: 0 = 0
f_1233(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7219, v7220, 1, v7222, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) -> f_1236(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7219, v7220, 1, v7222, 0, v7439, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) :|: v7439 = 1 + v7219 && 3 <= v7439
f_1236(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7219, v7220, 1, v7222, 0, v7439, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) -> f_1239(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7219, v7220, 1, v7222, 0, v7439, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) :|: TRUE
f_1239(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7219, v7220, 1, v7222, 0, v7439, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) -> f_1242(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7219, v7220, 1, v7222, 0, v7439, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) :|: TRUE
f_1242(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7219, v7220, 1, v7222, 0, v7439, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) -> f_1245(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7220, 1, v7219, v7222, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) :|: 0 = 0
f_1245(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7220, 1, v7219, v7222, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) -> f_1249(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, v7220, 1, v7219, v7222, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) :|: TRUE
f_1249(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, v7220, 1, v7219, v7222, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) -> f_1253(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7219, v7222, v7220, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) :|: 0 = 0
f_1253(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7219, v7222, v7220, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) -> f_1257(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7219, v7222, v7220, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) :|: v7536 != 0 && v7439 < v7233 && 4 <= v7233
f_1257(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7219, v7222, v7220, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) -> f_1262(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7219, v7222, v7220, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) :|: 0 = 0
f_1262(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7219, v7222, v7220, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) -> f_1268(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7219, v7222, v7220, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) :|: TRUE
f_1268(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7219, v7222, v7220, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) -> f_1274(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7219, v7222, v7220, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) :|: TRUE
f_1274(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7219, v7222, v7220, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) -> f_1280(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, v7219, v7220, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) :|: 0 = 0
f_1280(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, v7219, v7220, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) -> f_1286(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, v7219, v7220, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) :|: TRUE
f_1286(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, v7219, v7220, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) -> f_1292(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, v7219, v7220, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) :|: TRUE
f_1292(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, v7219, v7220, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) -> f_1299(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, v7219, v7220, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) :|: 0 = 0
f_1299(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, v7219, v7220, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) -> f_1305(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, v7219, v7220, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) :|: TRUE
f_1305(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, v7219, v7220, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) -> f_1313(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, v7219, v7220, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) :|: TRUE
f_1313(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, v7219, v7220, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) -> f_1317(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, v7219, v7220, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) :|: 0 = 0
f_1317(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, v7219, v7220, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) -> f_1320(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, v7219, v7220, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) :|: 0 = 0
f_1320(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, v7219, v7220, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) -> f_1323(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, v7219, v7220, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) :|: 0 = 0
f_1323(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, v7219, v7220, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) -> f_1326(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, v7219, v7220, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) :|: 0 = 0
f_1326(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, v7219, v7220, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) -> f_1329(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, v7219, v7220, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) :|: TRUE
f_1329(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, v7219, v7220, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) -> f_1332(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, v7219, v7220, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) :|: 0 = 0
f_1332(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, v7219, v7220, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) -> f_1335(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, v7219, v7220, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) :|: 0 = 0
f_1335(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, v7219, v7220, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) -> f_1339(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, v7219, v7220, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) :|: 0 = 0
f_1339(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, v7219, v7220, 0, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) -> f_1342(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, v7220, 0, v7219, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) :|: 0 = 0
f_1342(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, v7220, 0, v7219, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) -> f_1345(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, v7220, 0, v7219, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) :|: 0 = 0
f_1345(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, v7220, 0, v7219, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) -> f_1348(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, 0, v7219, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7220, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) :|: 0 = 0
f_1348(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, 0, v7219, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7220, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) -> f_1353(v7211, v7212, v7213, v7214, v7215, v7216, v7217, v7218, v7439, v7536, 1, v7222, 0, v7219, v7225, v7236, v7226, v7237, v7227, v7238, v7228, v7239, v7229, v7240, v7233, v7235, v7241, v7242, v7243, v7244, v7245, v7246, v7247, v7220, v7224, v7248, v7230, v7231, v7232, v7234, 3, 7, 2, 4, 8) :|: v7222 != v7536
Combined rules. Obtained 4 rulesP rules:
f_1353(v7211:0, v7212:0, v7213:0, v7214:0, v7215:0, v7216:0, v7217:0, v7218:0, v7439:0, v7536:0, 1, v7222:0, 0, v7219:0, v7225:0, v7236:0, v7226:0, v7237:0, v7227:0, v7238:0, v7228:0, v7239:0, v7229:0, v7240:0, v7233:0, v7235:0, v7241:0, v7242:0, v7243:0, v7244:0, v7245:0, v7246:0, v7247:0, v7220:0, v7224:0, v7248:0, v7230:0, v7231:0, v7232:0, v7234:0, 3, 7, 2, 4, 8) -> f_1353(v7211:0, v7212:0, v7213:0, v7214:0, v7215:0, v7216:0, v7217:0, v7218:0, 1 + v7439:0, v7536:1, 1, v7222:0, 0, v7439:0, v7225:0, v7236:0, v7226:0, v7237:0, v7227:0, v7238:0, v7228:0, v7239:0, v7229:0, v7240:0, v7233:0, v7235:0, v7241:0, v7242:0, v7243:0, v7244:0, v7245:0, v7246:0, v7247:0, v7536:0, v7219:0, v7220:0, v7230:0, v7231:0, v7232:0, v7234:0, 3, 7, 2, 4, 8) :|: v7439:0 > 1 && v7233:0 > 1 + v7439:0 && v7536:1 < 0 && v7536:1 > v7222:0 && v7233:0 > 3
f_1353(v7211:0, v7212:0, v7213:0, v7214:0, v7215:0, v7216:0, v7217:0, v7218:0, v7439:0, v7536:0, 1, v7222:0, 0, v7219:0, v7225:0, v7236:0, v7226:0, v7237:0, v7227:0, v7238:0, v7228:0, v7239:0, v7229:0, v7240:0, v7233:0, v7235:0, v7241:0, v7242:0, v7243:0, v7244:0, v7245:0, v7246:0, v7247:0, v7220:0, v7224:0, v7248:0, v7230:0, v7231:0, v7232:0, v7234:0, 3, 7, 2, 4, 8) -> f_1353(v7211:0, v7212:0, v7213:0, v7214:0, v7215:0, v7216:0, v7217:0, v7218:0, 1 + v7439:0, v7536:1, 1, v7222:0, 0, v7439:0, v7225:0, v7236:0, v7226:0, v7237:0, v7227:0, v7238:0, v7228:0, v7239:0, v7229:0, v7240:0, v7233:0, v7235:0, v7241:0, v7242:0, v7243:0, v7244:0, v7245:0, v7246:0, v7247:0, v7536:0, v7219:0, v7220:0, v7230:0, v7231:0, v7232:0, v7234:0, 3, 7, 2, 4, 8) :|: v7439:0 > 1 && v7233:0 > 1 + v7439:0 && v7536:1 < 0 && v7536:1 < v7222:0 && v7233:0 > 3
f_1353(v7211:0, v7212:0, v7213:0, v7214:0, v7215:0, v7216:0, v7217:0, v7218:0, v7439:0, v7536:0, 1, v7222:0, 0, v7219:0, v7225:0, v7236:0, v7226:0, v7237:0, v7227:0, v7238:0, v7228:0, v7239:0, v7229:0, v7240:0, v7233:0, v7235:0, v7241:0, v7242:0, v7243:0, v7244:0, v7245:0, v7246:0, v7247:0, v7220:0, v7224:0, v7248:0, v7230:0, v7231:0, v7232:0, v7234:0, 3, 7, 2, 4, 8) -> f_1353(v7211:0, v7212:0, v7213:0, v7214:0, v7215:0, v7216:0, v7217:0, v7218:0, 1 + v7439:0, v7536:1, 1, v7222:0, 0, v7439:0, v7225:0, v7236:0, v7226:0, v7237:0, v7227:0, v7238:0, v7228:0, v7239:0, v7229:0, v7240:0, v7233:0, v7235:0, v7241:0, v7242:0, v7243:0, v7244:0, v7245:0, v7246:0, v7247:0, v7536:0, v7219:0, v7220:0, v7230:0, v7231:0, v7232:0, v7234:0, 3, 7, 2, 4, 8) :|: v7439:0 > 1 && v7233:0 > 1 + v7439:0 && v7536:1 > 0 && v7536:1 > v7222:0 && v7233:0 > 3
f_1353(v7211:0, v7212:0, v7213:0, v7214:0, v7215:0, v7216:0, v7217:0, v7218:0, v7439:0, v7536:0, 1, v7222:0, 0, v7219:0, v7225:0, v7236:0, v7226:0, v7237:0, v7227:0, v7238:0, v7228:0, v7239:0, v7229:0, v7240:0, v7233:0, v7235:0, v7241:0, v7242:0, v7243:0, v7244:0, v7245:0, v7246:0, v7247:0, v7220:0, v7224:0, v7248:0, v7230:0, v7231:0, v7232:0, v7234:0, 3, 7, 2, 4, 8) -> f_1353(v7211:0, v7212:0, v7213:0, v7214:0, v7215:0, v7216:0, v7217:0, v7218:0, 1 + v7439:0, v7536:1, 1, v7222:0, 0, v7439:0, v7225:0, v7236:0, v7226:0, v7237:0, v7227:0, v7238:0, v7228:0, v7239:0, v7229:0, v7240:0, v7233:0, v7235:0, v7241:0, v7242:0, v7243:0, v7244:0, v7245:0, v7246:0, v7247:0, v7536:0, v7219:0, v7220:0, v7230:0, v7231:0, v7232:0, v7234:0, 3, 7, 2, 4, 8) :|: v7439:0 > 1 && v7233:0 > 1 + v7439:0 && v7536:1 > 0 && v7536:1 < v7222:0 && v7233:0 > 3
Filtered unneeded arguments:
   f_1353(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45) -> f_1353(x9, x12, x25)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1353(v7439:0, v7222:0, v7233:0) -> f_1353(1 + v7439:0, v7222:0, v7233:0) :|: v7233:0 > 1 + v7439:0 && v7233:0 > 3 && v7439:0 > 1

----------------------------------------

(34)
Obligation:
Rules:
f_1353(v7439:0, v7222:0, v7233:0) -> f_1353(1 + v7439:0, v7222:0, v7233:0) :|: v7233:0 > 1 + v7439:0 && v7233:0 > 3 && v7439:0 > 1

----------------------------------------

(35) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(36)
Obligation:
Rules:
f_1353(v7439:0:0, v7222:0:0, v7233:0:0) -> f_1353(1 + v7439:0:0, v7222:0:0, v7233:0:0) :|: v7233:0:0 > 1 + v7439:0:0 && v7233:0:0 > 3 && v7439:0:0 > 1

----------------------------------------

(37) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1353(x1, x2, x3) -> f_1353(x1, x3)

----------------------------------------

(38)
Obligation:
Rules:
f_1353(v7439:0:0, v7233:0:0) -> f_1353(1 + v7439:0:0, v7233:0:0) :|: v7233:0:0 > 1 + v7439:0:0 && v7233:0:0 > 3 && v7439:0:0 > 1

----------------------------------------

(39) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1353(x, x1)] = -2 - x + x1

The following rules are decreasing:
f_1353(v7439:0:0, v7233:0:0) -> f_1353(1 + v7439:0:0, v7233:0:0) :|: v7233:0:0 > 1 + v7439:0:0 && v7233:0:0 > 3 && v7439:0:0 > 1
The following rules are bounded:
f_1353(v7439:0:0, v7233:0:0) -> f_1353(1 + v7439:0:0, v7233:0:0) :|: v7233:0:0 > 1 + v7439:0:0 && v7233:0:0 > 3 && v7439:0:0 > 1

----------------------------------------

(40)
YES

----------------------------------------

(41)
Obligation:
SCC
----------------------------------------

(42) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 24 rulesP rules:
f_1040(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3485, v4348, v3339, v3340, v3341, v4007, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3342, v3367, v3343, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) -> f_1048(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3485, v4348, v3339, v3340, v3341, v4007, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3342, v3367, v3343, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) :|: 0 = 0
f_1048(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3485, v4348, v3339, v3340, v3341, v4007, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3342, v3367, v3343, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) -> f_1056(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3485, v4348, v3339, v3340, v3341, v4007, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3342, v3367, v3343, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) :|: TRUE
f_1056(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3485, v4348, v3339, v3340, v3341, v4007, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3342, v3367, v3343, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) -> f_1063(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3485, v4348, v3340, v3341, v3339, v4007, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3342, v3367, v3343, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) :|: 0 = 0
f_1063(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3485, v4348, v3340, v3341, v3339, v4007, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3342, v3367, v3343, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) -> f_1068(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3485, v4348, v3340, v3341, v3339, v4007, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3342, v3367, v3343, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) :|: 0 = 0
f_1068(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3485, v4348, v3340, v3341, v3339, v4007, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3342, v3367, v3343, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) -> f_1073(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3485, v4348, v3341, v3340, v3339, v4007, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3342, v3367, v3343, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) :|: 0 = 0
f_1073(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3485, v4348, v3341, v3340, v3339, v4007, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3342, v3367, v3343, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) -> f_1079(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3485, v4348, v4007, v3340, v3339, v3341, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3342, v3367, v3343, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) :|: 0 = 0
f_1079(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3485, v4348, v4007, v3340, v3339, v3341, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3342, v3367, v3343, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) -> f_1085(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3485, v4348, v4007, v5063, v3340, v3339, v3341, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3342, v3367, v3343, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) :|: TRUE
f_1085(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3485, v4348, v4007, v5063, v3340, v3339, v3341, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3342, v3367, v3343, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) -> f_1092(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3485, v4348, v4007, v5063, v3339, v3341, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3340, v3342, v3367, v3343, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) :|: 0 = 0
f_1092(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3485, v4348, v4007, v5063, v3339, v3341, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3340, v3342, v3367, v3343, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) -> f_1099(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3485, v5063, v4007, v3339, v3341, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3340, v3342, v3367, v3343, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) :|: v4348 = v5063 && v4007 < v3353 && 4 <= v3353
f_1099(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3485, v5063, v4007, v3339, v3341, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3340, v3342, v3367, v3343, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) -> f_1107(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3485, v5063, v4007, v3339, v3341, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3340, v3342, v3367, v3343, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) :|: 0 = 0
f_1107(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3485, v5063, v4007, v3339, v3341, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3340, v3342, v3367, v3343, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) -> f_1115(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3485, v5063, v4007, v3339, v3341, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3340, v3342, v3367, v3343, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) :|: 0 = 0
f_1115(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3485, v5063, v4007, v3339, v3341, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3340, v3342, v3367, v3343, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) -> f_963(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3485, v5063, v4007, v3339, v3341, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3340, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) :|: TRUE
f_963(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3339, v3340, v3341, v3342, v3343, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3367, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) -> f_968(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3339, v3340, v3341, v3342, v3343, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3367, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) :|: TRUE
f_968(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3339, v3340, v3341, v3342, v3343, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3367, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) -> f_973(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3339, v3340, v3341, v3343, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3342, v3367, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) :|: 0 = 0
f_973(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3339, v3340, v3341, v3343, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3342, v3367, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) -> f_977(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3339, v3340, v3341, v3485, v3343, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3342, v3367, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) :|: v3485 = 1 + v3339 && 3 <= v3485
f_977(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3339, v3340, v3341, v3485, v3343, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3342, v3367, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) -> f_983(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3339, v3340, v3341, v3485, v3343, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3342, v3367, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) :|: TRUE
f_983(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3339, v3340, v3341, v3485, v3343, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3342, v3367, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) -> f_989(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3339, v3340, v3341, v3485, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3342, v3367, v3343, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) :|: 0 = 0
f_989(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3339, v3340, v3341, v3485, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3342, v3367, v3343, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) -> f_998(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3339, v3340, v3341, v3485, v4007, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3342, v3367, v3343, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) :|: v4007 = 1 + v3341 && 3 <= v4007
f_998(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3339, v3340, v3341, v3485, v4007, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3342, v3367, v3343, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) -> f_1005(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3339, v3340, v3341, v3485, v4007, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3342, v3367, v3343, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) :|: TRUE
f_1005(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3339, v3340, v3341, v3485, v4007, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3342, v3367, v3343, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) -> f_1012(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3339, v3340, v3341, v3485, v4007, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3342, v3367, v3343, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) :|: TRUE
f_1012(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3339, v3340, v3341, v3485, v4007, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3342, v3367, v3343, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) -> f_1019(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3485, v3340, v3339, v3341, v4007, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3342, v3367, v3343, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) :|: 0 = 0
f_1019(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3485, v3340, v3339, v3341, v4007, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3342, v3367, v3343, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) -> f_1026(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3485, v4348, v3340, v3339, v3341, v4007, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3342, v3367, v3343, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) :|: TRUE
f_1026(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3485, v4348, v3340, v3339, v3341, v4007, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3342, v3367, v3343, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) -> f_1033(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3485, v4348, v3339, v3340, v3341, v4007, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3342, v3367, v3343, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) :|: 0 = 0
f_1033(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3485, v4348, v3339, v3340, v3341, v4007, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3342, v3367, v3343, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) -> f_1040(v3329, v3330, v3331, v3332, v3333, v3334, v3335, v3336, v3337, 1, v3485, v4348, v3339, v3340, v3341, v4007, v3344, v3356, v3345, v3357, v3346, v3358, v3347, v3359, v3348, v3360, v3353, v3355, v3361, v3362, v3363, v3364, v3365, v3366, v3342, v3367, v3343, 0, v3349, v3350, v3352, v3354, 3, 7, 2, 4, 8) :|: v4348 != 0 && v3485 < v3355 && 4 <= v3355
Combined rules. Obtained 2 rulesP rules:
f_1040(v3329:0, v3330:0, v3331:0, v3332:0, v3333:0, v3334:0, v3335:0, v3336:0, v3337:0, 1, v3485:0, v4348:0, v3339:0, v3340:0, v3341:0, v4007:0, v3344:0, v3356:0, v3345:0, v3357:0, v3346:0, v3358:0, v3347:0, v3359:0, v3348:0, v3360:0, v3353:0, v3355:0, v3361:0, v3362:0, v3363:0, v3364:0, v3365:0, v3366:0, v3342:0, v3367:0, v3343:0, 0, v3349:0, v3350:0, v3352:0, v3354:0, 3, 7, 2, 4, 8) -> f_1040(v3329:0, v3330:0, v3331:0, v3332:0, v3333:0, v3334:0, v3335:0, v3336:0, v3337:0, 1, 1 + v3485:0, v4348:1, v3485:0, v4348:0, v4007:0, 1 + v4007:0, v3344:0, v3356:0, v3345:0, v3357:0, v3346:0, v3358:0, v3347:0, v3359:0, v3348:0, v3360:0, v3353:0, v3355:0, v3361:0, v3362:0, v3363:0, v3364:0, v3365:0, v3366:0, v3339:0, v3340:0, v3341:0, 0, v3349:0, v3350:0, v3352:0, v3354:0, 3, 7, 2, 4, 8) :|: v4007:0 < v3353:0 && v3353:0 > 3 && v3485:0 > 1 && v4007:0 > 1 && v3355:0 > 1 + v3485:0 && v3355:0 > 3 && v4348:1 < 0
f_1040(v3329:0, v3330:0, v3331:0, v3332:0, v3333:0, v3334:0, v3335:0, v3336:0, v3337:0, 1, v3485:0, v4348:0, v3339:0, v3340:0, v3341:0, v4007:0, v3344:0, v3356:0, v3345:0, v3357:0, v3346:0, v3358:0, v3347:0, v3359:0, v3348:0, v3360:0, v3353:0, v3355:0, v3361:0, v3362:0, v3363:0, v3364:0, v3365:0, v3366:0, v3342:0, v3367:0, v3343:0, 0, v3349:0, v3350:0, v3352:0, v3354:0, 3, 7, 2, 4, 8) -> f_1040(v3329:0, v3330:0, v3331:0, v3332:0, v3333:0, v3334:0, v3335:0, v3336:0, v3337:0, 1, 1 + v3485:0, v4348:1, v3485:0, v4348:0, v4007:0, 1 + v4007:0, v3344:0, v3356:0, v3345:0, v3357:0, v3346:0, v3358:0, v3347:0, v3359:0, v3348:0, v3360:0, v3353:0, v3355:0, v3361:0, v3362:0, v3363:0, v3364:0, v3365:0, v3366:0, v3339:0, v3340:0, v3341:0, 0, v3349:0, v3350:0, v3352:0, v3354:0, 3, 7, 2, 4, 8) :|: v4007:0 < v3353:0 && v3353:0 > 3 && v3485:0 > 1 && v4007:0 > 1 && v3355:0 > 1 + v3485:0 && v3355:0 > 3 && v4348:1 > 0
Filtered unneeded arguments:
   f_1040(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47) -> f_1040(x11, x16, x27, x28)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1040(v3485:0, v4007:0, v3353:0, v3355:0) -> f_1040(1 + v3485:0, 1 + v4007:0, v3353:0, v3355:0) :|: v3353:0 > 3 && v4007:0 < v3353:0 && v3485:0 > 1 && v4007:0 > 1 && v3355:0 > 3 && v3355:0 > 1 + v3485:0

----------------------------------------

(43)
Obligation:
Rules:
f_1040(v3485:0, v4007:0, v3353:0, v3355:0) -> f_1040(1 + v3485:0, 1 + v4007:0, v3353:0, v3355:0) :|: v3353:0 > 3 && v4007:0 < v3353:0 && v3485:0 > 1 && v4007:0 > 1 && v3355:0 > 3 && v3355:0 > 1 + v3485:0

----------------------------------------

(44) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(45)
Obligation:
Rules:
f_1040(v3485:0:0, v4007:0:0, v3353:0:0, v3355:0:0) -> f_1040(1 + v3485:0:0, 1 + v4007:0:0, v3353:0:0, v3355:0:0) :|: v3355:0:0 > 3 && v3355:0:0 > 1 + v3485:0:0 && v4007:0:0 > 1 && v3485:0:0 > 1 && v4007:0:0 < v3353:0:0 && v3353:0:0 > 3

----------------------------------------

(46) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1040 ] = f_1040_4 + -1*f_1040_1

The following rules are decreasing:
f_1040(v3485:0:0, v4007:0:0, v3353:0:0, v3355:0:0) -> f_1040(1 + v3485:0:0, 1 + v4007:0:0, v3353:0:0, v3355:0:0) :|: v3355:0:0 > 3 && v3355:0:0 > 1 + v3485:0:0 && v4007:0:0 > 1 && v3485:0:0 > 1 && v4007:0:0 < v3353:0:0 && v3353:0:0 > 3

The following rules are bounded:
f_1040(v3485:0:0, v4007:0:0, v3353:0:0, v3355:0:0) -> f_1040(1 + v3485:0:0, 1 + v4007:0:0, v3353:0:0, v3355:0:0) :|: v3355:0:0 > 3 && v3355:0:0 > 1 + v3485:0:0 && v4007:0:0 > 1 && v3485:0:0 > 1 && v4007:0:0 < v3353:0:0 && v3353:0:0 > 3


----------------------------------------

(47)
YES
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.001s
