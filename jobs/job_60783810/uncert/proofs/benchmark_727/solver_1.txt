YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/A7uKC.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could be proven:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 18 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 294 ms]
(4) LLVM Symbolic Execution Graph
(5) SEGraph to IRS [EQUIVALENT, 58 ms]
(6) IntTRS
(7) IRSToKoat [EQUIVALENT, 0 ms]
(8) Koat Problem
(9) KoAT2 [EQUIVALENT, 125 ms]
(10) YES


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/A7uKC.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/A7uKC.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Name: x initVal: 0 type: i32 addrSpace: null alignment: 4 threadLocal: false constant: false linkageType: COMMON section: null

Function declarations and definitions:

*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "foo" linkageType: EXTERNALLY_VISIBLE returnParam: BasicVoidType parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 12
	0:
		%1 = load @x
		%2 = add i32 %1, -1
		store %2, @x
		ret void

*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 17
	0:
		%1 = alloca i32, align 4
		store 0, %1
		%2 = call i32 @__VERIFIER_nondet_int()
		store %2, @x
		br %3
	3:
		%4 = load @x
		%5 = icmp sgt %4 0
		br %5, %6, %12
	6:
		%7 = call i32 @__VERIFIER_nondet_int()
		%8 = icmp ne %7 0
		br %8, %9, %10
	9:
		Unnamed Call-Instruction = call BasicVoidType @foo()
		br %11
	10:
		Unnamed Call-Instruction = call BasicVoidType @foo()
		br %11
	11:
		br %3
	12:
		ret 0


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SEGraph to IRS (EQUIVALENT)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 77 rulesP rules:
f_67(v1, v2, v3, 3, 1) -> f_68(v1, v5, v2, v6, v3, 3, 1, 4) :|: 1 <= v5 && v6 = 3 + v5 && 4 <= v2 && 4 <= v6
f_68(v1, v5, v2, v6, v3, 3, 1, 4) -> f_69(v1, v5, v2, v6, v3, 0, 3, 1, 4) :|: TRUE
f_69(v1, v5, v2, v6, v3, 0, 3, 1, 4) -> f_70(v1, v5, v7, v2, v6, v3, 0, 3, 1, 4) :|: TRUE
f_70(v1, v5, v7, v2, v6, v3, 0, 3, 1, 4) -> f_71(v1, v5, v7, v2, v6, 0, 3, 1, 4) :|: TRUE
f_71(v1, v5, v7, v2, v6, 0, 3, 1, 4) -> f_72(v1, v5, v7, v2, v6, 0, 3, 1, 4) :|: TRUE
f_72(v1, v5, v7, v2, v6, 0, 3, 1, 4) -> f_73(v1, v5, v7, v2, v6, 0, 3, 1, 4) :|: 0 = 0
f_73(v1, v5, v7, v2, v6, 0, 3, 1, 4) -> f_74(v1, v5, v7, v2, v6, 0, 3, 1, 4) :|: 0 < v7
f_73(v1, v5, v7, v2, v6, 0, 3, 1, 4) -> f_75(v1, v5, v7, v2, v6, 0, 3, 1, 4) :|: v7 <= 0
f_74(v1, v5, v7, v2, v6, 0, 3, 1, 4) -> f_76(v1, v5, v7, 1, v2, v6, 0, 3, 4) :|: 0 = 0
f_75(v1, v5, v7, v2, v6, 0, 3, 1, 4) -> f_77(v1, v5, v7, 0, v2, v6, 3, 1, 4) :|: 0 = 0
f_76(v1, v5, v7, 1, v2, v6, 0, 3, 4) -> f_78(v1, v5, v7, 1, v2, v6, 0, 3, 4) :|: TRUE
f_77(v1, v5, v7, 0, v2, v6, 3, 1, 4) -> f_79(v1, v5, v7, 0, v2, v6, 3, 1, 4) :|: TRUE
f_78(v1, v5, v7, 1, v2, v6, 0, 3, 4) -> f_80(v1, v5, v7, 1, v9, v2, v6, 0, 3, 4) :|: TRUE
f_80(v1, v5, v7, 1, v9, v2, v6, 0, 3, 4) -> f_81(v1, v5, v7, 1, v9, v2, v6, 0, 3, 4) :|: v9 != 0
f_80(v1, v5, v7, 1, v9, v2, v6, 0, 3, 4) -> f_82(v1, v5, v7, 1, 0, v2, v6, 3, 4) :|: v9 = 0
f_81(v1, v5, v7, 1, v9, v2, v6, 0, 3, 4) -> f_83(v1, v5, v7, 1, v9, v2, v6, 0, 3, 4) :|: 0 = 0
f_82(v1, v5, v7, 1, 0, v2, v6, 3, 4) -> f_84(v1, v5, v7, 1, 0, v2, v6, 3, 4) :|: 0 = 0
f_83(v1, v5, v7, 1, v9, v2, v6, 0, 3, 4) -> f_85(v1, v5, v7, 1, v9, v2, v6, 0, 3, 4) :|: TRUE
f_84(v1, v5, v7, 1, 0, v2, v6, 3, 4) -> f_86(v1, v5, v7, 1, 0, v2, v6, 3, 4) :|: TRUE
f_85(v1, v5, v7, 1, v9, v2, v6, 0, 3, 4) -> f_87(v1, v2, v5, v6, 0, v7, 1, v9, 3, 4) :|: TRUE
f_86(v1, v5, v7, 1, 0, v2, v6, 3, 4) -> f_88(v1, v2, v5, v6, 0, v7, 1, 3, 4) :|: TRUE
f_87(v1, v2, v5, v6, 0, v7, 1, v9, 3, 4) -> f_89(v1, v7, v2, v5, v6, 0, 1, v9, 3, 4) :|: 0 = 0
f_88(v1, v2, v5, v6, 0, v7, 1, 3, 4) -> f_131(v1, v2, v5, v6, v7, 0, v49, 1, 3, 4) :|: TRUE
f_89(v1, v7, v2, v5, v6, 0, 1, v9, 3, 4) -> f_91(v1, v7, v10, v2, v5, v6, 0, 1, v9, 3, 4) :|: 1 + v10 = v7 && 0 <= v10
f_91(v1, v7, v10, v2, v5, v6, 0, 1, v9, 3, 4) -> f_93(v1, v7, v10, v2, v5, v6, 0, 1, v9, 3, 4) :|: TRUE
f_93(v1, v7, v10, v2, v5, v6, 0, 1, v9, 3, 4) -> f_95(v1, v5, v7, 1, v9, v2, v6, 0, v10, 3, 4) :|: TRUE
f_95(v1, v5, v7, 1, v9, v2, v6, 0, v10, 3, 4) -> f_97(v1, v5, v7, 1, v9, v2, v6, 0, v10, 3, 4) :|: TRUE
f_97(v1, v5, v7, 1, v9, v2, v6, 0, v10, 3, 4) -> f_99(v1, v5, v7, 1, v9, v2, v6, 0, v10, 3, 4) :|: TRUE
f_99(v1, v5, v7, 1, v9, v2, v6, 0, v10, 3, 4) -> f_143(v1, v5, v7, v7, 1, v9, v2, v6, v10, 0, 3, 4) :|: TRUE
f_131(v47, v53, v48, v54, v50, 0, v49, 1, 3, 4) -> f_175(v47, v53, v48, v54, v50, 0, v108, 1, 3, 4) :|: TRUE
f_143(v62, v63, v64, v65, 1, v67, v68, v69, v70, 0, 3, 4) -> f_187(v62, v63, v64, v65, 1, v67, v68, v69, v70, 0, 3, 4) :|: TRUE
f_175(v106, v112, v107, v113, v109, 0, v108, 1, 3, 4) -> f_177(v106, v109, v112, v107, v113, 0, v108, 1, 3, 4) :|: 0 = 0
f_177(v106, v109, v112, v107, v113, 0, v108, 1, 3, 4) -> f_179(v106, v109, v116, v112, v107, v113, 0, v108, 1, 3, 4) :|: 1 + v116 = v109 && 0 <= v116
f_179(v106, v109, v116, v112, v107, v113, 0, v108, 1, 3, 4) -> f_181(v106, v109, v116, v112, v107, v113, 0, v108, 1, 3, 4) :|: TRUE
f_181(v106, v109, v116, v112, v107, v113, 0, v108, 1, 3, 4) -> f_183(v106, v107, v108, v109, 1, 0, v112, v113, v116, 3, 4) :|: TRUE
f_183(v106, v107, v108, v109, 1, 0, v112, v113, v116, 3, 4) -> f_185(v106, v107, v108, v109, 1, 0, v112, v113, v116, 3, 4) :|: TRUE
f_185(v106, v107, v108, v109, 1, 0, v112, v113, v116, 3, 4) -> f_188(v106, v107, v108, v109, 1, 0, v112, v113, v116, 3, 4) :|: TRUE
f_187(v121, v122, v123, v124, 1, v126, v127, v128, v129, 0, 3, 4) -> f_189(v121, v122, v123, v129, 1, v126, v127, v128, 0, 3, 4) :|: 0 = 0
f_188(v106, v107, v108, v109, 1, 0, v112, v113, v116, 3, 4) -> f_190(v106, v107, v108, v116, 1, 0, v112, v113, 3, 4) :|: 0 = 0
f_189(v121, v122, v123, v129, 1, v126, v127, v128, 0, 3, 4) -> f_191(v121, v122, v123, v129, 1, v126, v127, v128, 0, 3, 2, 4) :|: 0 < v129 && 2 <= v123
f_189(v121, v122, v123, v129, 1, v126, v127, v128, 0, 3, 4) -> f_192(v121, v122, v123, 0, 1, v126, v127, v128, 3, 4) :|: v129 <= 0
f_190(v106, v107, v108, v116, 1, 0, v112, v113, 3, 4) -> f_193(v106, v107, v108, v116, 1, 0, v112, v113, 3, 2, 4) :|: 0 < v116 && 2 <= v108
f_190(v106, v107, v108, v116, 1, 0, v112, v113, 3, 4) -> f_194(v106, v107, v108, 0, 1, v112, v113, 3, 4) :|: v116 <= 0
f_191(v121, v122, v123, v129, 1, v126, v127, v128, 0, 3, 2, 4) -> f_195(v121, v122, v123, v129, 1, v126, v127, v128, 0, 3, 2, 4) :|: 0 = 0
f_192(v121, v122, v123, 0, 1, v126, v127, v128, 3, 4) -> f_196(v121, v122, v123, 0, v126, 1, v127, v128, 3, 4) :|: 0 = 0
f_193(v106, v107, v108, v116, 1, 0, v112, v113, 3, 2, 4) -> f_197(v106, v107, v108, v116, 1, 0, v112, v113, 3, 2, 4) :|: 0 = 0
f_194(v106, v107, v108, 0, 1, v112, v113, 3, 4) -> f_198(v106, v107, v108, 0, v112, v113, 3, 1, 4) :|: 0 = 0
f_195(v121, v122, v123, v129, 1, v126, v127, v128, 0, 3, 2, 4) -> f_199(v121, v122, v123, v129, 1, v126, v127, v128, 0, 3, 2, 4) :|: TRUE
f_196(v121, v122, v123, 0, v126, 1, v127, v128, 3, 4) -> f_200(v121, v122, v123, 0, v126, 1, v127, v128, 3, 4) :|: TRUE
f_197(v106, v107, v108, v116, 1, 0, v112, v113, 3, 2, 4) -> f_201(v106, v107, v108, v116, 1, 0, v112, v113, 3, 2, 4) :|: TRUE
f_198(v106, v107, v108, 0, v112, v113, 3, 1, 4) -> f_202(v106, v107, v108, 0, v112, v113, 3, 1, 4) :|: TRUE
f_199(v121, v122, v123, v129, 1, v126, v127, v128, 0, 3, 2, 4) -> f_203(v121, v122, v123, v129, 1, v145, v127, v128, 0, 3, 2, 4) :|: TRUE
f_201(v106, v107, v108, v116, 1, 0, v112, v113, 3, 2, 4) -> f_204(v106, v107, v108, v116, 1, v146, 0, v112, v113, 3, 2, 4) :|: TRUE
f_203(v121, v122, v123, v129, 1, v145, v127, v128, 0, 3, 2, 4) -> f_205(v121, v122, v123, v129, 1, v145, v127, v128, 0, 3, 2, 4) :|: v145 != 0
f_203(v121, v122, v123, v129, 1, v145, v127, v128, 0, 3, 2, 4) -> f_206(v121, v122, v123, v129, 1, 0, v127, v128, 3, 2, 4) :|: v145 = 0
f_204(v106, v107, v108, v116, 1, v146, 0, v112, v113, 3, 2, 4) -> f_207(v106, v107, v108, v116, 1, v146, 0, v112, v113, 3, 2, 4) :|: v146 != 0
f_204(v106, v107, v108, v116, 1, v146, 0, v112, v113, 3, 2, 4) -> f_208(v106, v107, v108, v116, 1, 0, v112, v113, 3, 2, 4) :|: v146 = 0
f_205(v121, v122, v123, v129, 1, v145, v127, v128, 0, 3, 2, 4) -> f_209(v121, v122, v123, v129, 1, v145, v127, v128, 0, 3, 2, 4) :|: 0 = 0
f_206(v121, v122, v123, v129, 1, 0, v127, v128, 3, 2, 4) -> f_210(v121, v122, v123, v129, 1, 0, v127, v128, 3, 2, 4) :|: 0 = 0
f_207(v106, v107, v108, v116, 1, v146, 0, v112, v113, 3, 2, 4) -> f_211(v106, v107, v108, v116, 1, v146, v112, v113, 0, 3, 2, 4) :|: 0 = 0
f_208(v106, v107, v108, v116, 1, 0, v112, v113, 3, 2, 4) -> f_212(v106, v107, v108, v116, 1, 0, v112, v113, 3, 2, 4) :|: 0 = 0
f_209(v121, v122, v123, v129, 1, v145, v127, v128, 0, 3, 2, 4) -> f_213(v121, v122, v123, v129, 1, v145, v127, v128, 0, 3, 2, 4) :|: TRUE
f_210(v121, v122, v123, v129, 1, 0, v127, v128, 3, 2, 4) -> f_214(v121, v122, v123, v129, 1, 0, v127, v128, 3, 2, 4) :|: TRUE
f_211(v106, v107, v108, v116, 1, v146, v112, v113, 0, 3, 2, 4) -> f_215(v106, v107, v108, v116, 1, v146, v112, v113, 0, 3, 2, 4) :|: TRUE
f_212(v106, v107, v108, v116, 1, 0, v112, v113, 3, 2, 4) -> f_216(v106, v107, v108, v116, 1, 0, v112, v113, 3, 2, 4) :|: TRUE
f_213(v121, v122, v123, v129, 1, v145, v127, v128, 0, 3, 2, 4) -> f_217(v121, v127, v122, v128, v129, 0, v123, 1, v145, 3, 2, 4) :|: TRUE
f_214(v121, v122, v123, v129, 1, 0, v127, v128, 3, 2, 4) -> f_218(v121, v127, v122, v128, v129, 0, v123, 1, 3, 2, 4) :|: TRUE
f_215(v106, v107, v108, v116, 1, v146, v112, v113, 0, 3, 2, 4) -> f_213(v106, v107, v108, v116, 1, v146, v112, v113, 0, 3, 2, 4) :|: TRUE
f_216(v106, v107, v108, v116, 1, 0, v112, v113, 3, 2, 4) -> f_214(v106, v107, v108, v116, 1, 0, v112, v113, 3, 2, 4) :|: TRUE
f_217(v121, v127, v122, v128, v129, 0, v123, 1, v145, 3, 2, 4) -> f_219(v121, v129, v127, v122, v128, 0, v123, 1, v145, 3, 2, 4) :|: 0 = 0
f_218(v121, v127, v122, v128, v129, 0, v123, 1, 3, 2, 4) -> f_175(v121, v127, v122, v128, v129, 0, v108, 1, 3, 4) :|: TRUE
f_219(v121, v129, v127, v122, v128, 0, v123, 1, v145, 3, 2, 4) -> f_220(v121, v129, v174, v127, v122, v128, 0, v123, 1, v145, 3, 2, 4) :|: 1 + v174 = v129 && 0 <= v174
f_220(v121, v129, v174, v127, v122, v128, 0, v123, 1, v145, 3, 2, 4) -> f_221(v121, v129, v174, v127, v122, v128, 0, v123, 1, v145, 3, 2, 4) :|: TRUE
f_221(v121, v129, v174, v127, v122, v128, 0, v123, 1, v145, 3, 2, 4) -> f_222(v121, v122, v123, v129, 1, v145, v127, v128, 0, v174, 3, 2, 4) :|: TRUE
f_222(v121, v122, v123, v129, 1, v145, v127, v128, 0, v174, 3, 2, 4) -> f_223(v121, v122, v123, v129, 1, v145, v127, v128, 0, v174, 3, 2, 4) :|: TRUE
f_223(v121, v122, v123, v129, 1, v145, v127, v128, 0, v174, 3, 2, 4) -> f_224(v121, v122, v123, v129, 1, v145, v127, v128, 0, v174, 3, 2, 4) :|: TRUE
f_224(v121, v122, v123, v129, 1, v145, v127, v128, 0, v174, 3, 2, 4) -> f_187(v121, v122, v123, v129, 1, v145, v127, v128, v174, 0, 3, 4) :|: TRUE
Combined rules. Obtained 12 rulesP rules:
f_190(v106:0, v107:0, v108:0, v116:0, 1, 0, v112:0, v113:0, 3, 4) -> f_202(v106:0, v107:0, v108:0, 0, v112:0, v113:0, 3, 1, 4) :|: v116:0 < 1
f_189(v121:0, v122:0, v123:0, 1 + v174:0, 1, v126:0, v127:0, v128:0, 0, 3, 4) -> f_189(v121:0, v122:0, v123:0, v174:0, 1, v145:0, v127:0, v128:0, 0, 3, 4) :|: v123:0 > 1 && v174:0 > -1 && v145:0 < 0
f_189(v121:0, v122:0, v123:0, 1 + v174:0, 1, v126:0, v127:0, v128:0, 0, 3, 4) -> f_189(v121:0, v122:0, v123:0, v174:0, 1, v145:0, v127:0, v128:0, 0, 3, 4) :|: v123:0 > 1 && v174:0 > -1 && v145:0 > 0
f_67(v1:0, v2:0, v3:0, 3, 1) -> f_190(v1:0, v5:0, v108:0, v116:0, 1, 0, v2:0, 3 + v5:0, 3, 4) :|: v5:0 > 0 && v2:0 > 3 && v116:0 > -1
f_189(v121:0, v122:0, v123:0, v129:0, 1, v126:0, v127:0, v128:0, 0, 3, 4) -> f_200(v121:0, v122:0, v123:0, 0, v126:0, 1, v127:0, v128:0, 3, 4) :|: v129:0 < 1
f_67(v1:0, v2:0, v3:0, 3, 1) -> f_189(v1:0, v5:0, 1 + v10:0, v10:0, 1, v9:0, v2:0, 3 + v5:0, 0, 3, 4) :|: v5:0 > 0 && v2:0 > 3 && v10:0 > -1 && v9:0 < 0
f_67(v1:0, v2:0, v3:0, 3, 1) -> f_189(v1:0, v5:0, 1 + v10:0, v10:0, 1, v9:0, v2:0, 3 + v5:0, 0, 3, 4) :|: v5:0 > 0 && v2:0 > 3 && v10:0 > -1 && v9:0 > 0
f_190(v106:0, v107:0, v108:0, 1 + v116:1, 1, 0, v112:0, v113:0, 3, 4) -> f_190(v106:0, v107:0, v108:1, v116:1, 1, 0, v112:0, v113:0, 3, 4) :|: v108:0 > 1 && v116:1 > -1
f_190(v106:0, v107:0, v108:0, 1 + v174:0, 1, 0, v112:0, v113:0, 3, 4) -> f_189(v106:0, v107:0, v108:0, v174:0, 1, v146:0, v112:0, v113:0, 0, 3, 4) :|: v108:0 > 1 && v174:0 > -1 && v146:0 < 0
f_190(v106:0, v107:0, v108:0, 1 + v174:0, 1, 0, v112:0, v113:0, 3, 4) -> f_189(v106:0, v107:0, v108:0, v174:0, 1, v146:0, v112:0, v113:0, 0, 3, 4) :|: v108:0 > 1 && v174:0 > -1 && v146:0 > 0
f_67(v1:0, v2:0, v3:0, 3, 1) -> f_79(v1:0, v5:0, v7:0, 0, v2:0, 3 + v5:0, 3, 1, 4) :|: v5:0 > 0 && v2:0 > 3 && v7:0 < 1
f_189(v121:0, v122:0, v123:0, 1 + v116:0, 1, v126:0, v127:0, v128:0, 0, 3, 4) -> f_190(v121:0, v122:0, v108:0, v116:0, 1, 0, v127:0, v128:0, 3, 4) :|: v123:0 > 1 && v116:0 > -1
Filtered unneeded arguments:
   f_190(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f_190(x3, x4)
   f_189(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11) -> f_189(x3, x4)
Removed division, modulo operations, cleaned up constraints. Obtained 9 rules.P rules:
f_190(v108:0, v116:0) -> f_202(v106:0, v107:0, v108:0, 0, v112:0, v113:0, 3, 1, 4) :|: v116:0 < 1
f_189(v123:0, sum~cons_1~v174:0) -> f_189(v123:0, v174:0) :|: v123:0 > 1 && v174:0 > -1 && sum~cons_1~v174:0 = 1 + v174:0
f_67(v1:0, v2:0, v3:0, cons_3, cons_1) -> f_190(v108:0, v116:0) :|: v2:0 > 3 && v116:0 > -1 && cons_3 = 3 && cons_1 = 1
f_189(v123:0, v129:0) -> f_200(v121:0, v122:0, v123:0, 0, v126:0, 1, v127:0, v128:0, 3, 4) :|: v129:0 < 1
f_67(v1:0, v2:0, v3:0, cons_3, cons_1) -> f_189(1 + v10:0, v10:0) :|: v2:0 > 3 && v10:0 > -1 && cons_3 = 3 && cons_1 = 1
f_190(v108:0, sum~cons_1~v116:1) -> f_190(v108:1, v116:1) :|: v108:0 > 1 && v116:1 > -1 && sum~cons_1~v116:1 = 1 + v116:1
f_190(v108:0, sum~cons_1~v174:0) -> f_189(v108:0, v174:0) :|: v108:0 > 1 && v174:0 > -1 && sum~cons_1~v174:0 = 1 + v174:0
f_67(v1:0, v2:0, v3:0, cons_3, cons_1) -> f_79(v1:0, v5:0, v7:0, 0, v2:0, 3 + v5:0, 3, 1, 4) :|: v2:0 > 3 && v7:0 < 1 && v5:0 > 0 && cons_3 = 3 && cons_1 = 1
f_189(v123:0, sum~cons_1~v116:0) -> f_190(v108:0, v116:0) :|: v123:0 > 1 && v116:0 > -1 && sum~cons_1~v116:0 = 1 + v116:0

----------------------------------------

(6)
Obligation:
Rules:
f_190(v108:0, v116:0) -> f_202(v106:0, v107:0, v108:0, 0, v112:0, v113:0, 3, 1, 4) :|: v116:0 < 1
f_189(v123:0, sum~cons_1~v174:0) -> f_189(v123:0, v174:0) :|: v123:0 > 1 && v174:0 > -1 && sum~cons_1~v174:0 = 1 + v174:0
f_67(x, x1, x2, x3, x4) -> f_190(x5, x6) :|: x1 > 3 && x6 > -1 && x3 = 3 && x4 = 1
f_189(x7, x8) -> f_200(x9, x10, x7, 0, x11, 1, x12, x13, 3, 4) :|: x8 < 1
f_67(v1:0, v2:0, v3:0, cons_3, cons_1) -> f_189(1 + v10:0, v10:0) :|: v2:0 > 3 && v10:0 > -1 && cons_3 = 3 && cons_1 = 1
f_190(x14, x15) -> f_190(x16, x17) :|: x14 > 1 && x17 > -1 && x15 = 1 + x17
f_190(x18, x19) -> f_189(x18, x20) :|: x18 > 1 && x20 > -1 && x19 = 1 + x20
f_67(x21, x22, x23, x24, x25) -> f_79(x21, x26, x27, 0, x22, 3 + x26, 3, 1, 4) :|: x22 > 3 && x27 < 1 && x26 > 0 && x24 = 3 && x25 = 1
f_189(x28, x29) -> f_190(x30, x31) :|: x28 > 1 && x31 > -1 && x29 = 1 + x31
Start term: f_67(v1, v2, v3, 3, 1)

----------------------------------------

(7) IRSToKoat (EQUIVALENT)
Convert an IRS to a koat problem
----------------------------------------

(8)
Obligation:
(GOAL COMPLEXITY)
(STARTTERM (FUNCTIONSYMBOLS f_67))
(VAR k36 k37 k38 k39 k32 k33 k34 k35 k30 k31 x46 x47 x48 x49 x42 x43 x44 x45 k29 x40 x41 k25 k26 k27 k28 k21 k22 k23 k24 k20 x39 x35 x36 x37 x38 x31 x32 x33 x34 k18 k19 x30 x70 x68 x69 x64 x65 x66 x67 x60 x61 x62 x63 k7 k8 k5 k6 k43 k44 k9 k45 k46 k0 k40 k41 k42 k3 k4 k1 k2 x57 x58 x59 x53 x54 x55 x56 x50 x51 x52 x90 x91 x92 x86 x87 x88 x89 x x82 x83 x84 x85 x80 x81 x79 x110 x75 x76 x'' x77 x78 x71 x72 x73 x74 k14 k15 x109 k16 k17 k10 k11 k12 k13 x4 x28 x5 x29 x2 x3 x8 x24 x9 x25 x6 x26 x100 x7 x27 x20 x102 x21 x101 x22 x104 x23 x103 x106 x1 x105 x108 x107 x' x17 x18 x19 x13 x14 x15 x16 x97 x10 x98 x11 x99 x12 x93 x94 x95 x96)
(RULES
  f_190(k36, k37, x58, x59, x60, x61, x62, x63, x64, x65) -> f_190(k38, k31, x66, x67, x68, x69, x70, x71, x72, x73) :|: k36 > 1 && k31 > -1 && k37 = 1 + k31
  f_67(k22, k23, k7, k8, k1, x45, x46, x47, x48, x49) -> f_190(k4, k13, x50, x51, x52, x53, x54, x55, x56, x57) :|: k23 > 3 && k13 > -1 && k8 = 3 && k1 = 1
  f_189(k0, k32, x7, x8, x9, x10, x11, x12, x13, x14) -> f_189(k0, k25, x15, x16, x17, x18, x19, x20, x21, x22) :|: k0 > 1 && k25 > -1 && k32 = 1 + k25
  f_190(k39, k20, x, x', x'', x1, x2, x3, x4, x5) -> f_202(k43, k41, k39, 0, k26, k24, 3, 1, 4, x6) :|: k20 < 1
  f_67(k18, k19, k21, k10, k12, x23, x24, x25, x26, x27) -> f_79(k18, k14, k16, 0, k19, 3 + k14, 3, 1, 4, x28) :|: k19 > 3 && k16 < 1 && k14 > 0 && k10 = 3 && k12 = 1
  f_190(k33, k34, x29, x30, x31, x32, x33, x34, x35, x36) -> f_189(k33, k17, x37, x38, x39, x40, x41, x42, x43, x44) :|: k33 > 1 && k17 > -1 && k34 = 1 + k17
  f_67(k30, k2, k5, k27, k29, x74, x75, x76, x77, x78) -> f_189(1 + k28, k28, x79, x80, x81, x82, x83, x84, x85, x86) :|: k2 > 3 && k28 > -1 && k27 = 3 && k29 = 1
  f_189(k3, k6, x87, x88, x89, x90, x91, x92, x93, x94) -> f_190(k46, k40, x95, x96, x97, x98, x99, x100, x101, x102) :|: k3 > 1 && k40 > -1 && k6 = 1 + k40
  f_189(k15, k9, x103, x104, x105, x106, x107, x108, x109, x110) -> f_200(k11, k42, k15, 0, k44, 1, k45, k35, 3, 4) :|: k9 < 1
)

----------------------------------------

(9) KoAT2 (EQUIVALENT)
KoAT2 was called with the following command:

/aprove/bin/koat2 analyse --termination --cfr=pe -d5 --local=mprf,twn -rtermcomp -i /tmp/aprove.InputModules.Programs.koat2_5208827613264377075.koat 

KoAT2's output was:

YES

----------------------------------------

(10)
YES
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.0s
