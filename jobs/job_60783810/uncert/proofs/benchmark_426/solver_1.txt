MAYBE
proof of /hpcwork/ff862203/termcomp25/benchmarks/OLSMT.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could not be shown:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 18 ms]
(2) LLVM problem
    (3) LLVMToTerminationGraphProof [EQUIVALENT, 795 ms]
    (4) LLVM Symbolic Execution Graph
    (5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
    (6) AND
        (7) LLVM Symbolic Execution SCC
            (8) SCC2IRS [SOUND, 36 ms]
            (9) IntTRS
                (10) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                (11) IntTRS
                (12) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                (13) IntTRS
                (14) IntTRSPeriodicNontermProof [COMPLETE, 0 ms]
                (15) NO
            (16) SCC2IRS [SOUND, 0 ms]
            (17) IntTRS
                (18) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                (19) IntTRS
                (20) IntTRSPeriodicNontermProof [COMPLETE, 0 ms]
                (21) NO
        (22) LLVM Symbolic Execution SCC
            (23) SCC2IRS [SOUND, 49 ms]
            (24) IntTRS
            (25) TerminationGraphProcessor [EQUIVALENT, 13 ms]
            (26) IntTRS
            (27) IntTRSCompressionProof [EQUIVALENT, 0 ms]
            (28) IntTRS
        (29) LLVM Symbolic Execution SCC
            (30) SCC2IRS [SOUND, 23 ms]
            (31) IntTRS
            (32) PolynomialOrderProcessor [EQUIVALENT, 4 ms]
            (33) YES
        (34) LLVM Symbolic Execution SCC
            (35) SCC2IRS [SOUND, 15 ms]
            (36) IntTRS
            (37) IntTRSCompressionProof [EQUIVALENT, 0 ms]
            (38) IntTRS
            (39) RankingReductionPairProof [EQUIVALENT, 2 ms]
            (40) YES
    (41) SEGraph to IRS [EQUIVALENT, 160 ms]
    (42) IntTRS
        (43) IRSNoOverapproximation [EQUIVALENT, 0 ms]
        (44) IntTRS
        (45) IRSToKoat [EQUIVALENT, 0 ms]
        (46) Koat Problem
    (47) SEGraph to IRS [EQUIVALENT, 161 ms]
    (48) IntTRS
        (49) IRSToKoat [EQUIVALENT, 0 ms]
        (50) Koat Problem
        (51) KoAT2 [EQUIVALENT, 4019 ms]
        (52) MAYBE
(53) CToIRSProof [EQUIVALENT, 0 ms]
(54) IntTRS
    (55) TerminationGraphProcessor [SOUND, 13 ms]
    (56) IntTRS
    (57) IntTRSCompressionProof [EQUIVALENT, 0 ms]
    (58) IntTRS
    (59) IntTRSPeriodicNontermProof [COMPLETE, 0 ms]
    (60) NO


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/OLSMT.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/OLSMT.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 7
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		%3 = alloca i32, align 4
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		%4 = call i32 @__VERIFIER_nondet_int()
		store %4, %2
		store 20, %3
		br %5
	5:
		%6 = load %2
		%7 = icmp sle 0 %6
		br %7, %8, %12
	8:
		%9 = load %2
		%10 = load %3
		%11 = icmp sle %9 %10
		br %12
	12:
		%13 = phi [0, %5], [%11, %8]
		br %13, %14, %33
	14:
		%15 = load %2
		%16 = icmp eq 0 %15
		br %16, %17, %21
	17:
		%18 = load %2
		%19 = load %3
		%20 = icmp eq %18 %19
		br %20, %32, %21
	21:
		%22 = load %2
		%23 = load %3
		%24 = icmp eq %22 %23
		br %24, %25, %28
	25:
		store 0, %2
		%26 = load %3
		%27 = sub i32 %26, 1
		store %27, %3
		br %31
	28:
		%29 = load %2
		%30 = add i32 %29, 1
		store %30, %2
		br %31
	31:
		br %32
	32:
		br %5
	33:
		ret 0


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 4 SCCs.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC
----------------------------------------

(8) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 17 rulesP rules:
f_1029(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1031(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1031(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1033(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1033(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1035(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: TRUE
f_1035(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1037(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1037(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1039(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1039(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1041(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1041(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1043(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1043(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1046(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: TRUE
f_1046(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1048(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1048(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1050(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1050(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1052(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: TRUE
f_1052(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1054(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1054(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1056(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1056(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1058(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1058(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1060(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: TRUE
f_1060(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1026(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: TRUE
f_1026(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1029(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: TRUE
Combined rules. Obtained 1 rulesP rules:
f_1029(v7409:0, v7410:0, v7411:0, v7412:0, 0, 1, v7417:0, v7418:0, v7419:0, 3, 20, 4) -> f_1029(v7409:0, v7410:0, v7411:0, v7412:0, 0, 1, v7417:0, v7418:0, v7419:0, 3, 20, 4) :|: TRUE
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1029(v7409:0, v7410:0, v7411:0, v7412:0, cons_0, cons_1, v7417:0, v7418:0, v7419:0, cons_3, cons_20, cons_4) -> f_1029(v7409:0, v7410:0, v7411:0, v7412:0, 0, 1, v7417:0, v7418:0, v7419:0, 3, 20, 4) :|: TRUE && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_20 = 20 && cons_4 = 4

----------------------------------------

(9)
Obligation:
Rules:
f_1029(v7409:0, v7410:0, v7411:0, v7412:0, cons_0, cons_1, v7417:0, v7418:0, v7419:0, cons_3, cons_20, cons_4) -> f_1029(v7409:0, v7410:0, v7411:0, v7412:0, 0, 1, v7417:0, v7418:0, v7419:0, 3, 20, 4) :|: TRUE && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_20 = 20 && cons_4 = 4

----------------------------------------

(10) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(11)
Obligation:
Rules:
f_1029(v7409:0:0, v7410:0:0, v7411:0:0, v7412:0:0, cons_0, cons_1, v7417:0:0, v7418:0:0, v7419:0:0, cons_3, cons_20, cons_4) -> f_1029(v7409:0:0, v7410:0:0, v7411:0:0, v7412:0:0, 0, 1, v7417:0:0, v7418:0:0, v7419:0:0, 3, 20, 4) :|: TRUE && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_20 = 20 && cons_4 = 4

----------------------------------------

(12) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1029(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12) -> f_1029(x5, x6, x10, x11, x12)

----------------------------------------

(13)
Obligation:
Rules:
f_1029(cons_0, cons_1, cons_3, cons_20, cons_4) -> f_1029(0, 1, 3, 20, 4) :|: TRUE && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_20 = 20 && cons_4 = 4

----------------------------------------

(14) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, cons_0, cons_1, cons_3, cons_20, cons_4) -> f(1, 0, 1, 3, 20, 4) :|: pc = 1 && (TRUE && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_20 = 20 && cons_4 = 4)
Witness term starting non-terminating reduction: f(1, 0, 1, 3, 20, 4)
----------------------------------------

(15)
NO

----------------------------------------

(16) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 17 rulesP rules:
f_1029(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1031(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1031(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1033(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1033(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1035(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: TRUE
f_1035(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1037(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1037(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1039(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1039(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1041(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1041(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1043(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1043(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1046(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: TRUE
f_1046(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1048(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1048(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1050(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1050(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1052(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: TRUE
f_1052(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1054(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1054(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1056(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1056(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1058(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1058(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1060(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: TRUE
f_1060(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1026(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 1 <= v7409 && 1 <= v7410 && 1 <= v7411 && 0 <= v7412 && v7412 <= 20 && 4 <= v7417 && 4 <= v7418 && 4 <= v7419 && v7409 <= v7417 && v7410 <= v7418 && v7411 <= v7419
f_1026(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1029(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: TRUE
Combined rules. Obtained 1 rulesP rules:
f_1029(v7409:0, v7410:0, v7411:0, v7412:0, 0, 1, v7417:0, v7418:0, v7419:0, 3, 20, 4) -> f_1029(v7409:0, v7410:0, v7411:0, v7412:0, 0, 1, v7417:0, v7418:0, v7419:0, 3, 20, 4) :|: v7410:0 > 0 && v7409:0 > 0 && v7411:0 > 0 && v7412:0 > -1 && v7412:0 < 21 && v7417:0 > 3 && v7418:0 > 3 && v7419:0 > 3 && v7417:0 >= v7409:0 && v7419:0 >= v7411:0 && v7418:0 >= v7410:0
Filtered unneeded arguments:
   f_1029(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12) -> f_1029(x1, x2, x3, x4, x7, x8, x9)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1029(v7409:0, v7410:0, v7411:0, v7412:0, v7417:0, v7418:0, v7419:0) -> f_1029(v7409:0, v7410:0, v7411:0, v7412:0, v7417:0, v7418:0, v7419:0) :|: v7409:0 > 0 && v7410:0 > 0 && v7411:0 > 0 && v7412:0 > -1 && v7412:0 < 21 && v7417:0 > 3 && v7418:0 > 3 && v7419:0 > 3 && v7417:0 >= v7409:0 && v7418:0 >= v7410:0 && v7419:0 >= v7411:0

----------------------------------------

(17)
Obligation:
Rules:
f_1029(v7409:0, v7410:0, v7411:0, v7412:0, v7417:0, v7418:0, v7419:0) -> f_1029(v7409:0, v7410:0, v7411:0, v7412:0, v7417:0, v7418:0, v7419:0) :|: v7409:0 > 0 && v7410:0 > 0 && v7411:0 > 0 && v7412:0 > -1 && v7412:0 < 21 && v7417:0 > 3 && v7418:0 > 3 && v7419:0 > 3 && v7417:0 >= v7409:0 && v7418:0 >= v7410:0 && v7419:0 >= v7411:0

----------------------------------------

(18) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(19)
Obligation:
Rules:
f_1029(v7409:0:0, v7410:0:0, v7411:0:0, v7412:0:0, v7417:0:0, v7418:0:0, v7419:0:0) -> f_1029(v7409:0:0, v7410:0:0, v7411:0:0, v7412:0:0, v7417:0:0, v7418:0:0, v7419:0:0) :|: v7418:0:0 >= v7410:0:0 && v7419:0:0 >= v7411:0:0 && v7417:0:0 >= v7409:0:0 && v7419:0:0 > 3 && v7418:0:0 > 3 && v7417:0:0 > 3 && v7412:0:0 < 21 && v7412:0:0 > -1 && v7411:0:0 > 0 && v7410:0:0 > 0 && v7409:0:0 > 0

----------------------------------------

(20) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, v7409:0:0, v7410:0:0, v7411:0:0, v7412:0:0, v7417:0:0, v7418:0:0, v7419:0:0) -> f(1, v7409:0:0, v7410:0:0, v7411:0:0, v7412:0:0, v7417:0:0, v7418:0:0, v7419:0:0) :|: pc = 1 && (v7418:0:0 >= v7410:0:0 && v7419:0:0 >= v7411:0:0 && v7417:0:0 >= v7409:0:0 && v7419:0:0 > 3 && v7418:0:0 > 3 && v7417:0:0 > 3 && v7412:0:0 < 21 && v7412:0:0 > -1 && v7411:0:0 > 0 && v7410:0:0 > 0 && v7409:0:0 > 0)
Witness term starting non-terminating reduction: f(1, 1, 1, 1, 0, 7, 39, 7)
----------------------------------------

(21)
NO

----------------------------------------

(22)
Obligation:
SCC
----------------------------------------

(23) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 75 rulesP rules:
f_971(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_972(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: 0 = 0
f_972(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_973(v7246, v7247, v7248, v7249, v7252, 1, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 2, 4) :|: v7250 = v7252 && v7254 <= 18
f_972(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_974(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: v7250 != v7252
f_973(v7246, v7247, v7248, v7249, v7252, 1, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 2, 4) -> f_975(v7246, v7247, v7248, v7249, v7252, 1, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 2, 4) :|: 0 = 0
f_975(v7246, v7247, v7248, v7249, v7252, 1, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 2, 4) -> f_977(v7246, v7247, v7248, v7249, v7252, 1, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 2, 4) :|: TRUE
f_977(v7246, v7247, v7248, v7249, v7252, 1, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 2, 4) -> f_979(v7246, v7247, v7248, v7249, v7252, 1, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 2, 4) :|: TRUE
f_979(v7246, v7247, v7248, v7249, v7252, 1, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 2, 4) -> f_981(v7246, v7247, v7248, v7249, v7252, 1, 0, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 4) :|: 0 = 0
f_981(v7246, v7247, v7248, v7249, v7252, 1, 0, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 4) -> f_983(v7246, v7247, v7248, v7249, v7252, 1, 0, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 4) :|: 1 + v7254 = v7252
f_983(v7246, v7247, v7248, v7249, v7252, 1, 0, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 4) -> f_985(v7246, v7247, v7248, v7249, v7252, 1, 0, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 4) :|: TRUE
f_985(v7246, v7247, v7248, v7249, v7252, 1, 0, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 4) -> f_987(v7246, v7247, v7248, v7249, v7252, 1, 0, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 4) :|: TRUE
f_987(v7246, v7247, v7248, v7249, v7252, 1, 0, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 4) -> f_988(v7246, v7247, v7248, v7249, v7252, 1, 0, v7254, v7256, v7257, v7258, 3, 20, 19, 4) :|: TRUE
f_988(v7409, v7410, v7411, v7412, v7413, 1, 0, v7416, v7417, v7418, v7419, 3, 20, 19, 4) -> f_990(v7409, v7410, v7411, v7412, v7413, 1, 0, v7416, v7417, v7418, v7419, 3, 20, 19, 4) :|: TRUE
f_990(v7409, v7410, v7411, v7412, v7413, 1, 0, v7416, v7417, v7418, v7419, 3, 20, 19, 4) -> f_992(v7409, v7410, v7411, v7412, v7413, 1, 0, v7416, v7417, v7418, v7419, 3, 20, 19, 4) :|: TRUE
f_992(v7409, v7410, v7411, v7412, v7413, 1, 0, v7416, v7417, v7418, v7419, 3, 20, 19, 4) -> f_994(v7409, v7410, v7411, v7412, 0, 1, v7413, v7416, v7417, v7418, v7419, 3, 20, 19, 4) :|: 0 = 0
f_994(v7409, v7410, v7411, v7412, 0, 1, v7413, v7416, v7417, v7418, v7419, 3, 20, 19, 4) -> f_996(v7409, v7410, v7411, v7412, 0, 1, v7413, v7416, v7417, v7418, v7419, 3, 20, 19, 4) :|: 0 = 0
f_996(v7409, v7410, v7411, v7412, 0, 1, v7413, v7416, v7417, v7418, v7419, 3, 20, 19, 4) -> f_998(v7409, v7410, v7411, v7412, 0, 1, v7413, v7416, v7417, v7418, v7419, 3, 20, 19, 4) :|: TRUE
f_998(v7409, v7410, v7411, v7412, 0, 1, v7413, v7416, v7417, v7418, v7419, 3, 20, 19, 4) -> f_1000(v7409, v7410, v7411, v7412, 0, 1, v7413, v7416, v7417, v7418, v7419, 3, 20, 19, 4) :|: 0 = 0
f_1000(v7409, v7410, v7411, v7412, 0, 1, v7413, v7416, v7417, v7418, v7419, 3, 20, 19, 4) -> f_1002(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) :|: 0 = 0
f_1002(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) -> f_1005(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) :|: 0 = 0
f_1005(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) -> f_1008(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) :|: 0 = 0
f_1008(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) -> f_1011(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) :|: TRUE
f_1011(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) -> f_1014(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) :|: 0 = 0
f_1014(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) -> f_1016(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) :|: 0 = 0
f_1016(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) -> f_1018(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) :|: TRUE
f_1018(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) -> f_1020(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) :|: 0 = 0
f_1020(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) -> f_1021(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) :|: 0 = 0
f_1021(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) -> f_1023(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 2, 19, 4) :|: 0 != v7416 && 2 <= v7413
f_1023(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 2, 19, 4) -> f_1025(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 2, 19, 4) :|: 0 = 0
f_1025(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 2, 19, 4) -> f_1027(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 2, 19, 4) :|: TRUE
f_1027(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 2, 19, 4) -> f_1028(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 2, 4) :|: TRUE
f_1028(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) -> f_1030(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) :|: 0 = 0
f_1030(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) -> f_1032(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) :|: 0 = 0
f_1032(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) -> f_1034(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) :|: 0 = 0
f_1034(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) -> f_1036(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) :|: TRUE
f_1036(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) -> f_1038(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) :|: 0 = 0
f_1038(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) -> f_1040(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) :|: 0 = 0
f_1040(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) -> f_1042(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) :|: TRUE
f_1042(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) -> f_1044(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) :|: TRUE
f_1044(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) -> f_1045(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) :|: TRUE
f_1045(v8553, v8554, v8555, v8556, 0, 1, v8559, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1047(v8553, v8554, v8555, v8556, 0, 1, v8559, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: TRUE
f_1047(v8553, v8554, v8555, v8556, 0, 1, v8559, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1049(v8553, v8554, v8555, v8556, 0, 1, v8559, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: TRUE
f_1049(v8553, v8554, v8555, v8556, 0, 1, v8559, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1051(v8553, v8554, v8555, v8556, 1, 0, v8559, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: 0 = 0
f_1051(v8553, v8554, v8555, v8556, 1, 0, v8559, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1053(v8553, v8554, v8555, v8556, 1, 0, v8559, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: 0 = 0
f_1053(v8553, v8554, v8555, v8556, 1, 0, v8559, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1055(v8553, v8554, v8555, v8556, 1, 0, v8559, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: TRUE
f_1055(v8553, v8554, v8555, v8556, 1, 0, v8559, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1057(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: 0 = 0
f_1057(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1059(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: 0 = 0
f_1059(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1061(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: 0 = 0
f_1061(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1062(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: 0 = 0
f_1062(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1063(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: TRUE
f_1063(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1064(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: 0 = 0
f_1064(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1065(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: 0 = 0
f_1065(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1066(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: TRUE
f_1066(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_970(v8553, v8554, v8555, v8556, 1, 1, v8559, 0, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: TRUE
f_970(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7254, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_971(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: 0 = 0
f_974(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_976(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: 0 = 0
f_976(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_978(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: TRUE
f_978(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_980(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: 0 = 0
f_980(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_982(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7311, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: v7311 = 1 + v7250 && 2 <= v7311
f_982(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7311, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_984(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7311, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: TRUE
f_984(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7311, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_986(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7311, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: TRUE
f_986(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7311, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_989(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7311, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: TRUE
f_989(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7311, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_991(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7311, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: TRUE
f_991(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7311, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_993(v7246, v7247, v7248, v7249, v7311, 1, v7250, v7252, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: 0 = 0
f_993(v7246, v7247, v7248, v7249, v7311, 1, v7250, v7252, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_995(v7246, v7247, v7248, v7249, v7311, 1, v7250, v7252, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: 0 = 0
f_995(v7246, v7247, v7248, v7249, v7311, 1, v7250, v7252, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_997(v7246, v7247, v7248, v7249, v7311, 1, v7250, v7252, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: TRUE
f_997(v7246, v7247, v7248, v7249, v7311, 1, v7250, v7252, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_999(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: 0 = 0
f_999(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_1001(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: 0 = 0
f_1001(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_1003(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) :|: v7311 <= v7252 && v7311 <= 19 && 2 <= v7252 && 3 <= v7255 && v7250 <= 18
f_1003(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) -> f_1006(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) :|: 0 = 0
f_1006(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) -> f_1009(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) :|: 0 = 0
f_1009(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) -> f_1012(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) :|: TRUE
f_1012(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) -> f_1015(v7246, v7247, v7248, v7249, v7311, 1, v7252, 0, v7250, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) :|: 0 = 0
f_1015(v7246, v7247, v7248, v7249, v7311, 1, v7252, 0, v7250, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) -> f_1017(v7246, v7247, v7248, v7249, v7311, 1, v7252, 0, v7250, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) :|: 0 = 0
f_1017(v7246, v7247, v7248, v7249, v7311, 1, v7252, 0, v7250, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) -> f_1019(v7246, v7247, v7248, v7249, v7311, 1, v7252, 0, v7250, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) :|: TRUE
f_1019(v7246, v7247, v7248, v7249, v7311, 1, v7252, 0, v7250, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) -> f_970(v7246, v7247, v7248, v7249, v7311, 1, v7252, 0, v7250, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: TRUE
Combined rules. Obtained 3 rulesP rules:
f_971(v7246:0, v7247:0, v7248:0, v7249:0, v7250:0, 1, v7252:0, 0, v7255:0, v7254:0, v7256:0, v7257:0, v7258:0, 3, 20, 19, 2, 4) -> f_971(v7246:0, v7247:0, v7248:0, v7249:0, 1 + v7250:0, 1, v7252:0, 0, v7255:0, v7250:0, v7256:0, v7257:0, v7258:0, 3, 20, 19, 2, 4) :|: v7252:0 > v7250:0 && v7250:0 > 0 && v7250:0 < 19 && v7252:0 >= 1 + v7250:0 && v7252:0 > 1 && v7255:0 > 2
f_971(v7246:0, v7247:0, v7248:0, v7249:0, v7250:0, 1, v7252:0, 0, v7255:0, v7254:0, v7256:0, v7257:0, v7258:0, 3, 20, 19, 2, 4) -> f_971(v7246:0, v7247:0, v7248:0, v7249:0, 1 + v7250:0, 1, v7252:0, 0, v7255:0, v7250:0, v7256:0, v7257:0, v7258:0, 3, 20, 19, 2, 4) :|: v7252:0 < v7250:0 && v7250:0 > 0 && v7250:0 < 19 && v7252:0 >= 1 + v7250:0 && v7252:0 > 1 && v7255:0 > 2
f_971(v7246:0, v7247:0, v7248:0, v7249:0, 1 + v7254:0, 1, 1 + v7254:0, 0, v7255:0, v7254:0, v7256:0, v7257:0, v7258:0, 3, 20, 19, 2, 4) -> f_971(v7246:0, v7247:0, v7248:0, v7249:0, 1, 1, v7254:0, 0, 1 + v7254:0, 0, v7256:0, v7257:0, v7258:0, 3, 20, 19, 2, 4) :|: v7254:0 < 19 && v7254:0 > 0
Filtered unneeded arguments:
   f_971(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18) -> f_971(x5, x7, x9, x10)
Removed division, modulo operations, cleaned up constraints. Obtained 3 rules.P rules:
f_971(v7250:0, v7252:0, v7255:0, v7254:0) -> f_971(1 + v7250:0, v7252:0, v7255:0, v7250:0) :|: v7250:0 > 0 && v7252:0 > v7250:0 && v7250:0 < 19 && v7252:0 >= 1 + v7250:0 && v7255:0 > 2 && v7252:0 > 1
f_971(v7250:0, v7252:0, v7255:0, v7254:0) -> f_971(1 + v7250:0, v7252:0, v7255:0, v7250:0) :|: v7250:0 > 0 && v7252:0 < v7250:0 && v7250:0 < 19 && v7252:0 >= 1 + v7250:0 && v7255:0 > 2 && v7252:0 > 1
f_971(sum~cons_1~v7254:0, sum~cons_1~v7254:01, v7255:0, v7254:0) -> f_971(1, v7254:0, 1 + v7254:0, 0) :|: v7254:0 < 19 && v7254:0 > 0 && sum~cons_1~v7254:0 = 1 + v7254:0 && sum~cons_1~v7254:01 = 1 + v7254:0

----------------------------------------

(24)
Obligation:
Rules:
f_971(v7250:0, v7252:0, v7255:0, v7254:0) -> f_971(1 + v7250:0, v7252:0, v7255:0, v7250:0) :|: v7250:0 > 0 && v7252:0 > v7250:0 && v7250:0 < 19 && v7252:0 >= 1 + v7250:0 && v7255:0 > 2 && v7252:0 > 1
f_971(x, x1, x2, x3) -> f_971(1 + x, x1, x2, x) :|: x > 0 && x1 < x && x < 19 && x1 >= 1 + x && x2 > 2 && x1 > 1
f_971(x4, x5, x6, x7) -> f_971(1, x7, 1 + x7, 0) :|: x7 < 19 && x7 > 0 && x4 = 1 + x7 && x5 = 1 + x7

----------------------------------------

(25) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained one non-trivial SCC.

----------------------------------------

(26)
Obligation:
Rules:
f_971(v7250:0, v7252:0, v7255:0, v7254:0) -> f_971(1 + v7250:0, v7252:0, v7255:0, v7250:0) :|: v7250:0 > 0 && v7252:0 > v7250:0 && v7250:0 < 19 && v7252:0 >= 1 + v7250:0 && v7255:0 > 2 && v7252:0 > 1
f_971(x4, x5, x6, x7) -> f_971(1, x7, 1 + x7, 0) :|: x7 < 19 && x7 > 0 && x4 = 1 + x7 && x5 = 1 + x7

----------------------------------------

(27) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(28)
Obligation:
Rules:
f_971(sum~cons_1~x7:0, sum~cons_1~x7:01, x6:0, x7:0) -> f_971(1, x7:0, 1 + x7:0, 0) :|: x7:0 < 19 && x7:0 > 0 && sum~cons_1~x7:0 = 1 + x7:0 && sum~cons_1~x7:01 = 1 + x7:0
f_971(v7250:0:0, v7252:0:0, v7255:0:0, v7254:0:0) -> f_971(1 + v7250:0:0, v7252:0:0, v7255:0:0, v7250:0:0) :|: v7255:0:0 > 2 && v7252:0:0 > 1 && v7252:0:0 >= 1 + v7250:0:0 && v7250:0:0 < 19 && v7252:0:0 > v7250:0:0 && v7250:0:0 > 0

----------------------------------------

(29)
Obligation:
SCC
----------------------------------------

(30) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 24 rulesP rules:
f_620(v3383, v3384, v3385, 0, v3387, 1, 20, v3390, v3391, v3392, v3393, 3, 4) -> f_623(v3383, v3384, v3385, 0, v3387, 1, 20, v3390, v3391, v3392, v3393, 3, 4) :|: 0 = 0
f_623(v3383, v3384, v3385, 0, v3387, 1, 20, v3390, v3391, v3392, v3393, 3, 4) -> f_626(v3383, v3384, v3385, 0, v3387, 1, 20, v3390, v3391, v3392, v3393, 3, 4) :|: v3387 != 20
f_626(v3383, v3384, v3385, 0, v3387, 1, 20, v3390, v3391, v3392, v3393, 3, 4) -> f_629(v3383, v3384, v3385, 0, v3387, 1, 20, v3390, v3391, v3392, v3393, 3, 4) :|: 0 = 0
f_629(v3383, v3384, v3385, 0, v3387, 1, 20, v3390, v3391, v3392, v3393, 3, 4) -> f_632(v3383, v3384, v3385, 0, v3387, 1, 20, v3390, v3391, v3392, v3393, 3, 4) :|: TRUE
f_632(v3383, v3384, v3385, 0, v3387, 1, 20, v3390, v3391, v3392, v3393, 3, 4) -> f_635(v3383, v3384, v3385, 0, v3387, 1, 20, v3391, v3392, v3393, 3, 4) :|: 0 = 0
f_635(v3383, v3384, v3385, 0, v3387, 1, 20, v3391, v3392, v3393, 3, 4) -> f_638(v3383, v3384, v3385, 0, v3387, 1, 20, v3486, v3391, v3392, v3393, 3, 4, 2) :|: v3486 = 1 + v3387 && 2 <= v3486
f_638(v3383, v3384, v3385, 0, v3387, 1, 20, v3486, v3391, v3392, v3393, 3, 4, 2) -> f_641(v3383, v3384, v3385, 0, v3387, 1, 20, v3486, v3391, v3392, v3393, 3, 4, 2) :|: TRUE
f_641(v3383, v3384, v3385, 0, v3387, 1, 20, v3486, v3391, v3392, v3393, 3, 4, 2) -> f_644(v3383, v3384, v3385, 0, v3387, 1, 20, v3486, v3391, v3392, v3393, 3, 4, 2) :|: TRUE
f_644(v3383, v3384, v3385, 0, v3387, 1, 20, v3486, v3391, v3392, v3393, 3, 4, 2) -> f_647(v3383, v3384, v3385, 0, v3387, 1, 20, v3486, v3391, v3392, v3393, 3, 4, 2) :|: TRUE
f_647(v3383, v3384, v3385, 0, v3387, 1, 20, v3486, v3391, v3392, v3393, 3, 4, 2) -> f_650(v3383, v3384, v3385, 0, v3387, 1, 20, v3486, v3391, v3392, v3393, 3, 4, 2) :|: TRUE
f_650(v3383, v3384, v3385, 0, v3387, 1, 20, v3486, v3391, v3392, v3393, 3, 4, 2) -> f_653(v3383, v3384, v3385, 0, v3486, 1, v3387, 20, v3391, v3392, v3393, 3, 4, 2) :|: 0 = 0
f_653(v3383, v3384, v3385, 0, v3486, 1, v3387, 20, v3391, v3392, v3393, 3, 4, 2) -> f_656(v3383, v3384, v3385, 0, v3486, 1, v3387, 20, v3391, v3392, v3393, 3, 4, 2) :|: 0 = 0
f_656(v3383, v3384, v3385, 0, v3486, 1, v3387, 20, v3391, v3392, v3393, 3, 4, 2) -> f_659(v3383, v3384, v3385, 0, v3486, 1, v3387, 20, v3391, v3392, v3393, 3, 4, 2) :|: TRUE
f_659(v3383, v3384, v3385, 0, v3486, 1, v3387, 20, v3391, v3392, v3393, 3, 4, 2) -> f_662(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 4, 2) :|: 0 = 0
f_662(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 4, 2) -> f_665(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 4, 2) :|: 0 = 0
f_665(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 4, 2) -> f_668(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) :|: v3486 <= 20 && v3387 <= 19
f_668(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) -> f_672(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) :|: 0 = 0
f_672(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) -> f_676(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) :|: 0 = 0
f_676(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) -> f_680(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) :|: TRUE
f_680(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) -> f_684(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) :|: 0 = 0
f_684(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) -> f_687(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) :|: 0 = 0
f_687(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) -> f_691(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) :|: TRUE
f_691(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) -> f_618(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 4) :|: TRUE
f_618(v3383, v3384, v3385, 0, v3387, 1, 20, v3390, v3391, v3392, v3393, 3, 4) -> f_620(v3383, v3384, v3385, 0, v3387, 1, 20, v3390, v3391, v3392, v3393, 3, 4) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_620(v3383:0, v3384:0, v3385:0, 0, v3387:0, 1, 20, v3390:0, v3391:0, v3392:0, v3393:0, 3, 4) -> f_620(v3383:0, v3384:0, v3385:0, 0, 1 + v3387:0, 1, 20, v3387:0, v3391:0, v3392:0, v3393:0, 3, 4) :|: v3387:0 < 20 && v3387:0 > 0
Filtered unneeded arguments:
   f_620(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13) -> f_620(x5)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_620(v3387:0) -> f_620(1 + v3387:0) :|: v3387:0 < 20 && v3387:0 > 0

----------------------------------------

(31)
Obligation:
Rules:
f_620(v3387:0) -> f_620(1 + v3387:0) :|: v3387:0 < 20 && v3387:0 > 0

----------------------------------------

(32) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_620(x)] = 19 - x

The following rules are decreasing:
f_620(v3387:0) -> f_620(1 + v3387:0) :|: v3387:0 < 20 && v3387:0 > 0
The following rules are bounded:
f_620(v3387:0) -> f_620(1 + v3387:0) :|: v3387:0 < 20 && v3387:0 > 0

----------------------------------------

(33)
YES

----------------------------------------

(34)
Obligation:
SCC
----------------------------------------

(35) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 23 rulesP rules:
f_352(v808, v809, v810, v811, v816, 1, v812, 20, 0, v817, v818, v819, 3, 19, 2, 4) -> f_355(v808, v809, v810, v811, v816, 1, v812, 20, 0, v817, v818, v819, 3, 19, 2, 4) :|: 0 = 0
f_355(v808, v809, v810, v811, v816, 1, v812, 20, 0, v817, v818, v819, 3, 19, 2, 4) -> f_358(v808, v809, v810, v811, v816, 1, v812, 20, 0, v817, v818, v819, 3, 19, 2, 4) :|: TRUE
f_358(v808, v809, v810, v811, v816, 1, v812, 20, 0, v817, v818, v819, 3, 19, 2, 4) -> f_361(v808, v809, v810, v811, v816, 1, 20, v812, 0, v817, v818, v819, 3, 19, 2, 4) :|: 0 = 0
f_361(v808, v809, v810, v811, v816, 1, 20, v812, 0, v817, v818, v819, 3, 19, 2, 4) -> f_364(v808, v809, v810, v811, v816, 1, 20, v812, 0, v817, v818, v819, 3, 19, 2, 4) :|: 0 = 0
f_364(v808, v809, v810, v811, v816, 1, 20, v812, 0, v817, v818, v819, 3, 19, 2, 4) -> f_367(v808, v809, v810, v811, v816, 1, 20, v812, 0, v817, v818, v819, 3, 19, 2, 4) :|: 0 = 0
f_367(v808, v809, v810, v811, v816, 1, 20, v812, 0, v817, v818, v819, 3, 19, 2, 4) -> f_370(v808, v809, v810, v811, v816, 1, 20, v812, 0, v817, v818, v819, 3, 19, 2, 4) :|: 0 = 0
f_370(v808, v809, v810, v811, v816, 1, 20, v812, 0, v817, v818, v819, 3, 19, 2, 4) -> f_373(v808, v809, v810, v811, v816, 1, 20, v812, 0, v817, v818, v819, 3, 19, 2, 4) :|: TRUE
f_373(v808, v809, v810, v811, v816, 1, 20, v812, 0, v817, v818, v819, 3, 19, 2, 4) -> f_376(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 19, 2, 4) :|: 0 = 0
f_376(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 19, 2, 4) -> f_379(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 19, 2, 4) :|: 0 = 0
f_379(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 19, 2, 4) -> f_382(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 19, 2, 4) :|: TRUE
f_382(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 19, 2, 4) -> f_386(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 19, 2, 4) :|: 0 = 0
f_386(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 19, 2, 4) -> f_389(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 19, 2, 4) :|: 0 = 0
f_389(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 19, 2, 4) -> f_394(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 18, 2, 19, 4) :|: v816 != 20 && 2 <= v816 && v816 <= 19 && v812 <= 18 && v811 <= 18
f_394(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 18, 2, 19, 4) -> f_398(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 18, 2, 19, 4) :|: 0 = 0
f_398(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 18, 2, 19, 4) -> f_402(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 18, 2, 19, 4) :|: TRUE
f_402(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 18, 2, 19, 4) -> f_406(v808, v809, v810, v811, v816, 1, 20, 0, v817, v818, v819, 3, 18, 2, 19, 4) :|: 0 = 0
f_406(v808, v809, v810, v811, v816, 1, 20, 0, v817, v818, v819, 3, 18, 2, 19, 4) -> f_410(v808, v809, v810, v811, v816, 1, 20, 0, v1294, v817, v818, v819, 3, 18, 2, 19, 4) :|: v1294 = 1 + v816 && 3 <= v1294 && v1294 <= 20
f_410(v808, v809, v810, v811, v816, 1, 20, 0, v1294, v817, v818, v819, 3, 18, 2, 19, 4) -> f_414(v808, v809, v810, v811, v816, 1, 20, 0, v1294, v817, v818, v819, 3, 18, 2, 19, 4) :|: TRUE
f_414(v808, v809, v810, v811, v816, 1, 20, 0, v1294, v817, v818, v819, 3, 18, 2, 19, 4) -> f_418(v808, v809, v810, v811, v816, 1, 20, 0, v1294, v817, v818, v819, 3, 18, 2, 19, 4) :|: TRUE
f_418(v808, v809, v810, v811, v816, 1, 20, 0, v1294, v817, v818, v819, 3, 18, 2, 19, 4) -> f_422(v808, v809, v810, v811, v816, 1, 20, 0, v1294, v817, v818, v819, 3, 18, 2, 19, 4) :|: TRUE
f_422(v808, v809, v810, v811, v816, 1, 20, 0, v1294, v817, v818, v819, 3, 18, 2, 19, 4) -> f_426(v808, v809, v810, v811, v816, 1, 20, 0, v1294, v817, v818, v819, 3, 18, 2, 19, 4) :|: TRUE
f_426(v808, v809, v810, v811, v816, 1, 20, 0, v1294, v817, v818, v819, 3, 18, 2, 19, 4) -> f_349(v808, v809, v810, v811, v816, 1, 20, 0, v1294, v817, v818, v819, 3, 19, 2, 4) :|: TRUE
f_349(v808, v809, v810, v811, v812, 1, 20, 0, v816, v817, v818, v819, 3, 19, 2, 4) -> f_352(v808, v809, v810, v811, v816, 1, v812, 20, 0, v817, v818, v819, 3, 19, 2, 4) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_352(v808:0, v809:0, v810:0, v811:0, v816:0, 1, v812:0, 20, 0, v817:0, v818:0, v819:0, 3, 19, 2, 4) -> f_352(v808:0, v809:0, v810:0, v811:0, 1 + v816:0, 1, v816:0, 20, 0, v817:0, v818:0, v819:0, 3, 19, 2, 4) :|: v816:0 > 1 && v816:0 < 20 && v812:0 < 19 && v811:0 < 19
Filtered unneeded arguments:
   f_352(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16) -> f_352(x4, x5, x7)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_352(v811:0, v816:0, v812:0) -> f_352(v811:0, 1 + v816:0, v816:0) :|: v816:0 < 20 && v816:0 > 1 && v811:0 < 19 && v812:0 < 19

----------------------------------------

(36)
Obligation:
Rules:
f_352(v811:0, v816:0, v812:0) -> f_352(v811:0, 1 + v816:0, v816:0) :|: v816:0 < 20 && v816:0 > 1 && v811:0 < 19 && v812:0 < 19

----------------------------------------

(37) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(38)
Obligation:
Rules:
f_352(v811:0:0, v816:0:0, v812:0:0) -> f_352(v811:0:0, 1 + v816:0:0, v816:0:0) :|: v811:0:0 < 19 && v812:0:0 < 19 && v816:0:0 > 1 && v816:0:0 < 20

----------------------------------------

(39) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_352 ] = -1*f_352_2

The following rules are decreasing:
f_352(v811:0:0, v816:0:0, v812:0:0) -> f_352(v811:0:0, 1 + v816:0:0, v816:0:0) :|: v811:0:0 < 19 && v812:0:0 < 19 && v816:0:0 > 1 && v816:0:0 < 20

The following rules are bounded:
f_352(v811:0:0, v816:0:0, v812:0:0) -> f_352(v811:0:0, 1 + v816:0:0, v816:0:0) :|: v811:0:0 < 19 && v812:0:0 < 19 && v816:0:0 > 1 && v816:0:0 < 20


----------------------------------------

(40)
YES

----------------------------------------

(41) SEGraph to IRS (EQUIVALENT)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 303 rulesP rules:
f_130 -> f_131(v1, v2, 3, 1, 4) :|: 1 <= v1 && v2 = 3 + v1 && 4 <= v2
f_131(v1, v2, 3, 1, 4) -> f_132(v1, v3, v2, v4, 3, 1, 4) :|: 1 <= v3 && v4 = 3 + v3 && 4 <= v4
f_132(v1, v3, v2, v4, 3, 1, 4) -> f_133(v1, v3, v5, v2, v4, v6, 3, 1, 4) :|: 1 <= v5 && v6 = 3 + v5 && 4 <= v6
f_133(v1, v3, v5, v2, v4, v6, 3, 1, 4) -> f_134(v1, v3, v5, v2, v4, v6, 0, 3, 1, 4) :|: TRUE
f_134(v1, v3, v5, v2, v4, v6, 0, 3, 1, 4) -> f_135(v1, v3, v5, v2, v4, v6, 0, 3, 1, 4) :|: TRUE
f_135(v1, v3, v5, v2, v4, v6, 0, 3, 1, 4) -> f_136(v1, v3, v5, v2, v4, v6, 0, 3, 1, 4) :|: TRUE
f_136(v1, v3, v5, v2, v4, v6, 0, 3, 1, 4) -> f_137(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) :|: TRUE
f_137(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) -> f_138(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) :|: TRUE
f_138(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) -> f_139(v1, v3, v5, v7, v2, v4, v6, 0, 20, 3, 1, 4) :|: TRUE
f_139(v1, v3, v5, v7, v2, v4, v6, 0, 20, 3, 1, 4) -> f_140(v1, v3, v5, v7, v2, v4, v6, 0, 20, 3, 1, 4) :|: TRUE
f_140(v1, v3, v5, v7, v2, v4, v6, 0, 20, 3, 1, 4) -> f_141(v1, v3, v5, v7, v2, v4, v6, 0, 20, 3, 1, 4) :|: 0 = 0
f_141(v1, v3, v5, v7, v2, v4, v6, 0, 20, 3, 1, 4) -> f_142(v1, v3, v5, v7, v2, v4, v6, 0, 20, 3, 1, 4) :|: 0 <= v7
f_141(v1, v3, v5, v7, v2, v4, v6, 0, 20, 3, 1, 4) -> f_143(v1, v3, v5, v7, v2, v4, v6, 0, 20, 3, 1, 4) :|: v7 < 0
f_142(v1, v3, v5, v7, v2, v4, v6, 0, 20, 3, 1, 4) -> f_144(v1, v3, v5, v7, 1, v2, v4, v6, 0, 20, 3, 4) :|: 0 = 0
f_143(v1, v3, v5, v7, v2, v4, v6, 0, 20, 3, 1, 4) -> f_145(v1, v3, v5, v7, 0, v2, v4, v6, 20, 3, 1, 4) :|: 0 = 0
f_144(v1, v3, v5, v7, 1, v2, v4, v6, 0, 20, 3, 4) -> f_146(v1, v3, v5, v7, 1, v2, v4, v6, 0, 20, 3, 4) :|: TRUE
f_145(v1, v3, v5, v7, 0, v2, v4, v6, 20, 3, 1, 4) -> f_147(v1, v3, v5, v7, 0, v2, v4, v6, 20, 3, 1, 4) :|: 0 = 0
f_146(v1, v3, v5, v7, 1, v2, v4, v6, 0, 20, 3, 4) -> f_148(v1, v3, v5, v7, 1, v2, v4, v6, 0, 20, 3, 4) :|: 0 = 0
f_147(v1, v3, v5, v7, 0, v2, v4, v6, 20, 3, 1, 4) -> f_149(v1, v3, v5, v7, 0, v2, v4, v6, 20, 3, 1, 4) :|: TRUE
f_148(v1, v3, v5, v7, 1, v2, v4, v6, 0, 20, 3, 4) -> f_150(v1, v3, v5, v7, 1, 20, v2, v4, v6, 0, 3, 4) :|: 0 = 0
f_150(v1, v3, v5, v7, 1, 20, v2, v4, v6, 0, 3, 4) -> f_151(v1, v3, v5, v7, 1, 20, v2, v4, v6, 0, 3, 4) :|: v7 <= 20
f_150(v1, v3, v5, v7, 1, 20, v2, v4, v6, 0, 3, 4) -> f_152(v1, v3, v5, v7, 1, 20, v2, v4, v6, 0, 3, 4, 21) :|: 20 < v7
f_151(v1, v3, v5, v7, 1, 20, v2, v4, v6, 0, 3, 4) -> f_153(v1, v3, v5, v7, 1, 20, v2, v4, v6, 0, 3, 4) :|: 0 = 0
f_152(v1, v3, v5, v7, 1, 20, v2, v4, v6, 0, 3, 4, 21) -> f_154(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4, 21) :|: 0 = 0
f_153(v1, v3, v5, v7, 1, 20, v2, v4, v6, 0, 3, 4) -> f_155(v1, v3, v5, v7, 1, 20, v2, v4, v6, 0, 3, 4) :|: 0 = 0
f_154(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4, 21) -> f_156(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4, 21) :|: 0 = 0
f_155(v1, v3, v5, v7, 1, 20, v2, v4, v6, 0, 3, 4) -> f_157(v1, v3, v5, v7, 1, 20, v2, v4, v6, 0, 3, 4) :|: TRUE
f_156(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4, 21) -> f_158(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4, 21) :|: TRUE
f_157(v1, v3, v5, v7, 1, 20, v2, v4, v6, 0, 3, 4) -> f_159(v1, v3, v5, v7, 1, 20, v2, v4, v6, 0, 3, 4) :|: 0 = 0
f_159(v1, v3, v5, v7, 1, 20, v2, v4, v6, 0, 3, 4) -> f_160(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: 0 = v7
f_159(v1, v3, v5, v7, 1, 20, v2, v4, v6, 0, 3, 4) -> f_161(v1, v3, v5, v7, 1, 20, v2, v4, v6, 0, 3, 4) :|: 0 != v7
f_160(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_162(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: 0 = 0
f_161(v1, v3, v5, v7, 1, 20, v2, v4, v6, 0, 3, 4) -> f_163(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4) :|: 0 = 0
f_162(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_164(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: TRUE
f_163(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4) -> f_165(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4) :|: TRUE
f_164(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_166(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: 0 = 0
f_165(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4) -> f_167(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4) :|: 0 = 0
f_166(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_168(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: 0 = 0
f_167(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4) -> f_169(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4) :|: 0 = 0
f_168(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_170(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: 0 = 0
f_169(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4) -> f_171(v1, v3, v5, 20, 1, 0, v2, v4, v6, 3, 4) :|: v7 = 20
f_169(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4) -> f_172(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4, 19) :|: v7 != 20 && 1 <= v7 && v7 <= 19
f_170(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_173(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: TRUE
f_171(v1, v3, v5, 20, 1, 0, v2, v4, v6, 3, 4) -> f_174(v1, v3, v5, 20, 1, 0, v2, v4, v6, 3, 4) :|: 0 = 0
f_172(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4, 19) -> f_175(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4, 19) :|: 0 = 0
f_173(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_176(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: 0 = 0
f_174(v1, v3, v5, 20, 1, 0, v2, v4, v6, 3, 4) -> f_177(v1, v3, v5, 20, 1, 0, v2, v4, v6, 3, 4) :|: TRUE
f_175(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4, 19) -> f_178(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4, 19) :|: TRUE
f_176(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_179(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: 0 = 0
f_177(v1, v3, v5, 20, 1, 0, v2, v4, v6, 3, 4) -> f_180(v1, v3, v5, 20, 1, 0, v2, v4, v6, 3, 4) :|: TRUE
f_178(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4, 19) -> f_181(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4, 19) :|: 0 = 0
f_179(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_182(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: 0 = 0
f_180(v1, v3, v5, 20, 1, 0, v2, v4, v6, 3, 4) -> f_183(v1, v3, v5, 20, 1, 0, v2, v4, v6, 3, 4) :|: 0 = 0
f_181(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4, 19) -> f_184(v1, v3, v5, v7, 1, 20, 0, v12, v2, v4, v6, 3, 4, 19, 2) :|: v12 = 1 + v7 && 2 <= v12 && v12 <= 20
f_182(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_185(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: TRUE
f_183(v1, v3, v5, 20, 1, 0, v2, v4, v6, 3, 4) -> f_186(v1, v3, v5, 20, 1, 0, 19, v2, v4, v6, 3, 4) :|: 0 = 0
f_184(v1, v3, v5, v7, 1, 20, 0, v12, v2, v4, v6, 3, 4, 19, 2) -> f_187(v1, v3, v5, v7, 1, 20, 0, v12, v2, v4, v6, 3, 4, 19, 2) :|: TRUE
f_185(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_188(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: 0 = 0
f_186(v1, v3, v5, 20, 1, 0, 19, v2, v4, v6, 3, 4) -> f_189(v1, v3, v5, 20, 1, 0, 19, v2, v4, v6, 3, 4) :|: TRUE
f_187(v1, v3, v5, v7, 1, 20, 0, v12, v2, v4, v6, 3, 4, 19, 2) -> f_190(v1, v3, v5, v7, 1, 20, 0, v12, v2, v4, v6, 3, 4, 19, 2) :|: TRUE
f_188(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_191(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: 0 = 0
f_189(v1, v3, v5, 20, 1, 0, 19, v2, v4, v6, 3, 4) -> f_192(v1, v3, v5, 20, 1, 0, 19, v2, v4, v6, 3, 4) :|: TRUE
f_190(v1, v3, v5, v7, 1, 20, 0, v12, v2, v4, v6, 3, 4, 19, 2) -> f_193(v1, v3, v5, v7, 1, 20, 0, v12, v2, v4, v6, 3, 4, 19, 2) :|: TRUE
f_191(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_194(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: TRUE
f_192(v1, v3, v5, 20, 1, 0, 19, v2, v4, v6, 3, 4) -> f_195(v1, v3, v5, 20, 1, 0, 19, v2, v4, v6, 3, 4) :|: TRUE
f_193(v1, v3, v5, v7, 1, 20, 0, v12, v2, v4, v6, 3, 4, 19, 2) -> f_196(v1, v3, v5, v7, 1, 20, 0, v12, v2, v4, v6, 3, 4, 19, 2) :|: TRUE
f_194(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_197(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: TRUE
f_195(v1, v3, v5, 20, 1, 0, 19, v2, v4, v6, 3, 4) -> f_198(v1, v3, v5, 20, 1, 0, 19, v2, v4, v6, 3, 4) :|: TRUE
f_196(v1, v3, v5, v7, 1, 20, 0, v12, v2, v4, v6, 3, 4, 19, 2) -> f_272(v1, v3, v5, v7, v7, 1, 20, 0, v12, v2, v4, v6, 3, 19, 2, 4) :|: TRUE
f_197(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_200(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: TRUE
f_198(v1, v3, v5, 20, 1, 0, 19, v2, v4, v6, 3, 4) -> f_201(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: 0 = 0
f_200(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_203(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: TRUE
f_201(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_204(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: 0 = 0
f_203(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_206(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: 0 = 0
f_204(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_207(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: TRUE
f_206(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_209(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: 0 = 0
f_207(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_210(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: 0 = 0
f_209(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_212(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: TRUE
f_210(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_213(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: 0 = 0
f_212(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_215(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: 0 = 0
f_213(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_216(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: 0 = 0
f_215(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_218(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: 0 = 0
f_216(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_219(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: 0 = 0
f_218(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_221(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: 0 = 0
f_219(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_222(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: TRUE
f_221(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_224(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: 0 = 0
f_222(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_225(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: 0 = 0
f_224(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_227(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: TRUE
f_225(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_228(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: 0 = 0
f_227(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_230(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: 0 = 0
f_228(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_231(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: TRUE
f_230(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_233(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: 0 = 0
f_231(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_234(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: 0 = 0
f_233(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_236(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: TRUE
f_234(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_237(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: 0 = 0
f_236(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_310(v1, v3, v5, 0, 1, 1, 20, 0, v2, v4, v6, 3, 2, 4) :|: TRUE
f_237(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_241(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: 0 = 0
f_241(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_245(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: TRUE
f_245(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_249(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: 0 = 0
f_249(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_253(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: 0 = 0
f_253(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_257(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: 0 = 0
f_257(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_261(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: TRUE
f_261(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_265(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: 0 = 0
f_265(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_269(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: 0 = 0
f_269(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_274(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: TRUE
f_272(v230, v231, v232, v233, v234, 1, 20, 0, v238, v239, v240, v241, 3, 19, 2, 4) -> f_349(v230, v231, v232, v233, v234, 1, 20, 0, v238, v239, v240, v241, 3, 19, 2, 4) :|: TRUE
f_274(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_277(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: TRUE
f_277(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_512(v1, v3, v5, 20, 0, 1, 19, 20, v2, v4, v6, 3, 4) :|: TRUE
f_310(v608, v609, v610, 0, v612, 1, 20, v615, v616, v617, v618, 3, 2, 4) -> f_384(v608, v609, v610, 0, v612, 1, 20, v615, v616, v617, v618, 3, 2, 4) :|: TRUE
f_349(v808, v809, v810, v811, v812, 1, 20, 0, v816, v817, v818, v819, 3, 19, 2, 4) -> f_352(v808, v809, v810, v811, v816, 1, v812, 20, 0, v817, v818, v819, 3, 19, 2, 4) :|: 0 = 0
f_352(v808, v809, v810, v811, v816, 1, v812, 20, 0, v817, v818, v819, 3, 19, 2, 4) -> f_355(v808, v809, v810, v811, v816, 1, v812, 20, 0, v817, v818, v819, 3, 19, 2, 4) :|: 0 = 0
f_355(v808, v809, v810, v811, v816, 1, v812, 20, 0, v817, v818, v819, 3, 19, 2, 4) -> f_358(v808, v809, v810, v811, v816, 1, v812, 20, 0, v817, v818, v819, 3, 19, 2, 4) :|: TRUE
f_358(v808, v809, v810, v811, v816, 1, v812, 20, 0, v817, v818, v819, 3, 19, 2, 4) -> f_361(v808, v809, v810, v811, v816, 1, 20, v812, 0, v817, v818, v819, 3, 19, 2, 4) :|: 0 = 0
f_361(v808, v809, v810, v811, v816, 1, 20, v812, 0, v817, v818, v819, 3, 19, 2, 4) -> f_364(v808, v809, v810, v811, v816, 1, 20, v812, 0, v817, v818, v819, 3, 19, 2, 4) :|: 0 = 0
f_364(v808, v809, v810, v811, v816, 1, 20, v812, 0, v817, v818, v819, 3, 19, 2, 4) -> f_367(v808, v809, v810, v811, v816, 1, 20, v812, 0, v817, v818, v819, 3, 19, 2, 4) :|: 0 = 0
f_367(v808, v809, v810, v811, v816, 1, 20, v812, 0, v817, v818, v819, 3, 19, 2, 4) -> f_370(v808, v809, v810, v811, v816, 1, 20, v812, 0, v817, v818, v819, 3, 19, 2, 4) :|: 0 = 0
f_370(v808, v809, v810, v811, v816, 1, 20, v812, 0, v817, v818, v819, 3, 19, 2, 4) -> f_373(v808, v809, v810, v811, v816, 1, 20, v812, 0, v817, v818, v819, 3, 19, 2, 4) :|: TRUE
f_373(v808, v809, v810, v811, v816, 1, 20, v812, 0, v817, v818, v819, 3, 19, 2, 4) -> f_376(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 19, 2, 4) :|: 0 = 0
f_376(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 19, 2, 4) -> f_379(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 19, 2, 4) :|: 0 = 0
f_379(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 19, 2, 4) -> f_382(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 19, 2, 4) :|: TRUE
f_382(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 19, 2, 4) -> f_386(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 19, 2, 4) :|: 0 = 0
f_384(v1195, v1196, v1197, 0, v1199, 1, 20, v1202, v1203, v1204, v1205, 3, 2, 4) -> f_458(v1195, v1196, v1197, 0, v1199, 1, 20, v1202, v1203, v1204, v1205, 3, 4) :|: TRUE
f_386(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 19, 2, 4) -> f_389(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 19, 2, 4) :|: 0 = 0
f_389(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 19, 2, 4) -> f_393(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) :|: v816 = 20
f_389(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 19, 2, 4) -> f_394(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 18, 2, 19, 4) :|: v816 != 20 && 2 <= v816 && v816 <= 19 && v812 <= 18 && v811 <= 18
f_393(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) -> f_397(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) :|: 0 = 0
f_394(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 18, 2, 19, 4) -> f_398(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 18, 2, 19, 4) :|: 0 = 0
f_397(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) -> f_401(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) :|: TRUE
f_398(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 18, 2, 19, 4) -> f_402(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 18, 2, 19, 4) :|: TRUE
f_401(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) -> f_405(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) :|: TRUE
f_402(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 18, 2, 19, 4) -> f_406(v808, v809, v810, v811, v816, 1, 20, 0, v817, v818, v819, 3, 18, 2, 19, 4) :|: 0 = 0
f_405(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) -> f_409(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) :|: 0 = 0
f_406(v808, v809, v810, v811, v816, 1, 20, 0, v817, v818, v819, 3, 18, 2, 19, 4) -> f_410(v808, v809, v810, v811, v816, 1, 20, 0, v1294, v817, v818, v819, 3, 18, 2, 19, 4) :|: v1294 = 1 + v816 && 3 <= v1294 && v1294 <= 20
f_409(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) -> f_413(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) :|: 0 = 0
f_410(v808, v809, v810, v811, v816, 1, 20, 0, v1294, v817, v818, v819, 3, 18, 2, 19, 4) -> f_414(v808, v809, v810, v811, v816, 1, 20, 0, v1294, v817, v818, v819, 3, 18, 2, 19, 4) :|: TRUE
f_413(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) -> f_417(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) :|: TRUE
f_414(v808, v809, v810, v811, v816, 1, 20, 0, v1294, v817, v818, v819, 3, 18, 2, 19, 4) -> f_418(v808, v809, v810, v811, v816, 1, 20, 0, v1294, v817, v818, v819, 3, 18, 2, 19, 4) :|: TRUE
f_417(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) -> f_421(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) :|: TRUE
f_418(v808, v809, v810, v811, v816, 1, 20, 0, v1294, v817, v818, v819, 3, 18, 2, 19, 4) -> f_422(v808, v809, v810, v811, v816, 1, 20, 0, v1294, v817, v818, v819, 3, 18, 2, 19, 4) :|: TRUE
f_421(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) -> f_425(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) :|: TRUE
f_422(v808, v809, v810, v811, v816, 1, 20, 0, v1294, v817, v818, v819, 3, 18, 2, 19, 4) -> f_426(v808, v809, v810, v811, v816, 1, 20, 0, v1294, v817, v818, v819, 3, 18, 2, 19, 4) :|: TRUE
f_425(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) -> f_429(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) :|: TRUE
f_426(v808, v809, v810, v811, v816, 1, 20, 0, v1294, v817, v818, v819, 3, 18, 2, 19, 4) -> f_349(v808, v809, v810, v811, v816, 1, 20, 0, v1294, v817, v818, v819, 3, 19, 2, 4) :|: TRUE
f_429(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) -> f_432(v808, v809, v810, v811, 0, 1, 20, 19, v817, v818, v819, 3, 4) :|: 0 = 0
f_432(v808, v809, v810, v811, 0, 1, 20, 19, v817, v818, v819, 3, 4) -> f_435(v808, v809, v810, v811, 0, 1, 20, 19, v817, v818, v819, 3, 4) :|: 0 = 0
f_435(v808, v809, v810, v811, 0, 1, 20, 19, v817, v818, v819, 3, 4) -> f_438(v808, v809, v810, v811, 0, 1, 20, 19, v817, v818, v819, 3, 4) :|: TRUE
f_438(v808, v809, v810, v811, 0, 1, 20, 19, v817, v818, v819, 3, 4) -> f_441(v808, v809, v810, v811, 0, 1, 20, 19, v817, v818, v819, 3, 4) :|: 0 = 0
f_441(v808, v809, v810, v811, 0, 1, 20, 19, v817, v818, v819, 3, 4) -> f_444(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) :|: 0 = 0
f_444(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) -> f_447(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) :|: 0 = 0
f_447(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) -> f_450(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) :|: 0 = 0
f_450(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) -> f_453(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) :|: TRUE
f_453(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) -> f_456(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) :|: 0 = 0
f_456(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) -> f_460(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) :|: 0 = 0
f_458(v1801, v1802, v1803, 0, v1805, 1, 20, v1808, v1809, v1810, v1811, 3, 4) -> f_546(v1801, v1802, v1803, 0, v1805, 1, 20, v1808, v1809, v1810, v1811, 3, 4) :|: TRUE
f_460(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) -> f_463(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) :|: TRUE
f_463(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) -> f_467(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) :|: 0 = 0
f_467(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) -> f_471(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) :|: 0 = 0
f_471(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) -> f_475(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) :|: 0 = 0
f_475(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) -> f_479(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) :|: TRUE
f_479(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) -> f_700(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) :|: TRUE
f_512(v2155, v2156, v2157, v2158, 0, 1, 19, 20, v2163, v2164, v2165, 3, 4) -> f_717(v2155, v2156, v2157, v2158, 0, 1, 19, 20, v2163, v2164, v2165, 3, 4) :|: TRUE
f_546(v2557, v2558, v2559, 0, v2561, 1, 20, v2564, v2565, v2566, v2567, 3, 4) -> f_618(v2557, v2558, v2559, 0, v2561, 1, 20, v2564, v2565, v2566, v2567, 3, 4) :|: TRUE
f_618(v3383, v3384, v3385, 0, v3387, 1, 20, v3390, v3391, v3392, v3393, 3, 4) -> f_620(v3383, v3384, v3385, 0, v3387, 1, 20, v3390, v3391, v3392, v3393, 3, 4) :|: 0 = 0
f_620(v3383, v3384, v3385, 0, v3387, 1, 20, v3390, v3391, v3392, v3393, 3, 4) -> f_623(v3383, v3384, v3385, 0, v3387, 1, 20, v3390, v3391, v3392, v3393, 3, 4) :|: 0 = 0
f_623(v3383, v3384, v3385, 0, v3387, 1, 20, v3390, v3391, v3392, v3393, 3, 4) -> f_625(v3383, v3384, v3385, 0, 20, 1, 19, v3391, v3392, v3393, 3, 4) :|: v3387 = 20
f_623(v3383, v3384, v3385, 0, v3387, 1, 20, v3390, v3391, v3392, v3393, 3, 4) -> f_626(v3383, v3384, v3385, 0, v3387, 1, 20, v3390, v3391, v3392, v3393, 3, 4) :|: v3387 != 20
f_625(v3383, v3384, v3385, 0, 20, 1, 19, v3391, v3392, v3393, 3, 4) -> f_628(v3383, v3384, v3385, 0, 20, 1, 19, v3391, v3392, v3393, 3, 4) :|: 0 = 0
f_626(v3383, v3384, v3385, 0, v3387, 1, 20, v3390, v3391, v3392, v3393, 3, 4) -> f_629(v3383, v3384, v3385, 0, v3387, 1, 20, v3390, v3391, v3392, v3393, 3, 4) :|: 0 = 0
f_628(v3383, v3384, v3385, 0, 20, 1, 19, v3391, v3392, v3393, 3, 4) -> f_631(v3383, v3384, v3385, 0, 20, 1, 19, v3391, v3392, v3393, 3, 4) :|: TRUE
f_629(v3383, v3384, v3385, 0, v3387, 1, 20, v3390, v3391, v3392, v3393, 3, 4) -> f_632(v3383, v3384, v3385, 0, v3387, 1, 20, v3390, v3391, v3392, v3393, 3, 4) :|: TRUE
f_631(v3383, v3384, v3385, 0, 20, 1, 19, v3391, v3392, v3393, 3, 4) -> f_634(v3383, v3384, v3385, 0, 20, 1, 19, v3391, v3392, v3393, 3, 4) :|: TRUE
f_632(v3383, v3384, v3385, 0, v3387, 1, 20, v3390, v3391, v3392, v3393, 3, 4) -> f_635(v3383, v3384, v3385, 0, v3387, 1, 20, v3391, v3392, v3393, 3, 4) :|: 0 = 0
f_634(v3383, v3384, v3385, 0, 20, 1, 19, v3391, v3392, v3393, 3, 4) -> f_637(v3383, v3384, v3385, 0, 20, 1, 19, v3391, v3392, v3393, 3, 4) :|: 0 = 0
f_635(v3383, v3384, v3385, 0, v3387, 1, 20, v3391, v3392, v3393, 3, 4) -> f_638(v3383, v3384, v3385, 0, v3387, 1, 20, v3486, v3391, v3392, v3393, 3, 4, 2) :|: v3486 = 1 + v3387 && 2 <= v3486
f_637(v3383, v3384, v3385, 0, 20, 1, 19, v3391, v3392, v3393, 3, 4) -> f_640(v3383, v3384, v3385, 0, 20, 1, 19, v3391, v3392, v3393, 3, 4) :|: 0 = 0
f_638(v3383, v3384, v3385, 0, v3387, 1, 20, v3486, v3391, v3392, v3393, 3, 4, 2) -> f_641(v3383, v3384, v3385, 0, v3387, 1, 20, v3486, v3391, v3392, v3393, 3, 4, 2) :|: TRUE
f_640(v3383, v3384, v3385, 0, 20, 1, 19, v3391, v3392, v3393, 3, 4) -> f_643(v3383, v3384, v3385, 0, 20, 1, 19, v3391, v3392, v3393, 3, 4) :|: TRUE
f_641(v3383, v3384, v3385, 0, v3387, 1, 20, v3486, v3391, v3392, v3393, 3, 4, 2) -> f_644(v3383, v3384, v3385, 0, v3387, 1, 20, v3486, v3391, v3392, v3393, 3, 4, 2) :|: TRUE
f_643(v3383, v3384, v3385, 0, 20, 1, 19, v3391, v3392, v3393, 3, 4) -> f_646(v3383, v3384, v3385, 0, 20, 1, 19, v3391, v3392, v3393, 3, 4) :|: TRUE
f_644(v3383, v3384, v3385, 0, v3387, 1, 20, v3486, v3391, v3392, v3393, 3, 4, 2) -> f_647(v3383, v3384, v3385, 0, v3387, 1, 20, v3486, v3391, v3392, v3393, 3, 4, 2) :|: TRUE
f_646(v3383, v3384, v3385, 0, 20, 1, 19, v3391, v3392, v3393, 3, 4) -> f_988(v3383, v3384, v3385, 0, 20, 1, 0, 19, v3391, v3392, v3393, 3, 20, 19, 4) :|: TRUE
f_647(v3383, v3384, v3385, 0, v3387, 1, 20, v3486, v3391, v3392, v3393, 3, 4, 2) -> f_650(v3383, v3384, v3385, 0, v3387, 1, 20, v3486, v3391, v3392, v3393, 3, 4, 2) :|: TRUE
f_650(v3383, v3384, v3385, 0, v3387, 1, 20, v3486, v3391, v3392, v3393, 3, 4, 2) -> f_653(v3383, v3384, v3385, 0, v3486, 1, v3387, 20, v3391, v3392, v3393, 3, 4, 2) :|: 0 = 0
f_653(v3383, v3384, v3385, 0, v3486, 1, v3387, 20, v3391, v3392, v3393, 3, 4, 2) -> f_656(v3383, v3384, v3385, 0, v3486, 1, v3387, 20, v3391, v3392, v3393, 3, 4, 2) :|: 0 = 0
f_656(v3383, v3384, v3385, 0, v3486, 1, v3387, 20, v3391, v3392, v3393, 3, 4, 2) -> f_659(v3383, v3384, v3385, 0, v3486, 1, v3387, 20, v3391, v3392, v3393, 3, 4, 2) :|: TRUE
f_659(v3383, v3384, v3385, 0, v3486, 1, v3387, 20, v3391, v3392, v3393, 3, 4, 2) -> f_662(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 4, 2) :|: 0 = 0
f_662(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 4, 2) -> f_665(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 4, 2) :|: 0 = 0
f_665(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 4, 2) -> f_668(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) :|: v3486 <= 20 && v3387 <= 19
f_665(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 4, 2) -> f_669(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 21, 4, 22) :|: 20 < v3486 && 21 <= v3387 && 22 <= v3486
f_668(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) -> f_672(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) :|: 0 = 0
f_669(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 21, 4, 22) -> f_673(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 21, 4, 22) :|: 0 = 0
f_672(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) -> f_676(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) :|: 0 = 0
f_673(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 21, 4, 22) -> f_677(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 21, 4, 22) :|: 0 = 0
f_676(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) -> f_680(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) :|: TRUE
f_677(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 21, 4, 22) -> f_681(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 21, 4, 22) :|: TRUE
f_680(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) -> f_684(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) :|: 0 = 0
f_684(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) -> f_687(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) :|: 0 = 0
f_687(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) -> f_691(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) :|: TRUE
f_691(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) -> f_618(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 4) :|: TRUE
f_700(v4046, v4047, v4048, v4049, 0, 1, 19, 20, v4054, v4055, v4056, 3, 4) -> f_947(v4046, v4047, v4048, v4049, 0, 1, 19, 20, v4054, v4055, v4056, 3, 20, 18, 19, 4) :|: TRUE
f_717(v4198, v4199, v4200, v4201, 0, 1, 19, 20, v4206, v4207, v4208, 3, 4) -> f_956(v4198, v4199, v4200, v4201, 0, 1, 19, 20, v4206, v4207, v4208, 3, 20, 18, 19, 4) :|: TRUE
f_894(v6274, v6275, v6276, v6277, v6278, 1, 19, 0, v6282, 20, v6284, v6285, v6286, 3, 4) -> f_970(v6274, v6275, v6276, v6277, v6278, 1, 19, 0, v6282, 20, v6284, v6285, v6286, 3, 20, 19, 2, 4) :|: TRUE
f_947(v6768, v6769, v6770, v6771, 0, 1, v6774, v6775, v6776, v6777, v6778, 3, 20, 18, 19, 4) -> f_1028(v6768, v6769, v6770, v6771, 0, 1, v6774, v6775, v6776, v6777, v6778, 3, 20, 19, 2, 4) :|: TRUE
f_956(v6864, v6865, v6866, v6867, 0, 1, v6870, v6871, v6872, v6873, v6874, 3, 20, 18, 19, 4) -> f_1045(v6864, v6865, v6866, v6867, 0, 1, v6870, v6871, v6872, v6873, v6874, 3, 20, 19, 2, 4) :|: TRUE
f_970(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7254, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_971(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: 0 = 0
f_971(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_972(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: 0 = 0
f_972(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_973(v7246, v7247, v7248, v7249, v7252, 1, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 2, 4) :|: v7250 = v7252 && v7254 <= 18
f_972(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_974(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: v7250 != v7252
f_973(v7246, v7247, v7248, v7249, v7252, 1, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 2, 4) -> f_975(v7246, v7247, v7248, v7249, v7252, 1, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 2, 4) :|: 0 = 0
f_974(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_976(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: 0 = 0
f_975(v7246, v7247, v7248, v7249, v7252, 1, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 2, 4) -> f_977(v7246, v7247, v7248, v7249, v7252, 1, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 2, 4) :|: TRUE
f_976(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_978(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: TRUE
f_977(v7246, v7247, v7248, v7249, v7252, 1, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 2, 4) -> f_979(v7246, v7247, v7248, v7249, v7252, 1, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 2, 4) :|: TRUE
f_978(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_980(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: 0 = 0
f_979(v7246, v7247, v7248, v7249, v7252, 1, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 2, 4) -> f_981(v7246, v7247, v7248, v7249, v7252, 1, 0, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 4) :|: 0 = 0
f_980(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_982(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7311, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: v7311 = 1 + v7250 && 2 <= v7311
f_981(v7246, v7247, v7248, v7249, v7252, 1, 0, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 4) -> f_983(v7246, v7247, v7248, v7249, v7252, 1, 0, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 4) :|: 1 + v7254 = v7252
f_982(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7311, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_984(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7311, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: TRUE
f_983(v7246, v7247, v7248, v7249, v7252, 1, 0, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 4) -> f_985(v7246, v7247, v7248, v7249, v7252, 1, 0, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 4) :|: TRUE
f_984(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7311, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_986(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7311, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: TRUE
f_985(v7246, v7247, v7248, v7249, v7252, 1, 0, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 4) -> f_987(v7246, v7247, v7248, v7249, v7252, 1, 0, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 4) :|: TRUE
f_986(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7311, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_989(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7311, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: TRUE
f_987(v7246, v7247, v7248, v7249, v7252, 1, 0, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 4) -> f_988(v7246, v7247, v7248, v7249, v7252, 1, 0, v7254, v7256, v7257, v7258, 3, 20, 19, 4) :|: TRUE
f_988(v7409, v7410, v7411, v7412, v7413, 1, 0, v7416, v7417, v7418, v7419, 3, 20, 19, 4) -> f_990(v7409, v7410, v7411, v7412, v7413, 1, 0, v7416, v7417, v7418, v7419, 3, 20, 19, 4) :|: TRUE
f_989(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7311, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_991(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7311, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: TRUE
f_990(v7409, v7410, v7411, v7412, v7413, 1, 0, v7416, v7417, v7418, v7419, 3, 20, 19, 4) -> f_992(v7409, v7410, v7411, v7412, v7413, 1, 0, v7416, v7417, v7418, v7419, 3, 20, 19, 4) :|: TRUE
f_991(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7311, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_993(v7246, v7247, v7248, v7249, v7311, 1, v7250, v7252, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: 0 = 0
f_992(v7409, v7410, v7411, v7412, v7413, 1, 0, v7416, v7417, v7418, v7419, 3, 20, 19, 4) -> f_994(v7409, v7410, v7411, v7412, 0, 1, v7413, v7416, v7417, v7418, v7419, 3, 20, 19, 4) :|: 0 = 0
f_993(v7246, v7247, v7248, v7249, v7311, 1, v7250, v7252, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_995(v7246, v7247, v7248, v7249, v7311, 1, v7250, v7252, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: 0 = 0
f_994(v7409, v7410, v7411, v7412, 0, 1, v7413, v7416, v7417, v7418, v7419, 3, 20, 19, 4) -> f_996(v7409, v7410, v7411, v7412, 0, 1, v7413, v7416, v7417, v7418, v7419, 3, 20, 19, 4) :|: 0 = 0
f_995(v7246, v7247, v7248, v7249, v7311, 1, v7250, v7252, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_997(v7246, v7247, v7248, v7249, v7311, 1, v7250, v7252, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: TRUE
f_996(v7409, v7410, v7411, v7412, 0, 1, v7413, v7416, v7417, v7418, v7419, 3, 20, 19, 4) -> f_998(v7409, v7410, v7411, v7412, 0, 1, v7413, v7416, v7417, v7418, v7419, 3, 20, 19, 4) :|: TRUE
f_997(v7246, v7247, v7248, v7249, v7311, 1, v7250, v7252, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_999(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: 0 = 0
f_998(v7409, v7410, v7411, v7412, 0, 1, v7413, v7416, v7417, v7418, v7419, 3, 20, 19, 4) -> f_1000(v7409, v7410, v7411, v7412, 0, 1, v7413, v7416, v7417, v7418, v7419, 3, 20, 19, 4) :|: 0 = 0
f_999(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_1001(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: 0 = 0
f_1000(v7409, v7410, v7411, v7412, 0, 1, v7413, v7416, v7417, v7418, v7419, 3, 20, 19, 4) -> f_1002(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) :|: 0 = 0
f_1001(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_1003(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) :|: v7311 <= v7252 && v7311 <= 19 && 2 <= v7252 && 3 <= v7255 && v7250 <= 18
f_1001(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_1004(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: v7252 < v7311
f_1002(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) -> f_1005(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) :|: 0 = 0
f_1003(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) -> f_1006(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) :|: 0 = 0
f_1004(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_1007(v7246, v7247, v7248, v7249, v7311, 1, v7252, 0, v7250, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: 0 = 0
f_1005(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) -> f_1008(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) :|: 0 = 0
f_1006(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) -> f_1009(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) :|: 0 = 0
f_1007(v7246, v7247, v7248, v7249, v7311, 1, v7252, 0, v7250, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_1010(v7246, v7247, v7248, v7249, v7311, 1, v7252, 0, v7250, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: 0 = 0
f_1008(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) -> f_1011(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) :|: TRUE
f_1009(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) -> f_1012(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) :|: TRUE
f_1010(v7246, v7247, v7248, v7249, v7311, 1, v7252, 0, v7250, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_1013(v7246, v7247, v7248, v7249, v7311, 1, v7252, 0, v7250, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: TRUE
f_1011(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) -> f_1014(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) :|: 0 = 0
f_1012(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) -> f_1015(v7246, v7247, v7248, v7249, v7311, 1, v7252, 0, v7250, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) :|: 0 = 0
f_1014(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) -> f_1016(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) :|: 0 = 0
f_1015(v7246, v7247, v7248, v7249, v7311, 1, v7252, 0, v7250, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) -> f_1017(v7246, v7247, v7248, v7249, v7311, 1, v7252, 0, v7250, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) :|: 0 = 0
f_1016(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) -> f_1018(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) :|: TRUE
f_1017(v7246, v7247, v7248, v7249, v7311, 1, v7252, 0, v7250, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) -> f_1019(v7246, v7247, v7248, v7249, v7311, 1, v7252, 0, v7250, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) :|: TRUE
f_1018(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) -> f_1020(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) :|: 0 = 0
f_1019(v7246, v7247, v7248, v7249, v7311, 1, v7252, 0, v7250, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) -> f_970(v7246, v7247, v7248, v7249, v7311, 1, v7252, 0, v7250, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: TRUE
f_1020(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) -> f_1021(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) :|: 0 = 0
f_1021(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) -> f_1022(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = v7416
f_1021(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) -> f_1023(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 2, 19, 4) :|: 0 != v7416 && 2 <= v7413
f_1022(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1024(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1023(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 2, 19, 4) -> f_1025(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 2, 19, 4) :|: 0 = 0
f_1024(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1026(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: TRUE
f_1025(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 2, 19, 4) -> f_1027(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 2, 19, 4) :|: TRUE
f_1026(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1029(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: TRUE
f_1027(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 2, 19, 4) -> f_1028(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 2, 4) :|: TRUE
f_1028(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) -> f_1030(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) :|: 0 = 0
f_1029(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1031(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1030(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) -> f_1032(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) :|: 0 = 0
f_1031(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1033(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1032(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) -> f_1034(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) :|: 0 = 0
f_1033(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1035(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: TRUE
f_1034(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) -> f_1036(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) :|: TRUE
f_1035(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1037(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1036(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) -> f_1038(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) :|: 0 = 0
f_1037(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1039(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1038(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) -> f_1040(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) :|: 0 = 0
f_1039(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1041(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1040(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) -> f_1042(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) :|: TRUE
f_1041(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1043(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1042(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) -> f_1044(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) :|: TRUE
f_1043(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1046(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: TRUE
f_1044(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) -> f_1045(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) :|: TRUE
f_1045(v8553, v8554, v8555, v8556, 0, 1, v8559, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1047(v8553, v8554, v8555, v8556, 0, 1, v8559, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: TRUE
f_1046(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1048(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1047(v8553, v8554, v8555, v8556, 0, 1, v8559, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1049(v8553, v8554, v8555, v8556, 0, 1, v8559, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: TRUE
f_1048(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1050(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1049(v8553, v8554, v8555, v8556, 0, 1, v8559, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1051(v8553, v8554, v8555, v8556, 1, 0, v8559, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: 0 = 0
f_1050(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1052(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: TRUE
f_1051(v8553, v8554, v8555, v8556, 1, 0, v8559, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1053(v8553, v8554, v8555, v8556, 1, 0, v8559, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: 0 = 0
f_1052(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1054(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1053(v8553, v8554, v8555, v8556, 1, 0, v8559, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1055(v8553, v8554, v8555, v8556, 1, 0, v8559, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: TRUE
f_1054(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1056(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1055(v8553, v8554, v8555, v8556, 1, 0, v8559, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1057(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: 0 = 0
f_1056(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1058(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1057(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1059(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: 0 = 0
f_1058(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1060(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: TRUE
f_1059(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1061(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: 0 = 0
f_1060(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1026(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: TRUE
f_1061(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1062(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: 0 = 0
f_1062(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1063(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: TRUE
f_1063(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1064(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: 0 = 0
f_1064(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1065(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: 0 = 0
f_1065(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1066(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: TRUE
f_1066(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_970(v8553, v8554, v8555, v8556, 1, 1, v8559, 0, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: TRUE
Combined rules. Obtained 22 rulesP rules:
f_623(v3383:0, v3384:0, v3385:0, 0, v3387:0, 1, 20, v3390:0, v3391:0, v3392:0, v3393:0, 3, 4) -> f_681(v3383:0, v3384:0, v3385:0, 0, 1 + v3387:0, 1, 20, v3387:0, v3391:0, v3392:0, v3393:0, 3, 21, 4, 22) :|: v3387:0 > 20
f_972(v7246:0, v7247:0, v7248:0, v7249:0, 1 + v7254:0, 1, 1 + v7254:0, 0, v7255:0, v7254:0, v7256:0, v7257:0, v7258:0, 3, 20, 19, 2, 4) -> f_1021(v7246:0, v7247:0, v7248:0, v7249:0, 0, 1, v7254:0, 1 + v7254:0, v7256:0, v7257:0, v7258:0, 3, 20, 19, 4) :|: v7254:0 < 19
f_130 -> f_623(v1:0, v3:0, v5:0, 0, 1, 1, 20, 0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3, 4) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0
f_1021(v7409:0, v7410:0, v7411:0, v7412:0, 0, 1, 0, v7413:0, v7417:0, v7418:0, v7419:0, 3, 20, 19, 4) -> f_1060(v7409:0, v7410:0, v7411:0, v7412:0, 0, 1, v7417:0, v7418:0, v7419:0, 3, 20, 4) :|: TRUE
f_972(v7246:0, v7247:0, v7248:0, v7249:0, v7250:0, 1, v7252:0, 0, v7255:0, v7254:0, v7256:0, v7257:0, v7258:0, 3, 20, 19, 2, 4) -> f_972(v7246:0, v7247:0, v7248:0, v7249:0, 1 + v7250:0, 1, v7252:0, 0, v7255:0, v7250:0, v7256:0, v7257:0, v7258:0, 3, 20, 19, 2, 4) :|: v7252:0 > v7250:0 && v7250:0 > 0 && v7250:0 < 19 && v7252:0 >= 1 + v7250:0 && v7252:0 > 1 && v7255:0 > 2
f_972(v7246:0, v7247:0, v7248:0, v7249:0, v7250:0, 1, v7252:0, 0, v7255:0, v7254:0, v7256:0, v7257:0, v7258:0, 3, 20, 19, 2, 4) -> f_972(v7246:0, v7247:0, v7248:0, v7249:0, 1 + v7250:0, 1, v7252:0, 0, v7255:0, v7250:0, v7256:0, v7257:0, v7258:0, 3, 20, 19, 2, 4) :|: v7252:0 < v7250:0 && v7250:0 > 0 && v7250:0 < 19 && v7252:0 >= 1 + v7250:0 && v7252:0 > 1 && v7255:0 > 2
f_130 -> f_972(v1:0, v3:0, v5:0, 20, 1, 1, 19, 0, 20, 0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3, 20, 19, 2, 4) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0
f_130 -> f_972(v1:0, v3:0, v5:0, 20, 1, 1, 19, 0, 20, 0, v2:0, v4:0, v6:0, 3, 20, 19, 2, 4) :|: FALSE
f_1021(v7409:0, v7410:0, v7411:0, v7412:0, 0, 1, v7416:0, v7413:0, v7417:0, v7418:0, v7419:0, 3, 20, 19, 4) -> f_972(v7409:0, v7410:0, v7411:0, v7412:0, 1, 1, v7416:0, 0, v7413:0, 0, v7417:0, v7418:0, v7419:0, 3, 20, 19, 2, 4) :|: v7416:0 > 0 && v7413:0 > 1
f_1021(v7409:0, v7410:0, v7411:0, v7412:0, 0, 1, v7416:0, v7413:0, v7417:0, v7418:0, v7419:0, 3, 20, 19, 4) -> f_972(v7409:0, v7410:0, v7411:0, v7412:0, 1, 1, v7416:0, 0, v7413:0, 0, v7417:0, v7418:0, v7419:0, 3, 20, 19, 2, 4) :|: v7416:0 < 0 && v7413:0 > 1
f_130 -> f_158(v1:0, v3:0, v5:0, v7:0, 1, 20, 0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3, 4, 21) :|: v7:0 > 20 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0
f_130 -> f_389(v1:0, v3:0, v5:0, v7:0, 1 + v7:0, 1, 20, 0, v7:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3, 19, 2, 4) :|: v7:0 > 0 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 < 21 && v7:0 < 20
f_130 -> f_389(v1:0, v3:0, v5:0, v7:0, v12:0, 1, 20, 0, v7:0, v2:0, v4:0, v6:0, 3, 19, 2, 4) :|: FALSE
f_130 -> f_149(v1:0, v3:0, v5:0, v7:0, 0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 20, 3, 1, 4) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 < 0
f_389(v808:0, v809:0, v810:0, v811:0, 20, 1, 20, 0, v812:0, v817:0, v818:0, v819:0, 3, 19, 2, 4) -> f_972(v808:0, v809:0, v810:0, v811:0, 1, 1, 19, 0, 20, 0, v817:0, v818:0, v819:0, 3, 20, 19, 2, 4) :|: TRUE
f_894(v6274:0, v6275:0, v6276:0, v6277:0, v6278:0, 1, 19, 0, v6282:0, 20, v6284:0, v6285:0, v6286:0, 3, 4) -> f_972(v6274:0, v6275:0, v6276:0, v6277:0, v6278:0, 1, 19, 0, 20, v6282:0, v6284:0, v6285:0, v6286:0, 3, 20, 19, 2, 4) :|: TRUE
f_1060(v7409:0, v7410:0, v7411:0, v7412:0, 0, 1, v7417:0, v7418:0, v7419:0, 3, 20, 4) -> f_1060(v7409:0, v7410:0, v7411:0, v7412:0, 0, 1, v7417:0, v7418:0, v7419:0, 3, 20, 4) :|: TRUE
f_972(v7246:0, v7247:0, v7248:0, v7249:0, v7250:0, 1, v7252:0, 0, v7255:0, v7254:0, v7256:0, v7257:0, v7258:0, 3, 20, 19, 2, 4) -> f_1013(v7246:0, v7247:0, v7248:0, v7249:0, 1 + v7250:0, 1, v7252:0, 0, v7250:0, v7255:0, v7256:0, v7257:0, v7258:0, 3, 20, 19, 2, 4) :|: v7252:0 > v7250:0 && v7252:0 < 1 + v7250:0 && v7250:0 > 0
f_972(v7246:0, v7247:0, v7248:0, v7249:0, v7250:0, 1, v7252:0, 0, v7255:0, v7254:0, v7256:0, v7257:0, v7258:0, 3, 20, 19, 2, 4) -> f_1013(v7246:0, v7247:0, v7248:0, v7249:0, 1 + v7250:0, 1, v7252:0, 0, v7250:0, v7255:0, v7256:0, v7257:0, v7258:0, 3, 20, 19, 2, 4) :|: v7252:0 < v7250:0 && v7252:0 < 1 + v7250:0 && v7250:0 > 0
f_623(v3383:0, v3384:0, v3385:0, 0, v3387:0, 1, 20, v3390:0, v3391:0, v3392:0, v3393:0, 3, 4) -> f_623(v3383:0, v3384:0, v3385:0, 0, 1 + v3387:0, 1, 20, v3387:0, v3391:0, v3392:0, v3393:0, 3, 4) :|: v3387:0 < 20 && v3387:0 > 0
f_623(v3383:0, v3384:0, v3385:0, 0, 20, 1, 20, v3390:0, v3391:0, v3392:0, v3393:0, 3, 4) -> f_1021(v3383:0, v3384:0, v3385:0, 0, 0, 1, 19, 20, v3391:0, v3392:0, v3393:0, 3, 20, 19, 4) :|: TRUE
f_389(v808:0, v809:0, v810:0, v811:0, v816:0, 1, 20, 0, v812:0, v817:0, v818:0, v819:0, 3, 19, 2, 4) -> f_389(v808:0, v809:0, v810:0, v811:0, 1 + v816:0, 1, 20, 0, v816:0, v817:0, v818:0, v819:0, 3, 19, 2, 4) :|: v816:0 > 1 && v816:0 < 20 && v812:0 < 19 && v811:0 < 19
Filtered unneeded arguments:
   f_623(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13) -> f_623(x5)
   f_972(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18) -> f_972(x5, x7, x9, x10)
   f_1021(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15) -> f_1021(x7, x8)
   f_389(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16) -> f_389(x4, x5, x9)
   f_894(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15) -> f_894(x5, x9)
Removed division, modulo operations, cleaned up constraints. Obtained 22 rules.P rules:
f_623(v3387:0) -> f_681(v3383:0, v3384:0, v3385:0, 0, 1 + v3387:0, 1, 20, v3387:0, v3391:0, v3392:0, v3393:0, 3, 21, 4, 22) :|: v3387:0 > 20
f_972(sum~cons_1~v7254:0, sum~cons_1~v7254:01, v7255:0, v7254:0) -> f_1021(v7254:0, 1 + v7254:0) :|: v7254:0 < 19 && sum~cons_1~v7254:0 = 1 + v7254:0 && sum~cons_1~v7254:01 = 1 + v7254:0
f_130 -> f_623(1) :|: TRUE
f_1021(cons_0, v7413:0) -> f_1060(v7409:0, v7410:0, v7411:0, v7412:0, 0, 1, v7417:0, v7418:0, v7419:0, 3, 20, 4) :|: TRUE && cons_0 = 0
f_972(v7250:0, v7252:0, v7255:0, v7254:0) -> f_972(1 + v7250:0, v7252:0, v7255:0, v7250:0) :|: v7250:0 > 0 && v7252:0 > v7250:0 && v7250:0 < 19 && v7252:0 >= 1 + v7250:0 && v7255:0 > 2 && v7252:0 > 1
f_972(v7250:0, v7252:0, v7255:0, v7254:0) -> f_972(1 + v7250:0, v7252:0, v7255:0, v7250:0) :|: v7250:0 > 0 && v7252:0 < v7250:0 && v7250:0 < 19 && v7252:0 >= 1 + v7250:0 && v7255:0 > 2 && v7252:0 > 1
f_130 -> f_972(1, 19, 20, 0) :|: TRUE
f_130 -> f_972(1, 19, 20, 0) :|: FALSE
f_1021(v7416:0, v7413:0) -> f_972(1, v7416:0, v7413:0, 0) :|: v7416:0 > 0 && v7413:0 > 1
f_1021(v7416:0, v7413:0) -> f_972(1, v7416:0, v7413:0, 0) :|: v7416:0 < 0 && v7413:0 > 1
f_130 -> f_158(v1:0, v3:0, v5:0, v7:0, 1, 20, 0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3, 4, 21) :|: v3:0 > 0 && v7:0 > 20 && v5:0 > 0 && v1:0 > 0
f_130 -> f_389(v7:0, 1 + v7:0, v7:0) :|: v7:0 < 21 && v7:0 < 20 && v7:0 > 0
f_130 -> f_389(v7:0, v12:0, v7:0) :|: FALSE
f_130 -> f_149(v1:0, v3:0, v5:0, v7:0, 0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 20, 3, 1, 4) :|: v1:0 > 0 && v3:0 > 0 && v7:0 < 0 && v5:0 > 0
f_389(v811:0, cons_20, v812:0) -> f_972(1, 19, 20, 0) :|: TRUE && cons_20 = 20
f_894(v6278:0, v6282:0) -> f_972(v6278:0, 19, 20, v6282:0) :|: TRUE
f_1060(v7409:0, v7410:0, v7411:0, v7412:0, cons_0, cons_1, v7417:0, v7418:0, v7419:0, cons_3, cons_20, cons_4) -> f_1060(v7409:0, v7410:0, v7411:0, v7412:0, 0, 1, v7417:0, v7418:0, v7419:0, 3, 20, 4) :|: TRUE && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_20 = 20 && cons_4 = 4
f_972(v7250:0, v7252:0, v7255:0, v7254:0) -> f_1013(v7246:0, v7247:0, v7248:0, v7249:0, 1 + v7250:0, 1, v7252:0, 0, v7250:0, v7255:0, v7256:0, v7257:0, v7258:0, 3, 20, 19, 2, 4) :|: v7252:0 < 1 + v7250:0 && v7250:0 > 0 && v7252:0 > v7250:0
f_972(v7250:0, v7252:0, v7255:0, v7254:0) -> f_1013(v7246:0, v7247:0, v7248:0, v7249:0, 1 + v7250:0, 1, v7252:0, 0, v7250:0, v7255:0, v7256:0, v7257:0, v7258:0, 3, 20, 19, 2, 4) :|: v7252:0 < 1 + v7250:0 && v7250:0 > 0 && v7252:0 < v7250:0
f_623(v3387:0) -> f_623(1 + v3387:0) :|: v3387:0 < 20 && v3387:0 > 0
f_623(cons_20) -> f_1021(19, 20) :|: TRUE && cons_20 = 20
f_389(v811:0, v816:0, v812:0) -> f_389(v811:0, 1 + v816:0, v816:0) :|: v816:0 < 20 && v816:0 > 1 && v811:0 < 19 && v812:0 < 19

----------------------------------------

(42)
Obligation:
Rules:
f_623(v3387:0) -> f_681(v3383:0, v3384:0, v3385:0, 0, 1 + v3387:0, 1, 20, v3387:0, v3391:0, v3392:0, v3393:0, 3, 21, 4, 22) :|: v3387:0 > 20
f_972(sum~cons_1~v7254:0, sum~cons_1~v7254:01, v7255:0, v7254:0) -> f_1021(v7254:0, 1 + v7254:0) :|: v7254:0 < 19 && sum~cons_1~v7254:0 = 1 + v7254:0 && sum~cons_1~v7254:01 = 1 + v7254:0
f_130 -> f_623(1) :|: TRUE
f_1021(cons_0, v7413:0) -> f_1060(v7409:0, v7410:0, v7411:0, v7412:0, 0, 1, v7417:0, v7418:0, v7419:0, 3, 20, 4) :|: TRUE && cons_0 = 0
f_972(x, x1, x2, x3) -> f_972(1 + x, x1, x2, x) :|: x > 0 && x1 > x && x < 19 && x1 >= 1 + x && x2 > 2 && x1 > 1
f_972(x4, x5, x6, x7) -> f_972(1 + x4, x5, x6, x4) :|: x4 > 0 && x5 < x4 && x4 < 19 && x5 >= 1 + x4 && x6 > 2 && x5 > 1
f_130 -> f_972(1, 19, 20, 0) :|: TRUE
f_130 -> f_972(1, 19, 20, 0) :|: FALSE
f_1021(x8, x9) -> f_972(1, x8, x9, 0) :|: x8 > 0 && x9 > 1
f_1021(x10, x11) -> f_972(1, x10, x11, 0) :|: x10 < 0 && x11 > 1
f_130 -> f_158(v1:0, v3:0, v5:0, v7:0, 1, 20, 0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3, 4, 21) :|: v3:0 > 0 && v7:0 > 20 && v5:0 > 0 && v1:0 > 0
f_130 -> f_389(x12, 1 + x12, x12) :|: x12 < 21 && x12 < 20 && x12 > 0
f_130 -> f_389(x13, x14, x13) :|: FALSE
f_130 -> f_149(x15, x16, x17, x18, 0, 3 + x15, 3 + x16, 3 + x17, 20, 3, 1, 4) :|: x15 > 0 && x16 > 0 && x18 < 0 && x17 > 0
f_389(v811:0, cons_20, v812:0) -> f_972(1, 19, 20, 0) :|: TRUE && cons_20 = 20
f_894(v6278:0, v6282:0) -> f_972(v6278:0, 19, 20, v6282:0) :|: TRUE
f_1060(x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30) -> f_1060(x19, x20, x21, x22, 0, 1, x25, x26, x27, 3, 20, 4) :|: TRUE && x23 = 0 && x24 = 1 && x28 = 3 && x29 = 20 && x30 = 4
f_972(x31, x32, x33, x34) -> f_1013(x35, x36, x37, x38, 1 + x31, 1, x32, 0, x31, x33, x39, x40, x41, 3, 20, 19, 2, 4) :|: x32 < 1 + x31 && x31 > 0 && x32 > x31
f_972(x42, x43, x44, x45) -> f_1013(x46, x47, x48, x49, 1 + x42, 1, x43, 0, x42, x44, x50, x51, x52, 3, 20, 19, 2, 4) :|: x43 < 1 + x42 && x42 > 0 && x43 < x42
f_623(x53) -> f_623(1 + x53) :|: x53 < 20 && x53 > 0
f_623(x54) -> f_1021(19, 20) :|: TRUE && x54 = 20
f_389(x55, x56, x57) -> f_389(x55, 1 + x56, x56) :|: x56 < 20 && x56 > 1 && x55 < 19 && x57 < 19
Start term: f_130

----------------------------------------

(43) IRSNoOverapproximation (EQUIVALENT)
Proof of non-termination can continue
----------------------------------------

(44)
Obligation:
Rules:
f_623(v3387:0) -> f_681(v3383:0, v3384:0, v3385:0, 0, 1 + v3387:0, 1, 20, v3387:0, v3391:0, v3392:0, v3393:0, 3, 21, 4, 22) :|: v3387:0 > 20
f_972(sum~cons_1~v7254:0, sum~cons_1~v7254:01, v7255:0, v7254:0) -> f_1021(v7254:0, 1 + v7254:0) :|: v7254:0 < 19 && sum~cons_1~v7254:0 = 1 + v7254:0 && sum~cons_1~v7254:01 = 1 + v7254:0
f_130 -> f_623(1) :|: TRUE
f_1021(cons_0, v7413:0) -> f_1060(v7409:0, v7410:0, v7411:0, v7412:0, 0, 1, v7417:0, v7418:0, v7419:0, 3, 20, 4) :|: TRUE && cons_0 = 0
f_972(x, x1, x2, x3) -> f_972(1 + x, x1, x2, x) :|: x > 0 && x1 > x && x < 19 && x1 >= 1 + x && x2 > 2 && x1 > 1
f_972(x4, x5, x6, x7) -> f_972(1 + x4, x5, x6, x4) :|: x4 > 0 && x5 < x4 && x4 < 19 && x5 >= 1 + x4 && x6 > 2 && x5 > 1
f_130 -> f_972(1, 19, 20, 0) :|: TRUE
f_130 -> f_972(1, 19, 20, 0) :|: FALSE
f_1021(x8, x9) -> f_972(1, x8, x9, 0) :|: x8 > 0 && x9 > 1
f_1021(x10, x11) -> f_972(1, x10, x11, 0) :|: x10 < 0 && x11 > 1
f_130 -> f_158(v1:0, v3:0, v5:0, v7:0, 1, 20, 0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3, 4, 21) :|: v3:0 > 0 && v7:0 > 20 && v5:0 > 0 && v1:0 > 0
f_130 -> f_389(x12, 1 + x12, x12) :|: x12 < 21 && x12 < 20 && x12 > 0
f_130 -> f_389(x13, x14, x13) :|: FALSE
f_130 -> f_149(x15, x16, x17, x18, 0, 3 + x15, 3 + x16, 3 + x17, 20, 3, 1, 4) :|: x15 > 0 && x16 > 0 && x18 < 0 && x17 > 0
f_389(v811:0, cons_20, v812:0) -> f_972(1, 19, 20, 0) :|: TRUE && cons_20 = 20
f_894(v6278:0, v6282:0) -> f_972(v6278:0, 19, 20, v6282:0) :|: TRUE
f_1060(x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30) -> f_1060(x19, x20, x21, x22, 0, 1, x25, x26, x27, 3, 20, 4) :|: TRUE && x23 = 0 && x24 = 1 && x28 = 3 && x29 = 20 && x30 = 4
f_972(x31, x32, x33, x34) -> f_1013(x35, x36, x37, x38, 1 + x31, 1, x32, 0, x31, x33, x39, x40, x41, 3, 20, 19, 2, 4) :|: x32 < 1 + x31 && x31 > 0 && x32 > x31
f_972(x42, x43, x44, x45) -> f_1013(x46, x47, x48, x49, 1 + x42, 1, x43, 0, x42, x44, x50, x51, x52, 3, 20, 19, 2, 4) :|: x43 < 1 + x42 && x42 > 0 && x43 < x42
f_623(x53) -> f_623(1 + x53) :|: x53 < 20 && x53 > 0
f_623(x54) -> f_1021(19, 20) :|: TRUE && x54 = 20
f_389(x55, x56, x57) -> f_389(x55, 1 + x56, x56) :|: x56 < 20 && x56 > 1 && x55 < 19 && x57 < 19
Start term: f_130

----------------------------------------

(45) IRSToKoat (EQUIVALENT)
Convert an IRS to a koat problem
----------------------------------------

(46)
Obligation:
(GOAL COMPLEXITY)
(STARTTERM (FUNCTIONSYMBOLS f_130))
(VAR x290 x160 x281 x280 x162 x283 x161 x282 x164 x285 x163 x284 x166 x287 x165 x286 x168 x289 x167 x288 x169 x270 x391 x390 x151 x272 x393 x150 x271 x392 x153 x274 x395 x152 x273 x394 x155 x276 x397 x154 x275 x396 x157 x278 x399 x156 x277 x398 x159 x158 x279 x380 x140 x261 x382 x260 x381 x142 x263 x384 x141 x262 x383 x144 x265 x386 x143 x264 x385 x146 x267 x388 x145 x266 x387 x148 x269 x147 x268 x389 x149 x490 x250 x371 x492 x370 x491 x131 x252 x373 x494 x130 x251 x372 x493 x133 x254 x375 x496 x132 x253 x374 x495 x135 x256 x377 x498 x134 x255 x376 x497 x137 x258 x379 x136 x257 x378 x499 x139 x138 x259 x193 x192 x195 x194 x197 x196 x199 x198 x'' k14 k15 k16 k17 k10 k11 k12 k13 x191 x190 x182 x181 x184 x183 x186 x185 x188 x187 x189 x180 x171 x292 x170 x291 x173 x294 x172 x293 x175 x296 x174 x295 x177 x298 x176 x297 x179 x178 x299 k36 k37 k38 k39 k32 k33 k34 k35 k30 k31 k29 k25 k26 k27 k28 k21 k22 k23 k24 k20 k18 k19 k58 k59 k54 k55 k56 k57 k50 k51 k52 k53 k47 k48 k49 k43 k44 k45 k46 k40 k41 k42 k76 k77 k78 k79 k72 k73 k74 k75 k70 k71 x k69 k65 k66 k67 k68 k61 k62 k63 k64 k60 x28 x29 x24 x25 x26 x27 x20 x21 x22 x23 k83 k84 k85 k86 k80 k81 k82 x17 x18 x19 x13 x14 x15 x16 x10 x11 x12 x46 x47 x48 x49 x42 x43 x44 x45 x40 x41 x39 x35 x36 x37 x38 x31 x32 x33 x34 x30 x70 x68 x69 x64 x65 x66 x67 x60 x61 x62 x63 k7 k8 k5 k6 k9 k0 k3 k4 k1 k2 x57 x58 x59 x53 x54 x55 x56 x50 x51 x52 x407 x528 x90 x406 x527 x91 x409 x92 x408 x529 x86 x520 x87 x88 x401 x522 x89 x400 x521 x82 x403 x524 x83 x402 x523 x84 x405 x526 x85 x404 x525 x517 x516 x80 x519 x81 x518 x79 x75 x76 x77 x511 x78 x510 x71 x513 x72 x512 x73 x515 x74 x514 x506 x505 x508 x507 x509 x500 x502 x501 x504 x503 x97 x98 x99 x93 x94 x95 x96 x209 x208 x329 x560 x320 x441 x562 x440 x561 x201 x322 x443 x564 x200 x321 x442 x563 x203 x324 x445 x566 x202 x323 x444 x565 x205 x326 x447 x568 x204 x325 x446 x567 x207 x328 x449 x206 x327 x448 x569 x319 x318 x439 x430 x551 x550 x311 x432 x553 x310 x431 x552 x313 x434 x555 x312 x433 x554 x315 x436 x557 x314 x435 x556 x317 x438 x559 x316 x437 x558 x308 x429 x307 x428 x549 x309 x540 x300 x421 x542 x420 x541 x302 x423 x544 x301 x422 x543 x304 x425 x546 x303 x424 x545 x306 x427 x548 x305 x426 x547 x418 x539 x417 x538 x419 x410 x531 x530 x412 x533 x411 x532 x414 x535 x413 x534 x416 x537 x415 x536 x360 x481 x480 x120 x241 x362 x483 x240 x361 x482 x122 x243 x364 x485 x121 x242 x363 x484 x124 x245 x366 x487 x123 x244 x365 x486 x126 x247 x368 x489 x125 x246 x367 x488 x128 x249 x127 x248 x369 x129 x470 x591 x590 x230 x351 x472 x593 x350 x471 x592 x111 x232 x353 x474 x110 x231 x352 x473 x113 x234 x355 x476 x112 x233 x354 x475 x115 x236 x357 x478 x114 x235 x356 x477 x117 x238 x359 x116 x237 x358 x479 x119 x118 x239 x109 x4 x5 x2 x580 x3 x8 x340 x461 x582 x9 x460 x581 x6 x100 x221 x342 x463 x584 x7 x220 x341 x462 x583 x102 x223 x344 x465 x586 x101 x222 x343 x464 x585 x104 x225 x346 x467 x588 x103 x224 x345 x466 x587 x106 x227 x348 x469 x1 x105 x226 x347 x468 x589 x108 x229 x107 x228 x349 x219 x' x450 x571 x570 x210 x331 x452 x573 x330 x451 x572 x212 x333 x454 x575 x211 x332 x453 x574 x214 x335 x456 x577 x213 x334 x455 x576 x216 x337 x458 x579 x215 x336 x457 x578 x218 x339 x217 x338 x459)
(RULES
  f_130(x526, x527, x528, x529, x530, x531, x532, x533, x534, x535, x536, x537, x538, x539, x540, x541, x542, x543) -> f_623(1, x544, x545, x546, x547, x548, x549, x550, x551, x552, x553, x554, x555, x556, x557, x558, x559, x560) :|: 0 = 0
  f_972(k61, k60, k53, k7, x359, x360, x361, x362, x363, x364, x365, x366, x367, x368, x369, x370, x371, x372) -> f_1021(k7, 1 + k7, x373, x374, x375, x376, x377, x378, x379, x380, x381, x382, x383, x384, x385, x386, x387, x388) :|: k7 < 19 && k61 = 1 + k7 && k60 = 1 + k7
  f_1060(k67, k54, k56, k57, k58, k45, k48, k50, k52, k37, k40, k32, x46, x47, x48, x49, x50, x51) -> f_1060(k67, k54, k56, k57, 0, 1, k48, k50, k52, 3, 20, 4, x52, x53, x54, x55, x56, x57) :|: 0 = 0 && k58 = 0 && k45 = 1 && k37 = 3 && k40 = 20 && k32 = 4
  f_972(k11, k59, k41, k42, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31) -> f_972(1 + k11, k59, k41, k11, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45) :|: k11 > 0 && k59 > k11 && k11 < 19 && k59 >= 1 + k11 && k41 > 2 && k59 > 1
  f_130(x81, x82, x83, x84, x85, x86, x87, x88, x89, x90, x91, x92, x93, x94, x95, x96, x97, x98) -> f_972(1, 19, 20, 0, x99, x100, x101, x102, x103, x104, x105, x106, x107, x108, x109, x110, x111, x112) :|: 0 = 1
  f_1021(k16, k65, x246, x247, x248, x249, x250, x251, x252, x253, x254, x255, x256, x257, x258, x259, x260, x261) -> f_1060(k15, k31, k85, k18, 0, 1, k70, k22, k73, 3, 20, 4, x262, x263, x264, x265, x266, x267) :|: 0 = 0 && k16 = 0
  f_1021(k76, k78, x268, x269, x270, x271, x272, x273, x274, x275, x276, x277, x278, x279, x280, x281, x282, x283) -> f_972(1, k76, k78, 0, x284, x285, x286, x287, x288, x289, x290, x291, x292, x293, x294, x295, x296, x297) :|: k76 < 0 && k78 > 1
  f_894(k62, k34, x449, x450, x451, x452, x453, x454, x455, x456, x457, x458, x459, x460, x461, x462, x463, x464) -> f_972(k62, 19, 20, k34, x465, x466, x467, x468, x469, x470, x471, x472, x473, x474, x475, x476, x477, x478) :|: 0 = 0
  f_389(k79, k81, k69, x389, x390, x391, x392, x393, x394, x395, x396, x397, x398, x399, x400, x401, x402, x403) -> f_389(k79, 1 + k81, k81, x404, x405, x406, x407, x408, x409, x410, x411, x412, x413, x414, x415, x416, x417, x418) :|: k81 < 20 && k81 > 1 && k79 < 19 && k69 < 19
  f_130(x58, x59, x60, x61, x62, x63, x64, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74, x75) -> f_158(k63, k39, k43, k47, 1, 20, 0, 3 + k63, 3 + k39, 3 + k43, 3, 4, 21, x76, x77, x78, x79, x80) :|: k39 > 0 && k47 > 20 && k43 > 0 && k63 > 0
  f_972(k25, k26, k27, k28, x479, x480, x481, x482, x483, x484, x485, x486, x487, x488, x489, x490, x491, x492) -> f_1013(k20, k21, k23, k24, 1 + k25, 1, k26, 0, k25, k27, k19, k13, k14, 3, 20, 19, 2, 4) :|: k26 < 1 + k25 && k25 > 0 && k26 > k25
  f_623(k17, x, x', x'', x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14) -> f_681(k29, k84, k30, 0, 1 + k17, 1, 20, k17, k5, k55, k12, 3, 21, 4, 22, x15, x16, x17) :|: k17 > 20
  f_130(x160, x161, x162, x163, x164, x165, x166, x167, x168, x169, x170, x171, x172, x173, x174, x175, x176, x177) -> f_149(k72, k74, k64, k66, 0, 3 + k72, 3 + k74, 3 + k64, 20, 3, 1, 4, x178, x179, x180, x181, x182, x183) :|: k72 > 0 && k74 > 0 && k66 < 0 && k64 > 0
  f_130(x327, x328, x329, x330, x331, x332, x333, x334, x335, x336, x337, x338, x339, x340, x341, x342, x343, x344) -> f_972(1, 19, 20, 0, x345, x346, x347, x348, x349, x350, x351, x352, x353, x354, x355, x356, x357, x358) :|: 0 = 0
  f_1021(k44, k46, x419, x420, x421, x422, x423, x424, x425, x426, x427, x428, x429, x430, x431, x432, x433, x434) -> f_972(1, k44, k46, 0, x435, x436, x437, x438, x439, x440, x441, x442, x443, x444, x445, x446, x447, x448) :|: k44 > 0 && k46 > 1
  f_130(x561, x562, x563, x564, x565, x566, x567, x568, x569, x570, x571, x572, x573, x574, x575, x576, x577, x578) -> f_389(k80, 1 + k80, k80, x579, x580, x581, x582, x583, x584, x585, x586, x587, x588, x589, x590, x591, x592, x593) :|: k80 < 21 && k80 < 20 && k80 > 0
  f_972(k6, k8, k9, k10, x113, x114, x115, x116, x117, x118, x119, x120, x121, x122, x123, x124, x125, x126) -> f_1013(k1, k2, k3, k4, 1 + k6, 1, k8, 0, k6, k9, k82, k83, k86, 3, 20, 19, 2, 4) :|: k8 < 1 + k6 && k6 > 0 && k8 < k6
  f_623(k77, x493, x494, x495, x496, x497, x498, x499, x500, x501, x502, x503, x504, x505, x506, x507, x508, x509) -> f_1021(19, 20, x510, x511, x512, x513, x514, x515, x516, x517, x518, x519, x520, x521, x522, x523, x524, x525) :|: 0 = 0 && k77 = 20
  f_623(k75, x212, x213, x214, x215, x216, x217, x218, x219, x220, x221, x222, x223, x224, x225, x226, x227, x228) -> f_623(1 + k75, x229, x230, x231, x232, x233, x234, x235, x236, x237, x238, x239, x240, x241, x242, x243, x244, x245) :|: k75 < 20 && k75 > 0
  f_972(k36, k38, k49, k51, x184, x185, x186, x187, x188, x189, x190, x191, x192, x193, x194, x195, x196, x197) -> f_972(1 + k36, k38, k49, k36, x198, x199, x200, x201, x202, x203, x204, x205, x206, x207, x208, x209, x210, x211) :|: k36 > 0 && k38 < k36 && k36 < 19 && k38 >= 1 + k36 && k49 > 2 && k38 > 1
  f_389(k33, k35, k0, x298, x299, x300, x301, x302, x303, x304, x305, x306, x307, x308, x309, x310, x311, x312) -> f_972(1, 19, 20, 0, x313, x314, x315, x316, x317, x318, x319, x320, x321, x322, x323, x324, x325, x326) :|: 0 = 0 && k35 = 20
  f_130(x127, x128, x129, x130, x131, x132, x133, x134, x135, x136, x137, x138, x139, x140, x141, x142, x143, x144) -> f_389(k68, k71, k68, x145, x146, x147, x148, x149, x150, x151, x152, x153, x154, x155, x156, x157, x158, x159) :|: 0 = 1
)

----------------------------------------

(47) SEGraph to IRS (EQUIVALENT)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 303 rulesP rules:
f_130 -> f_131(v1, v2, 3, 1, 4) :|: 1 <= v1 && v2 = 3 + v1 && 4 <= v2
f_131(v1, v2, 3, 1, 4) -> f_132(v1, v3, v2, v4, 3, 1, 4) :|: 1 <= v3 && v4 = 3 + v3 && 4 <= v4
f_132(v1, v3, v2, v4, 3, 1, 4) -> f_133(v1, v3, v5, v2, v4, v6, 3, 1, 4) :|: 1 <= v5 && v6 = 3 + v5 && 4 <= v6
f_133(v1, v3, v5, v2, v4, v6, 3, 1, 4) -> f_134(v1, v3, v5, v2, v4, v6, 0, 3, 1, 4) :|: TRUE
f_134(v1, v3, v5, v2, v4, v6, 0, 3, 1, 4) -> f_135(v1, v3, v5, v2, v4, v6, 0, 3, 1, 4) :|: TRUE
f_135(v1, v3, v5, v2, v4, v6, 0, 3, 1, 4) -> f_136(v1, v3, v5, v2, v4, v6, 0, 3, 1, 4) :|: TRUE
f_136(v1, v3, v5, v2, v4, v6, 0, 3, 1, 4) -> f_137(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) :|: TRUE
f_137(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) -> f_138(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) :|: TRUE
f_138(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) -> f_139(v1, v3, v5, v7, v2, v4, v6, 0, 20, 3, 1, 4) :|: TRUE
f_139(v1, v3, v5, v7, v2, v4, v6, 0, 20, 3, 1, 4) -> f_140(v1, v3, v5, v7, v2, v4, v6, 0, 20, 3, 1, 4) :|: TRUE
f_140(v1, v3, v5, v7, v2, v4, v6, 0, 20, 3, 1, 4) -> f_141(v1, v3, v5, v7, v2, v4, v6, 0, 20, 3, 1, 4) :|: 0 = 0
f_141(v1, v3, v5, v7, v2, v4, v6, 0, 20, 3, 1, 4) -> f_142(v1, v3, v5, v7, v2, v4, v6, 0, 20, 3, 1, 4) :|: 0 <= v7
f_141(v1, v3, v5, v7, v2, v4, v6, 0, 20, 3, 1, 4) -> f_143(v1, v3, v5, v7, v2, v4, v6, 0, 20, 3, 1, 4) :|: v7 < 0
f_142(v1, v3, v5, v7, v2, v4, v6, 0, 20, 3, 1, 4) -> f_144(v1, v3, v5, v7, 1, v2, v4, v6, 0, 20, 3, 4) :|: 0 = 0
f_143(v1, v3, v5, v7, v2, v4, v6, 0, 20, 3, 1, 4) -> f_145(v1, v3, v5, v7, 0, v2, v4, v6, 20, 3, 1, 4) :|: 0 = 0
f_144(v1, v3, v5, v7, 1, v2, v4, v6, 0, 20, 3, 4) -> f_146(v1, v3, v5, v7, 1, v2, v4, v6, 0, 20, 3, 4) :|: TRUE
f_145(v1, v3, v5, v7, 0, v2, v4, v6, 20, 3, 1, 4) -> f_147(v1, v3, v5, v7, 0, v2, v4, v6, 20, 3, 1, 4) :|: 0 = 0
f_146(v1, v3, v5, v7, 1, v2, v4, v6, 0, 20, 3, 4) -> f_148(v1, v3, v5, v7, 1, v2, v4, v6, 0, 20, 3, 4) :|: 0 = 0
f_147(v1, v3, v5, v7, 0, v2, v4, v6, 20, 3, 1, 4) -> f_149(v1, v3, v5, v7, 0, v2, v4, v6, 20, 3, 1, 4) :|: TRUE
f_148(v1, v3, v5, v7, 1, v2, v4, v6, 0, 20, 3, 4) -> f_150(v1, v3, v5, v7, 1, 20, v2, v4, v6, 0, 3, 4) :|: 0 = 0
f_150(v1, v3, v5, v7, 1, 20, v2, v4, v6, 0, 3, 4) -> f_151(v1, v3, v5, v7, 1, 20, v2, v4, v6, 0, 3, 4) :|: v7 <= 20
f_150(v1, v3, v5, v7, 1, 20, v2, v4, v6, 0, 3, 4) -> f_152(v1, v3, v5, v7, 1, 20, v2, v4, v6, 0, 3, 4, 21) :|: 20 < v7
f_151(v1, v3, v5, v7, 1, 20, v2, v4, v6, 0, 3, 4) -> f_153(v1, v3, v5, v7, 1, 20, v2, v4, v6, 0, 3, 4) :|: 0 = 0
f_152(v1, v3, v5, v7, 1, 20, v2, v4, v6, 0, 3, 4, 21) -> f_154(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4, 21) :|: 0 = 0
f_153(v1, v3, v5, v7, 1, 20, v2, v4, v6, 0, 3, 4) -> f_155(v1, v3, v5, v7, 1, 20, v2, v4, v6, 0, 3, 4) :|: 0 = 0
f_154(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4, 21) -> f_156(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4, 21) :|: 0 = 0
f_155(v1, v3, v5, v7, 1, 20, v2, v4, v6, 0, 3, 4) -> f_157(v1, v3, v5, v7, 1, 20, v2, v4, v6, 0, 3, 4) :|: TRUE
f_156(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4, 21) -> f_158(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4, 21) :|: TRUE
f_157(v1, v3, v5, v7, 1, 20, v2, v4, v6, 0, 3, 4) -> f_159(v1, v3, v5, v7, 1, 20, v2, v4, v6, 0, 3, 4) :|: 0 = 0
f_159(v1, v3, v5, v7, 1, 20, v2, v4, v6, 0, 3, 4) -> f_160(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: 0 = v7
f_159(v1, v3, v5, v7, 1, 20, v2, v4, v6, 0, 3, 4) -> f_161(v1, v3, v5, v7, 1, 20, v2, v4, v6, 0, 3, 4) :|: 0 != v7
f_160(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_162(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: 0 = 0
f_161(v1, v3, v5, v7, 1, 20, v2, v4, v6, 0, 3, 4) -> f_163(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4) :|: 0 = 0
f_162(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_164(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: TRUE
f_163(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4) -> f_165(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4) :|: TRUE
f_164(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_166(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: 0 = 0
f_165(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4) -> f_167(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4) :|: 0 = 0
f_166(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_168(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: 0 = 0
f_167(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4) -> f_169(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4) :|: 0 = 0
f_168(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_170(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: 0 = 0
f_169(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4) -> f_171(v1, v3, v5, 20, 1, 0, v2, v4, v6, 3, 4) :|: v7 = 20
f_169(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4) -> f_172(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4, 19) :|: v7 != 20 && 1 <= v7 && v7 <= 19
f_170(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_173(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: TRUE
f_171(v1, v3, v5, 20, 1, 0, v2, v4, v6, 3, 4) -> f_174(v1, v3, v5, 20, 1, 0, v2, v4, v6, 3, 4) :|: 0 = 0
f_172(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4, 19) -> f_175(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4, 19) :|: 0 = 0
f_173(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_176(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: 0 = 0
f_174(v1, v3, v5, 20, 1, 0, v2, v4, v6, 3, 4) -> f_177(v1, v3, v5, 20, 1, 0, v2, v4, v6, 3, 4) :|: TRUE
f_175(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4, 19) -> f_178(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4, 19) :|: TRUE
f_176(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_179(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: 0 = 0
f_177(v1, v3, v5, 20, 1, 0, v2, v4, v6, 3, 4) -> f_180(v1, v3, v5, 20, 1, 0, v2, v4, v6, 3, 4) :|: TRUE
f_178(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4, 19) -> f_181(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4, 19) :|: 0 = 0
f_179(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_182(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: 0 = 0
f_180(v1, v3, v5, 20, 1, 0, v2, v4, v6, 3, 4) -> f_183(v1, v3, v5, 20, 1, 0, v2, v4, v6, 3, 4) :|: 0 = 0
f_181(v1, v3, v5, v7, 1, 20, 0, v2, v4, v6, 3, 4, 19) -> f_184(v1, v3, v5, v7, 1, 20, 0, v12, v2, v4, v6, 3, 4, 19, 2) :|: v12 = 1 + v7 && 2 <= v12 && v12 <= 20
f_182(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_185(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: TRUE
f_183(v1, v3, v5, 20, 1, 0, v2, v4, v6, 3, 4) -> f_186(v1, v3, v5, 20, 1, 0, 19, v2, v4, v6, 3, 4) :|: 0 = 0
f_184(v1, v3, v5, v7, 1, 20, 0, v12, v2, v4, v6, 3, 4, 19, 2) -> f_187(v1, v3, v5, v7, 1, 20, 0, v12, v2, v4, v6, 3, 4, 19, 2) :|: TRUE
f_185(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_188(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: 0 = 0
f_186(v1, v3, v5, 20, 1, 0, 19, v2, v4, v6, 3, 4) -> f_189(v1, v3, v5, 20, 1, 0, 19, v2, v4, v6, 3, 4) :|: TRUE
f_187(v1, v3, v5, v7, 1, 20, 0, v12, v2, v4, v6, 3, 4, 19, 2) -> f_190(v1, v3, v5, v7, 1, 20, 0, v12, v2, v4, v6, 3, 4, 19, 2) :|: TRUE
f_188(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_191(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: 0 = 0
f_189(v1, v3, v5, 20, 1, 0, 19, v2, v4, v6, 3, 4) -> f_192(v1, v3, v5, 20, 1, 0, 19, v2, v4, v6, 3, 4) :|: TRUE
f_190(v1, v3, v5, v7, 1, 20, 0, v12, v2, v4, v6, 3, 4, 19, 2) -> f_193(v1, v3, v5, v7, 1, 20, 0, v12, v2, v4, v6, 3, 4, 19, 2) :|: TRUE
f_191(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_194(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: TRUE
f_192(v1, v3, v5, 20, 1, 0, 19, v2, v4, v6, 3, 4) -> f_195(v1, v3, v5, 20, 1, 0, 19, v2, v4, v6, 3, 4) :|: TRUE
f_193(v1, v3, v5, v7, 1, 20, 0, v12, v2, v4, v6, 3, 4, 19, 2) -> f_196(v1, v3, v5, v7, 1, 20, 0, v12, v2, v4, v6, 3, 4, 19, 2) :|: TRUE
f_194(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_197(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: TRUE
f_195(v1, v3, v5, 20, 1, 0, 19, v2, v4, v6, 3, 4) -> f_198(v1, v3, v5, 20, 1, 0, 19, v2, v4, v6, 3, 4) :|: TRUE
f_196(v1, v3, v5, v7, 1, 20, 0, v12, v2, v4, v6, 3, 4, 19, 2) -> f_272(v1, v3, v5, v7, v7, 1, 20, 0, v12, v2, v4, v6, 3, 19, 2, 4) :|: TRUE
f_197(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_200(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: TRUE
f_198(v1, v3, v5, 20, 1, 0, 19, v2, v4, v6, 3, 4) -> f_201(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: 0 = 0
f_200(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_203(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: TRUE
f_201(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_204(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: 0 = 0
f_203(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_206(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: 0 = 0
f_204(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_207(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: TRUE
f_206(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_209(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: 0 = 0
f_207(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_210(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: 0 = 0
f_209(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_212(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: TRUE
f_210(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_213(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: 0 = 0
f_212(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_215(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: 0 = 0
f_213(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_216(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: 0 = 0
f_215(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_218(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: 0 = 0
f_216(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_219(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: 0 = 0
f_218(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_221(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: 0 = 0
f_219(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_222(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: TRUE
f_221(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_224(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: 0 = 0
f_222(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_225(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: 0 = 0
f_224(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_227(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: TRUE
f_225(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_228(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: 0 = 0
f_227(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_230(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: 0 = 0
f_228(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_231(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: TRUE
f_230(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_233(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: 0 = 0
f_231(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_234(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: 0 = 0
f_233(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_236(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) :|: TRUE
f_234(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_237(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: 0 = 0
f_236(v1, v3, v5, 0, 1, 20, v2, v4, v6, 3, 4) -> f_310(v1, v3, v5, 0, 1, 1, 20, 0, v2, v4, v6, 3, 2, 4) :|: TRUE
f_237(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_241(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: 0 = 0
f_241(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_245(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: TRUE
f_245(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_249(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: 0 = 0
f_249(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_253(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: 0 = 0
f_253(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_257(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: 0 = 0
f_257(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_261(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: TRUE
f_261(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_265(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: 0 = 0
f_265(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_269(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: 0 = 0
f_269(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_274(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: TRUE
f_272(v230, v231, v232, v233, v234, 1, 20, 0, v238, v239, v240, v241, 3, 19, 2, 4) -> f_349(v230, v231, v232, v233, v234, 1, 20, 0, v238, v239, v240, v241, 3, 19, 2, 4) :|: TRUE
f_274(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_277(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) :|: TRUE
f_277(v1, v3, v5, 20, 0, 1, 19, v2, v4, v6, 3, 4) -> f_512(v1, v3, v5, 20, 0, 1, 19, 20, v2, v4, v6, 3, 4) :|: TRUE
f_310(v608, v609, v610, 0, v612, 1, 20, v615, v616, v617, v618, 3, 2, 4) -> f_384(v608, v609, v610, 0, v612, 1, 20, v615, v616, v617, v618, 3, 2, 4) :|: TRUE
f_349(v808, v809, v810, v811, v812, 1, 20, 0, v816, v817, v818, v819, 3, 19, 2, 4) -> f_352(v808, v809, v810, v811, v816, 1, v812, 20, 0, v817, v818, v819, 3, 19, 2, 4) :|: 0 = 0
f_352(v808, v809, v810, v811, v816, 1, v812, 20, 0, v817, v818, v819, 3, 19, 2, 4) -> f_355(v808, v809, v810, v811, v816, 1, v812, 20, 0, v817, v818, v819, 3, 19, 2, 4) :|: 0 = 0
f_355(v808, v809, v810, v811, v816, 1, v812, 20, 0, v817, v818, v819, 3, 19, 2, 4) -> f_358(v808, v809, v810, v811, v816, 1, v812, 20, 0, v817, v818, v819, 3, 19, 2, 4) :|: TRUE
f_358(v808, v809, v810, v811, v816, 1, v812, 20, 0, v817, v818, v819, 3, 19, 2, 4) -> f_361(v808, v809, v810, v811, v816, 1, 20, v812, 0, v817, v818, v819, 3, 19, 2, 4) :|: 0 = 0
f_361(v808, v809, v810, v811, v816, 1, 20, v812, 0, v817, v818, v819, 3, 19, 2, 4) -> f_364(v808, v809, v810, v811, v816, 1, 20, v812, 0, v817, v818, v819, 3, 19, 2, 4) :|: 0 = 0
f_364(v808, v809, v810, v811, v816, 1, 20, v812, 0, v817, v818, v819, 3, 19, 2, 4) -> f_367(v808, v809, v810, v811, v816, 1, 20, v812, 0, v817, v818, v819, 3, 19, 2, 4) :|: 0 = 0
f_367(v808, v809, v810, v811, v816, 1, 20, v812, 0, v817, v818, v819, 3, 19, 2, 4) -> f_370(v808, v809, v810, v811, v816, 1, 20, v812, 0, v817, v818, v819, 3, 19, 2, 4) :|: 0 = 0
f_370(v808, v809, v810, v811, v816, 1, 20, v812, 0, v817, v818, v819, 3, 19, 2, 4) -> f_373(v808, v809, v810, v811, v816, 1, 20, v812, 0, v817, v818, v819, 3, 19, 2, 4) :|: TRUE
f_373(v808, v809, v810, v811, v816, 1, 20, v812, 0, v817, v818, v819, 3, 19, 2, 4) -> f_376(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 19, 2, 4) :|: 0 = 0
f_376(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 19, 2, 4) -> f_379(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 19, 2, 4) :|: 0 = 0
f_379(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 19, 2, 4) -> f_382(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 19, 2, 4) :|: TRUE
f_382(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 19, 2, 4) -> f_386(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 19, 2, 4) :|: 0 = 0
f_384(v1195, v1196, v1197, 0, v1199, 1, 20, v1202, v1203, v1204, v1205, 3, 2, 4) -> f_458(v1195, v1196, v1197, 0, v1199, 1, 20, v1202, v1203, v1204, v1205, 3, 4) :|: TRUE
f_386(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 19, 2, 4) -> f_389(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 19, 2, 4) :|: 0 = 0
f_389(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 19, 2, 4) -> f_393(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) :|: v816 = 20
f_389(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 19, 2, 4) -> f_394(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 18, 2, 19, 4) :|: v816 != 20 && 2 <= v816 && v816 <= 19 && v812 <= 18 && v811 <= 18
f_393(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) -> f_397(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) :|: 0 = 0
f_394(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 18, 2, 19, 4) -> f_398(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 18, 2, 19, 4) :|: 0 = 0
f_397(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) -> f_401(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) :|: TRUE
f_398(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 18, 2, 19, 4) -> f_402(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 18, 2, 19, 4) :|: TRUE
f_401(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) -> f_405(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) :|: TRUE
f_402(v808, v809, v810, v811, v816, 1, 20, 0, v812, v817, v818, v819, 3, 18, 2, 19, 4) -> f_406(v808, v809, v810, v811, v816, 1, 20, 0, v817, v818, v819, 3, 18, 2, 19, 4) :|: 0 = 0
f_405(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) -> f_409(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) :|: 0 = 0
f_406(v808, v809, v810, v811, v816, 1, 20, 0, v817, v818, v819, 3, 18, 2, 19, 4) -> f_410(v808, v809, v810, v811, v816, 1, 20, 0, v1294, v817, v818, v819, 3, 18, 2, 19, 4) :|: v1294 = 1 + v816 && 3 <= v1294 && v1294 <= 20
f_409(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) -> f_413(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) :|: 0 = 0
f_410(v808, v809, v810, v811, v816, 1, 20, 0, v1294, v817, v818, v819, 3, 18, 2, 19, 4) -> f_414(v808, v809, v810, v811, v816, 1, 20, 0, v1294, v817, v818, v819, 3, 18, 2, 19, 4) :|: TRUE
f_413(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) -> f_417(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) :|: TRUE
f_414(v808, v809, v810, v811, v816, 1, 20, 0, v1294, v817, v818, v819, 3, 18, 2, 19, 4) -> f_418(v808, v809, v810, v811, v816, 1, 20, 0, v1294, v817, v818, v819, 3, 18, 2, 19, 4) :|: TRUE
f_417(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) -> f_421(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) :|: TRUE
f_418(v808, v809, v810, v811, v816, 1, 20, 0, v1294, v817, v818, v819, 3, 18, 2, 19, 4) -> f_422(v808, v809, v810, v811, v816, 1, 20, 0, v1294, v817, v818, v819, 3, 18, 2, 19, 4) :|: TRUE
f_421(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) -> f_425(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) :|: TRUE
f_422(v808, v809, v810, v811, v816, 1, 20, 0, v1294, v817, v818, v819, 3, 18, 2, 19, 4) -> f_426(v808, v809, v810, v811, v816, 1, 20, 0, v1294, v817, v818, v819, 3, 18, 2, 19, 4) :|: TRUE
f_425(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) -> f_429(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) :|: TRUE
f_426(v808, v809, v810, v811, v816, 1, 20, 0, v1294, v817, v818, v819, 3, 18, 2, 19, 4) -> f_349(v808, v809, v810, v811, v816, 1, 20, 0, v1294, v817, v818, v819, 3, 19, 2, 4) :|: TRUE
f_429(v808, v809, v810, v811, 20, 1, 0, 19, v817, v818, v819, 3, 4) -> f_432(v808, v809, v810, v811, 0, 1, 20, 19, v817, v818, v819, 3, 4) :|: 0 = 0
f_432(v808, v809, v810, v811, 0, 1, 20, 19, v817, v818, v819, 3, 4) -> f_435(v808, v809, v810, v811, 0, 1, 20, 19, v817, v818, v819, 3, 4) :|: 0 = 0
f_435(v808, v809, v810, v811, 0, 1, 20, 19, v817, v818, v819, 3, 4) -> f_438(v808, v809, v810, v811, 0, 1, 20, 19, v817, v818, v819, 3, 4) :|: TRUE
f_438(v808, v809, v810, v811, 0, 1, 20, 19, v817, v818, v819, 3, 4) -> f_441(v808, v809, v810, v811, 0, 1, 20, 19, v817, v818, v819, 3, 4) :|: 0 = 0
f_441(v808, v809, v810, v811, 0, 1, 20, 19, v817, v818, v819, 3, 4) -> f_444(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) :|: 0 = 0
f_444(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) -> f_447(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) :|: 0 = 0
f_447(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) -> f_450(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) :|: 0 = 0
f_450(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) -> f_453(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) :|: TRUE
f_453(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) -> f_456(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) :|: 0 = 0
f_456(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) -> f_460(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) :|: 0 = 0
f_458(v1801, v1802, v1803, 0, v1805, 1, 20, v1808, v1809, v1810, v1811, 3, 4) -> f_546(v1801, v1802, v1803, 0, v1805, 1, 20, v1808, v1809, v1810, v1811, 3, 4) :|: TRUE
f_460(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) -> f_463(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) :|: TRUE
f_463(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) -> f_467(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) :|: 0 = 0
f_467(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) -> f_471(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) :|: 0 = 0
f_471(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) -> f_475(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) :|: 0 = 0
f_475(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) -> f_479(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) :|: TRUE
f_479(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) -> f_700(v808, v809, v810, v811, 0, 1, 19, 20, v817, v818, v819, 3, 4) :|: TRUE
f_512(v2155, v2156, v2157, v2158, 0, 1, 19, 20, v2163, v2164, v2165, 3, 4) -> f_717(v2155, v2156, v2157, v2158, 0, 1, 19, 20, v2163, v2164, v2165, 3, 4) :|: TRUE
f_546(v2557, v2558, v2559, 0, v2561, 1, 20, v2564, v2565, v2566, v2567, 3, 4) -> f_618(v2557, v2558, v2559, 0, v2561, 1, 20, v2564, v2565, v2566, v2567, 3, 4) :|: TRUE
f_618(v3383, v3384, v3385, 0, v3387, 1, 20, v3390, v3391, v3392, v3393, 3, 4) -> f_620(v3383, v3384, v3385, 0, v3387, 1, 20, v3390, v3391, v3392, v3393, 3, 4) :|: 0 = 0
f_620(v3383, v3384, v3385, 0, v3387, 1, 20, v3390, v3391, v3392, v3393, 3, 4) -> f_623(v3383, v3384, v3385, 0, v3387, 1, 20, v3390, v3391, v3392, v3393, 3, 4) :|: 0 = 0
f_623(v3383, v3384, v3385, 0, v3387, 1, 20, v3390, v3391, v3392, v3393, 3, 4) -> f_625(v3383, v3384, v3385, 0, 20, 1, 19, v3391, v3392, v3393, 3, 4) :|: v3387 = 20
f_623(v3383, v3384, v3385, 0, v3387, 1, 20, v3390, v3391, v3392, v3393, 3, 4) -> f_626(v3383, v3384, v3385, 0, v3387, 1, 20, v3390, v3391, v3392, v3393, 3, 4) :|: v3387 != 20
f_625(v3383, v3384, v3385, 0, 20, 1, 19, v3391, v3392, v3393, 3, 4) -> f_628(v3383, v3384, v3385, 0, 20, 1, 19, v3391, v3392, v3393, 3, 4) :|: 0 = 0
f_626(v3383, v3384, v3385, 0, v3387, 1, 20, v3390, v3391, v3392, v3393, 3, 4) -> f_629(v3383, v3384, v3385, 0, v3387, 1, 20, v3390, v3391, v3392, v3393, 3, 4) :|: 0 = 0
f_628(v3383, v3384, v3385, 0, 20, 1, 19, v3391, v3392, v3393, 3, 4) -> f_631(v3383, v3384, v3385, 0, 20, 1, 19, v3391, v3392, v3393, 3, 4) :|: TRUE
f_629(v3383, v3384, v3385, 0, v3387, 1, 20, v3390, v3391, v3392, v3393, 3, 4) -> f_632(v3383, v3384, v3385, 0, v3387, 1, 20, v3390, v3391, v3392, v3393, 3, 4) :|: TRUE
f_631(v3383, v3384, v3385, 0, 20, 1, 19, v3391, v3392, v3393, 3, 4) -> f_634(v3383, v3384, v3385, 0, 20, 1, 19, v3391, v3392, v3393, 3, 4) :|: TRUE
f_632(v3383, v3384, v3385, 0, v3387, 1, 20, v3390, v3391, v3392, v3393, 3, 4) -> f_635(v3383, v3384, v3385, 0, v3387, 1, 20, v3391, v3392, v3393, 3, 4) :|: 0 = 0
f_634(v3383, v3384, v3385, 0, 20, 1, 19, v3391, v3392, v3393, 3, 4) -> f_637(v3383, v3384, v3385, 0, 20, 1, 19, v3391, v3392, v3393, 3, 4) :|: 0 = 0
f_635(v3383, v3384, v3385, 0, v3387, 1, 20, v3391, v3392, v3393, 3, 4) -> f_638(v3383, v3384, v3385, 0, v3387, 1, 20, v3486, v3391, v3392, v3393, 3, 4, 2) :|: v3486 = 1 + v3387 && 2 <= v3486
f_637(v3383, v3384, v3385, 0, 20, 1, 19, v3391, v3392, v3393, 3, 4) -> f_640(v3383, v3384, v3385, 0, 20, 1, 19, v3391, v3392, v3393, 3, 4) :|: 0 = 0
f_638(v3383, v3384, v3385, 0, v3387, 1, 20, v3486, v3391, v3392, v3393, 3, 4, 2) -> f_641(v3383, v3384, v3385, 0, v3387, 1, 20, v3486, v3391, v3392, v3393, 3, 4, 2) :|: TRUE
f_640(v3383, v3384, v3385, 0, 20, 1, 19, v3391, v3392, v3393, 3, 4) -> f_643(v3383, v3384, v3385, 0, 20, 1, 19, v3391, v3392, v3393, 3, 4) :|: TRUE
f_641(v3383, v3384, v3385, 0, v3387, 1, 20, v3486, v3391, v3392, v3393, 3, 4, 2) -> f_644(v3383, v3384, v3385, 0, v3387, 1, 20, v3486, v3391, v3392, v3393, 3, 4, 2) :|: TRUE
f_643(v3383, v3384, v3385, 0, 20, 1, 19, v3391, v3392, v3393, 3, 4) -> f_646(v3383, v3384, v3385, 0, 20, 1, 19, v3391, v3392, v3393, 3, 4) :|: TRUE
f_644(v3383, v3384, v3385, 0, v3387, 1, 20, v3486, v3391, v3392, v3393, 3, 4, 2) -> f_647(v3383, v3384, v3385, 0, v3387, 1, 20, v3486, v3391, v3392, v3393, 3, 4, 2) :|: TRUE
f_646(v3383, v3384, v3385, 0, 20, 1, 19, v3391, v3392, v3393, 3, 4) -> f_988(v3383, v3384, v3385, 0, 20, 1, 0, 19, v3391, v3392, v3393, 3, 20, 19, 4) :|: TRUE
f_647(v3383, v3384, v3385, 0, v3387, 1, 20, v3486, v3391, v3392, v3393, 3, 4, 2) -> f_650(v3383, v3384, v3385, 0, v3387, 1, 20, v3486, v3391, v3392, v3393, 3, 4, 2) :|: TRUE
f_650(v3383, v3384, v3385, 0, v3387, 1, 20, v3486, v3391, v3392, v3393, 3, 4, 2) -> f_653(v3383, v3384, v3385, 0, v3486, 1, v3387, 20, v3391, v3392, v3393, 3, 4, 2) :|: 0 = 0
f_653(v3383, v3384, v3385, 0, v3486, 1, v3387, 20, v3391, v3392, v3393, 3, 4, 2) -> f_656(v3383, v3384, v3385, 0, v3486, 1, v3387, 20, v3391, v3392, v3393, 3, 4, 2) :|: 0 = 0
f_656(v3383, v3384, v3385, 0, v3486, 1, v3387, 20, v3391, v3392, v3393, 3, 4, 2) -> f_659(v3383, v3384, v3385, 0, v3486, 1, v3387, 20, v3391, v3392, v3393, 3, 4, 2) :|: TRUE
f_659(v3383, v3384, v3385, 0, v3486, 1, v3387, 20, v3391, v3392, v3393, 3, 4, 2) -> f_662(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 4, 2) :|: 0 = 0
f_662(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 4, 2) -> f_665(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 4, 2) :|: 0 = 0
f_665(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 4, 2) -> f_668(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) :|: v3486 <= 20 && v3387 <= 19
f_665(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 4, 2) -> f_669(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 21, 4, 22) :|: 20 < v3486 && 21 <= v3387 && 22 <= v3486
f_668(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) -> f_672(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) :|: 0 = 0
f_669(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 21, 4, 22) -> f_673(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 21, 4, 22) :|: 0 = 0
f_672(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) -> f_676(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) :|: 0 = 0
f_673(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 21, 4, 22) -> f_677(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 21, 4, 22) :|: 0 = 0
f_676(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) -> f_680(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) :|: TRUE
f_677(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 21, 4, 22) -> f_681(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 21, 4, 22) :|: TRUE
f_680(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) -> f_684(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) :|: 0 = 0
f_684(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) -> f_687(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) :|: 0 = 0
f_687(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) -> f_691(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) :|: TRUE
f_691(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 19, 4, 2) -> f_618(v3383, v3384, v3385, 0, v3486, 1, 20, v3387, v3391, v3392, v3393, 3, 4) :|: TRUE
f_700(v4046, v4047, v4048, v4049, 0, 1, 19, 20, v4054, v4055, v4056, 3, 4) -> f_947(v4046, v4047, v4048, v4049, 0, 1, 19, 20, v4054, v4055, v4056, 3, 20, 18, 19, 4) :|: TRUE
f_717(v4198, v4199, v4200, v4201, 0, 1, 19, 20, v4206, v4207, v4208, 3, 4) -> f_956(v4198, v4199, v4200, v4201, 0, 1, 19, 20, v4206, v4207, v4208, 3, 20, 18, 19, 4) :|: TRUE
f_894(v6274, v6275, v6276, v6277, v6278, 1, 19, 0, v6282, 20, v6284, v6285, v6286, 3, 4) -> f_970(v6274, v6275, v6276, v6277, v6278, 1, 19, 0, v6282, 20, v6284, v6285, v6286, 3, 20, 19, 2, 4) :|: TRUE
f_947(v6768, v6769, v6770, v6771, 0, 1, v6774, v6775, v6776, v6777, v6778, 3, 20, 18, 19, 4) -> f_1028(v6768, v6769, v6770, v6771, 0, 1, v6774, v6775, v6776, v6777, v6778, 3, 20, 19, 2, 4) :|: TRUE
f_956(v6864, v6865, v6866, v6867, 0, 1, v6870, v6871, v6872, v6873, v6874, 3, 20, 18, 19, 4) -> f_1045(v6864, v6865, v6866, v6867, 0, 1, v6870, v6871, v6872, v6873, v6874, 3, 20, 19, 2, 4) :|: TRUE
f_970(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7254, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_971(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: 0 = 0
f_971(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_972(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: 0 = 0
f_972(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_973(v7246, v7247, v7248, v7249, v7252, 1, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 2, 4) :|: v7250 = v7252 && v7254 <= 18
f_972(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_974(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: v7250 != v7252
f_973(v7246, v7247, v7248, v7249, v7252, 1, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 2, 4) -> f_975(v7246, v7247, v7248, v7249, v7252, 1, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 2, 4) :|: 0 = 0
f_974(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_976(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: 0 = 0
f_975(v7246, v7247, v7248, v7249, v7252, 1, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 2, 4) -> f_977(v7246, v7247, v7248, v7249, v7252, 1, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 2, 4) :|: TRUE
f_976(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_978(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: TRUE
f_977(v7246, v7247, v7248, v7249, v7252, 1, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 2, 4) -> f_979(v7246, v7247, v7248, v7249, v7252, 1, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 2, 4) :|: TRUE
f_978(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_980(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: 0 = 0
f_979(v7246, v7247, v7248, v7249, v7252, 1, 0, v7255, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 2, 4) -> f_981(v7246, v7247, v7248, v7249, v7252, 1, 0, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 4) :|: 0 = 0
f_980(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_982(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7311, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: v7311 = 1 + v7250 && 2 <= v7311
f_981(v7246, v7247, v7248, v7249, v7252, 1, 0, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 4) -> f_983(v7246, v7247, v7248, v7249, v7252, 1, 0, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 4) :|: 1 + v7254 = v7252
f_982(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7311, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_984(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7311, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: TRUE
f_983(v7246, v7247, v7248, v7249, v7252, 1, 0, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 4) -> f_985(v7246, v7247, v7248, v7249, v7252, 1, 0, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 4) :|: TRUE
f_984(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7311, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_986(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7311, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: TRUE
f_985(v7246, v7247, v7248, v7249, v7252, 1, 0, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 4) -> f_987(v7246, v7247, v7248, v7249, v7252, 1, 0, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 4) :|: TRUE
f_986(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7311, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_989(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7311, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: TRUE
f_987(v7246, v7247, v7248, v7249, v7252, 1, 0, v7254, v7256, v7257, v7258, 3, 20, 19, 18, 4) -> f_988(v7246, v7247, v7248, v7249, v7252, 1, 0, v7254, v7256, v7257, v7258, 3, 20, 19, 4) :|: TRUE
f_988(v7409, v7410, v7411, v7412, v7413, 1, 0, v7416, v7417, v7418, v7419, 3, 20, 19, 4) -> f_990(v7409, v7410, v7411, v7412, v7413, 1, 0, v7416, v7417, v7418, v7419, 3, 20, 19, 4) :|: TRUE
f_989(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7311, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_991(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7311, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: TRUE
f_990(v7409, v7410, v7411, v7412, v7413, 1, 0, v7416, v7417, v7418, v7419, 3, 20, 19, 4) -> f_992(v7409, v7410, v7411, v7412, v7413, 1, 0, v7416, v7417, v7418, v7419, 3, 20, 19, 4) :|: TRUE
f_991(v7246, v7247, v7248, v7249, v7250, 1, v7252, 0, v7255, v7311, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_993(v7246, v7247, v7248, v7249, v7311, 1, v7250, v7252, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: 0 = 0
f_992(v7409, v7410, v7411, v7412, v7413, 1, 0, v7416, v7417, v7418, v7419, 3, 20, 19, 4) -> f_994(v7409, v7410, v7411, v7412, 0, 1, v7413, v7416, v7417, v7418, v7419, 3, 20, 19, 4) :|: 0 = 0
f_993(v7246, v7247, v7248, v7249, v7311, 1, v7250, v7252, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_995(v7246, v7247, v7248, v7249, v7311, 1, v7250, v7252, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: 0 = 0
f_994(v7409, v7410, v7411, v7412, 0, 1, v7413, v7416, v7417, v7418, v7419, 3, 20, 19, 4) -> f_996(v7409, v7410, v7411, v7412, 0, 1, v7413, v7416, v7417, v7418, v7419, 3, 20, 19, 4) :|: 0 = 0
f_995(v7246, v7247, v7248, v7249, v7311, 1, v7250, v7252, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_997(v7246, v7247, v7248, v7249, v7311, 1, v7250, v7252, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: TRUE
f_996(v7409, v7410, v7411, v7412, 0, 1, v7413, v7416, v7417, v7418, v7419, 3, 20, 19, 4) -> f_998(v7409, v7410, v7411, v7412, 0, 1, v7413, v7416, v7417, v7418, v7419, 3, 20, 19, 4) :|: TRUE
f_997(v7246, v7247, v7248, v7249, v7311, 1, v7250, v7252, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_999(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: 0 = 0
f_998(v7409, v7410, v7411, v7412, 0, 1, v7413, v7416, v7417, v7418, v7419, 3, 20, 19, 4) -> f_1000(v7409, v7410, v7411, v7412, 0, 1, v7413, v7416, v7417, v7418, v7419, 3, 20, 19, 4) :|: 0 = 0
f_999(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_1001(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: 0 = 0
f_1000(v7409, v7410, v7411, v7412, 0, 1, v7413, v7416, v7417, v7418, v7419, 3, 20, 19, 4) -> f_1002(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) :|: 0 = 0
f_1001(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_1003(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) :|: v7311 <= v7252 && v7311 <= 19 && 2 <= v7252 && 3 <= v7255 && v7250 <= 18
f_1001(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_1004(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: v7252 < v7311
f_1002(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) -> f_1005(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) :|: 0 = 0
f_1003(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) -> f_1006(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) :|: 0 = 0
f_1004(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_1007(v7246, v7247, v7248, v7249, v7311, 1, v7252, 0, v7250, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: 0 = 0
f_1005(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) -> f_1008(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) :|: 0 = 0
f_1006(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) -> f_1009(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) :|: 0 = 0
f_1007(v7246, v7247, v7248, v7249, v7311, 1, v7252, 0, v7250, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_1010(v7246, v7247, v7248, v7249, v7311, 1, v7252, 0, v7250, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: 0 = 0
f_1008(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) -> f_1011(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) :|: TRUE
f_1009(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) -> f_1012(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) :|: TRUE
f_1010(v7246, v7247, v7248, v7249, v7311, 1, v7252, 0, v7250, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) -> f_1013(v7246, v7247, v7248, v7249, v7311, 1, v7252, 0, v7250, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: TRUE
f_1011(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) -> f_1014(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) :|: 0 = 0
f_1012(v7246, v7247, v7248, v7249, v7311, 1, v7252, v7250, 0, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) -> f_1015(v7246, v7247, v7248, v7249, v7311, 1, v7252, 0, v7250, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) :|: 0 = 0
f_1014(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) -> f_1016(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) :|: 0 = 0
f_1015(v7246, v7247, v7248, v7249, v7311, 1, v7252, 0, v7250, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) -> f_1017(v7246, v7247, v7248, v7249, v7311, 1, v7252, 0, v7250, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) :|: 0 = 0
f_1016(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) -> f_1018(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) :|: TRUE
f_1017(v7246, v7247, v7248, v7249, v7311, 1, v7252, 0, v7250, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) -> f_1019(v7246, v7247, v7248, v7249, v7311, 1, v7252, 0, v7250, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) :|: TRUE
f_1018(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) -> f_1020(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) :|: 0 = 0
f_1019(v7246, v7247, v7248, v7249, v7311, 1, v7252, 0, v7250, v7255, v7256, v7257, v7258, 3, 20, 18, 2, 19, 4) -> f_970(v7246, v7247, v7248, v7249, v7311, 1, v7252, 0, v7250, v7255, v7256, v7257, v7258, 3, 20, 19, 2, 4) :|: TRUE
f_1020(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) -> f_1021(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) :|: 0 = 0
f_1021(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) -> f_1022(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = v7416
f_1021(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 4) -> f_1023(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 2, 19, 4) :|: 0 != v7416 && 2 <= v7413
f_1022(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1024(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1023(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 2, 19, 4) -> f_1025(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 2, 19, 4) :|: 0 = 0
f_1024(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1026(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: TRUE
f_1025(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 2, 19, 4) -> f_1027(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 2, 19, 4) :|: TRUE
f_1026(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1029(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: TRUE
f_1027(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 2, 19, 4) -> f_1028(v7409, v7410, v7411, v7412, 0, 1, v7416, v7413, v7417, v7418, v7419, 3, 20, 19, 2, 4) :|: TRUE
f_1028(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) -> f_1030(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) :|: 0 = 0
f_1029(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1031(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1030(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) -> f_1032(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) :|: 0 = 0
f_1031(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1033(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1032(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) -> f_1034(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) :|: 0 = 0
f_1033(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1035(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: TRUE
f_1034(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) -> f_1036(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) :|: TRUE
f_1035(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1037(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1036(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) -> f_1038(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) :|: 0 = 0
f_1037(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1039(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1038(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) -> f_1040(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) :|: 0 = 0
f_1039(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1041(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1040(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) -> f_1042(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) :|: TRUE
f_1041(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1043(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1042(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) -> f_1044(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) :|: TRUE
f_1043(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1046(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: TRUE
f_1044(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) -> f_1045(v8252, v8253, v8254, v8255, 0, 1, v8258, v8259, v8260, v8261, v8262, 3, 20, 19, 2, 4) :|: TRUE
f_1045(v8553, v8554, v8555, v8556, 0, 1, v8559, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1047(v8553, v8554, v8555, v8556, 0, 1, v8559, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: TRUE
f_1046(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1048(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1047(v8553, v8554, v8555, v8556, 0, 1, v8559, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1049(v8553, v8554, v8555, v8556, 0, 1, v8559, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: TRUE
f_1048(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1050(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1049(v8553, v8554, v8555, v8556, 0, 1, v8559, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1051(v8553, v8554, v8555, v8556, 1, 0, v8559, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: 0 = 0
f_1050(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1052(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: TRUE
f_1051(v8553, v8554, v8555, v8556, 1, 0, v8559, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1053(v8553, v8554, v8555, v8556, 1, 0, v8559, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: 0 = 0
f_1052(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1054(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1053(v8553, v8554, v8555, v8556, 1, 0, v8559, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1055(v8553, v8554, v8555, v8556, 1, 0, v8559, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: TRUE
f_1054(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1056(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1055(v8553, v8554, v8555, v8556, 1, 0, v8559, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1057(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: 0 = 0
f_1056(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1058(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: 0 = 0
f_1057(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1059(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: 0 = 0
f_1058(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1060(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: TRUE
f_1059(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1061(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: 0 = 0
f_1060(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) -> f_1026(v7409, v7410, v7411, v7412, 0, 1, v7417, v7418, v7419, 3, 20, 4) :|: TRUE
f_1061(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1062(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: 0 = 0
f_1062(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1063(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: TRUE
f_1063(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1064(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: 0 = 0
f_1064(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1065(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: 0 = 0
f_1065(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_1066(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: TRUE
f_1066(v8553, v8554, v8555, v8556, 1, v8559, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) -> f_970(v8553, v8554, v8555, v8556, 1, 1, v8559, 0, 0, v8560, v8561, v8562, v8563, 3, 20, 19, 2, 4) :|: TRUE
Combined rules. Obtained 22 rulesP rules:
f_623(v3383:0, v3384:0, v3385:0, 0, v3387:0, 1, 20, v3390:0, v3391:0, v3392:0, v3393:0, 3, 4) -> f_681(v3383:0, v3384:0, v3385:0, 0, 1 + v3387:0, 1, 20, v3387:0, v3391:0, v3392:0, v3393:0, 3, 21, 4, 22) :|: v3387:0 > 20
f_972(v7246:0, v7247:0, v7248:0, v7249:0, 1 + v7254:0, 1, 1 + v7254:0, 0, v7255:0, v7254:0, v7256:0, v7257:0, v7258:0, 3, 20, 19, 2, 4) -> f_1021(v7246:0, v7247:0, v7248:0, v7249:0, 0, 1, v7254:0, 1 + v7254:0, v7256:0, v7257:0, v7258:0, 3, 20, 19, 4) :|: v7254:0 < 19
f_130 -> f_623(v1:0, v3:0, v5:0, 0, 1, 1, 20, 0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3, 4) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0
f_1021(v7409:0, v7410:0, v7411:0, v7412:0, 0, 1, 0, v7413:0, v7417:0, v7418:0, v7419:0, 3, 20, 19, 4) -> f_1060(v7409:0, v7410:0, v7411:0, v7412:0, 0, 1, v7417:0, v7418:0, v7419:0, 3, 20, 4) :|: TRUE
f_972(v7246:0, v7247:0, v7248:0, v7249:0, v7250:0, 1, v7252:0, 0, v7255:0, v7254:0, v7256:0, v7257:0, v7258:0, 3, 20, 19, 2, 4) -> f_972(v7246:0, v7247:0, v7248:0, v7249:0, 1 + v7250:0, 1, v7252:0, 0, v7255:0, v7250:0, v7256:0, v7257:0, v7258:0, 3, 20, 19, 2, 4) :|: v7252:0 > v7250:0 && v7250:0 > 0 && v7250:0 < 19 && v7252:0 >= 1 + v7250:0 && v7252:0 > 1 && v7255:0 > 2
f_972(v7246:0, v7247:0, v7248:0, v7249:0, v7250:0, 1, v7252:0, 0, v7255:0, v7254:0, v7256:0, v7257:0, v7258:0, 3, 20, 19, 2, 4) -> f_972(v7246:0, v7247:0, v7248:0, v7249:0, 1 + v7250:0, 1, v7252:0, 0, v7255:0, v7250:0, v7256:0, v7257:0, v7258:0, 3, 20, 19, 2, 4) :|: v7252:0 < v7250:0 && v7250:0 > 0 && v7250:0 < 19 && v7252:0 >= 1 + v7250:0 && v7252:0 > 1 && v7255:0 > 2
f_130 -> f_972(v1:0, v3:0, v5:0, 20, 1, 1, 19, 0, 20, 0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3, 20, 19, 2, 4) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0
f_130 -> f_972(v1:0, v3:0, v5:0, 20, 1, 1, 19, 0, 20, 0, v2:0, v4:0, v6:0, 3, 20, 19, 2, 4) :|: FALSE
f_1021(v7409:0, v7410:0, v7411:0, v7412:0, 0, 1, v7416:0, v7413:0, v7417:0, v7418:0, v7419:0, 3, 20, 19, 4) -> f_972(v7409:0, v7410:0, v7411:0, v7412:0, 1, 1, v7416:0, 0, v7413:0, 0, v7417:0, v7418:0, v7419:0, 3, 20, 19, 2, 4) :|: v7416:0 > 0 && v7413:0 > 1
f_1021(v7409:0, v7410:0, v7411:0, v7412:0, 0, 1, v7416:0, v7413:0, v7417:0, v7418:0, v7419:0, 3, 20, 19, 4) -> f_972(v7409:0, v7410:0, v7411:0, v7412:0, 1, 1, v7416:0, 0, v7413:0, 0, v7417:0, v7418:0, v7419:0, 3, 20, 19, 2, 4) :|: v7416:0 < 0 && v7413:0 > 1
f_130 -> f_158(v1:0, v3:0, v5:0, v7:0, 1, 20, 0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3, 4, 21) :|: v7:0 > 20 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0
f_130 -> f_389(v1:0, v3:0, v5:0, v7:0, 1 + v7:0, 1, 20, 0, v7:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3, 19, 2, 4) :|: v7:0 > 0 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 < 21 && v7:0 < 20
f_130 -> f_389(v1:0, v3:0, v5:0, v7:0, v12:0, 1, 20, 0, v7:0, v2:0, v4:0, v6:0, 3, 19, 2, 4) :|: FALSE
f_130 -> f_149(v1:0, v3:0, v5:0, v7:0, 0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 20, 3, 1, 4) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 < 0
f_389(v808:0, v809:0, v810:0, v811:0, 20, 1, 20, 0, v812:0, v817:0, v818:0, v819:0, 3, 19, 2, 4) -> f_972(v808:0, v809:0, v810:0, v811:0, 1, 1, 19, 0, 20, 0, v817:0, v818:0, v819:0, 3, 20, 19, 2, 4) :|: TRUE
f_894(v6274:0, v6275:0, v6276:0, v6277:0, v6278:0, 1, 19, 0, v6282:0, 20, v6284:0, v6285:0, v6286:0, 3, 4) -> f_972(v6274:0, v6275:0, v6276:0, v6277:0, v6278:0, 1, 19, 0, 20, v6282:0, v6284:0, v6285:0, v6286:0, 3, 20, 19, 2, 4) :|: TRUE
f_1060(v7409:0, v7410:0, v7411:0, v7412:0, 0, 1, v7417:0, v7418:0, v7419:0, 3, 20, 4) -> f_1060(v7409:0, v7410:0, v7411:0, v7412:0, 0, 1, v7417:0, v7418:0, v7419:0, 3, 20, 4) :|: TRUE
f_972(v7246:0, v7247:0, v7248:0, v7249:0, v7250:0, 1, v7252:0, 0, v7255:0, v7254:0, v7256:0, v7257:0, v7258:0, 3, 20, 19, 2, 4) -> f_1013(v7246:0, v7247:0, v7248:0, v7249:0, 1 + v7250:0, 1, v7252:0, 0, v7250:0, v7255:0, v7256:0, v7257:0, v7258:0, 3, 20, 19, 2, 4) :|: v7252:0 > v7250:0 && v7252:0 < 1 + v7250:0 && v7250:0 > 0
f_972(v7246:0, v7247:0, v7248:0, v7249:0, v7250:0, 1, v7252:0, 0, v7255:0, v7254:0, v7256:0, v7257:0, v7258:0, 3, 20, 19, 2, 4) -> f_1013(v7246:0, v7247:0, v7248:0, v7249:0, 1 + v7250:0, 1, v7252:0, 0, v7250:0, v7255:0, v7256:0, v7257:0, v7258:0, 3, 20, 19, 2, 4) :|: v7252:0 < v7250:0 && v7252:0 < 1 + v7250:0 && v7250:0 > 0
f_623(v3383:0, v3384:0, v3385:0, 0, v3387:0, 1, 20, v3390:0, v3391:0, v3392:0, v3393:0, 3, 4) -> f_623(v3383:0, v3384:0, v3385:0, 0, 1 + v3387:0, 1, 20, v3387:0, v3391:0, v3392:0, v3393:0, 3, 4) :|: v3387:0 < 20 && v3387:0 > 0
f_623(v3383:0, v3384:0, v3385:0, 0, 20, 1, 20, v3390:0, v3391:0, v3392:0, v3393:0, 3, 4) -> f_1021(v3383:0, v3384:0, v3385:0, 0, 0, 1, 19, 20, v3391:0, v3392:0, v3393:0, 3, 20, 19, 4) :|: TRUE
f_389(v808:0, v809:0, v810:0, v811:0, v816:0, 1, 20, 0, v812:0, v817:0, v818:0, v819:0, 3, 19, 2, 4) -> f_389(v808:0, v809:0, v810:0, v811:0, 1 + v816:0, 1, 20, 0, v816:0, v817:0, v818:0, v819:0, 3, 19, 2, 4) :|: v816:0 > 1 && v816:0 < 20 && v812:0 < 19 && v811:0 < 19
Filtered unneeded arguments:
   f_623(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13) -> f_623(x5)
   f_972(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18) -> f_972(x5, x7, x9, x10)
   f_1021(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15) -> f_1021(x7, x8)
   f_389(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16) -> f_389(x4, x5, x9)
   f_894(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15) -> f_894(x5, x9)
Removed division, modulo operations, cleaned up constraints. Obtained 22 rules.P rules:
f_623(v3387:0) -> f_681(v3383:0, v3384:0, v3385:0, 0, 1 + v3387:0, 1, 20, v3387:0, v3391:0, v3392:0, v3393:0, 3, 21, 4, 22) :|: v3387:0 > 20
f_972(sum~cons_1~v7254:0, sum~cons_1~v7254:01, v7255:0, v7254:0) -> f_1021(v7254:0, 1 + v7254:0) :|: v7254:0 < 19 && sum~cons_1~v7254:0 = 1 + v7254:0 && sum~cons_1~v7254:01 = 1 + v7254:0
f_130 -> f_623(1) :|: TRUE
f_1021(cons_0, v7413:0) -> f_1060(v7409:0, v7410:0, v7411:0, v7412:0, 0, 1, v7417:0, v7418:0, v7419:0, 3, 20, 4) :|: TRUE && cons_0 = 0
f_972(v7250:0, v7252:0, v7255:0, v7254:0) -> f_972(1 + v7250:0, v7252:0, v7255:0, v7250:0) :|: v7250:0 > 0 && v7252:0 > v7250:0 && v7250:0 < 19 && v7252:0 >= 1 + v7250:0 && v7255:0 > 2 && v7252:0 > 1
f_972(v7250:0, v7252:0, v7255:0, v7254:0) -> f_972(1 + v7250:0, v7252:0, v7255:0, v7250:0) :|: v7250:0 > 0 && v7252:0 < v7250:0 && v7250:0 < 19 && v7252:0 >= 1 + v7250:0 && v7255:0 > 2 && v7252:0 > 1
f_130 -> f_972(1, 19, 20, 0) :|: TRUE
f_130 -> f_972(1, 19, 20, 0) :|: FALSE
f_1021(v7416:0, v7413:0) -> f_972(1, v7416:0, v7413:0, 0) :|: v7416:0 > 0 && v7413:0 > 1
f_1021(v7416:0, v7413:0) -> f_972(1, v7416:0, v7413:0, 0) :|: v7416:0 < 0 && v7413:0 > 1
f_130 -> f_158(v1:0, v3:0, v5:0, v7:0, 1, 20, 0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3, 4, 21) :|: v3:0 > 0 && v7:0 > 20 && v5:0 > 0 && v1:0 > 0
f_130 -> f_389(v7:0, 1 + v7:0, v7:0) :|: v7:0 < 21 && v7:0 < 20 && v7:0 > 0
f_130 -> f_389(v7:0, v12:0, v7:0) :|: FALSE
f_130 -> f_149(v1:0, v3:0, v5:0, v7:0, 0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 20, 3, 1, 4) :|: v1:0 > 0 && v3:0 > 0 && v7:0 < 0 && v5:0 > 0
f_389(v811:0, cons_20, v812:0) -> f_972(1, 19, 20, 0) :|: TRUE && cons_20 = 20
f_894(v6278:0, v6282:0) -> f_972(v6278:0, 19, 20, v6282:0) :|: TRUE
f_1060(v7409:0, v7410:0, v7411:0, v7412:0, cons_0, cons_1, v7417:0, v7418:0, v7419:0, cons_3, cons_20, cons_4) -> f_1060(v7409:0, v7410:0, v7411:0, v7412:0, 0, 1, v7417:0, v7418:0, v7419:0, 3, 20, 4) :|: TRUE && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_20 = 20 && cons_4 = 4
f_972(v7250:0, v7252:0, v7255:0, v7254:0) -> f_1013(v7246:0, v7247:0, v7248:0, v7249:0, 1 + v7250:0, 1, v7252:0, 0, v7250:0, v7255:0, v7256:0, v7257:0, v7258:0, 3, 20, 19, 2, 4) :|: v7252:0 < 1 + v7250:0 && v7250:0 > 0 && v7252:0 > v7250:0
f_972(v7250:0, v7252:0, v7255:0, v7254:0) -> f_1013(v7246:0, v7247:0, v7248:0, v7249:0, 1 + v7250:0, 1, v7252:0, 0, v7250:0, v7255:0, v7256:0, v7257:0, v7258:0, 3, 20, 19, 2, 4) :|: v7252:0 < 1 + v7250:0 && v7250:0 > 0 && v7252:0 < v7250:0
f_623(v3387:0) -> f_623(1 + v3387:0) :|: v3387:0 < 20 && v3387:0 > 0
f_623(cons_20) -> f_1021(19, 20) :|: TRUE && cons_20 = 20
f_389(v811:0, v816:0, v812:0) -> f_389(v811:0, 1 + v816:0, v816:0) :|: v816:0 < 20 && v816:0 > 1 && v811:0 < 19 && v812:0 < 19

----------------------------------------

(48)
Obligation:
Rules:
f_623(v3387:0) -> f_681(v3383:0, v3384:0, v3385:0, 0, 1 + v3387:0, 1, 20, v3387:0, v3391:0, v3392:0, v3393:0, 3, 21, 4, 22) :|: v3387:0 > 20
f_972(sum~cons_1~v7254:0, sum~cons_1~v7254:01, v7255:0, v7254:0) -> f_1021(v7254:0, 1 + v7254:0) :|: v7254:0 < 19 && sum~cons_1~v7254:0 = 1 + v7254:0 && sum~cons_1~v7254:01 = 1 + v7254:0
f_130 -> f_623(1) :|: TRUE
f_1021(cons_0, v7413:0) -> f_1060(v7409:0, v7410:0, v7411:0, v7412:0, 0, 1, v7417:0, v7418:0, v7419:0, 3, 20, 4) :|: TRUE && cons_0 = 0
f_972(x, x1, x2, x3) -> f_972(1 + x, x1, x2, x) :|: x > 0 && x1 > x && x < 19 && x1 >= 1 + x && x2 > 2 && x1 > 1
f_972(x4, x5, x6, x7) -> f_972(1 + x4, x5, x6, x4) :|: x4 > 0 && x5 < x4 && x4 < 19 && x5 >= 1 + x4 && x6 > 2 && x5 > 1
f_130 -> f_972(1, 19, 20, 0) :|: TRUE
f_130 -> f_972(1, 19, 20, 0) :|: FALSE
f_1021(x8, x9) -> f_972(1, x8, x9, 0) :|: x8 > 0 && x9 > 1
f_1021(x10, x11) -> f_972(1, x10, x11, 0) :|: x10 < 0 && x11 > 1
f_130 -> f_158(v1:0, v3:0, v5:0, v7:0, 1, 20, 0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3, 4, 21) :|: v3:0 > 0 && v7:0 > 20 && v5:0 > 0 && v1:0 > 0
f_130 -> f_389(x12, 1 + x12, x12) :|: x12 < 21 && x12 < 20 && x12 > 0
f_130 -> f_389(x13, x14, x13) :|: FALSE
f_130 -> f_149(x15, x16, x17, x18, 0, 3 + x15, 3 + x16, 3 + x17, 20, 3, 1, 4) :|: x15 > 0 && x16 > 0 && x18 < 0 && x17 > 0
f_389(v811:0, cons_20, v812:0) -> f_972(1, 19, 20, 0) :|: TRUE && cons_20 = 20
f_894(v6278:0, v6282:0) -> f_972(v6278:0, 19, 20, v6282:0) :|: TRUE
f_1060(x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30) -> f_1060(x19, x20, x21, x22, 0, 1, x25, x26, x27, 3, 20, 4) :|: TRUE && x23 = 0 && x24 = 1 && x28 = 3 && x29 = 20 && x30 = 4
f_972(x31, x32, x33, x34) -> f_1013(x35, x36, x37, x38, 1 + x31, 1, x32, 0, x31, x33, x39, x40, x41, 3, 20, 19, 2, 4) :|: x32 < 1 + x31 && x31 > 0 && x32 > x31
f_972(x42, x43, x44, x45) -> f_1013(x46, x47, x48, x49, 1 + x42, 1, x43, 0, x42, x44, x50, x51, x52, 3, 20, 19, 2, 4) :|: x43 < 1 + x42 && x42 > 0 && x43 < x42
f_623(x53) -> f_623(1 + x53) :|: x53 < 20 && x53 > 0
f_623(x54) -> f_1021(19, 20) :|: TRUE && x54 = 20
f_389(x55, x56, x57) -> f_389(x55, 1 + x56, x56) :|: x56 < 20 && x56 > 1 && x55 < 19 && x57 < 19
Start term: f_130

----------------------------------------

(49) IRSToKoat (EQUIVALENT)
Convert an IRS to a koat problem
----------------------------------------

(50)
Obligation:
(GOAL COMPLEXITY)
(STARTTERM (FUNCTIONSYMBOLS f_130))
(VAR x290 x160 x281 x280 x162 x283 x161 x282 x164 x285 x163 x284 x166 x287 x165 x286 x168 x289 x167 x288 x169 x270 x391 x390 x151 x272 x393 x150 x271 x392 x153 x274 x395 x152 x273 x394 x155 x276 x397 x154 x275 x396 x157 x278 x399 x156 x277 x398 x159 x158 x279 x380 x140 x261 x382 x260 x381 x142 x263 x384 x141 x262 x383 x144 x265 x386 x143 x264 x385 x146 x267 x388 x145 x266 x387 x148 x269 x147 x268 x389 x149 x490 x250 x371 x492 x370 x491 x131 x252 x373 x494 x130 x251 x372 x493 x133 x254 x375 x496 x132 x253 x374 x495 x135 x256 x377 x498 x134 x255 x376 x497 x137 x258 x379 x136 x257 x378 x499 x139 x138 x259 x193 x192 x195 x194 x197 x196 x199 x198 x'' k14 k15 k16 k17 k10 k11 k12 k13 x191 x190 x182 x181 x184 x183 x186 x185 x188 x187 x189 x180 x171 x292 x170 x291 x173 x294 x172 x293 x175 x296 x174 x295 x177 x298 x176 x297 x179 x178 x299 k36 k37 k38 k39 k32 k33 k34 k35 k30 k31 k29 k25 k26 k27 k28 k21 k22 k23 k24 k20 k18 k19 k58 k59 k54 k55 k56 k57 k50 k51 k52 k53 k47 k48 k49 k43 k44 k45 k46 k40 k41 k42 k76 k77 k78 k79 k72 k73 k74 k75 k70 k71 x k69 k65 k66 k67 k68 k61 k62 k63 k64 k60 x28 x29 x24 x25 x26 x27 x20 x21 x22 x23 k83 k84 k85 k86 k80 k81 k82 x17 x18 x19 x13 x14 x15 x16 x10 x11 x12 x46 x47 x48 x49 x42 x43 x44 x45 x40 x41 x39 x35 x36 x37 x38 x31 x32 x33 x34 x30 x70 x68 x69 x64 x65 x66 x67 x60 x61 x62 x63 k7 k8 k5 k6 k9 k0 k3 k4 k1 k2 x57 x58 x59 x53 x54 x55 x56 x50 x51 x52 x407 x528 x90 x406 x527 x91 x409 x92 x408 x529 x86 x520 x87 x88 x401 x522 x89 x400 x521 x82 x403 x524 x83 x402 x523 x84 x405 x526 x85 x404 x525 x517 x516 x80 x519 x81 x518 x79 x75 x76 x77 x511 x78 x510 x71 x513 x72 x512 x73 x515 x74 x514 x506 x505 x508 x507 x509 x500 x502 x501 x504 x503 x97 x98 x99 x93 x94 x95 x96 x209 x208 x329 x560 x320 x441 x562 x440 x561 x201 x322 x443 x564 x200 x321 x442 x563 x203 x324 x445 x566 x202 x323 x444 x565 x205 x326 x447 x568 x204 x325 x446 x567 x207 x328 x449 x206 x327 x448 x569 x319 x318 x439 x430 x551 x550 x311 x432 x553 x310 x431 x552 x313 x434 x555 x312 x433 x554 x315 x436 x557 x314 x435 x556 x317 x438 x559 x316 x437 x558 x308 x429 x307 x428 x549 x309 x540 x300 x421 x542 x420 x541 x302 x423 x544 x301 x422 x543 x304 x425 x546 x303 x424 x545 x306 x427 x548 x305 x426 x547 x418 x539 x417 x538 x419 x410 x531 x530 x412 x533 x411 x532 x414 x535 x413 x534 x416 x537 x415 x536 x360 x481 x480 x120 x241 x362 x483 x240 x361 x482 x122 x243 x364 x485 x121 x242 x363 x484 x124 x245 x366 x487 x123 x244 x365 x486 x126 x247 x368 x489 x125 x246 x367 x488 x128 x249 x127 x248 x369 x129 x470 x591 x590 x230 x351 x472 x593 x350 x471 x592 x111 x232 x353 x474 x110 x231 x352 x473 x113 x234 x355 x476 x112 x233 x354 x475 x115 x236 x357 x478 x114 x235 x356 x477 x117 x238 x359 x116 x237 x358 x479 x119 x118 x239 x109 x4 x5 x2 x580 x3 x8 x340 x461 x582 x9 x460 x581 x6 x100 x221 x342 x463 x584 x7 x220 x341 x462 x583 x102 x223 x344 x465 x586 x101 x222 x343 x464 x585 x104 x225 x346 x467 x588 x103 x224 x345 x466 x587 x106 x227 x348 x469 x1 x105 x226 x347 x468 x589 x108 x229 x107 x228 x349 x219 x' x450 x571 x570 x210 x331 x452 x573 x330 x451 x572 x212 x333 x454 x575 x211 x332 x453 x574 x214 x335 x456 x577 x213 x334 x455 x576 x216 x337 x458 x579 x215 x336 x457 x578 x218 x339 x217 x338 x459)
(RULES
  f_130(x526, x527, x528, x529, x530, x531, x532, x533, x534, x535, x536, x537, x538, x539, x540, x541, x542, x543) -> f_623(1, x544, x545, x546, x547, x548, x549, x550, x551, x552, x553, x554, x555, x556, x557, x558, x559, x560) :|: 0 = 0
  f_972(k61, k60, k53, k7, x359, x360, x361, x362, x363, x364, x365, x366, x367, x368, x369, x370, x371, x372) -> f_1021(k7, 1 + k7, x373, x374, x375, x376, x377, x378, x379, x380, x381, x382, x383, x384, x385, x386, x387, x388) :|: k7 < 19 && k61 = 1 + k7 && k60 = 1 + k7
  f_1060(k67, k54, k56, k57, k58, k45, k48, k50, k52, k37, k40, k32, x46, x47, x48, x49, x50, x51) -> f_1060(k67, k54, k56, k57, 0, 1, k48, k50, k52, 3, 20, 4, x52, x53, x54, x55, x56, x57) :|: 0 = 0 && k58 = 0 && k45 = 1 && k37 = 3 && k40 = 20 && k32 = 4
  f_972(k11, k59, k41, k42, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31) -> f_972(1 + k11, k59, k41, k11, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45) :|: k11 > 0 && k59 > k11 && k11 < 19 && k59 >= 1 + k11 && k41 > 2 && k59 > 1
  f_130(x81, x82, x83, x84, x85, x86, x87, x88, x89, x90, x91, x92, x93, x94, x95, x96, x97, x98) -> f_972(1, 19, 20, 0, x99, x100, x101, x102, x103, x104, x105, x106, x107, x108, x109, x110, x111, x112) :|: 0 = 1
  f_1021(k16, k65, x246, x247, x248, x249, x250, x251, x252, x253, x254, x255, x256, x257, x258, x259, x260, x261) -> f_1060(k15, k31, k85, k18, 0, 1, k70, k22, k73, 3, 20, 4, x262, x263, x264, x265, x266, x267) :|: 0 = 0 && k16 = 0
  f_1021(k76, k78, x268, x269, x270, x271, x272, x273, x274, x275, x276, x277, x278, x279, x280, x281, x282, x283) -> f_972(1, k76, k78, 0, x284, x285, x286, x287, x288, x289, x290, x291, x292, x293, x294, x295, x296, x297) :|: k76 < 0 && k78 > 1
  f_894(k62, k34, x449, x450, x451, x452, x453, x454, x455, x456, x457, x458, x459, x460, x461, x462, x463, x464) -> f_972(k62, 19, 20, k34, x465, x466, x467, x468, x469, x470, x471, x472, x473, x474, x475, x476, x477, x478) :|: 0 = 0
  f_389(k79, k81, k69, x389, x390, x391, x392, x393, x394, x395, x396, x397, x398, x399, x400, x401, x402, x403) -> f_389(k79, 1 + k81, k81, x404, x405, x406, x407, x408, x409, x410, x411, x412, x413, x414, x415, x416, x417, x418) :|: k81 < 20 && k81 > 1 && k79 < 19 && k69 < 19
  f_130(x58, x59, x60, x61, x62, x63, x64, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74, x75) -> f_158(k63, k39, k43, k47, 1, 20, 0, 3 + k63, 3 + k39, 3 + k43, 3, 4, 21, x76, x77, x78, x79, x80) :|: k39 > 0 && k47 > 20 && k43 > 0 && k63 > 0
  f_972(k25, k26, k27, k28, x479, x480, x481, x482, x483, x484, x485, x486, x487, x488, x489, x490, x491, x492) -> f_1013(k20, k21, k23, k24, 1 + k25, 1, k26, 0, k25, k27, k19, k13, k14, 3, 20, 19, 2, 4) :|: k26 < 1 + k25 && k25 > 0 && k26 > k25
  f_623(k17, x, x', x'', x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14) -> f_681(k29, k84, k30, 0, 1 + k17, 1, 20, k17, k5, k55, k12, 3, 21, 4, 22, x15, x16, x17) :|: k17 > 20
  f_130(x160, x161, x162, x163, x164, x165, x166, x167, x168, x169, x170, x171, x172, x173, x174, x175, x176, x177) -> f_149(k72, k74, k64, k66, 0, 3 + k72, 3 + k74, 3 + k64, 20, 3, 1, 4, x178, x179, x180, x181, x182, x183) :|: k72 > 0 && k74 > 0 && k66 < 0 && k64 > 0
  f_130(x327, x328, x329, x330, x331, x332, x333, x334, x335, x336, x337, x338, x339, x340, x341, x342, x343, x344) -> f_972(1, 19, 20, 0, x345, x346, x347, x348, x349, x350, x351, x352, x353, x354, x355, x356, x357, x358) :|: 0 = 0
  f_1021(k44, k46, x419, x420, x421, x422, x423, x424, x425, x426, x427, x428, x429, x430, x431, x432, x433, x434) -> f_972(1, k44, k46, 0, x435, x436, x437, x438, x439, x440, x441, x442, x443, x444, x445, x446, x447, x448) :|: k44 > 0 && k46 > 1
  f_130(x561, x562, x563, x564, x565, x566, x567, x568, x569, x570, x571, x572, x573, x574, x575, x576, x577, x578) -> f_389(k80, 1 + k80, k80, x579, x580, x581, x582, x583, x584, x585, x586, x587, x588, x589, x590, x591, x592, x593) :|: k80 < 21 && k80 < 20 && k80 > 0
  f_972(k6, k8, k9, k10, x113, x114, x115, x116, x117, x118, x119, x120, x121, x122, x123, x124, x125, x126) -> f_1013(k1, k2, k3, k4, 1 + k6, 1, k8, 0, k6, k9, k82, k83, k86, 3, 20, 19, 2, 4) :|: k8 < 1 + k6 && k6 > 0 && k8 < k6
  f_623(k77, x493, x494, x495, x496, x497, x498, x499, x500, x501, x502, x503, x504, x505, x506, x507, x508, x509) -> f_1021(19, 20, x510, x511, x512, x513, x514, x515, x516, x517, x518, x519, x520, x521, x522, x523, x524, x525) :|: 0 = 0 && k77 = 20
  f_623(k75, x212, x213, x214, x215, x216, x217, x218, x219, x220, x221, x222, x223, x224, x225, x226, x227, x228) -> f_623(1 + k75, x229, x230, x231, x232, x233, x234, x235, x236, x237, x238, x239, x240, x241, x242, x243, x244, x245) :|: k75 < 20 && k75 > 0
  f_972(k36, k38, k49, k51, x184, x185, x186, x187, x188, x189, x190, x191, x192, x193, x194, x195, x196, x197) -> f_972(1 + k36, k38, k49, k36, x198, x199, x200, x201, x202, x203, x204, x205, x206, x207, x208, x209, x210, x211) :|: k36 > 0 && k38 < k36 && k36 < 19 && k38 >= 1 + k36 && k49 > 2 && k38 > 1
  f_389(k33, k35, k0, x298, x299, x300, x301, x302, x303, x304, x305, x306, x307, x308, x309, x310, x311, x312) -> f_972(1, 19, 20, 0, x313, x314, x315, x316, x317, x318, x319, x320, x321, x322, x323, x324, x325, x326) :|: 0 = 0 && k35 = 20
  f_130(x127, x128, x129, x130, x131, x132, x133, x134, x135, x136, x137, x138, x139, x140, x141, x142, x143, x144) -> f_389(k68, k71, k68, x145, x146, x147, x148, x149, x150, x151, x152, x153, x154, x155, x156, x157, x158, x159) :|: 0 = 1
)

----------------------------------------

(51) KoAT2 (EQUIVALENT)
KoAT2 was called with the following command:

/aprove/bin/koat2 analyse --termination --cfr=pe -d5 --local=mprf,twn -rtermcomp -i /tmp/aprove.InputModules.Programs.koat2_8490546523570534196.koat 

KoAT2's output was:

MAYBE

----------------------------------------

(52)
MAYBE

----------------------------------------

(53) CToIRSProof (EQUIVALENT)
Parsed C Integer Program as IRS.
----------------------------------------

(54)
Obligation:
Rules:
f1(i, range) -> f2(x_1, range) :|: TRUE
f2(x, x1) -> f3(x, 20) :|: TRUE
f8(x2, x3) -> f11(0, x3) :|: TRUE
f11(x4, x5) -> f12(x4, arith) :|: TRUE && arith = x5 - 1
f9(x30, x31) -> f13(x32, x31) :|: TRUE && x32 = x30 + 1
f5(x8, x9) -> f8(x8, x9) :|: x8 = x9
f5(x10, x11) -> f9(x10, x11) :|: x10 < x11
f5(x33, x34) -> f9(x33, x34) :|: x33 > x34
f12(x12, x13) -> f10(x12, x13) :|: TRUE
f13(x14, x15) -> f10(x14, x15) :|: TRUE
f4(x16, x17) -> f5(x16, x17) :|: 0 < x16
f4(x35, x36) -> f5(x35, x36) :|: 0 > x35
f4(x37, x38) -> f5(x37, x38) :|: x37 < x38
f4(x39, x40) -> f5(x39, x40) :|: x39 > x40
f4(x18, x19) -> f6(x18, x19) :|: 0 = x18 && x18 = x19
f10(x20, x21) -> f7(x20, x21) :|: TRUE
f6(x22, x23) -> f7(x22, x23) :|: TRUE
f3(x24, x25) -> f4(x24, x25) :|: 0 <= x24 && x24 <= x25
f7(x26, x27) -> f3(x26, x27) :|: TRUE
f3(x28, x29) -> f14(x28, x29) :|: 0 > x28
f3(x41, x42) -> f14(x41, x42) :|: x41 > x42
Start term: f1(i, range)

----------------------------------------

(55) TerminationGraphProcessor (SOUND)
Constructed the termination graph and obtained one non-trivial SCC.

----------------------------------------

(56)
Obligation:
Rules:
f3(x24, x25) -> f4(x24, x25) :|: 0 <= x24 && x24 <= x25
f7(x26, x27) -> f3(x26, x27) :|: TRUE
f10(x20, x21) -> f7(x20, x21) :|: TRUE
f12(x12, x13) -> f10(x12, x13) :|: TRUE
f11(x4, x5) -> f12(x4, arith) :|: TRUE && arith = x5 - 1
f8(x2, x3) -> f11(0, x3) :|: TRUE
f5(x8, x9) -> f8(x8, x9) :|: x8 = x9
f4(x16, x17) -> f5(x16, x17) :|: 0 < x16
f4(x35, x36) -> f5(x35, x36) :|: 0 > x35
f4(x37, x38) -> f5(x37, x38) :|: x37 < x38
f4(x39, x40) -> f5(x39, x40) :|: x39 > x40
f13(x14, x15) -> f10(x14, x15) :|: TRUE
f9(x30, x31) -> f13(x32, x31) :|: TRUE && x32 = x30 + 1
f5(x10, x11) -> f9(x10, x11) :|: x10 < x11
f5(x33, x34) -> f9(x33, x34) :|: x33 > x34
f6(x22, x23) -> f7(x22, x23) :|: TRUE
f4(x18, x19) -> f6(x18, x19) :|: 0 = x18 && x18 = x19

----------------------------------------

(57) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(58)
Obligation:
Rules:
f5(x33:0, x34:0) -> f7(x33:0 + 1, x34:0) :|: x34:0 < x33:0
f7(x26:0, x27:0) -> f5(x26:0, x27:0) :|: x26:0 > -1 && x27:0 >= x26:0 && x26:0 < 0
f7(x, x1) -> f5(x, x1) :|: x > -1 && x1 > x
f5(x10:0, x11:0) -> f7(x10:0 + 1, x11:0) :|: x11:0 > x10:0
f5(x8:0, x8:01) -> f7(0, x8:0 - 1) :|: TRUE && x8:0 = x8:01
f7(x2, x3) -> f5(x2, x3) :|: x3 >= x2 && x2 > 0
f7(cons_0, cons_01) -> f7(0, 0) :|: TRUE && cons_0 = 0 && cons_01 = 0

----------------------------------------

(59) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, x33:0, x34:0) -> f(2, x33:0 + 1, x34:0) :|: pc = 1 && x34:0 < x33:0
f(pc, x26:0, x27:0) -> f(1, x26:0, x27:0) :|: pc = 2 && (x26:0 > -1 && x27:0 >= x26:0 && x26:0 < 0)
f(pc, x, x1) -> f(1, x, x1) :|: pc = 2 && (x > -1 && x1 > x)
f(pc, x10:0, x11:0) -> f(2, x10:0 + 1, x11:0) :|: pc = 1 && x11:0 > x10:0
f(pc, x8:0, x8:01) -> f(2, 0, x8:0 - 1) :|: pc = 1 && (TRUE && x8:0 = x8:01)
f(pc, x2, x3) -> f(1, x2, x3) :|: pc = 2 && (x3 >= x2 && x2 > 0)
f(pc, cons_0, cons_01) -> f(2, 0, 0) :|: pc = 2 && (TRUE && cons_0 = 0 && cons_01 = 0)
Witness term starting non-terminating reduction: f(2, 0, 0)
----------------------------------------

(60)
NO
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.001s
Running LoAT finished with non-zero exit code 134 when running command: 
[/aprove/bin/loat, --plain, --nonterm, --proof-level, 3, /tmp/aprove.InputModules.Programs.loat16384800322745555111.koat]
the error message is: 
[loat: /home/ffrohn/repos/LoAT/src/accelerate/backward.cpp:115: Rule BackwardAcceleration::buildAcceleratedLoop(const UpdateMap&, const Expression&, const GuardList&, const ExprSymbol&, unsigned int) const: Assertion `validityBound <= 1' failed.]
