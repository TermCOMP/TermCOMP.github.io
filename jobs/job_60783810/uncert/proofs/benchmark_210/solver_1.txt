YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/ZNpjL.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could be proven:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 19 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 6146 ms]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) LLVM Symbolic Execution SCC
        (8) SCC2IRS [SOUND, 224 ms]
        (9) IntTRS
        (10) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (11) IntTRS
        (12) PolynomialOrderProcessor [EQUIVALENT, 17 ms]
        (13) AND
            (14) IntTRS
                (15) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                (16) IntTRS
                (17) RankingReductionPairProof [EQUIVALENT, 5 ms]
                (18) IntTRS
                (19) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                (20) IntTRS
                (21) RankingReductionPairProof [EQUIVALENT, 4 ms]
                (22) YES
            (23) IntTRS
                (24) TerminationGraphProcessor [EQUIVALENT, 157 ms]
                (25) IntTRS
                (26) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                (27) IntTRS
                (28) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                (29) IntTRS
                (30) RankingReductionPairProof [EQUIVALENT, 0 ms]
                (31) YES
    (32) LLVM Symbolic Execution SCC
        (33) SCC2IRS [SOUND, 126 ms]
        (34) IntTRS
        (35) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (36) IntTRS
        (37) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (38) AND
            (39) IntTRS
                (40) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                (41) IntTRS
                (42) RankingReductionPairProof [EQUIVALENT, 4 ms]
                (43) YES
            (44) IntTRS
                (45) TerminationGraphProcessor [EQUIVALENT, 20 ms]
                (46) YES
    (47) LLVM Symbolic Execution SCC
        (48) SCC2IRS [SOUND, 56 ms]
        (49) IntTRS
        (50) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (51) IntTRS
        (52) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (53) YES


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/ZNpjL.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/ZNpjL.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "fermat" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 7
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		%3 = alloca i32, align 4
		%4 = alloca i32, align 4
		%5 = alloca i32, align 4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		store 1000, %2
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		store 1, %3
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %4)
		store 1, %4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %5)
		store 1, %5
		br %6
	6:
		%7 = load %3
		%8 = load %3
		%9 = mul i32 %7, %8
		%10 = load %3
		%11 = mul i32 %9, %10
		%12 = load %4
		%13 = load %4
		%14 = mul i32 %12, %13
		%15 = load %4
		%16 = mul i32 %14, %15
		%17 = load %5
		%18 = load %5
		%19 = mul i32 %17, %18
		%20 = load %5
		%21 = mul i32 %19, %20
		%22 = add i32 %16, %21
		%23 = icmp eq %11 %22
		br %23, %24, %25
	24:
		store 1, %1
		br %45
	25:
		%26 = load %3
		%27 = add i32 %26, 1
		store %27, %3
		%28 = load %3
		%29 = icmp sgt %28 1000
		br %29, %30, %33
	30:
		store 1, %3
		%31 = load %4
		%32 = add i32 %31, 1
		store %32, %4
		br %33
	33:
		%34 = load %4
		%35 = icmp sgt %34 1000
		br %35, %36, %39
	36:
		store 1, %4
		%37 = load %5
		%38 = add i32 %37, 1
		store %38, %5
		br %39
	39:
		%40 = load %5
		%41 = icmp sgt %40 1000
		br %41, %42, %43
	42:
		br %44
	43:
		br %6
	44:
		store 0, %1
		br %45
	45:
		%46 = load %1
		ret %46

*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 71
	0:
		%1 = alloca i32, align 4
		store 0, %1
		%2 = call i32 @fermat()
		ret %2


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 3 SCCs.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC
----------------------------------------

(8) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 177 rulesP rules:
f_2095(v15471, v15472, v15473, v15474, v15475, v15476, v15477, v15478, v15479, v15480, v15481, v15482, v15483, v15484, v15485, 0, v15487, 1, v15491, v15489, v15490, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 2, 4) -> f_2099(v15471, v15472, v15473, v15474, v15475, v15476, v15477, v15478, v15479, v15480, v15481, v15482, v15483, v15484, v15485, 0, v15487, 1, v15491, v15489, v15490, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) :|: v15491 <= 1000 && v15482 <= 999
f_2099(v15471, v15472, v15473, v15474, v15475, v15476, v15477, v15478, v15479, v15480, v15481, v15482, v15483, v15484, v15485, 0, v15487, 1, v15491, v15489, v15490, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) -> f_2103(v15471, v15472, v15473, v15474, v15475, v15476, v15477, v15478, v15479, v15480, v15481, v15482, v15483, v15484, v15485, 0, v15487, 1, v15491, v15489, v15490, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) :|: 0 = 0
f_2103(v15471, v15472, v15473, v15474, v15475, v15476, v15477, v15478, v15479, v15480, v15481, v15482, v15483, v15484, v15485, 0, v15487, 1, v15491, v15489, v15490, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) -> f_2107(v15471, v15472, v15473, v15474, v15475, v15476, v15477, v15478, v15479, v15480, v15481, v15482, v15483, v15484, v15485, 0, v15487, 1, v15491, v15489, v15490, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) :|: TRUE
f_2107(v15471, v15472, v15473, v15474, v15475, v15476, v15477, v15478, v15479, v15480, v15481, v15482, v15483, v15484, v15485, 0, v15487, 1, v15491, v15489, v15490, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) -> f_2111(v15471, v15472, v15473, v15474, v15475, v15476, v15477, v15478, v15479, v15480, v15481, v15482, v15483, v15484, v15485, 0, v15487, 1, v15491, v15489, v15490, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) :|: TRUE
f_2111(v15471, v15472, v15473, v15474, v15475, v15476, v15477, v15478, v15479, v15480, v15481, v15482, v15483, v15484, v15485, 0, v15487, 1, v15491, v15489, v15490, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) -> f_2114(v15471, v15472, v15473, v15474, v15475, v15487, v15476, v15477, v15478, v15479, v15480, v15481, v15482, v15483, v15484, v15485, 0, 1, v15491, v15489, v15490, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) :|: 0 = 0
f_2114(v15471, v15472, v15473, v15474, v15475, v15487, v15476, v15477, v15478, v15479, v15480, v15481, v15482, v15483, v15484, v15485, 0, 1, v15491, v15489, v15490, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) -> f_2117(v15471, v15472, v15473, v15474, v15475, v15487, v15477, v15476, v15478, v15479, v15480, v15481, v15482, v15483, v15484, v15485, 0, 1, v15491, v15489, v15490, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) :|: 0 = 0
f_2117(v15471, v15472, v15473, v15474, v15475, v15487, v15477, v15476, v15478, v15479, v15480, v15481, v15482, v15483, v15484, v15485, 0, 1, v15491, v15489, v15490, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) -> f_2120(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15476, v15478, v15479, v15480, v15481, v15482, v15483, v15484, v15485, 0, 1, v15491, v15489, v15490, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) :|: v15678 = v15487 * v15487
f_2120(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15476, v15478, v15479, v15480, v15481, v15482, v15483, v15484, v15485, 0, 1, v15491, v15489, v15490, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) -> f_2123(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15478, v15479, v15480, v15481, v15482, v15483, v15484, v15485, 0, v15476, 1, v15491, v15489, v15490, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) :|: 0 = 0
f_2123(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15478, v15479, v15480, v15481, v15482, v15483, v15484, v15485, 0, v15476, 1, v15491, v15489, v15490, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) -> f_2125(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, v15479, v15480, v15481, v15482, v15483, v15484, v15485, 0, v15476, 1, v15491, v15489, v15490, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) :|: v15679 = v15678 * v15487
f_2125(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, v15479, v15480, v15481, v15482, v15483, v15484, v15485, 0, v15476, 1, v15491, v15489, v15490, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) -> f_2127(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15479, v15480, v15481, v15482, v15483, v15484, v15485, 0, v15476, v15491, v15489, v15490, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) :|: 0 = 0
f_2127(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15479, v15480, v15481, v15482, v15483, v15484, v15485, 0, v15476, v15491, v15489, v15490, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) -> f_2129(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15480, v15479, v15481, v15482, v15483, v15484, v15485, 0, v15476, v15491, v15489, v15490, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) :|: 0 = 0
f_2129(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15480, v15479, v15481, v15482, v15483, v15484, v15485, 0, v15476, v15491, v15489, v15490, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) -> f_2131(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15479, v15481, v15482, v15483, v15484, v15485, 0, v15476, v15491, v15489, v15490, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) :|: 0 = 0
f_2131(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15479, v15481, v15482, v15483, v15484, v15485, 0, v15476, v15491, v15489, v15490, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) -> f_2133(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15481, v15482, v15483, v15484, v15485, 0, v15476, v15479, v15491, v15489, v15490, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) :|: 0 = 0
f_2133(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15481, v15482, v15483, v15484, v15485, 0, v15476, v15479, v15491, v15489, v15490, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) -> f_2135(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15482, v15483, v15484, v15485, 0, v15476, v15479, v15491, v15489, v15490, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) :|: 0 = 0
f_2135(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15482, v15483, v15484, v15485, 0, v15476, v15479, v15491, v15489, v15490, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) -> f_2137(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15482, v15483, v15484, v15485, 0, v15476, v15479, v15489, v15490, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) :|: 0 = 0
f_2137(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15482, v15483, v15484, v15485, 0, v15476, v15479, v15489, v15490, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) -> f_2139(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15483, v15482, v15484, v15485, 0, v15476, v15479, v15489, v15490, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) :|: 0 = 0
f_2139(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15483, v15482, v15484, v15485, 0, v15476, v15479, v15489, v15490, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) -> f_2142(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15482, v15484, v15485, 0, v15476, v15479, v15489, v15490, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) :|: v15681 = v15491 * v15491
f_2142(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15482, v15484, v15485, 0, v15476, v15479, v15489, v15490, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) -> f_2145(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15484, v15485, 0, v15476, v15479, v15489, v15490, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) :|: 0 = 0
f_2145(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15484, v15485, 0, v15476, v15479, v15489, v15490, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) -> f_2148(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15485, 0, v15476, v15479, v15489, v15490, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) :|: v15733 = v15681 * v15491
f_2148(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15485, 0, v15476, v15479, v15489, v15490, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) -> f_2151(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15476, v15479, v15489, v15490, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) :|: v15734 = 1 + v15733
f_2151(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15476, v15479, v15489, v15490, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) -> f_2155(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15476, v15479, v15489, v15490, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) :|: v15679 != v15734
f_2155(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15476, v15479, v15489, v15490, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) -> f_2159(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15476, v15479, v15489, v15490, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) :|: 0 = 0
f_2159(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15476, v15479, v15489, v15490, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) -> f_2163(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15476, v15479, v15489, v15490, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) :|: TRUE
f_2163(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15476, v15479, v15489, v15490, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) -> f_2167(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15479, v15489, v15490, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) :|: 0 = 0
f_2167(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15479, v15489, v15490, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) -> f_2171(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15870, v15479, v15489, v15490, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) :|: v15870 = 1 + v15487 && 3 <= v15870
f_2171(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15870, v15479, v15489, v15490, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) -> f_2175(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15870, v15479, v15489, v15490, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) :|: TRUE
f_2175(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15870, v15479, v15489, v15490, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) -> f_2178(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15870, v15479, v15489, v15490, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) :|: 0 = 0
f_2178(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15870, v15479, v15489, v15490, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) -> f_2180(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15870, v15479, v15489, v15490, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) :|: 1000 < v15870 && 1000 <= v15487
f_2178(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15870, v15479, v15489, v15490, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) -> f_2181(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15870, v15479, v15489, v15490, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) :|: v15870 <= 1000 && v15487 <= 999
f_2180(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15870, v15479, v15489, v15490, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) -> f_2183(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15870, v15479, v15489, v15490, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) :|: 0 = 0
f_2183(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15870, v15479, v15489, v15490, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) -> f_2186(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15870, v15479, v15489, v15490, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) :|: TRUE
f_2186(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15870, v15479, v15489, v15490, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) -> f_2190(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15870, v15479, v15489, v15490, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) :|: TRUE
f_2190(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15870, v15479, v15489, v15490, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) -> f_2193(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15870, v15479, v15490, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) :|: 0 = 0
f_2193(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15870, v15479, v15490, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) -> f_2197(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15870, v15479, 2, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 4) :|: 0 = 0
f_2197(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15870, v15479, 2, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 4) -> f_2200(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15870, v15479, 2, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 4) :|: TRUE
f_2200(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15870, v15479, 2, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 4) -> f_2202(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15870, v15479, 2, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 4) :|: TRUE
f_2202(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15870, v15479, 2, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 4) -> f_2205(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15870, 2, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 999, 4, 1001) :|: 0 = 0
f_2205(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15870, 2, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 999, 4, 1001) -> f_2208(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15870, 2, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 999, 4, 1001) :|: 0 = 0
f_2208(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15870, 2, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 999, 4, 1001) -> f_2211(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15870, 2, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 999, 4, 1001) :|: TRUE
f_2211(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15870, 2, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 999, 4, 1001) -> f_2314(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, 1, 1, v15491, v15681, v15733, v15734, 0, v15870, 1, 2, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 999, 2, 1001, 4) :|: TRUE
f_2314(v17924, v17925, v17926, v17927, v17928, v17929, v17930, v17931, v17932, v17933, v17934, v17935, v17936, v17937, v17938, 0, v17940, 1, v17942, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) -> f_2317(v17924, v17925, v17926, v17927, v17928, v17929, v17930, v17931, v17932, v17933, v17934, v17935, v17936, v17937, v17938, 0, v17940, 1, v17942, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) :|: 0 = 0
f_2317(v17924, v17925, v17926, v17927, v17928, v17929, v17930, v17931, v17932, v17933, v17934, v17935, v17936, v17937, v17938, 0, v17940, 1, v17942, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) -> f_2319(v17924, v17925, v17926, v17927, v17928, v17929, v17930, v17931, v17932, v17933, v17934, v17935, v17936, v17937, v17938, 0, v17940, 1, v17942, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) :|: 0 = 0
f_2319(v17924, v17925, v17926, v17927, v17928, v17929, v17930, v17931, v17932, v17933, v17934, v17935, v17936, v17937, v17938, 0, v17940, 1, v17942, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) -> f_2321(v17924, v17925, v17926, v17927, v17928, v17929, v17930, v17931, v17932, v17933, v17934, v17935, v17936, v17937, v17938, 0, v17940, 1, v17942, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) :|: TRUE
f_2321(v17924, v17925, v17926, v17927, v17928, v17929, v17930, v17931, v17932, v17933, v17934, v17935, v17936, v17937, v17938, 0, v17940, 1, v17942, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) -> f_2323(v17924, v17925, v17926, v17927, v17928, v17929, v17930, v17931, v17932, v17933, v17934, v17935, v17936, v17937, v17938, 0, v17940, 1, v17942, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) :|: TRUE
f_2323(v17924, v17925, v17926, v17927, v17928, v17929, v17930, v17931, v17932, v17933, v17934, v17935, v17936, v17937, v17938, 0, v17940, 1, v17942, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) -> f_2326(v17924, v17925, v17926, v17927, v17928, 1, v17929, v17930, v17931, v17932, v17933, v17934, v17935, v17936, v17937, v17938, 0, v17940, v17942, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) :|: 0 = 0
f_2326(v17924, v17925, v17926, v17927, v17928, 1, v17929, v17930, v17931, v17932, v17933, v17934, v17935, v17936, v17937, v17938, 0, v17940, v17942, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) -> f_2328(v17924, v17925, v17926, v17927, v17928, 1, v17930, v17929, v17931, v17932, v17933, v17934, v17935, v17936, v17937, v17938, 0, v17940, v17942, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) :|: 0 = 0
f_2328(v17924, v17925, v17926, v17927, v17928, 1, v17930, v17929, v17931, v17932, v17933, v17934, v17935, v17936, v17937, v17938, 0, v17940, v17942, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) -> f_2331(v17924, v17925, v17926, v17927, v17928, 1, v17929, v17931, v17932, v17933, v17934, v17935, v17936, v17937, v17938, 0, v17940, v17942, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) :|: 0 = 0
f_2331(v17924, v17925, v17926, v17927, v17928, 1, v17929, v17931, v17932, v17933, v17934, v17935, v17936, v17937, v17938, 0, v17940, v17942, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) -> f_2334(v17924, v17925, v17926, v17927, v17928, 1, v17931, v17932, v17933, v17934, v17935, v17936, v17937, v17938, 0, v17929, v17940, v17942, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) :|: 0 = 0
f_2334(v17924, v17925, v17926, v17927, v17928, 1, v17931, v17932, v17933, v17934, v17935, v17936, v17937, v17938, 0, v17929, v17940, v17942, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) -> f_2337(v17924, v17925, v17926, v17927, v17928, 1, v17932, v17933, v17934, v17935, v17936, v17937, v17938, 0, v17929, v17940, v17942, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) :|: 0 = 0
f_2337(v17924, v17925, v17926, v17927, v17928, 1, v17932, v17933, v17934, v17935, v17936, v17937, v17938, 0, v17929, v17940, v17942, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) -> f_2340(v17924, v17925, v17926, v17927, v17928, 1, v17942, v17932, v17933, v17934, v17935, v17936, v17937, v17938, 0, v17929, v17940, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) :|: 0 = 0
f_2340(v17924, v17925, v17926, v17927, v17928, 1, v17942, v17932, v17933, v17934, v17935, v17936, v17937, v17938, 0, v17929, v17940, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) -> f_2343(v17924, v17925, v17926, v17927, v17928, 1, v17942, v17933, v17932, v17934, v17935, v17936, v17937, v17938, 0, v17929, v17940, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) :|: 0 = 0
f_2343(v17924, v17925, v17926, v17927, v17928, 1, v17942, v17933, v17932, v17934, v17935, v17936, v17937, v17938, 0, v17929, v17940, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) -> f_2346(v17924, v17925, v17926, v17927, v17928, 1, v17942, v18694, v17932, v17934, v17935, v17936, v17937, v17938, 0, v17929, v17940, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) :|: v18694 = v17942 * v17942
f_2346(v17924, v17925, v17926, v17927, v17928, 1, v17942, v18694, v17932, v17934, v17935, v17936, v17937, v17938, 0, v17929, v17940, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) -> f_2349(v17924, v17925, v17926, v17927, v17928, 1, v17942, v18694, v17934, v17935, v17936, v17937, v17938, 0, v17929, v17940, v17932, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) :|: 0 = 0
f_2349(v17924, v17925, v17926, v17927, v17928, 1, v17942, v18694, v17934, v17935, v17936, v17937, v17938, 0, v17929, v17940, v17932, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) -> f_2352(v17924, v17925, v17926, v17927, v17928, 1, v17942, v18694, v18695, v17935, v17936, v17937, v17938, 0, v17929, v17940, v17932, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) :|: v18695 = v18694 * v17942
f_2352(v17924, v17925, v17926, v17927, v17928, 1, v17942, v18694, v18695, v17935, v17936, v17937, v17938, 0, v17929, v17940, v17932, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) -> f_2354(v17924, v17925, v17926, v17927, v17928, 1, v17942, v18694, v18695, v17935, v17936, v17937, v17938, 0, v17929, v17940, v17932, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) :|: 0 = 0
f_2354(v17924, v17925, v17926, v17927, v17928, 1, v17942, v18694, v18695, v17935, v17936, v17937, v17938, 0, v17929, v17940, v17932, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) -> f_2356(v17924, v17925, v17926, v17927, v17928, 1, v17942, v18694, v18695, v17935, v17936, v17937, v17938, 0, v17929, v17940, v17932, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) :|: 0 = 0
f_2356(v17924, v17925, v17926, v17927, v17928, 1, v17942, v18694, v18695, v17935, v17936, v17937, v17938, 0, v17929, v17940, v17932, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) -> f_2358(v17924, v17925, v17926, v17927, v17928, 1, v17942, v18694, v18695, v17935, v17936, v17937, v17938, 0, v17929, v17940, v17932, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) :|: v17936 = v17935 * v17935
f_2358(v17924, v17925, v17926, v17927, v17928, 1, v17942, v18694, v18695, v17935, v17936, v17937, v17938, 0, v17929, v17940, v17932, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) -> f_2360(v17924, v17925, v17926, v17927, v17928, 1, v17942, v18694, v18695, v17935, v17936, v17937, v17938, 0, v17929, v17940, v17932, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) :|: 0 = 0
f_2360(v17924, v17925, v17926, v17927, v17928, 1, v17942, v18694, v18695, v17935, v17936, v17937, v17938, 0, v17929, v17940, v17932, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) -> f_2362(v17924, v17925, v17926, v17927, v17928, 1, v17942, v18694, v18695, v17935, v17936, v17937, v17938, 0, v17929, v17940, v17932, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) :|: v17937 = v17936 * v17935
f_2362(v17924, v17925, v17926, v17927, v17928, 1, v17942, v18694, v18695, v17935, v17936, v17937, v17938, 0, v17929, v17940, v17932, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) -> f_2364(v17924, v17925, v17926, v17927, v17928, 1, v17942, v18694, v18695, v17935, v17936, v17937, v18696, 0, v17929, v17940, v17932, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) :|: v18696 = v18695 + v17937
f_2364(v17924, v17925, v17926, v17927, v17928, 1, v17942, v18694, v18695, v17935, v17936, v17937, v18696, 0, v17929, v17940, v17932, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) -> f_2367(v17924, v17925, v17926, v17927, v17928, 1, v17942, v18694, v18695, v17935, v17936, v17937, v18696, 0, v17929, v17940, v17932, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) :|: 1 != v18696
f_2367(v17924, v17925, v17926, v17927, v17928, 1, v17942, v18694, v18695, v17935, v17936, v17937, v18696, 0, v17929, v17940, v17932, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) -> f_2370(v17924, v17925, v17926, v17927, v17928, 1, v17942, v18694, v18695, v17935, v17936, v17937, v18696, 0, v17929, v17940, v17932, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) :|: 0 = 0
f_2370(v17924, v17925, v17926, v17927, v17928, 1, v17942, v18694, v18695, v17935, v17936, v17937, v18696, 0, v17929, v17940, v17932, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) -> f_2373(v17924, v17925, v17926, v17927, v17928, 1, v17942, v18694, v18695, v17935, v17936, v17937, v18696, 0, v17929, v17940, v17932, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) :|: TRUE
f_2373(v17924, v17925, v17926, v17927, v17928, 1, v17942, v18694, v18695, v17935, v17936, v17937, v18696, 0, v17929, v17940, v17932, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) -> f_2376(v17924, v17925, v17926, v17927, v17928, 1, v17942, v18694, v18695, v17935, v17936, v17937, v18696, 0, v17940, v17932, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) :|: 0 = 0
f_2376(v17924, v17925, v17926, v17927, v17928, 1, v17942, v18694, v18695, v17935, v17936, v17937, v18696, 0, v17940, v17932, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 2, 1001, 4) -> f_2379(v17924, v17925, v17926, v17927, v17928, 1, v17942, v18694, v18695, v17935, v17936, v17937, v18696, 0, 2, v17940, v17932, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 1001, 4) :|: 0 = 0
f_2379(v17924, v17925, v17926, v17927, v17928, 1, v17942, v18694, v18695, v17935, v17936, v17937, v18696, 0, 2, v17940, v17932, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 1001, 4) -> f_2382(v17924, v17925, v17926, v17927, v17928, 1, v17942, v18694, v18695, v17935, v17936, v17937, v18696, 0, 2, v17940, v17932, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 1001, 4) :|: TRUE
f_2382(v17924, v17925, v17926, v17927, v17928, 1, v17942, v18694, v18695, v17935, v17936, v17937, v18696, 0, 2, v17940, v17932, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 1001, 4) -> f_2386(v17924, v17925, v17926, v17927, v17928, 1, v17942, v18694, v18695, v17935, v17936, v17937, v18696, 0, 2, v17932, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 4) :|: 0 = 0
f_2386(v17924, v17925, v17926, v17927, v17928, 1, v17942, v18694, v18695, v17935, v17936, v17937, v18696, 0, 2, v17932, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 4) -> f_2389(v17924, v17925, v17926, v17927, v17928, 1, v17942, v18694, v18695, v17935, v17936, v17937, v18696, 0, 2, v17932, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 4) :|: 0 = 0
f_2389(v17924, v17925, v17926, v17927, v17928, 1, v17942, v18694, v18695, v17935, v17936, v17937, v18696, 0, 2, v17932, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 4) -> f_2392(v17924, v17925, v17926, v17927, v17928, 1, v17942, v18694, v18695, v17935, v17936, v17937, v18696, 0, 2, v17932, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 4) :|: TRUE
f_2392(v17924, v17925, v17926, v17927, v17928, 1, v17942, v18694, v18695, v17935, v17936, v17937, v18696, 0, 2, v17932, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 999, 4) -> f_2286(v17924, v17925, v17926, v17927, v17928, 1, 1, 1, v17942, v18694, v18695, v17935, v17936, v17937, v18696, 0, 2, v17932, v17942, v17943, v17944, v17945, v17946, v17947, v17948, v17949, v17950, 1000, 3, 1, 999, 2, 4) :|: TRUE
f_2286(v17370, v17371, v17372, v17373, v17374, v17375, v17376, v17377, v17378, v17379, v17380, v17381, v17382, v17383, v17384, 0, v17386, v17387, v17388, v17389, v17390, v17391, v17392, v17393, v17394, v17395, v17396, 1000, 3, 1, 999, 2, 4) -> f_2290(v17370, v17371, v17372, v17373, v17374, v17375, v17376, v17377, v17378, v17379, v17380, v17381, v17382, v17383, v17384, 0, v17386, v17387, v17388, v17389, v17390, v17391, v17392, v17393, v17394, v17395, v17396, 1000, 3, 1, 999, 2, 4) :|: 0 = 0
f_2290(v17370, v17371, v17372, v17373, v17374, v17375, v17376, v17377, v17378, v17379, v17380, v17381, v17382, v17383, v17384, 0, v17386, v17387, v17388, v17389, v17390, v17391, v17392, v17393, v17394, v17395, v17396, 1000, 3, 1, 999, 2, 4) -> f_2293(v17370, v17371, v17372, v17373, v17374, v17375, v17376, v17377, v17378, v17379, v17380, v17381, v17382, v17383, v17384, 0, v17386, v17387, v17388, v17389, v17390, v17391, v17392, v17393, v17394, v17395, v17396, 1000, 3, 1, 999, 1001, 2, 4) :|: 1000 < v17378
f_2290(v17370, v17371, v17372, v17373, v17374, v17375, v17376, v17377, v17378, v17379, v17380, v17381, v17382, v17383, v17384, 0, v17386, v17387, v17388, v17389, v17390, v17391, v17392, v17393, v17394, v17395, v17396, 1000, 3, 1, 999, 2, 4) -> f_2294(v17370, v17371, v17372, v17373, v17374, v17375, v17376, v17377, v17378, v17379, v17380, v17381, v17382, v17383, v17384, 0, v17386, v17387, v17388, v17389, v17390, v17391, v17392, v17393, v17394, v17395, v17396, 1000, 3, 1, 999, 2, 4) :|: v17378 <= 1000
f_2293(v17370, v17371, v17372, v17373, v17374, v17375, v17376, v17377, v17378, v17379, v17380, v17381, v17382, v17383, v17384, 0, v17386, v17387, v17388, v17389, v17390, v17391, v17392, v17393, v17394, v17395, v17396, 1000, 3, 1, 999, 1001, 2, 4) -> f_2297(v17370, v17371, v17372, v17373, v17374, v17375, v17376, v17377, v17378, v17379, v17380, v17381, v17382, v17383, v17384, 0, v17386, 1, v17387, v17388, v17389, v17390, v17391, v17392, v17393, v17394, v17395, v17396, 1000, 3, 999, 1001, 2, 4) :|: 0 = 0
f_2297(v17370, v17371, v17372, v17373, v17374, v17375, v17376, v17377, v17378, v17379, v17380, v17381, v17382, v17383, v17384, 0, v17386, 1, v17387, v17388, v17389, v17390, v17391, v17392, v17393, v17394, v17395, v17396, 1000, 3, 999, 1001, 2, 4) -> f_2300(v17370, v17371, v17372, v17373, v17374, v17375, v17376, v17377, v17378, v17379, v17380, v17381, v17382, v17383, v17384, 0, v17386, 1, v17387, v17388, v17389, v17390, v17391, v17392, v17393, v17394, v17395, v17396, 1000, 3, 999, 1001, 2, 4) :|: TRUE
f_2300(v17370, v17371, v17372, v17373, v17374, v17375, v17376, v17377, v17378, v17379, v17380, v17381, v17382, v17383, v17384, 0, v17386, 1, v17387, v17388, v17389, v17390, v17391, v17392, v17393, v17394, v17395, v17396, 1000, 3, 999, 1001, 2, 4) -> f_2303(v17370, v17371, v17372, v17373, v17374, v17375, v17376, v17377, v17378, v17379, v17380, v17381, v17382, v17383, v17384, 0, v17386, 1, v17387, v17388, v17389, v17390, v17391, v17392, v17393, v17394, v17395, v17396, 1000, 3, 999, 1001, 2, 4) :|: TRUE
f_2303(v17370, v17371, v17372, v17373, v17374, v17375, v17376, v17377, v17378, v17379, v17380, v17381, v17382, v17383, v17384, 0, v17386, 1, v17387, v17388, v17389, v17390, v17391, v17392, v17393, v17394, v17395, v17396, 1000, 3, 999, 1001, 2, 4) -> f_2305(v17370, v17371, v17372, v17373, v17374, v17375, v17376, v17377, v17378, v17379, v17380, v17381, v17382, v17383, v17384, 0, v17386, 1, v17387, v17388, v17390, v17391, v17392, v17393, v17394, v17395, v17396, 1000, 3, 999, 1001, 2, 4) :|: 0 = 0
f_2305(v17370, v17371, v17372, v17373, v17374, v17375, v17376, v17377, v17378, v17379, v17380, v17381, v17382, v17383, v17384, 0, v17386, 1, v17387, v17388, v17390, v17391, v17392, v17393, v17394, v17395, v17396, 1000, 3, 999, 1001, 2, 4) -> f_2308(v17370, v17371, v17372, v17373, v17374, v17375, v17376, v17377, v17378, v17379, v17380, v17381, v17382, v17383, v17384, 0, v17386, 1, v17387, v17388, v17792, v17390, v17391, v17392, v17393, v17394, v17395, v17396, 1000, 3, 999, 1001, 2, 4) :|: v17792 = 1 + v17381 && 3 <= v17792 && v17792 <= 1001
f_2308(v17370, v17371, v17372, v17373, v17374, v17375, v17376, v17377, v17378, v17379, v17380, v17381, v17382, v17383, v17384, 0, v17386, 1, v17387, v17388, v17792, v17390, v17391, v17392, v17393, v17394, v17395, v17396, 1000, 3, 999, 1001, 2, 4) -> f_2311(v17370, v17371, v17372, v17373, v17374, v17375, v17376, v17377, v17378, v17379, v17380, v17381, v17382, v17383, v17384, 0, v17386, 1, v17387, v17388, v17792, v17390, v17391, v17392, v17393, v17394, v17395, v17396, 1000, 3, 999, 1001, 2, 4) :|: TRUE
f_2311(v17370, v17371, v17372, v17373, v17374, v17375, v17376, v17377, v17378, v17379, v17380, v17381, v17382, v17383, v17384, 0, v17386, 1, v17387, v17388, v17792, v17390, v17391, v17392, v17393, v17394, v17395, v17396, 1000, 3, 999, 1001, 2, 4) -> f_2315(v17370, v17371, v17372, v17373, v17374, v17375, v17376, v17377, v17378, v17379, v17380, v17381, v17382, v17383, v17384, 0, v17386, 1, v17387, v17388, v17792, v17390, v17391, v17392, v17393, v17394, v17395, v17396, 1000, 3, 999, 1001, 2, 4) :|: TRUE
f_2315(v17370, v17371, v17372, v17373, v17374, v17375, v17376, v17377, v17378, v17379, v17380, v17381, v17382, v17383, v17384, 0, v17386, 1, v17387, v17388, v17792, v17390, v17391, v17392, v17393, v17394, v17395, v17396, 1000, 3, 999, 1001, 2, 4) -> f_2092(v17370, v17371, v17372, v17373, v17374, v17375, v17376, v17377, v17378, v17379, v17380, v17381, v17382, v17383, v17384, 0, v17386, 1, v17387, v17388, v17792, v17390, v17391, v17392, v17393, v17394, v17395, v17396, 1000, 3, 1001, 2, 4) :|: TRUE
f_2092(v15471, v15472, v15473, v15474, v15475, v15476, v15477, v15478, v15479, v15480, v15481, v15482, v15483, v15484, v15485, 0, v15487, 1, v15489, v15490, v15491, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 2, 4) -> f_2095(v15471, v15472, v15473, v15474, v15475, v15476, v15477, v15478, v15479, v15480, v15481, v15482, v15483, v15484, v15485, 0, v15487, 1, v15491, v15489, v15490, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 2, 4) :|: 0 = 0
f_2294(v17370, v17371, v17372, v17373, v17374, v17375, v17376, v17377, v17378, v17379, v17380, v17381, v17382, v17383, v17384, 0, v17386, v17387, v17388, v17389, v17390, v17391, v17392, v17393, v17394, v17395, v17396, 1000, 3, 1, 999, 2, 4) -> f_2298(v17370, v17371, v17372, v17373, v17374, v17375, v17376, v17377, v17378, v17379, v17380, v17381, v17382, v17383, v17384, 0, v17386, v17387, v17388, v17389, v17390, v17391, v17392, v17393, v17394, v17395, v17396, 1000, 3, 1, 999, 2, 4) :|: 0 = 0
f_2298(v17370, v17371, v17372, v17373, v17374, v17375, v17376, v17377, v17378, v17379, v17380, v17381, v17382, v17383, v17384, 0, v17386, v17387, v17388, v17389, v17390, v17391, v17392, v17393, v17394, v17395, v17396, 1000, 3, 1, 999, 2, 4) -> f_2301(v17370, v17371, v17372, v17373, v17374, v17375, v17376, v17377, v17378, v17379, v17380, v17381, v17382, v17383, v17384, 0, v17386, v17387, v17388, v17389, v17390, v17391, v17392, v17393, v17394, v17395, v17396, 1000, 3, 1, 999, 2, 4) :|: TRUE
f_2301(v17370, v17371, v17372, v17373, v17374, v17375, v17376, v17377, v17378, v17379, v17380, v17381, v17382, v17383, v17384, 0, v17386, v17387, v17388, v17389, v17390, v17391, v17392, v17393, v17394, v17395, v17396, 1000, 3, 1, 999, 2, 4) -> f_2199(v17370, v17371, v17372, v17373, v17374, v17375, v17376, v17377, v17378, v17379, v17380, v17381, v17382, v17383, v17384, 0, v17386, v17387, v17388, v17389, v17390, v17391, v17392, v17393, v17394, v17395, v17396, 1000, 3, 1, 999, 2, 4) :|: TRUE
f_2199(v16262, v16263, v16264, v16265, v16266, v16267, v16268, v16269, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16278, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) -> f_2201(v16262, v16263, v16264, v16265, v16266, v16267, v16268, v16269, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16278, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) :|: 0 = 0
f_2201(v16262, v16263, v16264, v16265, v16266, v16267, v16268, v16269, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16278, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) -> f_2204(v16262, v16263, v16264, v16265, v16266, v16267, v16268, v16269, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16278, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) :|: v16273 <= 1000 && v16281 <= 999
f_2204(v16262, v16263, v16264, v16265, v16266, v16267, v16268, v16269, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16278, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) -> f_2207(v16262, v16263, v16264, v16265, v16266, v16267, v16268, v16269, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16278, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) :|: 0 = 0
f_2207(v16262, v16263, v16264, v16265, v16266, v16267, v16268, v16269, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16278, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) -> f_2210(v16262, v16263, v16264, v16265, v16266, v16267, v16268, v16269, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16278, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) :|: TRUE
f_2210(v16262, v16263, v16264, v16265, v16266, v16267, v16268, v16269, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16278, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) -> f_2213(v16262, v16263, v16264, v16265, v16266, v16267, v16268, v16269, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16278, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) :|: TRUE
f_2213(v16262, v16263, v16264, v16265, v16266, v16267, v16268, v16269, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16278, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) -> f_2216(v16262, v16263, v16264, v16265, v16266, v16278, v16267, v16268, v16269, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) :|: 0 = 0
f_2216(v16262, v16263, v16264, v16265, v16266, v16278, v16267, v16268, v16269, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) -> f_2219(v16262, v16263, v16264, v16265, v16266, v16278, v16268, v16267, v16269, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) :|: 0 = 0
f_2219(v16262, v16263, v16264, v16265, v16266, v16278, v16268, v16267, v16269, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) -> f_2222(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16267, v16269, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) :|: v16821 = v16278 * v16278
f_2222(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16267, v16269, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) -> f_2225(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16269, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16267, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) :|: 0 = 0
f_2225(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16269, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16267, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) -> f_2227(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16267, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) :|: v16926 = v16821 * v16278
f_2227(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16267, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) -> f_2229(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16267, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) :|: 0 = 0
f_2229(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16267, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) -> f_2231(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16267, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) :|: 0 = 0
f_2231(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16267, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) -> f_2233(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16267, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) :|: v16271 = v16270 * v16270
f_2233(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16267, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) -> f_2235(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16267, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) :|: 0 = 0
f_2235(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16267, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) -> f_2237(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16267, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) :|: v16272 = v16271 * v16270
f_2237(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16267, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) -> f_2239(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16267, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) :|: 0 = 0
f_2239(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16267, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) -> f_2241(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16267, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) :|: 0 = 0
f_2241(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16267, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) -> f_2243(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16267, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) :|: v16274 = v16273 * v16273
f_2243(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16267, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) -> f_2245(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16267, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) :|: 0 = 0
f_2245(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16267, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) -> f_2247(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16267, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) :|: v16275 = v16274 * v16273
f_2247(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16276, 0, v16267, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) -> f_2249(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, v16267, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) :|: v16927 = v16272 + v16275
f_2249(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, v16267, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) -> f_2252(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, v16267, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) :|: v16926 != v16927
f_2252(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, v16267, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) -> f_2255(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, v16267, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) :|: 0 = 0
f_2255(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, v16267, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) -> f_2258(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, v16267, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) :|: TRUE
f_2258(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, v16267, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) -> f_2261(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 2, 999, 4) :|: 0 = 0
f_2261(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 2, 999, 4) -> f_2265(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, v17098, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 2, 999, 4, 1001) :|: v17098 = 1 + v16278 && 3 <= v17098 && v17098 <= 1001
f_2265(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, v17098, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 2, 999, 4, 1001) -> f_2269(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, v17098, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 2, 999, 4, 1001) :|: TRUE
f_2269(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, v17098, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 2, 999, 4, 1001) -> f_2273(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, v17098, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 2, 999, 4, 1001) :|: 0 = 0
f_2273(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, v17098, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 2, 999, 4, 1001) -> f_2276(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, 1001, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 1, 2, 999, 4) :|: 1000 < v17098 && v16278 = 1000 && v17098 = 1001 && 0 = 0 && v16821 = 1000000 && v16926 = 1000000000
f_2273(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, v17098, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 2, 999, 4, 1001) -> f_2277(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, v17098, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 2, 999, 4) :|: v17098 <= 1000 && v16278 <= 999
f_2276(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, 1001, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 1, 2, 999, 4) -> f_2280(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, 1001, 1, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 2, 999, 4) :|: 0 = 0
f_2280(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, 1001, 1, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 2, 999, 4) -> f_2284(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, 1001, 1, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 2, 999, 4) :|: TRUE
f_2284(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, 1001, 1, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 2, 999, 4) -> f_2289(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, 1001, 1, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 2, 999, 4) :|: TRUE
f_2289(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, 1001, 1, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 2, 999, 4) -> f_2292(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, 1001, 1, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 2, 999, 4) :|: 0 = 0
f_2292(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, 1001, 1, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 2, 999, 4) -> f_2296(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, 1001, 1, v17548, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 2, 999, 4) :|: v17548 = 1 + v16270 && 2 <= v17548 && v17548 <= 1001
f_2296(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, 1001, 1, v17548, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 2, 999, 4) -> f_2299(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, 1001, 1, v17548, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 2, 999, 4) :|: TRUE
f_2299(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, 1001, 1, v17548, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 2, 999, 4) -> f_2302(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, 1001, 1, v17548, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 2, 999, 4) :|: TRUE
f_2302(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, 1001, 1, v17548, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 2, 999, 4) -> f_2304(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, 1001, 1, v17548, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 2, 999, 4) :|: 0 = 0
f_2304(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, 1001, 1, v17548, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 2, 999, 4) -> f_2306(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16273, v16274, v16275, v16927, 0, 1001, 1, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 2, 999, 4) :|: 1000 < v17548 && v16270 = 1000 && v17548 = 1001 && 0 = 0 && v16271 = 1000000 && v16272 = 1000000000
f_2304(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, 1001, 1, v17548, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 2, 999, 4) -> f_2307(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, 1001, 1, v17548, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 999, 2, 4) :|: v17548 <= 1000 && v16270 <= 999
f_2306(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16273, v16274, v16275, v16927, 0, 1001, 1, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 2, 999, 4) -> f_2309(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16273, v16274, v16275, v16927, 0, 1001, 1, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 2, 999, 4) :|: 0 = 0
f_2309(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16273, v16274, v16275, v16927, 0, 1001, 1, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 2, 999, 4) -> f_2312(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16273, v16274, v16275, v16927, 0, 1001, 1, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 2, 999, 4) :|: TRUE
f_2312(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16273, v16274, v16275, v16927, 0, 1001, 1, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 2, 999, 4) -> f_2316(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16273, v16274, v16275, v16927, 0, 1001, 1, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 2, 999, 4) :|: TRUE
f_2316(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16273, v16274, v16275, v16927, 0, 1001, 1, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 2, 999, 4) -> f_2318(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16273, v16274, v16275, v16927, 0, 1001, 1, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 2, 4) :|: 0 = 0
f_2318(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16273, v16274, v16275, v16927, 0, 1001, 1, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 2, 4) -> f_2320(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16273, v16274, v16275, v16927, 0, 1001, 1, v18062, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 2, 4) :|: v18062 = 1 + v16273 && 3 <= v18062 && v18062 <= 1001
f_2320(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16273, v16274, v16275, v16927, 0, 1001, 1, v18062, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 2, 4) -> f_2322(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16273, v16274, v16275, v16927, 0, 1001, 1, v18062, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 2, 4) :|: TRUE
f_2322(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16273, v16274, v16275, v16927, 0, 1001, 1, v18062, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 2, 4) -> f_2324(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16273, v16274, v16275, v16927, 0, 1001, 1, v18062, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 2, 4) :|: TRUE
f_2324(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16273, v16274, v16275, v16927, 0, 1001, 1, v18062, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 2, 4) -> f_2325(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, 1000, 1000000, 1000000000, v16273, v16274, v16275, v16927, 0, 1001, 1, 1001, v18062, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1001, 2, 4) :|: TRUE
f_2325(v18329, v18330, v18331, v18332, v18333, v18334, v18335, v18336, v18337, v18338, v18339, v18340, v18341, v18342, v18343, 0, v18345, 1, v18347, v18348, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 1001, 2, 4) -> f_2327(v18329, v18330, v18331, v18332, v18333, v18334, v18335, v18336, v18337, v18338, v18339, v18340, v18341, v18342, v18343, 0, v18345, 1, v18347, v18348, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 1001, 2, 4) :|: 0 = 0
f_2327(v18329, v18330, v18331, v18332, v18333, v18334, v18335, v18336, v18337, v18338, v18339, v18340, v18341, v18342, v18343, 0, v18345, 1, v18347, v18348, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 1001, 2, 4) -> f_2330(v18329, v18330, v18331, v18332, v18333, v18334, v18335, v18336, v18337, v18338, v18339, v18340, v18341, v18342, v18343, 0, v18345, 1, v18347, v18348, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) :|: v18348 <= 1000 && v18340 <= 999
f_2330(v18329, v18330, v18331, v18332, v18333, v18334, v18335, v18336, v18337, v18338, v18339, v18340, v18341, v18342, v18343, 0, v18345, 1, v18347, v18348, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) -> f_2333(v18329, v18330, v18331, v18332, v18333, v18334, v18335, v18336, v18337, v18338, v18339, v18340, v18341, v18342, v18343, 0, v18345, 1, v18347, v18348, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) :|: 0 = 0
f_2333(v18329, v18330, v18331, v18332, v18333, v18334, v18335, v18336, v18337, v18338, v18339, v18340, v18341, v18342, v18343, 0, v18345, 1, v18347, v18348, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) -> f_2336(v18329, v18330, v18331, v18332, v18333, v18334, v18335, v18336, v18337, v18338, v18339, v18340, v18341, v18342, v18343, 0, v18345, 1, v18347, v18348, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) :|: TRUE
f_2336(v18329, v18330, v18331, v18332, v18333, v18334, v18335, v18336, v18337, v18338, v18339, v18340, v18341, v18342, v18343, 0, v18345, 1, v18347, v18348, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) -> f_2339(v18329, v18330, v18331, v18332, v18333, v18334, v18335, v18336, v18337, v18338, v18339, v18340, v18341, v18342, v18343, 0, v18345, 1, v18347, v18348, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) :|: TRUE
f_2339(v18329, v18330, v18331, v18332, v18333, v18334, v18335, v18336, v18337, v18338, v18339, v18340, v18341, v18342, v18343, 0, v18345, 1, v18347, v18348, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) -> f_2342(v18329, v18330, v18331, v18332, v18333, 1, v18334, v18335, v18336, v18337, v18338, v18339, v18340, v18341, v18342, v18343, 0, v18345, v18347, v18348, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) :|: 0 = 0
f_2342(v18329, v18330, v18331, v18332, v18333, 1, v18334, v18335, v18336, v18337, v18338, v18339, v18340, v18341, v18342, v18343, 0, v18345, v18347, v18348, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) -> f_2345(v18329, v18330, v18331, v18332, v18333, 1, v18335, v18334, v18336, v18337, v18338, v18339, v18340, v18341, v18342, v18343, 0, v18345, v18347, v18348, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) :|: 0 = 0
f_2345(v18329, v18330, v18331, v18332, v18333, 1, v18335, v18334, v18336, v18337, v18338, v18339, v18340, v18341, v18342, v18343, 0, v18345, v18347, v18348, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) -> f_2348(v18329, v18330, v18331, v18332, v18333, 1, v18334, v18336, v18337, v18338, v18339, v18340, v18341, v18342, v18343, 0, v18345, v18347, v18348, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) :|: 0 = 0
f_2348(v18329, v18330, v18331, v18332, v18333, 1, v18334, v18336, v18337, v18338, v18339, v18340, v18341, v18342, v18343, 0, v18345, v18347, v18348, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) -> f_2351(v18329, v18330, v18331, v18332, v18333, 1, v18336, v18337, v18338, v18339, v18340, v18341, v18342, v18343, 0, v18334, v18345, v18347, v18348, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) :|: 0 = 0
f_2351(v18329, v18330, v18331, v18332, v18333, 1, v18336, v18337, v18338, v18339, v18340, v18341, v18342, v18343, 0, v18334, v18345, v18347, v18348, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) -> f_2353(v18329, v18330, v18331, v18332, v18333, 1, v18337, v18338, v18339, v18340, v18341, v18342, v18343, 0, v18334, v18345, v18347, v18348, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) :|: 0 = 0
f_2353(v18329, v18330, v18331, v18332, v18333, 1, v18337, v18338, v18339, v18340, v18341, v18342, v18343, 0, v18334, v18345, v18347, v18348, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) -> f_2355(v18329, v18330, v18331, v18332, v18333, 1, v18337, v18338, v18339, v18340, v18341, v18342, v18343, 0, v18334, v18345, v18347, v18348, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) :|: 0 = 0
f_2355(v18329, v18330, v18331, v18332, v18333, 1, v18337, v18338, v18339, v18340, v18341, v18342, v18343, 0, v18334, v18345, v18347, v18348, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) -> f_2357(v18329, v18330, v18331, v18332, v18333, 1, v18338, v18337, v18339, v18340, v18341, v18342, v18343, 0, v18334, v18345, v18347, v18348, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) :|: 0 = 0
f_2357(v18329, v18330, v18331, v18332, v18333, 1, v18338, v18337, v18339, v18340, v18341, v18342, v18343, 0, v18334, v18345, v18347, v18348, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) -> f_2359(v18329, v18330, v18331, v18332, v18333, 1, v18337, v18339, v18340, v18341, v18342, v18343, 0, v18334, v18345, v18347, v18348, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) :|: 0 = 0
f_2359(v18329, v18330, v18331, v18332, v18333, 1, v18337, v18339, v18340, v18341, v18342, v18343, 0, v18334, v18345, v18347, v18348, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) -> f_2361(v18329, v18330, v18331, v18332, v18333, 1, v18339, v18340, v18341, v18342, v18343, 0, v18334, v18345, v18347, v18348, v18337, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) :|: 0 = 0
f_2361(v18329, v18330, v18331, v18332, v18333, 1, v18339, v18340, v18341, v18342, v18343, 0, v18334, v18345, v18347, v18348, v18337, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) -> f_2363(v18329, v18330, v18331, v18332, v18333, 1, v18340, v18341, v18342, v18343, 0, v18334, v18345, v18347, v18348, v18337, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) :|: 0 = 0
f_2363(v18329, v18330, v18331, v18332, v18333, 1, v18340, v18341, v18342, v18343, 0, v18334, v18345, v18347, v18348, v18337, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) -> f_2365(v18329, v18330, v18331, v18332, v18333, 1, v18348, v18340, v18341, v18342, v18343, 0, v18334, v18345, v18347, v18337, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) :|: 0 = 0
f_2365(v18329, v18330, v18331, v18332, v18333, 1, v18348, v18340, v18341, v18342, v18343, 0, v18334, v18345, v18347, v18337, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) -> f_2368(v18329, v18330, v18331, v18332, v18333, 1, v18348, v18341, v18340, v18342, v18343, 0, v18334, v18345, v18347, v18337, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) :|: 0 = 0
f_2368(v18329, v18330, v18331, v18332, v18333, 1, v18348, v18341, v18340, v18342, v18343, 0, v18334, v18345, v18347, v18337, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) -> f_2371(v18329, v18330, v18331, v18332, v18333, 1, v18348, v18697, v18340, v18342, v18343, 0, v18334, v18345, v18347, v18337, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) :|: v18697 = v18348 * v18348
f_2371(v18329, v18330, v18331, v18332, v18333, 1, v18348, v18697, v18340, v18342, v18343, 0, v18334, v18345, v18347, v18337, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) -> f_2374(v18329, v18330, v18331, v18332, v18333, 1, v18348, v18697, v18342, v18343, 0, v18334, v18345, v18347, v18337, v18340, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) :|: 0 = 0
f_2374(v18329, v18330, v18331, v18332, v18333, 1, v18348, v18697, v18342, v18343, 0, v18334, v18345, v18347, v18337, v18340, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) -> f_2377(v18329, v18330, v18331, v18332, v18333, 1, v18348, v18697, v18815, v18343, 0, v18334, v18345, v18347, v18337, v18340, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) :|: v18815 = v18697 * v18348
f_2377(v18329, v18330, v18331, v18332, v18333, 1, v18348, v18697, v18815, v18343, 0, v18334, v18345, v18347, v18337, v18340, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) -> f_2380(v18329, v18330, v18331, v18332, v18333, 1, v18348, v18697, v18815, v18868, 0, v18334, v18345, v18347, v18337, v18340, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) :|: v18868 = 1 + v18815
f_2380(v18329, v18330, v18331, v18332, v18333, 1, v18348, v18697, v18815, v18868, 0, v18334, v18345, v18347, v18337, v18340, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) -> f_2384(v18329, v18330, v18331, v18332, v18333, 1, v18348, v18697, v18815, v18868, 0, v18334, v18345, v18347, v18337, v18340, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) :|: 1 != v18868
f_2384(v18329, v18330, v18331, v18332, v18333, 1, v18348, v18697, v18815, v18868, 0, v18334, v18345, v18347, v18337, v18340, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) -> f_2388(v18329, v18330, v18331, v18332, v18333, 1, v18348, v18697, v18815, v18868, 0, v18334, v18345, v18347, v18337, v18340, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) :|: 0 = 0
f_2388(v18329, v18330, v18331, v18332, v18333, 1, v18348, v18697, v18815, v18868, 0, v18334, v18345, v18347, v18337, v18340, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) -> f_2391(v18329, v18330, v18331, v18332, v18333, 1, v18348, v18697, v18815, v18868, 0, v18334, v18345, v18347, v18337, v18340, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) :|: TRUE
f_2391(v18329, v18330, v18331, v18332, v18333, 1, v18348, v18697, v18815, v18868, 0, v18334, v18345, v18347, v18337, v18340, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) -> f_2394(v18329, v18330, v18331, v18332, v18333, 1, v18348, v18697, v18815, v18868, 0, v18345, v18347, v18337, v18340, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) :|: 0 = 0
f_2394(v18329, v18330, v18331, v18332, v18333, 1, v18348, v18697, v18815, v18868, 0, v18345, v18347, v18337, v18340, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 2, 4) -> f_2396(v18329, v18330, v18331, v18332, v18333, 1, v18348, v18697, v18815, v18868, 0, 2, v18345, v18347, v18337, v18340, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 4) :|: 0 = 0
f_2396(v18329, v18330, v18331, v18332, v18333, 1, v18348, v18697, v18815, v18868, 0, 2, v18345, v18347, v18337, v18340, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 4) -> f_2398(v18329, v18330, v18331, v18332, v18333, 1, v18348, v18697, v18815, v18868, 0, 2, v18345, v18347, v18337, v18340, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 4) :|: TRUE
f_2398(v18329, v18330, v18331, v18332, v18333, 1, v18348, v18697, v18815, v18868, 0, 2, v18345, v18347, v18337, v18340, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 4) -> f_2400(v18329, v18330, v18331, v18332, v18333, 1, v18348, v18697, v18815, v18868, 0, 2, v18347, v18337, v18340, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 4) :|: 0 = 0
f_2400(v18329, v18330, v18331, v18332, v18333, 1, v18348, v18697, v18815, v18868, 0, 2, v18347, v18337, v18340, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 4) -> f_2401(v18329, v18330, v18331, v18332, v18333, 1, v18348, v18697, v18815, v18868, 0, 2, v18347, v18337, v18340, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 4) :|: 0 = 0
f_2401(v18329, v18330, v18331, v18332, v18333, 1, v18348, v18697, v18815, v18868, 0, 2, v18347, v18337, v18340, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 4) -> f_2402(v18329, v18330, v18331, v18332, v18333, 1, v18348, v18697, v18815, v18868, 0, 2, v18347, v18337, v18340, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 4) :|: TRUE
f_2402(v18329, v18330, v18331, v18332, v18333, 1, v18348, v18697, v18815, v18868, 0, 2, v18347, v18337, v18340, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 1001, 4) -> f_2188(v18329, v18330, v18331, v18332, v18333, 1, 1, 1, 1, v18348, v18697, v18815, v18868, 0, 2, v18347, v18337, v18347, v18340, v18349, v18350, v18351, v18352, v18353, v18354, v18355, 1000, 3, 999, 2, 1001, 4) :|: TRUE
f_2188(v16062, v16063, v16064, v16065, v16066, v16067, v16068, v16069, 1, v16071, v16072, v16073, v16074, 0, v16076, v16077, v16078, v16079, v16080, v16081, v16082, v16083, v16084, v16085, v16086, v16087, 1000, 3, 999, 2, 1001, 4) -> f_2191(v16062, v16063, v16064, v16065, v16066, v16067, v16068, v16069, 1, v16071, v16072, v16073, v16074, 0, v16076, v16078, v16079, v16080, v16081, v16082, v16083, v16084, v16085, v16086, v16087, 1000, 3, 999, 2, 4) :|: 0 = 0
f_2191(v16062, v16063, v16064, v16065, v16066, v16067, v16068, v16069, 1, v16071, v16072, v16073, v16074, 0, v16076, v16078, v16079, v16080, v16081, v16082, v16083, v16084, v16085, v16086, v16087, 1000, 3, 999, 2, 4) -> f_2194(v16062, v16063, v16064, v16065, v16066, v16067, v16068, v16069, 1, v16071, v16072, v16073, v16074, 0, v16076, v16078, v16079, v16080, v16081, v16082, v16083, v16084, v16085, v16086, v16087, 1000, 3, 999, 2, 4) :|: 0 = 0
f_2194(v16062, v16063, v16064, v16065, v16066, v16067, v16068, v16069, 1, v16071, v16072, v16073, v16074, 0, v16076, v16078, v16079, v16080, v16081, v16082, v16083, v16084, v16085, v16086, v16087, 1000, 3, 999, 2, 4) -> f_2198(v16062, v16063, v16064, v16065, v16066, v16067, v16068, v16069, 1, v16071, v16072, v16073, v16074, 0, v16076, v16078, v16079, v16080, v16081, v16082, v16083, v16084, v16085, v16086, v16087, 1000, 3, 999, 2, 4) :|: TRUE
f_2198(v16062, v16063, v16064, v16065, v16066, v16067, v16068, v16069, 1, v16071, v16072, v16073, v16074, 0, v16076, v16078, v16079, v16080, v16081, v16082, v16083, v16084, v16085, v16086, v16087, 1000, 3, 999, 2, 4) -> f_2199(v16062, v16063, v16064, v16065, v16066, v16067, v16068, v16069, 1, 1, 1, v16071, v16072, v16073, v16074, 0, v16076, v16078, v16079, v16080, v16081, v16082, v16083, v16084, v16085, v16086, v16087, 1000, 3, 1, 999, 2, 4) :|: TRUE
f_2307(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, 1001, 1, v17548, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 999, 2, 4) -> f_2310(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, 1001, 1, v17548, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 999, 2, 4) :|: 0 = 0
f_2310(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, 1001, 1, v17548, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 999, 2, 4) -> f_2313(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, 1001, 1, v17548, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 999, 2, 4) :|: TRUE
f_2313(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, 1001, 1, v17548, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 3, 999, 2, 4) -> f_2314(v16262, v16263, v16264, v16265, v16266, 1000, 1000000, 1000000000, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, 1001, 1, v17548, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 999, 2, 1001, 4) :|: TRUE
f_2277(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, v17098, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 2, 999, 4) -> f_2281(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, v17098, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 2, 999, 4) :|: 0 = 0
f_2281(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, v17098, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 2, 999, 4) -> f_2285(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, v17098, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 2, 999, 4) :|: TRUE
f_2285(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, v17098, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 2, 999, 4) -> f_2286(v16262, v16263, v16264, v16265, v16266, v16278, v16821, v16926, v16270, v16271, v16272, v16273, v16274, v16275, v16927, 0, v17098, v16279, v16280, v16281, v16282, v16283, v16284, v16285, v16286, v16287, v16288, 1000, 3, 1, 999, 2, 4) :|: TRUE
f_2181(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15870, v15479, v15489, v15490, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) -> f_2184(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15870, v15479, v15489, v15490, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) :|: 0 = 0
f_2184(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15870, v15479, v15489, v15490, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) -> f_2187(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15870, v15479, v15489, v15490, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) :|: TRUE
f_2187(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15870, v15479, v15489, v15490, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 1001, 999, 2, 4) -> f_2188(v15471, v15472, v15473, v15474, v15475, v15487, v15678, v15679, 1, v15491, v15681, v15733, v15734, 0, v15870, v15479, v15489, v15490, v15482, v15492, v15493, v15494, v15495, v15496, v15497, v15498, 1000, 3, 999, 2, 1001, 4) :|: TRUE
Combined rules. Obtained 17 rulesP rules:
f_2273(v16262:0, v16263:0, v16264:0, v16265:0, v16266:0, v16278:0, v16821:0, v16926:0, v16270:0, v16271:0, v16272:0, v16273:0, v16274:0, v16275:0, v16927:0, 0, v17098:0, v16279:0, v16280:0, v16281:0, v16282:0, v16283:0, v16284:0, v16285:0, v16286:0, v16287:0, v16288:0, 1000, 3, 1, 2, 999, 4, 1001) -> f_2290(v16262:0, v16263:0, v16264:0, v16265:0, v16266:0, v16278:0, v16821:0, v16926:0, v16270:0, v16271:0, v16272:0, v16273:0, v16274:0, v16275:0, v16927:0, 0, v17098:0, v16279:0, v16280:0, v16281:0, v16282:0, v16283:0, v16284:0, v16285:0, v16286:0, v16287:0, v16288:0, 1000, 3, 1, 999, 2, 4) :|: v17098:0 < 1001 && v16278:0 < 1000
f_2273(v16262:0, v16263:0, v16264:0, v16265:0, v16266:0, 1000, 1000000, 1000000000, v16270:0, v16271:0, v16272:0, v16273:0, v16273:0 * v16273:0, v16273:0 * v16273:0 * v16273:0, v16927:0, 0, 1001, v16279:0, v16280:0, v16281:0, v16282:0, v16283:0, v16284:0, v16285:0, v16286:0, v16287:0, v16288:0, 1000, 3, 1, 2, 999, 4, 1001) -> f_2290(v16262:0, v16263:0, v16264:0, v16265:0, v16266:0, 1, 1, 1, 1 + v16270:0, (1 + v16270:0) * (1 + v16270:0), (1 + v16270:0) * (1 + v16270:0) * (1 + v16270:0), v16273:0, v16273:0 * v16273:0, v16273:0 * v16273:0 * v16273:0, (1 + v16270:0) * (1 + v16270:0) * (1 + v16270:0) + v16273:0 * v16273:0 * v16273:0, 0, 2, v16270:0, 1 + v16270:0, v16281:0, v16282:0, v16283:0, v16284:0, v16285:0, v16286:0, v16287:0, v16288:0, 1000, 3, 1, 999, 2, 4) :|: (1 + v16270:0) * (1 + v16270:0) * (1 + v16270:0) + v16273:0 * v16273:0 * v16273:0 > 1 && v16270:0 > 0 && v16270:0 < 1001 && v16270:0 < 1000
f_2273(v16262:0, v16263:0, v16264:0, v16265:0, v16266:0, 1000, 1000000, 1000000000, v16270:0, v16271:0, v16272:0, v16273:0, v16273:0 * v16273:0, v16273:0 * v16273:0 * v16273:0, v16927:0, 0, 1001, v16279:0, v16280:0, v16281:0, v16282:0, v16283:0, v16284:0, v16285:0, v16286:0, v16287:0, v16288:0, 1000, 3, 1, 2, 999, 4, 1001) -> f_2290(v16262:0, v16263:0, v16264:0, v16265:0, v16266:0, 1, 1, 1, 1 + v16270:0, (1 + v16270:0) * (1 + v16270:0), (1 + v16270:0) * (1 + v16270:0) * (1 + v16270:0), v16273:0, v16273:0 * v16273:0, v16273:0 * v16273:0 * v16273:0, (1 + v16270:0) * (1 + v16270:0) * (1 + v16270:0) + v16273:0 * v16273:0 * v16273:0, 0, 2, v16270:0, 1 + v16270:0, v16281:0, v16282:0, v16283:0, v16284:0, v16285:0, v16286:0, v16287:0, v16288:0, 1000, 3, 1, 999, 2, 4) :|: (1 + v16270:0) * (1 + v16270:0) * (1 + v16270:0) + v16273:0 * v16273:0 * v16273:0 < 1 && v16270:0 > 0 && v16270:0 < 1001 && v16270:0 < 1000
f_2273(v16262:0, v16263:0, v16264:0, v16265:0, v16266:0, 1000, 1000000, 1000000000, 1000, 1000000, 1000000000, v16273:0, v16274:0, v16275:0, v16927:0, 0, 1001, v16279:0, v16280:0, v16281:0, v16282:0, v16283:0, v16284:0, v16285:0, v16286:0, v16287:0, v16288:0, 1000, 3, 1, 2, 999, 4, 1001) -> f_2273(v16262:0, v16263:0, v16264:0, v16265:0, v16266:0, 2, 4, 8, 1, 1, 1, 1 + v16273:0, (1 + v16273:0) * (1 + v16273:0), (1 + v16273:0) * (1 + v16273:0) * (1 + v16273:0), 1 + (1 + v16273:0) * (1 + v16273:0) * (1 + v16273:0), 0, 3, 1000, 1001, v16273:0, v16282:0, v16283:0, v16284:0, v16285:0, v16286:0, v16287:0, v16288:0, 1000, 3, 1, 2, 999, 4, 1001) :|: 7 < (1 + v16273:0) * (1 + v16273:0) * (1 + v16273:0) && v16273:0 > 1 && v16273:0 < 1001 && v16273:0 < 1000
f_2273(v16262:0, v16263:0, v16264:0, v16265:0, v16266:0, 1000, 1000000, 1000000000, 1000, 1000000, 1000000000, v16273:0, v16274:0, v16275:0, v16927:0, 0, 1001, v16279:0, v16280:0, v16281:0, v16282:0, v16283:0, v16284:0, v16285:0, v16286:0, v16287:0, v16288:0, 1000, 3, 1, 2, 999, 4, 1001) -> f_2273(v16262:0, v16263:0, v16264:0, v16265:0, v16266:0, 2, 4, 8, 1, 1, 1, 1 + v16273:0, (1 + v16273:0) * (1 + v16273:0), (1 + v16273:0) * (1 + v16273:0) * (1 + v16273:0), 1 + (1 + v16273:0) * (1 + v16273:0) * (1 + v16273:0), 0, 3, 1000, 1001, v16273:0, v16282:0, v16283:0, v16284:0, v16285:0, v16286:0, v16287:0, v16288:0, 1000, 3, 1, 2, 999, 4, 1001) :|: v16273:0 > 1 && v16273:0 < 1001 && v16273:0 < 1000 && 7 > (1 + v16273:0) * (1 + v16273:0) * (1 + v16273:0) && (1 + v16273:0) * (1 + v16273:0) * (1 + v16273:0) > 0
f_2273(v16262:0, v16263:0, v16264:0, v16265:0, v16266:0, 1000, 1000000, 1000000000, 1000, 1000000, 1000000000, v16273:0, v16274:0, v16275:0, v16927:0, 0, 1001, v16279:0, v16280:0, v16281:0, v16282:0, v16283:0, v16284:0, v16285:0, v16286:0, v16287:0, v16288:0, 1000, 3, 1, 2, 999, 4, 1001) -> f_2273(v16262:0, v16263:0, v16264:0, v16265:0, v16266:0, 2, 4, 8, 1, 1, 1, 1 + v16273:0, (1 + v16273:0) * (1 + v16273:0), (1 + v16273:0) * (1 + v16273:0) * (1 + v16273:0), 1 + (1 + v16273:0) * (1 + v16273:0) * (1 + v16273:0), 0, 3, 1000, 1001, v16273:0, v16282:0, v16283:0, v16284:0, v16285:0, v16286:0, v16287:0, v16288:0, 1000, 3, 1, 2, 999, 4, 1001) :|: v16273:0 > 1 && v16273:0 < 1001 && v16273:0 < 1000 && 7 < (1 + v16273:0) * (1 + v16273:0) * (1 + v16273:0) && (1 + v16273:0) * (1 + v16273:0) * (1 + v16273:0) < 0
f_2273(v16262:0, v16263:0, v16264:0, v16265:0, v16266:0, 1000, 1000000, 1000000000, 1000, 1000000, 1000000000, v16273:0, v16274:0, v16275:0, v16927:0, 0, 1001, v16279:0, v16280:0, v16281:0, v16282:0, v16283:0, v16284:0, v16285:0, v16286:0, v16287:0, v16288:0, 1000, 3, 1, 2, 999, 4, 1001) -> f_2273(v16262:0, v16263:0, v16264:0, v16265:0, v16266:0, 2, 4, 8, 1, 1, 1, 1 + v16273:0, (1 + v16273:0) * (1 + v16273:0), (1 + v16273:0) * (1 + v16273:0) * (1 + v16273:0), 1 + (1 + v16273:0) * (1 + v16273:0) * (1 + v16273:0), 0, 3, 1000, 1001, v16273:0, v16282:0, v16283:0, v16284:0, v16285:0, v16286:0, v16287:0, v16288:0, 1000, 3, 1, 2, 999, 4, 1001) :|: v16273:0 > 1 && v16273:0 < 1001 && v16273:0 < 1000 && 7 > (1 + v16273:0) * (1 + v16273:0) * (1 + v16273:0) && (1 + v16273:0) * (1 + v16273:0) * (1 + v16273:0) < 0
f_2290(v17370:0, v17371:0, v17372:0, v17373:0, v17374:0, v17375:0, v17376:0, v17377:0, v17378:0, v17378:0 * v17378:0, v17378:0 * v17378:0 * v17378:0, v17381:0, v17381:0 * v17381:0, v17381:0 * v17381:0 * v17381:0, v17384:0, 0, v17386:0, v17387:0, v17388:0, v17389:0, v17390:0, v17391:0, v17392:0, v17393:0, v17394:0, v17395:0, v17396:0, 1000, 3, 1, 999, 2, 4) -> f_2273(v17370:0, v17371:0, v17372:0, v17373:0, v17374:0, v17386:0, v17386:0 * v17386:0, v17386:0 * v17386:0 * v17386:0, v17378:0, v17378:0 * v17378:0, v17378:0 * v17378:0 * v17378:0, v17381:0, v17381:0 * v17381:0, v17381:0 * v17381:0 * v17381:0, v17378:0 * v17378:0 * v17378:0 + v17381:0 * v17381:0 * v17381:0, 0, 1 + v17386:0, v17387:0, v17388:0, v17389:0, v17390:0, v17391:0, v17392:0, v17393:0, v17394:0, v17395:0, v17396:0, 1000, 3, 1, 2, 999, 4, 1001) :|: v17378:0 < 1001 && v17389:0 < 1000 && v17381:0 < 1001 && v17386:0 * v17386:0 * v17386:0 < v17378:0 * v17378:0 * v17378:0 + v17381:0 * v17381:0 * v17381:0 && v17386:0 < 1001 && v17386:0 > 1
f_2290(v17370:0, v17371:0, v17372:0, v17373:0, v17374:0, v17375:0, v17376:0, v17377:0, v17378:0, v17378:0 * v17378:0, v17378:0 * v17378:0 * v17378:0, v17381:0, v17381:0 * v17381:0, v17381:0 * v17381:0 * v17381:0, v17384:0, 0, v17386:0, v17387:0, v17388:0, v17389:0, v17390:0, v17391:0, v17392:0, v17393:0, v17394:0, v17395:0, v17396:0, 1000, 3, 1, 999, 2, 4) -> f_2273(v17370:0, v17371:0, v17372:0, v17373:0, v17374:0, v17386:0, v17386:0 * v17386:0, v17386:0 * v17386:0 * v17386:0, v17378:0, v17378:0 * v17378:0, v17378:0 * v17378:0 * v17378:0, v17381:0, v17381:0 * v17381:0, v17381:0 * v17381:0 * v17381:0, v17378:0 * v17378:0 * v17378:0 + v17381:0 * v17381:0 * v17381:0, 0, 1 + v17386:0, v17387:0, v17388:0, v17389:0, v17390:0, v17391:0, v17392:0, v17393:0, v17394:0, v17395:0, v17396:0, 1000, 3, 1, 2, 999, 4, 1001) :|: v17378:0 < 1001 && v17389:0 < 1000 && v17381:0 < 1001 && v17386:0 * v17386:0 * v17386:0 > v17378:0 * v17378:0 * v17378:0 + v17381:0 * v17381:0 * v17381:0 && v17386:0 < 1001 && v17386:0 > 1
f_2290(v17370:0, v17371:0, v17372:0, v17373:0, v17374:0, v17375:0, v17376:0, v17377:0, v17378:0, v17379:0, v17380:0, v17381:0, v17382:0, v17383:0, v17384:0, 0, v17386:0, v17387:0, v17388:0, v17389:0, v17390:0, v17391:0, v17392:0, v17393:0, v17394:0, v17395:0, v17396:0, 1000, 3, 1, 999, 2, 4) -> f_2290(v17370:0, v17371:0, v17372:0, v17373:0, v17374:0, 1, 1, 1, 2, 4, 8, 1 + v17381:0, (1 + v17381:0) * (1 + v17381:0), (1 + v17381:0) * (1 + v17381:0) * (1 + v17381:0), 8 + (1 + v17381:0) * (1 + v17381:0) * (1 + v17381:0), 0, 2, 1, 2, v17381:0, v17390:0, v17391:0, v17392:0, v17393:0, v17394:0, v17395:0, v17396:0, 1000, 3, 1, 999, 2, 4) :|: v17386:0 > 999 && v17381:0 < 1000 && v17386:0 * v17386:0 * v17386:0 < 1 + (1 + v17381:0) * (1 + v17381:0) * (1 + v17381:0) && (1 + v17381:0) * (1 + v17381:0) * (1 + v17381:0) > -7 && v17378:0 > 1000 && v17381:0 < 1001 && v17381:0 > 1
f_2290(v17370:0, v17371:0, v17372:0, v17373:0, v17374:0, v17375:0, v17376:0, v17377:0, v17378:0, v17379:0, v17380:0, v17381:0, v17382:0, v17383:0, v17384:0, 0, v17386:0, v17387:0, v17388:0, v17389:0, v17390:0, v17391:0, v17392:0, v17393:0, v17394:0, v17395:0, v17396:0, 1000, 3, 1, 999, 2, 4) -> f_2290(v17370:0, v17371:0, v17372:0, v17373:0, v17374:0, 1, 1, 1, 2, 4, 8, 1 + v17381:0, (1 + v17381:0) * (1 + v17381:0), (1 + v17381:0) * (1 + v17381:0) * (1 + v17381:0), 8 + (1 + v17381:0) * (1 + v17381:0) * (1 + v17381:0), 0, 2, 1, 2, v17381:0, v17390:0, v17391:0, v17392:0, v17393:0, v17394:0, v17395:0, v17396:0, 1000, 3, 1, 999, 2, 4) :|: v17386:0 > 999 && v17381:0 < 1000 && v17386:0 * v17386:0 * v17386:0 < 1 + (1 + v17381:0) * (1 + v17381:0) * (1 + v17381:0) && (1 + v17381:0) * (1 + v17381:0) * (1 + v17381:0) < -7 && v17378:0 > 1000 && v17381:0 < 1001 && v17381:0 > 1
f_2290(v17370:0, v17371:0, v17372:0, v17373:0, v17374:0, v17375:0, v17376:0, v17377:0, v17378:0, v17379:0, v17380:0, v17381:0, v17382:0, v17383:0, v17384:0, 0, v17386:0, v17387:0, v17388:0, v17389:0, v17390:0, v17391:0, v17392:0, v17393:0, v17394:0, v17395:0, v17396:0, 1000, 3, 1, 999, 2, 4) -> f_2290(v17370:0, v17371:0, v17372:0, v17373:0, v17374:0, 1, 1, 1, 2, 4, 8, 1 + v17381:0, (1 + v17381:0) * (1 + v17381:0), (1 + v17381:0) * (1 + v17381:0) * (1 + v17381:0), 8 + (1 + v17381:0) * (1 + v17381:0) * (1 + v17381:0), 0, 2, 1, 2, v17381:0, v17390:0, v17391:0, v17392:0, v17393:0, v17394:0, v17395:0, v17396:0, 1000, 3, 1, 999, 2, 4) :|: v17386:0 > 999 && v17381:0 < 1000 && v17386:0 * v17386:0 * v17386:0 > 1 + (1 + v17381:0) * (1 + v17381:0) * (1 + v17381:0) && (1 + v17381:0) * (1 + v17381:0) * (1 + v17381:0) > -7 && v17378:0 > 1000 && v17381:0 < 1001 && v17381:0 > 1
f_2290(v17370:0, v17371:0, v17372:0, v17373:0, v17374:0, v17375:0, v17376:0, v17377:0, v17378:0, v17379:0, v17380:0, v17381:0, v17382:0, v17383:0, v17384:0, 0, v17386:0, v17387:0, v17388:0, v17389:0, v17390:0, v17391:0, v17392:0, v17393:0, v17394:0, v17395:0, v17396:0, 1000, 3, 1, 999, 2, 4) -> f_2290(v17370:0, v17371:0, v17372:0, v17373:0, v17374:0, 1, 1, 1, 2, 4, 8, 1 + v17381:0, (1 + v17381:0) * (1 + v17381:0), (1 + v17381:0) * (1 + v17381:0) * (1 + v17381:0), 8 + (1 + v17381:0) * (1 + v17381:0) * (1 + v17381:0), 0, 2, 1, 2, v17381:0, v17390:0, v17391:0, v17392:0, v17393:0, v17394:0, v17395:0, v17396:0, 1000, 3, 1, 999, 2, 4) :|: v17386:0 > 999 && v17381:0 < 1000 && v17386:0 * v17386:0 * v17386:0 > 1 + (1 + v17381:0) * (1 + v17381:0) * (1 + v17381:0) && (1 + v17381:0) * (1 + v17381:0) * (1 + v17381:0) < -7 && v17378:0 > 1000 && v17381:0 < 1001 && v17381:0 > 1
f_2290(v17370:0, v17371:0, v17372:0, v17373:0, v17374:0, v17375:0, v17376:0, v17377:0, v17378:0, v17379:0, v17380:0, v17381:0, v17382:0, v17383:0, v17384:0, 0, v17386:0, v17387:0, v17388:0, v17389:0, v17390:0, v17391:0, v17392:0, v17393:0, v17394:0, v17395:0, v17396:0, 1000, 3, 1, 999, 2, 4) -> f_2273(v17370:0, v17371:0, v17372:0, v17373:0, v17374:0, 1 + v17386:0, (1 + v17386:0) * (1 + v17386:0), (1 + v17386:0) * (1 + v17386:0) * (1 + v17386:0), 1, 1, 1, 1 + v17381:0, (1 + v17381:0) * (1 + v17381:0), (1 + v17381:0) * (1 + v17381:0) * (1 + v17381:0), 1 + (1 + v17381:0) * (1 + v17381:0) * (1 + v17381:0), 0, 1 + (1 + v17386:0), v17387:0, v17388:0, v17381:0, v17390:0, v17391:0, v17392:0, v17393:0, v17394:0, v17395:0, v17396:0, 1000, 3, 1, 2, 999, 4, 1001) :|: v17386:0 > 1 && v17381:0 < 1000 && v17386:0 * v17386:0 * v17386:0 < 1 + (1 + v17381:0) * (1 + v17381:0) * (1 + v17381:0) && v17378:0 > 1000 && v17381:0 > 1 && (1 + v17386:0) * (1 + v17386:0) * (1 + v17386:0) < 1 + (1 + v17381:0) * (1 + v17381:0) * (1 + v17381:0) && v17381:0 < 1001 && v17386:0 < 1000
f_2290(v17370:0, v17371:0, v17372:0, v17373:0, v17374:0, v17375:0, v17376:0, v17377:0, v17378:0, v17379:0, v17380:0, v17381:0, v17382:0, v17383:0, v17384:0, 0, v17386:0, v17387:0, v17388:0, v17389:0, v17390:0, v17391:0, v17392:0, v17393:0, v17394:0, v17395:0, v17396:0, 1000, 3, 1, 999, 2, 4) -> f_2273(v17370:0, v17371:0, v17372:0, v17373:0, v17374:0, 1 + v17386:0, (1 + v17386:0) * (1 + v17386:0), (1 + v17386:0) * (1 + v17386:0) * (1 + v17386:0), 1, 1, 1, 1 + v17381:0, (1 + v17381:0) * (1 + v17381:0), (1 + v17381:0) * (1 + v17381:0) * (1 + v17381:0), 1 + (1 + v17381:0) * (1 + v17381:0) * (1 + v17381:0), 0, 1 + (1 + v17386:0), v17387:0, v17388:0, v17381:0, v17390:0, v17391:0, v17392:0, v17393:0, v17394:0, v17395:0, v17396:0, 1000, 3, 1, 2, 999, 4, 1001) :|: v17386:0 > 1 && v17381:0 < 1000 && v17386:0 * v17386:0 * v17386:0 < 1 + (1 + v17381:0) * (1 + v17381:0) * (1 + v17381:0) && v17378:0 > 1000 && v17381:0 > 1 && (1 + v17386:0) * (1 + v17386:0) * (1 + v17386:0) > 1 + (1 + v17381:0) * (1 + v17381:0) * (1 + v17381:0) && v17381:0 < 1001 && v17386:0 < 1000
f_2290(v17370:0, v17371:0, v17372:0, v17373:0, v17374:0, v17375:0, v17376:0, v17377:0, v17378:0, v17379:0, v17380:0, v17381:0, v17382:0, v17383:0, v17384:0, 0, v17386:0, v17387:0, v17388:0, v17389:0, v17390:0, v17391:0, v17392:0, v17393:0, v17394:0, v17395:0, v17396:0, 1000, 3, 1, 999, 2, 4) -> f_2273(v17370:0, v17371:0, v17372:0, v17373:0, v17374:0, 1 + v17386:0, (1 + v17386:0) * (1 + v17386:0), (1 + v17386:0) * (1 + v17386:0) * (1 + v17386:0), 1, 1, 1, 1 + v17381:0, (1 + v17381:0) * (1 + v17381:0), (1 + v17381:0) * (1 + v17381:0) * (1 + v17381:0), 1 + (1 + v17381:0) * (1 + v17381:0) * (1 + v17381:0), 0, 1 + (1 + v17386:0), v17387:0, v17388:0, v17381:0, v17390:0, v17391:0, v17392:0, v17393:0, v17394:0, v17395:0, v17396:0, 1000, 3, 1, 2, 999, 4, 1001) :|: v17386:0 > 1 && v17381:0 < 1000 && v17386:0 * v17386:0 * v17386:0 > 1 + (1 + v17381:0) * (1 + v17381:0) * (1 + v17381:0) && v17378:0 > 1000 && v17381:0 > 1 && (1 + v17386:0) * (1 + v17386:0) * (1 + v17386:0) < 1 + (1 + v17381:0) * (1 + v17381:0) * (1 + v17381:0) && v17381:0 < 1001 && v17386:0 < 1000
f_2290(v17370:0, v17371:0, v17372:0, v17373:0, v17374:0, v17375:0, v17376:0, v17377:0, v17378:0, v17379:0, v17380:0, v17381:0, v17382:0, v17383:0, v17384:0, 0, v17386:0, v17387:0, v17388:0, v17389:0, v17390:0, v17391:0, v17392:0, v17393:0, v17394:0, v17395:0, v17396:0, 1000, 3, 1, 999, 2, 4) -> f_2273(v17370:0, v17371:0, v17372:0, v17373:0, v17374:0, 1 + v17386:0, (1 + v17386:0) * (1 + v17386:0), (1 + v17386:0) * (1 + v17386:0) * (1 + v17386:0), 1, 1, 1, 1 + v17381:0, (1 + v17381:0) * (1 + v17381:0), (1 + v17381:0) * (1 + v17381:0) * (1 + v17381:0), 1 + (1 + v17381:0) * (1 + v17381:0) * (1 + v17381:0), 0, 1 + (1 + v17386:0), v17387:0, v17388:0, v17381:0, v17390:0, v17391:0, v17392:0, v17393:0, v17394:0, v17395:0, v17396:0, 1000, 3, 1, 2, 999, 4, 1001) :|: v17386:0 > 1 && v17381:0 < 1000 && v17386:0 * v17386:0 * v17386:0 > 1 + (1 + v17381:0) * (1 + v17381:0) * (1 + v17381:0) && v17378:0 > 1000 && v17381:0 > 1 && (1 + v17386:0) * (1 + v17386:0) * (1 + v17386:0) > 1 + (1 + v17381:0) * (1 + v17381:0) * (1 + v17381:0) && v17381:0 < 1001 && v17386:0 < 1000
Filtered unneeded arguments:
   f_2273(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34) -> f_2273(x6, x7, x8, x9, x10, x11, x12, x13, x14, x17, x20)
   f_2290(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33) -> f_2290(x9, x10, x11, x12, x13, x14, x17, x20)
Removed division, modulo operations, cleaned up constraints. Obtained 17 rules.P rules:
f_2273(v16278:0, v16821:0, v16926:0, v16270:0, v16271:0, v16272:0, v16273:0, v16274:0, v16275:0, v17098:0, v16281:0) -> f_2290(v16270:0, v16271:0, v16272:0, v16273:0, v16274:0, v16275:0, v17098:0, v16281:0) :|: v17098:0 < 1001 && v16278:0 < 1000
f_2273(cons_1000, cons_1000000, cons_1000000000, v16270:0, v16271:0, v16272:0, v16273:0, times~v16273:0~v16273:0, times~times~v16273:0~v16273:0~v16273:0, cons_1001, v16281:0) -> f_2290(1 + v16270:0, 1 + v16270:0 + (v16270:0 + v16270:0 * v16270:0), 1 + v16270:0 + (v16270:0 + v16270:0 * v16270:0) + (v16270:0 + v16270:0 * v16270:0 + v16270:0 * v16270:0 * (1 + v16270:0)), v16273:0, v16273:0 * v16273:0, v16273:0 * v16273:0 * v16273:0, 2, v16281:0) :|: v16270:0 > 0 && 1 + v16270:0 + (v16270:0 + v16270:0 * v16270:0) + (v16270:0 + v16270:0 * v16270:0 + v16270:0 * v16270:0 * (1 + v16270:0)) + v16273:0 * v16273:0 * v16273:0 > 1 && v16270:0 < 1000 && v16270:0 < 1001 && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && times~v16273:0~v16273:0 = v16273:0 * v16273:0 && times~times~v16273:0~v16273:0~v16273:0 = v16273:0 * v16273:0 * v16273:0 && cons_1001 = 1001
f_2273(cons_1000, cons_1000000, cons_1000000000, v16270:0, v16271:0, v16272:0, v16273:0, times~v16273:0~v16273:0, times~times~v16273:0~v16273:0~v16273:0, cons_1001, v16281:0) -> f_2290(1 + v16270:0, 1 + v16270:0 + (v16270:0 + v16270:0 * v16270:0), 1 + v16270:0 + (v16270:0 + v16270:0 * v16270:0) + (v16270:0 + v16270:0 * v16270:0 + v16270:0 * v16270:0 * (1 + v16270:0)), v16273:0, v16273:0 * v16273:0, v16273:0 * v16273:0 * v16273:0, 2, v16281:0) :|: v16270:0 > 0 && 1 + v16270:0 + (v16270:0 + v16270:0 * v16270:0) + (v16270:0 + v16270:0 * v16270:0 + v16270:0 * v16270:0 * (1 + v16270:0)) + v16273:0 * v16273:0 * v16273:0 < 1 && v16270:0 < 1000 && v16270:0 < 1001 && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && times~v16273:0~v16273:0 = v16273:0 * v16273:0 && times~times~v16273:0~v16273:0~v16273:0 = v16273:0 * v16273:0 * v16273:0 && cons_1001 = 1001
f_2273(cons_1000, cons_1000000, cons_1000000000, cons_10001, cons_10000001, cons_10000000001, v16273:0, v16274:0, v16275:0, cons_1001, v16281:0) -> f_2273(2, 4, 8, 1, 1, 1, 1 + v16273:0, 1 + v16273:0 + (v16273:0 + v16273:0 * v16273:0), 1 + v16273:0 + (v16273:0 + v16273:0 * v16273:0) + (v16273:0 + v16273:0 * v16273:0 + v16273:0 * v16273:0 * (1 + v16273:0)), 3, v16273:0) :|: v16273:0 > 1 && 7 < 1 + v16273:0 + (v16273:0 + v16273:0 * v16273:0) + (v16273:0 + v16273:0 * v16273:0 + v16273:0 * v16273:0 * (1 + v16273:0)) && v16273:0 < 1000 && v16273:0 < 1001 && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && cons_10001 = 1000 && cons_10000001 = 1000000 && cons_10000000001 = 1000000000 && cons_1001 = 1001
f_2273(cons_1000, cons_1000000, cons_1000000000, cons_10001, cons_10000001, cons_10000000001, v16273:0, v16274:0, v16275:0, cons_1001, v16281:0) -> f_2273(2, 4, 8, 1, 1, 1, 1 + v16273:0, 1 + v16273:0 + (v16273:0 + v16273:0 * v16273:0), 1 + v16273:0 + (v16273:0 + v16273:0 * v16273:0) + (v16273:0 + v16273:0 * v16273:0 + v16273:0 * v16273:0 * (1 + v16273:0)), 3, v16273:0) :|: v16273:0 < 1001 && v16273:0 > 1 && v16273:0 < 1000 && 1 + v16273:0 + (v16273:0 + v16273:0 * v16273:0) + (v16273:0 + v16273:0 * v16273:0 + v16273:0 * v16273:0 * (1 + v16273:0)) > 0 && 7 > 1 + v16273:0 + (v16273:0 + v16273:0 * v16273:0) + (v16273:0 + v16273:0 * v16273:0 + v16273:0 * v16273:0 * (1 + v16273:0)) && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && cons_10001 = 1000 && cons_10000001 = 1000000 && cons_10000000001 = 1000000000 && cons_1001 = 1001
f_2273(cons_1000, cons_1000000, cons_1000000000, cons_10001, cons_10000001, cons_10000000001, v16273:0, v16274:0, v16275:0, cons_1001, v16281:0) -> f_2273(2, 4, 8, 1, 1, 1, 1 + v16273:0, 1 + v16273:0 + (v16273:0 + v16273:0 * v16273:0), 1 + v16273:0 + (v16273:0 + v16273:0 * v16273:0) + (v16273:0 + v16273:0 * v16273:0 + v16273:0 * v16273:0 * (1 + v16273:0)), 3, v16273:0) :|: v16273:0 < 1001 && v16273:0 > 1 && v16273:0 < 1000 && 1 + v16273:0 + (v16273:0 + v16273:0 * v16273:0) + (v16273:0 + v16273:0 * v16273:0 + v16273:0 * v16273:0 * (1 + v16273:0)) < 0 && 7 < 1 + v16273:0 + (v16273:0 + v16273:0 * v16273:0) + (v16273:0 + v16273:0 * v16273:0 + v16273:0 * v16273:0 * (1 + v16273:0)) && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && cons_10001 = 1000 && cons_10000001 = 1000000 && cons_10000000001 = 1000000000 && cons_1001 = 1001
f_2273(cons_1000, cons_1000000, cons_1000000000, cons_10001, cons_10000001, cons_10000000001, v16273:0, v16274:0, v16275:0, cons_1001, v16281:0) -> f_2273(2, 4, 8, 1, 1, 1, 1 + v16273:0, 1 + v16273:0 + (v16273:0 + v16273:0 * v16273:0), 1 + v16273:0 + (v16273:0 + v16273:0 * v16273:0) + (v16273:0 + v16273:0 * v16273:0 + v16273:0 * v16273:0 * (1 + v16273:0)), 3, v16273:0) :|: v16273:0 < 1001 && v16273:0 > 1 && v16273:0 < 1000 && 1 + v16273:0 + (v16273:0 + v16273:0 * v16273:0) + (v16273:0 + v16273:0 * v16273:0 + v16273:0 * v16273:0 * (1 + v16273:0)) < 0 && 7 > 1 + v16273:0 + (v16273:0 + v16273:0 * v16273:0) + (v16273:0 + v16273:0 * v16273:0 + v16273:0 * v16273:0 * (1 + v16273:0)) && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && cons_10001 = 1000 && cons_10000001 = 1000000 && cons_10000000001 = 1000000000 && cons_1001 = 1001
f_2290(v17378:0, times~v17378:0~v17378:0, times~times~v17378:0~v17378:0~v17378:0, v17381:0, times~v17381:0~v17381:0, times~times~v17381:0~v17381:0~v17381:0, v17386:0, v17389:0) -> f_2273(v17386:0, v17386:0 * v17386:0, v17386:0 * v17386:0 * v17386:0, v17378:0, v17378:0 * v17378:0, v17378:0 * v17378:0 * v17378:0, v17381:0, v17381:0 * v17381:0, v17381:0 * v17381:0 * v17381:0, 1 + v17386:0, v17389:0) :|: v17389:0 < 1000 && v17378:0 < 1001 && v17381:0 < 1001 && v17386:0 * v17386:0 * v17386:0 < v17378:0 * v17378:0 * v17378:0 + v17381:0 * v17381:0 * v17381:0 && v17386:0 > 1 && v17386:0 < 1001 && times~v17378:0~v17378:0 = v17378:0 * v17378:0 && times~times~v17378:0~v17378:0~v17378:0 = v17378:0 * v17378:0 * v17378:0 && times~v17381:0~v17381:0 = v17381:0 * v17381:0 && times~times~v17381:0~v17381:0~v17381:0 = v17381:0 * v17381:0 * v17381:0
f_2290(v17378:0, times~v17378:0~v17378:0, times~times~v17378:0~v17378:0~v17378:0, v17381:0, times~v17381:0~v17381:0, times~times~v17381:0~v17381:0~v17381:0, v17386:0, v17389:0) -> f_2273(v17386:0, v17386:0 * v17386:0, v17386:0 * v17386:0 * v17386:0, v17378:0, v17378:0 * v17378:0, v17378:0 * v17378:0 * v17378:0, v17381:0, v17381:0 * v17381:0, v17381:0 * v17381:0 * v17381:0, 1 + v17386:0, v17389:0) :|: v17389:0 < 1000 && v17378:0 < 1001 && v17381:0 < 1001 && v17386:0 * v17386:0 * v17386:0 > v17378:0 * v17378:0 * v17378:0 + v17381:0 * v17381:0 * v17381:0 && v17386:0 > 1 && v17386:0 < 1001 && times~v17378:0~v17378:0 = v17378:0 * v17378:0 && times~times~v17378:0~v17378:0~v17378:0 = v17378:0 * v17378:0 * v17378:0 && times~v17381:0~v17381:0 = v17381:0 * v17381:0 && times~times~v17381:0~v17381:0~v17381:0 = v17381:0 * v17381:0 * v17381:0
f_2290(v17378:0, v17379:0, v17380:0, v17381:0, v17382:0, v17383:0, v17386:0, v17389:0) -> f_2290(2, 4, 8, 1 + v17381:0, 1 + v17381:0 + (v17381:0 + v17381:0 * v17381:0), 1 + v17381:0 + (v17381:0 + v17381:0 * v17381:0) + (v17381:0 + v17381:0 * v17381:0 + v17381:0 * v17381:0 * (1 + v17381:0)), 2, v17381:0) :|: v17381:0 < 1000 && v17386:0 > 999 && v17386:0 * v17386:0 * v17386:0 < 1 + (1 + v17381:0 + (v17381:0 + v17381:0 * v17381:0) + (v17381:0 + v17381:0 * v17381:0 + v17381:0 * v17381:0 * (1 + v17381:0))) && 1 + v17381:0 + (v17381:0 + v17381:0 * v17381:0) + (v17381:0 + v17381:0 * v17381:0 + v17381:0 * v17381:0 * (1 + v17381:0)) > -7 && v17378:0 > 1000 && v17381:0 > 1 && v17381:0 < 1001
f_2290(v17378:0, v17379:0, v17380:0, v17381:0, v17382:0, v17383:0, v17386:0, v17389:0) -> f_2290(2, 4, 8, 1 + v17381:0, 1 + v17381:0 + (v17381:0 + v17381:0 * v17381:0), 1 + v17381:0 + (v17381:0 + v17381:0 * v17381:0) + (v17381:0 + v17381:0 * v17381:0 + v17381:0 * v17381:0 * (1 + v17381:0)), 2, v17381:0) :|: v17381:0 < 1000 && v17386:0 > 999 && v17386:0 * v17386:0 * v17386:0 < 1 + (1 + v17381:0 + (v17381:0 + v17381:0 * v17381:0) + (v17381:0 + v17381:0 * v17381:0 + v17381:0 * v17381:0 * (1 + v17381:0))) && 1 + v17381:0 + (v17381:0 + v17381:0 * v17381:0) + (v17381:0 + v17381:0 * v17381:0 + v17381:0 * v17381:0 * (1 + v17381:0)) < -7 && v17378:0 > 1000 && v17381:0 > 1 && v17381:0 < 1001
f_2290(v17378:0, v17379:0, v17380:0, v17381:0, v17382:0, v17383:0, v17386:0, v17389:0) -> f_2290(2, 4, 8, 1 + v17381:0, 1 + v17381:0 + (v17381:0 + v17381:0 * v17381:0), 1 + v17381:0 + (v17381:0 + v17381:0 * v17381:0) + (v17381:0 + v17381:0 * v17381:0 + v17381:0 * v17381:0 * (1 + v17381:0)), 2, v17381:0) :|: v17381:0 < 1000 && v17386:0 > 999 && v17386:0 * v17386:0 * v17386:0 > 1 + (1 + v17381:0 + (v17381:0 + v17381:0 * v17381:0) + (v17381:0 + v17381:0 * v17381:0 + v17381:0 * v17381:0 * (1 + v17381:0))) && 1 + v17381:0 + (v17381:0 + v17381:0 * v17381:0) + (v17381:0 + v17381:0 * v17381:0 + v17381:0 * v17381:0 * (1 + v17381:0)) > -7 && v17378:0 > 1000 && v17381:0 > 1 && v17381:0 < 1001
f_2290(v17378:0, v17379:0, v17380:0, v17381:0, v17382:0, v17383:0, v17386:0, v17389:0) -> f_2290(2, 4, 8, 1 + v17381:0, 1 + v17381:0 + (v17381:0 + v17381:0 * v17381:0), 1 + v17381:0 + (v17381:0 + v17381:0 * v17381:0) + (v17381:0 + v17381:0 * v17381:0 + v17381:0 * v17381:0 * (1 + v17381:0)), 2, v17381:0) :|: v17381:0 < 1000 && v17386:0 > 999 && v17386:0 * v17386:0 * v17386:0 > 1 + (1 + v17381:0 + (v17381:0 + v17381:0 * v17381:0) + (v17381:0 + v17381:0 * v17381:0 + v17381:0 * v17381:0 * (1 + v17381:0))) && 1 + v17381:0 + (v17381:0 + v17381:0 * v17381:0) + (v17381:0 + v17381:0 * v17381:0 + v17381:0 * v17381:0 * (1 + v17381:0)) < -7 && v17378:0 > 1000 && v17381:0 > 1 && v17381:0 < 1001
f_2290(v17378:0, v17379:0, v17380:0, v17381:0, v17382:0, v17383:0, v17386:0, v17389:0) -> f_2273(1 + v17386:0, 1 + v17386:0 + (v17386:0 + v17386:0 * v17386:0), 1 + v17386:0 + (v17386:0 + v17386:0 * v17386:0) + (v17386:0 + v17386:0 * v17386:0 + v17386:0 * v17386:0 * (1 + v17386:0)), 1, 1, 1, 1 + v17381:0, 1 + v17381:0 + (v17381:0 + v17381:0 * v17381:0), 1 + v17381:0 + (v17381:0 + v17381:0 * v17381:0) + (v17381:0 + v17381:0 * v17381:0 + v17381:0 * v17381:0 * (1 + v17381:0)), 1 + (1 + v17386:0), v17381:0) :|: v17381:0 < 1000 && v17386:0 > 1 && v17386:0 * v17386:0 * v17386:0 < 1 + (1 + v17381:0 + (v17381:0 + v17381:0 * v17381:0) + (v17381:0 + v17381:0 * v17381:0 + v17381:0 * v17381:0 * (1 + v17381:0))) && v17378:0 > 1000 && v17381:0 > 1 && 1 + v17386:0 + (v17386:0 + v17386:0 * v17386:0) + (v17386:0 + v17386:0 * v17386:0 + v17386:0 * v17386:0 * (1 + v17386:0)) < 1 + (1 + v17381:0 + (v17381:0 + v17381:0 * v17381:0) + (v17381:0 + v17381:0 * v17381:0 + v17381:0 * v17381:0 * (1 + v17381:0))) && v17386:0 < 1000 && v17381:0 < 1001
f_2290(v17378:0, v17379:0, v17380:0, v17381:0, v17382:0, v17383:0, v17386:0, v17389:0) -> f_2273(1 + v17386:0, 1 + v17386:0 + (v17386:0 + v17386:0 * v17386:0), 1 + v17386:0 + (v17386:0 + v17386:0 * v17386:0) + (v17386:0 + v17386:0 * v17386:0 + v17386:0 * v17386:0 * (1 + v17386:0)), 1, 1, 1, 1 + v17381:0, 1 + v17381:0 + (v17381:0 + v17381:0 * v17381:0), 1 + v17381:0 + (v17381:0 + v17381:0 * v17381:0) + (v17381:0 + v17381:0 * v17381:0 + v17381:0 * v17381:0 * (1 + v17381:0)), 1 + (1 + v17386:0), v17381:0) :|: v17381:0 < 1000 && v17386:0 > 1 && v17386:0 * v17386:0 * v17386:0 < 1 + (1 + v17381:0 + (v17381:0 + v17381:0 * v17381:0) + (v17381:0 + v17381:0 * v17381:0 + v17381:0 * v17381:0 * (1 + v17381:0))) && v17378:0 > 1000 && v17381:0 > 1 && 1 + v17386:0 + (v17386:0 + v17386:0 * v17386:0) + (v17386:0 + v17386:0 * v17386:0 + v17386:0 * v17386:0 * (1 + v17386:0)) > 1 + (1 + v17381:0 + (v17381:0 + v17381:0 * v17381:0) + (v17381:0 + v17381:0 * v17381:0 + v17381:0 * v17381:0 * (1 + v17381:0))) && v17386:0 < 1000 && v17381:0 < 1001
f_2290(v17378:0, v17379:0, v17380:0, v17381:0, v17382:0, v17383:0, v17386:0, v17389:0) -> f_2273(1 + v17386:0, 1 + v17386:0 + (v17386:0 + v17386:0 * v17386:0), 1 + v17386:0 + (v17386:0 + v17386:0 * v17386:0) + (v17386:0 + v17386:0 * v17386:0 + v17386:0 * v17386:0 * (1 + v17386:0)), 1, 1, 1, 1 + v17381:0, 1 + v17381:0 + (v17381:0 + v17381:0 * v17381:0), 1 + v17381:0 + (v17381:0 + v17381:0 * v17381:0) + (v17381:0 + v17381:0 * v17381:0 + v17381:0 * v17381:0 * (1 + v17381:0)), 1 + (1 + v17386:0), v17381:0) :|: v17381:0 < 1000 && v17386:0 > 1 && v17386:0 * v17386:0 * v17386:0 > 1 + (1 + v17381:0 + (v17381:0 + v17381:0 * v17381:0) + (v17381:0 + v17381:0 * v17381:0 + v17381:0 * v17381:0 * (1 + v17381:0))) && v17378:0 > 1000 && v17381:0 > 1 && 1 + v17386:0 + (v17386:0 + v17386:0 * v17386:0) + (v17386:0 + v17386:0 * v17386:0 + v17386:0 * v17386:0 * (1 + v17386:0)) < 1 + (1 + v17381:0 + (v17381:0 + v17381:0 * v17381:0) + (v17381:0 + v17381:0 * v17381:0 + v17381:0 * v17381:0 * (1 + v17381:0))) && v17386:0 < 1000 && v17381:0 < 1001
f_2290(v17378:0, v17379:0, v17380:0, v17381:0, v17382:0, v17383:0, v17386:0, v17389:0) -> f_2273(1 + v17386:0, 1 + v17386:0 + (v17386:0 + v17386:0 * v17386:0), 1 + v17386:0 + (v17386:0 + v17386:0 * v17386:0) + (v17386:0 + v17386:0 * v17386:0 + v17386:0 * v17386:0 * (1 + v17386:0)), 1, 1, 1, 1 + v17381:0, 1 + v17381:0 + (v17381:0 + v17381:0 * v17381:0), 1 + v17381:0 + (v17381:0 + v17381:0 * v17381:0) + (v17381:0 + v17381:0 * v17381:0 + v17381:0 * v17381:0 * (1 + v17381:0)), 1 + (1 + v17386:0), v17381:0) :|: v17381:0 < 1000 && v17386:0 > 1 && v17386:0 * v17386:0 * v17386:0 > 1 + (1 + v17381:0 + (v17381:0 + v17381:0 * v17381:0) + (v17381:0 + v17381:0 * v17381:0 + v17381:0 * v17381:0 * (1 + v17381:0))) && v17378:0 > 1000 && v17381:0 > 1 && 1 + v17386:0 + (v17386:0 + v17386:0 * v17386:0) + (v17386:0 + v17386:0 * v17386:0 + v17386:0 * v17386:0 * (1 + v17386:0)) > 1 + (1 + v17381:0 + (v17381:0 + v17381:0 * v17381:0) + (v17381:0 + v17381:0 * v17381:0 + v17381:0 * v17381:0 * (1 + v17381:0))) && v17386:0 < 1000 && v17381:0 < 1001

----------------------------------------

(9)
Obligation:
Rules:
f_2273(v16278:0, v16821:0, v16926:0, v16270:0, v16271:0, v16272:0, v16273:0, v16274:0, v16275:0, v17098:0, v16281:0) -> f_2290(v16270:0, v16271:0, v16272:0, v16273:0, v16274:0, v16275:0, v17098:0, v16281:0) :|: v17098:0 < 1001 && v16278:0 < 1000
f_2273(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f_2290(1 + x3, 1 + x3 + (x3 + x3 * x3), 1 + x3 + (x3 + x3 * x3) + (x3 + x3 * x3 + x3 * x3 * (1 + x3)), x6, x6 * x6, x6 * x6 * x6, 2, x10) :|: x3 > 0 && 1 + x3 + (x3 + x3 * x3) + (x3 + x3 * x3 + x3 * x3 * (1 + x3)) + x6 * x6 * x6 > 1 && x3 < 1000 && x3 < 1001 && x = 1000 && x1 = 1000000 && x2 = 1000000000 && x7 = x6 * x6 && x8 = x6 * x6 * x6 && x9 = 1001
f_2273(x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21) -> f_2290(1 + x14, 1 + x14 + (x14 + x14 * x14), 1 + x14 + (x14 + x14 * x14) + (x14 + x14 * x14 + x14 * x14 * (1 + x14)), x17, x17 * x17, x17 * x17 * x17, 2, x21) :|: x14 > 0 && 1 + x14 + (x14 + x14 * x14) + (x14 + x14 * x14 + x14 * x14 * (1 + x14)) + x17 * x17 * x17 < 1 && x14 < 1000 && x14 < 1001 && x11 = 1000 && x12 = 1000000 && x13 = 1000000000 && x18 = x17 * x17 && x19 = x17 * x17 * x17 && x20 = 1001
f_2273(x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32) -> f_2273(2, 4, 8, 1, 1, 1, 1 + x28, 1 + x28 + (x28 + x28 * x28), 1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28)), 3, x28) :|: x28 > 1 && 7 < 1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28)) && x28 < 1000 && x28 < 1001 && x22 = 1000 && x23 = 1000000 && x24 = 1000000000 && x25 = 1000 && x26 = 1000000 && x27 = 1000000000 && x31 = 1001
f_2273(x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43) -> f_2273(2, 4, 8, 1, 1, 1, 1 + x39, 1 + x39 + (x39 + x39 * x39), 1 + x39 + (x39 + x39 * x39) + (x39 + x39 * x39 + x39 * x39 * (1 + x39)), 3, x39) :|: x39 < 1001 && x39 > 1 && x39 < 1000 && 1 + x39 + (x39 + x39 * x39) + (x39 + x39 * x39 + x39 * x39 * (1 + x39)) > 0 && 7 > 1 + x39 + (x39 + x39 * x39) + (x39 + x39 * x39 + x39 * x39 * (1 + x39)) && x33 = 1000 && x34 = 1000000 && x35 = 1000000000 && x36 = 1000 && x37 = 1000000 && x38 = 1000000000 && x42 = 1001
f_2273(x44, x45, x46, x47, x48, x49, x50, x51, x52, x53, x54) -> f_2273(2, 4, 8, 1, 1, 1, 1 + x50, 1 + x50 + (x50 + x50 * x50), 1 + x50 + (x50 + x50 * x50) + (x50 + x50 * x50 + x50 * x50 * (1 + x50)), 3, x50) :|: x50 < 1001 && x50 > 1 && x50 < 1000 && 1 + x50 + (x50 + x50 * x50) + (x50 + x50 * x50 + x50 * x50 * (1 + x50)) < 0 && 7 < 1 + x50 + (x50 + x50 * x50) + (x50 + x50 * x50 + x50 * x50 * (1 + x50)) && x44 = 1000 && x45 = 1000000 && x46 = 1000000000 && x47 = 1000 && x48 = 1000000 && x49 = 1000000000 && x53 = 1001
f_2273(x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65) -> f_2273(2, 4, 8, 1, 1, 1, 1 + x61, 1 + x61 + (x61 + x61 * x61), 1 + x61 + (x61 + x61 * x61) + (x61 + x61 * x61 + x61 * x61 * (1 + x61)), 3, x61) :|: x61 < 1001 && x61 > 1 && x61 < 1000 && 1 + x61 + (x61 + x61 * x61) + (x61 + x61 * x61 + x61 * x61 * (1 + x61)) < 0 && 7 > 1 + x61 + (x61 + x61 * x61) + (x61 + x61 * x61 + x61 * x61 * (1 + x61)) && x55 = 1000 && x56 = 1000000 && x57 = 1000000000 && x58 = 1000 && x59 = 1000000 && x60 = 1000000000 && x64 = 1001
f_2290(v17378:0, times~v17378:0~v17378:0, times~times~v17378:0~v17378:0~v17378:0, v17381:0, times~v17381:0~v17381:0, times~times~v17381:0~v17381:0~v17381:0, v17386:0, v17389:0) -> f_2273(v17386:0, v17386:0 * v17386:0, v17386:0 * v17386:0 * v17386:0, v17378:0, v17378:0 * v17378:0, v17378:0 * v17378:0 * v17378:0, v17381:0, v17381:0 * v17381:0, v17381:0 * v17381:0 * v17381:0, 1 + v17386:0, v17389:0) :|: v17389:0 < 1000 && v17378:0 < 1001 && v17381:0 < 1001 && v17386:0 * v17386:0 * v17386:0 < v17378:0 * v17378:0 * v17378:0 + v17381:0 * v17381:0 * v17381:0 && v17386:0 > 1 && v17386:0 < 1001 && times~v17378:0~v17378:0 = v17378:0 * v17378:0 && times~times~v17378:0~v17378:0~v17378:0 = v17378:0 * v17378:0 * v17378:0 && times~v17381:0~v17381:0 = v17381:0 * v17381:0 && times~times~v17381:0~v17381:0~v17381:0 = v17381:0 * v17381:0 * v17381:0
f_2290(x66, x67, x68, x69, x70, x71, x72, x73) -> f_2273(x72, x72 * x72, x72 * x72 * x72, x66, x66 * x66, x66 * x66 * x66, x69, x69 * x69, x69 * x69 * x69, 1 + x72, x73) :|: x73 < 1000 && x66 < 1001 && x69 < 1001 && x72 * x72 * x72 > x66 * x66 * x66 + x69 * x69 * x69 && x72 > 1 && x72 < 1001 && x67 = x66 * x66 && x68 = x66 * x66 * x66 && x70 = x69 * x69 && x71 = x69 * x69 * x69
f_2290(x74, x75, x76, x77, x78, x79, x80, x81) -> f_2290(2, 4, 8, 1 + x77, 1 + x77 + (x77 + x77 * x77), 1 + x77 + (x77 + x77 * x77) + (x77 + x77 * x77 + x77 * x77 * (1 + x77)), 2, x77) :|: x77 < 1000 && x80 > 999 && x80 * x80 * x80 < 1 + (1 + x77 + (x77 + x77 * x77) + (x77 + x77 * x77 + x77 * x77 * (1 + x77))) && 1 + x77 + (x77 + x77 * x77) + (x77 + x77 * x77 + x77 * x77 * (1 + x77)) > -7 && x74 > 1000 && x77 > 1 && x77 < 1001
f_2290(x82, x83, x84, x85, x86, x87, x88, x89) -> f_2290(2, 4, 8, 1 + x85, 1 + x85 + (x85 + x85 * x85), 1 + x85 + (x85 + x85 * x85) + (x85 + x85 * x85 + x85 * x85 * (1 + x85)), 2, x85) :|: x85 < 1000 && x88 > 999 && x88 * x88 * x88 < 1 + (1 + x85 + (x85 + x85 * x85) + (x85 + x85 * x85 + x85 * x85 * (1 + x85))) && 1 + x85 + (x85 + x85 * x85) + (x85 + x85 * x85 + x85 * x85 * (1 + x85)) < -7 && x82 > 1000 && x85 > 1 && x85 < 1001
f_2290(x90, x91, x92, x93, x94, x95, x96, x97) -> f_2290(2, 4, 8, 1 + x93, 1 + x93 + (x93 + x93 * x93), 1 + x93 + (x93 + x93 * x93) + (x93 + x93 * x93 + x93 * x93 * (1 + x93)), 2, x93) :|: x93 < 1000 && x96 > 999 && x96 * x96 * x96 > 1 + (1 + x93 + (x93 + x93 * x93) + (x93 + x93 * x93 + x93 * x93 * (1 + x93))) && 1 + x93 + (x93 + x93 * x93) + (x93 + x93 * x93 + x93 * x93 * (1 + x93)) > -7 && x90 > 1000 && x93 > 1 && x93 < 1001
f_2290(x98, x99, x100, x101, x102, x103, x104, x105) -> f_2290(2, 4, 8, 1 + x101, 1 + x101 + (x101 + x101 * x101), 1 + x101 + (x101 + x101 * x101) + (x101 + x101 * x101 + x101 * x101 * (1 + x101)), 2, x101) :|: x101 < 1000 && x104 > 999 && x104 * x104 * x104 > 1 + (1 + x101 + (x101 + x101 * x101) + (x101 + x101 * x101 + x101 * x101 * (1 + x101))) && 1 + x101 + (x101 + x101 * x101) + (x101 + x101 * x101 + x101 * x101 * (1 + x101)) < -7 && x98 > 1000 && x101 > 1 && x101 < 1001
f_2290(x106, x107, x108, x109, x110, x111, x112, x113) -> f_2273(1 + x112, 1 + x112 + (x112 + x112 * x112), 1 + x112 + (x112 + x112 * x112) + (x112 + x112 * x112 + x112 * x112 * (1 + x112)), 1, 1, 1, 1 + x109, 1 + x109 + (x109 + x109 * x109), 1 + x109 + (x109 + x109 * x109) + (x109 + x109 * x109 + x109 * x109 * (1 + x109)), 1 + (1 + x112), x109) :|: x109 < 1000 && x112 > 1 && x112 * x112 * x112 < 1 + (1 + x109 + (x109 + x109 * x109) + (x109 + x109 * x109 + x109 * x109 * (1 + x109))) && x106 > 1000 && x109 > 1 && 1 + x112 + (x112 + x112 * x112) + (x112 + x112 * x112 + x112 * x112 * (1 + x112)) < 1 + (1 + x109 + (x109 + x109 * x109) + (x109 + x109 * x109 + x109 * x109 * (1 + x109))) && x112 < 1000 && x109 < 1001
f_2290(x114, x115, x116, x117, x118, x119, x120, x121) -> f_2273(1 + x120, 1 + x120 + (x120 + x120 * x120), 1 + x120 + (x120 + x120 * x120) + (x120 + x120 * x120 + x120 * x120 * (1 + x120)), 1, 1, 1, 1 + x117, 1 + x117 + (x117 + x117 * x117), 1 + x117 + (x117 + x117 * x117) + (x117 + x117 * x117 + x117 * x117 * (1 + x117)), 1 + (1 + x120), x117) :|: x117 < 1000 && x120 > 1 && x120 * x120 * x120 < 1 + (1 + x117 + (x117 + x117 * x117) + (x117 + x117 * x117 + x117 * x117 * (1 + x117))) && x114 > 1000 && x117 > 1 && 1 + x120 + (x120 + x120 * x120) + (x120 + x120 * x120 + x120 * x120 * (1 + x120)) > 1 + (1 + x117 + (x117 + x117 * x117) + (x117 + x117 * x117 + x117 * x117 * (1 + x117))) && x120 < 1000 && x117 < 1001
f_2290(x122, x123, x124, x125, x126, x127, x128, x129) -> f_2273(1 + x128, 1 + x128 + (x128 + x128 * x128), 1 + x128 + (x128 + x128 * x128) + (x128 + x128 * x128 + x128 * x128 * (1 + x128)), 1, 1, 1, 1 + x125, 1 + x125 + (x125 + x125 * x125), 1 + x125 + (x125 + x125 * x125) + (x125 + x125 * x125 + x125 * x125 * (1 + x125)), 1 + (1 + x128), x125) :|: x125 < 1000 && x128 > 1 && x128 * x128 * x128 > 1 + (1 + x125 + (x125 + x125 * x125) + (x125 + x125 * x125 + x125 * x125 * (1 + x125))) && x122 > 1000 && x125 > 1 && 1 + x128 + (x128 + x128 * x128) + (x128 + x128 * x128 + x128 * x128 * (1 + x128)) < 1 + (1 + x125 + (x125 + x125 * x125) + (x125 + x125 * x125 + x125 * x125 * (1 + x125))) && x128 < 1000 && x125 < 1001
f_2290(x130, x131, x132, x133, x134, x135, x136, x137) -> f_2273(1 + x136, 1 + x136 + (x136 + x136 * x136), 1 + x136 + (x136 + x136 * x136) + (x136 + x136 * x136 + x136 * x136 * (1 + x136)), 1, 1, 1, 1 + x133, 1 + x133 + (x133 + x133 * x133), 1 + x133 + (x133 + x133 * x133) + (x133 + x133 * x133 + x133 * x133 * (1 + x133)), 1 + (1 + x136), x133) :|: x133 < 1000 && x136 > 1 && x136 * x136 * x136 > 1 + (1 + x133 + (x133 + x133 * x133) + (x133 + x133 * x133 + x133 * x133 * (1 + x133))) && x130 > 1000 && x133 > 1 && 1 + x136 + (x136 + x136 * x136) + (x136 + x136 * x136 + x136 * x136 * (1 + x136)) > 1 + (1 + x133 + (x133 + x133 * x133) + (x133 + x133 * x133 + x133 * x133 * (1 + x133))) && x136 < 1000 && x133 < 1001

----------------------------------------

(10) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(11)
Obligation:
Rules:
f_2290(x98:0, x99:0, x100:0, x101:0, x102:0, x103:0, x104:0, x105:0) -> f_2290(2, 4, 8, 1 + x101:0, 1 + x101:0 + (x101:0 + x101:0 * x101:0), 1 + x101:0 + (x101:0 + x101:0 * x101:0) + (x101:0 + x101:0 * x101:0 + x101:0 * x101:0 * (1 + x101:0)), 2, x101:0) :|: x101:0 > 1 && x101:0 < 1001 && x98:0 > 1000 && 1 + x101:0 + (x101:0 + x101:0 * x101:0) + (x101:0 + x101:0 * x101:0 + x101:0 * x101:0 * (1 + x101:0)) < -7 && x104:0 * x104:0 * x104:0 > 1 + (1 + x101:0 + (x101:0 + x101:0 * x101:0) + (x101:0 + x101:0 * x101:0 + x101:0 * x101:0 * (1 + x101:0))) && x104:0 > 999 && x101:0 < 1000
f_2290(v17378:0:0, times~v17378:0:0~v17378:0:0, times~times~v17378:0:0~v17378:0:0~v17378:0:0, v17381:0:0, times~v17381:0:0~v17381:0:0, times~times~v17381:0:0~v17381:0:0~v17381:0:0, v17386:0:0, v17389:0:0) -> f_2273(v17386:0:0, v17386:0:0 * v17386:0:0, v17386:0:0 * v17386:0:0 * v17386:0:0, v17378:0:0, v17378:0:0 * v17378:0:0, v17378:0:0 * v17378:0:0 * v17378:0:0, v17381:0:0, v17381:0:0 * v17381:0:0, v17381:0:0 * v17381:0:0 * v17381:0:0, 1 + v17386:0:0, v17389:0:0) :|: v17386:0:0 > 1 && v17386:0:0 < 1001 && v17386:0:0 * v17386:0:0 * v17386:0:0 < v17378:0:0 * v17378:0:0 * v17378:0:0 + v17381:0:0 * v17381:0:0 * v17381:0:0 && v17381:0:0 < 1001 && v17378:0:0 < 1001 && v17389:0:0 < 1000 && times~v17378:0:0~v17378:0:0 = v17378:0:0 * v17378:0:0 && times~times~v17378:0:0~v17378:0:0~v17378:0:0 = v17378:0:0 * v17378:0:0 * v17378:0:0 && times~v17381:0:0~v17381:0:0 = v17381:0:0 * v17381:0:0 && times~times~v17381:0:0~v17381:0:0~v17381:0:0 = v17381:0:0 * v17381:0:0 * v17381:0:0
f_2290(x74:0, x75:0, x76:0, x77:0, x78:0, x79:0, x80:0, x81:0) -> f_2290(2, 4, 8, 1 + x77:0, 1 + x77:0 + (x77:0 + x77:0 * x77:0), 1 + x77:0 + (x77:0 + x77:0 * x77:0) + (x77:0 + x77:0 * x77:0 + x77:0 * x77:0 * (1 + x77:0)), 2, x77:0) :|: x77:0 > 1 && x77:0 < 1001 && x74:0 > 1000 && 1 + x77:0 + (x77:0 + x77:0 * x77:0) + (x77:0 + x77:0 * x77:0 + x77:0 * x77:0 * (1 + x77:0)) > -7 && x80:0 * x80:0 * x80:0 < 1 + (1 + x77:0 + (x77:0 + x77:0 * x77:0) + (x77:0 + x77:0 * x77:0 + x77:0 * x77:0 * (1 + x77:0))) && x80:0 > 999 && x77:0 < 1000
f_2290(x106:0, x107:0, x108:0, x109:0, x110:0, x111:0, x112:0, x113:0) -> f_2273(1 + x112:0, 1 + x112:0 + (x112:0 + x112:0 * x112:0), 1 + x112:0 + (x112:0 + x112:0 * x112:0) + (x112:0 + x112:0 * x112:0 + x112:0 * x112:0 * (1 + x112:0)), 1, 1, 1, 1 + x109:0, 1 + x109:0 + (x109:0 + x109:0 * x109:0), 1 + x109:0 + (x109:0 + x109:0 * x109:0) + (x109:0 + x109:0 * x109:0 + x109:0 * x109:0 * (1 + x109:0)), 1 + (1 + x112:0), x109:0) :|: x112:0 < 1000 && x109:0 < 1001 && 1 + x112:0 + (x112:0 + x112:0 * x112:0) + (x112:0 + x112:0 * x112:0 + x112:0 * x112:0 * (1 + x112:0)) < 1 + (1 + x109:0 + (x109:0 + x109:0 * x109:0) + (x109:0 + x109:0 * x109:0 + x109:0 * x109:0 * (1 + x109:0))) && x109:0 > 1 && x106:0 > 1000 && x112:0 * x112:0 * x112:0 < 1 + (1 + x109:0 + (x109:0 + x109:0 * x109:0) + (x109:0 + x109:0 * x109:0 + x109:0 * x109:0 * (1 + x109:0))) && x112:0 > 1 && x109:0 < 1000
f_2273(cons_1000, cons_1000000, cons_1000000000, x3:0, x4:0, x5:0, x6:0, times~x6:0~x6:0, times~times~x6:0~x6:0~x6:0, cons_1001, x10:0) -> f_2290(1 + x3:0, 1 + x3:0 + (x3:0 + x3:0 * x3:0), 1 + x3:0 + (x3:0 + x3:0 * x3:0) + (x3:0 + x3:0 * x3:0 + x3:0 * x3:0 * (1 + x3:0)), x6:0, x6:0 * x6:0, x6:0 * x6:0 * x6:0, 2, x10:0) :|: x3:0 < 1000 && x3:0 < 1001 && 1 + x3:0 + (x3:0 + x3:0 * x3:0) + (x3:0 + x3:0 * x3:0 + x3:0 * x3:0 * (1 + x3:0)) + x6:0 * x6:0 * x6:0 > 1 && x3:0 > 0 && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && times~x6:0~x6:0 = x6:0 * x6:0 && times~times~x6:0~x6:0~x6:0 = x6:0 * x6:0 * x6:0 && cons_1001 = 1001
f_2290(x114:0, x115:0, x116:0, x117:0, x118:0, x119:0, x120:0, x121:0) -> f_2273(1 + x120:0, 1 + x120:0 + (x120:0 + x120:0 * x120:0), 1 + x120:0 + (x120:0 + x120:0 * x120:0) + (x120:0 + x120:0 * x120:0 + x120:0 * x120:0 * (1 + x120:0)), 1, 1, 1, 1 + x117:0, 1 + x117:0 + (x117:0 + x117:0 * x117:0), 1 + x117:0 + (x117:0 + x117:0 * x117:0) + (x117:0 + x117:0 * x117:0 + x117:0 * x117:0 * (1 + x117:0)), 1 + (1 + x120:0), x117:0) :|: x120:0 < 1000 && x117:0 < 1001 && 1 + x120:0 + (x120:0 + x120:0 * x120:0) + (x120:0 + x120:0 * x120:0 + x120:0 * x120:0 * (1 + x120:0)) > 1 + (1 + x117:0 + (x117:0 + x117:0 * x117:0) + (x117:0 + x117:0 * x117:0 + x117:0 * x117:0 * (1 + x117:0))) && x117:0 > 1 && x114:0 > 1000 && x120:0 * x120:0 * x120:0 < 1 + (1 + x117:0 + (x117:0 + x117:0 * x117:0) + (x117:0 + x117:0 * x117:0 + x117:0 * x117:0 * (1 + x117:0))) && x120:0 > 1 && x117:0 < 1000
f_2273(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f_2290(1 + x3, 1 + x3 + (x3 + x3 * x3), 1 + x3 + (x3 + x3 * x3) + (x3 + x3 * x3 + x3 * x3 * (1 + x3)), x6, x6 * x6, x6 * x6 * x6, 2, x10) :|: x3 < 1000 && x3 < 1001 && 1 + x3 + (x3 + x3 * x3) + (x3 + x3 * x3 + x3 * x3 * (1 + x3)) + x6 * x6 * x6 < 1 && x3 > 0 && x = 1000 && x1 = 1000000 && x2 = 1000000000 && x7 = x6 * x6 && x8 = x6 * x6 * x6 && x9 = 1001
f_2273(x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21) -> f_2273(2, 4, 8, 1, 1, 1, 1 + x17, 1 + x17 + (x17 + x17 * x17), 1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17)), 3, x17) :|: 1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17)) < 0 && 7 < 1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17)) && x17 < 1000 && x17 > 1 && x17 < 1001 && x11 = 1000 && x12 = 1000000 && x13 = 1000000000 && x14 = 1000 && x15 = 1000000 && x16 = 1000000000 && x20 = 1001
f_2290(x90:0, x91:0, x92:0, x93:0, x94:0, x95:0, x96:0, x97:0) -> f_2290(2, 4, 8, 1 + x93:0, 1 + x93:0 + (x93:0 + x93:0 * x93:0), 1 + x93:0 + (x93:0 + x93:0 * x93:0) + (x93:0 + x93:0 * x93:0 + x93:0 * x93:0 * (1 + x93:0)), 2, x93:0) :|: x93:0 > 1 && x93:0 < 1001 && x90:0 > 1000 && 1 + x93:0 + (x93:0 + x93:0 * x93:0) + (x93:0 + x93:0 * x93:0 + x93:0 * x93:0 * (1 + x93:0)) > -7 && x96:0 * x96:0 * x96:0 > 1 + (1 + x93:0 + (x93:0 + x93:0 * x93:0) + (x93:0 + x93:0 * x93:0 + x93:0 * x93:0 * (1 + x93:0))) && x96:0 > 999 && x93:0 < 1000
f_2273(v16278:0:0, v16821:0:0, v16926:0:0, v16270:0:0, v16271:0:0, v16272:0:0, v16273:0:0, v16274:0:0, v16275:0:0, v17098:0:0, v16281:0:0) -> f_2290(v16270:0:0, v16271:0:0, v16272:0:0, v16273:0:0, v16274:0:0, v16275:0:0, v17098:0:0, v16281:0:0) :|: v17098:0:0 < 1001 && v16278:0:0 < 1000
f_2290(x66:0, times~x66:0~x66:0, times~times~x66:0~x66:0~x66:0, x69:0, times~x69:0~x69:0, times~times~x69:0~x69:0~x69:0, x72:0, x73:0) -> f_2273(x72:0, x72:0 * x72:0, x72:0 * x72:0 * x72:0, x66:0, x66:0 * x66:0, x66:0 * x66:0 * x66:0, x69:0, x69:0 * x69:0, x69:0 * x69:0 * x69:0, 1 + x72:0, x73:0) :|: x72:0 > 1 && x72:0 < 1001 && x72:0 * x72:0 * x72:0 > x66:0 * x66:0 * x66:0 + x69:0 * x69:0 * x69:0 && x69:0 < 1001 && x66:0 < 1001 && x73:0 < 1000 && times~x66:0~x66:0 = x66:0 * x66:0 && times~times~x66:0~x66:0~x66:0 = x66:0 * x66:0 * x66:0 && times~x69:0~x69:0 = x69:0 * x69:0 && times~times~x69:0~x69:0~x69:0 = x69:0 * x69:0 * x69:0
f_2273(x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32) -> f_2273(2, 4, 8, 1, 1, 1, 1 + x28, 1 + x28 + (x28 + x28 * x28), 1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28)), 3, x28) :|: 1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28)) > 0 && 7 > 1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28)) && x28 < 1000 && x28 > 1 && x28 < 1001 && x22 = 1000 && x23 = 1000000 && x24 = 1000000000 && x25 = 1000 && x26 = 1000000 && x27 = 1000000000 && x31 = 1001
f_2290(x122:0, x123:0, x124:0, x125:0, x126:0, x127:0, x128:0, x129:0) -> f_2273(1 + x128:0, 1 + x128:0 + (x128:0 + x128:0 * x128:0), 1 + x128:0 + (x128:0 + x128:0 * x128:0) + (x128:0 + x128:0 * x128:0 + x128:0 * x128:0 * (1 + x128:0)), 1, 1, 1, 1 + x125:0, 1 + x125:0 + (x125:0 + x125:0 * x125:0), 1 + x125:0 + (x125:0 + x125:0 * x125:0) + (x125:0 + x125:0 * x125:0 + x125:0 * x125:0 * (1 + x125:0)), 1 + (1 + x128:0), x125:0) :|: x128:0 < 1000 && x125:0 < 1001 && 1 + x128:0 + (x128:0 + x128:0 * x128:0) + (x128:0 + x128:0 * x128:0 + x128:0 * x128:0 * (1 + x128:0)) < 1 + (1 + x125:0 + (x125:0 + x125:0 * x125:0) + (x125:0 + x125:0 * x125:0 + x125:0 * x125:0 * (1 + x125:0))) && x125:0 > 1 && x122:0 > 1000 && x128:0 * x128:0 * x128:0 > 1 + (1 + x125:0 + (x125:0 + x125:0 * x125:0) + (x125:0 + x125:0 * x125:0 + x125:0 * x125:0 * (1 + x125:0))) && x128:0 > 1 && x125:0 < 1000
f_2273(x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43) -> f_2273(2, 4, 8, 1, 1, 1, 1 + x39, 1 + x39 + (x39 + x39 * x39), 1 + x39 + (x39 + x39 * x39) + (x39 + x39 * x39 + x39 * x39 * (1 + x39)), 3, x39) :|: x39 < 1000 && x39 < 1001 && 7 < 1 + x39 + (x39 + x39 * x39) + (x39 + x39 * x39 + x39 * x39 * (1 + x39)) && x39 > 1 && x33 = 1000 && x34 = 1000000 && x35 = 1000000000 && x36 = 1000 && x37 = 1000000 && x38 = 1000000000 && x42 = 1001
f_2290(x82:0, x83:0, x84:0, x85:0, x86:0, x87:0, x88:0, x89:0) -> f_2290(2, 4, 8, 1 + x85:0, 1 + x85:0 + (x85:0 + x85:0 * x85:0), 1 + x85:0 + (x85:0 + x85:0 * x85:0) + (x85:0 + x85:0 * x85:0 + x85:0 * x85:0 * (1 + x85:0)), 2, x85:0) :|: x85:0 > 1 && x85:0 < 1001 && x82:0 > 1000 && 1 + x85:0 + (x85:0 + x85:0 * x85:0) + (x85:0 + x85:0 * x85:0 + x85:0 * x85:0 * (1 + x85:0)) < -7 && x88:0 * x88:0 * x88:0 < 1 + (1 + x85:0 + (x85:0 + x85:0 * x85:0) + (x85:0 + x85:0 * x85:0 + x85:0 * x85:0 * (1 + x85:0))) && x88:0 > 999 && x85:0 < 1000
f_2273(x44, x45, x46, x47, x48, x49, x50, x51, x52, x53, x54) -> f_2273(2, 4, 8, 1, 1, 1, 1 + x50, 1 + x50 + (x50 + x50 * x50), 1 + x50 + (x50 + x50 * x50) + (x50 + x50 * x50 + x50 * x50 * (1 + x50)), 3, x50) :|: 1 + x50 + (x50 + x50 * x50) + (x50 + x50 * x50 + x50 * x50 * (1 + x50)) < 0 && 7 > 1 + x50 + (x50 + x50 * x50) + (x50 + x50 * x50 + x50 * x50 * (1 + x50)) && x50 < 1000 && x50 > 1 && x50 < 1001 && x44 = 1000 && x45 = 1000000 && x46 = 1000000000 && x47 = 1000 && x48 = 1000000 && x49 = 1000000000 && x53 = 1001
f_2290(x130:0, x131:0, x132:0, x133:0, x134:0, x135:0, x136:0, x137:0) -> f_2273(1 + x136:0, 1 + x136:0 + (x136:0 + x136:0 * x136:0), 1 + x136:0 + (x136:0 + x136:0 * x136:0) + (x136:0 + x136:0 * x136:0 + x136:0 * x136:0 * (1 + x136:0)), 1, 1, 1, 1 + x133:0, 1 + x133:0 + (x133:0 + x133:0 * x133:0), 1 + x133:0 + (x133:0 + x133:0 * x133:0) + (x133:0 + x133:0 * x133:0 + x133:0 * x133:0 * (1 + x133:0)), 1 + (1 + x136:0), x133:0) :|: x136:0 < 1000 && x133:0 < 1001 && 1 + x136:0 + (x136:0 + x136:0 * x136:0) + (x136:0 + x136:0 * x136:0 + x136:0 * x136:0 * (1 + x136:0)) > 1 + (1 + x133:0 + (x133:0 + x133:0 * x133:0) + (x133:0 + x133:0 * x133:0 + x133:0 * x133:0 * (1 + x133:0))) && x133:0 > 1 && x130:0 > 1000 && x136:0 * x136:0 * x136:0 > 1 + (1 + x133:0 + (x133:0 + x133:0 * x133:0) + (x133:0 + x133:0 * x133:0 + x133:0 * x133:0 * (1 + x133:0))) && x136:0 > 1 && x133:0 < 1000

----------------------------------------

(12) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_2290(x, x1, x2, x3, x4, x5, x6, x7)] = 1000 - x3
[f_2273(x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)] = 1000 - x14

The following rules are decreasing:
f_2290(x98:0, x99:0, x100:0, x101:0, x102:0, x103:0, x104:0, x105:0) -> f_2290(2, 4, 8, 1 + x101:0, 1 + x101:0 + (x101:0 + x101:0 * x101:0), 1 + x101:0 + (x101:0 + x101:0 * x101:0) + (x101:0 + x101:0 * x101:0 + x101:0 * x101:0 * (1 + x101:0)), 2, x101:0) :|: x101:0 > 1 && x101:0 < 1001 && x98:0 > 1000 && 1 + x101:0 + (x101:0 + x101:0 * x101:0) + (x101:0 + x101:0 * x101:0 + x101:0 * x101:0 * (1 + x101:0)) < -7 && x104:0 * x104:0 * x104:0 > 1 + (1 + x101:0 + (x101:0 + x101:0 * x101:0) + (x101:0 + x101:0 * x101:0 + x101:0 * x101:0 * (1 + x101:0))) && x104:0 > 999 && x101:0 < 1000
f_2290(x74:0, x75:0, x76:0, x77:0, x78:0, x79:0, x80:0, x81:0) -> f_2290(2, 4, 8, 1 + x77:0, 1 + x77:0 + (x77:0 + x77:0 * x77:0), 1 + x77:0 + (x77:0 + x77:0 * x77:0) + (x77:0 + x77:0 * x77:0 + x77:0 * x77:0 * (1 + x77:0)), 2, x77:0) :|: x77:0 > 1 && x77:0 < 1001 && x74:0 > 1000 && 1 + x77:0 + (x77:0 + x77:0 * x77:0) + (x77:0 + x77:0 * x77:0 + x77:0 * x77:0 * (1 + x77:0)) > -7 && x80:0 * x80:0 * x80:0 < 1 + (1 + x77:0 + (x77:0 + x77:0 * x77:0) + (x77:0 + x77:0 * x77:0 + x77:0 * x77:0 * (1 + x77:0))) && x80:0 > 999 && x77:0 < 1000
f_2290(x106:0, x107:0, x108:0, x109:0, x110:0, x111:0, x112:0, x113:0) -> f_2273(1 + x112:0, 1 + x112:0 + (x112:0 + x112:0 * x112:0), 1 + x112:0 + (x112:0 + x112:0 * x112:0) + (x112:0 + x112:0 * x112:0 + x112:0 * x112:0 * (1 + x112:0)), 1, 1, 1, 1 + x109:0, 1 + x109:0 + (x109:0 + x109:0 * x109:0), 1 + x109:0 + (x109:0 + x109:0 * x109:0) + (x109:0 + x109:0 * x109:0 + x109:0 * x109:0 * (1 + x109:0)), 1 + (1 + x112:0), x109:0) :|: x112:0 < 1000 && x109:0 < 1001 && 1 + x112:0 + (x112:0 + x112:0 * x112:0) + (x112:0 + x112:0 * x112:0 + x112:0 * x112:0 * (1 + x112:0)) < 1 + (1 + x109:0 + (x109:0 + x109:0 * x109:0) + (x109:0 + x109:0 * x109:0 + x109:0 * x109:0 * (1 + x109:0))) && x109:0 > 1 && x106:0 > 1000 && x112:0 * x112:0 * x112:0 < 1 + (1 + x109:0 + (x109:0 + x109:0 * x109:0) + (x109:0 + x109:0 * x109:0 + x109:0 * x109:0 * (1 + x109:0))) && x112:0 > 1 && x109:0 < 1000
f_2290(x114:0, x115:0, x116:0, x117:0, x118:0, x119:0, x120:0, x121:0) -> f_2273(1 + x120:0, 1 + x120:0 + (x120:0 + x120:0 * x120:0), 1 + x120:0 + (x120:0 + x120:0 * x120:0) + (x120:0 + x120:0 * x120:0 + x120:0 * x120:0 * (1 + x120:0)), 1, 1, 1, 1 + x117:0, 1 + x117:0 + (x117:0 + x117:0 * x117:0), 1 + x117:0 + (x117:0 + x117:0 * x117:0) + (x117:0 + x117:0 * x117:0 + x117:0 * x117:0 * (1 + x117:0)), 1 + (1 + x120:0), x117:0) :|: x120:0 < 1000 && x117:0 < 1001 && 1 + x120:0 + (x120:0 + x120:0 * x120:0) + (x120:0 + x120:0 * x120:0 + x120:0 * x120:0 * (1 + x120:0)) > 1 + (1 + x117:0 + (x117:0 + x117:0 * x117:0) + (x117:0 + x117:0 * x117:0 + x117:0 * x117:0 * (1 + x117:0))) && x117:0 > 1 && x114:0 > 1000 && x120:0 * x120:0 * x120:0 < 1 + (1 + x117:0 + (x117:0 + x117:0 * x117:0) + (x117:0 + x117:0 * x117:0 + x117:0 * x117:0 * (1 + x117:0))) && x120:0 > 1 && x117:0 < 1000
f_2273(x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21) -> f_2273(2, 4, 8, 1, 1, 1, 1 + x17, 1 + x17 + (x17 + x17 * x17), 1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17)), 3, x17) :|: 1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17)) < 0 && 7 < 1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17)) && x17 < 1000 && x17 > 1 && x17 < 1001 && x11 = 1000 && x12 = 1000000 && x13 = 1000000000 && x14 = 1000 && x15 = 1000000 && x16 = 1000000000 && x20 = 1001
f_2290(x90:0, x91:0, x92:0, x93:0, x94:0, x95:0, x96:0, x97:0) -> f_2290(2, 4, 8, 1 + x93:0, 1 + x93:0 + (x93:0 + x93:0 * x93:0), 1 + x93:0 + (x93:0 + x93:0 * x93:0) + (x93:0 + x93:0 * x93:0 + x93:0 * x93:0 * (1 + x93:0)), 2, x93:0) :|: x93:0 > 1 && x93:0 < 1001 && x90:0 > 1000 && 1 + x93:0 + (x93:0 + x93:0 * x93:0) + (x93:0 + x93:0 * x93:0 + x93:0 * x93:0 * (1 + x93:0)) > -7 && x96:0 * x96:0 * x96:0 > 1 + (1 + x93:0 + (x93:0 + x93:0 * x93:0) + (x93:0 + x93:0 * x93:0 + x93:0 * x93:0 * (1 + x93:0))) && x96:0 > 999 && x93:0 < 1000
f_2273(x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32) -> f_2273(2, 4, 8, 1, 1, 1, 1 + x28, 1 + x28 + (x28 + x28 * x28), 1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28)), 3, x28) :|: 1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28)) > 0 && 7 > 1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28)) && x28 < 1000 && x28 > 1 && x28 < 1001 && x22 = 1000 && x23 = 1000000 && x24 = 1000000000 && x25 = 1000 && x26 = 1000000 && x27 = 1000000000 && x31 = 1001
f_2290(x122:0, x123:0, x124:0, x125:0, x126:0, x127:0, x128:0, x129:0) -> f_2273(1 + x128:0, 1 + x128:0 + (x128:0 + x128:0 * x128:0), 1 + x128:0 + (x128:0 + x128:0 * x128:0) + (x128:0 + x128:0 * x128:0 + x128:0 * x128:0 * (1 + x128:0)), 1, 1, 1, 1 + x125:0, 1 + x125:0 + (x125:0 + x125:0 * x125:0), 1 + x125:0 + (x125:0 + x125:0 * x125:0) + (x125:0 + x125:0 * x125:0 + x125:0 * x125:0 * (1 + x125:0)), 1 + (1 + x128:0), x125:0) :|: x128:0 < 1000 && x125:0 < 1001 && 1 + x128:0 + (x128:0 + x128:0 * x128:0) + (x128:0 + x128:0 * x128:0 + x128:0 * x128:0 * (1 + x128:0)) < 1 + (1 + x125:0 + (x125:0 + x125:0 * x125:0) + (x125:0 + x125:0 * x125:0 + x125:0 * x125:0 * (1 + x125:0))) && x125:0 > 1 && x122:0 > 1000 && x128:0 * x128:0 * x128:0 > 1 + (1 + x125:0 + (x125:0 + x125:0 * x125:0) + (x125:0 + x125:0 * x125:0 + x125:0 * x125:0 * (1 + x125:0))) && x128:0 > 1 && x125:0 < 1000
f_2273(x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43) -> f_2273(2, 4, 8, 1, 1, 1, 1 + x39, 1 + x39 + (x39 + x39 * x39), 1 + x39 + (x39 + x39 * x39) + (x39 + x39 * x39 + x39 * x39 * (1 + x39)), 3, x39) :|: x39 < 1000 && x39 < 1001 && 7 < 1 + x39 + (x39 + x39 * x39) + (x39 + x39 * x39 + x39 * x39 * (1 + x39)) && x39 > 1 && x33 = 1000 && x34 = 1000000 && x35 = 1000000000 && x36 = 1000 && x37 = 1000000 && x38 = 1000000000 && x42 = 1001
f_2290(x82:0, x83:0, x84:0, x85:0, x86:0, x87:0, x88:0, x89:0) -> f_2290(2, 4, 8, 1 + x85:0, 1 + x85:0 + (x85:0 + x85:0 * x85:0), 1 + x85:0 + (x85:0 + x85:0 * x85:0) + (x85:0 + x85:0 * x85:0 + x85:0 * x85:0 * (1 + x85:0)), 2, x85:0) :|: x85:0 > 1 && x85:0 < 1001 && x82:0 > 1000 && 1 + x85:0 + (x85:0 + x85:0 * x85:0) + (x85:0 + x85:0 * x85:0 + x85:0 * x85:0 * (1 + x85:0)) < -7 && x88:0 * x88:0 * x88:0 < 1 + (1 + x85:0 + (x85:0 + x85:0 * x85:0) + (x85:0 + x85:0 * x85:0 + x85:0 * x85:0 * (1 + x85:0))) && x88:0 > 999 && x85:0 < 1000
f_2273(x44, x45, x46, x47, x48, x49, x50, x51, x52, x53, x54) -> f_2273(2, 4, 8, 1, 1, 1, 1 + x50, 1 + x50 + (x50 + x50 * x50), 1 + x50 + (x50 + x50 * x50) + (x50 + x50 * x50 + x50 * x50 * (1 + x50)), 3, x50) :|: 1 + x50 + (x50 + x50 * x50) + (x50 + x50 * x50 + x50 * x50 * (1 + x50)) < 0 && 7 > 1 + x50 + (x50 + x50 * x50) + (x50 + x50 * x50 + x50 * x50 * (1 + x50)) && x50 < 1000 && x50 > 1 && x50 < 1001 && x44 = 1000 && x45 = 1000000 && x46 = 1000000000 && x47 = 1000 && x48 = 1000000 && x49 = 1000000000 && x53 = 1001
f_2290(x130:0, x131:0, x132:0, x133:0, x134:0, x135:0, x136:0, x137:0) -> f_2273(1 + x136:0, 1 + x136:0 + (x136:0 + x136:0 * x136:0), 1 + x136:0 + (x136:0 + x136:0 * x136:0) + (x136:0 + x136:0 * x136:0 + x136:0 * x136:0 * (1 + x136:0)), 1, 1, 1, 1 + x133:0, 1 + x133:0 + (x133:0 + x133:0 * x133:0), 1 + x133:0 + (x133:0 + x133:0 * x133:0) + (x133:0 + x133:0 * x133:0 + x133:0 * x133:0 * (1 + x133:0)), 1 + (1 + x136:0), x133:0) :|: x136:0 < 1000 && x133:0 < 1001 && 1 + x136:0 + (x136:0 + x136:0 * x136:0) + (x136:0 + x136:0 * x136:0 + x136:0 * x136:0 * (1 + x136:0)) > 1 + (1 + x133:0 + (x133:0 + x133:0 * x133:0) + (x133:0 + x133:0 * x133:0 + x133:0 * x133:0 * (1 + x133:0))) && x133:0 > 1 && x130:0 > 1000 && x136:0 * x136:0 * x136:0 > 1 + (1 + x133:0 + (x133:0 + x133:0 * x133:0) + (x133:0 + x133:0 * x133:0 + x133:0 * x133:0 * (1 + x133:0))) && x136:0 > 1 && x133:0 < 1000
The following rules are bounded:
f_2290(v17378:0:0, times~v17378:0:0~v17378:0:0, times~times~v17378:0:0~v17378:0:0~v17378:0:0, v17381:0:0, times~v17381:0:0~v17381:0:0, times~times~v17381:0:0~v17381:0:0~v17381:0:0, v17386:0:0, v17389:0:0) -> f_2273(v17386:0:0, v17386:0:0 * v17386:0:0, v17386:0:0 * v17386:0:0 * v17386:0:0, v17378:0:0, v17378:0:0 * v17378:0:0, v17378:0:0 * v17378:0:0 * v17378:0:0, v17381:0:0, v17381:0:0 * v17381:0:0, v17381:0:0 * v17381:0:0 * v17381:0:0, 1 + v17386:0:0, v17389:0:0) :|: v17386:0:0 > 1 && v17386:0:0 < 1001 && v17386:0:0 * v17386:0:0 * v17386:0:0 < v17378:0:0 * v17378:0:0 * v17378:0:0 + v17381:0:0 * v17381:0:0 * v17381:0:0 && v17381:0:0 < 1001 && v17378:0:0 < 1001 && v17389:0:0 < 1000 && times~v17378:0:0~v17378:0:0 = v17378:0:0 * v17378:0:0 && times~times~v17378:0:0~v17378:0:0~v17378:0:0 = v17378:0:0 * v17378:0:0 * v17378:0:0 && times~v17381:0:0~v17381:0:0 = v17381:0:0 * v17381:0:0 && times~times~v17381:0:0~v17381:0:0~v17381:0:0 = v17381:0:0 * v17381:0:0 * v17381:0:0
f_2290(x66:0, times~x66:0~x66:0, times~times~x66:0~x66:0~x66:0, x69:0, times~x69:0~x69:0, times~times~x69:0~x69:0~x69:0, x72:0, x73:0) -> f_2273(x72:0, x72:0 * x72:0, x72:0 * x72:0 * x72:0, x66:0, x66:0 * x66:0, x66:0 * x66:0 * x66:0, x69:0, x69:0 * x69:0, x69:0 * x69:0 * x69:0, 1 + x72:0, x73:0) :|: x72:0 > 1 && x72:0 < 1001 && x72:0 * x72:0 * x72:0 > x66:0 * x66:0 * x66:0 + x69:0 * x69:0 * x69:0 && x69:0 < 1001 && x66:0 < 1001 && x73:0 < 1000 && times~x66:0~x66:0 = x66:0 * x66:0 && times~times~x66:0~x66:0~x66:0 = x66:0 * x66:0 * x66:0 && times~x69:0~x69:0 = x69:0 * x69:0 && times~times~x69:0~x69:0~x69:0 = x69:0 * x69:0 * x69:0

----------------------------------------

(13)
Complex Obligation (AND)

----------------------------------------

(14)
Obligation:
Rules:
f_2290(v17378:0:0, times~v17378:0:0~v17378:0:0, times~times~v17378:0:0~v17378:0:0~v17378:0:0, v17381:0:0, times~v17381:0:0~v17381:0:0, times~times~v17381:0:0~v17381:0:0~v17381:0:0, v17386:0:0, v17389:0:0) -> f_2273(v17386:0:0, v17386:0:0 * v17386:0:0, v17386:0:0 * v17386:0:0 * v17386:0:0, v17378:0:0, v17378:0:0 * v17378:0:0, v17378:0:0 * v17378:0:0 * v17378:0:0, v17381:0:0, v17381:0:0 * v17381:0:0, v17381:0:0 * v17381:0:0 * v17381:0:0, 1 + v17386:0:0, v17389:0:0) :|: v17386:0:0 > 1 && v17386:0:0 < 1001 && v17386:0:0 * v17386:0:0 * v17386:0:0 < v17378:0:0 * v17378:0:0 * v17378:0:0 + v17381:0:0 * v17381:0:0 * v17381:0:0 && v17381:0:0 < 1001 && v17378:0:0 < 1001 && v17389:0:0 < 1000 && times~v17378:0:0~v17378:0:0 = v17378:0:0 * v17378:0:0 && times~times~v17378:0:0~v17378:0:0~v17378:0:0 = v17378:0:0 * v17378:0:0 * v17378:0:0 && times~v17381:0:0~v17381:0:0 = v17381:0:0 * v17381:0:0 && times~times~v17381:0:0~v17381:0:0~v17381:0:0 = v17381:0:0 * v17381:0:0 * v17381:0:0
f_2273(cons_1000, cons_1000000, cons_1000000000, x3:0, x4:0, x5:0, x6:0, times~x6:0~x6:0, times~times~x6:0~x6:0~x6:0, cons_1001, x10:0) -> f_2290(1 + x3:0, 1 + x3:0 + (x3:0 + x3:0 * x3:0), 1 + x3:0 + (x3:0 + x3:0 * x3:0) + (x3:0 + x3:0 * x3:0 + x3:0 * x3:0 * (1 + x3:0)), x6:0, x6:0 * x6:0, x6:0 * x6:0 * x6:0, 2, x10:0) :|: x3:0 < 1000 && x3:0 < 1001 && 1 + x3:0 + (x3:0 + x3:0 * x3:0) + (x3:0 + x3:0 * x3:0 + x3:0 * x3:0 * (1 + x3:0)) + x6:0 * x6:0 * x6:0 > 1 && x3:0 > 0 && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && times~x6:0~x6:0 = x6:0 * x6:0 && times~times~x6:0~x6:0~x6:0 = x6:0 * x6:0 * x6:0 && cons_1001 = 1001
f_2273(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f_2290(1 + x3, 1 + x3 + (x3 + x3 * x3), 1 + x3 + (x3 + x3 * x3) + (x3 + x3 * x3 + x3 * x3 * (1 + x3)), x6, x6 * x6, x6 * x6 * x6, 2, x10) :|: x3 < 1000 && x3 < 1001 && 1 + x3 + (x3 + x3 * x3) + (x3 + x3 * x3 + x3 * x3 * (1 + x3)) + x6 * x6 * x6 < 1 && x3 > 0 && x = 1000 && x1 = 1000000 && x2 = 1000000000 && x7 = x6 * x6 && x8 = x6 * x6 * x6 && x9 = 1001
f_2273(v16278:0:0, v16821:0:0, v16926:0:0, v16270:0:0, v16271:0:0, v16272:0:0, v16273:0:0, v16274:0:0, v16275:0:0, v17098:0:0, v16281:0:0) -> f_2290(v16270:0:0, v16271:0:0, v16272:0:0, v16273:0:0, v16274:0:0, v16275:0:0, v17098:0:0, v16281:0:0) :|: v17098:0:0 < 1001 && v16278:0:0 < 1000
f_2290(x66:0, times~x66:0~x66:0, times~times~x66:0~x66:0~x66:0, x69:0, times~x69:0~x69:0, times~times~x69:0~x69:0~x69:0, x72:0, x73:0) -> f_2273(x72:0, x72:0 * x72:0, x72:0 * x72:0 * x72:0, x66:0, x66:0 * x66:0, x66:0 * x66:0 * x66:0, x69:0, x69:0 * x69:0, x69:0 * x69:0 * x69:0, 1 + x72:0, x73:0) :|: x72:0 > 1 && x72:0 < 1001 && x72:0 * x72:0 * x72:0 > x66:0 * x66:0 * x66:0 + x69:0 * x69:0 * x69:0 && x69:0 < 1001 && x66:0 < 1001 && x73:0 < 1000 && times~x66:0~x66:0 = x66:0 * x66:0 && times~times~x66:0~x66:0~x66:0 = x66:0 * x66:0 * x66:0 && times~x69:0~x69:0 = x69:0 * x69:0 && times~times~x69:0~x69:0~x69:0 = x69:0 * x69:0 * x69:0

----------------------------------------

(15) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(16)
Obligation:
Rules:
f_2290(v17378:0:0:0, times~v17378:0:0:0~v17378:0:0:0, times~times~v17378:0:0:0~v17378:0:0:0~v17378:0:0:0, v17381:0:0:0, times~v17381:0:0:0~v17381:0:0:0, times~times~v17381:0:0:0~v17381:0:0:0~v17381:0:0:0, v17386:0:0:0, v17389:0:0:0) -> f_2273(v17386:0:0:0, v17386:0:0:0 * v17386:0:0:0, v17386:0:0:0 * v17386:0:0:0 * v17386:0:0:0, v17378:0:0:0, v17378:0:0:0 * v17378:0:0:0, v17378:0:0:0 * v17378:0:0:0 * v17378:0:0:0, v17381:0:0:0, v17381:0:0:0 * v17381:0:0:0, v17381:0:0:0 * v17381:0:0:0 * v17381:0:0:0, 1 + v17386:0:0:0, v17389:0:0:0) :|: v17378:0:0:0 < 1001 && v17389:0:0:0 < 1000 && v17381:0:0:0 < 1001 && v17386:0:0:0 * v17386:0:0:0 * v17386:0:0:0 < v17378:0:0:0 * v17378:0:0:0 * v17378:0:0:0 + v17381:0:0:0 * v17381:0:0:0 * v17381:0:0:0 && v17386:0:0:0 < 1001 && v17386:0:0:0 > 1 && times~v17378:0:0:0~v17378:0:0:0 = v17378:0:0:0 * v17378:0:0:0 && times~times~v17378:0:0:0~v17378:0:0:0~v17378:0:0:0 = v17378:0:0:0 * v17378:0:0:0 * v17378:0:0:0 && times~v17381:0:0:0~v17381:0:0:0 = v17381:0:0:0 * v17381:0:0:0 && times~times~v17381:0:0:0~v17381:0:0:0~v17381:0:0:0 = v17381:0:0:0 * v17381:0:0:0 * v17381:0:0:0
f_2273(cons_1000, cons_1000000, cons_1000000000, x3:0, x4:0, x5:0, x6:0, times~x6:0~x6:0, times~times~x6:0~x6:0~x6:0, cons_1001, x10:0) -> f_2290(1 + x3:0, 1 + x3:0 + (x3:0 + x3:0 * x3:0), 1 + x3:0 + (x3:0 + x3:0 * x3:0) + (x3:0 + x3:0 * x3:0 + x3:0 * x3:0 * (1 + x3:0)), x6:0, x6:0 * x6:0, x6:0 * x6:0 * x6:0, 2, x10:0) :|: 1 + x3:0 + (x3:0 + x3:0 * x3:0) + (x3:0 + x3:0 * x3:0 + x3:0 * x3:0 * (1 + x3:0)) + x6:0 * x6:0 * x6:0 < 1 && x3:0 > 0 && x3:0 < 1001 && x3:0 < 1000 && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && times~x6:0~x6:0 = x6:0 * x6:0 && times~times~x6:0~x6:0~x6:0 = x6:0 * x6:0 * x6:0 && cons_1001 = 1001
f_2273(v16278:0:0:0, v16821:0:0:0, v16926:0:0:0, v16270:0:0:0, v16271:0:0:0, v16272:0:0:0, v16273:0:0:0, v16274:0:0:0, v16275:0:0:0, v17098:0:0:0, v16281:0:0:0) -> f_2290(v16270:0:0:0, v16271:0:0:0, v16272:0:0:0, v16273:0:0:0, v16274:0:0:0, v16275:0:0:0, v17098:0:0:0, v16281:0:0:0) :|: v17098:0:0:0 < 1001 && v16278:0:0:0 < 1000
f_2273(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f_2290(1 + x3, 1 + x3 + (x3 + x3 * x3), 1 + x3 + (x3 + x3 * x3) + (x3 + x3 * x3 + x3 * x3 * (1 + x3)), x6, x6 * x6, x6 * x6 * x6, 2, x10) :|: 1 + x3 + (x3 + x3 * x3) + (x3 + x3 * x3 + x3 * x3 * (1 + x3)) + x6 * x6 * x6 > 1 && x3 > 0 && x3 < 1001 && x3 < 1000 && x = 1000 && x1 = 1000000 && x2 = 1000000000 && x7 = x6 * x6 && x8 = x6 * x6 * x6 && x9 = 1001
f_2290(x66:0:0, times~x66:0:0~x66:0:0, times~times~x66:0:0~x66:0:0~x66:0:0, x69:0:0, times~x69:0:0~x69:0:0, times~times~x69:0:0~x69:0:0~x69:0:0, x72:0:0, x73:0:0) -> f_2273(x72:0:0, x72:0:0 * x72:0:0, x72:0:0 * x72:0:0 * x72:0:0, x66:0:0, x66:0:0 * x66:0:0, x66:0:0 * x66:0:0 * x66:0:0, x69:0:0, x69:0:0 * x69:0:0, x69:0:0 * x69:0:0 * x69:0:0, 1 + x72:0:0, x73:0:0) :|: x66:0:0 < 1001 && x73:0:0 < 1000 && x69:0:0 < 1001 && x72:0:0 * x72:0:0 * x72:0:0 > x66:0:0 * x66:0:0 * x66:0:0 + x69:0:0 * x69:0:0 * x69:0:0 && x72:0:0 < 1001 && x72:0:0 > 1 && times~x66:0:0~x66:0:0 = x66:0:0 * x66:0:0 && times~times~x66:0:0~x66:0:0~x66:0:0 = x66:0:0 * x66:0:0 * x66:0:0 && times~x69:0:0~x69:0:0 = x69:0:0 * x69:0:0 && times~times~x69:0:0~x69:0:0~x69:0:0 = x69:0:0 * x69:0:0 * x69:0:0

----------------------------------------

(17) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_2290 ] = -1998*f_2290_1 + -2*f_2290_7 + 1
[ f_2273 ] = -1998*f_2273_4 + -2*f_2273_10 + 2

The following rules are decreasing:
f_2290(v17378:0:0:0, times~v17378:0:0:0~v17378:0:0:0, times~times~v17378:0:0:0~v17378:0:0:0~v17378:0:0:0, v17381:0:0:0, times~v17381:0:0:0~v17381:0:0:0, times~times~v17381:0:0:0~v17381:0:0:0~v17381:0:0:0, v17386:0:0:0, v17389:0:0:0) -> f_2273(v17386:0:0:0, v17386:0:0:0 * v17386:0:0:0, v17386:0:0:0 * v17386:0:0:0 * v17386:0:0:0, v17378:0:0:0, v17378:0:0:0 * v17378:0:0:0, v17378:0:0:0 * v17378:0:0:0 * v17378:0:0:0, v17381:0:0:0, v17381:0:0:0 * v17381:0:0:0, v17381:0:0:0 * v17381:0:0:0 * v17381:0:0:0, 1 + v17386:0:0:0, v17389:0:0:0) :|: v17378:0:0:0 < 1001 && v17389:0:0:0 < 1000 && v17381:0:0:0 < 1001 && v17386:0:0:0 * v17386:0:0:0 * v17386:0:0:0 < v17378:0:0:0 * v17378:0:0:0 * v17378:0:0:0 + v17381:0:0:0 * v17381:0:0:0 * v17381:0:0:0 && v17386:0:0:0 < 1001 && v17386:0:0:0 > 1 && times~v17378:0:0:0~v17378:0:0:0 = v17378:0:0:0 * v17378:0:0:0 && times~times~v17378:0:0:0~v17378:0:0:0~v17378:0:0:0 = v17378:0:0:0 * v17378:0:0:0 * v17378:0:0:0 && times~v17381:0:0:0~v17381:0:0:0 = v17381:0:0:0 * v17381:0:0:0 && times~times~v17381:0:0:0~v17381:0:0:0~v17381:0:0:0 = v17381:0:0:0 * v17381:0:0:0 * v17381:0:0:0
f_2273(cons_1000, cons_1000000, cons_1000000000, x3:0, x4:0, x5:0, x6:0, times~x6:0~x6:0, times~times~x6:0~x6:0~x6:0, cons_1001, x10:0) -> f_2290(1 + x3:0, 1 + x3:0 + (x3:0 + x3:0 * x3:0), 1 + x3:0 + (x3:0 + x3:0 * x3:0) + (x3:0 + x3:0 * x3:0 + x3:0 * x3:0 * (1 + x3:0)), x6:0, x6:0 * x6:0, x6:0 * x6:0 * x6:0, 2, x10:0) :|: 1 + x3:0 + (x3:0 + x3:0 * x3:0) + (x3:0 + x3:0 * x3:0 + x3:0 * x3:0 * (1 + x3:0)) + x6:0 * x6:0 * x6:0 < 1 && x3:0 > 0 && x3:0 < 1001 && x3:0 < 1000 && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && times~x6:0~x6:0 = x6:0 * x6:0 && times~times~x6:0~x6:0~x6:0 = x6:0 * x6:0 * x6:0 && cons_1001 = 1001
f_2273(v16278:0:0:0, v16821:0:0:0, v16926:0:0:0, v16270:0:0:0, v16271:0:0:0, v16272:0:0:0, v16273:0:0:0, v16274:0:0:0, v16275:0:0:0, v17098:0:0:0, v16281:0:0:0) -> f_2290(v16270:0:0:0, v16271:0:0:0, v16272:0:0:0, v16273:0:0:0, v16274:0:0:0, v16275:0:0:0, v17098:0:0:0, v16281:0:0:0) :|: v17098:0:0:0 < 1001 && v16278:0:0:0 < 1000
f_2273(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f_2290(1 + x3, 1 + x3 + (x3 + x3 * x3), 1 + x3 + (x3 + x3 * x3) + (x3 + x3 * x3 + x3 * x3 * (1 + x3)), x6, x6 * x6, x6 * x6 * x6, 2, x10) :|: 1 + x3 + (x3 + x3 * x3) + (x3 + x3 * x3 + x3 * x3 * (1 + x3)) + x6 * x6 * x6 > 1 && x3 > 0 && x3 < 1001 && x3 < 1000 && x = 1000 && x1 = 1000000 && x2 = 1000000000 && x7 = x6 * x6 && x8 = x6 * x6 * x6 && x9 = 1001
f_2290(x66:0:0, times~x66:0:0~x66:0:0, times~times~x66:0:0~x66:0:0~x66:0:0, x69:0:0, times~x69:0:0~x69:0:0, times~times~x69:0:0~x69:0:0~x69:0:0, x72:0:0, x73:0:0) -> f_2273(x72:0:0, x72:0:0 * x72:0:0, x72:0:0 * x72:0:0 * x72:0:0, x66:0:0, x66:0:0 * x66:0:0, x66:0:0 * x66:0:0 * x66:0:0, x69:0:0, x69:0:0 * x69:0:0, x69:0:0 * x69:0:0 * x69:0:0, 1 + x72:0:0, x73:0:0) :|: x66:0:0 < 1001 && x73:0:0 < 1000 && x69:0:0 < 1001 && x72:0:0 * x72:0:0 * x72:0:0 > x66:0:0 * x66:0:0 * x66:0:0 + x69:0:0 * x69:0:0 * x69:0:0 && x72:0:0 < 1001 && x72:0:0 > 1 && times~x66:0:0~x66:0:0 = x66:0:0 * x66:0:0 && times~times~x66:0:0~x66:0:0~x66:0:0 = x66:0:0 * x66:0:0 * x66:0:0 && times~x69:0:0~x69:0:0 = x69:0:0 * x69:0:0 && times~times~x69:0:0~x69:0:0~x69:0:0 = x69:0:0 * x69:0:0 * x69:0:0

The following rules are bounded:
f_2273(cons_1000, cons_1000000, cons_1000000000, x3:0, x4:0, x5:0, x6:0, times~x6:0~x6:0, times~times~x6:0~x6:0~x6:0, cons_1001, x10:0) -> f_2290(1 + x3:0, 1 + x3:0 + (x3:0 + x3:0 * x3:0), 1 + x3:0 + (x3:0 + x3:0 * x3:0) + (x3:0 + x3:0 * x3:0 + x3:0 * x3:0 * (1 + x3:0)), x6:0, x6:0 * x6:0, x6:0 * x6:0 * x6:0, 2, x10:0) :|: 1 + x3:0 + (x3:0 + x3:0 * x3:0) + (x3:0 + x3:0 * x3:0 + x3:0 * x3:0 * (1 + x3:0)) + x6:0 * x6:0 * x6:0 < 1 && x3:0 > 0 && x3:0 < 1001 && x3:0 < 1000 && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && times~x6:0~x6:0 = x6:0 * x6:0 && times~times~x6:0~x6:0~x6:0 = x6:0 * x6:0 * x6:0 && cons_1001 = 1001
f_2273(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f_2290(1 + x3, 1 + x3 + (x3 + x3 * x3), 1 + x3 + (x3 + x3 * x3) + (x3 + x3 * x3 + x3 * x3 * (1 + x3)), x6, x6 * x6, x6 * x6 * x6, 2, x10) :|: 1 + x3 + (x3 + x3 * x3) + (x3 + x3 * x3 + x3 * x3 * (1 + x3)) + x6 * x6 * x6 > 1 && x3 > 0 && x3 < 1001 && x3 < 1000 && x = 1000 && x1 = 1000000 && x2 = 1000000000 && x7 = x6 * x6 && x8 = x6 * x6 * x6 && x9 = 1001


----------------------------------------

(18)
Obligation:
Rules:
f_2290(v17378:0:0:0, times~v17378:0:0:0~v17378:0:0:0, times~times~v17378:0:0:0~v17378:0:0:0~v17378:0:0:0, v17381:0:0:0, times~v17381:0:0:0~v17381:0:0:0, times~times~v17381:0:0:0~v17381:0:0:0~v17381:0:0:0, v17386:0:0:0, v17389:0:0:0) -> f_2273(v17386:0:0:0, v17386:0:0:0 * v17386:0:0:0, v17386:0:0:0 * v17386:0:0:0 * v17386:0:0:0, v17378:0:0:0, v17378:0:0:0 * v17378:0:0:0, v17378:0:0:0 * v17378:0:0:0 * v17378:0:0:0, v17381:0:0:0, v17381:0:0:0 * v17381:0:0:0, v17381:0:0:0 * v17381:0:0:0 * v17381:0:0:0, 1 + v17386:0:0:0, v17389:0:0:0) :|: v17378:0:0:0 < 1001 && v17389:0:0:0 < 1000 && v17381:0:0:0 < 1001 && v17386:0:0:0 * v17386:0:0:0 * v17386:0:0:0 < v17378:0:0:0 * v17378:0:0:0 * v17378:0:0:0 + v17381:0:0:0 * v17381:0:0:0 * v17381:0:0:0 && v17386:0:0:0 < 1001 && v17386:0:0:0 > 1 && times~v17378:0:0:0~v17378:0:0:0 = v17378:0:0:0 * v17378:0:0:0 && times~times~v17378:0:0:0~v17378:0:0:0~v17378:0:0:0 = v17378:0:0:0 * v17378:0:0:0 * v17378:0:0:0 && times~v17381:0:0:0~v17381:0:0:0 = v17381:0:0:0 * v17381:0:0:0 && times~times~v17381:0:0:0~v17381:0:0:0~v17381:0:0:0 = v17381:0:0:0 * v17381:0:0:0 * v17381:0:0:0
f_2273(v16278:0:0:0, v16821:0:0:0, v16926:0:0:0, v16270:0:0:0, v16271:0:0:0, v16272:0:0:0, v16273:0:0:0, v16274:0:0:0, v16275:0:0:0, v17098:0:0:0, v16281:0:0:0) -> f_2290(v16270:0:0:0, v16271:0:0:0, v16272:0:0:0, v16273:0:0:0, v16274:0:0:0, v16275:0:0:0, v17098:0:0:0, v16281:0:0:0) :|: v17098:0:0:0 < 1001 && v16278:0:0:0 < 1000
f_2290(x66:0:0, times~x66:0:0~x66:0:0, times~times~x66:0:0~x66:0:0~x66:0:0, x69:0:0, times~x69:0:0~x69:0:0, times~times~x69:0:0~x69:0:0~x69:0:0, x72:0:0, x73:0:0) -> f_2273(x72:0:0, x72:0:0 * x72:0:0, x72:0:0 * x72:0:0 * x72:0:0, x66:0:0, x66:0:0 * x66:0:0, x66:0:0 * x66:0:0 * x66:0:0, x69:0:0, x69:0:0 * x69:0:0, x69:0:0 * x69:0:0 * x69:0:0, 1 + x72:0:0, x73:0:0) :|: x66:0:0 < 1001 && x73:0:0 < 1000 && x69:0:0 < 1001 && x72:0:0 * x72:0:0 * x72:0:0 > x66:0:0 * x66:0:0 * x66:0:0 + x69:0:0 * x69:0:0 * x69:0:0 && x72:0:0 < 1001 && x72:0:0 > 1 && times~x66:0:0~x66:0:0 = x66:0:0 * x66:0:0 && times~times~x66:0:0~x66:0:0~x66:0:0 = x66:0:0 * x66:0:0 * x66:0:0 && times~x69:0:0~x69:0:0 = x69:0:0 * x69:0:0 && times~times~x69:0:0~x69:0:0~x69:0:0 = x69:0:0 * x69:0:0 * x69:0:0

----------------------------------------

(19) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(20)
Obligation:
Rules:
f_2290(x66:0:0:0, times~x66:0:0:0~x66:0:0:0, times~times~x66:0:0:0~x66:0:0:0~x66:0:0:0, x69:0:0:0, times~x69:0:0:0~x69:0:0:0, times~times~x69:0:0:0~x69:0:0:0~x69:0:0:0, x72:0:0:0, x73:0:0:0) -> f_2290(x66:0:0:0, x66:0:0:0 * x66:0:0:0, x66:0:0:0 * x66:0:0:0 * x66:0:0:0, x69:0:0:0, x69:0:0:0 * x69:0:0:0, x69:0:0:0 * x69:0:0:0 * x69:0:0:0, 1 + x72:0:0:0, x73:0:0:0) :|: x72:0:0:0 < 1000 && x72:0:0:0 > 1 && x72:0:0:0 < 1001 && x72:0:0:0 * x72:0:0:0 * x72:0:0:0 > x66:0:0:0 * x66:0:0:0 * x66:0:0:0 + x69:0:0:0 * x69:0:0:0 * x69:0:0:0 && x69:0:0:0 < 1001 && x73:0:0:0 < 1000 && x66:0:0:0 < 1001 && times~x66:0:0:0~x66:0:0:0 = x66:0:0:0 * x66:0:0:0 && times~times~x66:0:0:0~x66:0:0:0~x66:0:0:0 = x66:0:0:0 * x66:0:0:0 * x66:0:0:0 && times~x69:0:0:0~x69:0:0:0 = x69:0:0:0 * x69:0:0:0 && times~times~x69:0:0:0~x69:0:0:0~x69:0:0:0 = x69:0:0:0 * x69:0:0:0 * x69:0:0:0
f_2290(v17378:0:0:0:0, times~v17378:0:0:0:0~v17378:0:0:0:0, times~times~v17378:0:0:0:0~v17378:0:0:0:0~v17378:0:0:0:0, v17381:0:0:0:0, times~v17381:0:0:0:0~v17381:0:0:0:0, times~times~v17381:0:0:0:0~v17381:0:0:0:0~v17381:0:0:0:0, v17386:0:0:0:0, v17389:0:0:0:0) -> f_2290(v17378:0:0:0:0, v17378:0:0:0:0 * v17378:0:0:0:0, v17378:0:0:0:0 * v17378:0:0:0:0 * v17378:0:0:0:0, v17381:0:0:0:0, v17381:0:0:0:0 * v17381:0:0:0:0, v17381:0:0:0:0 * v17381:0:0:0:0 * v17381:0:0:0:0, 1 + v17386:0:0:0:0, v17389:0:0:0:0) :|: v17386:0:0:0:0 < 1000 && v17386:0:0:0:0 > 1 && v17386:0:0:0:0 < 1001 && v17386:0:0:0:0 * v17386:0:0:0:0 * v17386:0:0:0:0 < v17378:0:0:0:0 * v17378:0:0:0:0 * v17378:0:0:0:0 + v17381:0:0:0:0 * v17381:0:0:0:0 * v17381:0:0:0:0 && v17381:0:0:0:0 < 1001 && v17389:0:0:0:0 < 1000 && v17378:0:0:0:0 < 1001 && times~v17378:0:0:0:0~v17378:0:0:0:0 = v17378:0:0:0:0 * v17378:0:0:0:0 && times~times~v17378:0:0:0:0~v17378:0:0:0:0~v17378:0:0:0:0 = v17378:0:0:0:0 * v17378:0:0:0:0 * v17378:0:0:0:0 && times~v17381:0:0:0:0~v17381:0:0:0:0 = v17381:0:0:0:0 * v17381:0:0:0:0 && times~times~v17381:0:0:0:0~v17381:0:0:0:0~v17381:0:0:0:0 = v17381:0:0:0:0 * v17381:0:0:0:0 * v17381:0:0:0:0

----------------------------------------

(21) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_2290 ] = -1*f_2290_7

The following rules are decreasing:
f_2290(x66:0:0:0, times~x66:0:0:0~x66:0:0:0, times~times~x66:0:0:0~x66:0:0:0~x66:0:0:0, x69:0:0:0, times~x69:0:0:0~x69:0:0:0, times~times~x69:0:0:0~x69:0:0:0~x69:0:0:0, x72:0:0:0, x73:0:0:0) -> f_2290(x66:0:0:0, x66:0:0:0 * x66:0:0:0, x66:0:0:0 * x66:0:0:0 * x66:0:0:0, x69:0:0:0, x69:0:0:0 * x69:0:0:0, x69:0:0:0 * x69:0:0:0 * x69:0:0:0, 1 + x72:0:0:0, x73:0:0:0) :|: x72:0:0:0 < 1000 && x72:0:0:0 > 1 && x72:0:0:0 < 1001 && x72:0:0:0 * x72:0:0:0 * x72:0:0:0 > x66:0:0:0 * x66:0:0:0 * x66:0:0:0 + x69:0:0:0 * x69:0:0:0 * x69:0:0:0 && x69:0:0:0 < 1001 && x73:0:0:0 < 1000 && x66:0:0:0 < 1001 && times~x66:0:0:0~x66:0:0:0 = x66:0:0:0 * x66:0:0:0 && times~times~x66:0:0:0~x66:0:0:0~x66:0:0:0 = x66:0:0:0 * x66:0:0:0 * x66:0:0:0 && times~x69:0:0:0~x69:0:0:0 = x69:0:0:0 * x69:0:0:0 && times~times~x69:0:0:0~x69:0:0:0~x69:0:0:0 = x69:0:0:0 * x69:0:0:0 * x69:0:0:0
f_2290(v17378:0:0:0:0, times~v17378:0:0:0:0~v17378:0:0:0:0, times~times~v17378:0:0:0:0~v17378:0:0:0:0~v17378:0:0:0:0, v17381:0:0:0:0, times~v17381:0:0:0:0~v17381:0:0:0:0, times~times~v17381:0:0:0:0~v17381:0:0:0:0~v17381:0:0:0:0, v17386:0:0:0:0, v17389:0:0:0:0) -> f_2290(v17378:0:0:0:0, v17378:0:0:0:0 * v17378:0:0:0:0, v17378:0:0:0:0 * v17378:0:0:0:0 * v17378:0:0:0:0, v17381:0:0:0:0, v17381:0:0:0:0 * v17381:0:0:0:0, v17381:0:0:0:0 * v17381:0:0:0:0 * v17381:0:0:0:0, 1 + v17386:0:0:0:0, v17389:0:0:0:0) :|: v17386:0:0:0:0 < 1000 && v17386:0:0:0:0 > 1 && v17386:0:0:0:0 < 1001 && v17386:0:0:0:0 * v17386:0:0:0:0 * v17386:0:0:0:0 < v17378:0:0:0:0 * v17378:0:0:0:0 * v17378:0:0:0:0 + v17381:0:0:0:0 * v17381:0:0:0:0 * v17381:0:0:0:0 && v17381:0:0:0:0 < 1001 && v17389:0:0:0:0 < 1000 && v17378:0:0:0:0 < 1001 && times~v17378:0:0:0:0~v17378:0:0:0:0 = v17378:0:0:0:0 * v17378:0:0:0:0 && times~times~v17378:0:0:0:0~v17378:0:0:0:0~v17378:0:0:0:0 = v17378:0:0:0:0 * v17378:0:0:0:0 * v17378:0:0:0:0 && times~v17381:0:0:0:0~v17381:0:0:0:0 = v17381:0:0:0:0 * v17381:0:0:0:0 && times~times~v17381:0:0:0:0~v17381:0:0:0:0~v17381:0:0:0:0 = v17381:0:0:0:0 * v17381:0:0:0:0 * v17381:0:0:0:0

The following rules are bounded:
f_2290(x66:0:0:0, times~x66:0:0:0~x66:0:0:0, times~times~x66:0:0:0~x66:0:0:0~x66:0:0:0, x69:0:0:0, times~x69:0:0:0~x69:0:0:0, times~times~x69:0:0:0~x69:0:0:0~x69:0:0:0, x72:0:0:0, x73:0:0:0) -> f_2290(x66:0:0:0, x66:0:0:0 * x66:0:0:0, x66:0:0:0 * x66:0:0:0 * x66:0:0:0, x69:0:0:0, x69:0:0:0 * x69:0:0:0, x69:0:0:0 * x69:0:0:0 * x69:0:0:0, 1 + x72:0:0:0, x73:0:0:0) :|: x72:0:0:0 < 1000 && x72:0:0:0 > 1 && x72:0:0:0 < 1001 && x72:0:0:0 * x72:0:0:0 * x72:0:0:0 > x66:0:0:0 * x66:0:0:0 * x66:0:0:0 + x69:0:0:0 * x69:0:0:0 * x69:0:0:0 && x69:0:0:0 < 1001 && x73:0:0:0 < 1000 && x66:0:0:0 < 1001 && times~x66:0:0:0~x66:0:0:0 = x66:0:0:0 * x66:0:0:0 && times~times~x66:0:0:0~x66:0:0:0~x66:0:0:0 = x66:0:0:0 * x66:0:0:0 * x66:0:0:0 && times~x69:0:0:0~x69:0:0:0 = x69:0:0:0 * x69:0:0:0 && times~times~x69:0:0:0~x69:0:0:0~x69:0:0:0 = x69:0:0:0 * x69:0:0:0 * x69:0:0:0
f_2290(v17378:0:0:0:0, times~v17378:0:0:0:0~v17378:0:0:0:0, times~times~v17378:0:0:0:0~v17378:0:0:0:0~v17378:0:0:0:0, v17381:0:0:0:0, times~v17381:0:0:0:0~v17381:0:0:0:0, times~times~v17381:0:0:0:0~v17381:0:0:0:0~v17381:0:0:0:0, v17386:0:0:0:0, v17389:0:0:0:0) -> f_2290(v17378:0:0:0:0, v17378:0:0:0:0 * v17378:0:0:0:0, v17378:0:0:0:0 * v17378:0:0:0:0 * v17378:0:0:0:0, v17381:0:0:0:0, v17381:0:0:0:0 * v17381:0:0:0:0, v17381:0:0:0:0 * v17381:0:0:0:0 * v17381:0:0:0:0, 1 + v17386:0:0:0:0, v17389:0:0:0:0) :|: v17386:0:0:0:0 < 1000 && v17386:0:0:0:0 > 1 && v17386:0:0:0:0 < 1001 && v17386:0:0:0:0 * v17386:0:0:0:0 * v17386:0:0:0:0 < v17378:0:0:0:0 * v17378:0:0:0:0 * v17378:0:0:0:0 + v17381:0:0:0:0 * v17381:0:0:0:0 * v17381:0:0:0:0 && v17381:0:0:0:0 < 1001 && v17389:0:0:0:0 < 1000 && v17378:0:0:0:0 < 1001 && times~v17378:0:0:0:0~v17378:0:0:0:0 = v17378:0:0:0:0 * v17378:0:0:0:0 && times~times~v17378:0:0:0:0~v17378:0:0:0:0~v17378:0:0:0:0 = v17378:0:0:0:0 * v17378:0:0:0:0 * v17378:0:0:0:0 && times~v17381:0:0:0:0~v17381:0:0:0:0 = v17381:0:0:0:0 * v17381:0:0:0:0 && times~times~v17381:0:0:0:0~v17381:0:0:0:0~v17381:0:0:0:0 = v17381:0:0:0:0 * v17381:0:0:0:0 * v17381:0:0:0:0


----------------------------------------

(22)
YES

----------------------------------------

(23)
Obligation:
Rules:
f_2290(x98:0, x99:0, x100:0, x101:0, x102:0, x103:0, x104:0, x105:0) -> f_2290(2, 4, 8, 1 + x101:0, 1 + x101:0 + (x101:0 + x101:0 * x101:0), 1 + x101:0 + (x101:0 + x101:0 * x101:0) + (x101:0 + x101:0 * x101:0 + x101:0 * x101:0 * (1 + x101:0)), 2, x101:0) :|: x101:0 > 1 && x101:0 < 1001 && x98:0 > 1000 && 1 + x101:0 + (x101:0 + x101:0 * x101:0) + (x101:0 + x101:0 * x101:0 + x101:0 * x101:0 * (1 + x101:0)) < -7 && x104:0 * x104:0 * x104:0 > 1 + (1 + x101:0 + (x101:0 + x101:0 * x101:0) + (x101:0 + x101:0 * x101:0 + x101:0 * x101:0 * (1 + x101:0))) && x104:0 > 999 && x101:0 < 1000
f_2290(x74:0, x75:0, x76:0, x77:0, x78:0, x79:0, x80:0, x81:0) -> f_2290(2, 4, 8, 1 + x77:0, 1 + x77:0 + (x77:0 + x77:0 * x77:0), 1 + x77:0 + (x77:0 + x77:0 * x77:0) + (x77:0 + x77:0 * x77:0 + x77:0 * x77:0 * (1 + x77:0)), 2, x77:0) :|: x77:0 > 1 && x77:0 < 1001 && x74:0 > 1000 && 1 + x77:0 + (x77:0 + x77:0 * x77:0) + (x77:0 + x77:0 * x77:0 + x77:0 * x77:0 * (1 + x77:0)) > -7 && x80:0 * x80:0 * x80:0 < 1 + (1 + x77:0 + (x77:0 + x77:0 * x77:0) + (x77:0 + x77:0 * x77:0 + x77:0 * x77:0 * (1 + x77:0))) && x80:0 > 999 && x77:0 < 1000
f_2290(x106:0, x107:0, x108:0, x109:0, x110:0, x111:0, x112:0, x113:0) -> f_2273(1 + x112:0, 1 + x112:0 + (x112:0 + x112:0 * x112:0), 1 + x112:0 + (x112:0 + x112:0 * x112:0) + (x112:0 + x112:0 * x112:0 + x112:0 * x112:0 * (1 + x112:0)), 1, 1, 1, 1 + x109:0, 1 + x109:0 + (x109:0 + x109:0 * x109:0), 1 + x109:0 + (x109:0 + x109:0 * x109:0) + (x109:0 + x109:0 * x109:0 + x109:0 * x109:0 * (1 + x109:0)), 1 + (1 + x112:0), x109:0) :|: x112:0 < 1000 && x109:0 < 1001 && 1 + x112:0 + (x112:0 + x112:0 * x112:0) + (x112:0 + x112:0 * x112:0 + x112:0 * x112:0 * (1 + x112:0)) < 1 + (1 + x109:0 + (x109:0 + x109:0 * x109:0) + (x109:0 + x109:0 * x109:0 + x109:0 * x109:0 * (1 + x109:0))) && x109:0 > 1 && x106:0 > 1000 && x112:0 * x112:0 * x112:0 < 1 + (1 + x109:0 + (x109:0 + x109:0 * x109:0) + (x109:0 + x109:0 * x109:0 + x109:0 * x109:0 * (1 + x109:0))) && x112:0 > 1 && x109:0 < 1000
f_2273(cons_1000, cons_1000000, cons_1000000000, x3:0, x4:0, x5:0, x6:0, times~x6:0~x6:0, times~times~x6:0~x6:0~x6:0, cons_1001, x10:0) -> f_2290(1 + x3:0, 1 + x3:0 + (x3:0 + x3:0 * x3:0), 1 + x3:0 + (x3:0 + x3:0 * x3:0) + (x3:0 + x3:0 * x3:0 + x3:0 * x3:0 * (1 + x3:0)), x6:0, x6:0 * x6:0, x6:0 * x6:0 * x6:0, 2, x10:0) :|: x3:0 < 1000 && x3:0 < 1001 && 1 + x3:0 + (x3:0 + x3:0 * x3:0) + (x3:0 + x3:0 * x3:0 + x3:0 * x3:0 * (1 + x3:0)) + x6:0 * x6:0 * x6:0 > 1 && x3:0 > 0 && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && times~x6:0~x6:0 = x6:0 * x6:0 && times~times~x6:0~x6:0~x6:0 = x6:0 * x6:0 * x6:0 && cons_1001 = 1001
f_2290(x114:0, x115:0, x116:0, x117:0, x118:0, x119:0, x120:0, x121:0) -> f_2273(1 + x120:0, 1 + x120:0 + (x120:0 + x120:0 * x120:0), 1 + x120:0 + (x120:0 + x120:0 * x120:0) + (x120:0 + x120:0 * x120:0 + x120:0 * x120:0 * (1 + x120:0)), 1, 1, 1, 1 + x117:0, 1 + x117:0 + (x117:0 + x117:0 * x117:0), 1 + x117:0 + (x117:0 + x117:0 * x117:0) + (x117:0 + x117:0 * x117:0 + x117:0 * x117:0 * (1 + x117:0)), 1 + (1 + x120:0), x117:0) :|: x120:0 < 1000 && x117:0 < 1001 && 1 + x120:0 + (x120:0 + x120:0 * x120:0) + (x120:0 + x120:0 * x120:0 + x120:0 * x120:0 * (1 + x120:0)) > 1 + (1 + x117:0 + (x117:0 + x117:0 * x117:0) + (x117:0 + x117:0 * x117:0 + x117:0 * x117:0 * (1 + x117:0))) && x117:0 > 1 && x114:0 > 1000 && x120:0 * x120:0 * x120:0 < 1 + (1 + x117:0 + (x117:0 + x117:0 * x117:0) + (x117:0 + x117:0 * x117:0 + x117:0 * x117:0 * (1 + x117:0))) && x120:0 > 1 && x117:0 < 1000
f_2273(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f_2290(1 + x3, 1 + x3 + (x3 + x3 * x3), 1 + x3 + (x3 + x3 * x3) + (x3 + x3 * x3 + x3 * x3 * (1 + x3)), x6, x6 * x6, x6 * x6 * x6, 2, x10) :|: x3 < 1000 && x3 < 1001 && 1 + x3 + (x3 + x3 * x3) + (x3 + x3 * x3 + x3 * x3 * (1 + x3)) + x6 * x6 * x6 < 1 && x3 > 0 && x = 1000 && x1 = 1000000 && x2 = 1000000000 && x7 = x6 * x6 && x8 = x6 * x6 * x6 && x9 = 1001
f_2273(x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21) -> f_2273(2, 4, 8, 1, 1, 1, 1 + x17, 1 + x17 + (x17 + x17 * x17), 1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17)), 3, x17) :|: 1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17)) < 0 && 7 < 1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17)) && x17 < 1000 && x17 > 1 && x17 < 1001 && x11 = 1000 && x12 = 1000000 && x13 = 1000000000 && x14 = 1000 && x15 = 1000000 && x16 = 1000000000 && x20 = 1001
f_2290(x90:0, x91:0, x92:0, x93:0, x94:0, x95:0, x96:0, x97:0) -> f_2290(2, 4, 8, 1 + x93:0, 1 + x93:0 + (x93:0 + x93:0 * x93:0), 1 + x93:0 + (x93:0 + x93:0 * x93:0) + (x93:0 + x93:0 * x93:0 + x93:0 * x93:0 * (1 + x93:0)), 2, x93:0) :|: x93:0 > 1 && x93:0 < 1001 && x90:0 > 1000 && 1 + x93:0 + (x93:0 + x93:0 * x93:0) + (x93:0 + x93:0 * x93:0 + x93:0 * x93:0 * (1 + x93:0)) > -7 && x96:0 * x96:0 * x96:0 > 1 + (1 + x93:0 + (x93:0 + x93:0 * x93:0) + (x93:0 + x93:0 * x93:0 + x93:0 * x93:0 * (1 + x93:0))) && x96:0 > 999 && x93:0 < 1000
f_2273(v16278:0:0, v16821:0:0, v16926:0:0, v16270:0:0, v16271:0:0, v16272:0:0, v16273:0:0, v16274:0:0, v16275:0:0, v17098:0:0, v16281:0:0) -> f_2290(v16270:0:0, v16271:0:0, v16272:0:0, v16273:0:0, v16274:0:0, v16275:0:0, v17098:0:0, v16281:0:0) :|: v17098:0:0 < 1001 && v16278:0:0 < 1000
f_2273(x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32) -> f_2273(2, 4, 8, 1, 1, 1, 1 + x28, 1 + x28 + (x28 + x28 * x28), 1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28)), 3, x28) :|: 1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28)) > 0 && 7 > 1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28)) && x28 < 1000 && x28 > 1 && x28 < 1001 && x22 = 1000 && x23 = 1000000 && x24 = 1000000000 && x25 = 1000 && x26 = 1000000 && x27 = 1000000000 && x31 = 1001
f_2290(x122:0, x123:0, x124:0, x125:0, x126:0, x127:0, x128:0, x129:0) -> f_2273(1 + x128:0, 1 + x128:0 + (x128:0 + x128:0 * x128:0), 1 + x128:0 + (x128:0 + x128:0 * x128:0) + (x128:0 + x128:0 * x128:0 + x128:0 * x128:0 * (1 + x128:0)), 1, 1, 1, 1 + x125:0, 1 + x125:0 + (x125:0 + x125:0 * x125:0), 1 + x125:0 + (x125:0 + x125:0 * x125:0) + (x125:0 + x125:0 * x125:0 + x125:0 * x125:0 * (1 + x125:0)), 1 + (1 + x128:0), x125:0) :|: x128:0 < 1000 && x125:0 < 1001 && 1 + x128:0 + (x128:0 + x128:0 * x128:0) + (x128:0 + x128:0 * x128:0 + x128:0 * x128:0 * (1 + x128:0)) < 1 + (1 + x125:0 + (x125:0 + x125:0 * x125:0) + (x125:0 + x125:0 * x125:0 + x125:0 * x125:0 * (1 + x125:0))) && x125:0 > 1 && x122:0 > 1000 && x128:0 * x128:0 * x128:0 > 1 + (1 + x125:0 + (x125:0 + x125:0 * x125:0) + (x125:0 + x125:0 * x125:0 + x125:0 * x125:0 * (1 + x125:0))) && x128:0 > 1 && x125:0 < 1000
f_2273(x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43) -> f_2273(2, 4, 8, 1, 1, 1, 1 + x39, 1 + x39 + (x39 + x39 * x39), 1 + x39 + (x39 + x39 * x39) + (x39 + x39 * x39 + x39 * x39 * (1 + x39)), 3, x39) :|: x39 < 1000 && x39 < 1001 && 7 < 1 + x39 + (x39 + x39 * x39) + (x39 + x39 * x39 + x39 * x39 * (1 + x39)) && x39 > 1 && x33 = 1000 && x34 = 1000000 && x35 = 1000000000 && x36 = 1000 && x37 = 1000000 && x38 = 1000000000 && x42 = 1001
f_2290(x82:0, x83:0, x84:0, x85:0, x86:0, x87:0, x88:0, x89:0) -> f_2290(2, 4, 8, 1 + x85:0, 1 + x85:0 + (x85:0 + x85:0 * x85:0), 1 + x85:0 + (x85:0 + x85:0 * x85:0) + (x85:0 + x85:0 * x85:0 + x85:0 * x85:0 * (1 + x85:0)), 2, x85:0) :|: x85:0 > 1 && x85:0 < 1001 && x82:0 > 1000 && 1 + x85:0 + (x85:0 + x85:0 * x85:0) + (x85:0 + x85:0 * x85:0 + x85:0 * x85:0 * (1 + x85:0)) < -7 && x88:0 * x88:0 * x88:0 < 1 + (1 + x85:0 + (x85:0 + x85:0 * x85:0) + (x85:0 + x85:0 * x85:0 + x85:0 * x85:0 * (1 + x85:0))) && x88:0 > 999 && x85:0 < 1000
f_2273(x44, x45, x46, x47, x48, x49, x50, x51, x52, x53, x54) -> f_2273(2, 4, 8, 1, 1, 1, 1 + x50, 1 + x50 + (x50 + x50 * x50), 1 + x50 + (x50 + x50 * x50) + (x50 + x50 * x50 + x50 * x50 * (1 + x50)), 3, x50) :|: 1 + x50 + (x50 + x50 * x50) + (x50 + x50 * x50 + x50 * x50 * (1 + x50)) < 0 && 7 > 1 + x50 + (x50 + x50 * x50) + (x50 + x50 * x50 + x50 * x50 * (1 + x50)) && x50 < 1000 && x50 > 1 && x50 < 1001 && x44 = 1000 && x45 = 1000000 && x46 = 1000000000 && x47 = 1000 && x48 = 1000000 && x49 = 1000000000 && x53 = 1001
f_2290(x130:0, x131:0, x132:0, x133:0, x134:0, x135:0, x136:0, x137:0) -> f_2273(1 + x136:0, 1 + x136:0 + (x136:0 + x136:0 * x136:0), 1 + x136:0 + (x136:0 + x136:0 * x136:0) + (x136:0 + x136:0 * x136:0 + x136:0 * x136:0 * (1 + x136:0)), 1, 1, 1, 1 + x133:0, 1 + x133:0 + (x133:0 + x133:0 * x133:0), 1 + x133:0 + (x133:0 + x133:0 * x133:0) + (x133:0 + x133:0 * x133:0 + x133:0 * x133:0 * (1 + x133:0)), 1 + (1 + x136:0), x133:0) :|: x136:0 < 1000 && x133:0 < 1001 && 1 + x136:0 + (x136:0 + x136:0 * x136:0) + (x136:0 + x136:0 * x136:0 + x136:0 * x136:0 * (1 + x136:0)) > 1 + (1 + x133:0 + (x133:0 + x133:0 * x133:0) + (x133:0 + x133:0 * x133:0 + x133:0 * x133:0 * (1 + x133:0))) && x133:0 > 1 && x130:0 > 1000 && x136:0 * x136:0 * x136:0 > 1 + (1 + x133:0 + (x133:0 + x133:0 * x133:0) + (x133:0 + x133:0 * x133:0 + x133:0 * x133:0 * (1 + x133:0))) && x136:0 > 1 && x133:0 < 1000

----------------------------------------

(24) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained one non-trivial SCC.

----------------------------------------

(25)
Obligation:
Rules:
f_2290(x106:0, x107:0, x108:0, x109:0, x110:0, x111:0, x112:0, x113:0) -> f_2273(1 + x112:0, 1 + x112:0 + (x112:0 + x112:0 * x112:0), 1 + x112:0 + (x112:0 + x112:0 * x112:0) + (x112:0 + x112:0 * x112:0 + x112:0 * x112:0 * (1 + x112:0)), 1, 1, 1, 1 + x109:0, 1 + x109:0 + (x109:0 + x109:0 * x109:0), 1 + x109:0 + (x109:0 + x109:0 * x109:0) + (x109:0 + x109:0 * x109:0 + x109:0 * x109:0 * (1 + x109:0)), 1 + (1 + x112:0), x109:0) :|: x112:0 < 1000 && x109:0 < 1001 && 1 + x112:0 + (x112:0 + x112:0 * x112:0) + (x112:0 + x112:0 * x112:0 + x112:0 * x112:0 * (1 + x112:0)) < 1 + (1 + x109:0 + (x109:0 + x109:0 * x109:0) + (x109:0 + x109:0 * x109:0 + x109:0 * x109:0 * (1 + x109:0))) && x109:0 > 1 && x106:0 > 1000 && x112:0 * x112:0 * x112:0 < 1 + (1 + x109:0 + (x109:0 + x109:0 * x109:0) + (x109:0 + x109:0 * x109:0 + x109:0 * x109:0 * (1 + x109:0))) && x112:0 > 1 && x109:0 < 1000
f_2273(v16278:0:0, v16821:0:0, v16926:0:0, v16270:0:0, v16271:0:0, v16272:0:0, v16273:0:0, v16274:0:0, v16275:0:0, v17098:0:0, v16281:0:0) -> f_2290(v16270:0:0, v16271:0:0, v16272:0:0, v16273:0:0, v16274:0:0, v16275:0:0, v17098:0:0, v16281:0:0) :|: v17098:0:0 < 1001 && v16278:0:0 < 1000
f_2290(x114:0, x115:0, x116:0, x117:0, x118:0, x119:0, x120:0, x121:0) -> f_2273(1 + x120:0, 1 + x120:0 + (x120:0 + x120:0 * x120:0), 1 + x120:0 + (x120:0 + x120:0 * x120:0) + (x120:0 + x120:0 * x120:0 + x120:0 * x120:0 * (1 + x120:0)), 1, 1, 1, 1 + x117:0, 1 + x117:0 + (x117:0 + x117:0 * x117:0), 1 + x117:0 + (x117:0 + x117:0 * x117:0) + (x117:0 + x117:0 * x117:0 + x117:0 * x117:0 * (1 + x117:0)), 1 + (1 + x120:0), x117:0) :|: x120:0 < 1000 && x117:0 < 1001 && 1 + x120:0 + (x120:0 + x120:0 * x120:0) + (x120:0 + x120:0 * x120:0 + x120:0 * x120:0 * (1 + x120:0)) > 1 + (1 + x117:0 + (x117:0 + x117:0 * x117:0) + (x117:0 + x117:0 * x117:0 + x117:0 * x117:0 * (1 + x117:0))) && x117:0 > 1 && x114:0 > 1000 && x120:0 * x120:0 * x120:0 < 1 + (1 + x117:0 + (x117:0 + x117:0 * x117:0) + (x117:0 + x117:0 * x117:0 + x117:0 * x117:0 * (1 + x117:0))) && x120:0 > 1 && x117:0 < 1000
f_2290(x122:0, x123:0, x124:0, x125:0, x126:0, x127:0, x128:0, x129:0) -> f_2273(1 + x128:0, 1 + x128:0 + (x128:0 + x128:0 * x128:0), 1 + x128:0 + (x128:0 + x128:0 * x128:0) + (x128:0 + x128:0 * x128:0 + x128:0 * x128:0 * (1 + x128:0)), 1, 1, 1, 1 + x125:0, 1 + x125:0 + (x125:0 + x125:0 * x125:0), 1 + x125:0 + (x125:0 + x125:0 * x125:0) + (x125:0 + x125:0 * x125:0 + x125:0 * x125:0 * (1 + x125:0)), 1 + (1 + x128:0), x125:0) :|: x128:0 < 1000 && x125:0 < 1001 && 1 + x128:0 + (x128:0 + x128:0 * x128:0) + (x128:0 + x128:0 * x128:0 + x128:0 * x128:0 * (1 + x128:0)) < 1 + (1 + x125:0 + (x125:0 + x125:0 * x125:0) + (x125:0 + x125:0 * x125:0 + x125:0 * x125:0 * (1 + x125:0))) && x125:0 > 1 && x122:0 > 1000 && x128:0 * x128:0 * x128:0 > 1 + (1 + x125:0 + (x125:0 + x125:0 * x125:0) + (x125:0 + x125:0 * x125:0 + x125:0 * x125:0 * (1 + x125:0))) && x128:0 > 1 && x125:0 < 1000
f_2290(x130:0, x131:0, x132:0, x133:0, x134:0, x135:0, x136:0, x137:0) -> f_2273(1 + x136:0, 1 + x136:0 + (x136:0 + x136:0 * x136:0), 1 + x136:0 + (x136:0 + x136:0 * x136:0) + (x136:0 + x136:0 * x136:0 + x136:0 * x136:0 * (1 + x136:0)), 1, 1, 1, 1 + x133:0, 1 + x133:0 + (x133:0 + x133:0 * x133:0), 1 + x133:0 + (x133:0 + x133:0 * x133:0) + (x133:0 + x133:0 * x133:0 + x133:0 * x133:0 * (1 + x133:0)), 1 + (1 + x136:0), x133:0) :|: x136:0 < 1000 && x133:0 < 1001 && 1 + x136:0 + (x136:0 + x136:0 * x136:0) + (x136:0 + x136:0 * x136:0 + x136:0 * x136:0 * (1 + x136:0)) > 1 + (1 + x133:0 + (x133:0 + x133:0 * x133:0) + (x133:0 + x133:0 * x133:0 + x133:0 * x133:0 * (1 + x133:0))) && x133:0 > 1 && x130:0 > 1000 && x136:0 * x136:0 * x136:0 > 1 + (1 + x133:0 + (x133:0 + x133:0 * x133:0) + (x133:0 + x133:0 * x133:0 + x133:0 * x133:0 * (1 + x133:0))) && x136:0 > 1 && x133:0 < 1000

----------------------------------------

(26) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(27)
Obligation:
Rules:
f_2290(x106:0:0, x107:0:0, x108:0:0, x109:0:0, x110:0:0, x111:0:0, x112:0:0, x113:0:0) -> f_2290(1, 1, 1, 1 + x109:0:0, 1 + x109:0:0 + (x109:0:0 + x109:0:0 * x109:0:0), 1 + x109:0:0 + (x109:0:0 + x109:0:0 * x109:0:0) + (x109:0:0 + x109:0:0 * x109:0:0 + x109:0:0 * x109:0:0 * (1 + x109:0:0)), 1 + (1 + x112:0:0), x109:0:0) :|: x109:0:0 < 1000 && x112:0:0 < 999 && x112:0:0 > 1 && x112:0:0 * x112:0:0 * x112:0:0 < 1 + (1 + x109:0:0 + (x109:0:0 + x109:0:0 * x109:0:0) + (x109:0:0 + x109:0:0 * x109:0:0 + x109:0:0 * x109:0:0 * (1 + x109:0:0))) && x106:0:0 > 1000 && x109:0:0 > 1 && 1 + x112:0:0 + (x112:0:0 + x112:0:0 * x112:0:0) + (x112:0:0 + x112:0:0 * x112:0:0 + x112:0:0 * x112:0:0 * (1 + x112:0:0)) < 1 + (1 + x109:0:0 + (x109:0:0 + x109:0:0 * x109:0:0) + (x109:0:0 + x109:0:0 * x109:0:0 + x109:0:0 * x109:0:0 * (1 + x109:0:0))) && x109:0:0 < 1001 && x112:0:0 < 1000
f_2290(x114:0:0, x115:0:0, x116:0:0, x117:0:0, x118:0:0, x119:0:0, x120:0:0, x121:0:0) -> f_2290(1, 1, 1, 1 + x117:0:0, 1 + x117:0:0 + (x117:0:0 + x117:0:0 * x117:0:0), 1 + x117:0:0 + (x117:0:0 + x117:0:0 * x117:0:0) + (x117:0:0 + x117:0:0 * x117:0:0 + x117:0:0 * x117:0:0 * (1 + x117:0:0)), 1 + (1 + x120:0:0), x117:0:0) :|: x117:0:0 < 1000 && x120:0:0 < 999 && x120:0:0 > 1 && x120:0:0 * x120:0:0 * x120:0:0 < 1 + (1 + x117:0:0 + (x117:0:0 + x117:0:0 * x117:0:0) + (x117:0:0 + x117:0:0 * x117:0:0 + x117:0:0 * x117:0:0 * (1 + x117:0:0))) && x114:0:0 > 1000 && x117:0:0 > 1 && 1 + x120:0:0 + (x120:0:0 + x120:0:0 * x120:0:0) + (x120:0:0 + x120:0:0 * x120:0:0 + x120:0:0 * x120:0:0 * (1 + x120:0:0)) > 1 + (1 + x117:0:0 + (x117:0:0 + x117:0:0 * x117:0:0) + (x117:0:0 + x117:0:0 * x117:0:0 + x117:0:0 * x117:0:0 * (1 + x117:0:0))) && x117:0:0 < 1001 && x120:0:0 < 1000
f_2290(x130:0:0, x131:0:0, x132:0:0, x133:0:0, x134:0:0, x135:0:0, x136:0:0, x137:0:0) -> f_2290(1, 1, 1, 1 + x133:0:0, 1 + x133:0:0 + (x133:0:0 + x133:0:0 * x133:0:0), 1 + x133:0:0 + (x133:0:0 + x133:0:0 * x133:0:0) + (x133:0:0 + x133:0:0 * x133:0:0 + x133:0:0 * x133:0:0 * (1 + x133:0:0)), 1 + (1 + x136:0:0), x133:0:0) :|: x133:0:0 < 1000 && x136:0:0 < 999 && x136:0:0 > 1 && x136:0:0 * x136:0:0 * x136:0:0 > 1 + (1 + x133:0:0 + (x133:0:0 + x133:0:0 * x133:0:0) + (x133:0:0 + x133:0:0 * x133:0:0 + x133:0:0 * x133:0:0 * (1 + x133:0:0))) && x130:0:0 > 1000 && x133:0:0 > 1 && 1 + x136:0:0 + (x136:0:0 + x136:0:0 * x136:0:0) + (x136:0:0 + x136:0:0 * x136:0:0 + x136:0:0 * x136:0:0 * (1 + x136:0:0)) > 1 + (1 + x133:0:0 + (x133:0:0 + x133:0:0 * x133:0:0) + (x133:0:0 + x133:0:0 * x133:0:0 + x133:0:0 * x133:0:0 * (1 + x133:0:0))) && x133:0:0 < 1001 && x136:0:0 < 1000
f_2290(x122:0:0, x123:0:0, x124:0:0, x125:0:0, x126:0:0, x127:0:0, x128:0:0, x129:0:0) -> f_2290(1, 1, 1, 1 + x125:0:0, 1 + x125:0:0 + (x125:0:0 + x125:0:0 * x125:0:0), 1 + x125:0:0 + (x125:0:0 + x125:0:0 * x125:0:0) + (x125:0:0 + x125:0:0 * x125:0:0 + x125:0:0 * x125:0:0 * (1 + x125:0:0)), 1 + (1 + x128:0:0), x125:0:0) :|: x125:0:0 < 1000 && x128:0:0 < 999 && x128:0:0 > 1 && x128:0:0 * x128:0:0 * x128:0:0 > 1 + (1 + x125:0:0 + (x125:0:0 + x125:0:0 * x125:0:0) + (x125:0:0 + x125:0:0 * x125:0:0 + x125:0:0 * x125:0:0 * (1 + x125:0:0))) && x122:0:0 > 1000 && x125:0:0 > 1 && 1 + x128:0:0 + (x128:0:0 + x128:0:0 * x128:0:0) + (x128:0:0 + x128:0:0 * x128:0:0 + x128:0:0 * x128:0:0 * (1 + x128:0:0)) < 1 + (1 + x125:0:0 + (x125:0:0 + x125:0:0 * x125:0:0) + (x125:0:0 + x125:0:0 * x125:0:0 + x125:0:0 * x125:0:0 * (1 + x125:0:0))) && x125:0:0 < 1001 && x128:0:0 < 1000

----------------------------------------

(28) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_2290(x1, x2, x3, x4, x5, x6, x7, x8) -> f_2290(x1, x4, x7)

----------------------------------------

(29)
Obligation:
Rules:
f_2290(x106:0:0, x109:0:0, x112:0:0) -> f_2290(1, 1 + x109:0:0, 1 + (1 + x112:0:0)) :|: x109:0:0 < 1000 && x112:0:0 < 999 && x112:0:0 > 1 && x112:0:0 * x112:0:0 * x112:0:0 < 1 + (1 + x109:0:0 + (x109:0:0 + x109:0:0 * x109:0:0) + (x109:0:0 + x109:0:0 * x109:0:0 + x109:0:0 * x109:0:0 * (1 + x109:0:0))) && x106:0:0 > 1000 && x109:0:0 > 1 && 1 + x112:0:0 + (x112:0:0 + x112:0:0 * x112:0:0) + (x112:0:0 + x112:0:0 * x112:0:0 + x112:0:0 * x112:0:0 * (1 + x112:0:0)) < 1 + (1 + x109:0:0 + (x109:0:0 + x109:0:0 * x109:0:0) + (x109:0:0 + x109:0:0 * x109:0:0 + x109:0:0 * x109:0:0 * (1 + x109:0:0))) && x109:0:0 < 1001 && x112:0:0 < 1000
f_2290(x114:0:0, x117:0:0, x120:0:0) -> f_2290(1, 1 + x117:0:0, 1 + (1 + x120:0:0)) :|: x117:0:0 < 1000 && x120:0:0 < 999 && x120:0:0 > 1 && x120:0:0 * x120:0:0 * x120:0:0 < 1 + (1 + x117:0:0 + (x117:0:0 + x117:0:0 * x117:0:0) + (x117:0:0 + x117:0:0 * x117:0:0 + x117:0:0 * x117:0:0 * (1 + x117:0:0))) && x114:0:0 > 1000 && x117:0:0 > 1 && 1 + x120:0:0 + (x120:0:0 + x120:0:0 * x120:0:0) + (x120:0:0 + x120:0:0 * x120:0:0 + x120:0:0 * x120:0:0 * (1 + x120:0:0)) > 1 + (1 + x117:0:0 + (x117:0:0 + x117:0:0 * x117:0:0) + (x117:0:0 + x117:0:0 * x117:0:0 + x117:0:0 * x117:0:0 * (1 + x117:0:0))) && x117:0:0 < 1001 && x120:0:0 < 1000
f_2290(x130:0:0, x133:0:0, x136:0:0) -> f_2290(1, 1 + x133:0:0, 1 + (1 + x136:0:0)) :|: x133:0:0 < 1000 && x136:0:0 < 999 && x136:0:0 > 1 && x136:0:0 * x136:0:0 * x136:0:0 > 1 + (1 + x133:0:0 + (x133:0:0 + x133:0:0 * x133:0:0) + (x133:0:0 + x133:0:0 * x133:0:0 + x133:0:0 * x133:0:0 * (1 + x133:0:0))) && x130:0:0 > 1000 && x133:0:0 > 1 && 1 + x136:0:0 + (x136:0:0 + x136:0:0 * x136:0:0) + (x136:0:0 + x136:0:0 * x136:0:0 + x136:0:0 * x136:0:0 * (1 + x136:0:0)) > 1 + (1 + x133:0:0 + (x133:0:0 + x133:0:0 * x133:0:0) + (x133:0:0 + x133:0:0 * x133:0:0 + x133:0:0 * x133:0:0 * (1 + x133:0:0))) && x133:0:0 < 1001 && x136:0:0 < 1000
f_2290(x122:0:0, x125:0:0, x128:0:0) -> f_2290(1, 1 + x125:0:0, 1 + (1 + x128:0:0)) :|: x125:0:0 < 1000 && x128:0:0 < 999 && x128:0:0 > 1 && x128:0:0 * x128:0:0 * x128:0:0 > 1 + (1 + x125:0:0 + (x125:0:0 + x125:0:0 * x125:0:0) + (x125:0:0 + x125:0:0 * x125:0:0 + x125:0:0 * x125:0:0 * (1 + x125:0:0))) && x122:0:0 > 1000 && x125:0:0 > 1 && 1 + x128:0:0 + (x128:0:0 + x128:0:0 * x128:0:0) + (x128:0:0 + x128:0:0 * x128:0:0 + x128:0:0 * x128:0:0 * (1 + x128:0:0)) < 1 + (1 + x125:0:0 + (x125:0:0 + x125:0:0 * x125:0:0) + (x125:0:0 + x125:0:0 * x125:0:0 + x125:0:0 * x125:0:0 * (1 + x125:0:0))) && x125:0:0 < 1001 && x128:0:0 < 1000

----------------------------------------

(30) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_2290 ] = -1/2*f_2290_3

The following rules are decreasing:
f_2290(x106:0:0, x109:0:0, x112:0:0) -> f_2290(1, 1 + x109:0:0, 1 + (1 + x112:0:0)) :|: x109:0:0 < 1000 && x112:0:0 < 999 && x112:0:0 > 1 && x112:0:0 * x112:0:0 * x112:0:0 < 1 + (1 + x109:0:0 + (x109:0:0 + x109:0:0 * x109:0:0) + (x109:0:0 + x109:0:0 * x109:0:0 + x109:0:0 * x109:0:0 * (1 + x109:0:0))) && x106:0:0 > 1000 && x109:0:0 > 1 && 1 + x112:0:0 + (x112:0:0 + x112:0:0 * x112:0:0) + (x112:0:0 + x112:0:0 * x112:0:0 + x112:0:0 * x112:0:0 * (1 + x112:0:0)) < 1 + (1 + x109:0:0 + (x109:0:0 + x109:0:0 * x109:0:0) + (x109:0:0 + x109:0:0 * x109:0:0 + x109:0:0 * x109:0:0 * (1 + x109:0:0))) && x109:0:0 < 1001 && x112:0:0 < 1000
f_2290(x114:0:0, x117:0:0, x120:0:0) -> f_2290(1, 1 + x117:0:0, 1 + (1 + x120:0:0)) :|: x117:0:0 < 1000 && x120:0:0 < 999 && x120:0:0 > 1 && x120:0:0 * x120:0:0 * x120:0:0 < 1 + (1 + x117:0:0 + (x117:0:0 + x117:0:0 * x117:0:0) + (x117:0:0 + x117:0:0 * x117:0:0 + x117:0:0 * x117:0:0 * (1 + x117:0:0))) && x114:0:0 > 1000 && x117:0:0 > 1 && 1 + x120:0:0 + (x120:0:0 + x120:0:0 * x120:0:0) + (x120:0:0 + x120:0:0 * x120:0:0 + x120:0:0 * x120:0:0 * (1 + x120:0:0)) > 1 + (1 + x117:0:0 + (x117:0:0 + x117:0:0 * x117:0:0) + (x117:0:0 + x117:0:0 * x117:0:0 + x117:0:0 * x117:0:0 * (1 + x117:0:0))) && x117:0:0 < 1001 && x120:0:0 < 1000
f_2290(x130:0:0, x133:0:0, x136:0:0) -> f_2290(1, 1 + x133:0:0, 1 + (1 + x136:0:0)) :|: x133:0:0 < 1000 && x136:0:0 < 999 && x136:0:0 > 1 && x136:0:0 * x136:0:0 * x136:0:0 > 1 + (1 + x133:0:0 + (x133:0:0 + x133:0:0 * x133:0:0) + (x133:0:0 + x133:0:0 * x133:0:0 + x133:0:0 * x133:0:0 * (1 + x133:0:0))) && x130:0:0 > 1000 && x133:0:0 > 1 && 1 + x136:0:0 + (x136:0:0 + x136:0:0 * x136:0:0) + (x136:0:0 + x136:0:0 * x136:0:0 + x136:0:0 * x136:0:0 * (1 + x136:0:0)) > 1 + (1 + x133:0:0 + (x133:0:0 + x133:0:0 * x133:0:0) + (x133:0:0 + x133:0:0 * x133:0:0 + x133:0:0 * x133:0:0 * (1 + x133:0:0))) && x133:0:0 < 1001 && x136:0:0 < 1000
f_2290(x122:0:0, x125:0:0, x128:0:0) -> f_2290(1, 1 + x125:0:0, 1 + (1 + x128:0:0)) :|: x125:0:0 < 1000 && x128:0:0 < 999 && x128:0:0 > 1 && x128:0:0 * x128:0:0 * x128:0:0 > 1 + (1 + x125:0:0 + (x125:0:0 + x125:0:0 * x125:0:0) + (x125:0:0 + x125:0:0 * x125:0:0 + x125:0:0 * x125:0:0 * (1 + x125:0:0))) && x122:0:0 > 1000 && x125:0:0 > 1 && 1 + x128:0:0 + (x128:0:0 + x128:0:0 * x128:0:0) + (x128:0:0 + x128:0:0 * x128:0:0 + x128:0:0 * x128:0:0 * (1 + x128:0:0)) < 1 + (1 + x125:0:0 + (x125:0:0 + x125:0:0 * x125:0:0) + (x125:0:0 + x125:0:0 * x125:0:0 + x125:0:0 * x125:0:0 * (1 + x125:0:0))) && x125:0:0 < 1001 && x128:0:0 < 1000

The following rules are bounded:
f_2290(x106:0:0, x109:0:0, x112:0:0) -> f_2290(1, 1 + x109:0:0, 1 + (1 + x112:0:0)) :|: x109:0:0 < 1000 && x112:0:0 < 999 && x112:0:0 > 1 && x112:0:0 * x112:0:0 * x112:0:0 < 1 + (1 + x109:0:0 + (x109:0:0 + x109:0:0 * x109:0:0) + (x109:0:0 + x109:0:0 * x109:0:0 + x109:0:0 * x109:0:0 * (1 + x109:0:0))) && x106:0:0 > 1000 && x109:0:0 > 1 && 1 + x112:0:0 + (x112:0:0 + x112:0:0 * x112:0:0) + (x112:0:0 + x112:0:0 * x112:0:0 + x112:0:0 * x112:0:0 * (1 + x112:0:0)) < 1 + (1 + x109:0:0 + (x109:0:0 + x109:0:0 * x109:0:0) + (x109:0:0 + x109:0:0 * x109:0:0 + x109:0:0 * x109:0:0 * (1 + x109:0:0))) && x109:0:0 < 1001 && x112:0:0 < 1000
f_2290(x114:0:0, x117:0:0, x120:0:0) -> f_2290(1, 1 + x117:0:0, 1 + (1 + x120:0:0)) :|: x117:0:0 < 1000 && x120:0:0 < 999 && x120:0:0 > 1 && x120:0:0 * x120:0:0 * x120:0:0 < 1 + (1 + x117:0:0 + (x117:0:0 + x117:0:0 * x117:0:0) + (x117:0:0 + x117:0:0 * x117:0:0 + x117:0:0 * x117:0:0 * (1 + x117:0:0))) && x114:0:0 > 1000 && x117:0:0 > 1 && 1 + x120:0:0 + (x120:0:0 + x120:0:0 * x120:0:0) + (x120:0:0 + x120:0:0 * x120:0:0 + x120:0:0 * x120:0:0 * (1 + x120:0:0)) > 1 + (1 + x117:0:0 + (x117:0:0 + x117:0:0 * x117:0:0) + (x117:0:0 + x117:0:0 * x117:0:0 + x117:0:0 * x117:0:0 * (1 + x117:0:0))) && x117:0:0 < 1001 && x120:0:0 < 1000
f_2290(x130:0:0, x133:0:0, x136:0:0) -> f_2290(1, 1 + x133:0:0, 1 + (1 + x136:0:0)) :|: x133:0:0 < 1000 && x136:0:0 < 999 && x136:0:0 > 1 && x136:0:0 * x136:0:0 * x136:0:0 > 1 + (1 + x133:0:0 + (x133:0:0 + x133:0:0 * x133:0:0) + (x133:0:0 + x133:0:0 * x133:0:0 + x133:0:0 * x133:0:0 * (1 + x133:0:0))) && x130:0:0 > 1000 && x133:0:0 > 1 && 1 + x136:0:0 + (x136:0:0 + x136:0:0 * x136:0:0) + (x136:0:0 + x136:0:0 * x136:0:0 + x136:0:0 * x136:0:0 * (1 + x136:0:0)) > 1 + (1 + x133:0:0 + (x133:0:0 + x133:0:0 * x133:0:0) + (x133:0:0 + x133:0:0 * x133:0:0 + x133:0:0 * x133:0:0 * (1 + x133:0:0))) && x133:0:0 < 1001 && x136:0:0 < 1000
f_2290(x122:0:0, x125:0:0, x128:0:0) -> f_2290(1, 1 + x125:0:0, 1 + (1 + x128:0:0)) :|: x125:0:0 < 1000 && x128:0:0 < 999 && x128:0:0 > 1 && x128:0:0 * x128:0:0 * x128:0:0 > 1 + (1 + x125:0:0 + (x125:0:0 + x125:0:0 * x125:0:0) + (x125:0:0 + x125:0:0 * x125:0:0 + x125:0:0 * x125:0:0 * (1 + x125:0:0))) && x122:0:0 > 1000 && x125:0:0 > 1 && 1 + x128:0:0 + (x128:0:0 + x128:0:0 * x128:0:0) + (x128:0:0 + x128:0:0 * x128:0:0 + x128:0:0 * x128:0:0 * (1 + x128:0:0)) < 1 + (1 + x125:0:0 + (x125:0:0 + x125:0:0 * x125:0:0) + (x125:0:0 + x125:0:0 * x125:0:0 + x125:0:0 * x125:0:0 * (1 + x125:0:0))) && x125:0:0 < 1001 && x128:0:0 < 1000


----------------------------------------

(31)
YES

----------------------------------------

(32)
Obligation:
SCC
----------------------------------------

(33) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 78 rulesP rules:
f_1259(v5087, v5088, v5089, v5090, v5091, v5092, v5093, v5094, v5095, v5096, v5097, 1, v5099, 0, v5101, v5102, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 1001, 2, 4) -> f_1263(v5087, v5088, v5089, v5090, v5091, v5092, v5093, v5094, v5095, v5096, v5097, 1, v5099, 0, v5101, v5102, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) :|: v5102 <= 1000 && v5095 <= 999
f_1263(v5087, v5088, v5089, v5090, v5091, v5092, v5093, v5094, v5095, v5096, v5097, 1, v5099, 0, v5101, v5102, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) -> f_1267(v5087, v5088, v5089, v5090, v5091, v5092, v5093, v5094, v5095, v5096, v5097, 1, v5099, 0, v5101, v5102, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) :|: 0 = 0
f_1267(v5087, v5088, v5089, v5090, v5091, v5092, v5093, v5094, v5095, v5096, v5097, 1, v5099, 0, v5101, v5102, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) -> f_1271(v5087, v5088, v5089, v5090, v5091, v5092, v5093, v5094, v5095, v5096, v5097, 1, v5099, 0, v5101, v5102, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) :|: TRUE
f_1271(v5087, v5088, v5089, v5090, v5091, v5092, v5093, v5094, v5095, v5096, v5097, 1, v5099, 0, v5101, v5102, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) -> f_1275(v5087, v5088, v5089, v5090, v5091, v5092, v5093, v5094, v5095, v5096, v5097, 1, v5099, 0, v5101, v5102, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) :|: 0 = 0
f_1275(v5087, v5088, v5089, v5090, v5091, v5092, v5093, v5094, v5095, v5096, v5097, 1, v5099, 0, v5101, v5102, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) -> f_1279(v5087, v5088, v5089, v5090, v5091, v5092, v5093, v5094, v5095, v5096, v5097, 1, v5099, 0, v5101, v5102, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) :|: 0 = 0
f_1279(v5087, v5088, v5089, v5090, v5091, v5092, v5093, v5094, v5095, v5096, v5097, 1, v5099, 0, v5101, v5102, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) -> f_1283(v5087, v5088, v5089, v5090, v5091, v5092, v5093, v5094, v5095, v5096, v5097, 1, v5099, 0, v5101, v5102, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) :|: TRUE
f_1283(v5087, v5088, v5089, v5090, v5091, v5092, v5093, v5094, v5095, v5096, v5097, 1, v5099, 0, v5101, v5102, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) -> f_1287(v5087, v5088, v5089, v5090, v5091, v5092, v5093, v5094, v5095, v5096, v5097, 1, v5099, 0, v5101, v5102, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) :|: TRUE
f_1287(v5087, v5088, v5089, v5090, v5091, v5092, v5093, v5094, v5095, v5096, v5097, 1, v5099, 0, v5101, v5102, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) -> f_1291(v5087, v5088, v5089, v5090, v5091, 1, v5092, v5093, v5094, v5095, v5096, v5097, v5099, 0, v5101, v5102, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) :|: 0 = 0
f_1291(v5087, v5088, v5089, v5090, v5091, 1, v5092, v5093, v5094, v5095, v5096, v5097, v5099, 0, v5101, v5102, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) -> f_1295(v5087, v5088, v5089, v5090, v5091, 1, v5093, v5092, v5094, v5095, v5096, v5097, v5099, 0, v5101, v5102, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) :|: 0 = 0
f_1295(v5087, v5088, v5089, v5090, v5091, 1, v5093, v5092, v5094, v5095, v5096, v5097, v5099, 0, v5101, v5102, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) -> f_1299(v5087, v5088, v5089, v5090, v5091, 1, v5092, v5094, v5095, v5096, v5097, v5099, 0, v5101, v5102, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) :|: 0 = 0
f_1299(v5087, v5088, v5089, v5090, v5091, 1, v5092, v5094, v5095, v5096, v5097, v5099, 0, v5101, v5102, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) -> f_1303(v5087, v5088, v5089, v5090, v5091, 1, v5094, v5095, v5096, v5097, v5099, 0, v5092, v5101, v5102, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) :|: 0 = 0
f_1303(v5087, v5088, v5089, v5090, v5091, 1, v5094, v5095, v5096, v5097, v5099, 0, v5092, v5101, v5102, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) -> f_1307(v5087, v5088, v5089, v5090, v5091, 1, v5095, v5096, v5097, v5099, 0, v5092, v5101, v5102, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) :|: 0 = 0
f_1307(v5087, v5088, v5089, v5090, v5091, 1, v5095, v5096, v5097, v5099, 0, v5092, v5101, v5102, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) -> f_1311(v5087, v5088, v5089, v5090, v5091, 1, v5102, v5095, v5096, v5097, v5099, 0, v5092, v5101, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) :|: 0 = 0
f_1311(v5087, v5088, v5089, v5090, v5091, 1, v5102, v5095, v5096, v5097, v5099, 0, v5092, v5101, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) -> f_1315(v5087, v5088, v5089, v5090, v5091, 1, v5102, v5096, v5095, v5097, v5099, 0, v5092, v5101, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) :|: 0 = 0
f_1315(v5087, v5088, v5089, v5090, v5091, 1, v5102, v5096, v5095, v5097, v5099, 0, v5092, v5101, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) -> f_1319(v5087, v5088, v5089, v5090, v5091, 1, v5102, v6087, v5095, v5097, v5099, 0, v5092, v5101, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) :|: v6087 = v5102 * v5102
f_1319(v5087, v5088, v5089, v5090, v5091, 1, v5102, v6087, v5095, v5097, v5099, 0, v5092, v5101, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) -> f_1323(v5087, v5088, v5089, v5090, v5091, 1, v5102, v6087, v5097, v5099, 0, v5092, v5101, v5095, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) :|: 0 = 0
f_1323(v5087, v5088, v5089, v5090, v5091, 1, v5102, v6087, v5097, v5099, 0, v5092, v5101, v5095, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) -> f_1327(v5087, v5088, v5089, v5090, v5091, 1, v5102, v6087, v6088, v5099, 0, v5092, v5101, v5095, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) :|: v6088 = v6087 * v5102
f_1327(v5087, v5088, v5089, v5090, v5091, 1, v5102, v6087, v6088, v5099, 0, v5092, v5101, v5095, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) -> f_1331(v5087, v5088, v5089, v5090, v5091, 1, v5102, v6087, v6088, v5099, 0, v5092, v5101, v5095, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) :|: 0 = 0
f_1331(v5087, v5088, v5089, v5090, v5091, 1, v5102, v6087, v6088, v5099, 0, v5092, v5101, v5095, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) -> f_1335(v5087, v5088, v5089, v5090, v5091, 1, v5102, v6087, v6088, v5099, 0, v5092, v5101, v5095, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) :|: 0 = 0
f_1335(v5087, v5088, v5089, v5090, v5091, 1, v5102, v6087, v6088, v5099, 0, v5092, v5101, v5095, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) -> f_1339(v5087, v5088, v5089, v5090, v5091, 1, v5102, v6087, v6088, v5099, 0, v5092, v5101, v5095, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) :|: 0 = 0
f_1339(v5087, v5088, v5089, v5090, v5091, 1, v5102, v6087, v6088, v5099, 0, v5092, v5101, v5095, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) -> f_1343(v5087, v5088, v5089, v5090, v5091, 1, v5102, v6087, v6088, v5099, 0, v5092, v5101, v5095, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) :|: 0 = 0
f_1343(v5087, v5088, v5089, v5090, v5091, 1, v5102, v6087, v6088, v5099, 0, v5092, v5101, v5095, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) -> f_1347(v5087, v5088, v5089, v5090, v5091, 1, v5102, v6087, v6088, v5099, 0, v5092, v5101, v5095, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) :|: 0 = 0
f_1347(v5087, v5088, v5089, v5090, v5091, 1, v5102, v6087, v6088, v5099, 0, v5092, v5101, v5095, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) -> f_1352(v5087, v5088, v5089, v5090, v5091, 1, v5102, v6087, v6088, v6089, 0, v5092, v5101, v5095, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) :|: v6089 = 1 + v6088
f_1352(v5087, v5088, v5089, v5090, v5091, 1, v5102, v6087, v6088, v6089, 0, v5092, v5101, v5095, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) -> f_1358(v5087, v5088, v5089, v5090, v5091, 1, v5102, v6087, v6088, v6089, 0, v5092, v5101, v5095, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) :|: 1 != v6089
f_1358(v5087, v5088, v5089, v5090, v5091, 1, v5102, v6087, v6088, v6089, 0, v5092, v5101, v5095, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) -> f_1364(v5087, v5088, v5089, v5090, v5091, 1, v5102, v6087, v6088, v6089, 0, v5092, v5101, v5095, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) :|: 0 = 0
f_1364(v5087, v5088, v5089, v5090, v5091, 1, v5102, v6087, v6088, v6089, 0, v5092, v5101, v5095, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) -> f_1370(v5087, v5088, v5089, v5090, v5091, 1, v5102, v6087, v6088, v6089, 0, v5092, v5101, v5095, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) :|: TRUE
f_1370(v5087, v5088, v5089, v5090, v5091, 1, v5102, v6087, v6088, v6089, 0, v5092, v5101, v5095, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) -> f_1376(v5087, v5088, v5089, v5090, v5091, 1, v5102, v6087, v6088, v6089, 0, v5101, v5095, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) :|: 0 = 0
f_1376(v5087, v5088, v5089, v5090, v5091, 1, v5102, v6087, v6088, v6089, 0, v5101, v5095, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 2, 4) -> f_1382(v5087, v5088, v5089, v5090, v5091, 1, v5102, v6087, v6088, v6089, 0, 2, v5101, v5095, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 4) :|: 0 = 0
f_1382(v5087, v5088, v5089, v5090, v5091, 1, v5102, v6087, v6088, v6089, 0, 2, v5101, v5095, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 4) -> f_1388(v5087, v5088, v5089, v5090, v5091, 1, v5102, v6087, v6088, v6089, 0, 2, v5101, v5095, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 4) :|: TRUE
f_1388(v5087, v5088, v5089, v5090, v5091, 1, v5102, v6087, v6088, v6089, 0, 2, v5101, v5095, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 1001, 4) -> f_1394(v5087, v5088, v5089, v5090, v5091, 1, v5102, v6087, v6088, v6089, 0, 2, v5095, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 4) :|: 0 = 0
f_1394(v5087, v5088, v5089, v5090, v5091, 1, v5102, v6087, v6088, v6089, 0, 2, v5095, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 4) -> f_1399(v5087, v5088, v5089, v5090, v5091, 1, v5102, v6087, v6088, v6089, 0, 2, v5095, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 4) :|: 0 = 0
f_1399(v5087, v5088, v5089, v5090, v5091, 1, v5102, v6087, v6088, v6089, 0, 2, v5095, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 4) -> f_1404(v5087, v5088, v5089, v5090, v5091, 1, v5102, v6087, v6088, v6089, 0, 2, v5095, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 4) :|: TRUE
f_1404(v5087, v5088, v5089, v5090, v5091, 1, v5102, v6087, v6088, v6089, 0, 2, v5095, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 999, 4) -> f_1405(v5087, v5088, v5089, v5090, v5091, 1, 1, 1, v5102, v6087, v6088, 1, v6089, 0, 2, v5095, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 2, 4) :|: TRUE
f_1405(v6603, v6604, v6605, v6606, v6607, v6608, v6609, v6610, v6611, v6612, v6613, 1, v6615, 0, v6617, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 4) -> f_1407(v6603, v6604, v6605, v6606, v6607, v6608, v6609, v6610, v6611, v6612, v6613, 1, v6615, 0, v6617, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 4) :|: 0 = 0
f_1407(v6603, v6604, v6605, v6606, v6607, v6608, v6609, v6610, v6611, v6612, v6613, 1, v6615, 0, v6617, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 4) -> f_1410(v6603, v6604, v6605, v6606, v6607, v6608, v6609, v6610, v6611, v6612, v6613, 1, v6615, 0, v6617, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) :|: v6611 <= 1000 && v6618 <= 999
f_1410(v6603, v6604, v6605, v6606, v6607, v6608, v6609, v6610, v6611, v6612, v6613, 1, v6615, 0, v6617, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) -> f_1413(v6603, v6604, v6605, v6606, v6607, v6608, v6609, v6610, v6611, v6612, v6613, 1, v6615, 0, v6617, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) :|: 0 = 0
f_1413(v6603, v6604, v6605, v6606, v6607, v6608, v6609, v6610, v6611, v6612, v6613, 1, v6615, 0, v6617, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) -> f_1416(v6603, v6604, v6605, v6606, v6607, v6608, v6609, v6610, v6611, v6612, v6613, 1, v6615, 0, v6617, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) :|: TRUE
f_1416(v6603, v6604, v6605, v6606, v6607, v6608, v6609, v6610, v6611, v6612, v6613, 1, v6615, 0, v6617, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) -> f_1419(v6603, v6604, v6605, v6606, v6607, v6608, v6609, v6610, v6611, v6612, v6613, 1, v6615, 0, v6617, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) :|: 0 = 0
f_1419(v6603, v6604, v6605, v6606, v6607, v6608, v6609, v6610, v6611, v6612, v6613, 1, v6615, 0, v6617, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) -> f_1422(v6603, v6604, v6605, v6606, v6607, v6608, v6609, v6610, v6611, v6612, v6613, 1, v6615, 0, v6617, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) :|: 0 = 0
f_1422(v6603, v6604, v6605, v6606, v6607, v6608, v6609, v6610, v6611, v6612, v6613, 1, v6615, 0, v6617, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) -> f_1425(v6603, v6604, v6605, v6606, v6607, v6608, v6609, v6610, v6611, v6612, v6613, 1, v6615, 0, v6617, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) :|: TRUE
f_1425(v6603, v6604, v6605, v6606, v6607, v6608, v6609, v6610, v6611, v6612, v6613, 1, v6615, 0, v6617, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) -> f_1428(v6603, v6604, v6605, v6606, v6607, v6608, v6609, v6610, v6611, v6612, v6613, 1, v6615, 0, v6617, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) :|: TRUE
f_1428(v6603, v6604, v6605, v6606, v6607, v6608, v6609, v6610, v6611, v6612, v6613, 1, v6615, 0, v6617, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) -> f_1431(v6603, v6604, v6605, v6606, v6607, v6617, v6608, v6609, v6610, v6611, v6612, v6613, 1, v6615, 0, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) :|: 0 = 0
f_1431(v6603, v6604, v6605, v6606, v6607, v6617, v6608, v6609, v6610, v6611, v6612, v6613, 1, v6615, 0, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) -> f_1434(v6603, v6604, v6605, v6606, v6607, v6617, v6609, v6608, v6610, v6611, v6612, v6613, 1, v6615, 0, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) :|: 0 = 0
f_1434(v6603, v6604, v6605, v6606, v6607, v6617, v6609, v6608, v6610, v6611, v6612, v6613, 1, v6615, 0, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) -> f_1437(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v6608, v6610, v6611, v6612, v6613, 1, v6615, 0, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) :|: v7156 = v6617 * v6617
f_1437(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v6608, v6610, v6611, v6612, v6613, 1, v6615, 0, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) -> f_1440(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v6610, v6611, v6612, v6613, 1, v6615, 0, v6608, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) :|: 0 = 0
f_1440(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v6610, v6611, v6612, v6613, 1, v6615, 0, v6608, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) -> f_1443(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v6608, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) :|: v7311 = v7156 * v6617
f_1443(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v6608, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) -> f_1446(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v6608, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) :|: 0 = 0
f_1446(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v6608, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) -> f_1449(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v6608, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) :|: 0 = 0
f_1449(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v6608, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) -> f_1452(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v6608, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) :|: v6612 = v6611 * v6611
f_1452(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v6608, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) -> f_1455(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v6608, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) :|: 0 = 0
f_1455(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v6608, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) -> f_1458(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v6608, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) :|: v6613 = v6612 * v6611
f_1458(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v6608, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) -> f_1461(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v6608, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) :|: 0 = 0
f_1461(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v6608, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) -> f_1464(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v6608, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) :|: 0 = 0
f_1464(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v6608, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) -> f_1467(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v6608, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) :|: 0 = 0
f_1467(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v6608, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) -> f_1470(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v6608, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) :|: 0 = 0
f_1470(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v6608, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) -> f_1473(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v6608, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) :|: 0 = 0
f_1473(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v6608, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) -> f_1476(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v6608, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) :|: v6615 = 1 + v6613
f_1476(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v6608, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) -> f_1480(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v6608, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) :|: v7311 != v6615
f_1480(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v6608, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) -> f_1484(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v6608, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) :|: 0 = 0
f_1484(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v6608, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) -> f_1488(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v6608, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) :|: TRUE
f_1488(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v6608, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) -> f_1492(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) :|: 0 = 0
f_1492(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) -> f_1496(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v7452, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) :|: v7452 = 1 + v6617 && 3 <= v7452
f_1496(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v7452, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) -> f_1501(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v7452, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) :|: TRUE
f_1501(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v7452, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) -> f_1506(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v7452, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) :|: 0 = 0
f_1506(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v7452, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) -> f_1510(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v7452, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4, 1001) :|: 1000 < v7452 && 1000 <= v6617
f_1506(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v7452, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) -> f_1511(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v7452, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) :|: v7452 <= 1000 && v6617 <= 999
f_1510(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v7452, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4, 1001) -> f_1515(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v7452, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4, 1001) :|: 0 = 0
f_1515(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v7452, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4, 1001) -> f_1520(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v7452, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4, 1001) :|: TRUE
f_1520(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v7452, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4, 1001) -> f_1525(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v7452, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4, 1001) :|: TRUE
f_1525(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v7452, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4, 1001) -> f_1529(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v7452, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 4, 1001) :|: 0 = 0
f_1529(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v7452, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 4, 1001) -> f_1533(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v7452, v7714, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 4, 1001) :|: v7714 = 1 + v6611 && 3 <= v7714 && v7714 <= 1001
f_1533(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v7452, v7714, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 4, 1001) -> f_1538(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v7452, v7714, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 4, 1001) :|: TRUE
f_1538(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v7452, v7714, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 4, 1001) -> f_1543(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v7452, v7714, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 4, 1001) :|: TRUE
f_1543(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v7452, v7714, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 4, 1001) -> f_1256(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v7452, v7714, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 1001, 2, 4) :|: TRUE
f_1256(v5087, v5088, v5089, v5090, v5091, v5092, v5093, v5094, v5095, v5096, v5097, 1, v5099, 0, v5101, v5102, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 1001, 2, 4) -> f_1259(v5087, v5088, v5089, v5090, v5091, v5092, v5093, v5094, v5095, v5096, v5097, 1, v5099, 0, v5101, v5102, v5103, v5104, v5105, v5106, v5107, v5108, v5109, 1000, 3, 1001, 2, 4) :|: 0 = 0
f_1511(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v7452, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) -> f_1516(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v7452, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) :|: 0 = 0
f_1516(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v7452, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) -> f_1521(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v7452, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) :|: TRUE
f_1521(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v7452, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 999, 4) -> f_1405(v6603, v6604, v6605, v6606, v6607, v6617, v7156, v7311, v6611, v6612, v6613, 1, v6615, 0, v7452, v6618, v6619, v6620, v6621, v6622, v6623, v6624, v6625, 1000, 3, 2, 4) :|: TRUE
Combined rules. Obtained 6 rulesP rules:
f_1506(v6603:0, v6604:0, v6605:0, v6606:0, v6607:0, v6617:0, v7156:0, v7311:0, v6611:0, v6612:0, v6613:0, 1, v6615:0, 0, v7452:0, v6618:0, v6619:0, v6620:0, v6621:0, v6622:0, v6623:0, v6624:0, v6625:0, 1000, 3, 2, 999, 4) -> f_1506(v6603:0, v6604:0, v6605:0, v6606:0, v6607:0, 2, 4, 8, 1 + v6611:0, (1 + v6611:0) * (1 + v6611:0), (1 + v6611:0) * (1 + v6611:0) * (1 + v6611:0), 1, 1 + (1 + v6611:0) * (1 + v6611:0) * (1 + v6611:0), 0, 3, v6611:0, v6619:0, v6620:0, v6621:0, v6622:0, v6623:0, v6624:0, v6625:0, 1000, 3, 2, 999, 4) :|: 7 < (1 + v6611:0) * (1 + v6611:0) * (1 + v6611:0) && v6611:0 < 1000 && v6617:0 > 999 && v7452:0 > 1000 && v6611:0 < 1001 && v6611:0 > 1
f_1506(v6603:0, v6604:0, v6605:0, v6606:0, v6607:0, v6617:0, v7156:0, v7311:0, v6611:0, v6612:0, v6613:0, 1, v6615:0, 0, v7452:0, v6618:0, v6619:0, v6620:0, v6621:0, v6622:0, v6623:0, v6624:0, v6625:0, 1000, 3, 2, 999, 4) -> f_1506(v6603:0, v6604:0, v6605:0, v6606:0, v6607:0, 2, 4, 8, 1 + v6611:0, (1 + v6611:0) * (1 + v6611:0), (1 + v6611:0) * (1 + v6611:0) * (1 + v6611:0), 1, 1 + (1 + v6611:0) * (1 + v6611:0) * (1 + v6611:0), 0, 3, v6611:0, v6619:0, v6620:0, v6621:0, v6622:0, v6623:0, v6624:0, v6625:0, 1000, 3, 2, 999, 4) :|: v6611:0 < 1000 && (1 + v6611:0) * (1 + v6611:0) * (1 + v6611:0) > 0 && v6617:0 > 999 && v7452:0 > 1000 && 7 > (1 + v6611:0) * (1 + v6611:0) * (1 + v6611:0) && v6611:0 < 1001 && v6611:0 > 1
f_1506(v6603:0, v6604:0, v6605:0, v6606:0, v6607:0, v6617:0, v7156:0, v7311:0, v6611:0, v6612:0, v6613:0, 1, v6615:0, 0, v7452:0, v6618:0, v6619:0, v6620:0, v6621:0, v6622:0, v6623:0, v6624:0, v6625:0, 1000, 3, 2, 999, 4) -> f_1506(v6603:0, v6604:0, v6605:0, v6606:0, v6607:0, 2, 4, 8, 1 + v6611:0, (1 + v6611:0) * (1 + v6611:0), (1 + v6611:0) * (1 + v6611:0) * (1 + v6611:0), 1, 1 + (1 + v6611:0) * (1 + v6611:0) * (1 + v6611:0), 0, 3, v6611:0, v6619:0, v6620:0, v6621:0, v6622:0, v6623:0, v6624:0, v6625:0, 1000, 3, 2, 999, 4) :|: v6611:0 < 1000 && (1 + v6611:0) * (1 + v6611:0) * (1 + v6611:0) < 0 && v6617:0 > 999 && v7452:0 > 1000 && 7 < (1 + v6611:0) * (1 + v6611:0) * (1 + v6611:0) && v6611:0 < 1001 && v6611:0 > 1
f_1506(v6603:0, v6604:0, v6605:0, v6606:0, v6607:0, v6617:0, v7156:0, v7311:0, v6611:0, v6612:0, v6613:0, 1, v6615:0, 0, v7452:0, v6618:0, v6619:0, v6620:0, v6621:0, v6622:0, v6623:0, v6624:0, v6625:0, 1000, 3, 2, 999, 4) -> f_1506(v6603:0, v6604:0, v6605:0, v6606:0, v6607:0, 2, 4, 8, 1 + v6611:0, (1 + v6611:0) * (1 + v6611:0), (1 + v6611:0) * (1 + v6611:0) * (1 + v6611:0), 1, 1 + (1 + v6611:0) * (1 + v6611:0) * (1 + v6611:0), 0, 3, v6611:0, v6619:0, v6620:0, v6621:0, v6622:0, v6623:0, v6624:0, v6625:0, 1000, 3, 2, 999, 4) :|: v6611:0 < 1000 && (1 + v6611:0) * (1 + v6611:0) * (1 + v6611:0) < 0 && v6617:0 > 999 && v7452:0 > 1000 && 7 > (1 + v6611:0) * (1 + v6611:0) * (1 + v6611:0) && v6611:0 < 1001 && v6611:0 > 1
f_1506(v6603:0, v6604:0, v6605:0, v6606:0, v6607:0, v6617:0, v7156:0, v7311:0, v6611:0, v6611:0 * v6611:0, v6611:0 * v6611:0 * v6611:0, 1, 1 + v6611:0 * v6611:0 * v6611:0, 0, v7452:0, v6618:0, v6619:0, v6620:0, v6621:0, v6622:0, v6623:0, v6624:0, v6625:0, 1000, 3, 2, 999, 4) -> f_1506(v6603:0, v6604:0, v6605:0, v6606:0, v6607:0, v7452:0, v7452:0 * v7452:0, v7452:0 * v7452:0 * v7452:0, v6611:0, v6611:0 * v6611:0, v6611:0 * v6611:0 * v6611:0, 1, 1 + v6611:0 * v6611:0 * v6611:0, 0, 1 + v7452:0, v6618:0, v6619:0, v6620:0, v6621:0, v6622:0, v6623:0, v6624:0, v6625:0, 1000, 3, 2, 999, 4) :|: v6618:0 < 1000 && v6611:0 < 1001 && v7452:0 * v7452:0 * v7452:0 < 1 + v6611:0 * v6611:0 * v6611:0 && v7452:0 > 1 && v7452:0 < 1001 && v6617:0 < 1000
f_1506(v6603:0, v6604:0, v6605:0, v6606:0, v6607:0, v6617:0, v7156:0, v7311:0, v6611:0, v6611:0 * v6611:0, v6611:0 * v6611:0 * v6611:0, 1, 1 + v6611:0 * v6611:0 * v6611:0, 0, v7452:0, v6618:0, v6619:0, v6620:0, v6621:0, v6622:0, v6623:0, v6624:0, v6625:0, 1000, 3, 2, 999, 4) -> f_1506(v6603:0, v6604:0, v6605:0, v6606:0, v6607:0, v7452:0, v7452:0 * v7452:0, v7452:0 * v7452:0 * v7452:0, v6611:0, v6611:0 * v6611:0, v6611:0 * v6611:0 * v6611:0, 1, 1 + v6611:0 * v6611:0 * v6611:0, 0, 1 + v7452:0, v6618:0, v6619:0, v6620:0, v6621:0, v6622:0, v6623:0, v6624:0, v6625:0, 1000, 3, 2, 999, 4) :|: v6618:0 < 1000 && v6611:0 < 1001 && v7452:0 * v7452:0 * v7452:0 > 1 + v6611:0 * v6611:0 * v6611:0 && v7452:0 > 1 && v7452:0 < 1001 && v6617:0 < 1000
Filtered unneeded arguments:
   f_1506(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28) -> f_1506(x6, x9, x10, x11, x13, x15, x16)
Removed division, modulo operations, cleaned up constraints. Obtained 6 rules.P rules:
f_1506(v6617:0, v6611:0, v6612:0, v6613:0, v6615:0, v7452:0, v6618:0) -> f_1506(2, 1 + v6611:0, 1 + v6611:0 + (v6611:0 + v6611:0 * v6611:0), 1 + v6611:0 + (v6611:0 + v6611:0 * v6611:0) + (v6611:0 + v6611:0 * v6611:0 + v6611:0 * v6611:0 * (1 + v6611:0)), 1 + (1 + v6611:0 + (v6611:0 + v6611:0 * v6611:0) + (v6611:0 + v6611:0 * v6611:0 + v6611:0 * v6611:0 * (1 + v6611:0))), 3, v6611:0) :|: v6611:0 < 1000 && 7 < 1 + v6611:0 + (v6611:0 + v6611:0 * v6611:0) + (v6611:0 + v6611:0 * v6611:0 + v6611:0 * v6611:0 * (1 + v6611:0)) && v6617:0 > 999 && v7452:0 > 1000 && v6611:0 > 1 && v6611:0 < 1001
f_1506(v6617:0, v6611:0, v6612:0, v6613:0, v6615:0, v7452:0, v6618:0) -> f_1506(2, 1 + v6611:0, 1 + v6611:0 + (v6611:0 + v6611:0 * v6611:0), 1 + v6611:0 + (v6611:0 + v6611:0 * v6611:0) + (v6611:0 + v6611:0 * v6611:0 + v6611:0 * v6611:0 * (1 + v6611:0)), 1 + (1 + v6611:0 + (v6611:0 + v6611:0 * v6611:0) + (v6611:0 + v6611:0 * v6611:0 + v6611:0 * v6611:0 * (1 + v6611:0))), 3, v6611:0) :|: 1 + v6611:0 + (v6611:0 + v6611:0 * v6611:0) + (v6611:0 + v6611:0 * v6611:0 + v6611:0 * v6611:0 * (1 + v6611:0)) > 0 && v6611:0 < 1000 && v6617:0 > 999 && v7452:0 > 1000 && 7 > 1 + v6611:0 + (v6611:0 + v6611:0 * v6611:0) + (v6611:0 + v6611:0 * v6611:0 + v6611:0 * v6611:0 * (1 + v6611:0)) && v6611:0 > 1 && v6611:0 < 1001
f_1506(v6617:0, v6611:0, v6612:0, v6613:0, v6615:0, v7452:0, v6618:0) -> f_1506(2, 1 + v6611:0, 1 + v6611:0 + (v6611:0 + v6611:0 * v6611:0), 1 + v6611:0 + (v6611:0 + v6611:0 * v6611:0) + (v6611:0 + v6611:0 * v6611:0 + v6611:0 * v6611:0 * (1 + v6611:0)), 1 + (1 + v6611:0 + (v6611:0 + v6611:0 * v6611:0) + (v6611:0 + v6611:0 * v6611:0 + v6611:0 * v6611:0 * (1 + v6611:0))), 3, v6611:0) :|: 1 + v6611:0 + (v6611:0 + v6611:0 * v6611:0) + (v6611:0 + v6611:0 * v6611:0 + v6611:0 * v6611:0 * (1 + v6611:0)) < 0 && v6611:0 < 1000 && v6617:0 > 999 && v7452:0 > 1000 && 7 < 1 + v6611:0 + (v6611:0 + v6611:0 * v6611:0) + (v6611:0 + v6611:0 * v6611:0 + v6611:0 * v6611:0 * (1 + v6611:0)) && v6611:0 > 1 && v6611:0 < 1001
f_1506(v6617:0, v6611:0, v6612:0, v6613:0, v6615:0, v7452:0, v6618:0) -> f_1506(2, 1 + v6611:0, 1 + v6611:0 + (v6611:0 + v6611:0 * v6611:0), 1 + v6611:0 + (v6611:0 + v6611:0 * v6611:0) + (v6611:0 + v6611:0 * v6611:0 + v6611:0 * v6611:0 * (1 + v6611:0)), 1 + (1 + v6611:0 + (v6611:0 + v6611:0 * v6611:0) + (v6611:0 + v6611:0 * v6611:0 + v6611:0 * v6611:0 * (1 + v6611:0))), 3, v6611:0) :|: 1 + v6611:0 + (v6611:0 + v6611:0 * v6611:0) + (v6611:0 + v6611:0 * v6611:0 + v6611:0 * v6611:0 * (1 + v6611:0)) < 0 && v6611:0 < 1000 && v6617:0 > 999 && v7452:0 > 1000 && 7 > 1 + v6611:0 + (v6611:0 + v6611:0 * v6611:0) + (v6611:0 + v6611:0 * v6611:0 + v6611:0 * v6611:0 * (1 + v6611:0)) && v6611:0 > 1 && v6611:0 < 1001
f_1506(v6617:0, v6611:0, times~v6611:0~v6611:0, times~times~v6611:0~v6611:0~v6611:0, sum~cons_1~times~times~v6611:0~v6611:0~v6611:0, v7452:0, v6618:0) -> f_1506(v7452:0, v6611:0, v6611:0 * v6611:0, v6611:0 * v6611:0 * v6611:0, 1 + v6611:0 * v6611:0 * v6611:0, 1 + v7452:0, v6618:0) :|: v6611:0 < 1001 && v6618:0 < 1000 && v7452:0 * v7452:0 * v7452:0 < 1 + v6611:0 * v6611:0 * v6611:0 && v7452:0 > 1 && v6617:0 < 1000 && v7452:0 < 1001 && times~v6611:0~v6611:0 = v6611:0 * v6611:0 && times~times~v6611:0~v6611:0~v6611:0 = v6611:0 * v6611:0 * v6611:0 && sum~cons_1~times~times~v6611:0~v6611:0~v6611:0 = 1 + v6611:0 * v6611:0 * v6611:0
f_1506(v6617:0, v6611:0, times~v6611:0~v6611:0, times~times~v6611:0~v6611:0~v6611:0, sum~cons_1~times~times~v6611:0~v6611:0~v6611:0, v7452:0, v6618:0) -> f_1506(v7452:0, v6611:0, v6611:0 * v6611:0, v6611:0 * v6611:0 * v6611:0, 1 + v6611:0 * v6611:0 * v6611:0, 1 + v7452:0, v6618:0) :|: v6611:0 < 1001 && v6618:0 < 1000 && v7452:0 * v7452:0 * v7452:0 > 1 + v6611:0 * v6611:0 * v6611:0 && v7452:0 > 1 && v6617:0 < 1000 && v7452:0 < 1001 && times~v6611:0~v6611:0 = v6611:0 * v6611:0 && times~times~v6611:0~v6611:0~v6611:0 = v6611:0 * v6611:0 * v6611:0 && sum~cons_1~times~times~v6611:0~v6611:0~v6611:0 = 1 + v6611:0 * v6611:0 * v6611:0

----------------------------------------

(34)
Obligation:
Rules:
f_1506(v6617:0, v6611:0, v6612:0, v6613:0, v6615:0, v7452:0, v6618:0) -> f_1506(2, 1 + v6611:0, 1 + v6611:0 + (v6611:0 + v6611:0 * v6611:0), 1 + v6611:0 + (v6611:0 + v6611:0 * v6611:0) + (v6611:0 + v6611:0 * v6611:0 + v6611:0 * v6611:0 * (1 + v6611:0)), 1 + (1 + v6611:0 + (v6611:0 + v6611:0 * v6611:0) + (v6611:0 + v6611:0 * v6611:0 + v6611:0 * v6611:0 * (1 + v6611:0))), 3, v6611:0) :|: v6611:0 < 1000 && 7 < 1 + v6611:0 + (v6611:0 + v6611:0 * v6611:0) + (v6611:0 + v6611:0 * v6611:0 + v6611:0 * v6611:0 * (1 + v6611:0)) && v6617:0 > 999 && v7452:0 > 1000 && v6611:0 > 1 && v6611:0 < 1001
f_1506(x, x1, x2, x3, x4, x5, x6) -> f_1506(2, 1 + x1, 1 + x1 + (x1 + x1 * x1), 1 + x1 + (x1 + x1 * x1) + (x1 + x1 * x1 + x1 * x1 * (1 + x1)), 1 + (1 + x1 + (x1 + x1 * x1) + (x1 + x1 * x1 + x1 * x1 * (1 + x1))), 3, x1) :|: 1 + x1 + (x1 + x1 * x1) + (x1 + x1 * x1 + x1 * x1 * (1 + x1)) > 0 && x1 < 1000 && x > 999 && x5 > 1000 && 7 > 1 + x1 + (x1 + x1 * x1) + (x1 + x1 * x1 + x1 * x1 * (1 + x1)) && x1 > 1 && x1 < 1001
f_1506(x7, x8, x9, x10, x11, x12, x13) -> f_1506(2, 1 + x8, 1 + x8 + (x8 + x8 * x8), 1 + x8 + (x8 + x8 * x8) + (x8 + x8 * x8 + x8 * x8 * (1 + x8)), 1 + (1 + x8 + (x8 + x8 * x8) + (x8 + x8 * x8 + x8 * x8 * (1 + x8))), 3, x8) :|: 1 + x8 + (x8 + x8 * x8) + (x8 + x8 * x8 + x8 * x8 * (1 + x8)) < 0 && x8 < 1000 && x7 > 999 && x12 > 1000 && 7 < 1 + x8 + (x8 + x8 * x8) + (x8 + x8 * x8 + x8 * x8 * (1 + x8)) && x8 > 1 && x8 < 1001
f_1506(x14, x15, x16, x17, x18, x19, x20) -> f_1506(2, 1 + x15, 1 + x15 + (x15 + x15 * x15), 1 + x15 + (x15 + x15 * x15) + (x15 + x15 * x15 + x15 * x15 * (1 + x15)), 1 + (1 + x15 + (x15 + x15 * x15) + (x15 + x15 * x15 + x15 * x15 * (1 + x15))), 3, x15) :|: 1 + x15 + (x15 + x15 * x15) + (x15 + x15 * x15 + x15 * x15 * (1 + x15)) < 0 && x15 < 1000 && x14 > 999 && x19 > 1000 && 7 > 1 + x15 + (x15 + x15 * x15) + (x15 + x15 * x15 + x15 * x15 * (1 + x15)) && x15 > 1 && x15 < 1001
f_1506(x21, x22, x23, x24, x25, x26, x27) -> f_1506(x26, x22, x22 * x22, x22 * x22 * x22, 1 + x22 * x22 * x22, 1 + x26, x27) :|: x22 < 1001 && x27 < 1000 && x26 * x26 * x26 < 1 + x22 * x22 * x22 && x26 > 1 && x21 < 1000 && x26 < 1001 && x23 = x22 * x22 && x24 = x22 * x22 * x22 && x25 = 1 + x22 * x22 * x22
f_1506(x28, x29, x30, x31, x32, x33, x34) -> f_1506(x33, x29, x29 * x29, x29 * x29 * x29, 1 + x29 * x29 * x29, 1 + x33, x34) :|: x29 < 1001 && x34 < 1000 && x33 * x33 * x33 > 1 + x29 * x29 * x29 && x33 > 1 && x28 < 1000 && x33 < 1001 && x30 = x29 * x29 && x31 = x29 * x29 * x29 && x32 = 1 + x29 * x29 * x29

----------------------------------------

(35) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(36)
Obligation:
Rules:
f_1506(x7:0, x8:0, x9:0, x10:0, x11:0, x12:0, x13:0) -> f_1506(2, 1 + x8:0, 1 + x8:0 + (x8:0 + x8:0 * x8:0), 1 + x8:0 + (x8:0 + x8:0 * x8:0) + (x8:0 + x8:0 * x8:0 + x8:0 * x8:0 * (1 + x8:0)), 1 + (1 + x8:0 + (x8:0 + x8:0 * x8:0) + (x8:0 + x8:0 * x8:0 + x8:0 * x8:0 * (1 + x8:0))), 3, x8:0) :|: x8:0 > 1 && x8:0 < 1001 && 7 < 1 + x8:0 + (x8:0 + x8:0 * x8:0) + (x8:0 + x8:0 * x8:0 + x8:0 * x8:0 * (1 + x8:0)) && x12:0 > 1000 && x7:0 > 999 && x8:0 < 1000 && 1 + x8:0 + (x8:0 + x8:0 * x8:0) + (x8:0 + x8:0 * x8:0 + x8:0 * x8:0 * (1 + x8:0)) < 0
f_1506(x14:0, x15:0, x16:0, x17:0, x18:0, x19:0, x20:0) -> f_1506(2, 1 + x15:0, 1 + x15:0 + (x15:0 + x15:0 * x15:0), 1 + x15:0 + (x15:0 + x15:0 * x15:0) + (x15:0 + x15:0 * x15:0 + x15:0 * x15:0 * (1 + x15:0)), 1 + (1 + x15:0 + (x15:0 + x15:0 * x15:0) + (x15:0 + x15:0 * x15:0 + x15:0 * x15:0 * (1 + x15:0))), 3, x15:0) :|: x15:0 > 1 && x15:0 < 1001 && 7 > 1 + x15:0 + (x15:0 + x15:0 * x15:0) + (x15:0 + x15:0 * x15:0 + x15:0 * x15:0 * (1 + x15:0)) && x19:0 > 1000 && x14:0 > 999 && x15:0 < 1000 && 1 + x15:0 + (x15:0 + x15:0 * x15:0) + (x15:0 + x15:0 * x15:0 + x15:0 * x15:0 * (1 + x15:0)) < 0
f_1506(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0) -> f_1506(2, 1 + x1:0, 1 + x1:0 + (x1:0 + x1:0 * x1:0), 1 + x1:0 + (x1:0 + x1:0 * x1:0) + (x1:0 + x1:0 * x1:0 + x1:0 * x1:0 * (1 + x1:0)), 1 + (1 + x1:0 + (x1:0 + x1:0 * x1:0) + (x1:0 + x1:0 * x1:0 + x1:0 * x1:0 * (1 + x1:0))), 3, x1:0) :|: x1:0 > 1 && x1:0 < 1001 && 7 > 1 + x1:0 + (x1:0 + x1:0 * x1:0) + (x1:0 + x1:0 * x1:0 + x1:0 * x1:0 * (1 + x1:0)) && x5:0 > 1000 && x:0 > 999 && x1:0 < 1000 && 1 + x1:0 + (x1:0 + x1:0 * x1:0) + (x1:0 + x1:0 * x1:0 + x1:0 * x1:0 * (1 + x1:0)) > 0
f_1506(x21:0, x22:0, times~x22:0~x22:0, times~times~x22:0~x22:0~x22:0, sum~cons_1~times~times~x22:0~x22:0~x22:0, x26:0, x27:0) -> f_1506(x26:0, x22:0, x22:0 * x22:0, x22:0 * x22:0 * x22:0, 1 + x22:0 * x22:0 * x22:0, 1 + x26:0, x27:0) :|: x21:0 < 1000 && x26:0 < 1001 && x26:0 > 1 && x26:0 * x26:0 * x26:0 < 1 + x22:0 * x22:0 * x22:0 && x27:0 < 1000 && x22:0 < 1001 && times~x22:0~x22:0 = x22:0 * x22:0 && times~times~x22:0~x22:0~x22:0 = x22:0 * x22:0 * x22:0 && sum~cons_1~times~times~x22:0~x22:0~x22:0 = 1 + x22:0 * x22:0 * x22:0
f_1506(v6617:0:0, v6611:0:0, v6612:0:0, v6613:0:0, v6615:0:0, v7452:0:0, v6618:0:0) -> f_1506(2, 1 + v6611:0:0, 1 + v6611:0:0 + (v6611:0:0 + v6611:0:0 * v6611:0:0), 1 + v6611:0:0 + (v6611:0:0 + v6611:0:0 * v6611:0:0) + (v6611:0:0 + v6611:0:0 * v6611:0:0 + v6611:0:0 * v6611:0:0 * (1 + v6611:0:0)), 1 + (1 + v6611:0:0 + (v6611:0:0 + v6611:0:0 * v6611:0:0) + (v6611:0:0 + v6611:0:0 * v6611:0:0 + v6611:0:0 * v6611:0:0 * (1 + v6611:0:0))), 3, v6611:0:0) :|: v6611:0:0 > 1 && v6611:0:0 < 1001 && v7452:0:0 > 1000 && v6617:0:0 > 999 && 7 < 1 + v6611:0:0 + (v6611:0:0 + v6611:0:0 * v6611:0:0) + (v6611:0:0 + v6611:0:0 * v6611:0:0 + v6611:0:0 * v6611:0:0 * (1 + v6611:0:0)) && v6611:0:0 < 1000
f_1506(x28:0, x29:0, times~x29:0~x29:0, times~times~x29:0~x29:0~x29:0, sum~cons_1~times~times~x29:0~x29:0~x29:0, x33:0, x34:0) -> f_1506(x33:0, x29:0, x29:0 * x29:0, x29:0 * x29:0 * x29:0, 1 + x29:0 * x29:0 * x29:0, 1 + x33:0, x34:0) :|: x28:0 < 1000 && x33:0 < 1001 && x33:0 > 1 && x33:0 * x33:0 * x33:0 > 1 + x29:0 * x29:0 * x29:0 && x34:0 < 1000 && x29:0 < 1001 && times~x29:0~x29:0 = x29:0 * x29:0 && times~times~x29:0~x29:0~x29:0 = x29:0 * x29:0 * x29:0 && sum~cons_1~times~times~x29:0~x29:0~x29:0 = 1 + x29:0 * x29:0 * x29:0

----------------------------------------

(37) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1506(x, x1, x2, x3, x4, x5, x6)] = 1000 - x1

The following rules are decreasing:
f_1506(x7:0, x8:0, x9:0, x10:0, x11:0, x12:0, x13:0) -> f_1506(2, 1 + x8:0, 1 + x8:0 + (x8:0 + x8:0 * x8:0), 1 + x8:0 + (x8:0 + x8:0 * x8:0) + (x8:0 + x8:0 * x8:0 + x8:0 * x8:0 * (1 + x8:0)), 1 + (1 + x8:0 + (x8:0 + x8:0 * x8:0) + (x8:0 + x8:0 * x8:0 + x8:0 * x8:0 * (1 + x8:0))), 3, x8:0) :|: x8:0 > 1 && x8:0 < 1001 && 7 < 1 + x8:0 + (x8:0 + x8:0 * x8:0) + (x8:0 + x8:0 * x8:0 + x8:0 * x8:0 * (1 + x8:0)) && x12:0 > 1000 && x7:0 > 999 && x8:0 < 1000 && 1 + x8:0 + (x8:0 + x8:0 * x8:0) + (x8:0 + x8:0 * x8:0 + x8:0 * x8:0 * (1 + x8:0)) < 0
f_1506(x14:0, x15:0, x16:0, x17:0, x18:0, x19:0, x20:0) -> f_1506(2, 1 + x15:0, 1 + x15:0 + (x15:0 + x15:0 * x15:0), 1 + x15:0 + (x15:0 + x15:0 * x15:0) + (x15:0 + x15:0 * x15:0 + x15:0 * x15:0 * (1 + x15:0)), 1 + (1 + x15:0 + (x15:0 + x15:0 * x15:0) + (x15:0 + x15:0 * x15:0 + x15:0 * x15:0 * (1 + x15:0))), 3, x15:0) :|: x15:0 > 1 && x15:0 < 1001 && 7 > 1 + x15:0 + (x15:0 + x15:0 * x15:0) + (x15:0 + x15:0 * x15:0 + x15:0 * x15:0 * (1 + x15:0)) && x19:0 > 1000 && x14:0 > 999 && x15:0 < 1000 && 1 + x15:0 + (x15:0 + x15:0 * x15:0) + (x15:0 + x15:0 * x15:0 + x15:0 * x15:0 * (1 + x15:0)) < 0
f_1506(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0) -> f_1506(2, 1 + x1:0, 1 + x1:0 + (x1:0 + x1:0 * x1:0), 1 + x1:0 + (x1:0 + x1:0 * x1:0) + (x1:0 + x1:0 * x1:0 + x1:0 * x1:0 * (1 + x1:0)), 1 + (1 + x1:0 + (x1:0 + x1:0 * x1:0) + (x1:0 + x1:0 * x1:0 + x1:0 * x1:0 * (1 + x1:0))), 3, x1:0) :|: x1:0 > 1 && x1:0 < 1001 && 7 > 1 + x1:0 + (x1:0 + x1:0 * x1:0) + (x1:0 + x1:0 * x1:0 + x1:0 * x1:0 * (1 + x1:0)) && x5:0 > 1000 && x:0 > 999 && x1:0 < 1000 && 1 + x1:0 + (x1:0 + x1:0 * x1:0) + (x1:0 + x1:0 * x1:0 + x1:0 * x1:0 * (1 + x1:0)) > 0
f_1506(v6617:0:0, v6611:0:0, v6612:0:0, v6613:0:0, v6615:0:0, v7452:0:0, v6618:0:0) -> f_1506(2, 1 + v6611:0:0, 1 + v6611:0:0 + (v6611:0:0 + v6611:0:0 * v6611:0:0), 1 + v6611:0:0 + (v6611:0:0 + v6611:0:0 * v6611:0:0) + (v6611:0:0 + v6611:0:0 * v6611:0:0 + v6611:0:0 * v6611:0:0 * (1 + v6611:0:0)), 1 + (1 + v6611:0:0 + (v6611:0:0 + v6611:0:0 * v6611:0:0) + (v6611:0:0 + v6611:0:0 * v6611:0:0 + v6611:0:0 * v6611:0:0 * (1 + v6611:0:0))), 3, v6611:0:0) :|: v6611:0:0 > 1 && v6611:0:0 < 1001 && v7452:0:0 > 1000 && v6617:0:0 > 999 && 7 < 1 + v6611:0:0 + (v6611:0:0 + v6611:0:0 * v6611:0:0) + (v6611:0:0 + v6611:0:0 * v6611:0:0 + v6611:0:0 * v6611:0:0 * (1 + v6611:0:0)) && v6611:0:0 < 1000
The following rules are bounded:
f_1506(x21:0, x22:0, times~x22:0~x22:0, times~times~x22:0~x22:0~x22:0, sum~cons_1~times~times~x22:0~x22:0~x22:0, x26:0, x27:0) -> f_1506(x26:0, x22:0, x22:0 * x22:0, x22:0 * x22:0 * x22:0, 1 + x22:0 * x22:0 * x22:0, 1 + x26:0, x27:0) :|: x21:0 < 1000 && x26:0 < 1001 && x26:0 > 1 && x26:0 * x26:0 * x26:0 < 1 + x22:0 * x22:0 * x22:0 && x27:0 < 1000 && x22:0 < 1001 && times~x22:0~x22:0 = x22:0 * x22:0 && times~times~x22:0~x22:0~x22:0 = x22:0 * x22:0 * x22:0 && sum~cons_1~times~times~x22:0~x22:0~x22:0 = 1 + x22:0 * x22:0 * x22:0
f_1506(x28:0, x29:0, times~x29:0~x29:0, times~times~x29:0~x29:0~x29:0, sum~cons_1~times~times~x29:0~x29:0~x29:0, x33:0, x34:0) -> f_1506(x33:0, x29:0, x29:0 * x29:0, x29:0 * x29:0 * x29:0, 1 + x29:0 * x29:0 * x29:0, 1 + x33:0, x34:0) :|: x28:0 < 1000 && x33:0 < 1001 && x33:0 > 1 && x33:0 * x33:0 * x33:0 > 1 + x29:0 * x29:0 * x29:0 && x34:0 < 1000 && x29:0 < 1001 && times~x29:0~x29:0 = x29:0 * x29:0 && times~times~x29:0~x29:0~x29:0 = x29:0 * x29:0 * x29:0 && sum~cons_1~times~times~x29:0~x29:0~x29:0 = 1 + x29:0 * x29:0 * x29:0

----------------------------------------

(38)
Complex Obligation (AND)

----------------------------------------

(39)
Obligation:
Rules:
f_1506(x21:0, x22:0, times~x22:0~x22:0, times~times~x22:0~x22:0~x22:0, sum~cons_1~times~times~x22:0~x22:0~x22:0, x26:0, x27:0) -> f_1506(x26:0, x22:0, x22:0 * x22:0, x22:0 * x22:0 * x22:0, 1 + x22:0 * x22:0 * x22:0, 1 + x26:0, x27:0) :|: x21:0 < 1000 && x26:0 < 1001 && x26:0 > 1 && x26:0 * x26:0 * x26:0 < 1 + x22:0 * x22:0 * x22:0 && x27:0 < 1000 && x22:0 < 1001 && times~x22:0~x22:0 = x22:0 * x22:0 && times~times~x22:0~x22:0~x22:0 = x22:0 * x22:0 * x22:0 && sum~cons_1~times~times~x22:0~x22:0~x22:0 = 1 + x22:0 * x22:0 * x22:0
f_1506(x28:0, x29:0, times~x29:0~x29:0, times~times~x29:0~x29:0~x29:0, sum~cons_1~times~times~x29:0~x29:0~x29:0, x33:0, x34:0) -> f_1506(x33:0, x29:0, x29:0 * x29:0, x29:0 * x29:0 * x29:0, 1 + x29:0 * x29:0 * x29:0, 1 + x33:0, x34:0) :|: x28:0 < 1000 && x33:0 < 1001 && x33:0 > 1 && x33:0 * x33:0 * x33:0 > 1 + x29:0 * x29:0 * x29:0 && x34:0 < 1000 && x29:0 < 1001 && times~x29:0~x29:0 = x29:0 * x29:0 && times~times~x29:0~x29:0~x29:0 = x29:0 * x29:0 * x29:0 && sum~cons_1~times~times~x29:0~x29:0~x29:0 = 1 + x29:0 * x29:0 * x29:0

----------------------------------------

(40) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(41)
Obligation:
Rules:
f_1506(x21:0:0, x22:0:0, times~x22:0:0~x22:0:0, times~times~x22:0:0~x22:0:0~x22:0:0, sum~cons_1~times~times~x22:0:0~x22:0:0~x22:0:0, x26:0:0, x27:0:0) -> f_1506(x26:0:0, x22:0:0, x22:0:0 * x22:0:0, x22:0:0 * x22:0:0 * x22:0:0, 1 + x22:0:0 * x22:0:0 * x22:0:0, 1 + x26:0:0, x27:0:0) :|: x27:0:0 < 1000 && x22:0:0 < 1001 && x26:0:0 * x26:0:0 * x26:0:0 < 1 + x22:0:0 * x22:0:0 * x22:0:0 && x26:0:0 > 1 && x26:0:0 < 1001 && x21:0:0 < 1000 && times~x22:0:0~x22:0:0 = x22:0:0 * x22:0:0 && times~times~x22:0:0~x22:0:0~x22:0:0 = x22:0:0 * x22:0:0 * x22:0:0 && sum~cons_1~times~times~x22:0:0~x22:0:0~x22:0:0 = 1 + x22:0:0 * x22:0:0 * x22:0:0
f_1506(x28:0:0, x29:0:0, times~x29:0:0~x29:0:0, times~times~x29:0:0~x29:0:0~x29:0:0, sum~cons_1~times~times~x29:0:0~x29:0:0~x29:0:0, x33:0:0, x34:0:0) -> f_1506(x33:0:0, x29:0:0, x29:0:0 * x29:0:0, x29:0:0 * x29:0:0 * x29:0:0, 1 + x29:0:0 * x29:0:0 * x29:0:0, 1 + x33:0:0, x34:0:0) :|: x34:0:0 < 1000 && x29:0:0 < 1001 && x33:0:0 * x33:0:0 * x33:0:0 > 1 + x29:0:0 * x29:0:0 * x29:0:0 && x33:0:0 > 1 && x33:0:0 < 1001 && x28:0:0 < 1000 && times~x29:0:0~x29:0:0 = x29:0:0 * x29:0:0 && times~times~x29:0:0~x29:0:0~x29:0:0 = x29:0:0 * x29:0:0 * x29:0:0 && sum~cons_1~times~times~x29:0:0~x29:0:0~x29:0:0 = 1 + x29:0:0 * x29:0:0 * x29:0:0

----------------------------------------

(42) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1506 ] = -1*f_1506_6

The following rules are decreasing:
f_1506(x21:0:0, x22:0:0, times~x22:0:0~x22:0:0, times~times~x22:0:0~x22:0:0~x22:0:0, sum~cons_1~times~times~x22:0:0~x22:0:0~x22:0:0, x26:0:0, x27:0:0) -> f_1506(x26:0:0, x22:0:0, x22:0:0 * x22:0:0, x22:0:0 * x22:0:0 * x22:0:0, 1 + x22:0:0 * x22:0:0 * x22:0:0, 1 + x26:0:0, x27:0:0) :|: x27:0:0 < 1000 && x22:0:0 < 1001 && x26:0:0 * x26:0:0 * x26:0:0 < 1 + x22:0:0 * x22:0:0 * x22:0:0 && x26:0:0 > 1 && x26:0:0 < 1001 && x21:0:0 < 1000 && times~x22:0:0~x22:0:0 = x22:0:0 * x22:0:0 && times~times~x22:0:0~x22:0:0~x22:0:0 = x22:0:0 * x22:0:0 * x22:0:0 && sum~cons_1~times~times~x22:0:0~x22:0:0~x22:0:0 = 1 + x22:0:0 * x22:0:0 * x22:0:0
f_1506(x28:0:0, x29:0:0, times~x29:0:0~x29:0:0, times~times~x29:0:0~x29:0:0~x29:0:0, sum~cons_1~times~times~x29:0:0~x29:0:0~x29:0:0, x33:0:0, x34:0:0) -> f_1506(x33:0:0, x29:0:0, x29:0:0 * x29:0:0, x29:0:0 * x29:0:0 * x29:0:0, 1 + x29:0:0 * x29:0:0 * x29:0:0, 1 + x33:0:0, x34:0:0) :|: x34:0:0 < 1000 && x29:0:0 < 1001 && x33:0:0 * x33:0:0 * x33:0:0 > 1 + x29:0:0 * x29:0:0 * x29:0:0 && x33:0:0 > 1 && x33:0:0 < 1001 && x28:0:0 < 1000 && times~x29:0:0~x29:0:0 = x29:0:0 * x29:0:0 && times~times~x29:0:0~x29:0:0~x29:0:0 = x29:0:0 * x29:0:0 * x29:0:0 && sum~cons_1~times~times~x29:0:0~x29:0:0~x29:0:0 = 1 + x29:0:0 * x29:0:0 * x29:0:0

The following rules are bounded:
f_1506(x21:0:0, x22:0:0, times~x22:0:0~x22:0:0, times~times~x22:0:0~x22:0:0~x22:0:0, sum~cons_1~times~times~x22:0:0~x22:0:0~x22:0:0, x26:0:0, x27:0:0) -> f_1506(x26:0:0, x22:0:0, x22:0:0 * x22:0:0, x22:0:0 * x22:0:0 * x22:0:0, 1 + x22:0:0 * x22:0:0 * x22:0:0, 1 + x26:0:0, x27:0:0) :|: x27:0:0 < 1000 && x22:0:0 < 1001 && x26:0:0 * x26:0:0 * x26:0:0 < 1 + x22:0:0 * x22:0:0 * x22:0:0 && x26:0:0 > 1 && x26:0:0 < 1001 && x21:0:0 < 1000 && times~x22:0:0~x22:0:0 = x22:0:0 * x22:0:0 && times~times~x22:0:0~x22:0:0~x22:0:0 = x22:0:0 * x22:0:0 * x22:0:0 && sum~cons_1~times~times~x22:0:0~x22:0:0~x22:0:0 = 1 + x22:0:0 * x22:0:0 * x22:0:0
f_1506(x28:0:0, x29:0:0, times~x29:0:0~x29:0:0, times~times~x29:0:0~x29:0:0~x29:0:0, sum~cons_1~times~times~x29:0:0~x29:0:0~x29:0:0, x33:0:0, x34:0:0) -> f_1506(x33:0:0, x29:0:0, x29:0:0 * x29:0:0, x29:0:0 * x29:0:0 * x29:0:0, 1 + x29:0:0 * x29:0:0 * x29:0:0, 1 + x33:0:0, x34:0:0) :|: x34:0:0 < 1000 && x29:0:0 < 1001 && x33:0:0 * x33:0:0 * x33:0:0 > 1 + x29:0:0 * x29:0:0 * x29:0:0 && x33:0:0 > 1 && x33:0:0 < 1001 && x28:0:0 < 1000 && times~x29:0:0~x29:0:0 = x29:0:0 * x29:0:0 && times~times~x29:0:0~x29:0:0~x29:0:0 = x29:0:0 * x29:0:0 * x29:0:0 && sum~cons_1~times~times~x29:0:0~x29:0:0~x29:0:0 = 1 + x29:0:0 * x29:0:0 * x29:0:0


----------------------------------------

(43)
YES

----------------------------------------

(44)
Obligation:
Rules:
f_1506(x7:0, x8:0, x9:0, x10:0, x11:0, x12:0, x13:0) -> f_1506(2, 1 + x8:0, 1 + x8:0 + (x8:0 + x8:0 * x8:0), 1 + x8:0 + (x8:0 + x8:0 * x8:0) + (x8:0 + x8:0 * x8:0 + x8:0 * x8:0 * (1 + x8:0)), 1 + (1 + x8:0 + (x8:0 + x8:0 * x8:0) + (x8:0 + x8:0 * x8:0 + x8:0 * x8:0 * (1 + x8:0))), 3, x8:0) :|: x8:0 > 1 && x8:0 < 1001 && 7 < 1 + x8:0 + (x8:0 + x8:0 * x8:0) + (x8:0 + x8:0 * x8:0 + x8:0 * x8:0 * (1 + x8:0)) && x12:0 > 1000 && x7:0 > 999 && x8:0 < 1000 && 1 + x8:0 + (x8:0 + x8:0 * x8:0) + (x8:0 + x8:0 * x8:0 + x8:0 * x8:0 * (1 + x8:0)) < 0
f_1506(x14:0, x15:0, x16:0, x17:0, x18:0, x19:0, x20:0) -> f_1506(2, 1 + x15:0, 1 + x15:0 + (x15:0 + x15:0 * x15:0), 1 + x15:0 + (x15:0 + x15:0 * x15:0) + (x15:0 + x15:0 * x15:0 + x15:0 * x15:0 * (1 + x15:0)), 1 + (1 + x15:0 + (x15:0 + x15:0 * x15:0) + (x15:0 + x15:0 * x15:0 + x15:0 * x15:0 * (1 + x15:0))), 3, x15:0) :|: x15:0 > 1 && x15:0 < 1001 && 7 > 1 + x15:0 + (x15:0 + x15:0 * x15:0) + (x15:0 + x15:0 * x15:0 + x15:0 * x15:0 * (1 + x15:0)) && x19:0 > 1000 && x14:0 > 999 && x15:0 < 1000 && 1 + x15:0 + (x15:0 + x15:0 * x15:0) + (x15:0 + x15:0 * x15:0 + x15:0 * x15:0 * (1 + x15:0)) < 0
f_1506(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0) -> f_1506(2, 1 + x1:0, 1 + x1:0 + (x1:0 + x1:0 * x1:0), 1 + x1:0 + (x1:0 + x1:0 * x1:0) + (x1:0 + x1:0 * x1:0 + x1:0 * x1:0 * (1 + x1:0)), 1 + (1 + x1:0 + (x1:0 + x1:0 * x1:0) + (x1:0 + x1:0 * x1:0 + x1:0 * x1:0 * (1 + x1:0))), 3, x1:0) :|: x1:0 > 1 && x1:0 < 1001 && 7 > 1 + x1:0 + (x1:0 + x1:0 * x1:0) + (x1:0 + x1:0 * x1:0 + x1:0 * x1:0 * (1 + x1:0)) && x5:0 > 1000 && x:0 > 999 && x1:0 < 1000 && 1 + x1:0 + (x1:0 + x1:0 * x1:0) + (x1:0 + x1:0 * x1:0 + x1:0 * x1:0 * (1 + x1:0)) > 0
f_1506(v6617:0:0, v6611:0:0, v6612:0:0, v6613:0:0, v6615:0:0, v7452:0:0, v6618:0:0) -> f_1506(2, 1 + v6611:0:0, 1 + v6611:0:0 + (v6611:0:0 + v6611:0:0 * v6611:0:0), 1 + v6611:0:0 + (v6611:0:0 + v6611:0:0 * v6611:0:0) + (v6611:0:0 + v6611:0:0 * v6611:0:0 + v6611:0:0 * v6611:0:0 * (1 + v6611:0:0)), 1 + (1 + v6611:0:0 + (v6611:0:0 + v6611:0:0 * v6611:0:0) + (v6611:0:0 + v6611:0:0 * v6611:0:0 + v6611:0:0 * v6611:0:0 * (1 + v6611:0:0))), 3, v6611:0:0) :|: v6611:0:0 > 1 && v6611:0:0 < 1001 && v7452:0:0 > 1000 && v6617:0:0 > 999 && 7 < 1 + v6611:0:0 + (v6611:0:0 + v6611:0:0 * v6611:0:0) + (v6611:0:0 + v6611:0:0 * v6611:0:0 + v6611:0:0 * v6611:0:0 * (1 + v6611:0:0)) && v6611:0:0 < 1000

----------------------------------------

(45) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained no non-trivial SCC(s).

----------------------------------------

(46)
YES

----------------------------------------

(47)
Obligation:
SCC
----------------------------------------

(48) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 34 rulesP rules:
f_414(v90, v91, v92, v93, v94, v101, v95, v96, v97, 1, 2, 0, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) -> f_415(v90, v91, v92, v93, v94, v101, v96, v95, v97, 1, 2, 0, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) :|: 0 = 0
f_415(v90, v91, v92, v93, v94, v101, v96, v95, v97, 1, 2, 0, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) -> f_416(v90, v91, v92, v93, v94, v101, v110, v95, v97, 1, 2, 0, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) :|: v110 = v101 * v101
f_416(v90, v91, v92, v93, v94, v101, v110, v95, v97, 1, 2, 0, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) -> f_417(v90, v91, v92, v93, v94, v101, v110, v97, 1, 2, 0, v95, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) :|: 0 = 0
f_417(v90, v91, v92, v93, v94, v101, v110, v97, 1, 2, 0, v95, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) -> f_418(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v95, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) :|: v111 = v110 * v101
f_418(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v95, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) -> f_419(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v95, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) :|: 0 = 0
f_419(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v95, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) -> f_420(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v95, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) :|: 0 = 0
f_420(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v95, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) -> f_421(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v95, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) :|: 0 = 0
f_421(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v95, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) -> f_422(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v95, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) :|: 0 = 0
f_422(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v95, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) -> f_423(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v95, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) :|: 0 = 0
f_423(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v95, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) -> f_424(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v95, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) :|: 0 = 0
f_424(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v95, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) -> f_425(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v95, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) :|: 0 = 0
f_425(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v95, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) -> f_426(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v95, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) :|: 0 = 0
f_426(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v95, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) -> f_427(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v95, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) :|: 0 = 0
f_427(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v95, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) -> f_428(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v95, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) :|: 0 = 0
f_428(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v95, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) -> f_429(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v95, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) :|: 0 = 0
f_429(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v95, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) -> f_431(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v95, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) :|: v111 != 2
f_431(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v95, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) -> f_433(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v95, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) :|: 0 = 0
f_433(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v95, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) -> f_435(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v95, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) :|: TRUE
f_435(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v95, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) -> f_437(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) :|: 0 = 0
f_437(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) -> f_439(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v112, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) :|: v112 = 1 + v101 && 3 <= v112
f_439(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v112, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) -> f_441(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v112, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) :|: TRUE
f_441(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v112, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) -> f_443(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v112, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) :|: 0 = 0
f_443(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v112, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) -> f_445(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v112, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 999, 4) :|: v112 <= 1000 && v101 <= 999
f_445(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v112, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 999, 4) -> f_447(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v112, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 999, 4) :|: 0 = 0
f_447(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v112, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 999, 4) -> f_449(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v112, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 999, 4) :|: TRUE
f_449(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v112, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 999, 4) -> f_451(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v112, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 999, 4) :|: 0 = 0
f_451(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v112, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 999, 4) -> f_453(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v112, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 999, 4) :|: 0 = 0
f_453(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v112, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 999, 4) -> f_455(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v112, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 999, 4) :|: TRUE
f_455(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v112, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 999, 4) -> f_457(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v112, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 999, 4) :|: 0 = 0
f_457(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v112, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 999, 4) -> f_459(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v112, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 999, 4) :|: 0 = 0
f_459(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v112, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 999, 4) -> f_461(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v112, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 999, 4) :|: TRUE
f_461(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v112, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 999, 4) -> f_463(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v112, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 999, 4) :|: TRUE
f_463(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v112, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 999, 4) -> f_413(v90, v91, v92, v93, v94, v101, v110, v111, 1, 2, 0, v112, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) :|: TRUE
f_413(v90, v91, v92, v93, v94, v95, v96, v97, 1, 2, 0, v101, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) -> f_414(v90, v91, v92, v93, v94, v101, v95, v96, v97, 1, 2, 0, v102, v103, v104, v105, v106, v107, v108, 1000, 3, 4) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_414(v90:0, v91:0, v92:0, v93:0, v94:0, v101:0, v95:0, v96:0, v97:0, 1, 2, 0, v102:0, v103:0, v104:0, v105:0, v106:0, v107:0, v108:0, 1000, 3, 4) -> f_414(v90:0, v91:0, v92:0, v93:0, v94:0, 1 + v101:0, v101:0, v101:0 * v101:0, v101:0 * v101:0 * v101:0, 1, 2, 0, v102:0, v103:0, v104:0, v105:0, v106:0, v107:0, v108:0, 1000, 3, 4) :|: v101:0 * v101:0 * v101:0 < 2 && v101:0 > 1 && v101:0 < 1000
f_414(v90:0, v91:0, v92:0, v93:0, v94:0, v101:0, v95:0, v96:0, v97:0, 1, 2, 0, v102:0, v103:0, v104:0, v105:0, v106:0, v107:0, v108:0, 1000, 3, 4) -> f_414(v90:0, v91:0, v92:0, v93:0, v94:0, 1 + v101:0, v101:0, v101:0 * v101:0, v101:0 * v101:0 * v101:0, 1, 2, 0, v102:0, v103:0, v104:0, v105:0, v106:0, v107:0, v108:0, 1000, 3, 4) :|: v101:0 * v101:0 * v101:0 > 2 && v101:0 > 1 && v101:0 < 1000
Filtered unneeded arguments:
   f_414(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22) -> f_414(x6)
Removed division, modulo operations, cleaned up constraints. Obtained 2 rules.P rules:
f_414(v101:0) -> f_414(1 + v101:0) :|: v101:0 > 1 && v101:0 < 1000 && v101:0 * v101:0 * v101:0 < 2
f_414(v101:0) -> f_414(1 + v101:0) :|: v101:0 > 1 && v101:0 < 1000 && v101:0 * v101:0 * v101:0 > 2

----------------------------------------

(49)
Obligation:
Rules:
f_414(v101:0) -> f_414(1 + v101:0) :|: v101:0 > 1 && v101:0 < 1000 && v101:0 * v101:0 * v101:0 < 2
f_414(x) -> f_414(1 + x) :|: x > 1 && x < 1000 && x * x * x > 2

----------------------------------------

(50) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(51)
Obligation:
Rules:
f_414(v101:0:0) -> f_414(1 + v101:0:0) :|: v101:0:0 > 1 && v101:0:0 < 1000 && v101:0:0 * v101:0:0 * v101:0:0 < 2
f_414(x:0) -> f_414(1 + x:0) :|: x:0 > 1 && x:0 < 1000 && x:0 * x:0 * x:0 > 2

----------------------------------------

(52) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_414(x)] = 999 - x

The following rules are decreasing:
f_414(v101:0:0) -> f_414(1 + v101:0:0) :|: v101:0:0 > 1 && v101:0:0 < 1000 && v101:0:0 * v101:0:0 * v101:0:0 < 2
f_414(x:0) -> f_414(1 + x:0) :|: x:0 > 1 && x:0 < 1000 && x:0 * x:0 * x:0 > 2
The following rules are bounded:
f_414(v101:0:0) -> f_414(1 + v101:0:0) :|: v101:0:0 > 1 && v101:0:0 < 1000 && v101:0:0 * v101:0:0 * v101:0:0 < 2
f_414(x:0) -> f_414(1 + x:0) :|: x:0 > 1 && x:0 < 1000 && x:0 * x:0 * x:0 > 2

----------------------------------------

(53)
YES
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.001s
