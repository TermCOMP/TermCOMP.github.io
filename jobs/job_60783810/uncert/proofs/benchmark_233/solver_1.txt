MAYBE
proof of /hpcwork/ff862203/termcomp25/benchmarks/2NfaR.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could not be shown:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 52 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 2925 ms]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) LLVM Symbolic Execution SCC
        (8) SCC2IRS [SOUND, 15 ms]
        (9) IntTRS
            (10) IntTRSCompressionProof [EQUIVALENT, 0 ms]
            (11) IntTRS
            (12) IntTRSPeriodicNontermProof [COMPLETE, 4 ms]
            (13) NO
        (14) SCC2IRS [SOUND, 0 ms]
        (15) IntTRS
            (16) IntTRSCompressionProof [EQUIVALENT, 0 ms]
            (17) IntTRS
            (18) IntTRSPeriodicNontermProof [COMPLETE, 11 ms]
            (19) NO
    (20) LLVM Symbolic Execution SCC
        (21) SCC2IRS [SOUND, 16 ms]
        (22) IntTRS
        (23) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (24) IntTRS
        (25) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (26) YES
(27) SEGraph to IRS [SOUND, 221 ms]
(28) IntTRS
    (29) IRSToKoat [EQUIVALENT, 0 ms]
    (30) Koat Problem
    (31) KoAT2 [EQUIVALENT, 1475 ms]
    (32) MAYBE
(33) SEGraph to IRS [SOUND, 226 ms]
(34) IntTRS
    (35) IRSNoOverapproximation [EQUIVALENT, 0 ms]
    (36) MAYBE


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/2NfaR.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/2NfaR.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

struct.list --> BasicStructureType(elementType: i32, elementType: *struct.list)

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "malloc" returnParam: *i8 noalias parameters: (i64) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: true visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "init_list" linkageType: EXTERNALLY_VISIBLE returnParam: *BasicTypeName typeName: struct.listBasicStructureType(elementType: i32, elementType: *struct.list) parameters: (0 i32) variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 7
	0:
		%2 = alloca i32, align 4
		%3 = alloca *BasicTypeName typeName: struct.listBasicStructureType(elementType: i32, elementType: *struct.list), align 8
		%4 = alloca *BasicTypeName typeName: struct.listBasicStructureType(elementType: i32, elementType: *struct.list), align 8
		%5 = alloca *BasicTypeName typeName: struct.listBasicStructureType(elementType: i32, elementType: *struct.list), align 8
		%6 = alloca i32, align 4
		store %0, %2
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**BasicTypeName typeName: struct.listBasicStructureType(elementType: i32, elementType: *struct.list) %3)
		%7 = call noalias *i8 @malloc(i64 16)
		%8 = bitcast *i8 %7 to *BasicTypeName typeName: struct.listBasicStructureType(elementType: i32, elementType: *struct.list)
		store %8, %3
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**BasicTypeName typeName: struct.listBasicStructureType(elementType: i32, elementType: *struct.list) %4)
		%9 = load %3
		store %9, %4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**BasicTypeName typeName: struct.listBasicStructureType(elementType: i32, elementType: *struct.list) %5)
		%10 = load %3
		store %10, %5
		%11 = load %4
		%12 = getelementptr %11, 0, 0
		store 0, %12
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %6)
		store 1, %6
		br %13
	13:
		%14 = load %6
		%15 = load %2
		%16 = icmp slt %14 %15
		br %16, %17, %30
	17:
		%18 = call noalias *i8 @malloc(i64 16)
		%19 = bitcast *i8 %18 to *BasicTypeName typeName: struct.listBasicStructureType(elementType: i32, elementType: *struct.list)
		store %19, %3
		%20 = load %6
		%21 = load %3
		%22 = getelementptr %21, 0, 0
		store %20, %22
		%23 = load %5
		%24 = load %3
		%25 = getelementptr %24, 0, 1
		store %23, %25
		%26 = load %3
		store %26, %5
		br %27
	27:
		%28 = load %6
		%29 = add i32 %28, 1
		store %29, %6
		br %13
	30:
		%31 = load %5
		%32 = load %4
		%33 = getelementptr %32, 0, 1
		store %31, %33
		%34 = load %3
		ret %34

*BasicFunctionTypename: "search" linkageType: EXTERNALLY_VISIBLE returnParam: BasicVoidType parameters: (0 *BasicTypeName typeName: struct.listBasicStructureType(elementType: i32, elementType: *struct.list), 1 i32) variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 64
	0:
		%3 = alloca *BasicTypeName typeName: struct.listBasicStructureType(elementType: i32, elementType: *struct.list), align 8
		%4 = alloca i32, align 4
		%5 = alloca *BasicTypeName typeName: struct.listBasicStructureType(elementType: i32, elementType: *struct.list), align 8
		store %0, %3
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**BasicTypeName typeName: struct.listBasicStructureType(elementType: i32, elementType: *struct.list) %3)
		store %1, %4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %4)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**BasicTypeName typeName: struct.listBasicStructureType(elementType: i32, elementType: *struct.list) %5)
		%6 = load %3
		store %6, %5
		br %7
	7:
		%8 = load %5
		%9 = getelementptr %8, 0, 0
		%10 = load %9
		%11 = load %4
		%12 = icmp ne %10 %11
		br %12, %13, %17
	13:
		%14 = load %5
		%15 = getelementptr %14, 0, 1
		%16 = load %15
		store %16, %5
		br %7
	17:
		ret void

*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 86
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		%3 = alloca *BasicTypeName typeName: struct.listBasicStructureType(elementType: i32, elementType: *struct.list), align 8
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		%4 = call i32 (...)* @__VERIFIER_nondet_int()
		store %4, %2
		%5 = load %2
		%6 = icmp slt %5 1
		br %6, %7, %8
	7:
		store 0, %1
		br %12
	8:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**BasicTypeName typeName: struct.listBasicStructureType(elementType: i32, elementType: *struct.list) %3)
		%9 = load %2
		%10 = call *BasicTypeName typeName: struct.listBasicStructureType(elementType: i32, elementType: *struct.list) @init_list(i32 %9)
		store %10, %3
		%11 = load %3
		Unnamed Call-Instruction = call BasicVoidType @search(*BasicTypeName typeName: struct.listBasicStructureType(elementType: i32, elementType: *struct.list) %11, i32 0)
		store 0, %1
		br %12
	12:
		%13 = load %1
		ret %13


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 2 SCCs.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC
----------------------------------------

(8) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 13 rulesP rules:
f_774(v438, 0, v440, v441, v442, v447, v443, v444, 1, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v460, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_775(v438, 0, v440, v441, v442, v447, v444, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v460, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: 0 = 0
f_775(v438, 0, v440, v441, v442, v447, v444, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v460, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_776(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: 0 = 0
f_776(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_777(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: 0 = 0
f_777(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_778(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: v460 != 0
f_778(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_780(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: 0 = 0
f_780(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_782(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: TRUE
f_782(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_784(v438, 0, v440, v441, v442, v447, v460, 1, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: 0 = 0
f_784(v438, 0, v440, v441, v442, v447, v460, 1, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_792(v438, 0, v440, v441, v442, v447, v460, 1, v463, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v467, v446, v451, v459, v462, v461, v466, v464, 3, 7, 4, 8, 15, 9, 2, 16) :|: v463 = 8 + v447 && v467 = 15 + v447 && v468 = 1 + v465 && 1 + v465 = v451 && 9 <= v463 && 16 <= v467 && 1 <= v464 && v468 = v451
f_792(v438, 0, v440, v441, v442, v447, v460, 1, v463, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v467, v446, v451, v459, v462, v461, v466, v464, 3, 7, 4, 8, 15, 9, 2, 16) -> f_794(v438, 0, v440, v441, v442, v447, v460, 1, v463, v461, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v467, v446, v451, v459, v462, v466, v464, 3, 7, 4, 8, 15, 9, 2, 16) :|: 0 = 0
f_794(v438, 0, v440, v441, v442, v447, v460, 1, v463, v461, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v467, v446, v451, v459, v462, v466, v464, 3, 7, 4, 8, 15, 9, 2, 16) -> f_796(v438, 0, v440, v441, v442, v447, v460, 1, v463, v461, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v467, v451, v459, v462, v466, v464, 3, 7, 4, 8, 15, 2, 16, 9) :|: TRUE
f_796(v438, 0, v440, v441, v442, v447, v460, 1, v463, v461, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v467, v451, v459, v462, v466, v464, 3, 7, 4, 8, 15, 2, 16, 9) -> f_798(v438, 0, v440, v441, v442, v447, v460, 1, v463, v461, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v467, v451, v459, v462, v466, v464, 3, 7, 4, 8, 15, 2, 16, 9) :|: TRUE
f_798(v438, 0, v440, v441, v442, v447, v460, 1, v463, v461, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v467, v451, v459, v462, v466, v464, 3, 7, 4, 8, 15, 2, 16, 9) -> f_773(v438, 0, v440, v441, v442, v447, v460, 1, v463, v461, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v466, v464, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: TRUE
f_773(v438, 0, v440, v441, v442, v443, v444, 1, v446, v447, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v460, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_774(v438, 0, v440, v441, v442, v447, v443, v444, 1, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v460, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_774(v438:0, 0, v440:0, v441:0, v442:0, v447:0, v443:0, v444:0, 1, v446:0, v448:0, v452:0, v449:0, v453:0, v450:0, v454:0, v455:0, v456:0, v457:0, v458:0, v460:0, v461:0, 1 + v465:0, v459:0, v462:0, 3, 7, 4, 8, 15, 9, 2, 16) -> f_774(v438:0, 0, v440:0, v441:0, v442:0, v461:0, v447:0, v460:0, 1, 8 + v447:0, v448:0, v452:0, v449:0, v453:0, v450:0, v454:0, v455:0, v456:0, v457:0, v458:0, v466:0, v464:0, 1 + v465:0, v459:0, v462:0, 3, 7, 4, 8, 15, 9, 2, 16) :|: v447:0 > 0 && v460:0 < 0 && v464:0 > 0
f_774(v438:0, 0, v440:0, v441:0, v442:0, v447:0, v443:0, v444:0, 1, v446:0, v448:0, v452:0, v449:0, v453:0, v450:0, v454:0, v455:0, v456:0, v457:0, v458:0, v460:0, v461:0, 1 + v465:0, v459:0, v462:0, 3, 7, 4, 8, 15, 9, 2, 16) -> f_774(v438:0, 0, v440:0, v441:0, v442:0, v461:0, v447:0, v460:0, 1, 8 + v447:0, v448:0, v452:0, v449:0, v453:0, v450:0, v454:0, v455:0, v456:0, v457:0, v458:0, v466:0, v464:0, 1 + v465:0, v459:0, v462:0, 3, 7, 4, 8, 15, 9, 2, 16) :|: v447:0 > 0 && v460:0 > 0 && v464:0 > 0
Filtered unneeded arguments:
   f_774(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33) -> f_774(x6, x21, x22)
Removed division, modulo operations, cleaned up constraints. Obtained 2 rules.P rules:
f_774(v447:0, v460:0, v461:0) -> f_774(v461:0, v466:0, v464:0) :|: v460:0 < 0 && v464:0 > 0 && v447:0 > 0
f_774(v447:0, v460:0, v461:0) -> f_774(v461:0, v466:0, v464:0) :|: v460:0 > 0 && v464:0 > 0 && v447:0 > 0

----------------------------------------

(9)
Obligation:
Rules:
f_774(v447:0, v460:0, v461:0) -> f_774(v461:0, v466:0, v464:0) :|: v460:0 < 0 && v464:0 > 0 && v447:0 > 0
f_774(x, x1, x2) -> f_774(x2, x3, x4) :|: x1 > 0 && x4 > 0 && x > 0

----------------------------------------

(10) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(11)
Obligation:
Rules:
f_774(x:0, x1:0, x2:0) -> f_774(x2:0, x3:0, x4:0) :|: x1:0 > 0 && x4:0 > 0 && x:0 > 0
f_774(v447:0:0, v460:0:0, v461:0:0) -> f_774(v461:0:0, v466:0:0, v464:0:0) :|: v460:0:0 < 0 && v464:0:0 > 0 && v447:0:0 > 0

----------------------------------------

(12) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, x:0, x1:0, x2:0) -> f(1, x2:0, x3:0, x4:0) :|: pc = 1 && (x1:0 > 0 && x4:0 > 0 && x:0 > 0)
f(pc, v447:0:0, v460:0:0, v461:0:0) -> f(1, v461:0:0, v466:0:0, v464:0:0) :|: pc = 1 && (v460:0:0 < 0 && v464:0:0 > 0 && v447:0:0 > 0)
Witness term starting non-terminating reduction: f(1, 4, -8, 4)
----------------------------------------

(13)
NO

----------------------------------------

(14) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 13 rulesP rules:
f_774(v438, 0, v440, v441, v442, v447, v443, v444, 1, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v460, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_775(v438, 0, v440, v441, v442, v447, v444, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v460, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: 0 = 0
f_775(v438, 0, v440, v441, v442, v447, v444, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v460, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_776(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: 0 = 0
f_776(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_777(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: 0 = 0
f_777(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_778(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: v460 != 0
f_778(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_780(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: 0 = 0
f_780(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_782(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: TRUE
f_782(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_784(v438, 0, v440, v441, v442, v447, v460, 1, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: 0 = 0
f_784(v438, 0, v440, v441, v442, v447, v460, 1, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_792(v438, 0, v440, v441, v442, v447, v460, 1, v463, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v467, v446, v451, v459, v462, v461, v466, v464, 3, 7, 4, 8, 15, 9, 2, 16) :|: v463 = 8 + v447 && v467 = 15 + v447 && v468 = 1 + v465 && 1 + v465 = v451 && 9 <= v463 && 16 <= v467 && 1 <= v464 && v468 = v451
f_792(v438, 0, v440, v441, v442, v447, v460, 1, v463, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v467, v446, v451, v459, v462, v461, v466, v464, 3, 7, 4, 8, 15, 9, 2, 16) -> f_794(v438, 0, v440, v441, v442, v447, v460, 1, v463, v461, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v467, v446, v451, v459, v462, v466, v464, 3, 7, 4, 8, 15, 9, 2, 16) :|: 0 = 0
f_794(v438, 0, v440, v441, v442, v447, v460, 1, v463, v461, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v467, v446, v451, v459, v462, v466, v464, 3, 7, 4, 8, 15, 9, 2, 16) -> f_796(v438, 0, v440, v441, v442, v447, v460, 1, v463, v461, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v467, v451, v459, v462, v466, v464, 3, 7, 4, 8, 15, 2, 16, 9) :|: TRUE
f_796(v438, 0, v440, v441, v442, v447, v460, 1, v463, v461, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v467, v451, v459, v462, v466, v464, 3, 7, 4, 8, 15, 2, 16, 9) -> f_798(v438, 0, v440, v441, v442, v447, v460, 1, v463, v461, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v467, v451, v459, v462, v466, v464, 3, 7, 4, 8, 15, 2, 16, 9) :|: TRUE
f_798(v438, 0, v440, v441, v442, v447, v460, 1, v463, v461, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v467, v451, v459, v462, v466, v464, 3, 7, 4, 8, 15, 2, 16, 9) -> f_773(v438, 0, v440, v441, v442, v447, v460, 1, v463, v461, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v466, v464, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: 1 <= v438 && 1 <= v440 && 1 <= v441 && 1 <= v442 && 1 <= v447 && 9 <= v463 && 1 <= v461 && 1 <= v448 && 1 <= v449 && 1 <= v450 && 2 <= v451 && 4 <= v452 && 4 <= v453 && 8 <= v454 && 8 <= v455 && 4 <= v456 && 8 <= v457 && 16 <= v458 && 9 <= v459 && 1 <= v464 && 1 <= v462 && v448 <= v452 && v449 <= v453 && v450 <= v454 && v440 <= v455 && v441 <= v456 && v442 <= v457 && v438 <= v458
f_773(v438, 0, v440, v441, v442, v443, v444, 1, v446, v447, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v460, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_774(v438, 0, v440, v441, v442, v447, v443, v444, 1, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v460, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_774(v438:0, 0, v440:0, v441:0, v442:0, v447:0, v443:0, v444:0, 1, v446:0, v448:0, v452:0, v449:0, v453:0, v450:0, v454:0, v455:0, v456:0, v457:0, v458:0, v460:0, v461:0, 1 + v465:0, v459:0, v462:0, 3, 7, 4, 8, 15, 9, 2, 16) -> f_774(v438:0, 0, v440:0, v441:0, v442:0, v461:0, v447:0, v460:0, 1, 8 + v447:0, v448:0, v452:0, v449:0, v453:0, v450:0, v454:0, v455:0, v456:0, v457:0, v458:0, v466:0, v464:0, 1 + v465:0, v459:0, v462:0, 3, 7, 4, 8, 15, 9, 2, 16) :|: v440:0 > 0 && v438:0 > 0 && v441:0 > 0 && v442:0 > 0 && v447:0 > 0 && v461:0 > 0 && v448:0 > 0 && v449:0 > 0 && v450:0 > 0 && v465:0 > 0 && v452:0 > 3 && v453:0 > 3 && v454:0 > 7 && v455:0 > 7 && v456:0 > 3 && v457:0 > 7 && v458:0 > 15 && v459:0 > 8 && v464:0 > 0 && v462:0 > 0 && v460:0 < 0 && v452:0 >= v448:0 && v453:0 >= v449:0 && v454:0 >= v450:0 && v455:0 >= v440:0 && v456:0 >= v441:0 && v458:0 >= v438:0 && v457:0 >= v442:0
f_774(v438:0, 0, v440:0, v441:0, v442:0, v447:0, v443:0, v444:0, 1, v446:0, v448:0, v452:0, v449:0, v453:0, v450:0, v454:0, v455:0, v456:0, v457:0, v458:0, v460:0, v461:0, 1 + v465:0, v459:0, v462:0, 3, 7, 4, 8, 15, 9, 2, 16) -> f_774(v438:0, 0, v440:0, v441:0, v442:0, v461:0, v447:0, v460:0, 1, 8 + v447:0, v448:0, v452:0, v449:0, v453:0, v450:0, v454:0, v455:0, v456:0, v457:0, v458:0, v466:0, v464:0, 1 + v465:0, v459:0, v462:0, 3, 7, 4, 8, 15, 9, 2, 16) :|: v440:0 > 0 && v438:0 > 0 && v441:0 > 0 && v442:0 > 0 && v447:0 > 0 && v461:0 > 0 && v448:0 > 0 && v449:0 > 0 && v450:0 > 0 && v465:0 > 0 && v452:0 > 3 && v453:0 > 3 && v454:0 > 7 && v455:0 > 7 && v456:0 > 3 && v457:0 > 7 && v458:0 > 15 && v459:0 > 8 && v464:0 > 0 && v462:0 > 0 && v460:0 > 0 && v452:0 >= v448:0 && v453:0 >= v449:0 && v454:0 >= v450:0 && v455:0 >= v440:0 && v456:0 >= v441:0 && v458:0 >= v438:0 && v457:0 >= v442:0
Filtered unneeded arguments:
   f_774(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33) -> f_774(x1, x3, x4, x5, x6, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25)
Removed division, modulo operations, cleaned up constraints. Obtained 2 rules.P rules:
f_774(v438:0, v440:0, v441:0, v442:0, v447:0, v448:0, v452:0, v449:0, v453:0, v450:0, v454:0, v455:0, v456:0, v457:0, v458:0, v460:0, v461:0, sum~cons_1~v465:0, v459:0, v462:0) -> f_774(v438:0, v440:0, v441:0, v442:0, v461:0, v448:0, v452:0, v449:0, v453:0, v450:0, v454:0, v455:0, v456:0, v457:0, v458:0, v466:0, v464:0, 1 + v465:0, v459:0, v462:0) :|: v438:0 > 0 && v440:0 > 0 && v441:0 > 0 && v442:0 > 0 && v447:0 > 0 && v461:0 > 0 && v448:0 > 0 && v449:0 > 0 && v450:0 > 0 && v465:0 > 0 && v452:0 > 3 && v453:0 > 3 && v454:0 > 7 && v455:0 > 7 && v456:0 > 3 && v457:0 > 7 && v458:0 > 15 && v459:0 > 8 && v464:0 > 0 && v462:0 > 0 && v460:0 < 0 && v452:0 >= v448:0 && v453:0 >= v449:0 && v454:0 >= v450:0 && v455:0 >= v440:0 && v456:0 >= v441:0 && v457:0 >= v442:0 && v458:0 >= v438:0 && sum~cons_1~v465:0 = 1 + v465:0
f_774(v438:0, v440:0, v441:0, v442:0, v447:0, v448:0, v452:0, v449:0, v453:0, v450:0, v454:0, v455:0, v456:0, v457:0, v458:0, v460:0, v461:0, sum~cons_1~v465:0, v459:0, v462:0) -> f_774(v438:0, v440:0, v441:0, v442:0, v461:0, v448:0, v452:0, v449:0, v453:0, v450:0, v454:0, v455:0, v456:0, v457:0, v458:0, v466:0, v464:0, 1 + v465:0, v459:0, v462:0) :|: v438:0 > 0 && v440:0 > 0 && v441:0 > 0 && v442:0 > 0 && v447:0 > 0 && v461:0 > 0 && v448:0 > 0 && v449:0 > 0 && v450:0 > 0 && v465:0 > 0 && v452:0 > 3 && v453:0 > 3 && v454:0 > 7 && v455:0 > 7 && v456:0 > 3 && v457:0 > 7 && v458:0 > 15 && v459:0 > 8 && v464:0 > 0 && v462:0 > 0 && v460:0 > 0 && v452:0 >= v448:0 && v453:0 >= v449:0 && v454:0 >= v450:0 && v455:0 >= v440:0 && v456:0 >= v441:0 && v457:0 >= v442:0 && v458:0 >= v438:0 && sum~cons_1~v465:0 = 1 + v465:0

----------------------------------------

(15)
Obligation:
Rules:
f_774(v438:0, v440:0, v441:0, v442:0, v447:0, v448:0, v452:0, v449:0, v453:0, v450:0, v454:0, v455:0, v456:0, v457:0, v458:0, v460:0, v461:0, sum~cons_1~v465:0, v459:0, v462:0) -> f_774(v438:0, v440:0, v441:0, v442:0, v461:0, v448:0, v452:0, v449:0, v453:0, v450:0, v454:0, v455:0, v456:0, v457:0, v458:0, v466:0, v464:0, 1 + v465:0, v459:0, v462:0) :|: v438:0 > 0 && v440:0 > 0 && v441:0 > 0 && v442:0 > 0 && v447:0 > 0 && v461:0 > 0 && v448:0 > 0 && v449:0 > 0 && v450:0 > 0 && v465:0 > 0 && v452:0 > 3 && v453:0 > 3 && v454:0 > 7 && v455:0 > 7 && v456:0 > 3 && v457:0 > 7 && v458:0 > 15 && v459:0 > 8 && v464:0 > 0 && v462:0 > 0 && v460:0 < 0 && v452:0 >= v448:0 && v453:0 >= v449:0 && v454:0 >= v450:0 && v455:0 >= v440:0 && v456:0 >= v441:0 && v457:0 >= v442:0 && v458:0 >= v438:0 && sum~cons_1~v465:0 = 1 + v465:0
f_774(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19) -> f_774(x, x1, x2, x3, x16, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x20, x21, 1 + x22, x18, x19) :|: x > 0 && x1 > 0 && x2 > 0 && x3 > 0 && x4 > 0 && x16 > 0 && x5 > 0 && x7 > 0 && x9 > 0 && x22 > 0 && x6 > 3 && x8 > 3 && x10 > 7 && x11 > 7 && x12 > 3 && x13 > 7 && x14 > 15 && x18 > 8 && x21 > 0 && x19 > 0 && x15 > 0 && x6 >= x5 && x8 >= x7 && x10 >= x9 && x11 >= x1 && x12 >= x2 && x13 >= x3 && x14 >= x && x17 = 1 + x22

----------------------------------------

(16) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(17)
Obligation:
Rules:
f_774(v438:0:0, v440:0:0, v441:0:0, v442:0:0, v447:0:0, v448:0:0, v452:0:0, v449:0:0, v453:0:0, v450:0:0, v454:0:0, v455:0:0, v456:0:0, v457:0:0, v458:0:0, v460:0:0, v461:0:0, sum~cons_1~v465:0:0, v459:0:0, v462:0:0) -> f_774(v438:0:0, v440:0:0, v441:0:0, v442:0:0, v461:0:0, v448:0:0, v452:0:0, v449:0:0, v453:0:0, v450:0:0, v454:0:0, v455:0:0, v456:0:0, v457:0:0, v458:0:0, v466:0:0, v464:0:0, 1 + v465:0:0, v459:0:0, v462:0:0) :|: v457:0:0 >= v442:0:0 && v458:0:0 >= v438:0:0 && v456:0:0 >= v441:0:0 && v455:0:0 >= v440:0:0 && v454:0:0 >= v450:0:0 && v453:0:0 >= v449:0:0 && v452:0:0 >= v448:0:0 && v460:0:0 < 0 && v462:0:0 > 0 && v464:0:0 > 0 && v459:0:0 > 8 && v458:0:0 > 15 && v457:0:0 > 7 && v456:0:0 > 3 && v455:0:0 > 7 && v454:0:0 > 7 && v453:0:0 > 3 && v452:0:0 > 3 && v465:0:0 > 0 && v450:0:0 > 0 && v449:0:0 > 0 && v448:0:0 > 0 && v461:0:0 > 0 && v447:0:0 > 0 && v442:0:0 > 0 && v441:0:0 > 0 && v440:0:0 > 0 && v438:0:0 > 0 && sum~cons_1~v465:0:0 = 1 + v465:0:0
f_774(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, x7:0, x8:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0, x16:0, sum~cons_1~x22:0, x18:0, x19:0) -> f_774(x:0, x1:0, x2:0, x3:0, x16:0, x5:0, x6:0, x7:0, x8:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0, x20:0, x21:0, 1 + x22:0, x18:0, x19:0) :|: x3:0 <= x13:0 && x:0 <= x14:0 && x2:0 <= x12:0 && x1:0 <= x11:0 && x9:0 <= x10:0 && x8:0 >= x7:0 && x6:0 >= x5:0 && x15:0 > 0 && x19:0 > 0 && x21:0 > 0 && x18:0 > 8 && x14:0 > 15 && x13:0 > 7 && x12:0 > 3 && x11:0 > 7 && x10:0 > 7 && x8:0 > 3 && x6:0 > 3 && x22:0 > 0 && x9:0 > 0 && x7:0 > 0 && x5:0 > 0 && x16:0 > 0 && x4:0 > 0 && x3:0 > 0 && x2:0 > 0 && x1:0 > 0 && x:0 > 0 && sum~cons_1~x22:0 = 1 + x22:0

----------------------------------------

(18) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, v438:0:0, v440:0:0, v441:0:0, v442:0:0, v447:0:0, v448:0:0, v452:0:0, v449:0:0, v453:0:0, v450:0:0, v454:0:0, v455:0:0, v456:0:0, v457:0:0, v458:0:0, v460:0:0, v461:0:0, sum~cons_1~v465:0:0, v459:0:0, v462:0:0) -> f(1, v438:0:0, v440:0:0, v441:0:0, v442:0:0, v461:0:0, v448:0:0, v452:0:0, v449:0:0, v453:0:0, v450:0:0, v454:0:0, v455:0:0, v456:0:0, v457:0:0, v458:0:0, v466:0:0, v464:0:0, 1 + v465:0:0, v459:0:0, v462:0:0) :|: pc = 1 && (v457:0:0 >= v442:0:0 && v458:0:0 >= v438:0:0 && v456:0:0 >= v441:0:0 && v455:0:0 >= v440:0:0 && v454:0:0 >= v450:0:0 && v453:0:0 >= v449:0:0 && v452:0:0 >= v448:0:0 && v460:0:0 < 0 && v462:0:0 > 0 && v464:0:0 > 0 && v459:0:0 > 8 && v458:0:0 > 15 && v457:0:0 > 7 && v456:0:0 > 3 && v455:0:0 > 7 && v454:0:0 > 7 && v453:0:0 > 3 && v452:0:0 > 3 && v465:0:0 > 0 && v450:0:0 > 0 && v449:0:0 > 0 && v448:0:0 > 0 && v461:0:0 > 0 && v447:0:0 > 0 && v442:0:0 > 0 && v441:0:0 > 0 && v440:0:0 > 0 && v438:0:0 > 0 && sum~cons_1~v465:0:0 = 1 + v465:0:0)
f(pc, x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, x7:0, x8:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0, x16:0, sum~cons_1~x22:0, x18:0, x19:0) -> f(1, x:0, x1:0, x2:0, x3:0, x16:0, x5:0, x6:0, x7:0, x8:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0, x20:0, x21:0, 1 + x22:0, x18:0, x19:0) :|: pc = 1 && (x3:0 <= x13:0 && x:0 <= x14:0 && x2:0 <= x12:0 && x1:0 <= x11:0 && x9:0 <= x10:0 && x8:0 >= x7:0 && x6:0 >= x5:0 && x15:0 > 0 && x19:0 > 0 && x21:0 > 0 && x18:0 > 8 && x14:0 > 15 && x13:0 > 7 && x12:0 > 3 && x11:0 > 7 && x10:0 > 7 && x8:0 > 3 && x6:0 > 3 && x22:0 > 0 && x9:0 > 0 && x7:0 > 0 && x5:0 > 0 && x16:0 > 0 && x4:0 > 0 && x3:0 > 0 && x2:0 > 0 && x1:0 > 0 && x:0 > 0 && sum~cons_1~x22:0 = 1 + x22:0)
Witness term starting non-terminating reduction: f(1, 1, 1, 1, 1, 2, 1, 4, 1, 4, 1, 8, 8, 4, 8, 16, 2, 1, 2, 9, 1)
----------------------------------------

(19)
NO

----------------------------------------

(20)
Obligation:
SCC
----------------------------------------

(21) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 24 rulesP rules:
f_659(v296, v297, v298, v299, v300, v301, v302, v308, 1, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 2, 9, 16) -> f_660(v296, v297, v298, v299, v300, v301, v302, v308, 1, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 2, 9, 16) :|: 0 = 0
f_660(v296, v297, v298, v299, v300, v301, v302, v308, 1, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 2, 9, 16) -> f_661(v296, v297, v298, v299, v300, v301, v302, v308, 1, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 9, 2, 16) :|: v308 < v296 && 3 <= v296
f_661(v296, v297, v298, v299, v300, v301, v302, v308, 1, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 9, 2, 16) -> f_663(v296, v297, v298, v299, v300, v301, v302, v308, 1, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 9, 2, 16) :|: 0 = 0
f_663(v296, v297, v298, v299, v300, v301, v302, v308, 1, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 9, 2, 16) -> f_665(v296, v297, v298, v299, v300, v301, v302, v308, 1, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 9, 2, 16) :|: TRUE
f_665(v296, v297, v298, v299, v300, v301, v302, v308, 1, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 9, 2, 16) -> f_667(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) :|: v323 = 15 + v322 && v322 % 4 = 0 && 16 <= v323
f_667(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) -> f_669(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v303, v305, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) :|: 0 = 0
f_669(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v303, v305, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) -> f_671(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v303, v305, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) :|: TRUE
f_671(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v303, v305, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) -> f_673(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v305, v306, v307, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) :|: 0 = 0
f_673(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v305, v306, v307, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) -> f_675(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v305, v306, v307, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) :|: 0 = 0
f_675(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v305, v306, v307, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) -> f_677(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v306, v305, v307, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) :|: 0 = 0
f_677(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v306, v305, v307, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) -> f_679(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v306, v305, v307, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) :|: TRUE
f_679(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v306, v305, v307, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) -> f_681(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v305, v307, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, v306, 3, 7, 15, 4, 8, 9, 2, 16) :|: 0 = 0
f_681(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v305, v307, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, v306, 3, 7, 15, 4, 8, 9, 2, 16) -> f_683(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v305, v307, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, v306, 3, 7, 15, 4, 8, 9, 2, 16) :|: 0 = 0
f_683(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v305, v307, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, v306, 3, 7, 15, 4, 8, 9, 2, 16) -> f_685(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v305, v330, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, v306, 3, 7, 15, 4, 8, 2, 16, 9) :|: v330 = 8 + v322 && 9 <= v330
f_685(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v305, v330, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, v306, 3, 7, 15, 4, 8, 2, 16, 9) -> f_687(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) :|: v334 = 1 + v303 && v308 = v334
f_687(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) -> f_689(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) :|: 0 = 0
f_689(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) -> f_691(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) :|: TRUE
f_691(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) -> f_693(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) :|: TRUE
f_693(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) -> f_695(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) :|: 0 = 0
f_695(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) -> f_697(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v341, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) :|: v341 = 1 + v334 && 3 <= v341
f_697(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v341, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) -> f_699(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v341, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) :|: TRUE
f_699(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v341, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) -> f_701(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v341, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) :|: TRUE
f_701(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v341, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) -> f_658(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v341, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 2, 9, 16) :|: TRUE
f_658(v296, v297, v298, v299, v300, v301, v302, v303, 1, v305, v306, v307, v308, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 2, 9, 16) -> f_659(v296, v297, v298, v299, v300, v301, v302, v308, 1, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 2, 9, 16) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_659(v296:0, v297:0, v298:0, v299:0, v300:0, v301:0, v302:0, 1 + v303:0, 1, v305:0, v303:0, v306:0, v307:0, v309:0, v313:0, v310:0, v314:0, v311:0, v315:0, v316:0, v317:0, v318:0, v319:0, v320:0, v321:0, 0, 3, 7, 15, 4, 8, 2, 9, 16) -> f_659(v296:0, v297:0, v298:0, v299:0, v300:0, v301:0, v302:0, 1 + (1 + v303:0), 1, v322:0, 1 + v303:0, v305:0, 8 + v322:0, v309:0, v313:0, v310:0, v314:0, v311:0, v315:0, v316:0, v317:0, v318:0, v319:0, v320:0, v321:0, 0, 3, 7, 15, 4, 8, 2, 9, 16) :|: v296:0 > 2 && v296:0 > 1 + v303:0 && v322:0 % 4 = 0 && v322:0 > 0 && v303:0 > 0
Filtered unneeded arguments:
   f_659(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34) -> f_659(x1, x8, x11)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_659(v296:0, sum~cons_1~v303:0, v303:0) -> f_659(v296:0, 1 + (1 + v303:0), 1 + v303:0) :|: v296:0 > 1 + v303:0 && v303:0 > 0 && v296:0 > 2 && sum~cons_1~v303:0 = 1 + v303:0

----------------------------------------

(22)
Obligation:
Rules:
f_659(v296:0, sum~cons_1~v303:0, v303:0) -> f_659(v296:0, 1 + (1 + v303:0), 1 + v303:0) :|: v296:0 > 1 + v303:0 && v303:0 > 0 && v296:0 > 2 && sum~cons_1~v303:0 = 1 + v303:0

----------------------------------------

(23) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(24)
Obligation:
Rules:
f_659(v296:0:0, sum~cons_1~v303:0:0, v303:0:0) -> f_659(v296:0:0, 1 + (1 + v303:0:0), 1 + v303:0:0) :|: v296:0:0 > 1 + v303:0:0 && v303:0:0 > 0 && v296:0:0 > 2 && sum~cons_1~v303:0:0 = 1 + v303:0:0

----------------------------------------

(25) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_659(x, x1, x2)] = x - 2*x1 + x2

The following rules are decreasing:
f_659(v296:0:0, sum~cons_1~v303:0:0, v303:0:0) -> f_659(v296:0:0, 1 + (1 + v303:0:0), 1 + v303:0:0) :|: v296:0:0 > 1 + v303:0:0 && v303:0:0 > 0 && v296:0:0 > 2 && sum~cons_1~v303:0:0 = 1 + v303:0:0
The following rules are bounded:
f_659(v296:0:0, sum~cons_1~v303:0:0, v303:0:0) -> f_659(v296:0:0, 1 + (1 + v303:0:0), 1 + v303:0:0) :|: v296:0:0 > 1 + v303:0:0 && v303:0:0 > 0 && v296:0:0 > 2 && sum~cons_1~v303:0:0 = 1 + v303:0:0

----------------------------------------

(26)
YES

----------------------------------------

(27) SEGraph to IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 185 rulesP rules:
f_295 -> f_296(v1, v2, 3, 1, 4) :|: 1 <= v1 && v2 = 3 + v1 && 4 <= v2
f_296(v1, v2, 3, 1, 4) -> f_297(v1, v3, v2, v4, 3, 1, 4) :|: 1 <= v3 && v4 = 3 + v3 && 4 <= v4
f_297(v1, v3, v2, v4, 3, 1, 4) -> f_298(v1, v3, v5, v2, v4, v6, 3, 7, 1, 4, 8) :|: 1 <= v5 && v6 = 7 + v5 && 8 <= v6
f_298(v1, v3, v5, v2, v4, v6, 3, 7, 1, 4, 8) -> f_299(v1, v3, v5, v2, v4, v6, 0, 3, 7, 1, 4, 8) :|: TRUE
f_299(v1, v3, v5, v2, v4, v6, 0, 3, 7, 1, 4, 8) -> f_300(v1, v3, v5, v2, v4, v6, 0, 3, 7, 1, 4, 8) :|: TRUE
f_300(v1, v3, v5, v2, v4, v6, 0, 3, 7, 1, 4, 8) -> f_301(v1, v3, v5, v7, v2, v4, v6, 0, 3, 7, 1, 4, 8) :|: TRUE
f_301(v1, v3, v5, v7, v2, v4, v6, 0, 3, 7, 1, 4, 8) -> f_302(v1, v3, v5, v7, v2, v4, v6, 0, 3, 7, 1, 4, 8) :|: TRUE
f_302(v1, v3, v5, v7, v2, v4, v6, 0, 3, 7, 1, 4, 8) -> f_303(v1, v3, v5, v7, v2, v4, v6, 0, 3, 7, 1, 4, 8) :|: 0 = 0
f_303(v1, v3, v5, v7, v2, v4, v6, 0, 3, 7, 1, 4, 8) -> f_304(v1, v3, v5, v7, v2, v4, v6, 0, 3, 7, 1, 4, 8) :|: v7 < 1
f_303(v1, v3, v5, v7, v2, v4, v6, 0, 3, 7, 1, 4, 8) -> f_305(v1, v3, v5, v7, v2, v4, v6, 0, 3, 7, 1, 4, 8) :|: 1 <= v7
f_304(v1, v3, v5, v7, v2, v4, v6, 0, 3, 7, 1, 4, 8) -> f_306(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 7, 4, 8) :|: 0 = 0
f_305(v1, v3, v5, v7, v2, v4, v6, 0, 3, 7, 1, 4, 8) -> f_307(v1, v3, v5, v7, 0, v2, v4, v6, 3, 7, 1, 4, 8) :|: 0 = 0
f_306(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 7, 4, 8) -> f_308(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 7, 4, 8) :|: TRUE
f_307(v1, v3, v5, v7, 0, v2, v4, v6, 3, 7, 1, 4, 8) -> f_309(v1, v3, v5, v7, 0, v2, v4, v6, 3, 7, 1, 4, 8) :|: TRUE
f_308(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 7, 4, 8) -> f_310(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 7, 4, 8) :|: TRUE
f_309(v1, v3, v5, v7, 0, v2, v4, v6, 3, 7, 1, 4, 8) -> f_311(v1, v3, v5, v7, 0, v2, v4, v6, 3, 7, 1, 4, 8) :|: TRUE
f_310(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 7, 4, 8) -> f_312(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 7, 4, 8) :|: TRUE
f_311(v1, v3, v5, v7, 0, v2, v4, v6, 3, 7, 1, 4, 8) -> f_313(v1, v3, v5, v7, 0, v2, v4, v6, 3, 7, 1, 4, 8) :|: 0 = 0
f_312(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 7, 4, 8) -> f_314(v1, v3, v5, v7, 1, 0, v2, v4, v6, 3, 7, 4, 8) :|: 0 = 0
f_313(v1, v3, v5, v7, 0, v2, v4, v6, 3, 7, 1, 4, 8) -> f_315(v7, v1, v2, v3, v4, v5, v6, 0, 3, 7, 1, 4, 8) :|: 0 = 0
f_315(v7, v1, v2, v3, v4, v5, v6, 0, 3, 7, 1, 4, 8) -> f_316(v7, v9, v1, v2, v3, v4, v5, v6, v10, 0, 3, 7, 1, 4, 8) :|: 1 <= v9 && v10 = 3 + v9 && 4 <= v10
f_316(v7, v9, v1, v2, v3, v4, v5, v6, v10, 0, 3, 7, 1, 4, 8) -> f_317(v7, v9, v11, v1, v2, v3, v4, v5, v6, v10, v12, 0, 3, 7, 1, 4, 8) :|: 1 <= v11 && v12 = 7 + v11 && 8 <= v12
f_317(v7, v9, v11, v1, v2, v3, v4, v5, v6, v10, v12, 0, 3, 7, 1, 4, 8) -> f_318(v7, v9, v11, v13, v1, v2, v3, v4, v5, v6, v10, v12, v14, 0, 3, 7, 1, 4, 8) :|: 1 <= v13 && v14 = 7 + v13 && 8 <= v14
f_318(v7, v9, v11, v13, v1, v2, v3, v4, v5, v6, v10, v12, v14, 0, 3, 7, 1, 4, 8) -> f_319(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, 0, 3, 7, 1, 4, 8) :|: 1 <= v15 && v16 = 7 + v15 && 8 <= v16
f_319(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, 0, 3, 7, 1, 4, 8) -> f_320(v7, v9, v11, v13, v15, v17, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, 0, 3, 7, 1, 4, 8) :|: 1 <= v17 && v18 = 3 + v17 && 4 <= v18
f_320(v7, v9, v11, v13, v15, v17, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, 0, 3, 7, 1, 4, 8) -> f_321(v7, v9, v11, v13, v15, v17, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, 0, 3, 7, 1, 4, 8) :|: TRUE
f_321(v7, v9, v11, v13, v15, v17, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, 0, 3, 7, 1, 4, 8) -> f_322(v7, v9, v11, v13, v15, v17, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, 0, 3, 7, 1, 4, 8) :|: TRUE
f_322(v7, v9, v11, v13, v15, v17, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, 0, 3, 7, 1, 4, 8) -> f_323(v7, v9, v11, v13, v15, v17, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, 0, 3, 7, 1, 4, 8) :|: TRUE
f_323(v7, v9, v11, v13, v15, v17, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, 0, 3, 7, 1, 4, 8) -> f_324(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) :|: v21 = 15 + v20 && v20 % 4 = 0 && 16 <= v21
f_324(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) -> f_325(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) :|: 0 = 0
f_325(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) -> f_326(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) :|: TRUE
f_326(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) -> f_327(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) :|: TRUE
f_327(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) -> f_328(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) :|: 0 = 0
f_328(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) -> f_329(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) :|: TRUE
f_329(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) -> f_330(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) :|: TRUE
f_330(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) -> f_331(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) :|: 0 = 0
f_331(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) -> f_332(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) :|: TRUE
f_332(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) -> f_333(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) :|: 0 = 0
f_333(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) -> f_334(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) :|: 0 = 0
f_334(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) -> f_335(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) :|: TRUE
f_335(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) -> f_336(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) :|: TRUE
f_336(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) -> f_337(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 1, 3, 7, 15, 4, 8, 16) :|: TRUE
f_337(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 1, 3, 7, 15, 4, 8, 16) -> f_338(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 1, 3, 7, 15, 4, 8, 16) :|: TRUE
f_338(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 1, 3, 7, 15, 4, 8, 16) -> f_339(v7, v9, v11, v13, v15, v17, v20, 1, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 8, 16) :|: 0 = 0
f_339(v7, v9, v11, v13, v15, v17, v20, 1, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 8, 16) -> f_340(v7, v9, v11, v13, v15, v17, v20, 1, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 8, 16) :|: 0 = 0
f_340(v7, v9, v11, v13, v15, v17, v20, 1, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 8, 16) -> f_341(v7, v9, v11, v13, v15, v17, v20, 1, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 8, 2, 16) :|: 1 < v7
f_340(v7, v9, v11, v13, v15, v17, v20, 1, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 8, 16) -> f_342(1, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 8, 16) :|: v7 <= 1
f_341(v7, v9, v11, v13, v15, v17, v20, 1, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 8, 2, 16) -> f_343(v7, v9, v11, v13, v15, v17, v20, 1, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 8, 2, 16) :|: 0 = 0
f_342(1, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 8, 16) -> f_344(1, v9, v11, v13, v15, v17, v20, 0, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 3, 7, 15, 4, 8, 16) :|: 0 = 0
f_343(v7, v9, v11, v13, v15, v17, v20, 1, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 8, 2, 16) -> f_345(v7, v9, v11, v13, v15, v17, v20, 1, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 8, 2, 16) :|: TRUE
f_344(1, v9, v11, v13, v15, v17, v20, 0, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 3, 7, 15, 4, 8, 16) -> f_346(1, v9, v11, v13, v15, v17, v20, 0, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 3, 7, 15, 4, 8, 16) :|: TRUE
f_345(v7, v9, v11, v13, v15, v17, v20, 1, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 8, 2, 16) -> f_347(v7, v9, v11, v13, v15, v17, v20, 1, v25, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16) :|: v26 = 15 + v25 && v25 % 4 = 0 && 16 <= v26
f_346(1, v9, v11, v13, v15, v17, v20, 0, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 3, 7, 15, 4, 8, 16) -> f_348(1, v9, v11, v13, v15, v17, v20, 0, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 3, 7, 15, 4, 8, 16) :|: 0 = 0
f_347(v7, v9, v11, v13, v15, v17, v20, 1, v25, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16) -> f_349(v7, v9, v11, v13, v15, v17, v20, 1, v25, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16) :|: 0 = 0
f_348(1, v9, v11, v13, v15, v17, v20, 0, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 3, 7, 15, 4, 8, 16) -> f_350(1, v9, v11, v13, v15, v17, v20, 0, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 3, 7, 15, 4, 8, 16) :|: 0 = 0
f_349(v7, v9, v11, v13, v15, v17, v20, 1, v25, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16) -> f_351(v7, v9, v11, v13, v15, v17, v20, 1, v25, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16) :|: TRUE
f_350(1, v9, v11, v13, v15, v17, v20, 0, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 3, 7, 15, 4, 8, 16) -> f_352(1, v9, v11, v13, v15, v17, v20, 0, v28, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 3, 7, 15, 4, 8, 16, 9) :|: v28 = 8 + v20 && 9 <= v28
f_351(v7, v9, v11, v13, v15, v17, v20, 1, v25, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16) -> f_353(v7, v9, v11, v13, v15, v17, v20, 1, v25, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16) :|: 0 = 0
f_352(1, v9, v11, v13, v15, v17, v20, 0, v28, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 3, 7, 15, 4, 8, 16, 9) -> f_354(1, v9, v11, v13, v15, v17, v20, 0, v28, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 3, 7, 15, 4, 8, 16, 9) :|: TRUE
f_353(v7, v9, v11, v13, v15, v17, v20, 1, v25, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16) -> f_355(v7, v9, v11, v13, v15, v17, v20, 1, v25, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16) :|: 0 = 0
f_354(1, v9, v11, v13, v15, v17, v20, 0, v28, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 3, 7, 15, 4, 8, 16, 9) -> f_356(1, v9, v11, v13, v15, v17, v20, 0, v28, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 3, 7, 15, 4, 8, 16, 9) :|: 0 = 0
f_355(v7, v9, v11, v13, v15, v17, v20, 1, v25, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16) -> f_357(v7, v9, v11, v13, v15, v17, v20, 1, v25, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16) :|: 0 = 0
f_356(1, v9, v11, v13, v15, v17, v20, 0, v28, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 3, 7, 15, 4, 8, 16, 9) -> f_358(v1, v3, v5, 1, 0, v20, v2, v4, v6, v21, v28, 3, 7, 15, 4, 8, 16, 9) :|: 0 = 0
f_357(v7, v9, v11, v13, v15, v17, v20, 1, v25, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16) -> f_359(v7, v9, v11, v13, v15, v17, v20, 1, v25, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16) :|: TRUE
f_358(v1, v3, v5, 1, 0, v20, v2, v4, v6, v21, v28, 3, 7, 15, 4, 8, 16, 9) -> f_360(v1, v3, v5, 1, 0, v20, v2, v4, v6, v21, v28, 3, 7, 15, 4, 8, 16, 9) :|: TRUE
f_359(v7, v9, v11, v13, v15, v17, v20, 1, v25, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16) -> f_361(v7, v9, v11, v13, v15, v17, v20, 1, v25, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16) :|: 0 = 0
f_360(v1, v3, v5, 1, 0, v20, v2, v4, v6, v21, v28, 3, 7, 15, 4, 8, 16, 9) -> f_362(v1, v3, v5, 1, 0, v20, v2, v4, v6, v21, v28, 3, 7, 15, 4, 8, 16, 9) :|: 0 = 0
f_361(v7, v9, v11, v13, v15, v17, v20, 1, v25, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16) -> f_363(v7, v9, v11, v13, v15, v17, v20, 1, v25, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16) :|: 0 = 0
f_362(v1, v3, v5, 1, 0, v20, v2, v4, v6, v21, v28, 3, 7, 15, 4, 8, 16, 9) -> f_364(v20, 0, v1, v2, v3, v4, v5, v6, v21, 1, v28, 3, 7, 15, 4, 8, 16, 9) :|: 0 = 0
f_363(v7, v9, v11, v13, v15, v17, v20, 1, v25, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16) -> f_365(v7, v9, v11, v13, v15, v17, v20, 1, v25, v31, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16, 9) :|: v31 = 8 + v25 && 9 <= v31
f_364(v20, 0, v1, v2, v3, v4, v5, v6, v21, 1, v28, 3, 7, 15, 4, 8, 16, 9) -> f_366(v20, 0, v32, v1, v2, v3, v4, v5, v6, v21, v33, 1, v28, 3, 7, 15, 4, 8, 16, 9) :|: 1 <= v32 && v33 = 7 + v32 && 8 <= v33
f_365(v7, v9, v11, v13, v15, v17, v20, 1, v25, v31, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16, 9) -> f_367(v7, v9, v11, v13, v15, v17, v20, 1, v25, v31, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16, 9) :|: TRUE
f_366(v20, 0, v32, v1, v2, v3, v4, v5, v6, v21, v33, 1, v28, 3, 7, 15, 4, 8, 16, 9) -> f_368(v20, 0, v32, v35, v1, v2, v3, v4, v5, v6, v21, v33, v36, 1, v28, 3, 7, 15, 4, 8, 16, 9) :|: 1 <= v35 && v36 = 3 + v35 && 4 <= v36
f_367(v7, v9, v11, v13, v15, v17, v20, 1, v25, v31, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16, 9) -> f_369(v7, v9, v11, v13, v15, v17, v20, 1, v25, v31, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16, 9) :|: 0 = 0
f_368(v20, 0, v32, v35, v1, v2, v3, v4, v5, v6, v21, v33, v36, 1, v28, 3, 7, 15, 4, 8, 16, 9) -> f_370(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) :|: 1 <= v37 && v38 = 7 + v37 && 8 <= v38
f_369(v7, v9, v11, v13, v15, v17, v20, 1, v25, v31, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16, 9) -> f_371(v7, v9, v11, v13, v15, v17, v20, 1, v25, v31, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16, 9) :|: TRUE
f_370(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) -> f_372(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) :|: TRUE
f_371(v7, v9, v11, v13, v15, v17, v20, 1, v25, v31, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16, 9) -> f_373(v7, v9, v11, v13, v15, v17, v20, 1, v25, v31, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16, 9) :|: TRUE
f_372(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) -> f_374(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) :|: TRUE
f_373(v7, v9, v11, v13, v15, v17, v20, 1, v25, v31, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16, 9) -> f_375(v7, v9, v11, v13, v15, v17, v20, 1, v25, v31, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16, 9) :|: 0 = 0
f_374(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) -> f_376(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) :|: TRUE
f_375(v7, v9, v11, v13, v15, v17, v20, 1, v25, v31, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16, 9) -> f_377(v7, v9, v11, v13, v15, v17, v20, 1, v25, v31, 2, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 16, 9) :|: 0 = 0
f_376(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) -> f_378(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) :|: TRUE
f_377(v7, v9, v11, v13, v15, v17, v20, 1, v25, v31, 2, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 16, 9) -> f_379(v7, v9, v11, v13, v15, v17, v20, 1, v25, v31, 2, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 16, 9) :|: TRUE
f_378(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) -> f_380(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) :|: TRUE
f_379(v7, v9, v11, v13, v15, v17, v20, 1, v25, v31, 2, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 16, 9) -> f_381(v7, v9, v11, v13, v15, v17, v20, 1, v25, v31, 2, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 16, 9) :|: TRUE
f_380(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) -> f_382(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) :|: 0 = 0
f_381(v7, v9, v11, v13, v15, v17, v20, 1, v25, v31, 2, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 16, 9) -> f_438(v7, v9, v11, v13, v15, v17, v20, 1, 1, v25, v20, v31, 2, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 0, 3, 7, 15, 4, 8, 2, 9, 16) :|: TRUE
f_382(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) -> f_384(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) :|: TRUE
f_384(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) -> f_386(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) :|: TRUE
f_386(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) -> f_389(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) :|: 0 = 0
f_389(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) -> f_392(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) :|: 0 = 0
f_392(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) -> f_395(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) :|: 0 = 0
f_395(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) -> f_398(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) :|: 0 = 0
f_398(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) -> f_401(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) :|: 0 = 0
f_401(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) -> f_404(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) :|: TRUE
f_404(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) -> f_407(v1, v3, v5, 1, 0, v20, v2, v4, v6, v21, v28, 3, 7, 15, 4, 8, 16, 9) :|: TRUE
f_407(v1, v3, v5, 1, 0, v20, v2, v4, v6, v21, v28, 3, 7, 15, 4, 8, 16, 9) -> f_410(v1, v3, v5, 1, 0, v20, v2, v4, v6, v21, v28, 3, 7, 15, 4, 8, 16, 9) :|: TRUE
f_410(v1, v3, v5, 1, 0, v20, v2, v4, v6, v21, v28, 3, 7, 15, 4, 8, 16, 9) -> f_413(v1, v3, v5, 1, 0, v20, v2, v4, v6, v21, v28, 3, 7, 15, 4, 8, 16, 9) :|: TRUE
f_413(v1, v3, v5, 1, 0, v20, v2, v4, v6, v21, v28, 3, 7, 15, 4, 8, 16, 9) -> f_416(v1, v3, v5, 1, 0, v20, v2, v4, v6, v21, v28, 3, 7, 15, 4, 8, 16, 9) :|: 0 = 0
f_438(v58, v59, v60, v61, v62, v63, v64, v65, 1, v67, v68, v69, v70, v71, v75, v72, v76, v73, v77, v78, v79, v80, v81, v82, v83, 0, v86, 3, 7, 15, 4, 8, 2, 9, 16) -> f_482(v58, v59, v60, v61, v62, v63, v64, v65, 1, v67, v68, v69, v70, v71, v75, v72, v76, v73, v77, v78, v79, v80, v81, v82, v83, 0, 3, 7, 15, 4, 8, 2, 9, 16) :|: TRUE
f_482(v108, v109, v110, v111, v112, v113, v114, v115, 1, v117, v118, v119, v120, v121, v125, v122, v126, v123, v127, v128, v129, v130, v131, v132, v133, 0, 3, 7, 15, 4, 8, 2, 9, 16) -> f_526(v108, v109, v110, v111, v112, v113, v114, v115, 1, v117, v118, v119, v120, v121, v125, v122, v126, v123, v127, v128, v129, v130, v131, v132, v133, 0, 3, 7, 15, 4, 8, 2, 9, 16) :|: TRUE
f_526(v155, v156, v157, v158, v159, v160, v161, v162, 1, v164, v165, v166, v167, v168, v172, v169, v173, v170, v174, v175, v176, v177, v178, v179, v180, 0, 3, 7, 15, 4, 8, 2, 9, 16) -> f_570(v155, v156, v157, v158, v159, v160, v161, v162, 1, v164, v165, v166, v167, v168, v172, v169, v173, v170, v174, v175, v176, v177, v178, v179, v180, 0, 3, 7, 15, 4, 8, 2, 9, 16) :|: TRUE
f_570(v202, v203, v204, v205, v206, v207, v208, v209, 1, v211, v212, v213, v214, v215, v219, v216, v220, v217, v221, v222, v223, v224, v225, v226, v227, 0, 3, 7, 15, 4, 8, 2, 9, 16) -> f_614(v202, v203, v204, v205, v206, v207, v208, v209, 1, v211, v212, v213, v214, v215, v219, v216, v220, v217, v221, v222, v223, v224, v225, v226, v227, 0, 3, 7, 15, 4, 8, 2, 9, 16) :|: TRUE
f_614(v249, v250, v251, v252, v253, v254, v255, v256, 1, v258, v259, v260, v261, v262, v266, v263, v267, v264, v268, v269, v270, v271, v272, v273, v274, 0, 3, 7, 15, 4, 8, 2, 9, 16) -> f_658(v249, v250, v251, v252, v253, v254, v255, v256, 1, v258, v259, v260, v261, v262, v266, v263, v267, v264, v268, v269, v270, v271, v272, v273, v274, 0, 3, 7, 15, 4, 8, 2, 9, 16) :|: TRUE
f_658(v296, v297, v298, v299, v300, v301, v302, v303, 1, v305, v306, v307, v308, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 2, 9, 16) -> f_659(v296, v297, v298, v299, v300, v301, v302, v308, 1, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 2, 9, 16) :|: 0 = 0
f_659(v296, v297, v298, v299, v300, v301, v302, v308, 1, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 2, 9, 16) -> f_660(v296, v297, v298, v299, v300, v301, v302, v308, 1, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 2, 9, 16) :|: 0 = 0
f_660(v296, v297, v298, v299, v300, v301, v302, v308, 1, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 2, 9, 16) -> f_661(v296, v297, v298, v299, v300, v301, v302, v308, 1, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 9, 2, 16) :|: v308 < v296 && 3 <= v296
f_660(v296, v297, v298, v299, v300, v301, v302, v308, 1, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 2, 9, 16) -> f_662(v308, v297, v298, v299, v300, v301, v302, 1, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 9, 2, 16) :|: v296 <= v308 && v296 = v308
f_661(v296, v297, v298, v299, v300, v301, v302, v308, 1, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 9, 2, 16) -> f_663(v296, v297, v298, v299, v300, v301, v302, v308, 1, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 9, 2, 16) :|: 0 = 0
f_662(v308, v297, v298, v299, v300, v301, v302, 1, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 9, 2, 16) -> f_664(v308, v297, v298, v299, v300, v301, v302, 0, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 1, 3, 7, 15, 4, 8, 9, 2, 16) :|: 0 = 0
f_663(v296, v297, v298, v299, v300, v301, v302, v308, 1, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 9, 2, 16) -> f_665(v296, v297, v298, v299, v300, v301, v302, v308, 1, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 9, 2, 16) :|: TRUE
f_664(v308, v297, v298, v299, v300, v301, v302, 0, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 1, 3, 7, 15, 4, 8, 9, 2, 16) -> f_666(v308, v297, v298, v299, v300, v301, v302, 0, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 1, 3, 7, 15, 4, 8, 9, 2, 16) :|: TRUE
f_665(v296, v297, v298, v299, v300, v301, v302, v308, 1, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 9, 2, 16) -> f_667(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) :|: v323 = 15 + v322 && v322 % 4 = 0 && 16 <= v323
f_666(v308, v297, v298, v299, v300, v301, v302, 0, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 1, 3, 7, 15, 4, 8, 9, 2, 16) -> f_668(v308, v297, v298, v299, v300, v301, v302, 0, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 1, 3, 7, 15, 4, 8, 9, 2, 16) :|: 0 = 0
f_667(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) -> f_669(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v303, v305, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) :|: 0 = 0
f_668(v308, v297, v298, v299, v300, v301, v302, 0, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 1, 3, 7, 15, 4, 8, 9, 2, 16) -> f_670(v308, v297, v298, v299, v300, v301, v302, 0, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 1, 3, 7, 15, 4, 8, 9, 2, 16) :|: 0 = 0
f_669(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v303, v305, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) -> f_671(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v303, v305, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) :|: TRUE
f_670(v308, v297, v298, v299, v300, v301, v302, 0, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 1, 3, 7, 15, 4, 8, 9, 2, 16) -> f_672(v308, v297, v298, v299, v300, v301, v302, 0, v305, v303, v306, v307, v325, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 1, 3, 7, 15, 4, 8, 9, 2, 16) :|: v325 = 8 + v302 && 9 <= v325
f_671(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v303, v305, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) -> f_673(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v305, v306, v307, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) :|: 0 = 0
f_672(v308, v297, v298, v299, v300, v301, v302, 0, v305, v303, v306, v307, v325, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 1, 3, 7, 15, 4, 8, 9, 2, 16) -> f_674(v327, v297, v298, v299, v300, v301, v302, 0, v305, v303, v306, v307, v325, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, 3, 7, 4, 8, 1, 9, 2) :|: v327 = 1 + v303 && v308 = v327
f_673(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v305, v306, v307, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) -> f_675(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v305, v306, v307, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) :|: 0 = 0
f_674(v327, v297, v298, v299, v300, v301, v302, 0, v305, v303, v306, v307, v325, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, 3, 7, 4, 8, 1, 9, 2) -> f_676(v327, v297, v298, v299, v300, v301, v302, 0, v305, v303, v306, v307, v325, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, 3, 7, 4, 8, 1, 9, 2) :|: 0 = 0
f_675(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v305, v306, v307, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) -> f_677(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v306, v305, v307, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) :|: 0 = 0
f_676(v327, v297, v298, v299, v300, v301, v302, 0, v305, v303, v306, v307, v325, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, 3, 7, 4, 8, 1, 9, 2) -> f_678(v309, v310, v311, v327, 0, v305, v313, v314, v315, v303, v306, 3, 7, 4, 1, 8, 2) :|: 0 = 0
f_677(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v306, v305, v307, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) -> f_679(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v306, v305, v307, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) :|: TRUE
f_678(v309, v310, v311, v327, 0, v305, v313, v314, v315, v303, v306, 3, 7, 4, 1, 8, 2) -> f_680(v309, v310, v311, v327, 0, v305, v313, v314, v315, v303, v306, 3, 7, 4, 1, 8, 2) :|: TRUE
f_679(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v306, v305, v307, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) -> f_681(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v305, v307, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, v306, 3, 7, 15, 4, 8, 9, 2, 16) :|: 0 = 0
f_680(v309, v310, v311, v327, 0, v305, v313, v314, v315, v303, v306, 3, 7, 4, 1, 8, 2) -> f_682(v309, v310, v311, v327, 0, v305, v313, v314, v315, v303, v306, 3, 7, 4, 1, 8, 2) :|: 0 = 0
f_681(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v305, v307, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, v306, 3, 7, 15, 4, 8, 9, 2, 16) -> f_683(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v305, v307, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, v306, 3, 7, 15, 4, 8, 9, 2, 16) :|: 0 = 0
f_682(v309, v310, v311, v327, 0, v305, v313, v314, v315, v303, v306, 3, 7, 4, 1, 8, 2) -> f_684(v305, 0, v309, v313, v310, v314, v311, v315, v327, v303, v306, 3, 7, 4, 1, 8, 2) :|: 0 = 0
f_683(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v305, v307, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, v306, 3, 7, 15, 4, 8, 9, 2, 16) -> f_685(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v305, v330, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, v306, 3, 7, 15, 4, 8, 2, 16, 9) :|: v330 = 8 + v322 && 9 <= v330
f_684(v305, 0, v309, v313, v310, v314, v311, v315, v327, v303, v306, 3, 7, 4, 1, 8, 2) -> f_686(v305, 0, v331, v309, v313, v310, v314, v311, v315, v332, v327, v303, v306, 3, 7, 4, 1, 8, 2) :|: 1 <= v331 && v332 = 7 + v331 && 8 <= v332
f_685(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v305, v330, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, v306, 3, 7, 15, 4, 8, 2, 16, 9) -> f_687(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) :|: v334 = 1 + v303 && v308 = v334
f_686(v305, 0, v331, v309, v313, v310, v314, v311, v315, v332, v327, v303, v306, 3, 7, 4, 1, 8, 2) -> f_688(v305, 0, v331, v335, v309, v313, v310, v314, v311, v315, v332, v336, v327, v303, v306, 3, 7, 4, 1, 8, 2) :|: 1 <= v335 && v336 = 3 + v335 && 4 <= v336
f_687(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) -> f_689(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) :|: 0 = 0
f_688(v305, 0, v331, v335, v309, v313, v310, v314, v311, v315, v332, v336, v327, v303, v306, 3, 7, 4, 1, 8, 2) -> f_690(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) :|: 1 <= v337 && v338 = 7 + v337 && 8 <= v338
f_689(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) -> f_691(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) :|: TRUE
f_690(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) -> f_692(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) :|: TRUE
f_691(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) -> f_693(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) :|: TRUE
f_692(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) -> f_694(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) :|: TRUE
f_693(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) -> f_695(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) :|: 0 = 0
f_694(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) -> f_696(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) :|: TRUE
f_695(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) -> f_697(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v341, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) :|: v341 = 1 + v334 && 3 <= v341
f_696(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) -> f_698(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) :|: TRUE
f_697(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v341, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) -> f_699(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v341, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) :|: TRUE
f_698(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) -> f_700(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) :|: TRUE
f_699(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v341, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) -> f_701(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v341, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) :|: TRUE
f_700(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) -> f_702(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) :|: 0 = 0
f_701(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v341, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) -> f_658(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v341, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 2, 9, 16) :|: TRUE
f_702(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) -> f_703(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) :|: TRUE
f_703(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) -> f_704(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) :|: TRUE
f_704(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) -> f_705(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) :|: 0 = 0
f_705(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) -> f_706(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) :|: 0 = 0
f_706(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) -> f_707(v305, 0, v331, v335, v337, v303, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v306, 3, 7, 4, 1, 8, 2) :|: 0 = 0
f_707(v305, 0, v331, v335, v337, v303, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v306, 3, 7, 4, 1, 8, 2) -> f_708(v305, 0, v331, v335, v337, v303, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v306, 3, 7, 4, 1, 8, 2) :|: 0 = 0
f_708(v305, 0, v331, v335, v337, v303, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v306, 3, 7, 4, 1, 8, 2) -> f_709(v305, 0, v331, v335, v337, v303, 1, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v306, 3, 7, 4, 8, 2) :|: 0 = 0
f_709(v305, 0, v331, v335, v337, v303, 1, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v306, 3, 7, 4, 8, 2) -> f_710(v305, 0, v331, v335, v337, v303, 1, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v306, 3, 7, 4, 8, 2) :|: TRUE
f_710(v305, 0, v331, v335, v337, v303, 1, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v306, 3, 7, 4, 8, 2) -> f_711(v305, 0, v331, v335, v337, v303, 1, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v306, 3, 7, 4, 8, 2) :|: 0 = 0
f_711(v305, 0, v331, v335, v337, v303, 1, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v306, 3, 7, 4, 8, 2) -> f_718(v305, 0, v331, v335, v337, v303, 1, v370, v309, v313, v310, v314, v311, v315, v332, v336, v338, v374, v327, v306, v373, v371, 3, 7, 4, 8, 15, 2, 9, 16) :|: v370 = 8 + v305 && v375 = 1 + v372 && v374 = 15 + v305 && 1 + v372 = v327 && 1 + v373 = v303 && 9 <= v370 && 0 <= v373 && 16 <= v374 && 1 <= v371 && v375 = v327
f_718(v305, 0, v331, v335, v337, v303, 1, v370, v309, v313, v310, v314, v311, v315, v332, v336, v338, v374, v327, v306, v373, v371, 3, 7, 4, 8, 15, 2, 9, 16) -> f_719(v305, 0, v331, v335, v337, v303, 1, v370, v306, v309, v313, v310, v314, v311, v315, v332, v336, v338, v374, v327, v373, v371, 3, 7, 4, 8, 15, 2, 9, 16) :|: 0 = 0
f_719(v305, 0, v331, v335, v337, v303, 1, v370, v306, v309, v313, v310, v314, v311, v315, v332, v336, v338, v374, v327, v373, v371, 3, 7, 4, 8, 15, 2, 9, 16) -> f_720(v305, 0, v331, v335, v337, v303, 1, v370, v306, v309, v313, v310, v314, v311, v315, v332, v336, v338, v374, v327, v373, v371, 3, 7, 4, 8, 15, 2, 9, 16) :|: TRUE
f_720(v305, 0, v331, v335, v337, v303, 1, v370, v306, v309, v313, v310, v314, v311, v315, v332, v336, v338, v374, v327, v373, v371, 3, 7, 4, 8, 15, 2, 9, 16) -> f_721(v305, 0, v331, v335, v337, v303, 1, v370, v306, v309, v313, v310, v314, v311, v315, v332, v336, v338, v374, v327, v373, v371, 3, 7, 4, 8, 15, 2, 9, 16) :|: TRUE
f_721(v305, 0, v331, v335, v337, v303, 1, v370, v306, v309, v313, v310, v314, v311, v315, v332, v336, v338, v374, v327, v373, v371, 3, 7, 4, 8, 15, 2, 9, 16) -> f_747(v305, 0, v331, v335, v337, v305, v303, 1, v370, v306, v309, v313, v310, v314, v311, v315, v332, v336, v338, v374, v418, v420, v373, v371, v327, 3, 7, 4, 8, 15, 2, 9, 16) :|: TRUE
f_747(v397, 0, v399, v400, v401, v402, v403, 1, v405, v406, v407, v411, v408, v412, v409, v413, v414, v415, v416, v417, v418, v420, v421, v422, v410, 3, 7, 4, 8, 15, 2, 9, 16) -> f_773(v397, 0, v399, v400, v401, v402, v403, 1, v405, v406, v407, v411, v408, v412, v409, v413, v414, v415, v416, v417, v421, v422, v410, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: TRUE
f_773(v438, 0, v440, v441, v442, v443, v444, 1, v446, v447, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v460, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_774(v438, 0, v440, v441, v442, v447, v443, v444, 1, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v460, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: 0 = 0
f_774(v438, 0, v440, v441, v442, v447, v443, v444, 1, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v460, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_775(v438, 0, v440, v441, v442, v447, v444, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v460, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: 0 = 0
f_775(v438, 0, v440, v441, v442, v447, v444, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v460, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_776(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: 0 = 0
f_776(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_777(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: 0 = 0
f_777(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_778(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: v460 != 0
f_777(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_779(v438, 0, v440, v441, v442, v447, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: v460 = 0
f_778(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_780(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: 0 = 0
f_779(v438, 0, v440, v441, v442, v447, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_781(v438, 0, v440, v441, v442, v447, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 1, 9, 2, 16) :|: 0 = 0
f_780(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_782(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: TRUE
f_781(v438, 0, v440, v441, v442, v447, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 1, 9, 2, 16) -> f_783(v438, 0, v440, v441, v442, v447, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 1, 9, 2, 16) :|: TRUE
f_782(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_784(v438, 0, v440, v441, v442, v447, v460, 1, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: 0 = 0
f_783(v438, 0, v440, v441, v442, v447, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 1, 9, 2, 16) -> f_785(v448, v449, v450, v451, 0, v438, v452, v453, v454, v458, v447, v444, v461, v459, v462, 3, 7, 4, 8, 15, 1, 2, 16, 9) :|: TRUE
f_784(v438, 0, v440, v441, v442, v447, v460, 1, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_792(v438, 0, v440, v441, v442, v447, v460, 1, v463, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v467, v446, v451, v459, v462, v461, v466, v464, 3, 7, 4, 8, 15, 9, 2, 16) :|: v463 = 8 + v447 && v467 = 15 + v447 && v468 = 1 + v465 && 1 + v465 = v451 && 9 <= v463 && 16 <= v467 && 1 <= v464 && v468 = v451
f_785(v448, v449, v450, v451, 0, v438, v452, v453, v454, v458, v447, v444, v461, v459, v462, 3, 7, 4, 8, 15, 1, 2, 16, 9) -> f_793(v448, v449, v450, v451, 0, v438, v452, v453, v454, v458, v447, v444, v461, v459, v462, 3, 7, 4, 8, 15, 1, 2, 16, 9) :|: TRUE
f_792(v438, 0, v440, v441, v442, v447, v460, 1, v463, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v467, v446, v451, v459, v462, v461, v466, v464, 3, 7, 4, 8, 15, 9, 2, 16) -> f_794(v438, 0, v440, v441, v442, v447, v460, 1, v463, v461, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v467, v446, v451, v459, v462, v466, v464, 3, 7, 4, 8, 15, 9, 2, 16) :|: 0 = 0
f_793(v448, v449, v450, v451, 0, v438, v452, v453, v454, v458, v447, v444, v461, v459, v462, 3, 7, 4, 8, 15, 1, 2, 16, 9) -> f_795(v448, v449, v450, v451, 0, v438, v452, v453, v454, v458, v447, v444, v461, v459, v462, 3, 7, 4, 8, 15, 1, 2, 16, 9) :|: TRUE
f_794(v438, 0, v440, v441, v442, v447, v460, 1, v463, v461, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v467, v446, v451, v459, v462, v466, v464, 3, 7, 4, 8, 15, 9, 2, 16) -> f_796(v438, 0, v440, v441, v442, v447, v460, 1, v463, v461, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v467, v451, v459, v462, v466, v464, 3, 7, 4, 8, 15, 2, 16, 9) :|: TRUE
f_795(v448, v449, v450, v451, 0, v438, v452, v453, v454, v458, v447, v444, v461, v459, v462, 3, 7, 4, 8, 15, 1, 2, 16, 9) -> f_797(v448, v449, v450, v451, 0, v438, v452, v453, v454, v458, v447, v444, v461, v459, v462, 3, 7, 4, 8, 15, 1, 2, 16, 9) :|: 0 = 0
f_796(v438, 0, v440, v441, v442, v447, v460, 1, v463, v461, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v467, v451, v459, v462, v466, v464, 3, 7, 4, 8, 15, 2, 16, 9) -> f_798(v438, 0, v440, v441, v442, v447, v460, 1, v463, v461, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v467, v451, v459, v462, v466, v464, 3, 7, 4, 8, 15, 2, 16, 9) :|: TRUE
f_798(v438, 0, v440, v441, v442, v447, v460, 1, v463, v461, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v467, v451, v459, v462, v466, v464, 3, 7, 4, 8, 15, 2, 16, 9) -> f_773(v438, 0, v440, v441, v442, v447, v460, 1, v463, v461, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v466, v464, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: TRUE
Combined rules. Obtained 8 rulesP rules:
f_295 -> f_314(v1:0, v3:0, v5:0, v7:0, 1, 0, 3 + v1:0, 3 + v3:0, 7 + v5:0, 3, 7, 4, 8) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 < 1
f_295 -> f_416(v1:0, v3:0, v5:0, 1, 0, v20:0, 3 + v1:0, 3 + v3:0, 7 + v5:0, 15 + v20:0, 8 + v20:0, 3, 7, 15, 4, 8, 16, 9) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v15:0 > 0 && v17:0 > 0 && v20:0 % 4 = 0 && v20:0 > 0 && v7:0 < 2 && v32:0 > 0 && v35:0 > 0 && v37:0 > 0
f_295 -> f_660(v7:0, v9:0, v11:0, v13:0, v15:0, v17:0, v20:0, 2, 1, v25:0, 1, v20:0, 8 + v25:0, v1:0, 3 + v1:0, v3:0, 3 + v3:0, v5:0, 7 + v5:0, 3 + v9:0, 7 + v11:0, 7 + v13:0, 7 + v15:0, 3 + v17:0, 15 + v20:0, 0, 3, 7, 15, 4, 8, 2, 9, 16) :|: v7:0 > 1 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v15:0 > 0 && v17:0 > 0 && v20:0 % 4 = 0 && v20:0 > 0 && v25:0 % 4 = 0 && v25:0 > 0
f_777(v438:0, 0, v440:0, v441:0, v442:0, v447:0, v460:0, 1, v443:0, v446:0, v448:0, v452:0, v449:0, v453:0, v450:0, v454:0, v455:0, v456:0, v457:0, v458:0, v444:0, v461:0, 1 + v465:0, v459:0, v462:0, 3, 7, 4, 8, 15, 9, 2, 16) -> f_777(v438:0, 0, v440:0, v441:0, v442:0, v461:0, v466:0, 1, v447:0, 8 + v447:0, v448:0, v452:0, v449:0, v453:0, v450:0, v454:0, v455:0, v456:0, v457:0, v458:0, v460:0, v464:0, 1 + v465:0, v459:0, v462:0, 3, 7, 4, 8, 15, 9, 2, 16) :|: v447:0 > 0 && v464:0 > 0 && v460:0 < 0
f_777(v438:0, 0, v440:0, v441:0, v442:0, v447:0, v460:0, 1, v443:0, v446:0, v448:0, v452:0, v449:0, v453:0, v450:0, v454:0, v455:0, v456:0, v457:0, v458:0, v444:0, v461:0, 1 + v465:0, v459:0, v462:0, 3, 7, 4, 8, 15, 9, 2, 16) -> f_777(v438:0, 0, v440:0, v441:0, v442:0, v461:0, v466:0, 1, v447:0, 8 + v447:0, v448:0, v452:0, v449:0, v453:0, v450:0, v454:0, v455:0, v456:0, v457:0, v458:0, v460:0, v464:0, 1 + v465:0, v459:0, v462:0, 3, 7, 4, 8, 15, 9, 2, 16) :|: v447:0 > 0 && v464:0 > 0 && v460:0 > 0
f_660(v296:0, v297:0, v298:0, v299:0, v300:0, v301:0, v302:0, 1 + v303:0, 1, v305:0, v303:0, v306:0, v307:0, v309:0, v313:0, v310:0, v314:0, v311:0, v315:0, v316:0, v317:0, v318:0, v319:0, v320:0, v321:0, 0, 3, 7, 15, 4, 8, 2, 9, 16) -> f_660(v296:0, v297:0, v298:0, v299:0, v300:0, v301:0, v302:0, 1 + (1 + v303:0), 1, v322:0, 1 + v303:0, v305:0, 8 + v322:0, v309:0, v313:0, v310:0, v314:0, v311:0, v315:0, v316:0, v317:0, v318:0, v319:0, v320:0, v321:0, 0, 3, 7, 15, 4, 8, 2, 9, 16) :|: v296:0 > 2 && v296:0 > 1 + v303:0 && v322:0 % 4 = 0 && v322:0 > 0 && v303:0 > 0
f_660(1 + v372:0, v297:0, v298:0, v299:0, v300:0, v301:0, v302:0, 1 + v372:0, 1, v305:0, 1 + v373:0, v306:0, v307:0, v309:0, v313:0, v310:0, v314:0, v311:0, v315:0, v316:0, v317:0, v318:0, v319:0, v320:0, v321:0, 0, 3, 7, 15, 4, 8, 2, 9, 16) -> f_777(v305:0, 0, v331:0, v335:0, v337:0, v306:0, v373:0, 1, v305:0, 8 + v305:0, v309:0, v313:0, v310:0, v314:0, v311:0, v315:0, 7 + v331:0, 3 + v335:0, 7 + v337:0, 15 + v305:0, 1 + v373:0, v371:0, 1 + v372:0, v459:0, v462:0, 3, 7, 4, 8, 15, 9, 2, 16) :|: v302:0 > 0 && 1 + v372:0 = 1 + (1 + v373:0) && v331:0 > 0 && v335:0 > 0 && v337:0 > 0 && v305:0 > 0 && v373:0 > -1 && v371:0 > 0
f_777(v438:0, 0, v440:0, v441:0, v442:0, v447:0, 0, 1, v443:0, v446:0, v448:0, v452:0, v449:0, v453:0, v450:0, v454:0, v455:0, v456:0, v457:0, v458:0, v444:0, v461:0, v451:0, v459:0, v462:0, 3, 7, 4, 8, 15, 9, 2, 16) -> f_797(v448:0, v449:0, v450:0, v451:0, 0, v438:0, v452:0, v453:0, v454:0, v458:0, v447:0, v444:0, v461:0, v459:0, v462:0, 3, 7, 4, 8, 15, 1, 2, 16, 9) :|: TRUE
Filtered unneeded arguments:
   f_777(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33) -> f_777(x6, x7, x22, x23)
   f_660(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34) -> f_660(x1, x7, x8, x10, x11, x12)
Removed division, modulo operations, cleaned up constraints. Obtained 10 rules.P rules:
f_295 -> f_314(v1:0, v3:0, v5:0, v7:0, 1, 0, 3 + v1:0, 3 + v3:0, 7 + v5:0, 3, 7, 4, 8) :|: v1:0 > 0 && v3:0 > 0 && v7:0 < 1 && v5:0 > 0
f_295 -> f_295' :|: TRUE
f_295' -> f_416(v1:0, v3:0, v5:0, 1, 0, v20:0, 3 + v1:0, 3 + v3:0, 7 + v5:0, 15 + v20:0, 8 + v20:0, 3, 7, 15, 4, 8, 16, 9) :|: v20:0 > 0 && v1:0 > 0 && v3:0 > 0 && v5:0 > 0 && v20:0 - 4 * div = 0 && v20:0 - 4 * div < 4 && v20:0 - 4 * div >= 0
f_295' -> f_660(v7:0, v20:0, 2, v25:0, 1, v20:0) :|: v20:0 > 0 && v25:0 > 0 && v20:0 - 4 * div = 0 && v7:0 > 1 && v25:0 - 4 * div1 = 0 && v20:0 - 4 * div >= 0 && v20:0 - 4 * div < 4 && v25:0 - 4 * div1 < 4 && v25:0 - 4 * div1 >= 0
f_777(v447:0, v460:0, v461:0, sum~cons_1~v465:0) -> f_777(v461:0, v466:0, v464:0, 1 + v465:0) :|: v464:0 > 0 && v460:0 < 0 && v447:0 > 0 && sum~cons_1~v465:0 = 1 + v465:0
f_777(v447:0, v460:0, v461:0, sum~cons_1~v465:0) -> f_777(v461:0, v466:0, v464:0, 1 + v465:0) :|: v464:0 > 0 && v460:0 > 0 && v447:0 > 0 && sum~cons_1~v465:0 = 1 + v465:0
f_660(v296:0, v302:0, sum~cons_1~v303:0, v305:0, v303:0, v306:0) -> f_660'(v296:0, v302:0, 1 + v303:0, v305:0, v303:0, v306:0) :|: v296:0 > 1 + v303:0 && v296:0 > 2 && v322:0 - 4 * div = 0 && v303:0 > 0 && v322:0 > 0 && sum~cons_1~v303:0 = 1 + v303:0
f_660'(v296:0, v302:0, sum~cons_1~v303:0, v305:0, v303:0, v306:0) -> f_660(v296:0, v302:0, 1 + (1 + v303:0), v322:0, 1 + v303:0, v305:0) :|: v322:0 > 0 && v296:0 > 1 + v303:0 && v296:0 > 2 && v322:0 - 4 * div = 0 && v303:0 > 0 && v322:0 - 4 * div < 4 && v322:0 - 4 * div >= 0 && sum~cons_1~v303:0 = 1 + v303:0
f_660(sum~cons_1~v372:0, v302:0, sum~cons_1~v372:01, v305:0, sum~cons_1~v373:0, v306:0) -> f_777(v306:0, v373:0, v371:0, 1 + v372:0) :|: 1 + v372:0 = 1 + (1 + v373:0) && v302:0 > 0 && v305:0 > 0 && v371:0 > 0 && v373:0 > -1 && sum~cons_1~v372:0 = 1 + v372:0 && sum~cons_1~v372:01 = 1 + v372:0 && sum~cons_1~v373:0 = 1 + v373:0
f_777(v447:0, cons_0, v461:0, v451:0) -> f_797(v448:0, v449:0, v450:0, v451:0, 0, v438:0, v452:0, v453:0, v454:0, v458:0, v447:0, v444:0, v461:0, v459:0, v462:0, 3, 7, 4, 8, 15, 1, 2, 16, 9) :|: TRUE && cons_0 = 0

----------------------------------------

(28)
Obligation:
Rules:
f_295 -> f_314(v1:0, v3:0, v5:0, v7:0, 1, 0, 3 + v1:0, 3 + v3:0, 7 + v5:0, 3, 7, 4, 8) :|: v1:0 > 0 && v3:0 > 0 && v7:0 < 1 && v5:0 > 0
f_295 -> f_295' :|: TRUE
f_295' -> f_416(x, x1, x2, 1, 0, x3, 3 + x, 3 + x1, 7 + x2, 15 + x3, 8 + x3, 3, 7, 15, 4, 8, 16, 9) :|: x3 > 0 && x > 0 && x1 > 0 && x2 > 0 && x3 - 4 * x4 = 0 && x3 - 4 * x4 < 4 && x3 - 4 * x4 >= 0
f_295' -> f_660(x5, x6, 2, x7, 1, x6) :|: x6 > 0 && x7 > 0 && x6 - 4 * x8 = 0 && x5 > 1 && x7 - 4 * x9 = 0 && x6 - 4 * x8 >= 0 && x6 - 4 * x8 < 4 && x7 - 4 * x9 < 4 && x7 - 4 * x9 >= 0
f_777(v447:0, v460:0, v461:0, sum~cons_1~v465:0) -> f_777(v461:0, v466:0, v464:0, 1 + v465:0) :|: v464:0 > 0 && v460:0 < 0 && v447:0 > 0 && sum~cons_1~v465:0 = 1 + v465:0
f_777(x10, x11, x12, x13) -> f_777(x12, x14, x15, 1 + x16) :|: x15 > 0 && x11 > 0 && x10 > 0 && x13 = 1 + x16
f_660(x17, x18, x19, x20, x21, x22) -> f_660'(x17, x18, 1 + x21, x20, x21, x22) :|: x17 > 1 + x21 && x17 > 2 && x23 - 4 * x24 = 0 && x21 > 0 && x23 > 0 && x19 = 1 + x21
f_660'(x25, x26, x27, x28, x29, x30) -> f_660(x25, x26, 1 + (1 + x29), x31, 1 + x29, x28) :|: x31 > 0 && x25 > 1 + x29 && x25 > 2 && x31 - 4 * x32 = 0 && x29 > 0 && x31 - 4 * x32 < 4 && x31 - 4 * x32 >= 0 && x27 = 1 + x29
f_660(sum~cons_1~v372:0, v302:0, sum~cons_1~v372:01, v305:0, sum~cons_1~v373:0, v306:0) -> f_777(v306:0, v373:0, v371:0, 1 + v372:0) :|: 1 + v372:0 = 1 + (1 + v373:0) && v302:0 > 0 && v305:0 > 0 && v371:0 > 0 && v373:0 > -1 && sum~cons_1~v372:0 = 1 + v372:0 && sum~cons_1~v372:01 = 1 + v372:0 && sum~cons_1~v373:0 = 1 + v373:0
f_777(x33, x34, x35, x36) -> f_797(x37, x38, x39, x36, 0, x40, x41, x42, x43, x44, x33, x45, x35, x46, x47, 3, 7, 4, 8, 15, 1, 2, 16, 9) :|: TRUE && x34 = 0
Start term: f_295

----------------------------------------

(29) IRSToKoat (EQUIVALENT)
Convert an IRS to a koat problem
----------------------------------------

(30)
Obligation:
(GOAL COMPLEXITY)
(STARTTERM (FUNCTIONSYMBOLS f_295))
(VAR x290 x160 x281 x280 x162 x283 x161 x282 x164 x285 x163 x284 x166 x287 x165 x286 x168 x289 x167 x288 x169 x270 x151 x272 x150 x271 x153 x274 x152 x273 x155 x276 x154 x275 x157 x278 x156 x277 x159 x158 x279 x140 x261 x260 x142 x263 x141 x262 x144 x265 x143 x264 x146 x267 x145 x266 x148 x269 x147 x268 x149 x250 x131 x252 x130 x251 x133 x254 x132 x253 x135 x256 x134 x255 x137 x258 x136 x257 x139 x138 x259 x193 x192 x195 x194 x197 x196 x199 x198 x'' k14 k15 k16 k17 k10 k11 k12 k13 x191 x190 x182 x181 x184 x183 x186 x185 x188 x187 x189 x180 x171 x292 x170 x291 x173 x294 x172 x293 x175 x296 x174 x295 x177 x298 x176 x297 x179 x178 x299 k36 k37 k38 k39 k32 k33 k34 k35 k30 k31 k29 k25 k26 k27 k28 k21 k22 k23 k24 k20 k18 k19 k58 k59 k54 k55 k56 k57 k50 k51 k52 k53 k47 k48 k49 k43 k44 k45 k46 k40 k41 k42 x k61 k60 x28 x29 x24 x25 x26 x27 x20 x21 x22 x23 x17 x18 x19 x13 x14 x15 x16 x10 x11 x12 x46 x47 x48 x49 x42 x43 x44 x45 x40 x41 x39 x35 x36 x37 x38 x31 x32 x33 x34 x30 x70 x68 x69 x64 x65 x66 x67 x60 x61 x62 x63 k7 k8 k5 k6 k9 k0 k3 k4 k1 k2 x57 x58 x59 x53 x54 x55 x56 x50 x51 x52 x90 x91 x92 x86 x87 x88 x89 x82 x83 x84 x85 x80 x81 x79 x75 x76 x77 x78 x71 x72 x73 x74 x97 x98 x99 x93 x94 x95 x96 x209 x208 x329 x320 x201 x322 x200 x321 x203 x324 x202 x323 x205 x326 x204 x325 x207 x328 x206 x327 x319 x318 x311 x310 x313 x312 x315 x314 x317 x316 x308 x307 x309 x300 x302 x301 x304 x303 x306 x305 x360 x120 x241 x362 x240 x361 x122 x243 x121 x242 x124 x245 x123 x244 x126 x247 x125 x246 x128 x249 x127 x248 x129 x230 x351 x350 x111 x232 x353 x110 x231 x352 x113 x234 x355 x112 x233 x354 x115 x236 x357 x114 x235 x356 x117 x238 x359 x116 x237 x358 x119 x118 x239 x109 x4 x5 x2 x3 x8 x340 x9 x6 x100 x221 x342 x7 x220 x341 x102 x223 x344 x101 x222 x343 x104 x225 x346 x103 x224 x345 x106 x227 x348 x1 x105 x226 x347 x108 x229 x107 x228 x349 x219 x' x210 x331 x330 x212 x333 x211 x332 x214 x335 x213 x334 x216 x337 x215 x336 x218 x339 x217 x338)
(RULES
  f_777(k16, k1, k32, k56, x148, x149, x150, x151, x152, x153, x154, x155, x156, x157, x158, x159, x160, x161, x162, x163, x164, x165, x166, x167) -> f_777(k32, k17, k15, 1 + k49, x168, x169, x170, x171, x172, x173, x174, x175, x176, x177, x178, x179, x180, x181, x182, x183, x184, x185, x186, x187) :|: k15 > 0 && k1 < 0 && k16 > 0 && k56 = 1 + k49
  f_777(k24, k25, k19, k20, x188, x189, x190, x191, x192, x193, x194, x195, x196, x197, x198, x199, x200, x201, x202, x203, x204, x205, x206, x207) -> f_797(k21, k22, k18, k20, 0, k13, k14, k7, k8, k9, k24, k10, k19, k3, k4, 3, 7, 4, 8, 15, 1, 2, 16, 9) :|: 0 = 0 && k25 = 0
  f_660'(k38, k40, k42, k29, k33, k26, x112, x113, x114, x115, x116, x117, x118, x119, x120, x121, x122, x123, x124, x125, x126, x127, x128, x129) -> f_660(k38, k40, 1 + (1 + k33), k23, 1 + k33, k29, x130, x131, x132, x133, x134, x135, x136, x137, x138, x139, x140, x141, x142, x143, x144, x145, x146, x147) :|: k23 > 0 && k38 > 1 + k33 && k38 > 2 && k23 - 4 * x32 = 0 && k33 > 0 && k23 - 4 * x32 < 4 && k23 - 4 * x32 >= 0 && k42 = 1 + k33
  f_777(k59, k60, k61, k54, x208, x209, x210, x211, x212, x213, x214, x215, x216, x217, x218, x219, x220, x221, x222, x223, x224, x225, x226, x227) -> f_777(k61, k55, k57, 1 + k58, x228, x229, x230, x231, x232, x233, x234, x235, x236, x237, x238, x239, x240, x241, x242, x243, x244, x245, x246, x247) :|: k57 > 0 && k60 > 0 && k59 > 0 && k54 = 1 + k58
  f_660(k5, k6, k2, k48, k43, k12, x248, x249, x250, x251, x252, x253, x254, x255, x256, x257, x258, x259, x260, x261, x262, x263, x264, x265) -> f_777(k12, k27, k28, 1 + k0, x266, x267, x268, x269, x270, x271, x272, x273, x274, x275, x276, x277, x278, x279, x280, x281, x282, x283, x284, x285) :|: 1 + k0 = 1 + (1 + k27) && k6 > 0 && k48 > 0 && k28 > 0 && k27 > -1 && k5 = 1 + k0 && k2 = 1 + k0 && k43 = 1 + k27
  f_660(k51, k52, k53, k44, k45, k46, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45) -> f_660'(k51, k52, 1 + k45, k44, k45, k46, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63) :|: k51 > 1 + k45 && k51 > 2 && x23 - 4 * x24 = 0 && k45 > 0 && x23 > 0 && k53 = 1 + k45
  f_295'(x321, x322, x323, x324, x325, x326, x327, x328, x329, x330, x331, x332, x333, x334, x335, x336, x337, x338, x339, x340, x341, x342, x343, x344) -> f_660(k31, k39, 2, k41, 1, k39, x345, x346, x347, x348, x349, x350, x351, x352, x353, x354, x355, x356, x357, x358, x359, x360, x361, x362) :|: k39 > 0 && k41 > 0 && k39 - 4 * x8 = 0 && k31 > 1 && k41 - 4 * x9 = 0 && k39 - 4 * x8 >= 0 && k39 - 4 * x8 < 4 && k41 - 4 * x9 < 4 && k41 - 4 * x9 >= 0
  f_295(x64, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74, x75, x76, x77, x78, x79, x80, x81, x82, x83, x84, x85, x86, x87) -> f_295'(x88, x89, x90, x91, x92, x93, x94, x95, x96, x97, x98, x99, x100, x101, x102, x103, x104, x105, x106, x107, x108, x109, x110, x111) :|: 0 = 0
  f_295'(x, x', x'', x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21) -> f_416(k11, k47, k34, 1, 0, k36, 3 + k11, 3 + k47, 7 + k34, 15 + k36, 8 + k36, 3, 7, 15, 4, 8, 16, 9, x22, x23, x24, x25, x26, x27) :|: k36 > 0 && k11 > 0 && k47 > 0 && k34 > 0 && k36 - 4 * x4 = 0 && k36 - 4 * x4 < 4 && k36 - 4 * x4 >= 0
  f_295(x286, x287, x288, x289, x290, x291, x292, x293, x294, x295, x296, x297, x298, x299, x300, x301, x302, x303, x304, x305, x306, x307, x308, x309) -> f_314(k50, k30, k35, k37, 1, 0, 3 + k50, 3 + k30, 7 + k35, 3, 7, 4, 8, x310, x311, x312, x313, x314, x315, x316, x317, x318, x319, x320) :|: k50 > 0 && k30 > 0 && k37 < 1 && k35 > 0
)

----------------------------------------

(31) KoAT2 (EQUIVALENT)
KoAT2 was called with the following command:

/aprove/bin/koat2 analyse --termination --cfr=pe -d5 --local=mprf,twn -rtermcomp -i /tmp/aprove.InputModules.Programs.koat2_17678098223971013587.koat 

KoAT2's output was:

MAYBE

----------------------------------------

(32)
MAYBE

----------------------------------------

(33) SEGraph to IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 185 rulesP rules:
f_295 -> f_296(v1, v2, 3, 1, 4) :|: 1 <= v1 && v2 = 3 + v1 && 4 <= v2
f_296(v1, v2, 3, 1, 4) -> f_297(v1, v3, v2, v4, 3, 1, 4) :|: 1 <= v3 && v4 = 3 + v3 && 4 <= v4
f_297(v1, v3, v2, v4, 3, 1, 4) -> f_298(v1, v3, v5, v2, v4, v6, 3, 7, 1, 4, 8) :|: 1 <= v5 && v6 = 7 + v5 && 8 <= v6
f_298(v1, v3, v5, v2, v4, v6, 3, 7, 1, 4, 8) -> f_299(v1, v3, v5, v2, v4, v6, 0, 3, 7, 1, 4, 8) :|: TRUE
f_299(v1, v3, v5, v2, v4, v6, 0, 3, 7, 1, 4, 8) -> f_300(v1, v3, v5, v2, v4, v6, 0, 3, 7, 1, 4, 8) :|: TRUE
f_300(v1, v3, v5, v2, v4, v6, 0, 3, 7, 1, 4, 8) -> f_301(v1, v3, v5, v7, v2, v4, v6, 0, 3, 7, 1, 4, 8) :|: TRUE
f_301(v1, v3, v5, v7, v2, v4, v6, 0, 3, 7, 1, 4, 8) -> f_302(v1, v3, v5, v7, v2, v4, v6, 0, 3, 7, 1, 4, 8) :|: TRUE
f_302(v1, v3, v5, v7, v2, v4, v6, 0, 3, 7, 1, 4, 8) -> f_303(v1, v3, v5, v7, v2, v4, v6, 0, 3, 7, 1, 4, 8) :|: 0 = 0
f_303(v1, v3, v5, v7, v2, v4, v6, 0, 3, 7, 1, 4, 8) -> f_304(v1, v3, v5, v7, v2, v4, v6, 0, 3, 7, 1, 4, 8) :|: v7 < 1
f_303(v1, v3, v5, v7, v2, v4, v6, 0, 3, 7, 1, 4, 8) -> f_305(v1, v3, v5, v7, v2, v4, v6, 0, 3, 7, 1, 4, 8) :|: 1 <= v7
f_304(v1, v3, v5, v7, v2, v4, v6, 0, 3, 7, 1, 4, 8) -> f_306(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 7, 4, 8) :|: 0 = 0
f_305(v1, v3, v5, v7, v2, v4, v6, 0, 3, 7, 1, 4, 8) -> f_307(v1, v3, v5, v7, 0, v2, v4, v6, 3, 7, 1, 4, 8) :|: 0 = 0
f_306(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 7, 4, 8) -> f_308(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 7, 4, 8) :|: TRUE
f_307(v1, v3, v5, v7, 0, v2, v4, v6, 3, 7, 1, 4, 8) -> f_309(v1, v3, v5, v7, 0, v2, v4, v6, 3, 7, 1, 4, 8) :|: TRUE
f_308(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 7, 4, 8) -> f_310(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 7, 4, 8) :|: TRUE
f_309(v1, v3, v5, v7, 0, v2, v4, v6, 3, 7, 1, 4, 8) -> f_311(v1, v3, v5, v7, 0, v2, v4, v6, 3, 7, 1, 4, 8) :|: TRUE
f_310(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 7, 4, 8) -> f_312(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 7, 4, 8) :|: TRUE
f_311(v1, v3, v5, v7, 0, v2, v4, v6, 3, 7, 1, 4, 8) -> f_313(v1, v3, v5, v7, 0, v2, v4, v6, 3, 7, 1, 4, 8) :|: 0 = 0
f_312(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 7, 4, 8) -> f_314(v1, v3, v5, v7, 1, 0, v2, v4, v6, 3, 7, 4, 8) :|: 0 = 0
f_313(v1, v3, v5, v7, 0, v2, v4, v6, 3, 7, 1, 4, 8) -> f_315(v7, v1, v2, v3, v4, v5, v6, 0, 3, 7, 1, 4, 8) :|: 0 = 0
f_315(v7, v1, v2, v3, v4, v5, v6, 0, 3, 7, 1, 4, 8) -> f_316(v7, v9, v1, v2, v3, v4, v5, v6, v10, 0, 3, 7, 1, 4, 8) :|: 1 <= v9 && v10 = 3 + v9 && 4 <= v10
f_316(v7, v9, v1, v2, v3, v4, v5, v6, v10, 0, 3, 7, 1, 4, 8) -> f_317(v7, v9, v11, v1, v2, v3, v4, v5, v6, v10, v12, 0, 3, 7, 1, 4, 8) :|: 1 <= v11 && v12 = 7 + v11 && 8 <= v12
f_317(v7, v9, v11, v1, v2, v3, v4, v5, v6, v10, v12, 0, 3, 7, 1, 4, 8) -> f_318(v7, v9, v11, v13, v1, v2, v3, v4, v5, v6, v10, v12, v14, 0, 3, 7, 1, 4, 8) :|: 1 <= v13 && v14 = 7 + v13 && 8 <= v14
f_318(v7, v9, v11, v13, v1, v2, v3, v4, v5, v6, v10, v12, v14, 0, 3, 7, 1, 4, 8) -> f_319(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, 0, 3, 7, 1, 4, 8) :|: 1 <= v15 && v16 = 7 + v15 && 8 <= v16
f_319(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, 0, 3, 7, 1, 4, 8) -> f_320(v7, v9, v11, v13, v15, v17, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, 0, 3, 7, 1, 4, 8) :|: 1 <= v17 && v18 = 3 + v17 && 4 <= v18
f_320(v7, v9, v11, v13, v15, v17, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, 0, 3, 7, 1, 4, 8) -> f_321(v7, v9, v11, v13, v15, v17, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, 0, 3, 7, 1, 4, 8) :|: TRUE
f_321(v7, v9, v11, v13, v15, v17, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, 0, 3, 7, 1, 4, 8) -> f_322(v7, v9, v11, v13, v15, v17, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, 0, 3, 7, 1, 4, 8) :|: TRUE
f_322(v7, v9, v11, v13, v15, v17, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, 0, 3, 7, 1, 4, 8) -> f_323(v7, v9, v11, v13, v15, v17, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, 0, 3, 7, 1, 4, 8) :|: TRUE
f_323(v7, v9, v11, v13, v15, v17, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, 0, 3, 7, 1, 4, 8) -> f_324(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) :|: v21 = 15 + v20 && v20 % 4 = 0 && 16 <= v21
f_324(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) -> f_325(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) :|: 0 = 0
f_325(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) -> f_326(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) :|: TRUE
f_326(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) -> f_327(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) :|: TRUE
f_327(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) -> f_328(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) :|: 0 = 0
f_328(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) -> f_329(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) :|: TRUE
f_329(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) -> f_330(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) :|: TRUE
f_330(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) -> f_331(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) :|: 0 = 0
f_331(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) -> f_332(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) :|: TRUE
f_332(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) -> f_333(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) :|: 0 = 0
f_333(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) -> f_334(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) :|: 0 = 0
f_334(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) -> f_335(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) :|: TRUE
f_335(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) -> f_336(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) :|: TRUE
f_336(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 1, 8, 16) -> f_337(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 1, 3, 7, 15, 4, 8, 16) :|: TRUE
f_337(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 1, 3, 7, 15, 4, 8, 16) -> f_338(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 1, 3, 7, 15, 4, 8, 16) :|: TRUE
f_338(v7, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 1, 3, 7, 15, 4, 8, 16) -> f_339(v7, v9, v11, v13, v15, v17, v20, 1, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 8, 16) :|: 0 = 0
f_339(v7, v9, v11, v13, v15, v17, v20, 1, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 8, 16) -> f_340(v7, v9, v11, v13, v15, v17, v20, 1, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 8, 16) :|: 0 = 0
f_340(v7, v9, v11, v13, v15, v17, v20, 1, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 8, 16) -> f_341(v7, v9, v11, v13, v15, v17, v20, 1, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 8, 2, 16) :|: 1 < v7
f_340(v7, v9, v11, v13, v15, v17, v20, 1, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 8, 16) -> f_342(1, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 8, 16) :|: v7 <= 1
f_341(v7, v9, v11, v13, v15, v17, v20, 1, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 8, 2, 16) -> f_343(v7, v9, v11, v13, v15, v17, v20, 1, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 8, 2, 16) :|: 0 = 0
f_342(1, v9, v11, v13, v15, v17, v20, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 8, 16) -> f_344(1, v9, v11, v13, v15, v17, v20, 0, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 3, 7, 15, 4, 8, 16) :|: 0 = 0
f_343(v7, v9, v11, v13, v15, v17, v20, 1, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 8, 2, 16) -> f_345(v7, v9, v11, v13, v15, v17, v20, 1, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 8, 2, 16) :|: TRUE
f_344(1, v9, v11, v13, v15, v17, v20, 0, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 3, 7, 15, 4, 8, 16) -> f_346(1, v9, v11, v13, v15, v17, v20, 0, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 3, 7, 15, 4, 8, 16) :|: TRUE
f_345(v7, v9, v11, v13, v15, v17, v20, 1, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 3, 7, 15, 4, 8, 2, 16) -> f_347(v7, v9, v11, v13, v15, v17, v20, 1, v25, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16) :|: v26 = 15 + v25 && v25 % 4 = 0 && 16 <= v26
f_346(1, v9, v11, v13, v15, v17, v20, 0, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 3, 7, 15, 4, 8, 16) -> f_348(1, v9, v11, v13, v15, v17, v20, 0, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 3, 7, 15, 4, 8, 16) :|: 0 = 0
f_347(v7, v9, v11, v13, v15, v17, v20, 1, v25, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16) -> f_349(v7, v9, v11, v13, v15, v17, v20, 1, v25, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16) :|: 0 = 0
f_348(1, v9, v11, v13, v15, v17, v20, 0, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 3, 7, 15, 4, 8, 16) -> f_350(1, v9, v11, v13, v15, v17, v20, 0, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 3, 7, 15, 4, 8, 16) :|: 0 = 0
f_349(v7, v9, v11, v13, v15, v17, v20, 1, v25, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16) -> f_351(v7, v9, v11, v13, v15, v17, v20, 1, v25, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16) :|: TRUE
f_350(1, v9, v11, v13, v15, v17, v20, 0, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 3, 7, 15, 4, 8, 16) -> f_352(1, v9, v11, v13, v15, v17, v20, 0, v28, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 3, 7, 15, 4, 8, 16, 9) :|: v28 = 8 + v20 && 9 <= v28
f_351(v7, v9, v11, v13, v15, v17, v20, 1, v25, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16) -> f_353(v7, v9, v11, v13, v15, v17, v20, 1, v25, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16) :|: 0 = 0
f_352(1, v9, v11, v13, v15, v17, v20, 0, v28, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 3, 7, 15, 4, 8, 16, 9) -> f_354(1, v9, v11, v13, v15, v17, v20, 0, v28, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 3, 7, 15, 4, 8, 16, 9) :|: TRUE
f_353(v7, v9, v11, v13, v15, v17, v20, 1, v25, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16) -> f_355(v7, v9, v11, v13, v15, v17, v20, 1, v25, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16) :|: 0 = 0
f_354(1, v9, v11, v13, v15, v17, v20, 0, v28, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 3, 7, 15, 4, 8, 16, 9) -> f_356(1, v9, v11, v13, v15, v17, v20, 0, v28, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 3, 7, 15, 4, 8, 16, 9) :|: 0 = 0
f_355(v7, v9, v11, v13, v15, v17, v20, 1, v25, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16) -> f_357(v7, v9, v11, v13, v15, v17, v20, 1, v25, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16) :|: 0 = 0
f_356(1, v9, v11, v13, v15, v17, v20, 0, v28, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 3, 7, 15, 4, 8, 16, 9) -> f_358(v1, v3, v5, 1, 0, v20, v2, v4, v6, v21, v28, 3, 7, 15, 4, 8, 16, 9) :|: 0 = 0
f_357(v7, v9, v11, v13, v15, v17, v20, 1, v25, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16) -> f_359(v7, v9, v11, v13, v15, v17, v20, 1, v25, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16) :|: TRUE
f_358(v1, v3, v5, 1, 0, v20, v2, v4, v6, v21, v28, 3, 7, 15, 4, 8, 16, 9) -> f_360(v1, v3, v5, 1, 0, v20, v2, v4, v6, v21, v28, 3, 7, 15, 4, 8, 16, 9) :|: TRUE
f_359(v7, v9, v11, v13, v15, v17, v20, 1, v25, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16) -> f_361(v7, v9, v11, v13, v15, v17, v20, 1, v25, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16) :|: 0 = 0
f_360(v1, v3, v5, 1, 0, v20, v2, v4, v6, v21, v28, 3, 7, 15, 4, 8, 16, 9) -> f_362(v1, v3, v5, 1, 0, v20, v2, v4, v6, v21, v28, 3, 7, 15, 4, 8, 16, 9) :|: 0 = 0
f_361(v7, v9, v11, v13, v15, v17, v20, 1, v25, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16) -> f_363(v7, v9, v11, v13, v15, v17, v20, 1, v25, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16) :|: 0 = 0
f_362(v1, v3, v5, 1, 0, v20, v2, v4, v6, v21, v28, 3, 7, 15, 4, 8, 16, 9) -> f_364(v20, 0, v1, v2, v3, v4, v5, v6, v21, 1, v28, 3, 7, 15, 4, 8, 16, 9) :|: 0 = 0
f_363(v7, v9, v11, v13, v15, v17, v20, 1, v25, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16) -> f_365(v7, v9, v11, v13, v15, v17, v20, 1, v25, v31, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16, 9) :|: v31 = 8 + v25 && 9 <= v31
f_364(v20, 0, v1, v2, v3, v4, v5, v6, v21, 1, v28, 3, 7, 15, 4, 8, 16, 9) -> f_366(v20, 0, v32, v1, v2, v3, v4, v5, v6, v21, v33, 1, v28, 3, 7, 15, 4, 8, 16, 9) :|: 1 <= v32 && v33 = 7 + v32 && 8 <= v33
f_365(v7, v9, v11, v13, v15, v17, v20, 1, v25, v31, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16, 9) -> f_367(v7, v9, v11, v13, v15, v17, v20, 1, v25, v31, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16, 9) :|: TRUE
f_366(v20, 0, v32, v1, v2, v3, v4, v5, v6, v21, v33, 1, v28, 3, 7, 15, 4, 8, 16, 9) -> f_368(v20, 0, v32, v35, v1, v2, v3, v4, v5, v6, v21, v33, v36, 1, v28, 3, 7, 15, 4, 8, 16, 9) :|: 1 <= v35 && v36 = 3 + v35 && 4 <= v36
f_367(v7, v9, v11, v13, v15, v17, v20, 1, v25, v31, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16, 9) -> f_369(v7, v9, v11, v13, v15, v17, v20, 1, v25, v31, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16, 9) :|: 0 = 0
f_368(v20, 0, v32, v35, v1, v2, v3, v4, v5, v6, v21, v33, v36, 1, v28, 3, 7, 15, 4, 8, 16, 9) -> f_370(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) :|: 1 <= v37 && v38 = 7 + v37 && 8 <= v38
f_369(v7, v9, v11, v13, v15, v17, v20, 1, v25, v31, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16, 9) -> f_371(v7, v9, v11, v13, v15, v17, v20, 1, v25, v31, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16, 9) :|: TRUE
f_370(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) -> f_372(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) :|: TRUE
f_371(v7, v9, v11, v13, v15, v17, v20, 1, v25, v31, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16, 9) -> f_373(v7, v9, v11, v13, v15, v17, v20, 1, v25, v31, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16, 9) :|: TRUE
f_372(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) -> f_374(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) :|: TRUE
f_373(v7, v9, v11, v13, v15, v17, v20, 1, v25, v31, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16, 9) -> f_375(v7, v9, v11, v13, v15, v17, v20, 1, v25, v31, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16, 9) :|: 0 = 0
f_374(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) -> f_376(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) :|: TRUE
f_375(v7, v9, v11, v13, v15, v17, v20, 1, v25, v31, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 2, 16, 9) -> f_377(v7, v9, v11, v13, v15, v17, v20, 1, v25, v31, 2, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 16, 9) :|: 0 = 0
f_376(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) -> f_378(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) :|: TRUE
f_377(v7, v9, v11, v13, v15, v17, v20, 1, v25, v31, 2, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 16, 9) -> f_379(v7, v9, v11, v13, v15, v17, v20, 1, v25, v31, 2, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 16, 9) :|: TRUE
f_378(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) -> f_380(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) :|: TRUE
f_379(v7, v9, v11, v13, v15, v17, v20, 1, v25, v31, 2, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 16, 9) -> f_381(v7, v9, v11, v13, v15, v17, v20, 1, v25, v31, 2, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 16, 9) :|: TRUE
f_380(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) -> f_382(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) :|: 0 = 0
f_381(v7, v9, v11, v13, v15, v17, v20, 1, v25, v31, 2, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, v26, 0, 3, 7, 15, 4, 8, 16, 9) -> f_438(v7, v9, v11, v13, v15, v17, v20, 1, 1, v25, v20, v31, 2, v1, v2, v3, v4, v5, v6, v10, v12, v14, v16, v18, v21, 0, 0, 3, 7, 15, 4, 8, 2, 9, 16) :|: TRUE
f_382(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) -> f_384(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) :|: TRUE
f_384(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) -> f_386(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) :|: TRUE
f_386(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) -> f_389(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) :|: 0 = 0
f_389(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) -> f_392(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) :|: 0 = 0
f_392(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) -> f_395(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) :|: 0 = 0
f_395(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) -> f_398(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) :|: 0 = 0
f_398(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) -> f_401(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) :|: 0 = 0
f_401(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) -> f_404(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) :|: TRUE
f_404(v20, 0, v32, v35, v37, v1, v2, v3, v4, v5, v6, v21, v33, v36, v38, 1, v28, 3, 7, 15, 4, 8, 16, 9) -> f_407(v1, v3, v5, 1, 0, v20, v2, v4, v6, v21, v28, 3, 7, 15, 4, 8, 16, 9) :|: TRUE
f_407(v1, v3, v5, 1, 0, v20, v2, v4, v6, v21, v28, 3, 7, 15, 4, 8, 16, 9) -> f_410(v1, v3, v5, 1, 0, v20, v2, v4, v6, v21, v28, 3, 7, 15, 4, 8, 16, 9) :|: TRUE
f_410(v1, v3, v5, 1, 0, v20, v2, v4, v6, v21, v28, 3, 7, 15, 4, 8, 16, 9) -> f_413(v1, v3, v5, 1, 0, v20, v2, v4, v6, v21, v28, 3, 7, 15, 4, 8, 16, 9) :|: TRUE
f_413(v1, v3, v5, 1, 0, v20, v2, v4, v6, v21, v28, 3, 7, 15, 4, 8, 16, 9) -> f_416(v1, v3, v5, 1, 0, v20, v2, v4, v6, v21, v28, 3, 7, 15, 4, 8, 16, 9) :|: 0 = 0
f_438(v58, v59, v60, v61, v62, v63, v64, v65, 1, v67, v68, v69, v70, v71, v75, v72, v76, v73, v77, v78, v79, v80, v81, v82, v83, 0, v86, 3, 7, 15, 4, 8, 2, 9, 16) -> f_482(v58, v59, v60, v61, v62, v63, v64, v65, 1, v67, v68, v69, v70, v71, v75, v72, v76, v73, v77, v78, v79, v80, v81, v82, v83, 0, 3, 7, 15, 4, 8, 2, 9, 16) :|: TRUE
f_482(v108, v109, v110, v111, v112, v113, v114, v115, 1, v117, v118, v119, v120, v121, v125, v122, v126, v123, v127, v128, v129, v130, v131, v132, v133, 0, 3, 7, 15, 4, 8, 2, 9, 16) -> f_526(v108, v109, v110, v111, v112, v113, v114, v115, 1, v117, v118, v119, v120, v121, v125, v122, v126, v123, v127, v128, v129, v130, v131, v132, v133, 0, 3, 7, 15, 4, 8, 2, 9, 16) :|: TRUE
f_526(v155, v156, v157, v158, v159, v160, v161, v162, 1, v164, v165, v166, v167, v168, v172, v169, v173, v170, v174, v175, v176, v177, v178, v179, v180, 0, 3, 7, 15, 4, 8, 2, 9, 16) -> f_570(v155, v156, v157, v158, v159, v160, v161, v162, 1, v164, v165, v166, v167, v168, v172, v169, v173, v170, v174, v175, v176, v177, v178, v179, v180, 0, 3, 7, 15, 4, 8, 2, 9, 16) :|: TRUE
f_570(v202, v203, v204, v205, v206, v207, v208, v209, 1, v211, v212, v213, v214, v215, v219, v216, v220, v217, v221, v222, v223, v224, v225, v226, v227, 0, 3, 7, 15, 4, 8, 2, 9, 16) -> f_614(v202, v203, v204, v205, v206, v207, v208, v209, 1, v211, v212, v213, v214, v215, v219, v216, v220, v217, v221, v222, v223, v224, v225, v226, v227, 0, 3, 7, 15, 4, 8, 2, 9, 16) :|: TRUE
f_614(v249, v250, v251, v252, v253, v254, v255, v256, 1, v258, v259, v260, v261, v262, v266, v263, v267, v264, v268, v269, v270, v271, v272, v273, v274, 0, 3, 7, 15, 4, 8, 2, 9, 16) -> f_658(v249, v250, v251, v252, v253, v254, v255, v256, 1, v258, v259, v260, v261, v262, v266, v263, v267, v264, v268, v269, v270, v271, v272, v273, v274, 0, 3, 7, 15, 4, 8, 2, 9, 16) :|: TRUE
f_658(v296, v297, v298, v299, v300, v301, v302, v303, 1, v305, v306, v307, v308, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 2, 9, 16) -> f_659(v296, v297, v298, v299, v300, v301, v302, v308, 1, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 2, 9, 16) :|: 0 = 0
f_659(v296, v297, v298, v299, v300, v301, v302, v308, 1, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 2, 9, 16) -> f_660(v296, v297, v298, v299, v300, v301, v302, v308, 1, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 2, 9, 16) :|: 0 = 0
f_660(v296, v297, v298, v299, v300, v301, v302, v308, 1, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 2, 9, 16) -> f_661(v296, v297, v298, v299, v300, v301, v302, v308, 1, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 9, 2, 16) :|: v308 < v296 && 3 <= v296
f_660(v296, v297, v298, v299, v300, v301, v302, v308, 1, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 2, 9, 16) -> f_662(v308, v297, v298, v299, v300, v301, v302, 1, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 9, 2, 16) :|: v296 <= v308 && v296 = v308
f_661(v296, v297, v298, v299, v300, v301, v302, v308, 1, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 9, 2, 16) -> f_663(v296, v297, v298, v299, v300, v301, v302, v308, 1, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 9, 2, 16) :|: 0 = 0
f_662(v308, v297, v298, v299, v300, v301, v302, 1, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 9, 2, 16) -> f_664(v308, v297, v298, v299, v300, v301, v302, 0, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 1, 3, 7, 15, 4, 8, 9, 2, 16) :|: 0 = 0
f_663(v296, v297, v298, v299, v300, v301, v302, v308, 1, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 9, 2, 16) -> f_665(v296, v297, v298, v299, v300, v301, v302, v308, 1, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 9, 2, 16) :|: TRUE
f_664(v308, v297, v298, v299, v300, v301, v302, 0, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 1, 3, 7, 15, 4, 8, 9, 2, 16) -> f_666(v308, v297, v298, v299, v300, v301, v302, 0, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 1, 3, 7, 15, 4, 8, 9, 2, 16) :|: TRUE
f_665(v296, v297, v298, v299, v300, v301, v302, v308, 1, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 9, 2, 16) -> f_667(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) :|: v323 = 15 + v322 && v322 % 4 = 0 && 16 <= v323
f_666(v308, v297, v298, v299, v300, v301, v302, 0, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 1, 3, 7, 15, 4, 8, 9, 2, 16) -> f_668(v308, v297, v298, v299, v300, v301, v302, 0, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 1, 3, 7, 15, 4, 8, 9, 2, 16) :|: 0 = 0
f_667(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) -> f_669(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v303, v305, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) :|: 0 = 0
f_668(v308, v297, v298, v299, v300, v301, v302, 0, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 1, 3, 7, 15, 4, 8, 9, 2, 16) -> f_670(v308, v297, v298, v299, v300, v301, v302, 0, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 1, 3, 7, 15, 4, 8, 9, 2, 16) :|: 0 = 0
f_669(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v303, v305, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) -> f_671(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v303, v305, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) :|: TRUE
f_670(v308, v297, v298, v299, v300, v301, v302, 0, v305, v303, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 1, 3, 7, 15, 4, 8, 9, 2, 16) -> f_672(v308, v297, v298, v299, v300, v301, v302, 0, v305, v303, v306, v307, v325, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 1, 3, 7, 15, 4, 8, 9, 2, 16) :|: v325 = 8 + v302 && 9 <= v325
f_671(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v303, v305, v306, v307, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) -> f_673(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v305, v306, v307, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) :|: 0 = 0
f_672(v308, v297, v298, v299, v300, v301, v302, 0, v305, v303, v306, v307, v325, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 1, 3, 7, 15, 4, 8, 9, 2, 16) -> f_674(v327, v297, v298, v299, v300, v301, v302, 0, v305, v303, v306, v307, v325, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, 3, 7, 4, 8, 1, 9, 2) :|: v327 = 1 + v303 && v308 = v327
f_673(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v305, v306, v307, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) -> f_675(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v305, v306, v307, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) :|: 0 = 0
f_674(v327, v297, v298, v299, v300, v301, v302, 0, v305, v303, v306, v307, v325, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, 3, 7, 4, 8, 1, 9, 2) -> f_676(v327, v297, v298, v299, v300, v301, v302, 0, v305, v303, v306, v307, v325, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, 3, 7, 4, 8, 1, 9, 2) :|: 0 = 0
f_675(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v305, v306, v307, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) -> f_677(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v306, v305, v307, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) :|: 0 = 0
f_676(v327, v297, v298, v299, v300, v301, v302, 0, v305, v303, v306, v307, v325, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, 3, 7, 4, 8, 1, 9, 2) -> f_678(v309, v310, v311, v327, 0, v305, v313, v314, v315, v303, v306, 3, 7, 4, 1, 8, 2) :|: 0 = 0
f_677(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v306, v305, v307, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) -> f_679(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v306, v305, v307, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) :|: TRUE
f_678(v309, v310, v311, v327, 0, v305, v313, v314, v315, v303, v306, 3, 7, 4, 1, 8, 2) -> f_680(v309, v310, v311, v327, 0, v305, v313, v314, v315, v303, v306, 3, 7, 4, 1, 8, 2) :|: TRUE
f_679(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v306, v305, v307, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, 3, 7, 15, 4, 8, 9, 2, 16) -> f_681(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v305, v307, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, v306, 3, 7, 15, 4, 8, 9, 2, 16) :|: 0 = 0
f_680(v309, v310, v311, v327, 0, v305, v313, v314, v315, v303, v306, 3, 7, 4, 1, 8, 2) -> f_682(v309, v310, v311, v327, 0, v305, v313, v314, v315, v303, v306, 3, 7, 4, 1, 8, 2) :|: 0 = 0
f_681(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v305, v307, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, v306, 3, 7, 15, 4, 8, 9, 2, 16) -> f_683(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v305, v307, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, v306, 3, 7, 15, 4, 8, 9, 2, 16) :|: 0 = 0
f_682(v309, v310, v311, v327, 0, v305, v313, v314, v315, v303, v306, 3, 7, 4, 1, 8, 2) -> f_684(v305, 0, v309, v313, v310, v314, v311, v315, v327, v303, v306, 3, 7, 4, 1, 8, 2) :|: 0 = 0
f_683(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v305, v307, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, v306, 3, 7, 15, 4, 8, 9, 2, 16) -> f_685(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v305, v330, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, v306, 3, 7, 15, 4, 8, 2, 16, 9) :|: v330 = 8 + v322 && 9 <= v330
f_684(v305, 0, v309, v313, v310, v314, v311, v315, v327, v303, v306, 3, 7, 4, 1, 8, 2) -> f_686(v305, 0, v331, v309, v313, v310, v314, v311, v315, v332, v327, v303, v306, 3, 7, 4, 1, 8, 2) :|: 1 <= v331 && v332 = 7 + v331 && 8 <= v332
f_685(v296, v297, v298, v299, v300, v301, v302, v308, 1, v322, v305, v330, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, v323, 0, v306, 3, 7, 15, 4, 8, 2, 16, 9) -> f_687(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) :|: v334 = 1 + v303 && v308 = v334
f_686(v305, 0, v331, v309, v313, v310, v314, v311, v315, v332, v327, v303, v306, 3, 7, 4, 1, 8, 2) -> f_688(v305, 0, v331, v335, v309, v313, v310, v314, v311, v315, v332, v336, v327, v303, v306, 3, 7, 4, 1, 8, 2) :|: 1 <= v335 && v336 = 3 + v335 && 4 <= v336
f_687(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) -> f_689(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) :|: 0 = 0
f_688(v305, 0, v331, v335, v309, v313, v310, v314, v311, v315, v332, v336, v327, v303, v306, 3, 7, 4, 1, 8, 2) -> f_690(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) :|: 1 <= v337 && v338 = 7 + v337 && 8 <= v338
f_689(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) -> f_691(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) :|: TRUE
f_690(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) -> f_692(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) :|: TRUE
f_691(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) -> f_693(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) :|: TRUE
f_692(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) -> f_694(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) :|: TRUE
f_693(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v303, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) -> f_695(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) :|: 0 = 0
f_694(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) -> f_696(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) :|: TRUE
f_695(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) -> f_697(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v341, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) :|: v341 = 1 + v334 && 3 <= v341
f_696(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) -> f_698(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) :|: TRUE
f_697(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v341, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) -> f_699(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v341, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) :|: TRUE
f_698(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) -> f_700(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) :|: TRUE
f_699(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v341, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) -> f_701(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v341, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) :|: TRUE
f_700(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) -> f_702(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) :|: 0 = 0
f_701(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v341, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 16, 9, 2) -> f_658(v296, v297, v298, v299, v300, v301, v302, v334, 1, v322, v305, v330, v341, v309, v313, v310, v314, v311, v315, v316, v317, v318, v319, v320, v321, 0, 3, 7, 15, 4, 8, 2, 9, 16) :|: TRUE
f_702(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) -> f_703(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) :|: TRUE
f_703(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) -> f_704(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) :|: TRUE
f_704(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) -> f_705(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) :|: 0 = 0
f_705(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) -> f_706(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) :|: 0 = 0
f_706(v305, 0, v331, v335, v337, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v303, v306, 3, 7, 4, 1, 8, 2) -> f_707(v305, 0, v331, v335, v337, v303, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v306, 3, 7, 4, 1, 8, 2) :|: 0 = 0
f_707(v305, 0, v331, v335, v337, v303, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v306, 3, 7, 4, 1, 8, 2) -> f_708(v305, 0, v331, v335, v337, v303, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v306, 3, 7, 4, 1, 8, 2) :|: 0 = 0
f_708(v305, 0, v331, v335, v337, v303, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v306, 3, 7, 4, 1, 8, 2) -> f_709(v305, 0, v331, v335, v337, v303, 1, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v306, 3, 7, 4, 8, 2) :|: 0 = 0
f_709(v305, 0, v331, v335, v337, v303, 1, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v306, 3, 7, 4, 8, 2) -> f_710(v305, 0, v331, v335, v337, v303, 1, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v306, 3, 7, 4, 8, 2) :|: TRUE
f_710(v305, 0, v331, v335, v337, v303, 1, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v306, 3, 7, 4, 8, 2) -> f_711(v305, 0, v331, v335, v337, v303, 1, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v306, 3, 7, 4, 8, 2) :|: 0 = 0
f_711(v305, 0, v331, v335, v337, v303, 1, v309, v313, v310, v314, v311, v315, v332, v336, v338, v327, v306, 3, 7, 4, 8, 2) -> f_718(v305, 0, v331, v335, v337, v303, 1, v370, v309, v313, v310, v314, v311, v315, v332, v336, v338, v374, v327, v306, v373, v371, 3, 7, 4, 8, 15, 2, 9, 16) :|: v370 = 8 + v305 && v375 = 1 + v372 && v374 = 15 + v305 && 1 + v372 = v327 && 1 + v373 = v303 && 9 <= v370 && 0 <= v373 && 16 <= v374 && 1 <= v371 && v375 = v327
f_718(v305, 0, v331, v335, v337, v303, 1, v370, v309, v313, v310, v314, v311, v315, v332, v336, v338, v374, v327, v306, v373, v371, 3, 7, 4, 8, 15, 2, 9, 16) -> f_719(v305, 0, v331, v335, v337, v303, 1, v370, v306, v309, v313, v310, v314, v311, v315, v332, v336, v338, v374, v327, v373, v371, 3, 7, 4, 8, 15, 2, 9, 16) :|: 0 = 0
f_719(v305, 0, v331, v335, v337, v303, 1, v370, v306, v309, v313, v310, v314, v311, v315, v332, v336, v338, v374, v327, v373, v371, 3, 7, 4, 8, 15, 2, 9, 16) -> f_720(v305, 0, v331, v335, v337, v303, 1, v370, v306, v309, v313, v310, v314, v311, v315, v332, v336, v338, v374, v327, v373, v371, 3, 7, 4, 8, 15, 2, 9, 16) :|: TRUE
f_720(v305, 0, v331, v335, v337, v303, 1, v370, v306, v309, v313, v310, v314, v311, v315, v332, v336, v338, v374, v327, v373, v371, 3, 7, 4, 8, 15, 2, 9, 16) -> f_721(v305, 0, v331, v335, v337, v303, 1, v370, v306, v309, v313, v310, v314, v311, v315, v332, v336, v338, v374, v327, v373, v371, 3, 7, 4, 8, 15, 2, 9, 16) :|: TRUE
f_721(v305, 0, v331, v335, v337, v303, 1, v370, v306, v309, v313, v310, v314, v311, v315, v332, v336, v338, v374, v327, v373, v371, 3, 7, 4, 8, 15, 2, 9, 16) -> f_747(v305, 0, v331, v335, v337, v305, v303, 1, v370, v306, v309, v313, v310, v314, v311, v315, v332, v336, v338, v374, v418, v420, v373, v371, v327, 3, 7, 4, 8, 15, 2, 9, 16) :|: TRUE
f_747(v397, 0, v399, v400, v401, v402, v403, 1, v405, v406, v407, v411, v408, v412, v409, v413, v414, v415, v416, v417, v418, v420, v421, v422, v410, 3, 7, 4, 8, 15, 2, 9, 16) -> f_773(v397, 0, v399, v400, v401, v402, v403, 1, v405, v406, v407, v411, v408, v412, v409, v413, v414, v415, v416, v417, v421, v422, v410, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: TRUE
f_773(v438, 0, v440, v441, v442, v443, v444, 1, v446, v447, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v460, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_774(v438, 0, v440, v441, v442, v447, v443, v444, 1, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v460, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: 0 = 0
f_774(v438, 0, v440, v441, v442, v447, v443, v444, 1, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v460, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_775(v438, 0, v440, v441, v442, v447, v444, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v460, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: 0 = 0
f_775(v438, 0, v440, v441, v442, v447, v444, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v460, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_776(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: 0 = 0
f_776(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_777(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: 0 = 0
f_777(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_778(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: v460 != 0
f_777(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_779(v438, 0, v440, v441, v442, v447, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: v460 = 0
f_778(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_780(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: 0 = 0
f_779(v438, 0, v440, v441, v442, v447, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_781(v438, 0, v440, v441, v442, v447, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 1, 9, 2, 16) :|: 0 = 0
f_780(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_782(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: TRUE
f_781(v438, 0, v440, v441, v442, v447, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 1, 9, 2, 16) -> f_783(v438, 0, v440, v441, v442, v447, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 1, 9, 2, 16) :|: TRUE
f_782(v438, 0, v440, v441, v442, v447, v460, 1, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_784(v438, 0, v440, v441, v442, v447, v460, 1, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: 0 = 0
f_783(v438, 0, v440, v441, v442, v447, v443, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 1, 9, 2, 16) -> f_785(v448, v449, v450, v451, 0, v438, v452, v453, v454, v458, v447, v444, v461, v459, v462, 3, 7, 4, 8, 15, 1, 2, 16, 9) :|: TRUE
f_784(v438, 0, v440, v441, v442, v447, v460, 1, v446, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v444, v461, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) -> f_792(v438, 0, v440, v441, v442, v447, v460, 1, v463, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v467, v446, v451, v459, v462, v461, v466, v464, 3, 7, 4, 8, 15, 9, 2, 16) :|: v463 = 8 + v447 && v467 = 15 + v447 && v468 = 1 + v465 && 1 + v465 = v451 && 9 <= v463 && 16 <= v467 && 1 <= v464 && v468 = v451
f_785(v448, v449, v450, v451, 0, v438, v452, v453, v454, v458, v447, v444, v461, v459, v462, 3, 7, 4, 8, 15, 1, 2, 16, 9) -> f_793(v448, v449, v450, v451, 0, v438, v452, v453, v454, v458, v447, v444, v461, v459, v462, 3, 7, 4, 8, 15, 1, 2, 16, 9) :|: TRUE
f_792(v438, 0, v440, v441, v442, v447, v460, 1, v463, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v467, v446, v451, v459, v462, v461, v466, v464, 3, 7, 4, 8, 15, 9, 2, 16) -> f_794(v438, 0, v440, v441, v442, v447, v460, 1, v463, v461, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v467, v446, v451, v459, v462, v466, v464, 3, 7, 4, 8, 15, 9, 2, 16) :|: 0 = 0
f_793(v448, v449, v450, v451, 0, v438, v452, v453, v454, v458, v447, v444, v461, v459, v462, 3, 7, 4, 8, 15, 1, 2, 16, 9) -> f_795(v448, v449, v450, v451, 0, v438, v452, v453, v454, v458, v447, v444, v461, v459, v462, 3, 7, 4, 8, 15, 1, 2, 16, 9) :|: TRUE
f_794(v438, 0, v440, v441, v442, v447, v460, 1, v463, v461, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v467, v446, v451, v459, v462, v466, v464, 3, 7, 4, 8, 15, 9, 2, 16) -> f_796(v438, 0, v440, v441, v442, v447, v460, 1, v463, v461, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v467, v451, v459, v462, v466, v464, 3, 7, 4, 8, 15, 2, 16, 9) :|: TRUE
f_795(v448, v449, v450, v451, 0, v438, v452, v453, v454, v458, v447, v444, v461, v459, v462, 3, 7, 4, 8, 15, 1, 2, 16, 9) -> f_797(v448, v449, v450, v451, 0, v438, v452, v453, v454, v458, v447, v444, v461, v459, v462, 3, 7, 4, 8, 15, 1, 2, 16, 9) :|: 0 = 0
f_796(v438, 0, v440, v441, v442, v447, v460, 1, v463, v461, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v467, v451, v459, v462, v466, v464, 3, 7, 4, 8, 15, 2, 16, 9) -> f_798(v438, 0, v440, v441, v442, v447, v460, 1, v463, v461, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v467, v451, v459, v462, v466, v464, 3, 7, 4, 8, 15, 2, 16, 9) :|: TRUE
f_798(v438, 0, v440, v441, v442, v447, v460, 1, v463, v461, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v467, v451, v459, v462, v466, v464, 3, 7, 4, 8, 15, 2, 16, 9) -> f_773(v438, 0, v440, v441, v442, v447, v460, 1, v463, v461, v448, v452, v449, v453, v450, v454, v455, v456, v457, v458, v466, v464, v451, v459, v462, 3, 7, 4, 8, 15, 9, 2, 16) :|: TRUE
Combined rules. Obtained 8 rulesP rules:
f_295 -> f_314(v1:0, v3:0, v5:0, v7:0, 1, 0, 3 + v1:0, 3 + v3:0, 7 + v5:0, 3, 7, 4, 8) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 < 1
f_295 -> f_416(v1:0, v3:0, v5:0, 1, 0, v20:0, 3 + v1:0, 3 + v3:0, 7 + v5:0, 15 + v20:0, 8 + v20:0, 3, 7, 15, 4, 8, 16, 9) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v15:0 > 0 && v17:0 > 0 && v20:0 % 4 = 0 && v20:0 > 0 && v7:0 < 2 && v32:0 > 0 && v35:0 > 0 && v37:0 > 0
f_295 -> f_660(v7:0, v9:0, v11:0, v13:0, v15:0, v17:0, v20:0, 2, 1, v25:0, 1, v20:0, 8 + v25:0, v1:0, 3 + v1:0, v3:0, 3 + v3:0, v5:0, 7 + v5:0, 3 + v9:0, 7 + v11:0, 7 + v13:0, 7 + v15:0, 3 + v17:0, 15 + v20:0, 0, 3, 7, 15, 4, 8, 2, 9, 16) :|: v7:0 > 1 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v15:0 > 0 && v17:0 > 0 && v20:0 % 4 = 0 && v20:0 > 0 && v25:0 % 4 = 0 && v25:0 > 0
f_777(v438:0, 0, v440:0, v441:0, v442:0, v447:0, v460:0, 1, v443:0, v446:0, v448:0, v452:0, v449:0, v453:0, v450:0, v454:0, v455:0, v456:0, v457:0, v458:0, v444:0, v461:0, 1 + v465:0, v459:0, v462:0, 3, 7, 4, 8, 15, 9, 2, 16) -> f_777(v438:0, 0, v440:0, v441:0, v442:0, v461:0, v466:0, 1, v447:0, 8 + v447:0, v448:0, v452:0, v449:0, v453:0, v450:0, v454:0, v455:0, v456:0, v457:0, v458:0, v460:0, v464:0, 1 + v465:0, v459:0, v462:0, 3, 7, 4, 8, 15, 9, 2, 16) :|: v447:0 > 0 && v464:0 > 0 && v460:0 < 0
f_777(v438:0, 0, v440:0, v441:0, v442:0, v447:0, v460:0, 1, v443:0, v446:0, v448:0, v452:0, v449:0, v453:0, v450:0, v454:0, v455:0, v456:0, v457:0, v458:0, v444:0, v461:0, 1 + v465:0, v459:0, v462:0, 3, 7, 4, 8, 15, 9, 2, 16) -> f_777(v438:0, 0, v440:0, v441:0, v442:0, v461:0, v466:0, 1, v447:0, 8 + v447:0, v448:0, v452:0, v449:0, v453:0, v450:0, v454:0, v455:0, v456:0, v457:0, v458:0, v460:0, v464:0, 1 + v465:0, v459:0, v462:0, 3, 7, 4, 8, 15, 9, 2, 16) :|: v447:0 > 0 && v464:0 > 0 && v460:0 > 0
f_660(v296:0, v297:0, v298:0, v299:0, v300:0, v301:0, v302:0, 1 + v303:0, 1, v305:0, v303:0, v306:0, v307:0, v309:0, v313:0, v310:0, v314:0, v311:0, v315:0, v316:0, v317:0, v318:0, v319:0, v320:0, v321:0, 0, 3, 7, 15, 4, 8, 2, 9, 16) -> f_660(v296:0, v297:0, v298:0, v299:0, v300:0, v301:0, v302:0, 1 + (1 + v303:0), 1, v322:0, 1 + v303:0, v305:0, 8 + v322:0, v309:0, v313:0, v310:0, v314:0, v311:0, v315:0, v316:0, v317:0, v318:0, v319:0, v320:0, v321:0, 0, 3, 7, 15, 4, 8, 2, 9, 16) :|: v296:0 > 2 && v296:0 > 1 + v303:0 && v322:0 % 4 = 0 && v322:0 > 0 && v303:0 > 0
f_660(1 + v372:0, v297:0, v298:0, v299:0, v300:0, v301:0, v302:0, 1 + v372:0, 1, v305:0, 1 + v373:0, v306:0, v307:0, v309:0, v313:0, v310:0, v314:0, v311:0, v315:0, v316:0, v317:0, v318:0, v319:0, v320:0, v321:0, 0, 3, 7, 15, 4, 8, 2, 9, 16) -> f_777(v305:0, 0, v331:0, v335:0, v337:0, v306:0, v373:0, 1, v305:0, 8 + v305:0, v309:0, v313:0, v310:0, v314:0, v311:0, v315:0, 7 + v331:0, 3 + v335:0, 7 + v337:0, 15 + v305:0, 1 + v373:0, v371:0, 1 + v372:0, v459:0, v462:0, 3, 7, 4, 8, 15, 9, 2, 16) :|: v302:0 > 0 && 1 + v372:0 = 1 + (1 + v373:0) && v331:0 > 0 && v335:0 > 0 && v337:0 > 0 && v305:0 > 0 && v373:0 > -1 && v371:0 > 0
f_777(v438:0, 0, v440:0, v441:0, v442:0, v447:0, 0, 1, v443:0, v446:0, v448:0, v452:0, v449:0, v453:0, v450:0, v454:0, v455:0, v456:0, v457:0, v458:0, v444:0, v461:0, v451:0, v459:0, v462:0, 3, 7, 4, 8, 15, 9, 2, 16) -> f_797(v448:0, v449:0, v450:0, v451:0, 0, v438:0, v452:0, v453:0, v454:0, v458:0, v447:0, v444:0, v461:0, v459:0, v462:0, 3, 7, 4, 8, 15, 1, 2, 16, 9) :|: TRUE
Filtered unneeded arguments:
   f_777(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33) -> f_777(x6, x7, x22, x23)
   f_660(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34) -> f_660(x1, x7, x8, x10, x11, x12)
Removed division, modulo operations, cleaned up constraints. Obtained 10 rules.P rules:
f_295 -> f_314(v1:0, v3:0, v5:0, v7:0, 1, 0, 3 + v1:0, 3 + v3:0, 7 + v5:0, 3, 7, 4, 8) :|: v1:0 > 0 && v3:0 > 0 && v7:0 < 1 && v5:0 > 0
f_295 -> f_295' :|: TRUE
f_295' -> f_416(v1:0, v3:0, v5:0, 1, 0, v20:0, 3 + v1:0, 3 + v3:0, 7 + v5:0, 15 + v20:0, 8 + v20:0, 3, 7, 15, 4, 8, 16, 9) :|: v20:0 > 0 && v1:0 > 0 && v3:0 > 0 && v5:0 > 0 && v20:0 - 4 * div = 0 && v20:0 - 4 * div < 4 && v20:0 - 4 * div >= 0
f_295' -> f_660(v7:0, v20:0, 2, v25:0, 1, v20:0) :|: v20:0 > 0 && v25:0 > 0 && v20:0 - 4 * div = 0 && v7:0 > 1 && v25:0 - 4 * div1 = 0 && v20:0 - 4 * div >= 0 && v20:0 - 4 * div < 4 && v25:0 - 4 * div1 < 4 && v25:0 - 4 * div1 >= 0
f_777(v447:0, v460:0, v461:0, sum~cons_1~v465:0) -> f_777(v461:0, v466:0, v464:0, 1 + v465:0) :|: v464:0 > 0 && v460:0 < 0 && v447:0 > 0 && sum~cons_1~v465:0 = 1 + v465:0
f_777(v447:0, v460:0, v461:0, sum~cons_1~v465:0) -> f_777(v461:0, v466:0, v464:0, 1 + v465:0) :|: v464:0 > 0 && v460:0 > 0 && v447:0 > 0 && sum~cons_1~v465:0 = 1 + v465:0
f_660(v296:0, v302:0, sum~cons_1~v303:0, v305:0, v303:0, v306:0) -> f_660'(v296:0, v302:0, 1 + v303:0, v305:0, v303:0, v306:0) :|: v296:0 > 1 + v303:0 && v296:0 > 2 && v322:0 - 4 * div = 0 && v303:0 > 0 && v322:0 > 0 && sum~cons_1~v303:0 = 1 + v303:0
f_660'(v296:0, v302:0, sum~cons_1~v303:0, v305:0, v303:0, v306:0) -> f_660(v296:0, v302:0, 1 + (1 + v303:0), v322:0, 1 + v303:0, v305:0) :|: v322:0 > 0 && v296:0 > 1 + v303:0 && v296:0 > 2 && v322:0 - 4 * div = 0 && v303:0 > 0 && v322:0 - 4 * div < 4 && v322:0 - 4 * div >= 0 && sum~cons_1~v303:0 = 1 + v303:0
f_660(sum~cons_1~v372:0, v302:0, sum~cons_1~v372:01, v305:0, sum~cons_1~v373:0, v306:0) -> f_777(v306:0, v373:0, v371:0, 1 + v372:0) :|: 1 + v372:0 = 1 + (1 + v373:0) && v302:0 > 0 && v305:0 > 0 && v371:0 > 0 && v373:0 > -1 && sum~cons_1~v372:0 = 1 + v372:0 && sum~cons_1~v372:01 = 1 + v372:0 && sum~cons_1~v373:0 = 1 + v373:0
f_777(v447:0, cons_0, v461:0, v451:0) -> f_797(v448:0, v449:0, v450:0, v451:0, 0, v438:0, v452:0, v453:0, v454:0, v458:0, v447:0, v444:0, v461:0, v459:0, v462:0, 3, 7, 4, 8, 15, 1, 2, 16, 9) :|: TRUE && cons_0 = 0

----------------------------------------

(34)
Obligation:
Rules:
f_295 -> f_314(v1:0, v3:0, v5:0, v7:0, 1, 0, 3 + v1:0, 3 + v3:0, 7 + v5:0, 3, 7, 4, 8) :|: v1:0 > 0 && v3:0 > 0 && v7:0 < 1 && v5:0 > 0
f_295 -> f_295' :|: TRUE
f_295' -> f_416(x, x1, x2, 1, 0, x3, 3 + x, 3 + x1, 7 + x2, 15 + x3, 8 + x3, 3, 7, 15, 4, 8, 16, 9) :|: x3 > 0 && x > 0 && x1 > 0 && x2 > 0 && x3 - 4 * x4 = 0 && x3 - 4 * x4 < 4 && x3 - 4 * x4 >= 0
f_295' -> f_660(x5, x6, 2, x7, 1, x6) :|: x6 > 0 && x7 > 0 && x6 - 4 * x8 = 0 && x5 > 1 && x7 - 4 * x9 = 0 && x6 - 4 * x8 >= 0 && x6 - 4 * x8 < 4 && x7 - 4 * x9 < 4 && x7 - 4 * x9 >= 0
f_777(v447:0, v460:0, v461:0, sum~cons_1~v465:0) -> f_777(v461:0, v466:0, v464:0, 1 + v465:0) :|: v464:0 > 0 && v460:0 < 0 && v447:0 > 0 && sum~cons_1~v465:0 = 1 + v465:0
f_777(x10, x11, x12, x13) -> f_777(x12, x14, x15, 1 + x16) :|: x15 > 0 && x11 > 0 && x10 > 0 && x13 = 1 + x16
f_660(x17, x18, x19, x20, x21, x22) -> f_660'(x17, x18, 1 + x21, x20, x21, x22) :|: x17 > 1 + x21 && x17 > 2 && x23 - 4 * x24 = 0 && x21 > 0 && x23 > 0 && x19 = 1 + x21
f_660'(x25, x26, x27, x28, x29, x30) -> f_660(x25, x26, 1 + (1 + x29), x31, 1 + x29, x28) :|: x31 > 0 && x25 > 1 + x29 && x25 > 2 && x31 - 4 * x32 = 0 && x29 > 0 && x31 - 4 * x32 < 4 && x31 - 4 * x32 >= 0 && x27 = 1 + x29
f_660(sum~cons_1~v372:0, v302:0, sum~cons_1~v372:01, v305:0, sum~cons_1~v373:0, v306:0) -> f_777(v306:0, v373:0, v371:0, 1 + v372:0) :|: 1 + v372:0 = 1 + (1 + v373:0) && v302:0 > 0 && v305:0 > 0 && v371:0 > 0 && v373:0 > -1 && sum~cons_1~v372:0 = 1 + v372:0 && sum~cons_1~v372:01 = 1 + v372:0 && sum~cons_1~v373:0 = 1 + v373:0
f_777(x33, x34, x35, x36) -> f_797(x37, x38, x39, x36, 0, x40, x41, x42, x43, x44, x33, x45, x35, x46, x47, 3, 7, 4, 8, 15, 1, 2, 16, 9) :|: TRUE && x34 = 0
Start term: f_295

----------------------------------------

(35) IRSNoOverapproximation (EQUIVALENT)
Proof of non-termination is aborted since the IRSProblem over-approximates
----------------------------------------

(36)
MAYBE
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.0s
