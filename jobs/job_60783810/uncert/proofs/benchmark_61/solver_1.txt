YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/3mZhj.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could be proven:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 18 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 6345 ms]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) LLVM Symbolic Execution SCC
        (8) SCC2IRS [SOUND, 141 ms]
        (9) IntTRS
        (10) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (11) IntTRS
        (12) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (13) IntTRS
        (14) TerminationGraphProcessor [EQUIVALENT, 1 ms]
        (15) IntTRS
        (16) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (17) IntTRS
        (18) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
        (19) IntTRS
        (20) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (21) YES
    (22) LLVM Symbolic Execution SCC
        (23) SCC2IRS [SOUND, 114 ms]
        (24) IntTRS
        (25) IntTRSCompressionProof [EQUIVALENT, 1 ms]
        (26) IntTRS
        (27) PolynomialOrderProcessor [EQUIVALENT, 5 ms]
        (28) YES
    (29) LLVM Symbolic Execution SCC
        (30) SCC2IRS [SOUND, 76 ms]
        (31) IntTRS
        (32) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (33) IntTRS
        (34) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
        (35) IntTRS
        (36) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (37) YES


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/3mZhj.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/3mZhj.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "cstrpbrk" linkageType: EXTERNALLY_VISIBLE returnParam: *i8 parameters: (0 *i8, 1 *i8) variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 10
	0:
		%3 = alloca *i8, align 8
		%4 = alloca *i8, align 8
		%5 = alloca *i8, align 8
		%6 = alloca *i8, align 8
		%7 = alloca *i8, align 8
		%8 = alloca i32, align 4
		store %0, %4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %4)
		store %1, %5
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %5)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %6)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %7)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %8)
		%9 = load %4
		store %9, %6
		br %10
	10:
		%11 = load %6
		%12 = load %11
		%13 = sext i8 %12 to i32
		%14 = icmp ne %13 0
		br %14, %15, %50
	15:
		%16 = load %5
		store %16, %7
		%17 = load %6
		%18 = load %17
		%19 = sext i8 %18 to i32
		store %19, %8
		br %20
	20:
		%21 = load %7
		%22 = load %21
		%23 = sext i8 %22 to i32
		%24 = icmp ne %23 0
		br %24, %25, %33
	25:
		%26 = load %7
		%27 = load %26
		%28 = sext i8 %27 to i32
		%29 = load %8
		%30 = trunc i32 %29 to i8
		%31 = sext i8 %30 to i32
		%32 = icmp ne %28 %31
		br %33
	33:
		%34 = phi [0, %20], [%32, %25]
		br %34, %35, %38
	35:
		%36 = load %7
		%37 = getelementptr %36, 1
		store %37, %7
		br %20
	38:
		%39 = load %7
		%40 = load %39
		%41 = sext i8 %40 to i32
		%42 = load %8
		%43 = icmp ne %41 %42
		br %43, %44, %46
	44:
		%45 = load %6
		store %45, %3
		br %51
	46:
		br %47
	47:
		%48 = load %6
		%49 = getelementptr %48, 1
		store %49, %6
		br %10
	50:
		store null, %3
		br %51
	51:
		%52 = load %3
		ret %52

*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 70
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		%3 = alloca i32, align 4
		%4 = alloca *i8, align 8
		%5 = alloca *i8, align 8
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		%6 = call i32 @__VERIFIER_nondet_int()
		store %6, %2
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		%7 = call i32 @__VERIFIER_nondet_int()
		store %7, %3
		%8 = load %2
		%9 = icmp slt %8 1
		br %9, %10, %11
	10:
		store 1, %2
		br %11
	11:
		%12 = load %3
		%13 = icmp slt %12 1
		br %13, %14, %15
	14:
		store 1, %3
		br %15
	15:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %4)
		%16 = load %2
		%17 = sext i32 %16 to i64
		%18 = mul i64 %17, 1
		%19 = alloca i8, numElementsLit: %18, align 16
		store %19, %4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %5)
		%20 = load %3
		%21 = sext i32 %20 to i64
		%22 = mul i64 %21, 1
		%23 = alloca i8, numElementsLit: %22, align 16
		store %23, %5
		%24 = load %4
		%25 = load %2
		%26 = sub i32 %25, 1
		%27 = sext i32 %26 to i64
		%28 = getelementptr %24, %27
		store 0, %28
		%29 = load %5
		%30 = load %3
		%31 = sub i32 %30, 1
		%32 = sext i32 %31 to i64
		%33 = getelementptr %29, %32
		store 0, %33
		%34 = load %4
		%35 = load %5
		%36 = call *i8 @cstrpbrk(*i8 %34, *i8 %35)
		ret 0


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 3 SCCs.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC
----------------------------------------

(8) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 72 rulesP rules:
f_1530(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12232, v12231, v12233, v12234, v12235, 0, v12237, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12244, v12245, v12246, v12248, 3, 7, 2, 4, 8) -> f_1533(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12292, v12232, v12231, v12233, v12234, v12235, 0, v12237, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12244, v12245, v12246, v12248, 3, 7, 2, 4, 8) :|: TRUE
f_1533(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12292, v12232, v12231, v12233, v12234, v12235, 0, v12237, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12244, v12245, v12246, v12248, 3, 7, 2, 4, 8) -> f_1536(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12292, v12231, v12232, v12233, v12234, v12235, 0, v12237, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12244, v12245, v12246, v12248, 3, 7, 2, 4, 8) :|: 0 = 0
f_1536(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12292, v12231, v12232, v12233, v12234, v12235, 0, v12237, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12244, v12245, v12246, v12248, 3, 7, 2, 4, 8) -> f_1539(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12292, v12231, v12232, v12233, v12234, v12235, 0, v12237, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12244, v12245, v12246, v12248, 3, 7, 2, 4, 8) :|: v12292 != 0 && v12238 < v12249 && 3 <= v12249
f_1539(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12292, v12231, v12232, v12233, v12234, v12235, 0, v12237, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12244, v12245, v12246, v12248, 3, 7, 2, 4, 8) -> f_1543(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12292, v12231, v12232, v12233, v12234, v12235, 0, v12237, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12244, v12245, v12246, v12248, 3, 7, 2, 4, 8) :|: 0 = 0
f_1543(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12292, v12231, v12232, v12233, v12234, v12235, 0, v12237, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12244, v12245, v12246, v12248, 3, 7, 2, 4, 8) -> f_1547(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12292, v12231, v12232, v12233, v12234, v12235, 0, v12237, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12244, v12245, v12246, v12248, 3, 7, 2, 4, 8) :|: TRUE
f_1547(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12292, v12231, v12232, v12233, v12234, v12235, 0, v12237, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12244, v12245, v12246, v12248, 3, 7, 2, 4, 8) -> f_1551(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12292, v12232, v12233, v12234, v12235, 0, v12237, v12231, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12244, v12245, v12246, v12248, 3, 7, 2, 4, 8) :|: 0 = 0
f_1551(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12292, v12232, v12233, v12234, v12235, 0, v12237, v12231, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12244, v12245, v12246, v12248, 3, 7, 2, 4, 8) -> f_1555(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12292, v12232, v12233, v12234, v12235, 0, v12237, v12231, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12244, v12245, v12246, v12248, 3, 7, 2, 4, 8) :|: 0 = 0
f_1555(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12292, v12232, v12233, v12234, v12235, 0, v12237, v12231, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12244, v12245, v12246, v12248, 3, 7, 2, 4, 8) -> f_1560(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12292, v12233, v12234, v12235, 0, v12237, v12231, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12232, v12244, v12245, v12246, v12248, 3, 7, 2, 4, 8) :|: 0 = 0
f_1560(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12292, v12233, v12234, v12235, 0, v12237, v12231, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12232, v12244, v12245, v12246, v12248, 3, 7, 2, 4, 8) -> f_1563(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12292, v12233, v12234, v12235, 0, v12237, v12231, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12232, v12244, v12245, v12246, v12248, 3, 7, 2, 4, 8) :|: 0 = 0
f_1563(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12292, v12233, v12234, v12235, 0, v12237, v12231, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12232, v12244, v12245, v12246, v12248, 3, 7, 2, 4, 8) -> f_1566(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12292, v12872, v12233, v12234, v12235, 0, v12237, v12231, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12232, v12244, v12245, v12246, v12248, 3, 7, 2, 4, 8) :|: TRUE
f_1566(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12292, v12872, v12233, v12234, v12235, 0, v12237, v12231, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12232, v12244, v12245, v12246, v12248, 3, 7, 2, 4, 8) -> f_1569(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12292, v12872, v12234, v12235, 0, v12237, v12231, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12232, v12244, v12245, v12246, v12248, 3, 7, 2, 4, 8) :|: 0 = 0
f_1569(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12292, v12872, v12234, v12235, 0, v12237, v12231, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12232, v12244, v12245, v12246, v12248, 3, 7, 2, 4, 8) -> f_1573(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12292, v12872, v12234, v12235, 0, v12237, v12231, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12232, v12244, v12245, v12246, v12248, 3, 7, 2, 4, 8) :|: v12292 != v12872
f_1569(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12292, v12872, v12234, v12235, 0, v12237, v12231, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12232, v12244, v12245, v12246, v12248, 3, 7, 2, 4, 8) -> f_1574(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12872, v12234, v12235, 0, v12237, v12231, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12232, v12244, v12245, v12246, v12248, 3, 7, 2, 4, 8) :|: v12292 = v12872
f_1573(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12292, v12872, v12234, v12235, 0, v12237, v12231, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12232, v12244, v12245, v12246, v12248, 3, 7, 2, 4, 8) -> f_1578(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12292, v12872, v12234, v12235, 0, v12237, v12231, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12232, v12244, v12245, v12246, v12248, 3, 7, 2, 4, 8) :|: 0 = 0
f_1578(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12292, v12872, v12234, v12235, 0, v12237, v12231, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12232, v12244, v12245, v12246, v12248, 3, 7, 2, 4, 8) -> f_1583(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12292, v12872, v12234, v12235, 0, v12237, v12231, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12232, v12244, v12245, v12246, v12248, 3, 7, 2, 4, 8) :|: 0 = 0
f_1583(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12292, v12872, v12234, v12235, 0, v12237, v12231, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12232, v12244, v12245, v12246, v12248, 3, 7, 2, 4, 8) -> f_1690(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12292, v12872, v12234, v12235, 0, v12237, v12231, v12238, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12292, v12232, v12244, v12245, v15123, v15125, 3, 7, 2, 4, 8) :|: TRUE
f_1690(v15096, v15097, v15098, v15099, v15100, v15101, v15102, v15103, v15104, v15105, 1, v15107, v15108, v15109, v15110, v15111, 0, v15113, v15114, v15115, v15116, v15127, v15117, v15128, v15118, v15129, v15119, v15130, v15120, v15131, v15124, v15126, v15132, v15133, v15134, v15135, v15136, v15137, v15138, v15139, v15140, v15141, v15121, v15122, v15123, v15125, 3, 7, 2, 4, 8) -> f_1693(v15096, v15097, v15098, v15099, v15100, v15101, v15102, v15103, v15104, v15105, 1, v15107, v15108, v15109, v15110, v15111, 0, v15113, v15114, v15115, v15116, v15127, v15117, v15128, v15118, v15129, v15119, v15130, v15120, v15131, v15124, v15126, v15132, v15133, v15134, v15135, v15136, v15137, v15138, v15139, v15140, v15141, v15121, v15122, v15123, v15125, 3, 7, 2, 4, 8) :|: TRUE
f_1693(v15096, v15097, v15098, v15099, v15100, v15101, v15102, v15103, v15104, v15105, 1, v15107, v15108, v15109, v15110, v15111, 0, v15113, v15114, v15115, v15116, v15127, v15117, v15128, v15118, v15129, v15119, v15130, v15120, v15131, v15124, v15126, v15132, v15133, v15134, v15135, v15136, v15137, v15138, v15139, v15140, v15141, v15121, v15122, v15123, v15125, 3, 7, 2, 4, 8) -> f_1695(v15096, v15097, v15098, v15099, v15100, v15101, v15102, v15103, v15104, v15105, 1, v15107, v15108, v15109, v15110, v15111, 0, v15113, v15115, v15116, v15127, v15117, v15128, v15118, v15129, v15119, v15130, v15120, v15131, v15124, v15126, v15132, v15133, v15134, v15135, v15136, v15137, v15138, v15139, v15140, v15114, v15141, v15121, v15122, v15123, v15125, 3, 7, 2, 4, 8) :|: 0 = 0
f_1695(v15096, v15097, v15098, v15099, v15100, v15101, v15102, v15103, v15104, v15105, 1, v15107, v15108, v15109, v15110, v15111, 0, v15113, v15115, v15116, v15127, v15117, v15128, v15118, v15129, v15119, v15130, v15120, v15131, v15124, v15126, v15132, v15133, v15134, v15135, v15136, v15137, v15138, v15139, v15140, v15114, v15141, v15121, v15122, v15123, v15125, 3, 7, 2, 4, 8) -> f_1697(v15096, v15097, v15098, v15099, v15100, v15101, v15102, v15103, v15104, v15105, 1, v15107, v15108, v15109, v15110, v15111, 0, v15113, v15418, v15116, v15127, v15117, v15128, v15118, v15129, v15119, v15130, v15120, v15131, v15124, v15126, v15132, v15133, v15134, v15135, v15136, v15137, v15138, v15139, v15115, v15140, v15114, v15141, v15121, v15122, v15123, v15125, 3, 7, 2, 4, 8) :|: v15418 = 1 + v15107 && 2 <= v15418
f_1697(v15096, v15097, v15098, v15099, v15100, v15101, v15102, v15103, v15104, v15105, 1, v15107, v15108, v15109, v15110, v15111, 0, v15113, v15418, v15116, v15127, v15117, v15128, v15118, v15129, v15119, v15130, v15120, v15131, v15124, v15126, v15132, v15133, v15134, v15135, v15136, v15137, v15138, v15139, v15115, v15140, v15114, v15141, v15121, v15122, v15123, v15125, 3, 7, 2, 4, 8) -> f_1699(v15096, v15097, v15098, v15099, v15100, v15101, v15102, v15103, v15104, v15105, 1, v15107, v15108, v15109, v15110, v15111, 0, v15113, v15418, v15116, v15127, v15117, v15128, v15118, v15129, v15119, v15130, v15120, v15131, v15124, v15126, v15132, v15133, v15134, v15135, v15136, v15137, v15138, v15139, v15115, v15140, v15114, v15141, v15121, v15122, v15123, v15125, 3, 7, 2, 4, 8) :|: TRUE
f_1699(v15096, v15097, v15098, v15099, v15100, v15101, v15102, v15103, v15104, v15105, 1, v15107, v15108, v15109, v15110, v15111, 0, v15113, v15418, v15116, v15127, v15117, v15128, v15118, v15129, v15119, v15130, v15120, v15131, v15124, v15126, v15132, v15133, v15134, v15135, v15136, v15137, v15138, v15139, v15115, v15140, v15114, v15141, v15121, v15122, v15123, v15125, 3, 7, 2, 4, 8) -> f_1701(v15096, v15097, v15098, v15099, v15100, v15101, v15102, v15103, v15104, v15105, 1, v15107, v15108, v15109, v15110, v15111, 0, v15113, v15418, v15116, v15127, v15117, v15128, v15118, v15129, v15119, v15130, v15120, v15131, v15124, v15126, v15132, v15133, v15134, v15135, v15136, v15137, v15138, v15139, v15115, v15140, v15114, v15141, v15121, v15122, v15123, v15125, 3, 7, 2, 4, 8) :|: TRUE
f_1701(v15096, v15097, v15098, v15099, v15100, v15101, v15102, v15103, v15104, v15105, 1, v15107, v15108, v15109, v15110, v15111, 0, v15113, v15418, v15116, v15127, v15117, v15128, v15118, v15129, v15119, v15130, v15120, v15131, v15124, v15126, v15132, v15133, v15134, v15135, v15136, v15137, v15138, v15139, v15115, v15140, v15114, v15141, v15121, v15122, v15123, v15125, 3, 7, 2, 4, 8) -> f_1528(v15096, v15097, v15098, v15099, v15100, v15101, v15102, v15103, v15104, v15105, 1, v15107, v15108, v15109, v15110, v15111, 0, v15113, v15418, v15116, v15127, v15117, v15128, v15118, v15129, v15119, v15130, v15120, v15131, v15124, v15126, v15132, v15133, v15134, v15135, v15136, v15137, v15138, v15139, v15121, v15122, v12246, v12248, 3, 7, 2, 4, 8) :|: TRUE
f_1528(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12231, v12232, v12233, v12234, v12235, 0, v12237, v12238, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12244, v12245, v12246, v12248, 3, 7, 2, 4, 8) -> f_1530(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12232, v12231, v12233, v12234, v12235, 0, v12237, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12244, v12245, v12246, v12248, 3, 7, 2, 4, 8) :|: 0 = 0
f_1574(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12872, v12234, v12235, 0, v12237, v12231, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12232, v12244, v12245, v12246, v12248, 3, 7, 2, 4, 8) -> f_1579(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12872, 0, v12234, v12235, v12237, v12231, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12232, v12244, v12245, v12246, v12248, 3, 7, 2, 4, 8) :|: 0 = 0
f_1579(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12872, 0, v12234, v12235, v12237, v12231, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12232, v12244, v12245, v12246, v12248, 3, 7, 2, 4, 8) -> f_1584(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12872, 0, v12234, v12235, v12237, v12231, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12232, v12244, v12245, v12246, v12248, 3, 7, 2, 4, 8) :|: 0 = 0
f_1584(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12872, 0, v12234, v12235, v12237, v12231, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12232, v12244, v12245, v12246, v12248, 3, 7, 2, 4, 8) -> f_1692(v12220, v12221, v12222, v12223, v12224, v12225, v12226, v12227, v12228, v12229, 1, v12238, v12872, 0, v12234, v12235, v12237, v12231, v12238, v12239, v12250, v12240, v12251, v12241, v12252, v12242, v12253, v12243, v12254, v12247, v12249, v12255, v12256, v12257, v12258, v12259, v12260, v12261, v12262, v12872, v12232, v12244, v12245, v15305, v15307, 3, 7, 2, 4, 8) :|: TRUE
f_1692(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15287, v15288, 1, v15290, v15291, 0, v15293, v15294, v15295, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) -> f_1694(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15287, v15288, 1, v15290, v15291, 0, v15293, v15294, v15295, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) :|: TRUE
f_1694(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15287, v15288, 1, v15290, v15291, 0, v15293, v15294, v15295, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) -> f_1696(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15287, v15288, 1, v15290, v15291, 0, v15294, v15295, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) :|: 0 = 0
f_1696(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15287, v15288, 1, v15290, v15291, 0, v15294, v15295, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) -> f_1698(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15287, v15288, 1, v15290, v15291, 0, v15294, v15295, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) :|: 0 = 0
f_1698(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15287, v15288, 1, v15290, v15291, 0, v15294, v15295, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) -> f_1700(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15287, v15288, 1, v15290, v15291, 0, v15294, v15295, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) :|: 0 = 0
f_1700(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15287, v15288, 1, v15290, v15291, 0, v15294, v15295, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) -> f_1702(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15287, v15288, 1, v15290, v15291, 0, v15295, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) :|: 0 = 0
f_1702(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15287, v15288, 1, v15290, v15291, 0, v15295, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) -> f_1704(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15287, v15288, 1, v15290, 0, v15295, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) :|: v15291 = v15288
f_1704(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15287, v15288, 1, v15290, 0, v15295, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) -> f_1706(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15287, v15288, 1, v15290, 0, v15295, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) :|: 0 = 0
f_1706(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15287, v15288, 1, v15290, 0, v15295, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) -> f_1708(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15287, v15288, 1, v15290, 0, v15295, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) :|: TRUE
f_1708(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15287, v15288, 1, v15290, 0, v15295, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) -> f_1710(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15287, v15288, 1, v15290, 0, v15295, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) :|: TRUE
f_1710(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15287, v15288, 1, v15290, 0, v15295, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) -> f_1712(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15287, v15288, 1, v15290, 0, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15295, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) :|: 0 = 0
f_1712(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15287, v15288, 1, v15290, 0, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15295, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) -> f_1714(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15287, v15288, 1, v15290, 0, v15771, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15295, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) :|: v15771 = 1 + v15287 && 3 <= v15771
f_1714(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15287, v15288, 1, v15290, 0, v15771, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15295, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) -> f_1716(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15287, v15288, 1, v15290, 0, v15771, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15295, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) :|: TRUE
f_1716(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15287, v15288, 1, v15290, 0, v15771, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15295, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) -> f_1718(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15287, v15288, 1, v15290, 0, v15771, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15295, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) :|: TRUE
f_1718(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15287, v15288, 1, v15290, 0, v15771, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15295, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) -> f_1719(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15771, v15288, 1, v15287, v15290, 0, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15295, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) :|: 0 = 0
f_1719(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15771, v15288, 1, v15287, v15290, 0, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15295, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) -> f_1720(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15771, v15840, v15288, 1, v15287, v15290, 0, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15295, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) :|: TRUE
f_1720(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15771, v15840, v15288, 1, v15287, v15290, 0, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15295, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) -> f_1721(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15771, v15840, 1, v15287, v15288, v15290, 0, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15295, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) :|: 0 = 0
f_1721(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15771, v15840, 1, v15287, v15288, v15290, 0, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15295, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) -> f_1722(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15771, v15840, 1, v15287, v15288, v15290, 0, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15295, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) :|: v15840 != 0 && v15771 < v15306 && 4 <= v15306
f_1722(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15771, v15840, 1, v15287, v15288, v15290, 0, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15295, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) -> f_1724(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15771, v15840, 1, v15287, v15288, v15290, 0, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15295, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) :|: 0 = 0
f_1724(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15771, v15840, 1, v15287, v15288, v15290, 0, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15295, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) -> f_1726(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15771, v15840, 1, v15287, v15288, v15290, 0, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15295, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) :|: TRUE
f_1726(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15771, v15840, 1, v15287, v15288, v15290, 0, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15295, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) -> f_1728(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15771, v15840, 1, v15287, v15288, v15290, 0, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15295, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) :|: 0 = 0
f_1728(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15771, v15840, 1, v15287, v15288, v15290, 0, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15295, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) -> f_1730(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15771, v15840, 1, v15287, v15288, v15290, 0, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15295, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) :|: TRUE
f_1730(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15771, v15840, 1, v15287, v15288, v15290, 0, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15295, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) -> f_1732(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15771, v15840, 1, v15288, v15290, 0, v15287, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15295, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) :|: 0 = 0
f_1732(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15771, v15840, 1, v15288, v15290, 0, v15287, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15295, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) -> f_1734(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15771, v15840, 1, v15288, v15290, 0, v15287, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15295, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) :|: 0 = 0
f_1734(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15771, v15840, 1, v15288, v15290, 0, v15287, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15295, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) -> f_1736(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15771, v15840, 1, v15290, v15288, 0, v15287, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15295, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) :|: 0 = 0
f_1736(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15771, v15840, 1, v15290, v15288, 0, v15287, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15295, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) -> f_1737(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15771, v15840, 1, v15290, v15288, 0, v15287, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15295, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) :|: TRUE
f_1737(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15771, v15840, 1, v15290, v15288, 0, v15287, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15295, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) -> f_1738(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15771, v15840, 1, v15290, v15288, 0, v15287, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15295, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) :|: TRUE
f_1738(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15771, v15840, 1, v15290, v15288, 0, v15287, v15296, v15297, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15322, v15293, v15294, v15295, v15323, v15303, v15304, v15305, v15307, 3, 7, 2, 4, 8) -> f_1673(v15279, v15280, v15281, v15282, v15283, v15284, v15285, v15286, v15771, v15840, 1, v15290, v15288, 0, v15296, v15297, v15287, v15298, v15309, v15299, v15310, v15300, v15311, v15301, v15312, v15302, v15313, v15306, v15308, v15314, v15315, v15316, v15317, v15318, v15319, v15320, v15321, v15323, v15322, v15303, v15304, v14869, v14871, 3, 7, 2, 4, 8) :|: TRUE
f_1673(v14845, v14846, v14847, v14848, v14849, v14850, v14851, v14852, v14853, v14854, 1, v14856, v14857, 0, v14859, v14860, v14861, v14862, v14873, v14863, v14874, v14864, v14875, v14865, v14876, v14866, v14877, v14870, v14872, v14878, v14879, v14880, v14881, v14882, v14883, v14884, v14885, v14886, v14887, v14867, v14868, v14869, v14871, 3, 7, 2, 4, 8) -> f_1674(v14845, v14846, v14847, v14848, v14849, v14850, v14851, v14852, v14853, v14854, 1, v14857, v14856, 0, v14859, v14860, v14861, v14862, v14873, v14863, v14874, v14864, v14875, v14865, v14876, v14866, v14877, v14870, v14872, v14878, v14879, v14880, v14881, v14882, v14883, v14884, v14885, v14886, v14887, v14867, v14868, v14869, v14871, 3, 7, 2, 4, 8) :|: 0 = 0
f_1674(v14845, v14846, v14847, v14848, v14849, v14850, v14851, v14852, v14853, v14854, 1, v14857, v14856, 0, v14859, v14860, v14861, v14862, v14873, v14863, v14874, v14864, v14875, v14865, v14876, v14866, v14877, v14870, v14872, v14878, v14879, v14880, v14881, v14882, v14883, v14884, v14885, v14886, v14887, v14867, v14868, v14869, v14871, 3, 7, 2, 4, 8) -> f_1675(v14845, v14846, v14847, v14848, v14849, v14850, v14851, v14852, v14853, v14854, 1, v14885, v14857, v14856, 0, v14859, v14860, v14861, v14862, v14873, v14863, v14874, v14864, v14875, v14865, v14876, v14866, v14877, v14870, v14872, v14878, v14879, v14880, v14881, v14882, v14883, v14884, v14886, v14887, v14867, v14868, v14869, v14871, 3, 7, 2, 4, 8) :|: 0 = 0
f_1675(v14845, v14846, v14847, v14848, v14849, v14850, v14851, v14852, v14853, v14854, 1, v14885, v14857, v14856, 0, v14859, v14860, v14861, v14862, v14873, v14863, v14874, v14864, v14875, v14865, v14876, v14866, v14877, v14870, v14872, v14878, v14879, v14880, v14881, v14882, v14883, v14884, v14886, v14887, v14867, v14868, v14869, v14871, 3, 7, 2, 4, 8) -> f_1676(v14845, v14846, v14847, v14848, v14849, v14850, v14851, v14852, v14853, v14854, 1, v14885, v14856, v14857, 0, v14859, v14860, v14861, v14862, v14873, v14863, v14874, v14864, v14875, v14865, v14876, v14866, v14877, v14870, v14872, v14878, v14879, v14880, v14881, v14882, v14883, v14884, v14886, v14887, v14867, v14868, v14869, v14871, 3, 7, 2, 4, 8) :|: 0 = 0
f_1676(v14845, v14846, v14847, v14848, v14849, v14850, v14851, v14852, v14853, v14854, 1, v14885, v14856, v14857, 0, v14859, v14860, v14861, v14862, v14873, v14863, v14874, v14864, v14875, v14865, v14876, v14866, v14877, v14870, v14872, v14878, v14879, v14880, v14881, v14882, v14883, v14884, v14886, v14887, v14867, v14868, v14869, v14871, 3, 7, 2, 4, 8) -> f_1677(v14845, v14846, v14847, v14848, v14849, v14850, v14851, v14852, v14853, v14854, 1, v14885, v14856, v14857, 0, v14859, v14860, v14861, v14862, v14873, v14863, v14874, v14864, v14875, v14865, v14876, v14866, v14877, v14870, v14872, v14878, v14879, v14880, v14881, v14882, v14883, v14884, v14886, v14887, v14867, v14868, v14869, v14871, 3, 7, 2, 4, 8) :|: 0 = 0
f_1677(v14845, v14846, v14847, v14848, v14849, v14850, v14851, v14852, v14853, v14854, 1, v14885, v14856, v14857, 0, v14859, v14860, v14861, v14862, v14873, v14863, v14874, v14864, v14875, v14865, v14876, v14866, v14877, v14870, v14872, v14878, v14879, v14880, v14881, v14882, v14883, v14884, v14886, v14887, v14867, v14868, v14869, v14871, 3, 7, 2, 4, 8) -> f_1678(v14845, v14846, v14847, v14848, v14849, v14850, v14851, v14852, v14853, v14854, 1, v14885, v14856, v14857, 0, v14859, v14860, v14861, v14862, v14873, v14863, v14874, v14864, v14875, v14865, v14876, v14866, v14877, v14870, v14872, v14878, v14879, v14880, v14881, v14882, v14883, v14884, v14886, v14887, v14867, v14868, v14869, v14871, 3, 7, 2, 4, 8) :|: TRUE
f_1678(v14845, v14846, v14847, v14848, v14849, v14850, v14851, v14852, v14853, v14854, 1, v14885, v14856, v14857, 0, v14859, v14860, v14861, v14862, v14873, v14863, v14874, v14864, v14875, v14865, v14876, v14866, v14877, v14870, v14872, v14878, v14879, v14880, v14881, v14882, v14883, v14884, v14886, v14887, v14867, v14868, v14869, v14871, 3, 7, 2, 4, 8) -> f_1679(v14845, v14846, v14847, v14848, v14849, v14850, v14851, v14852, v14853, v14854, 1, v14885, v14857, 0, v14859, v14860, v14856, v14861, v14862, v14873, v14863, v14874, v14864, v14875, v14865, v14876, v14866, v14877, v14870, v14872, v14878, v14879, v14880, v14881, v14882, v14883, v14884, v14886, v14887, v14867, v14868, v14869, v14871, 3, 7, 2, 4, 8) :|: 0 = 0
f_1679(v14845, v14846, v14847, v14848, v14849, v14850, v14851, v14852, v14853, v14854, 1, v14885, v14857, 0, v14859, v14860, v14856, v14861, v14862, v14873, v14863, v14874, v14864, v14875, v14865, v14876, v14866, v14877, v14870, v14872, v14878, v14879, v14880, v14881, v14882, v14883, v14884, v14886, v14887, v14867, v14868, v14869, v14871, 3, 7, 2, 4, 8) -> f_1680(v14845, v14846, v14847, v14848, v14849, v14850, v14851, v14852, v14853, v14854, 1, v14885, v14857, 0, v14859, v14860, v14856, v14861, v14862, v14873, v14863, v14874, v14864, v14875, v14865, v14876, v14866, v14877, v14870, v14872, v14878, v14879, v14880, v14881, v14882, v14883, v14884, v14886, v14887, v14867, v14868, v14869, v14871, 3, 7, 2, 4, 8) :|: 0 = 0
f_1680(v14845, v14846, v14847, v14848, v14849, v14850, v14851, v14852, v14853, v14854, 1, v14885, v14857, 0, v14859, v14860, v14856, v14861, v14862, v14873, v14863, v14874, v14864, v14875, v14865, v14876, v14866, v14877, v14870, v14872, v14878, v14879, v14880, v14881, v14882, v14883, v14884, v14886, v14887, v14867, v14868, v14869, v14871, 3, 7, 2, 4, 8) -> f_1681(v14845, v14846, v14847, v14848, v14849, v14850, v14851, v14852, v14853, v14854, 1, v14885, v14857, 0, v14859, v14860, v14856, v14861, v14862, v14873, v14863, v14874, v14864, v14875, v14865, v14876, v14866, v14877, v14870, v14872, v14878, v14879, v14880, v14881, v14882, v14883, v14884, v14886, v14887, v14867, v14868, v14869, v14871, 3, 7, 2, 4, 8) :|: 0 = 0
f_1681(v14845, v14846, v14847, v14848, v14849, v14850, v14851, v14852, v14853, v14854, 1, v14885, v14857, 0, v14859, v14860, v14856, v14861, v14862, v14873, v14863, v14874, v14864, v14875, v14865, v14876, v14866, v14877, v14870, v14872, v14878, v14879, v14880, v14881, v14882, v14883, v14884, v14886, v14887, v14867, v14868, v14869, v14871, 3, 7, 2, 4, 8) -> f_1682(v14845, v14846, v14847, v14848, v14849, v14850, v14851, v14852, v14853, v14854, 1, v14885, v14857, 0, v14859, v14860, v14856, v14861, v14862, v14873, v14863, v14874, v14864, v14875, v14865, v14876, v14866, v14877, v14870, v14872, v14878, v14879, v14880, v14881, v14882, v14883, v14884, v14886, v14887, v14867, v14868, v14869, v14871, 3, 7, 2, 4, 8) :|: 0 = 0
f_1682(v14845, v14846, v14847, v14848, v14849, v14850, v14851, v14852, v14853, v14854, 1, v14885, v14857, 0, v14859, v14860, v14856, v14861, v14862, v14873, v14863, v14874, v14864, v14875, v14865, v14876, v14866, v14877, v14870, v14872, v14878, v14879, v14880, v14881, v14882, v14883, v14884, v14886, v14887, v14867, v14868, v14869, v14871, 3, 7, 2, 4, 8) -> f_1683(v14845, v14846, v14847, v14848, v14849, v14850, v14851, v14852, v14853, v14854, 1, v14885, v14971, v14857, 0, v14859, v14860, v14856, v14861, v14862, v14873, v14863, v14874, v14864, v14875, v14865, v14876, v14866, v14877, v14870, v14872, v14878, v14879, v14880, v14881, v14882, v14883, v14884, v14886, v14887, v14867, v14868, v14869, v14871, 3, 7, 2, 4, 8) :|: TRUE
f_1683(v14845, v14846, v14847, v14848, v14849, v14850, v14851, v14852, v14853, v14854, 1, v14885, v14971, v14857, 0, v14859, v14860, v14856, v14861, v14862, v14873, v14863, v14874, v14864, v14875, v14865, v14876, v14866, v14877, v14870, v14872, v14878, v14879, v14880, v14881, v14882, v14883, v14884, v14886, v14887, v14867, v14868, v14869, v14871, 3, 7, 2, 4, 8) -> f_1684(v14845, v14846, v14847, v14848, v14849, v14850, v14851, v14852, v14853, v14854, 1, v14885, v14971, 0, v14859, v14860, v14856, v14857, v14861, v14862, v14873, v14863, v14874, v14864, v14875, v14865, v14876, v14866, v14877, v14870, v14872, v14878, v14879, v14880, v14881, v14882, v14883, v14884, v14886, v14887, v14867, v14868, v14869, v14871, 3, 7, 2, 4, 8) :|: 0 = 0
f_1684(v14845, v14846, v14847, v14848, v14849, v14850, v14851, v14852, v14853, v14854, 1, v14885, v14971, 0, v14859, v14860, v14856, v14857, v14861, v14862, v14873, v14863, v14874, v14864, v14875, v14865, v14876, v14866, v14877, v14870, v14872, v14878, v14879, v14880, v14881, v14882, v14883, v14884, v14886, v14887, v14867, v14868, v14869, v14871, 3, 7, 2, 4, 8) -> f_1685(v14845, v14846, v14847, v14848, v14849, v14850, v14851, v14852, v14853, v14854, 1, v14885, v14971, 0, v14859, v14860, v14856, v14857, v14861, v14862, v14873, v14863, v14874, v14864, v14875, v14865, v14876, v14866, v14877, v14870, v14872, v14878, v14879, v14880, v14881, v14882, v14883, v14884, v14886, v14887, v14867, v14868, v14869, v14871, 3, 7, 2, 4, 8) :|: v14885 != v14971
f_1684(v14845, v14846, v14847, v14848, v14849, v14850, v14851, v14852, v14853, v14854, 1, v14885, v14971, 0, v14859, v14860, v14856, v14857, v14861, v14862, v14873, v14863, v14874, v14864, v14875, v14865, v14876, v14866, v14877, v14870, v14872, v14878, v14879, v14880, v14881, v14882, v14883, v14884, v14886, v14887, v14867, v14868, v14869, v14871, 3, 7, 2, 4, 8) -> f_1686(v14845, v14846, v14847, v14848, v14849, v14850, v14851, v14852, v14853, v14854, 1, v14971, 0, v14859, v14860, v14856, v14857, v14861, v14862, v14873, v14863, v14874, v14864, v14875, v14865, v14876, v14866, v14877, v14870, v14872, v14878, v14879, v14880, v14881, v14882, v14883, v14884, v14886, v14887, v14867, v14868, v14869, v14871, 3, 7, 2, 4, 8) :|: v14885 = v14971
f_1685(v14845, v14846, v14847, v14848, v14849, v14850, v14851, v14852, v14853, v14854, 1, v14885, v14971, 0, v14859, v14860, v14856, v14857, v14861, v14862, v14873, v14863, v14874, v14864, v14875, v14865, v14876, v14866, v14877, v14870, v14872, v14878, v14879, v14880, v14881, v14882, v14883, v14884, v14886, v14887, v14867, v14868, v14869, v14871, 3, 7, 2, 4, 8) -> f_1687(v14845, v14846, v14847, v14848, v14849, v14850, v14851, v14852, v14853, v14854, 1, v14885, v14971, 0, v14859, v14860, v14856, v14857, v14861, v14862, v14873, v14863, v14874, v14864, v14875, v14865, v14876, v14866, v14877, v14870, v14872, v14878, v14879, v14880, v14881, v14882, v14883, v14884, v14886, v14887, v14867, v14868, v14869, v14871, 3, 7, 2, 4, 8) :|: 0 = 0
f_1687(v14845, v14846, v14847, v14848, v14849, v14850, v14851, v14852, v14853, v14854, 1, v14885, v14971, 0, v14859, v14860, v14856, v14857, v14861, v14862, v14873, v14863, v14874, v14864, v14875, v14865, v14876, v14866, v14877, v14870, v14872, v14878, v14879, v14880, v14881, v14882, v14883, v14884, v14886, v14887, v14867, v14868, v14869, v14871, 3, 7, 2, 4, 8) -> f_1689(v14845, v14846, v14847, v14848, v14849, v14850, v14851, v14852, v14853, v14854, 1, v14885, v14971, v14859, v14860, v14856, v14857, 0, v14861, v14862, v14873, v14863, v14874, v14864, v14875, v14865, v14876, v14866, v14877, v14870, v14872, v14878, v14879, v14880, v14881, v14882, v14883, v14884, v14886, v14887, v14867, v14868, v14869, v14871, 3, 7, 2, 4, 8) :|: 0 = 0
f_1689(v14845, v14846, v14847, v14848, v14849, v14850, v14851, v14852, v14853, v14854, 1, v14885, v14971, v14859, v14860, v14856, v14857, 0, v14861, v14862, v14873, v14863, v14874, v14864, v14875, v14865, v14876, v14866, v14877, v14870, v14872, v14878, v14879, v14880, v14881, v14882, v14883, v14884, v14886, v14887, v14867, v14868, v14869, v14871, 3, 7, 2, 4, 8) -> f_1690(v14845, v14846, v14847, v14848, v14849, v14850, v14851, v14852, v14853, v14854, 1, v14846, v14885, v14971, v14856, v14857, 0, v14861, v14859, v14860, v14862, v14873, v14863, v14874, v14864, v14875, v14865, v14876, v14866, v14877, v14870, v14872, v14878, v14879, v14880, v14881, v14882, v14883, v14884, v14885, v14887, v14886, v14867, v14868, v15123, v15125, 3, 7, 2, 4, 8) :|: TRUE
f_1686(v14845, v14846, v14847, v14848, v14849, v14850, v14851, v14852, v14853, v14854, 1, v14971, 0, v14859, v14860, v14856, v14857, v14861, v14862, v14873, v14863, v14874, v14864, v14875, v14865, v14876, v14866, v14877, v14870, v14872, v14878, v14879, v14880, v14881, v14882, v14883, v14884, v14886, v14887, v14867, v14868, v14869, v14871, 3, 7, 2, 4, 8) -> f_1688(v14845, v14846, v14847, v14848, v14849, v14850, v14851, v14852, v14853, v14854, 1, v14971, 0, v14859, v14860, v14856, v14857, v14861, v14862, v14873, v14863, v14874, v14864, v14875, v14865, v14876, v14866, v14877, v14870, v14872, v14878, v14879, v14880, v14881, v14882, v14883, v14884, v14886, v14887, v14867, v14868, v14869, v14871, 3, 7, 2, 4, 8) :|: 0 = 0
f_1688(v14845, v14846, v14847, v14848, v14849, v14850, v14851, v14852, v14853, v14854, 1, v14971, 0, v14859, v14860, v14856, v14857, v14861, v14862, v14873, v14863, v14874, v14864, v14875, v14865, v14876, v14866, v14877, v14870, v14872, v14878, v14879, v14880, v14881, v14882, v14883, v14884, v14886, v14887, v14867, v14868, v14869, v14871, 3, 7, 2, 4, 8) -> f_1691(v14845, v14846, v14847, v14848, v14849, v14850, v14851, v14852, v14853, v14854, 1, v14971, 0, v14859, v14860, v14856, v14857, v14861, v14862, v14873, v14863, v14874, v14864, v14875, v14865, v14876, v14866, v14877, v14870, v14872, v14878, v14879, v14880, v14881, v14882, v14883, v14884, v14886, v14887, v14867, v14868, v14869, v14871, 3, 7, 2, 4, 8) :|: 0 = 0
f_1691(v14845, v14846, v14847, v14848, v14849, v14850, v14851, v14852, v14853, v14854, 1, v14971, 0, v14859, v14860, v14856, v14857, v14861, v14862, v14873, v14863, v14874, v14864, v14875, v14865, v14876, v14866, v14877, v14870, v14872, v14878, v14879, v14880, v14881, v14882, v14883, v14884, v14886, v14887, v14867, v14868, v14869, v14871, 3, 7, 2, 4, 8) -> f_1692(v14845, v14846, v14847, v14848, v14849, v14850, v14851, v14852, v14853, v14854, 1, v14846, v14971, 0, v14856, v14857, v14861, v14859, v14860, v14862, v14873, v14863, v14874, v14864, v14875, v14865, v14876, v14866, v14877, v14870, v14872, v14878, v14879, v14880, v14881, v14882, v14883, v14884, v14971, v14887, v14886, v14867, v14868, v15305, v15307, 3, 7, 2, 4, 8) :|: TRUE
Combined rules. Obtained 12 rulesP rules:
f_1530(v12220:0, v12221:0, v12222:0, v12223:0, v12224:0, v12225:0, v12226:0, v12227:0, v12228:0, v12229:0, 1, v12238:0, v12232:0, v12231:0, v12233:0, v12234:0, v12235:0, 0, v12237:0, v12239:0, v12250:0, v12240:0, v12251:0, v12241:0, v12252:0, v12242:0, v12253:0, v12243:0, v12254:0, v12247:0, v12249:0, v12255:0, v12256:0, v12257:0, v12258:0, v12259:0, v12260:0, v12261:0, v12262:0, v12244:0, v12245:0, v12246:0, v12248:0, 3, 7, 2, 4, 8) -> f_1684(v12220:0, v12221:0, v12222:0, v12223:0, v12224:0, v12225:0, v12226:0, v12227:0, 1 + v12228:0, v15840:0, 1, v12262:0, v14971:0, 0, v12231:0, v12238:0, v12238:0, v12229:0, v12228:0, v12239:0, v12250:0, v12240:0, v12251:0, v12241:0, v12252:0, v12242:0, v12253:0, v12243:0, v12254:0, v12247:0, v12249:0, v12255:0, v12256:0, v12257:0, v12258:0, v12259:0, v12260:0, v12261:0, v12232:0, v12229:0, v12244:0, v12245:0, v14869:0, v14871:0, 3, 7, 2, 4, 8) :|: v12249:0 > v12238:0 && v12229:0 < 0 && v12249:0 > 2 && v12228:0 > 1 && v12247:0 > 1 + v12228:0 && v12247:0 > 3 && v15840:0 < 0
f_1530(v12220:0, v12221:0, v12222:0, v12223:0, v12224:0, v12225:0, v12226:0, v12227:0, v12228:0, v12229:0, 1, v12238:0, v12232:0, v12231:0, v12233:0, v12234:0, v12235:0, 0, v12237:0, v12239:0, v12250:0, v12240:0, v12251:0, v12241:0, v12252:0, v12242:0, v12253:0, v12243:0, v12254:0, v12247:0, v12249:0, v12255:0, v12256:0, v12257:0, v12258:0, v12259:0, v12260:0, v12261:0, v12262:0, v12244:0, v12245:0, v12246:0, v12248:0, 3, 7, 2, 4, 8) -> f_1684(v12220:0, v12221:0, v12222:0, v12223:0, v12224:0, v12225:0, v12226:0, v12227:0, 1 + v12228:0, v15840:0, 1, v12262:0, v14971:0, 0, v12231:0, v12238:0, v12238:0, v12229:0, v12228:0, v12239:0, v12250:0, v12240:0, v12251:0, v12241:0, v12252:0, v12242:0, v12253:0, v12243:0, v12254:0, v12247:0, v12249:0, v12255:0, v12256:0, v12257:0, v12258:0, v12259:0, v12260:0, v12261:0, v12232:0, v12229:0, v12244:0, v12245:0, v14869:0, v14871:0, 3, 7, 2, 4, 8) :|: v12249:0 > v12238:0 && v12229:0 < 0 && v12249:0 > 2 && v12228:0 > 1 && v12247:0 > 1 + v12228:0 && v12247:0 > 3 && v15840:0 > 0
f_1530(v12220:0, v12221:0, v12222:0, v12223:0, v12224:0, v12225:0, v12226:0, v12227:0, v12228:0, v12229:0, 1, v12238:0, v12232:0, v12231:0, v12233:0, v12234:0, v12235:0, 0, v12237:0, v12239:0, v12250:0, v12240:0, v12251:0, v12241:0, v12252:0, v12242:0, v12253:0, v12243:0, v12254:0, v12247:0, v12249:0, v12255:0, v12256:0, v12257:0, v12258:0, v12259:0, v12260:0, v12261:0, v12262:0, v12244:0, v12245:0, v12246:0, v12248:0, 3, 7, 2, 4, 8) -> f_1684(v12220:0, v12221:0, v12222:0, v12223:0, v12224:0, v12225:0, v12226:0, v12227:0, 1 + v12228:0, v15840:0, 1, v12262:0, v14971:0, 0, v12231:0, v12238:0, v12238:0, v12229:0, v12228:0, v12239:0, v12250:0, v12240:0, v12251:0, v12241:0, v12252:0, v12242:0, v12253:0, v12243:0, v12254:0, v12247:0, v12249:0, v12255:0, v12256:0, v12257:0, v12258:0, v12259:0, v12260:0, v12261:0, v12232:0, v12229:0, v12244:0, v12245:0, v14869:0, v14871:0, 3, 7, 2, 4, 8) :|: v12249:0 > v12238:0 && v12229:0 > 0 && v12249:0 > 2 && v12228:0 > 1 && v12247:0 > 1 + v12228:0 && v12247:0 > 3 && v15840:0 < 0
f_1530(v12220:0, v12221:0, v12222:0, v12223:0, v12224:0, v12225:0, v12226:0, v12227:0, v12228:0, v12229:0, 1, v12238:0, v12232:0, v12231:0, v12233:0, v12234:0, v12235:0, 0, v12237:0, v12239:0, v12250:0, v12240:0, v12251:0, v12241:0, v12252:0, v12242:0, v12253:0, v12243:0, v12254:0, v12247:0, v12249:0, v12255:0, v12256:0, v12257:0, v12258:0, v12259:0, v12260:0, v12261:0, v12262:0, v12244:0, v12245:0, v12246:0, v12248:0, 3, 7, 2, 4, 8) -> f_1684(v12220:0, v12221:0, v12222:0, v12223:0, v12224:0, v12225:0, v12226:0, v12227:0, 1 + v12228:0, v15840:0, 1, v12262:0, v14971:0, 0, v12231:0, v12238:0, v12238:0, v12229:0, v12228:0, v12239:0, v12250:0, v12240:0, v12251:0, v12241:0, v12252:0, v12242:0, v12253:0, v12243:0, v12254:0, v12247:0, v12249:0, v12255:0, v12256:0, v12257:0, v12258:0, v12259:0, v12260:0, v12261:0, v12232:0, v12229:0, v12244:0, v12245:0, v14869:0, v14871:0, 3, 7, 2, 4, 8) :|: v12249:0 > v12238:0 && v12229:0 > 0 && v12249:0 > 2 && v12228:0 > 1 && v12247:0 > 1 + v12228:0 && v12247:0 > 3 && v15840:0 > 0
f_1684(v14845:0, v14846:0, v14847:0, v14848:0, v14849:0, v14850:0, v14851:0, v14852:0, v14853:0, v14854:0, 1, v14854:0, v14854:0, 0, v14859:0, v14860:0, v14856:0, v14857:0, v14861:0, v14862:0, v14873:0, v14863:0, v14874:0, v14864:0, v14875:0, v14865:0, v14876:0, v14866:0, v14877:0, v14870:0, v14872:0, v14878:0, v14879:0, v14880:0, v14881:0, v14882:0, v14883:0, v14884:0, v14886:0, v14887:0, v14867:0, v14868:0, v14869:0, v14871:0, 3, 7, 2, 4, 8) -> f_1684(v14845:0, v14846:0, v14847:0, v14848:0, v14849:0, v14850:0, v14851:0, v14852:0, 1 + v14853:0, v15840:0, 1, v14854:0, v14971:1, 0, v14859:0, v14860:0, v14846:0, v14854:0, v14853:0, v14862:0, v14873:0, v14863:0, v14874:0, v14864:0, v14875:0, v14865:0, v14876:0, v14866:0, v14877:0, v14870:0, v14872:0, v14878:0, v14879:0, v14880:0, v14881:0, v14882:0, v14883:0, v14884:0, v14886:0, v14887:0, v14867:0, v14868:0, v14869:1, v14871:1, 3, 7, 2, 4, 8) :|: v14853:0 > 1 && v14870:0 > 1 + v14853:0 && v14870:0 > 3 && v15840:0 < 0
f_1684(v14845:0, v14846:0, v14847:0, v14848:0, v14849:0, v14850:0, v14851:0, v14852:0, v14853:0, v14854:0, 1, v14854:0, v14854:0, 0, v14859:0, v14860:0, v14856:0, v14857:0, v14861:0, v14862:0, v14873:0, v14863:0, v14874:0, v14864:0, v14875:0, v14865:0, v14876:0, v14866:0, v14877:0, v14870:0, v14872:0, v14878:0, v14879:0, v14880:0, v14881:0, v14882:0, v14883:0, v14884:0, v14886:0, v14887:0, v14867:0, v14868:0, v14869:0, v14871:0, 3, 7, 2, 4, 8) -> f_1684(v14845:0, v14846:0, v14847:0, v14848:0, v14849:0, v14850:0, v14851:0, v14852:0, 1 + v14853:0, v15840:0, 1, v14854:0, v14971:1, 0, v14859:0, v14860:0, v14846:0, v14854:0, v14853:0, v14862:0, v14873:0, v14863:0, v14874:0, v14864:0, v14875:0, v14865:0, v14876:0, v14866:0, v14877:0, v14870:0, v14872:0, v14878:0, v14879:0, v14880:0, v14881:0, v14882:0, v14883:0, v14884:0, v14886:0, v14887:0, v14867:0, v14868:0, v14869:1, v14871:1, 3, 7, 2, 4, 8) :|: v14853:0 > 1 && v14870:0 > 1 + v14853:0 && v14870:0 > 3 && v15840:0 > 0
f_1684(v14845:0, v14846:0, v14847:0, v14848:0, v14849:0, v14850:0, v14851:0, v14852:0, v14853:0, v14854:0, 1, v14885:0, v14971:0, 0, v14859:0, v14860:0, v14856:0, v14857:0, v14861:0, v14862:0, v14873:0, v14863:0, v14874:0, v14864:0, v14875:0, v14865:0, v14876:0, v14866:0, v14877:0, v14870:0, v14872:0, v14878:0, v14879:0, v14880:0, v14881:0, v14882:0, v14883:0, v14884:0, v14886:0, v14887:0, v14867:0, v14868:0, v14869:0, v14871:0, 3, 7, 2, 4, 8) -> f_1530(v14845:0, v14846:0, v14847:0, v14848:0, v14849:0, v14850:0, v14851:0, v14852:0, v14853:0, v14854:0, 1, 1 + v14846:0, v14885:0, v14846:0, v14971:0, v14856:0, v14857:0, 0, v14861:0, v14862:0, v14873:0, v14863:0, v14874:0, v14864:0, v14875:0, v14865:0, v14876:0, v14866:0, v14877:0, v14870:0, v14872:0, v14878:0, v14879:0, v14880:0, v14881:0, v14882:0, v14883:0, v14884:0, v14885:0, v14867:0, v14868:0, v12246:0, v12248:0, 3, 7, 2, 4, 8) :|: v14971:0 > v14885:0 && v14846:0 > 0
f_1684(v14845:0, v14846:0, v14847:0, v14848:0, v14849:0, v14850:0, v14851:0, v14852:0, v14853:0, v14854:0, 1, v14885:0, v14971:0, 0, v14859:0, v14860:0, v14856:0, v14857:0, v14861:0, v14862:0, v14873:0, v14863:0, v14874:0, v14864:0, v14875:0, v14865:0, v14876:0, v14866:0, v14877:0, v14870:0, v14872:0, v14878:0, v14879:0, v14880:0, v14881:0, v14882:0, v14883:0, v14884:0, v14886:0, v14887:0, v14867:0, v14868:0, v14869:0, v14871:0, 3, 7, 2, 4, 8) -> f_1530(v14845:0, v14846:0, v14847:0, v14848:0, v14849:0, v14850:0, v14851:0, v14852:0, v14853:0, v14854:0, 1, 1 + v14846:0, v14885:0, v14846:0, v14971:0, v14856:0, v14857:0, 0, v14861:0, v14862:0, v14873:0, v14863:0, v14874:0, v14864:0, v14875:0, v14865:0, v14876:0, v14866:0, v14877:0, v14870:0, v14872:0, v14878:0, v14879:0, v14880:0, v14881:0, v14882:0, v14883:0, v14884:0, v14885:0, v14867:0, v14868:0, v12246:0, v12248:0, 3, 7, 2, 4, 8) :|: v14971:0 < v14885:0 && v14846:0 > 0
f_1530(v12220:0, v12221:0, v12222:0, v12223:0, v12224:0, v12225:0, v12226:0, v12227:0, v12228:0, v12229:0, 1, v12238:0, v12232:0, v12231:0, v12233:0, v12234:0, v12235:0, 0, v12237:0, v12239:0, v12250:0, v12240:0, v12251:0, v12241:0, v12252:0, v12242:0, v12253:0, v12243:0, v12254:0, v12247:0, v12249:0, v12255:0, v12256:0, v12257:0, v12258:0, v12259:0, v12260:0, v12261:0, v12262:0, v12244:0, v12245:0, v12246:0, v12248:0, 3, 7, 2, 4, 8) -> f_1530(v12220:0, v12221:0, v12222:0, v12223:0, v12224:0, v12225:0, v12226:0, v12227:0, v12228:0, v12229:0, 1, 1 + v12238:0, v12292:0, v12238:0, v12872:0, v12234:0, v12235:0, 0, v12237:0, v12239:0, v12250:0, v12240:0, v12251:0, v12241:0, v12252:0, v12242:0, v12253:0, v12243:0, v12254:0, v12247:0, v12249:0, v12255:0, v12256:0, v12257:0, v12258:0, v12259:0, v12260:0, v12261:0, v12262:0, v12244:0, v12245:0, v12246:1, v12248:1, 3, 7, 2, 4, 8) :|: v12249:0 > v12238:0 && v12292:0 < 0 && v12249:0 > 2 && v12238:0 > 0 && v12872:0 > v12292:0
f_1530(v12220:0, v12221:0, v12222:0, v12223:0, v12224:0, v12225:0, v12226:0, v12227:0, v12228:0, v12229:0, 1, v12238:0, v12232:0, v12231:0, v12233:0, v12234:0, v12235:0, 0, v12237:0, v12239:0, v12250:0, v12240:0, v12251:0, v12241:0, v12252:0, v12242:0, v12253:0, v12243:0, v12254:0, v12247:0, v12249:0, v12255:0, v12256:0, v12257:0, v12258:0, v12259:0, v12260:0, v12261:0, v12262:0, v12244:0, v12245:0, v12246:0, v12248:0, 3, 7, 2, 4, 8) -> f_1530(v12220:0, v12221:0, v12222:0, v12223:0, v12224:0, v12225:0, v12226:0, v12227:0, v12228:0, v12229:0, 1, 1 + v12238:0, v12292:0, v12238:0, v12872:0, v12234:0, v12235:0, 0, v12237:0, v12239:0, v12250:0, v12240:0, v12251:0, v12241:0, v12252:0, v12242:0, v12253:0, v12243:0, v12254:0, v12247:0, v12249:0, v12255:0, v12256:0, v12257:0, v12258:0, v12259:0, v12260:0, v12261:0, v12262:0, v12244:0, v12245:0, v12246:1, v12248:1, 3, 7, 2, 4, 8) :|: v12249:0 > v12238:0 && v12292:0 < 0 && v12249:0 > 2 && v12238:0 > 0 && v12872:0 < v12292:0
f_1530(v12220:0, v12221:0, v12222:0, v12223:0, v12224:0, v12225:0, v12226:0, v12227:0, v12228:0, v12229:0, 1, v12238:0, v12232:0, v12231:0, v12233:0, v12234:0, v12235:0, 0, v12237:0, v12239:0, v12250:0, v12240:0, v12251:0, v12241:0, v12252:0, v12242:0, v12253:0, v12243:0, v12254:0, v12247:0, v12249:0, v12255:0, v12256:0, v12257:0, v12258:0, v12259:0, v12260:0, v12261:0, v12262:0, v12244:0, v12245:0, v12246:0, v12248:0, 3, 7, 2, 4, 8) -> f_1530(v12220:0, v12221:0, v12222:0, v12223:0, v12224:0, v12225:0, v12226:0, v12227:0, v12228:0, v12229:0, 1, 1 + v12238:0, v12292:0, v12238:0, v12872:0, v12234:0, v12235:0, 0, v12237:0, v12239:0, v12250:0, v12240:0, v12251:0, v12241:0, v12252:0, v12242:0, v12253:0, v12243:0, v12254:0, v12247:0, v12249:0, v12255:0, v12256:0, v12257:0, v12258:0, v12259:0, v12260:0, v12261:0, v12262:0, v12244:0, v12245:0, v12246:1, v12248:1, 3, 7, 2, 4, 8) :|: v12249:0 > v12238:0 && v12292:0 > 0 && v12249:0 > 2 && v12238:0 > 0 && v12872:0 > v12292:0
f_1530(v12220:0, v12221:0, v12222:0, v12223:0, v12224:0, v12225:0, v12226:0, v12227:0, v12228:0, v12229:0, 1, v12238:0, v12232:0, v12231:0, v12233:0, v12234:0, v12235:0, 0, v12237:0, v12239:0, v12250:0, v12240:0, v12251:0, v12241:0, v12252:0, v12242:0, v12253:0, v12243:0, v12254:0, v12247:0, v12249:0, v12255:0, v12256:0, v12257:0, v12258:0, v12259:0, v12260:0, v12261:0, v12262:0, v12244:0, v12245:0, v12246:0, v12248:0, 3, 7, 2, 4, 8) -> f_1530(v12220:0, v12221:0, v12222:0, v12223:0, v12224:0, v12225:0, v12226:0, v12227:0, v12228:0, v12229:0, 1, 1 + v12238:0, v12292:0, v12238:0, v12872:0, v12234:0, v12235:0, 0, v12237:0, v12239:0, v12250:0, v12240:0, v12251:0, v12241:0, v12252:0, v12242:0, v12253:0, v12243:0, v12254:0, v12247:0, v12249:0, v12255:0, v12256:0, v12257:0, v12258:0, v12259:0, v12260:0, v12261:0, v12262:0, v12244:0, v12245:0, v12246:1, v12248:1, 3, 7, 2, 4, 8) :|: v12249:0 > v12238:0 && v12292:0 > 0 && v12249:0 > 2 && v12238:0 > 0 && v12872:0 < v12292:0
Filtered unneeded arguments:
   f_1530(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48) -> f_1530(x2, x9, x10, x12, x30, x31, x39)
   f_1684(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49) -> f_1684(x2, x9, x10, x12, x13, x30, x31)
Removed division, modulo operations, cleaned up constraints. Obtained 9 rules.P rules:
f_1530(v12221:0, v12228:0, v12229:0, v12238:0, v12247:0, v12249:0, v12262:0) -> f_1684(v12221:0, 1 + v12228:0, v15840:0, v12262:0, v14971:0, v12247:0, v12249:0) :|: v12229:0 < 0 && v12249:0 > v12238:0 && v12249:0 > 2 && v12228:0 > 1 && v12247:0 > 1 + v12228:0 && v15840:0 < 0 && v12247:0 > 3
f_1530(v12221:0, v12228:0, v12229:0, v12238:0, v12247:0, v12249:0, v12262:0) -> f_1684(v12221:0, 1 + v12228:0, v15840:0, v12262:0, v14971:0, v12247:0, v12249:0) :|: v12229:0 < 0 && v12249:0 > v12238:0 && v12249:0 > 2 && v12228:0 > 1 && v12247:0 > 1 + v12228:0 && v15840:0 > 0 && v12247:0 > 3
f_1530(v12221:0, v12228:0, v12229:0, v12238:0, v12247:0, v12249:0, v12262:0) -> f_1684(v12221:0, 1 + v12228:0, v15840:0, v12262:0, v14971:0, v12247:0, v12249:0) :|: v12229:0 > 0 && v12249:0 > v12238:0 && v12249:0 > 2 && v12228:0 > 1 && v12247:0 > 1 + v12228:0 && v15840:0 < 0 && v12247:0 > 3
f_1530(v12221:0, v12228:0, v12229:0, v12238:0, v12247:0, v12249:0, v12262:0) -> f_1684(v12221:0, 1 + v12228:0, v15840:0, v12262:0, v14971:0, v12247:0, v12249:0) :|: v12229:0 > 0 && v12249:0 > v12238:0 && v12249:0 > 2 && v12228:0 > 1 && v12247:0 > 1 + v12228:0 && v15840:0 > 0 && v12247:0 > 3
f_1684(v14846:0, v14853:0, v14854:0, v14854:01, v14854:02, v14870:0, v14872:0) -> f_1684(v14846:0, 1 + v14853:0, v15840:0, v14854:0, v14971:1, v14870:0, v14872:0) :|: v14870:0 > 1 + v14853:0 && v14853:0 > 1 && v15840:0 < 0 && v14870:0 > 3 && v14854:0 = v14854:01 && v14854:0 = v14854:02
f_1684(v14846:0, v14853:0, v14854:0, v14854:01, v14854:02, v14870:0, v14872:0) -> f_1684(v14846:0, 1 + v14853:0, v15840:0, v14854:0, v14971:1, v14870:0, v14872:0) :|: v14870:0 > 1 + v14853:0 && v14853:0 > 1 && v15840:0 > 0 && v14870:0 > 3 && v14854:0 = v14854:01 && v14854:0 = v14854:02
f_1684(v14846:0, v14853:0, v14854:0, v14885:0, v14971:0, v14870:0, v14872:0) -> f_1530(v14846:0, v14853:0, v14854:0, 1 + v14846:0, v14870:0, v14872:0, v14885:0) :|: v14971:0 > v14885:0 && v14846:0 > 0
f_1684(v14846:0, v14853:0, v14854:0, v14885:0, v14971:0, v14870:0, v14872:0) -> f_1530(v14846:0, v14853:0, v14854:0, 1 + v14846:0, v14870:0, v14872:0, v14885:0) :|: v14971:0 < v14885:0 && v14846:0 > 0
f_1530(v12221:0, v12228:0, v12229:0, v12238:0, v12247:0, v12249:0, v12262:0) -> f_1530(v12221:0, v12228:0, v12229:0, 1 + v12238:0, v12247:0, v12249:0, v12262:0) :|: v12249:0 > 2 && v12238:0 > 0 && v12249:0 > v12238:0

----------------------------------------

(9)
Obligation:
Rules:
f_1530(v12221:0, v12228:0, v12229:0, v12238:0, v12247:0, v12249:0, v12262:0) -> f_1684(v12221:0, 1 + v12228:0, v15840:0, v12262:0, v14971:0, v12247:0, v12249:0) :|: v12229:0 < 0 && v12249:0 > v12238:0 && v12249:0 > 2 && v12228:0 > 1 && v12247:0 > 1 + v12228:0 && v15840:0 < 0 && v12247:0 > 3
f_1530(x, x1, x2, x3, x4, x5, x6) -> f_1684(x, 1 + x1, x7, x6, x8, x4, x5) :|: x2 < 0 && x5 > x3 && x5 > 2 && x1 > 1 && x4 > 1 + x1 && x7 > 0 && x4 > 3
f_1530(x9, x10, x11, x12, x13, x14, x15) -> f_1684(x9, 1 + x10, x16, x15, x17, x13, x14) :|: x11 > 0 && x14 > x12 && x14 > 2 && x10 > 1 && x13 > 1 + x10 && x16 < 0 && x13 > 3
f_1530(x18, x19, x20, x21, x22, x23, x24) -> f_1684(x18, 1 + x19, x25, x24, x26, x22, x23) :|: x20 > 0 && x23 > x21 && x23 > 2 && x19 > 1 && x22 > 1 + x19 && x25 > 0 && x22 > 3
f_1684(x27, x28, x29, x30, x31, x32, x33) -> f_1684(x27, 1 + x28, x34, x29, x35, x32, x33) :|: x32 > 1 + x28 && x28 > 1 && x34 < 0 && x32 > 3 && x29 = x30 && x29 = x31
f_1684(x36, x37, x38, x39, x40, x41, x42) -> f_1684(x36, 1 + x37, x43, x38, x44, x41, x42) :|: x41 > 1 + x37 && x37 > 1 && x43 > 0 && x41 > 3 && x38 = x39 && x38 = x40
f_1684(x45, x46, x47, x48, x49, x50, x51) -> f_1530(x45, x46, x47, 1 + x45, x50, x51, x48) :|: x49 > x48 && x45 > 0
f_1684(x52, x53, x54, x55, x56, x57, x58) -> f_1530(x52, x53, x54, 1 + x52, x57, x58, x55) :|: x56 < x55 && x52 > 0
f_1530(x59, x60, x61, x62, x63, x64, x65) -> f_1530(x59, x60, x61, 1 + x62, x63, x64, x65) :|: x64 > 2 && x62 > 0 && x64 > x62

----------------------------------------

(10) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(11)
Obligation:
Rules:
f_1530(v12221:0:0, v12228:0:0, v12229:0:0, v12238:0:0, v12247:0:0, v12249:0:0, v12262:0:0) -> f_1684(v12221:0:0, 1 + v12228:0:0, v15840:0:0, v12262:0:0, v14971:0:0, v12247:0:0, v12249:0:0) :|: v15840:0:0 < 0 && v12247:0:0 > 3 && v12247:0:0 > 1 + v12228:0:0 && v12228:0:0 > 1 && v12249:0:0 > 2 && v12249:0:0 > v12238:0:0 && v12229:0:0 < 0
f_1684(x52:0, x53:0, x54:0, x55:0, x56:0, x57:0, x58:0) -> f_1530(x52:0, x53:0, x54:0, 1 + x52:0, x57:0, x58:0, x55:0) :|: x56:0 < x55:0 && x52:0 > 0
f_1530(x9:0, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0) -> f_1684(x9:0, 1 + x10:0, x16:0, x15:0, x17:0, x13:0, x14:0) :|: x16:0 < 0 && x13:0 > 3 && x13:0 > 1 + x10:0 && x10:0 > 1 && x14:0 > 2 && x14:0 > x12:0 && x11:0 > 0
f_1530(x59:0, x60:0, x61:0, x62:0, x63:0, x64:0, x65:0) -> f_1530(x59:0, x60:0, x61:0, 1 + x62:0, x63:0, x64:0, x65:0) :|: x64:0 > 2 && x62:0 > 0 && x64:0 > x62:0
f_1684(x36:0, x37:0, x38:0, x38:01, x38:02, x41:0, x42:0) -> f_1684(x36:0, 1 + x37:0, x43:0, x38:0, x44:0, x41:0, x42:0) :|: x43:0 > 0 && x41:0 > 3 && x37:0 > 1 && x41:0 > 1 + x37:0 && x38:0 = x38:01 && x38:0 = x38:02
f_1530(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0) -> f_1684(x:0, 1 + x1:0, x7:0, x6:0, x8:0, x4:0, x5:0) :|: x7:0 > 0 && x4:0 > 3 && x4:0 > 1 + x1:0 && x1:0 > 1 && x5:0 > 2 && x5:0 > x3:0 && x2:0 < 0
f_1530(x18:0, x19:0, x20:0, x21:0, x22:0, x23:0, x24:0) -> f_1684(x18:0, 1 + x19:0, x25:0, x24:0, x26:0, x22:0, x23:0) :|: x25:0 > 0 && x22:0 > 3 && x22:0 > 1 + x19:0 && x19:0 > 1 && x23:0 > 2 && x23:0 > x21:0 && x20:0 > 0
f_1684(x45:0, x46:0, x47:0, x48:0, x49:0, x50:0, x51:0) -> f_1530(x45:0, x46:0, x47:0, 1 + x45:0, x50:0, x51:0, x48:0) :|: x49:0 > x48:0 && x45:0 > 0
f_1684(x27:0, x28:0, x29:0, x29:01, x29:02, x32:0, x33:0) -> f_1684(x27:0, 1 + x28:0, x34:0, x29:0, x35:0, x32:0, x33:0) :|: x34:0 < 0 && x32:0 > 3 && x28:0 > 1 && x32:0 > 1 + x28:0 && x29:0 = x29:01 && x29:0 = x29:02

----------------------------------------

(12) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1530(x, x1, x2, x3, x4, x5, x6)] = -1 - x1 + x4
[f_1684(x7, x8, x9, x10, x11, x12, x13)] = -1 + x12 - x8

The following rules are decreasing:
f_1530(v12221:0:0, v12228:0:0, v12229:0:0, v12238:0:0, v12247:0:0, v12249:0:0, v12262:0:0) -> f_1684(v12221:0:0, 1 + v12228:0:0, v15840:0:0, v12262:0:0, v14971:0:0, v12247:0:0, v12249:0:0) :|: v15840:0:0 < 0 && v12247:0:0 > 3 && v12247:0:0 > 1 + v12228:0:0 && v12228:0:0 > 1 && v12249:0:0 > 2 && v12249:0:0 > v12238:0:0 && v12229:0:0 < 0
f_1530(x9:0, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0) -> f_1684(x9:0, 1 + x10:0, x16:0, x15:0, x17:0, x13:0, x14:0) :|: x16:0 < 0 && x13:0 > 3 && x13:0 > 1 + x10:0 && x10:0 > 1 && x14:0 > 2 && x14:0 > x12:0 && x11:0 > 0
f_1684(x36:0, x37:0, x38:0, x38:01, x38:02, x41:0, x42:0) -> f_1684(x36:0, 1 + x37:0, x43:0, x38:0, x44:0, x41:0, x42:0) :|: x43:0 > 0 && x41:0 > 3 && x37:0 > 1 && x41:0 > 1 + x37:0 && x38:0 = x38:01 && x38:0 = x38:02
f_1530(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0) -> f_1684(x:0, 1 + x1:0, x7:0, x6:0, x8:0, x4:0, x5:0) :|: x7:0 > 0 && x4:0 > 3 && x4:0 > 1 + x1:0 && x1:0 > 1 && x5:0 > 2 && x5:0 > x3:0 && x2:0 < 0
f_1530(x18:0, x19:0, x20:0, x21:0, x22:0, x23:0, x24:0) -> f_1684(x18:0, 1 + x19:0, x25:0, x24:0, x26:0, x22:0, x23:0) :|: x25:0 > 0 && x22:0 > 3 && x22:0 > 1 + x19:0 && x19:0 > 1 && x23:0 > 2 && x23:0 > x21:0 && x20:0 > 0
f_1684(x27:0, x28:0, x29:0, x29:01, x29:02, x32:0, x33:0) -> f_1684(x27:0, 1 + x28:0, x34:0, x29:0, x35:0, x32:0, x33:0) :|: x34:0 < 0 && x32:0 > 3 && x28:0 > 1 && x32:0 > 1 + x28:0 && x29:0 = x29:01 && x29:0 = x29:02
The following rules are bounded:
f_1530(v12221:0:0, v12228:0:0, v12229:0:0, v12238:0:0, v12247:0:0, v12249:0:0, v12262:0:0) -> f_1684(v12221:0:0, 1 + v12228:0:0, v15840:0:0, v12262:0:0, v14971:0:0, v12247:0:0, v12249:0:0) :|: v15840:0:0 < 0 && v12247:0:0 > 3 && v12247:0:0 > 1 + v12228:0:0 && v12228:0:0 > 1 && v12249:0:0 > 2 && v12249:0:0 > v12238:0:0 && v12229:0:0 < 0
f_1530(x9:0, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0) -> f_1684(x9:0, 1 + x10:0, x16:0, x15:0, x17:0, x13:0, x14:0) :|: x16:0 < 0 && x13:0 > 3 && x13:0 > 1 + x10:0 && x10:0 > 1 && x14:0 > 2 && x14:0 > x12:0 && x11:0 > 0
f_1684(x36:0, x37:0, x38:0, x38:01, x38:02, x41:0, x42:0) -> f_1684(x36:0, 1 + x37:0, x43:0, x38:0, x44:0, x41:0, x42:0) :|: x43:0 > 0 && x41:0 > 3 && x37:0 > 1 && x41:0 > 1 + x37:0 && x38:0 = x38:01 && x38:0 = x38:02
f_1530(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0) -> f_1684(x:0, 1 + x1:0, x7:0, x6:0, x8:0, x4:0, x5:0) :|: x7:0 > 0 && x4:0 > 3 && x4:0 > 1 + x1:0 && x1:0 > 1 && x5:0 > 2 && x5:0 > x3:0 && x2:0 < 0
f_1530(x18:0, x19:0, x20:0, x21:0, x22:0, x23:0, x24:0) -> f_1684(x18:0, 1 + x19:0, x25:0, x24:0, x26:0, x22:0, x23:0) :|: x25:0 > 0 && x22:0 > 3 && x22:0 > 1 + x19:0 && x19:0 > 1 && x23:0 > 2 && x23:0 > x21:0 && x20:0 > 0
f_1684(x27:0, x28:0, x29:0, x29:01, x29:02, x32:0, x33:0) -> f_1684(x27:0, 1 + x28:0, x34:0, x29:0, x35:0, x32:0, x33:0) :|: x34:0 < 0 && x32:0 > 3 && x28:0 > 1 && x32:0 > 1 + x28:0 && x29:0 = x29:01 && x29:0 = x29:02

----------------------------------------

(13)
Obligation:
Rules:
f_1684(x52:0, x53:0, x54:0, x55:0, x56:0, x57:0, x58:0) -> f_1530(x52:0, x53:0, x54:0, 1 + x52:0, x57:0, x58:0, x55:0) :|: x56:0 < x55:0 && x52:0 > 0
f_1530(x59:0, x60:0, x61:0, x62:0, x63:0, x64:0, x65:0) -> f_1530(x59:0, x60:0, x61:0, 1 + x62:0, x63:0, x64:0, x65:0) :|: x64:0 > 2 && x62:0 > 0 && x64:0 > x62:0
f_1684(x45:0, x46:0, x47:0, x48:0, x49:0, x50:0, x51:0) -> f_1530(x45:0, x46:0, x47:0, 1 + x45:0, x50:0, x51:0, x48:0) :|: x49:0 > x48:0 && x45:0 > 0

----------------------------------------

(14) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained one non-trivial SCC.

----------------------------------------

(15)
Obligation:
Rules:
f_1530(x59:0, x60:0, x61:0, x62:0, x63:0, x64:0, x65:0) -> f_1530(x59:0, x60:0, x61:0, 1 + x62:0, x63:0, x64:0, x65:0) :|: x64:0 > 2 && x62:0 > 0 && x64:0 > x62:0

----------------------------------------

(16) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(17)
Obligation:
Rules:
f_1530(x59:0:0, x60:0:0, x61:0:0, x62:0:0, x63:0:0, x64:0:0, x65:0:0) -> f_1530(x59:0:0, x60:0:0, x61:0:0, 1 + x62:0:0, x63:0:0, x64:0:0, x65:0:0) :|: x64:0:0 > 2 && x62:0:0 > 0 && x64:0:0 > x62:0:0

----------------------------------------

(18) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1530(x1, x2, x3, x4, x5, x6, x7) -> f_1530(x4, x6)

----------------------------------------

(19)
Obligation:
Rules:
f_1530(x62:0:0, x64:0:0) -> f_1530(1 + x62:0:0, x64:0:0) :|: x64:0:0 > 2 && x62:0:0 > 0 && x64:0:0 > x62:0:0

----------------------------------------

(20) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1530(x, x1)] = -1 - x + x1

The following rules are decreasing:
f_1530(x62:0:0, x64:0:0) -> f_1530(1 + x62:0:0, x64:0:0) :|: x64:0:0 > 2 && x62:0:0 > 0 && x64:0:0 > x62:0:0
The following rules are bounded:
f_1530(x62:0:0, x64:0:0) -> f_1530(1 + x62:0:0, x64:0:0) :|: x64:0:0 > 2 && x62:0:0 > 0 && x64:0:0 > x62:0:0

----------------------------------------

(21)
YES

----------------------------------------

(22)
Obligation:
SCC
----------------------------------------

(23) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 41 rulesP rules:
f_1493(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v11002, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1500(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v11002, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: 0 = 0
f_1500(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v11002, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1507(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v11002, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: 0 = 0
f_1507(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v11002, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1295(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v11002, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: TRUE
f_1295(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v8331, v8332, 1, v8334, 0, v8336, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1299(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v8331, v8332, 1, v8334, 0, v8336, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: TRUE
f_1299(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v8331, v8332, 1, v8334, 0, v8336, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1303(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v8331, v8332, 1, v8334, 0, v8336, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: 0 = 0
f_1303(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v8331, v8332, 1, v8334, 0, v8336, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1307(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v8331, v8332, 1, v8334, 0, v8336, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: 0 = 0
f_1307(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v8331, v8332, 1, v8334, 0, v8336, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1311(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v8331, v8332, 1, v8334, 0, v8336, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: 0 = 0
f_1311(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v8331, v8332, 1, v8334, 0, v8336, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1315(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v8331, v8332, 1, v8334, 0, v8336, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: 0 = 0
f_1315(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v8331, v8332, 1, v8334, 0, v8336, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1321(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v8331, v8332, 1, 0, v8336, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: v8334 = v8332
f_1321(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v8331, v8332, 1, 0, v8336, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1327(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v8331, v8332, 1, 0, v8336, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: 0 = 0
f_1327(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v8331, v8332, 1, 0, v8336, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1333(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v8331, v8332, 1, 0, v8336, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: TRUE
f_1333(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v8331, v8332, 1, 0, v8336, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1341(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v8331, v8332, 1, 0, v8336, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: TRUE
f_1341(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v8331, v8332, 1, 0, v8336, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1349(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v8331, v8332, 1, 0, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: 0 = 0
f_1349(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v8331, v8332, 1, 0, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1358(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v8331, v8332, 1, 0, v9461, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: v9461 = 1 + v8331 && 3 <= v9461
f_1358(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v8331, v8332, 1, 0, v9461, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1365(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v8331, v8332, 1, 0, v9461, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: TRUE
f_1365(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v8331, v8332, 1, 0, v9461, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1373(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v8331, v8332, 1, 0, v9461, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: TRUE
f_1373(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v8331, v8332, 1, 0, v9461, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1377(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v8332, 1, v8331, 0, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: 0 = 0
f_1377(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v8332, 1, v8331, 0, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1381(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, v8332, 1, v8331, 0, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: TRUE
f_1381(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, v8332, 1, v8331, 0, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1385(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8331, v8332, 0, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: 0 = 0
f_1385(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8331, v8332, 0, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1390(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8331, v8332, 0, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: v9650 != 0 && v9461 < v8345 && 4 <= v8345
f_1390(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8331, v8332, 0, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1397(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8331, v8332, 0, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: 0 = 0
f_1397(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8331, v8332, 0, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1404(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8331, v8332, 0, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: TRUE
f_1404(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8331, v8332, 0, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1411(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8331, v8332, 0, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: 0 = 0
f_1411(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8331, v8332, 0, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1418(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8331, v8332, 0, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: TRUE
f_1418(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8331, v8332, 0, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1425(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8332, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: 0 = 0
f_1425(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8332, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1432(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8332, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: 0 = 0
f_1432(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8332, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1437(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8332, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: 0 = 0
f_1437(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8332, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1441(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8332, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: TRUE
f_1441(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8332, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1444(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8332, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: TRUE
f_1444(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8332, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1447(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8332, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: 0 = 0
f_1447(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8332, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1450(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8332, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: 0 = 0
f_1450(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8332, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1454(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8332, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: 0 = 0
f_1454(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8332, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1458(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8332, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: 0 = 0
f_1458(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8332, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1462(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8332, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: TRUE
f_1462(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8332, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1466(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8332, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: 0 = 0
f_1466(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8332, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1470(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8332, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: 0 = 0
f_1470(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8332, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1474(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8332, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: 0 = 0
f_1474(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8332, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1478(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8332, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: 0 = 0
f_1478(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8332, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1482(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8332, v11002, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: TRUE
f_1482(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8332, v11002, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1486(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8332, v11002, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: 0 = 0
f_1486(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v8332, v11002, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) -> f_1493(v8323, v8324, v8325, v8326, v8327, v8328, v8329, v8330, v9461, v9650, 1, v11002, 0, v8331, v8337, v8348, v8338, v8349, v8339, v8350, v8340, v8351, v8341, v8352, v8345, v8347, v8353, v8354, v8355, v8356, v8357, v8358, v8336, v8342, v8343, v8344, v8346, 3, 7, 2, 4, 8) :|: v8332 = v11002
Combined rules. Obtained 2 rulesP rules:
f_1493(v8323:0, v8324:0, v8325:0, v8326:0, v8327:0, v8328:0, v8329:0, v8330:0, v9461:0, v11002:0, 1, v11002:0, 0, v8331:0, v8337:0, v8348:0, v8338:0, v8349:0, v8339:0, v8350:0, v8340:0, v8351:0, v8341:0, v8352:0, v8345:0, v8347:0, v8353:0, v8354:0, v8355:0, v8356:0, v8357:0, v8358:0, v8336:0, v8342:0, v8343:0, v8344:0, v8346:0, 3, 7, 2, 4, 8) -> f_1493(v8323:0, v8324:0, v8325:0, v8326:0, v8327:0, v8328:0, v8329:0, v8330:0, 1 + v9461:0, v9650:1, 1, v11002:0, 0, v9461:0, v8337:0, v8348:0, v8338:0, v8349:0, v8339:0, v8350:0, v8340:0, v8351:0, v8341:0, v8352:0, v8345:0, v8347:0, v8353:0, v8354:0, v8355:0, v8356:0, v8357:0, v8358:0, v8331:0, v8342:0, v8343:0, v8344:0, v8346:0, 3, 7, 2, 4, 8) :|: v9461:0 > 1 && v8345:0 > 1 + v9461:0 && v8345:0 > 3 && v9650:1 < 0
f_1493(v8323:0, v8324:0, v8325:0, v8326:0, v8327:0, v8328:0, v8329:0, v8330:0, v9461:0, v11002:0, 1, v11002:0, 0, v8331:0, v8337:0, v8348:0, v8338:0, v8349:0, v8339:0, v8350:0, v8340:0, v8351:0, v8341:0, v8352:0, v8345:0, v8347:0, v8353:0, v8354:0, v8355:0, v8356:0, v8357:0, v8358:0, v8336:0, v8342:0, v8343:0, v8344:0, v8346:0, 3, 7, 2, 4, 8) -> f_1493(v8323:0, v8324:0, v8325:0, v8326:0, v8327:0, v8328:0, v8329:0, v8330:0, 1 + v9461:0, v9650:1, 1, v11002:0, 0, v9461:0, v8337:0, v8348:0, v8338:0, v8349:0, v8339:0, v8350:0, v8340:0, v8351:0, v8341:0, v8352:0, v8345:0, v8347:0, v8353:0, v8354:0, v8355:0, v8356:0, v8357:0, v8358:0, v8331:0, v8342:0, v8343:0, v8344:0, v8346:0, 3, 7, 2, 4, 8) :|: v9461:0 > 1 && v8345:0 > 1 + v9461:0 && v8345:0 > 3 && v9650:1 > 0
Filtered unneeded arguments:
   f_1493(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42) -> f_1493(x9, x10, x12, x25)
Removed division, modulo operations, cleaned up constraints. Obtained 2 rules.P rules:
f_1493(v9461:0, v11002:0, v11002:01, v8345:0) -> f_1493(1 + v9461:0, v9650:1, v11002:0, v8345:0) :|: v8345:0 > 1 + v9461:0 && v9461:0 > 1 && v9650:1 < 0 && v8345:0 > 3 && v11002:0 = v11002:01
f_1493(v9461:0, v11002:0, v11002:01, v8345:0) -> f_1493(1 + v9461:0, v9650:1, v11002:0, v8345:0) :|: v8345:0 > 1 + v9461:0 && v9461:0 > 1 && v9650:1 > 0 && v8345:0 > 3 && v11002:0 = v11002:01

----------------------------------------

(24)
Obligation:
Rules:
f_1493(v9461:0, v11002:0, v11002:01, v8345:0) -> f_1493(1 + v9461:0, v9650:1, v11002:0, v8345:0) :|: v8345:0 > 1 + v9461:0 && v9461:0 > 1 && v9650:1 < 0 && v8345:0 > 3 && v11002:0 = v11002:01
f_1493(x, x1, x2, x3) -> f_1493(1 + x, x4, x1, x3) :|: x3 > 1 + x && x > 1 && x4 > 0 && x3 > 3 && x1 = x2

----------------------------------------

(25) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(26)
Obligation:
Rules:
f_1493(v9461:0:0, v11002:01:0, v11002:01:01, v8345:0:0) -> f_1493(1 + v9461:0:0, v9650:1:0, v11002:01:0, v8345:0:0) :|: v9650:1:0 < 0 && v8345:0:0 > 3 && v9461:0:0 > 1 && v8345:0:0 > 1 + v9461:0:0 && v11002:01:0 = v11002:01:01
f_1493(x:0, x1:0, x1:01, x3:0) -> f_1493(1 + x:0, x4:0, x1:0, x3:0) :|: x4:0 > 0 && x3:0 > 3 && x:0 > 1 && x3:0 > 1 + x:0 && x1:0 = x1:01

----------------------------------------

(27) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1493(x, x1, x2, x3)] = -2 - x + x3

The following rules are decreasing:
f_1493(v9461:0:0, v11002:01:0, v11002:01:01, v8345:0:0) -> f_1493(1 + v9461:0:0, v9650:1:0, v11002:01:0, v8345:0:0) :|: v9650:1:0 < 0 && v8345:0:0 > 3 && v9461:0:0 > 1 && v8345:0:0 > 1 + v9461:0:0 && v11002:01:0 = v11002:01:01
f_1493(x:0, x1:0, x1:01, x3:0) -> f_1493(1 + x:0, x4:0, x1:0, x3:0) :|: x4:0 > 0 && x3:0 > 3 && x:0 > 1 && x3:0 > 1 + x:0 && x1:0 = x1:01
The following rules are bounded:
f_1493(v9461:0:0, v11002:01:0, v11002:01:01, v8345:0:0) -> f_1493(1 + v9461:0:0, v9650:1:0, v11002:01:0, v8345:0:0) :|: v9650:1:0 < 0 && v8345:0:0 > 3 && v9461:0:0 > 1 && v8345:0:0 > 1 + v9461:0:0 && v11002:01:0 = v11002:01:01
f_1493(x:0, x1:0, x1:01, x3:0) -> f_1493(1 + x:0, x4:0, x1:0, x3:0) :|: x4:0 > 0 && x3:0 > 3 && x:0 > 1 && x3:0 > 1 + x:0 && x1:0 = x1:01

----------------------------------------

(28)
YES

----------------------------------------

(29)
Obligation:
SCC
----------------------------------------

(30) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 21 rulesP rules:
f_1018(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v3537, v3766, v2432, v2433, v2434, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2435, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) -> f_1025(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v3537, v3766, v2432, v2433, v2434, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2435, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) :|: 0 = 0
f_1025(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v3537, v3766, v2432, v2433, v2434, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2435, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) -> f_1032(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v3537, v3766, v2432, v2433, v2434, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2435, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) :|: TRUE
f_1032(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v3537, v3766, v2432, v2433, v2434, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2435, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) -> f_1039(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v3537, v3766, v2433, v2434, v2432, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2435, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) :|: 0 = 0
f_1039(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v3537, v3766, v2433, v2434, v2432, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2435, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) -> f_1045(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v3537, v3766, v2433, v2434, v2432, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2435, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) :|: 0 = 0
f_1045(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v3537, v3766, v2433, v2434, v2432, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2435, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) -> f_1051(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v3537, v3766, v2434, v2432, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2433, v2435, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) :|: 0 = 0
f_1051(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v3537, v3766, v2434, v2432, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2433, v2435, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) -> f_1056(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v3537, v3766, v2434, v2432, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2433, v2435, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) :|: 0 = 0
f_1056(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v3537, v3766, v2434, v2432, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2433, v2435, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) -> f_1061(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v3537, v3766, v4487, v2434, v2432, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2433, v2435, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) :|: TRUE
f_1061(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v3537, v3766, v4487, v2434, v2432, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2433, v2435, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) -> f_1066(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v3537, v3766, v4487, v2432, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2433, v2435, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) :|: 0 = 0
f_1066(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v3537, v3766, v4487, v2432, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2433, v2435, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) -> f_1072(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v3537, v3766, v4487, v2432, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2433, v2435, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) :|: v3766 != v4487
f_1072(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v3537, v3766, v4487, v2432, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2433, v2435, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) -> f_1081(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v3537, v3766, v4487, v2432, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2433, v2435, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) :|: 0 = 0
f_1081(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v3537, v3766, v4487, v2432, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2433, v2435, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) -> f_1090(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v3537, v3766, v4487, v2432, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2433, v2435, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) :|: 0 = 0
f_1090(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v3537, v3766, v4487, v2432, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2433, v2435, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) -> f_962(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v3537, v3766, v4487, v2432, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2433, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) :|: TRUE
f_962(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v2432, v2433, v2434, v2435, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) -> f_973(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v2432, v2433, v2434, v2435, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) :|: TRUE
f_973(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v2432, v2433, v2434, v2435, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) -> f_980(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v2432, v2433, v2434, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2435, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) :|: 0 = 0
f_980(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v2432, v2433, v2434, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2435, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) -> f_987(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v2432, v2433, v2434, v3537, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2435, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) :|: v3537 = 1 + v2432 && 3 <= v3537
f_987(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v2432, v2433, v2434, v3537, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2435, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) -> f_994(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v2432, v2433, v2434, v3537, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2435, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) :|: TRUE
f_994(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v2432, v2433, v2434, v3537, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2435, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) -> f_998(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v2432, v2433, v2434, v3537, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2435, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) :|: TRUE
f_998(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v2432, v2433, v2434, v3537, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2435, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) -> f_1003(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v3537, v2433, v2432, v2434, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2435, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) :|: 0 = 0
f_1003(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v3537, v2433, v2432, v2434, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2435, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) -> f_1008(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v3537, v3766, v2433, v2432, v2434, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2435, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) :|: TRUE
f_1008(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v3537, v3766, v2433, v2432, v2434, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2435, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) -> f_1013(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v3537, v3766, v2432, v2433, v2434, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2435, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) :|: 0 = 0
f_1013(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v3537, v3766, v2432, v2433, v2434, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2435, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) -> f_1018(v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, 1, v3537, v3766, v2432, v2433, v2434, v2436, v2448, v2437, v2449, v2438, v2450, v2439, v2451, v2440, v2452, v2445, v2447, v2453, v2454, v2455, v2456, v2457, v2458, v2459, v2435, v2460, 0, v2441, v2442, v2444, v2446, 3, 7, 2, 4, 8) :|: v3766 != 0 && v3537 < v2447 && 4 <= v2447
Combined rules. Obtained 4 rulesP rules:
f_1018(v2422:0, v2423:0, v2424:0, v2425:0, v2426:0, v2427:0, v2428:0, v2429:0, v2430:0, 1, v3537:0, v3766:0, v2432:0, v2433:0, v2434:0, v2436:0, v2448:0, v2437:0, v2449:0, v2438:0, v2450:0, v2439:0, v2451:0, v2440:0, v2452:0, v2445:0, v2447:0, v2453:0, v2454:0, v2455:0, v2456:0, v2457:0, v2458:0, v2459:0, v2435:0, v2460:0, 0, v2441:0, v2442:0, v2444:0, v2446:0, 3, 7, 2, 4, 8) -> f_1018(v2422:0, v2423:0, v2424:0, v2425:0, v2426:0, v2427:0, v2428:0, v2429:0, v2430:0, 1, 1 + v3537:0, v3766:1, v3537:0, v3766:0, v4487:0, v2436:0, v2448:0, v2437:0, v2449:0, v2438:0, v2450:0, v2439:0, v2451:0, v2440:0, v2452:0, v2445:0, v2447:0, v2453:0, v2454:0, v2455:0, v2456:0, v2457:0, v2458:0, v2459:0, v2432:0, v2433:0, 0, v2441:0, v2442:0, v2444:0, v2446:0, 3, 7, 2, 4, 8) :|: v4487:0 > v3766:0 && v3537:0 > 1 && v2447:0 > 1 + v3537:0 && v2447:0 > 3 && v3766:1 < 0
f_1018(v2422:0, v2423:0, v2424:0, v2425:0, v2426:0, v2427:0, v2428:0, v2429:0, v2430:0, 1, v3537:0, v3766:0, v2432:0, v2433:0, v2434:0, v2436:0, v2448:0, v2437:0, v2449:0, v2438:0, v2450:0, v2439:0, v2451:0, v2440:0, v2452:0, v2445:0, v2447:0, v2453:0, v2454:0, v2455:0, v2456:0, v2457:0, v2458:0, v2459:0, v2435:0, v2460:0, 0, v2441:0, v2442:0, v2444:0, v2446:0, 3, 7, 2, 4, 8) -> f_1018(v2422:0, v2423:0, v2424:0, v2425:0, v2426:0, v2427:0, v2428:0, v2429:0, v2430:0, 1, 1 + v3537:0, v3766:1, v3537:0, v3766:0, v4487:0, v2436:0, v2448:0, v2437:0, v2449:0, v2438:0, v2450:0, v2439:0, v2451:0, v2440:0, v2452:0, v2445:0, v2447:0, v2453:0, v2454:0, v2455:0, v2456:0, v2457:0, v2458:0, v2459:0, v2432:0, v2433:0, 0, v2441:0, v2442:0, v2444:0, v2446:0, 3, 7, 2, 4, 8) :|: v4487:0 > v3766:0 && v3537:0 > 1 && v2447:0 > 1 + v3537:0 && v2447:0 > 3 && v3766:1 > 0
f_1018(v2422:0, v2423:0, v2424:0, v2425:0, v2426:0, v2427:0, v2428:0, v2429:0, v2430:0, 1, v3537:0, v3766:0, v2432:0, v2433:0, v2434:0, v2436:0, v2448:0, v2437:0, v2449:0, v2438:0, v2450:0, v2439:0, v2451:0, v2440:0, v2452:0, v2445:0, v2447:0, v2453:0, v2454:0, v2455:0, v2456:0, v2457:0, v2458:0, v2459:0, v2435:0, v2460:0, 0, v2441:0, v2442:0, v2444:0, v2446:0, 3, 7, 2, 4, 8) -> f_1018(v2422:0, v2423:0, v2424:0, v2425:0, v2426:0, v2427:0, v2428:0, v2429:0, v2430:0, 1, 1 + v3537:0, v3766:1, v3537:0, v3766:0, v4487:0, v2436:0, v2448:0, v2437:0, v2449:0, v2438:0, v2450:0, v2439:0, v2451:0, v2440:0, v2452:0, v2445:0, v2447:0, v2453:0, v2454:0, v2455:0, v2456:0, v2457:0, v2458:0, v2459:0, v2432:0, v2433:0, 0, v2441:0, v2442:0, v2444:0, v2446:0, 3, 7, 2, 4, 8) :|: v4487:0 < v3766:0 && v3537:0 > 1 && v2447:0 > 1 + v3537:0 && v2447:0 > 3 && v3766:1 < 0
f_1018(v2422:0, v2423:0, v2424:0, v2425:0, v2426:0, v2427:0, v2428:0, v2429:0, v2430:0, 1, v3537:0, v3766:0, v2432:0, v2433:0, v2434:0, v2436:0, v2448:0, v2437:0, v2449:0, v2438:0, v2450:0, v2439:0, v2451:0, v2440:0, v2452:0, v2445:0, v2447:0, v2453:0, v2454:0, v2455:0, v2456:0, v2457:0, v2458:0, v2459:0, v2435:0, v2460:0, 0, v2441:0, v2442:0, v2444:0, v2446:0, 3, 7, 2, 4, 8) -> f_1018(v2422:0, v2423:0, v2424:0, v2425:0, v2426:0, v2427:0, v2428:0, v2429:0, v2430:0, 1, 1 + v3537:0, v3766:1, v3537:0, v3766:0, v4487:0, v2436:0, v2448:0, v2437:0, v2449:0, v2438:0, v2450:0, v2439:0, v2451:0, v2440:0, v2452:0, v2445:0, v2447:0, v2453:0, v2454:0, v2455:0, v2456:0, v2457:0, v2458:0, v2459:0, v2432:0, v2433:0, 0, v2441:0, v2442:0, v2444:0, v2446:0, 3, 7, 2, 4, 8) :|: v4487:0 < v3766:0 && v3537:0 > 1 && v2447:0 > 1 + v3537:0 && v2447:0 > 3 && v3766:1 > 0
Filtered unneeded arguments:
   f_1018(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46) -> f_1018(x11, x12, x27)
Removed division, modulo operations, cleaned up constraints. Obtained 2 rules.P rules:
f_1018(v3537:0, v3766:0, v2447:0) -> f_1018(1 + v3537:0, v3766:1, v2447:0) :|: v2447:0 > 1 + v3537:0 && v3537:0 > 1 && v3766:1 < 0 && v2447:0 > 3
f_1018(v3537:0, v3766:0, v2447:0) -> f_1018(1 + v3537:0, v3766:1, v2447:0) :|: v2447:0 > 1 + v3537:0 && v3537:0 > 1 && v3766:1 > 0 && v2447:0 > 3

----------------------------------------

(31)
Obligation:
Rules:
f_1018(v3537:0, v3766:0, v2447:0) -> f_1018(1 + v3537:0, v3766:1, v2447:0) :|: v2447:0 > 1 + v3537:0 && v3537:0 > 1 && v3766:1 < 0 && v2447:0 > 3
f_1018(x, x1, x2) -> f_1018(1 + x, x3, x2) :|: x2 > 1 + x && x > 1 && x3 > 0 && x2 > 3

----------------------------------------

(32) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(33)
Obligation:
Rules:
f_1018(v3537:0:0, v3766:0:0, v2447:0:0) -> f_1018(1 + v3537:0:0, v3766:1:0, v2447:0:0) :|: v3766:1:0 < 0 && v2447:0:0 > 3 && v3537:0:0 > 1 && v2447:0:0 > 1 + v3537:0:0
f_1018(x:0, x1:0, x2:0) -> f_1018(1 + x:0, x3:0, x2:0) :|: x3:0 > 0 && x2:0 > 3 && x:0 > 1 && x2:0 > 1 + x:0

----------------------------------------

(34) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1018(x1, x2, x3) -> f_1018(x1, x3)

----------------------------------------

(35)
Obligation:
Rules:
f_1018(v3537:0:0, v2447:0:0) -> f_1018(1 + v3537:0:0, v2447:0:0) :|: v3766:1:0 < 0 && v2447:0:0 > 3 && v3537:0:0 > 1 && v2447:0:0 > 1 + v3537:0:0
f_1018(x:0, x2:0) -> f_1018(1 + x:0, x2:0) :|: x3:0 > 0 && x2:0 > 3 && x:0 > 1 && x2:0 > 1 + x:0

----------------------------------------

(36) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1018(x, x1)] = -x + x1

The following rules are decreasing:
f_1018(v3537:0:0, v2447:0:0) -> f_1018(1 + v3537:0:0, v2447:0:0) :|: v3766:1:0 < 0 && v2447:0:0 > 3 && v3537:0:0 > 1 && v2447:0:0 > 1 + v3537:0:0
f_1018(x:0, x2:0) -> f_1018(1 + x:0, x2:0) :|: x3:0 > 0 && x2:0 > 3 && x:0 > 1 && x2:0 > 1 + x:0
The following rules are bounded:
f_1018(v3537:0:0, v2447:0:0) -> f_1018(1 + v3537:0:0, v2447:0:0) :|: v3766:1:0 < 0 && v2447:0:0 > 3 && v3537:0:0 > 1 && v2447:0:0 > 1 + v3537:0:0
f_1018(x:0, x2:0) -> f_1018(1 + x:0, x2:0) :|: x3:0 > 0 && x2:0 > 3 && x:0 > 1 && x2:0 > 1 + x:0

----------------------------------------

(37)
YES
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.001s
