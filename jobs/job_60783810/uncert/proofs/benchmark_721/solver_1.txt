YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/kGcXZ.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could be proven:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 18 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 2550 ms]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) LLVM Symbolic Execution SCC
        (8) SCC2IRS [SOUND, 0 ms]
        (9) IntTRS
        (10) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (11) IntTRS
        (12) RankingReductionPairProof [EQUIVALENT, 12 ms]
        (13) YES
    (14) LLVM Symbolic Execution SCC
        (15) SCC2IRS [SOUND, 0 ms]
        (16) IntTRS
        (17) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (18) IntTRS
        (19) RankingReductionPairProof [EQUIVALENT, 11 ms]
        (20) YES
    (21) LLVM Symbolic Execution SCC
        (22) SCC2IRS [SOUND, 13 ms]
        (23) IntTRS
        (24) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (25) IntTRS
        (26) RankingReductionPairProof [EQUIVALENT, 14 ms]
        (27) YES
    (28) LLVM Symbolic Execution SCC
        (29) SCC2IRS [SOUND, 17 ms]
        (30) IntTRS
        (31) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (32) IntTRS
        (33) RankingReductionPairProof [EQUIVALENT, 19 ms]
        (34) YES
    (35) LLVM Symbolic Execution SCC
        (36) SCC2IRS [SOUND, 5 ms]
        (37) IntTRS
        (38) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (39) IntTRS
        (40) RankingReductionPairProof [EQUIVALENT, 5 ms]
        (41) YES
    (42) LLVM Symbolic Execution SCC
        (43) SCC2IRS [SOUND, 0 ms]
        (44) IntTRS
        (45) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (46) IntTRS
        (47) RankingReductionPairProof [EQUIVALENT, 6 ms]
        (48) YES
    (49) LLVM Symbolic Execution SCC
        (50) SCC2IRS [SOUND, 2 ms]
        (51) IntTRS
        (52) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (53) IntTRS
        (54) RankingReductionPairProof [EQUIVALENT, 7 ms]
        (55) YES
    (56) LLVM Symbolic Execution SCC
        (57) SCC2IRS [SOUND, 0 ms]
        (58) IntTRS
        (59) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (60) IntTRS
        (61) RankingReductionPairProof [EQUIVALENT, 5 ms]
        (62) YES


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/kGcXZ.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/kGcXZ.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "gcd" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: (0 i32, 1 i32) variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 7
	0:
		%3 = alloca i32, align 4
		%4 = alloca i32, align 4
		%5 = alloca i32, align 4
		store %0, %3
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		store %1, %4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %4)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %5)
		%6 = load %3
		%7 = icmp slt %6 0
		br %7, %8, %11
	8:
		%9 = load %3
		%10 = sub i32 0, %9
		store %10, %3
		br %11
	11:
		%12 = load %4
		%13 = icmp slt %12 0
		br %13, %14, %17
	14:
		%15 = load %4
		%16 = sub i32 0, %15
		store %16, %4
		br %17
	17:
		br %18
	18:
		%19 = load %4
		%20 = icmp sgt %19 0
		br %20, %21, %34
	21:
		%22 = load %3
		store %22, %5
		br %23
	23:
		%24 = load %5
		%25 = load %4
		%26 = icmp sge %24 %25
		br %26, %27, %31
	27:
		%28 = load %5
		%29 = load %4
		%30 = sub i32 %28, %29
		store %30, %5
		br %23
	31:
		%32 = load %4
		store %32, %3
		%33 = load %5
		store %33, %4
		br %18
	34:
		%35 = load %3
		ret %35

*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 57
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %1)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		%3 = call i32 @__VERIFIER_nondet_int()
		store %3, %1
		%4 = call i32 @__VERIFIER_nondet_int()
		store %4, %2
		%5 = load %1
		%6 = load %2
		%7 = call i32 @gcd(i32 %5, i32 %6)
		ret 0


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 8 SCCs.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC
----------------------------------------

(8) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 33 rulesP rules:
f_891(v5802, v5803, v5804, v5805, v5806, 0, 1, v5809, v5810, v5811, v5812, v5813, v5815, v5814, v5816, v5817, v5818, v5819, 3, 2, 4) -> f_897(v5802, v5803, v5804, v5805, v5806, 0, 1, v5809, v5810, v5811, v5812, v5813, v5815, v5814, v5816, v5817, v5818, v5819, 3, 2, 4) :|: 0 = 0
f_897(v5802, v5803, v5804, v5805, v5806, 0, 1, v5809, v5810, v5811, v5812, v5813, v5815, v5814, v5816, v5817, v5818, v5819, 3, 2, 4) -> f_902(v5802, v5803, v5804, v5805, v5806, 0, 1, v5809, v5810, v5811, v5812, v5813, v5815, v5814, v5816, v5817, v5818, v5819, 3, 2, 4) :|: 0 = 0
f_902(v5802, v5803, v5804, v5805, v5806, 0, 1, v5809, v5810, v5811, v5812, v5813, v5815, v5814, v5816, v5817, v5818, v5819, 3, 2, 4) -> f_906(v5802, v5803, v5804, v5805, v5806, 0, 1, v5809, v5810, v5811, v5812, v5813, v5815, v5814, v5816, v5817, v5818, v5819, 3, 2, 4) :|: TRUE
f_906(v5802, v5803, v5804, v5805, v5806, 0, 1, v5809, v5810, v5811, v5812, v5813, v5815, v5814, v5816, v5817, v5818, v5819, 3, 2, 4) -> f_907(v5802, v5803, v5804, v5805, v5806, 0, 1, v5809, v5810, v5811, v5811, v5812, v5811, v5810, v5813, v5815, v5814, v5816, v5817, v5818, v5819, 3, 2, 4) :|: v5810 <= v5811 && v5810 <= v5811 && v5810 <= v5810 && 1 <= v5802 && 2 + v5803 <= 0 && 1 <= v5804 && 1 <= v5805 && 1 <= v5806 && 2 <= v5809 && 1 <= v5810 && 2 <= v5811 && 1 <= v5811 && 2 <= v5812 && 1 <= v5811 && 1 <= v5810 && 1 <= v5813 && 1 <= v5814 && 4 <= v5815 && 4 <= v5816 && 4 <= v5817 && 4 <= v5818 && 4 <= v5819 && v5813 <= v5815 && v5814 <= v5816 && v5804 <= v5817 && v5805 <= v5818 && v5806 <= v5819
f_907(v6304, v6305, v6306, v6307, v6308, 0, 1, v6311, v6312, v6313, v6314, v6315, v6316, v6317, v6318, v6320, v6319, v6321, v6322, v6323, v6324, 3, 2, 4) -> f_912(v6304, v6305, v6306, v6307, v6308, 0, 1, v6311, v6312, v6313, v6314, v6316, v6317, v6318, v6320, v6319, v6321, v6322, v6323, v6324, 3, 2, 4) :|: 0 = 0
f_912(v6304, v6305, v6306, v6307, v6308, 0, 1, v6311, v6312, v6313, v6314, v6316, v6317, v6318, v6320, v6319, v6321, v6322, v6323, v6324, 3, 2, 4) -> f_916(v6304, v6305, v6306, v6307, v6308, 0, 1, v6311, v6312, v6313, v6314, v6317, v6318, v6320, v6319, v6321, v6322, v6323, v6324, 3, 2, 4) :|: 0 = 0
f_916(v6304, v6305, v6306, v6307, v6308, 0, 1, v6311, v6312, v6313, v6314, v6317, v6318, v6320, v6319, v6321, v6322, v6323, v6324, 3, 2, 4) -> f_921(v6304, v6305, v6306, v6307, v6308, 0, 1, v6311, v6312, v6313, v6314, v6573, v6318, v6320, v6319, v6321, v6322, v6323, v6324, 3, 2, 4) :|: v6573 + v6312 = v6314 && 0 <= v6573
f_921(v6304, v6305, v6306, v6307, v6308, 0, 1, v6311, v6312, v6313, v6314, v6573, v6318, v6320, v6319, v6321, v6322, v6323, v6324, 3, 2, 4) -> f_926(v6304, v6305, v6306, v6307, v6308, 0, 1, v6311, v6312, v6313, v6314, v6573, v6318, v6320, v6319, v6321, v6322, v6323, v6324, 3, 2, 4) :|: TRUE
f_926(v6304, v6305, v6306, v6307, v6308, 0, 1, v6311, v6312, v6313, v6314, v6573, v6318, v6320, v6319, v6321, v6322, v6323, v6324, 3, 2, 4) -> f_930(v6304, v6305, v6306, v6307, v6308, 0, 1, v6311, v6312, v6313, v6314, v6573, v6318, v6320, v6319, v6321, v6322, v6323, v6324, 3, 2, 4) :|: TRUE
f_930(v6304, v6305, v6306, v6307, v6308, 0, 1, v6311, v6312, v6313, v6314, v6573, v6318, v6320, v6319, v6321, v6322, v6323, v6324, 3, 2, 4) -> f_931(v6304, v6305, v6306, v6307, v6308, 0, 1, v6311, v6312, v6313, v6314, v6573, v6318, v6320, v6319, v6321, v6322, v6323, v6324, 3, 2, 4) :|: 1 <= v6304 && 2 + v6305 <= 0 && 1 <= v6306 && 1 <= v6307 && 1 <= v6308 && 2 <= v6311 && 1 <= v6312 && 2 <= v6313 && 1 <= v6314 && 0 <= v6573 && 1 <= v6318 && 1 <= v6319 && 4 <= v6320 && 4 <= v6321 && 4 <= v6322 && 4 <= v6323 && 4 <= v6324 && v6318 <= v6320 && v6319 <= v6321 && v6306 <= v6322 && v6307 <= v6323 && v6308 <= v6324
f_931(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6779, v6780, v6781, v6782, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) -> f_937(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6779, v6780, v6782, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) :|: 0 = 0
f_937(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6779, v6780, v6782, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) -> f_942(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6779, v6780, v6782, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) :|: 0 = 0
f_942(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6779, v6780, v6782, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) -> f_947(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6779, v6780, v6782, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) :|: v6779 <= v6782 && 1 <= v6782 && 2 <= v6781
f_942(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6779, v6780, v6782, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) -> f_948(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6779, v6780, v6782, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) :|: v6782 < v6779
f_947(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6779, v6780, v6782, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) -> f_954(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6779, v6780, v6782, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) :|: 0 = 0
f_954(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6779, v6780, v6782, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) -> f_960(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6779, v6780, v6782, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) :|: TRUE
f_960(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6779, v6780, v6782, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) -> f_907(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6779, v6780, v6782, v6781, v6779, v6782, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) :|: v6779 <= v6782 && v6779 <= v6779 && v6779 <= v6782 && 1 <= v6771 && 2 + v6772 <= 0 && 1 <= v6773 && 1 <= v6774 && 1 <= v6775 && 2 <= v6778 && 1 <= v6779 && 2 <= v6780 && 1 <= v6782 && 2 <= v6781 && 1 <= v6779 && 1 <= v6782 && 1 <= v6783 && 1 <= v6784 && 4 <= v6785 && 4 <= v6786 && 4 <= v6787 && 4 <= v6788 && 4 <= v6789 && v6783 <= v6785 && v6784 <= v6786 && v6773 <= v6787 && v6774 <= v6788 && v6775 <= v6789
f_948(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6779, v6780, v6782, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) -> f_955(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6779, v6780, v6782, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) :|: 0 = 0
f_955(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6779, v6780, v6782, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) -> f_961(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6779, v6780, v6782, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) :|: TRUE
f_961(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6779, v6780, v6782, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) -> f_966(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6779, v6780, v6782, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) :|: 0 = 0
f_966(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6779, v6780, v6782, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) -> f_971(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6779, v6780, v6782, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) :|: TRUE
f_971(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6779, v6780, v6782, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) -> f_976(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6779, v6780, v6782, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) :|: 0 = 0
f_976(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6779, v6780, v6782, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) -> f_981(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6779, v6780, v6782, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) :|: TRUE
f_981(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6779, v6780, v6782, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) -> f_986(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6779, v6780, v6782, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) :|: TRUE
f_986(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6779, v6780, v6782, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) -> f_991(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6782, v6780, v6779, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) :|: 0 = 0
f_991(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6782, v6780, v6779, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) -> f_995(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6782, v6780, v6779, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) :|: 0 < v6782 && 3 <= v6781 && 2 <= v6779
f_995(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6782, v6780, v6779, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) -> f_1000(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6782, v6780, v6779, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) :|: 0 = 0
f_1000(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6782, v6780, v6779, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) -> f_1005(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6782, v6780, v6779, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) :|: TRUE
f_1005(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6782, v6780, v6779, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) -> f_1008(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6782, v6779, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) :|: 0 = 0
f_1008(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6782, v6779, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) -> f_1010(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6782, v6779, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) :|: TRUE
f_1010(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6782, v6779, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) -> f_1012(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6782, v6779, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) :|: TRUE
f_1012(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6782, v6779, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) -> f_886(v6771, v6772, v6773, v6774, v6775, 0, 1, v6778, v6782, v6779, v6781, v6783, v6785, v6784, v6786, v6787, v6788, v6789, 3, 2, 4) :|: v6782 < v6779 && 1 <= v6771 && 2 + v6772 <= 0 && 1 <= v6773 && 1 <= v6774 && 1 <= v6775 && 2 <= v6778 && 1 <= v6782 && 2 <= v6779 && 3 <= v6781 && 1 <= v6783 && 1 <= v6784 && 4 <= v6785 && 4 <= v6786 && 4 <= v6787 && 4 <= v6788 && 4 <= v6789 && v6783 <= v6785 && v6784 <= v6786 && v6773 <= v6787 && v6774 <= v6788 && v6775 <= v6789
f_886(v5802, v5803, v5804, v5805, v5806, 0, 1, v5809, v5810, v5811, v5812, v5813, v5815, v5814, v5816, v5817, v5818, v5819, 3, 2, 4) -> f_891(v5802, v5803, v5804, v5805, v5806, 0, 1, v5809, v5810, v5811, v5812, v5813, v5815, v5814, v5816, v5817, v5818, v5819, 3, 2, 4) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_942(v6771:0, v6772:0, v6773:0, v6774:0, v6775:0, 0, 1, v6778:0, v6779:0, v6780:0, v6573:0 + v6779:0, v6781:0, v6783:0, v6785:0, v6784:0, v6786:0, v6787:0, v6788:0, v6789:0, 3, 2, 4) -> f_942(v6771:0, v6772:0, v6773:0, v6774:0, v6775:0, 0, 1, v6778:0, v6779:0, v6780:0, v6573:0, v6573:0 + v6779:0, v6783:0, v6785:0, v6784:0, v6786:0, v6787:0, v6788:0, v6789:0, 3, 2, 4) :|: v6779:0 <= v6573:0 + v6779:0 && v6771:0 > 0 && v6772:0 < -1 && v6773:0 > 0 && v6774:0 > 0 && v6775:0 > 0 && v6778:0 > 1 && v6779:0 > 0 && v6780:0 > 1 && v6573:0 + v6779:0 > 0 && v6781:0 > 1 && v6783:0 > 0 && v6784:0 > 0 && v6785:0 > 3 && v6786:0 > 3 && v6573:0 > -1 && v6787:0 > 3 && v6788:0 > 3 && v6789:0 > 3 && v6785:0 >= v6783:0 && v6786:0 >= v6784:0 && v6787:0 >= v6773:0 && v6788:0 >= v6774:0 && v6789:0 >= v6775:0
f_942(v6771:0, v6772:0, v6773:0, v6774:0, v6775:0, 0, 1, v6778:0, v6573:0 + v6782:0, v6780:0, v6782:0, v6781:0, v6783:0, v6785:0, v6784:0, v6786:0, v6787:0, v6788:0, v6789:0, 3, 2, 4) -> f_942(v6771:0, v6772:0, v6773:0, v6774:0, v6775:0, 0, 1, v6778:0, v6782:0, v6573:0 + v6782:0, v6573:0, v6573:0 + v6782:0, v6783:0, v6785:0, v6784:0, v6786:0, v6787:0, v6788:0, v6789:0, 3, 2, 4) :|: v6782:0 < v6573:0 + v6782:0 && v6573:0 + v6782:0 > 1 && v6781:0 > 2 && v6771:0 > 0 && v6772:0 < -1 && v6773:0 > 0 && v6774:0 > 0 && v6775:0 > 0 && v6778:0 > 1 && v6782:0 > 0 && v6783:0 > 0 && v6784:0 > 0 && v6785:0 > 3 && v6786:0 > 3 && v6787:0 > 3 && v6573:0 > -1 && v6788:0 > 3 && v6789:0 > 3 && v6785:0 >= v6783:0 && v6786:0 >= v6784:0 && v6787:0 >= v6773:0 && v6788:0 >= v6774:0 && v6789:0 >= v6775:0
Filtered unneeded arguments:
   f_942(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22) -> f_942(x1, x2, x3, x4, x5, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19)
Removed division, modulo operations, cleaned up constraints. Obtained 2 rules.P rules:
f_942(v6771:0, v6772:0, v6773:0, v6774:0, v6775:0, v6778:0, v6779:0, v6780:0, sum~v6573:0~v6779:0, v6781:0, v6783:0, v6785:0, v6784:0, v6786:0, v6787:0, v6788:0, v6789:0) -> f_942(v6771:0, v6772:0, v6773:0, v6774:0, v6775:0, v6778:0, v6779:0, v6780:0, v6573:0, v6573:0 + v6779:0, v6783:0, v6785:0, v6784:0, v6786:0, v6787:0, v6788:0, v6789:0) :|: v6771:0 > 0 && v6779:0 <= v6573:0 + v6779:0 && v6772:0 < -1 && v6773:0 > 0 && v6774:0 > 0 && v6775:0 > 0 && v6778:0 > 1 && v6779:0 > 0 && v6780:0 > 1 && v6573:0 + v6779:0 > 0 && v6781:0 > 1 && v6783:0 > 0 && v6784:0 > 0 && v6785:0 > 3 && v6786:0 > 3 && v6573:0 > -1 && v6787:0 > 3 && v6788:0 > 3 && v6789:0 > 3 && v6785:0 >= v6783:0 && v6786:0 >= v6784:0 && v6787:0 >= v6773:0 && v6789:0 >= v6775:0 && v6788:0 >= v6774:0 && sum~v6573:0~v6779:0 = v6573:0 + v6779:0
f_942(v6771:0, v6772:0, v6773:0, v6774:0, v6775:0, v6778:0, sum~v6573:0~v6782:0, v6780:0, v6782:0, v6781:0, v6783:0, v6785:0, v6784:0, v6786:0, v6787:0, v6788:0, v6789:0) -> f_942(v6771:0, v6772:0, v6773:0, v6774:0, v6775:0, v6778:0, v6782:0, v6573:0 + v6782:0, v6573:0, v6573:0 + v6782:0, v6783:0, v6785:0, v6784:0, v6786:0, v6787:0, v6788:0, v6789:0) :|: v6573:0 + v6782:0 > 1 && v6782:0 < v6573:0 + v6782:0 && v6781:0 > 2 && v6771:0 > 0 && v6772:0 < -1 && v6773:0 > 0 && v6774:0 > 0 && v6775:0 > 0 && v6778:0 > 1 && v6782:0 > 0 && v6783:0 > 0 && v6784:0 > 0 && v6785:0 > 3 && v6786:0 > 3 && v6787:0 > 3 && v6573:0 > -1 && v6788:0 > 3 && v6789:0 > 3 && v6785:0 >= v6783:0 && v6786:0 >= v6784:0 && v6787:0 >= v6773:0 && v6789:0 >= v6775:0 && v6788:0 >= v6774:0 && sum~v6573:0~v6782:0 = v6573:0 + v6782:0

----------------------------------------

(9)
Obligation:
Rules:
f_942(v6771:0, v6772:0, v6773:0, v6774:0, v6775:0, v6778:0, v6779:0, v6780:0, sum~v6573:0~v6779:0, v6781:0, v6783:0, v6785:0, v6784:0, v6786:0, v6787:0, v6788:0, v6789:0) -> f_942(v6771:0, v6772:0, v6773:0, v6774:0, v6775:0, v6778:0, v6779:0, v6780:0, v6573:0, v6573:0 + v6779:0, v6783:0, v6785:0, v6784:0, v6786:0, v6787:0, v6788:0, v6789:0) :|: v6771:0 > 0 && v6779:0 <= v6573:0 + v6779:0 && v6772:0 < -1 && v6773:0 > 0 && v6774:0 > 0 && v6775:0 > 0 && v6778:0 > 1 && v6779:0 > 0 && v6780:0 > 1 && v6573:0 + v6779:0 > 0 && v6781:0 > 1 && v6783:0 > 0 && v6784:0 > 0 && v6785:0 > 3 && v6786:0 > 3 && v6573:0 > -1 && v6787:0 > 3 && v6788:0 > 3 && v6789:0 > 3 && v6785:0 >= v6783:0 && v6786:0 >= v6784:0 && v6787:0 >= v6773:0 && v6789:0 >= v6775:0 && v6788:0 >= v6774:0 && sum~v6573:0~v6779:0 = v6573:0 + v6779:0
f_942(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16) -> f_942(x, x1, x2, x3, x4, x5, x8, x17 + x8, x17, x17 + x8, x10, x11, x12, x13, x14, x15, x16) :|: x17 + x8 > 1 && x8 < x17 + x8 && x9 > 2 && x > 0 && x1 < -1 && x2 > 0 && x3 > 0 && x4 > 0 && x5 > 1 && x8 > 0 && x10 > 0 && x12 > 0 && x11 > 3 && x13 > 3 && x14 > 3 && x17 > -1 && x15 > 3 && x16 > 3 && x11 >= x10 && x13 >= x12 && x14 >= x2 && x16 >= x4 && x15 >= x3 && x6 = x17 + x8

----------------------------------------

(10) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(11)
Obligation:
Rules:
f_942(v6771:0:0, v6772:0:0, v6773:0:0, v6774:0:0, v6775:0:0, v6778:0:0, v6779:0:0, v6780:0:0, sum~v6573:0:0~v6779:0:0, v6781:0:0, v6783:0:0, v6785:0:0, v6784:0:0, v6786:0:0, v6787:0:0, v6788:0:0, v6789:0:0) -> f_942(v6771:0:0, v6772:0:0, v6773:0:0, v6774:0:0, v6775:0:0, v6778:0:0, v6779:0:0, v6780:0:0, v6573:0:0, v6573:0:0 + v6779:0:0, v6783:0:0, v6785:0:0, v6784:0:0, v6786:0:0, v6787:0:0, v6788:0:0, v6789:0:0) :|: v6789:0:0 >= v6775:0:0 && v6788:0:0 >= v6774:0:0 && v6787:0:0 >= v6773:0:0 && v6786:0:0 >= v6784:0:0 && v6785:0:0 >= v6783:0:0 && v6789:0:0 > 3 && v6788:0:0 > 3 && v6787:0:0 > 3 && v6573:0:0 > -1 && v6786:0:0 > 3 && v6785:0:0 > 3 && v6784:0:0 > 0 && v6783:0:0 > 0 && v6781:0:0 > 1 && v6573:0:0 + v6779:0:0 > 0 && v6780:0:0 > 1 && v6779:0:0 > 0 && v6778:0:0 > 1 && v6775:0:0 > 0 && v6774:0:0 > 0 && v6773:0:0 > 0 && v6772:0:0 < -1 && v6779:0:0 <= v6573:0:0 + v6779:0:0 && v6771:0:0 > 0 && sum~v6573:0:0~v6779:0:0 = v6573:0:0 + v6779:0:0
f_942(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, sum~x17:0~x8:0, x7:0, x8:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0, x16:0) -> f_942(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x8:0, x17:0 + x8:0, x17:0, x17:0 + x8:0, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0, x16:0) :|: x4:0 <= x16:0 && x3:0 <= x15:0 && x2:0 <= x14:0 && x13:0 >= x12:0 && x11:0 >= x10:0 && x16:0 > 3 && x15:0 > 3 && x17:0 > -1 && x14:0 > 3 && x13:0 > 3 && x11:0 > 3 && x12:0 > 0 && x10:0 > 0 && x8:0 > 0 && x5:0 > 1 && x4:0 > 0 && x3:0 > 0 && x2:0 > 0 && x1:0 < -1 && x:0 > 0 && x9:0 > 2 && x8:0 < x17:0 + x8:0 && x17:0 + x8:0 > 1 && sum~x17:0~x8:0 = x17:0 + x8:0

----------------------------------------

(12) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_942 ] = f_942_7 + f_942_9

The following rules are decreasing:
f_942(v6771:0:0, v6772:0:0, v6773:0:0, v6774:0:0, v6775:0:0, v6778:0:0, v6779:0:0, v6780:0:0, sum~v6573:0:0~v6779:0:0, v6781:0:0, v6783:0:0, v6785:0:0, v6784:0:0, v6786:0:0, v6787:0:0, v6788:0:0, v6789:0:0) -> f_942(v6771:0:0, v6772:0:0, v6773:0:0, v6774:0:0, v6775:0:0, v6778:0:0, v6779:0:0, v6780:0:0, v6573:0:0, v6573:0:0 + v6779:0:0, v6783:0:0, v6785:0:0, v6784:0:0, v6786:0:0, v6787:0:0, v6788:0:0, v6789:0:0) :|: v6789:0:0 >= v6775:0:0 && v6788:0:0 >= v6774:0:0 && v6787:0:0 >= v6773:0:0 && v6786:0:0 >= v6784:0:0 && v6785:0:0 >= v6783:0:0 && v6789:0:0 > 3 && v6788:0:0 > 3 && v6787:0:0 > 3 && v6573:0:0 > -1 && v6786:0:0 > 3 && v6785:0:0 > 3 && v6784:0:0 > 0 && v6783:0:0 > 0 && v6781:0:0 > 1 && v6573:0:0 + v6779:0:0 > 0 && v6780:0:0 > 1 && v6779:0:0 > 0 && v6778:0:0 > 1 && v6775:0:0 > 0 && v6774:0:0 > 0 && v6773:0:0 > 0 && v6772:0:0 < -1 && v6779:0:0 <= v6573:0:0 + v6779:0:0 && v6771:0:0 > 0 && sum~v6573:0:0~v6779:0:0 = v6573:0:0 + v6779:0:0
f_942(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, sum~x17:0~x8:0, x7:0, x8:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0, x16:0) -> f_942(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x8:0, x17:0 + x8:0, x17:0, x17:0 + x8:0, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0, x16:0) :|: x4:0 <= x16:0 && x3:0 <= x15:0 && x2:0 <= x14:0 && x13:0 >= x12:0 && x11:0 >= x10:0 && x16:0 > 3 && x15:0 > 3 && x17:0 > -1 && x14:0 > 3 && x13:0 > 3 && x11:0 > 3 && x12:0 > 0 && x10:0 > 0 && x8:0 > 0 && x5:0 > 1 && x4:0 > 0 && x3:0 > 0 && x2:0 > 0 && x1:0 < -1 && x:0 > 0 && x9:0 > 2 && x8:0 < x17:0 + x8:0 && x17:0 + x8:0 > 1 && sum~x17:0~x8:0 = x17:0 + x8:0

The following rules are bounded:
f_942(v6771:0:0, v6772:0:0, v6773:0:0, v6774:0:0, v6775:0:0, v6778:0:0, v6779:0:0, v6780:0:0, sum~v6573:0:0~v6779:0:0, v6781:0:0, v6783:0:0, v6785:0:0, v6784:0:0, v6786:0:0, v6787:0:0, v6788:0:0, v6789:0:0) -> f_942(v6771:0:0, v6772:0:0, v6773:0:0, v6774:0:0, v6775:0:0, v6778:0:0, v6779:0:0, v6780:0:0, v6573:0:0, v6573:0:0 + v6779:0:0, v6783:0:0, v6785:0:0, v6784:0:0, v6786:0:0, v6787:0:0, v6788:0:0, v6789:0:0) :|: v6789:0:0 >= v6775:0:0 && v6788:0:0 >= v6774:0:0 && v6787:0:0 >= v6773:0:0 && v6786:0:0 >= v6784:0:0 && v6785:0:0 >= v6783:0:0 && v6789:0:0 > 3 && v6788:0:0 > 3 && v6787:0:0 > 3 && v6573:0:0 > -1 && v6786:0:0 > 3 && v6785:0:0 > 3 && v6784:0:0 > 0 && v6783:0:0 > 0 && v6781:0:0 > 1 && v6573:0:0 + v6779:0:0 > 0 && v6780:0:0 > 1 && v6779:0:0 > 0 && v6778:0:0 > 1 && v6775:0:0 > 0 && v6774:0:0 > 0 && v6773:0:0 > 0 && v6772:0:0 < -1 && v6779:0:0 <= v6573:0:0 + v6779:0:0 && v6771:0:0 > 0 && sum~v6573:0:0~v6779:0:0 = v6573:0:0 + v6779:0:0
f_942(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, sum~x17:0~x8:0, x7:0, x8:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0, x16:0) -> f_942(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x8:0, x17:0 + x8:0, x17:0, x17:0 + x8:0, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0, x16:0) :|: x4:0 <= x16:0 && x3:0 <= x15:0 && x2:0 <= x14:0 && x13:0 >= x12:0 && x11:0 >= x10:0 && x16:0 > 3 && x15:0 > 3 && x17:0 > -1 && x14:0 > 3 && x13:0 > 3 && x11:0 > 3 && x12:0 > 0 && x10:0 > 0 && x8:0 > 0 && x5:0 > 1 && x4:0 > 0 && x3:0 > 0 && x2:0 > 0 && x1:0 < -1 && x:0 > 0 && x9:0 > 2 && x8:0 < x17:0 + x8:0 && x17:0 + x8:0 > 1 && sum~x17:0~x8:0 = x17:0 + x8:0


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
SCC
----------------------------------------

(15) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 33 rulesP rules:
f_873(v5663, v5664, v5665, v5666, v5667, 0, v5669, 1, v5671, v5672, v5673, v5675, v5674, v5676, v5677, v5678, v5679, 3, 2, 4) -> f_880(v5663, v5664, v5665, v5666, v5667, 0, v5669, 1, v5671, v5672, v5673, v5675, v5674, v5676, v5677, v5678, v5679, 3, 2, 4) :|: 0 = 0
f_880(v5663, v5664, v5665, v5666, v5667, 0, v5669, 1, v5671, v5672, v5673, v5675, v5674, v5676, v5677, v5678, v5679, 3, 2, 4) -> f_887(v5663, v5664, v5665, v5666, v5667, 0, v5669, 1, v5671, v5672, v5673, v5675, v5674, v5676, v5677, v5678, v5679, 3, 2, 4) :|: 0 = 0
f_887(v5663, v5664, v5665, v5666, v5667, 0, v5669, 1, v5671, v5672, v5673, v5675, v5674, v5676, v5677, v5678, v5679, 3, 2, 4) -> f_892(v5663, v5664, v5665, v5666, v5667, 0, v5669, 1, v5671, v5672, v5673, v5675, v5674, v5676, v5677, v5678, v5679, 3, 2, 4) :|: TRUE
f_892(v5663, v5664, v5665, v5666, v5667, 0, v5669, 1, v5671, v5672, v5673, v5675, v5674, v5676, v5677, v5678, v5679, 3, 2, 4) -> f_893(v5663, v5664, v5665, v5666, v5667, 0, v5669, 1, v5671, v5671, v5672, v5671, v5669, v5673, v5675, v5674, v5676, v5677, v5678, v5679, 3, 2, 4) :|: v5669 <= v5671 && v5669 <= v5671 && v5669 <= v5669 && 1 <= v5663 && 2 <= v5664 && 1 <= v5665 && 1 <= v5666 && 1 <= v5667 && 1 <= v5669 && 2 <= v5671 && 1 <= v5671 && 2 <= v5672 && 1 <= v5671 && 1 <= v5669 && 1 <= v5673 && 1 <= v5674 && 4 <= v5675 && 4 <= v5676 && 4 <= v5677 && 4 <= v5678 && 4 <= v5679 && v5673 <= v5675 && v5674 <= v5676 && v5665 <= v5677 && v5666 <= v5678 && v5667 <= v5679
f_893(v6066, v6067, v6068, v6069, v6070, 0, v6072, 1, v6074, v6075, v6076, v6077, v6078, v6079, v6081, v6080, v6082, v6083, v6084, v6085, 3, 2, 4) -> f_898(v6066, v6067, v6068, v6069, v6070, 0, v6072, 1, v6074, v6075, v6077, v6078, v6079, v6081, v6080, v6082, v6083, v6084, v6085, 3, 2, 4) :|: 0 = 0
f_898(v6066, v6067, v6068, v6069, v6070, 0, v6072, 1, v6074, v6075, v6077, v6078, v6079, v6081, v6080, v6082, v6083, v6084, v6085, 3, 2, 4) -> f_903(v6066, v6067, v6068, v6069, v6070, 0, v6072, 1, v6074, v6075, v6078, v6079, v6081, v6080, v6082, v6083, v6084, v6085, 3, 2, 4) :|: 0 = 0
f_903(v6066, v6067, v6068, v6069, v6070, 0, v6072, 1, v6074, v6075, v6078, v6079, v6081, v6080, v6082, v6083, v6084, v6085, 3, 2, 4) -> f_908(v6066, v6067, v6068, v6069, v6070, 0, v6072, 1, v6074, v6075, v6331, v6079, v6081, v6080, v6082, v6083, v6084, v6085, 3, 2, 4) :|: v6331 + v6072 = v6075 && 0 <= v6331
f_908(v6066, v6067, v6068, v6069, v6070, 0, v6072, 1, v6074, v6075, v6331, v6079, v6081, v6080, v6082, v6083, v6084, v6085, 3, 2, 4) -> f_913(v6066, v6067, v6068, v6069, v6070, 0, v6072, 1, v6074, v6075, v6331, v6079, v6081, v6080, v6082, v6083, v6084, v6085, 3, 2, 4) :|: TRUE
f_913(v6066, v6067, v6068, v6069, v6070, 0, v6072, 1, v6074, v6075, v6331, v6079, v6081, v6080, v6082, v6083, v6084, v6085, 3, 2, 4) -> f_917(v6066, v6067, v6068, v6069, v6070, 0, v6072, 1, v6074, v6075, v6331, v6079, v6081, v6080, v6082, v6083, v6084, v6085, 3, 2, 4) :|: TRUE
f_917(v6066, v6067, v6068, v6069, v6070, 0, v6072, 1, v6074, v6075, v6331, v6079, v6081, v6080, v6082, v6083, v6084, v6085, 3, 2, 4) -> f_918(v6066, v6067, v6068, v6069, v6070, 0, v6072, 1, v6074, v6075, v6331, v6079, v6081, v6080, v6082, v6083, v6084, v6085, 3, 2, 4) :|: 1 <= v6066 && 2 <= v6067 && 1 <= v6068 && 1 <= v6069 && 1 <= v6070 && 1 <= v6072 && 2 <= v6074 && 1 <= v6075 && 0 <= v6331 && 1 <= v6079 && 1 <= v6080 && 4 <= v6081 && 4 <= v6082 && 4 <= v6083 && 4 <= v6084 && 4 <= v6085 && v6079 <= v6081 && v6080 <= v6082 && v6068 <= v6083 && v6069 <= v6084 && v6070 <= v6085
f_918(v6521, v6522, v6523, v6524, v6525, 0, v6527, 1, v6529, v6530, v6531, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) -> f_922(v6521, v6522, v6523, v6524, v6525, 0, v6527, 1, v6529, v6531, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) :|: 0 = 0
f_922(v6521, v6522, v6523, v6524, v6525, 0, v6527, 1, v6529, v6531, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) -> f_927(v6521, v6522, v6523, v6524, v6525, 0, v6527, 1, v6529, v6531, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) :|: 0 = 0
f_927(v6521, v6522, v6523, v6524, v6525, 0, v6527, 1, v6529, v6531, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) -> f_932(v6521, v6522, v6523, v6524, v6525, 0, v6527, 1, v6529, v6531, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) :|: v6527 <= v6531 && 1 <= v6531 && 2 <= v6530
f_927(v6521, v6522, v6523, v6524, v6525, 0, v6527, 1, v6529, v6531, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) -> f_933(v6521, v6522, v6523, v6524, v6525, 0, v6527, 1, v6529, v6531, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) :|: v6531 < v6527
f_932(v6521, v6522, v6523, v6524, v6525, 0, v6527, 1, v6529, v6531, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) -> f_938(v6521, v6522, v6523, v6524, v6525, 0, v6527, 1, v6529, v6531, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) :|: 0 = 0
f_938(v6521, v6522, v6523, v6524, v6525, 0, v6527, 1, v6529, v6531, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) -> f_943(v6521, v6522, v6523, v6524, v6525, 0, v6527, 1, v6529, v6531, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) :|: TRUE
f_943(v6521, v6522, v6523, v6524, v6525, 0, v6527, 1, v6529, v6531, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) -> f_893(v6521, v6522, v6523, v6524, v6525, 0, v6527, 1, v6529, v6531, v6530, v6527, v6531, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) :|: v6527 <= v6531 && v6527 <= v6527 && v6527 <= v6531 && 1 <= v6521 && 2 <= v6522 && 1 <= v6523 && 1 <= v6524 && 1 <= v6525 && 1 <= v6527 && 2 <= v6529 && 1 <= v6531 && 2 <= v6530 && 1 <= v6527 && 1 <= v6531 && 1 <= v6532 && 1 <= v6533 && 4 <= v6534 && 4 <= v6535 && 4 <= v6536 && 4 <= v6537 && 4 <= v6538 && v6532 <= v6534 && v6533 <= v6535 && v6523 <= v6536 && v6524 <= v6537 && v6525 <= v6538
f_933(v6521, v6522, v6523, v6524, v6525, 0, v6527, 1, v6529, v6531, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) -> f_939(v6521, v6522, v6523, v6524, v6525, 0, v6527, 1, v6529, v6531, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) :|: 0 = 0
f_939(v6521, v6522, v6523, v6524, v6525, 0, v6527, 1, v6529, v6531, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) -> f_944(v6521, v6522, v6523, v6524, v6525, 0, v6527, 1, v6529, v6531, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) :|: TRUE
f_944(v6521, v6522, v6523, v6524, v6525, 0, v6527, 1, v6529, v6531, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) -> f_949(v6521, v6522, v6523, v6524, v6525, 0, v6527, 1, v6529, v6531, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) :|: 0 = 0
f_949(v6521, v6522, v6523, v6524, v6525, 0, v6527, 1, v6529, v6531, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) -> f_956(v6521, v6522, v6523, v6524, v6525, 0, v6527, 1, v6529, v6531, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) :|: TRUE
f_956(v6521, v6522, v6523, v6524, v6525, 0, v6527, 1, v6529, v6531, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) -> f_962(v6521, v6522, v6523, v6524, v6525, 0, v6527, 1, v6529, v6531, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) :|: 0 = 0
f_962(v6521, v6522, v6523, v6524, v6525, 0, v6527, 1, v6529, v6531, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) -> f_967(v6521, v6522, v6523, v6524, v6525, 0, v6527, 1, v6529, v6531, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) :|: TRUE
f_967(v6521, v6522, v6523, v6524, v6525, 0, v6527, 1, v6529, v6531, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) -> f_972(v6521, v6522, v6523, v6524, v6525, 0, v6527, 1, v6529, v6531, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) :|: TRUE
f_972(v6521, v6522, v6523, v6524, v6525, 0, v6527, 1, v6529, v6531, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) -> f_977(v6521, v6522, v6523, v6524, v6525, 0, v6531, 1, v6529, v6527, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) :|: 0 = 0
f_977(v6521, v6522, v6523, v6524, v6525, 0, v6531, 1, v6529, v6527, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) -> f_982(v6521, v6522, v6523, v6524, v6525, 0, v6531, 1, v6529, v6527, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) :|: 0 < v6531 && 3 <= v6530 && 2 <= v6527
f_982(v6521, v6522, v6523, v6524, v6525, 0, v6531, 1, v6529, v6527, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) -> f_987(v6521, v6522, v6523, v6524, v6525, 0, v6531, 1, v6529, v6527, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) :|: 0 = 0
f_987(v6521, v6522, v6523, v6524, v6525, 0, v6531, 1, v6529, v6527, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) -> f_992(v6521, v6522, v6523, v6524, v6525, 0, v6531, 1, v6529, v6527, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) :|: TRUE
f_992(v6521, v6522, v6523, v6524, v6525, 0, v6531, 1, v6529, v6527, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) -> f_997(v6521, v6522, v6523, v6524, v6525, 0, v6531, 1, v6527, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) :|: 0 = 0
f_997(v6521, v6522, v6523, v6524, v6525, 0, v6531, 1, v6527, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) -> f_1002(v6521, v6522, v6523, v6524, v6525, 0, v6531, 1, v6527, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) :|: TRUE
f_1002(v6521, v6522, v6523, v6524, v6525, 0, v6531, 1, v6527, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) -> f_1007(v6521, v6522, v6523, v6524, v6525, 0, v6531, 1, v6527, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) :|: TRUE
f_1007(v6521, v6522, v6523, v6524, v6525, 0, v6531, 1, v6527, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) -> f_867(v6521, v6522, v6523, v6524, v6525, 0, v6531, 1, v6527, v6530, v6532, v6534, v6533, v6535, v6536, v6537, v6538, 3, 2, 4) :|: v6531 < v6527 && 1 <= v6521 && 2 <= v6522 && 1 <= v6523 && 1 <= v6524 && 1 <= v6525 && 1 <= v6531 && 2 <= v6527 && 3 <= v6530 && 1 <= v6532 && 1 <= v6533 && 4 <= v6534 && 4 <= v6535 && 4 <= v6536 && 4 <= v6537 && 4 <= v6538 && v6532 <= v6534 && v6533 <= v6535 && v6523 <= v6536 && v6524 <= v6537 && v6525 <= v6538
f_867(v5663, v5664, v5665, v5666, v5667, 0, v5669, 1, v5671, v5672, v5673, v5675, v5674, v5676, v5677, v5678, v5679, 3, 2, 4) -> f_873(v5663, v5664, v5665, v5666, v5667, 0, v5669, 1, v5671, v5672, v5673, v5675, v5674, v5676, v5677, v5678, v5679, 3, 2, 4) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_927(v6521:0, v6522:0, v6523:0, v6524:0, v6525:0, 0, v6331:0 + v6531:0, 1, v6529:0, v6531:0, v6530:0, v6532:0, v6534:0, v6533:0, v6535:0, v6536:0, v6537:0, v6538:0, 3, 2, 4) -> f_927(v6521:0, v6522:0, v6523:0, v6524:0, v6525:0, 0, v6531:0, 1, v6331:0 + v6531:0, v6331:0, v6331:0 + v6531:0, v6532:0, v6534:0, v6533:0, v6535:0, v6536:0, v6537:0, v6538:0, 3, 2, 4) :|: v6531:0 < v6331:0 + v6531:0 && v6331:0 + v6531:0 > 1 && v6530:0 > 2 && v6521:0 > 0 && v6522:0 > 1 && v6523:0 > 0 && v6524:0 > 0 && v6525:0 > 0 && v6531:0 > 0 && v6532:0 > 0 && v6533:0 > 0 && v6534:0 > 3 && v6535:0 > 3 && v6536:0 > 3 && v6331:0 > -1 && v6537:0 > 3 && v6538:0 > 3 && v6534:0 >= v6532:0 && v6535:0 >= v6533:0 && v6536:0 >= v6523:0 && v6537:0 >= v6524:0 && v6538:0 >= v6525:0
f_927(v6521:0, v6522:0, v6523:0, v6524:0, v6525:0, 0, v6527:0, 1, v6529:0, v6331:0 + v6527:0, v6530:0, v6532:0, v6534:0, v6533:0, v6535:0, v6536:0, v6537:0, v6538:0, 3, 2, 4) -> f_927(v6521:0, v6522:0, v6523:0, v6524:0, v6525:0, 0, v6527:0, 1, v6529:0, v6331:0, v6331:0 + v6527:0, v6532:0, v6534:0, v6533:0, v6535:0, v6536:0, v6537:0, v6538:0, 3, 2, 4) :|: v6527:0 <= v6331:0 + v6527:0 && v6521:0 > 0 && v6522:0 > 1 && v6523:0 > 0 && v6524:0 > 0 && v6525:0 > 0 && v6527:0 > 0 && v6529:0 > 1 && v6331:0 + v6527:0 > 0 && v6530:0 > 1 && v6532:0 > 0 && v6533:0 > 0 && v6534:0 > 3 && v6535:0 > 3 && v6331:0 > -1 && v6536:0 > 3 && v6537:0 > 3 && v6538:0 > 3 && v6534:0 >= v6532:0 && v6535:0 >= v6533:0 && v6536:0 >= v6523:0 && v6537:0 >= v6524:0 && v6538:0 >= v6525:0
Filtered unneeded arguments:
   f_927(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21) -> f_927(x1, x2, x3, x4, x5, x7, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)
Removed division, modulo operations, cleaned up constraints. Obtained 2 rules.P rules:
f_927(v6521:0, v6522:0, v6523:0, v6524:0, v6525:0, sum~v6331:0~v6531:0, v6529:0, v6531:0, v6530:0, v6532:0, v6534:0, v6533:0, v6535:0, v6536:0, v6537:0, v6538:0) -> f_927(v6521:0, v6522:0, v6523:0, v6524:0, v6525:0, v6531:0, v6331:0 + v6531:0, v6331:0, v6331:0 + v6531:0, v6532:0, v6534:0, v6533:0, v6535:0, v6536:0, v6537:0, v6538:0) :|: v6331:0 + v6531:0 > 1 && v6531:0 < v6331:0 + v6531:0 && v6530:0 > 2 && v6521:0 > 0 && v6522:0 > 1 && v6523:0 > 0 && v6524:0 > 0 && v6525:0 > 0 && v6531:0 > 0 && v6532:0 > 0 && v6533:0 > 0 && v6534:0 > 3 && v6535:0 > 3 && v6536:0 > 3 && v6331:0 > -1 && v6537:0 > 3 && v6538:0 > 3 && v6534:0 >= v6532:0 && v6535:0 >= v6533:0 && v6536:0 >= v6523:0 && v6538:0 >= v6525:0 && v6537:0 >= v6524:0 && sum~v6331:0~v6531:0 = v6331:0 + v6531:0
f_927(v6521:0, v6522:0, v6523:0, v6524:0, v6525:0, v6527:0, v6529:0, sum~v6331:0~v6527:0, v6530:0, v6532:0, v6534:0, v6533:0, v6535:0, v6536:0, v6537:0, v6538:0) -> f_927(v6521:0, v6522:0, v6523:0, v6524:0, v6525:0, v6527:0, v6529:0, v6331:0, v6331:0 + v6527:0, v6532:0, v6534:0, v6533:0, v6535:0, v6536:0, v6537:0, v6538:0) :|: v6521:0 > 0 && v6527:0 <= v6331:0 + v6527:0 && v6522:0 > 1 && v6523:0 > 0 && v6524:0 > 0 && v6525:0 > 0 && v6527:0 > 0 && v6529:0 > 1 && v6331:0 + v6527:0 > 0 && v6530:0 > 1 && v6532:0 > 0 && v6533:0 > 0 && v6534:0 > 3 && v6535:0 > 3 && v6331:0 > -1 && v6536:0 > 3 && v6537:0 > 3 && v6538:0 > 3 && v6534:0 >= v6532:0 && v6535:0 >= v6533:0 && v6536:0 >= v6523:0 && v6538:0 >= v6525:0 && v6537:0 >= v6524:0 && sum~v6331:0~v6527:0 = v6331:0 + v6527:0

----------------------------------------

(16)
Obligation:
Rules:
f_927(v6521:0, v6522:0, v6523:0, v6524:0, v6525:0, sum~v6331:0~v6531:0, v6529:0, v6531:0, v6530:0, v6532:0, v6534:0, v6533:0, v6535:0, v6536:0, v6537:0, v6538:0) -> f_927(v6521:0, v6522:0, v6523:0, v6524:0, v6525:0, v6531:0, v6331:0 + v6531:0, v6331:0, v6331:0 + v6531:0, v6532:0, v6534:0, v6533:0, v6535:0, v6536:0, v6537:0, v6538:0) :|: v6331:0 + v6531:0 > 1 && v6531:0 < v6331:0 + v6531:0 && v6530:0 > 2 && v6521:0 > 0 && v6522:0 > 1 && v6523:0 > 0 && v6524:0 > 0 && v6525:0 > 0 && v6531:0 > 0 && v6532:0 > 0 && v6533:0 > 0 && v6534:0 > 3 && v6535:0 > 3 && v6536:0 > 3 && v6331:0 > -1 && v6537:0 > 3 && v6538:0 > 3 && v6534:0 >= v6532:0 && v6535:0 >= v6533:0 && v6536:0 >= v6523:0 && v6538:0 >= v6525:0 && v6537:0 >= v6524:0 && sum~v6331:0~v6531:0 = v6331:0 + v6531:0
f_927(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15) -> f_927(x, x1, x2, x3, x4, x5, x6, x16, x16 + x5, x9, x10, x11, x12, x13, x14, x15) :|: x > 0 && x5 <= x16 + x5 && x1 > 1 && x2 > 0 && x3 > 0 && x4 > 0 && x5 > 0 && x6 > 1 && x16 + x5 > 0 && x8 > 1 && x9 > 0 && x11 > 0 && x10 > 3 && x12 > 3 && x16 > -1 && x13 > 3 && x14 > 3 && x15 > 3 && x10 >= x9 && x12 >= x11 && x13 >= x2 && x15 >= x4 && x14 >= x3 && x7 = x16 + x5

----------------------------------------

(17) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(18)
Obligation:
Rules:
f_927(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, sum~x16:0~x5:0, x8:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0) -> f_927(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, x16:0, x16:0 + x5:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0) :|: x4:0 <= x15:0 && x3:0 <= x14:0 && x2:0 <= x13:0 && x12:0 >= x11:0 && x9:0 <= x10:0 && x15:0 > 3 && x14:0 > 3 && x13:0 > 3 && x16:0 > -1 && x12:0 > 3 && x10:0 > 3 && x11:0 > 0 && x9:0 > 0 && x8:0 > 1 && x16:0 + x5:0 > 0 && x6:0 > 1 && x5:0 > 0 && x4:0 > 0 && x3:0 > 0 && x2:0 > 0 && x1:0 > 1 && x5:0 <= x16:0 + x5:0 && x:0 > 0 && sum~x16:0~x5:0 = x16:0 + x5:0
f_927(v6521:0:0, v6522:0:0, v6523:0:0, v6524:0:0, v6525:0:0, sum~v6331:0:0~v6531:0:0, v6529:0:0, v6531:0:0, v6530:0:0, v6532:0:0, v6534:0:0, v6533:0:0, v6535:0:0, v6536:0:0, v6537:0:0, v6538:0:0) -> f_927(v6521:0:0, v6522:0:0, v6523:0:0, v6524:0:0, v6525:0:0, v6531:0:0, v6331:0:0 + v6531:0:0, v6331:0:0, v6331:0:0 + v6531:0:0, v6532:0:0, v6534:0:0, v6533:0:0, v6535:0:0, v6536:0:0, v6537:0:0, v6538:0:0) :|: v6538:0:0 >= v6525:0:0 && v6537:0:0 >= v6524:0:0 && v6536:0:0 >= v6523:0:0 && v6535:0:0 >= v6533:0:0 && v6534:0:0 >= v6532:0:0 && v6538:0:0 > 3 && v6537:0:0 > 3 && v6331:0:0 > -1 && v6536:0:0 > 3 && v6535:0:0 > 3 && v6534:0:0 > 3 && v6533:0:0 > 0 && v6532:0:0 > 0 && v6531:0:0 > 0 && v6525:0:0 > 0 && v6524:0:0 > 0 && v6523:0:0 > 0 && v6522:0:0 > 1 && v6521:0:0 > 0 && v6530:0:0 > 2 && v6531:0:0 < v6331:0:0 + v6531:0:0 && v6331:0:0 + v6531:0:0 > 1 && sum~v6331:0:0~v6531:0:0 = v6331:0:0 + v6531:0:0

----------------------------------------

(19) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_927 ] = f_927_6 + f_927_8

The following rules are decreasing:
f_927(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, sum~x16:0~x5:0, x8:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0) -> f_927(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, x16:0, x16:0 + x5:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0) :|: x4:0 <= x15:0 && x3:0 <= x14:0 && x2:0 <= x13:0 && x12:0 >= x11:0 && x9:0 <= x10:0 && x15:0 > 3 && x14:0 > 3 && x13:0 > 3 && x16:0 > -1 && x12:0 > 3 && x10:0 > 3 && x11:0 > 0 && x9:0 > 0 && x8:0 > 1 && x16:0 + x5:0 > 0 && x6:0 > 1 && x5:0 > 0 && x4:0 > 0 && x3:0 > 0 && x2:0 > 0 && x1:0 > 1 && x5:0 <= x16:0 + x5:0 && x:0 > 0 && sum~x16:0~x5:0 = x16:0 + x5:0
f_927(v6521:0:0, v6522:0:0, v6523:0:0, v6524:0:0, v6525:0:0, sum~v6331:0:0~v6531:0:0, v6529:0:0, v6531:0:0, v6530:0:0, v6532:0:0, v6534:0:0, v6533:0:0, v6535:0:0, v6536:0:0, v6537:0:0, v6538:0:0) -> f_927(v6521:0:0, v6522:0:0, v6523:0:0, v6524:0:0, v6525:0:0, v6531:0:0, v6331:0:0 + v6531:0:0, v6331:0:0, v6331:0:0 + v6531:0:0, v6532:0:0, v6534:0:0, v6533:0:0, v6535:0:0, v6536:0:0, v6537:0:0, v6538:0:0) :|: v6538:0:0 >= v6525:0:0 && v6537:0:0 >= v6524:0:0 && v6536:0:0 >= v6523:0:0 && v6535:0:0 >= v6533:0:0 && v6534:0:0 >= v6532:0:0 && v6538:0:0 > 3 && v6537:0:0 > 3 && v6331:0:0 > -1 && v6536:0:0 > 3 && v6535:0:0 > 3 && v6534:0:0 > 3 && v6533:0:0 > 0 && v6532:0:0 > 0 && v6531:0:0 > 0 && v6525:0:0 > 0 && v6524:0:0 > 0 && v6523:0:0 > 0 && v6522:0:0 > 1 && v6521:0:0 > 0 && v6530:0:0 > 2 && v6531:0:0 < v6331:0:0 + v6531:0:0 && v6331:0:0 + v6531:0:0 > 1 && sum~v6331:0:0~v6531:0:0 = v6331:0:0 + v6531:0:0

The following rules are bounded:
f_927(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, sum~x16:0~x5:0, x8:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0) -> f_927(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, x16:0, x16:0 + x5:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0) :|: x4:0 <= x15:0 && x3:0 <= x14:0 && x2:0 <= x13:0 && x12:0 >= x11:0 && x9:0 <= x10:0 && x15:0 > 3 && x14:0 > 3 && x13:0 > 3 && x16:0 > -1 && x12:0 > 3 && x10:0 > 3 && x11:0 > 0 && x9:0 > 0 && x8:0 > 1 && x16:0 + x5:0 > 0 && x6:0 > 1 && x5:0 > 0 && x4:0 > 0 && x3:0 > 0 && x2:0 > 0 && x1:0 > 1 && x5:0 <= x16:0 + x5:0 && x:0 > 0 && sum~x16:0~x5:0 = x16:0 + x5:0
f_927(v6521:0:0, v6522:0:0, v6523:0:0, v6524:0:0, v6525:0:0, sum~v6331:0:0~v6531:0:0, v6529:0:0, v6531:0:0, v6530:0:0, v6532:0:0, v6534:0:0, v6533:0:0, v6535:0:0, v6536:0:0, v6537:0:0, v6538:0:0) -> f_927(v6521:0:0, v6522:0:0, v6523:0:0, v6524:0:0, v6525:0:0, v6531:0:0, v6331:0:0 + v6531:0:0, v6331:0:0, v6331:0:0 + v6531:0:0, v6532:0:0, v6534:0:0, v6533:0:0, v6535:0:0, v6536:0:0, v6537:0:0, v6538:0:0) :|: v6538:0:0 >= v6525:0:0 && v6537:0:0 >= v6524:0:0 && v6536:0:0 >= v6523:0:0 && v6535:0:0 >= v6533:0:0 && v6534:0:0 >= v6532:0:0 && v6538:0:0 > 3 && v6537:0:0 > 3 && v6331:0:0 > -1 && v6536:0:0 > 3 && v6535:0:0 > 3 && v6534:0:0 > 3 && v6533:0:0 > 0 && v6532:0:0 > 0 && v6531:0:0 > 0 && v6525:0:0 > 0 && v6524:0:0 > 0 && v6523:0:0 > 0 && v6522:0:0 > 1 && v6521:0:0 > 0 && v6530:0:0 > 2 && v6531:0:0 < v6331:0:0 + v6531:0:0 && v6331:0:0 + v6531:0:0 > 1 && sum~v6331:0:0~v6531:0:0 = v6331:0:0 + v6531:0:0


----------------------------------------

(20)
YES

----------------------------------------

(21)
Obligation:
SCC
----------------------------------------

(22) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 33 rulesP rules:
f_868(v5516, v5517, v5518, v5519, v5520, 1, v5522, v5523, v5526, v5525, v5524, 0, v5528, v5529, v5531, v5530, v5532, v5533, v5534, v5535, 3, 4) -> f_874(v5516, v5517, v5518, v5519, v5520, 1, v5522, v5523, v5526, v5525, v5524, 0, v5528, v5529, v5531, v5530, v5532, v5533, v5534, v5535, 3, 2, 4) :|: 0 < v5526 && 3 <= v5528 && 2 <= v5524
f_874(v5516, v5517, v5518, v5519, v5520, 1, v5522, v5523, v5526, v5525, v5524, 0, v5528, v5529, v5531, v5530, v5532, v5533, v5534, v5535, 3, 2, 4) -> f_881(v5516, v5517, v5518, v5519, v5520, 1, v5522, v5523, v5526, v5525, v5524, 0, v5528, v5529, v5531, v5530, v5532, v5533, v5534, v5535, 3, 2, 4) :|: 0 = 0
f_881(v5516, v5517, v5518, v5519, v5520, 1, v5522, v5523, v5526, v5525, v5524, 0, v5528, v5529, v5531, v5530, v5532, v5533, v5534, v5535, 3, 2, 4) -> f_888(v5516, v5517, v5518, v5519, v5520, 1, v5522, v5523, v5526, v5525, v5524, 0, v5528, v5529, v5531, v5530, v5532, v5533, v5534, v5535, 3, 2, 4) :|: TRUE
f_888(v5516, v5517, v5518, v5519, v5520, 1, v5522, v5523, v5526, v5525, v5524, 0, v5528, v5529, v5531, v5530, v5532, v5533, v5534, v5535, 3, 2, 4) -> f_894(v5516, v5517, v5518, v5519, v5520, 1, v5522, v5523, v5526, v5524, 0, v5528, v5529, v5531, v5530, v5532, v5533, v5534, v5535, 3, 2, 4) :|: 0 = 0
f_894(v5516, v5517, v5518, v5519, v5520, 1, v5522, v5523, v5526, v5524, 0, v5528, v5529, v5531, v5530, v5532, v5533, v5534, v5535, 3, 2, 4) -> f_899(v5516, v5517, v5518, v5519, v5520, 1, v5522, v5523, v5526, v5524, 0, v5528, v5529, v5531, v5530, v5532, v5533, v5534, v5535, 3, 2, 4) :|: TRUE
f_899(v5516, v5517, v5518, v5519, v5520, 1, v5522, v5523, v5526, v5524, 0, v5528, v5529, v5531, v5530, v5532, v5533, v5534, v5535, 3, 2, 4) -> f_904(v5516, v5517, v5518, v5519, v5520, 1, v5522, v5523, v5526, v5524, 0, v5528, v5529, v5531, v5530, v5532, v5533, v5534, v5535, 3, 2, 4) :|: TRUE
f_904(v5516, v5517, v5518, v5519, v5520, 1, v5522, v5523, v5526, v5524, 0, v5528, v5529, v5531, v5530, v5532, v5533, v5534, v5535, 3, 2, 4) -> f_909(v5516, v5517, v5518, v5519, v5520, 1, v5522, v5523, v5526, v5524, 0, v5528, v5529, v5531, v5530, v5532, v5533, v5534, v5535, 3, 2, 4) :|: 0 = 0
f_909(v5516, v5517, v5518, v5519, v5520, 1, v5522, v5523, v5526, v5524, 0, v5528, v5529, v5531, v5530, v5532, v5533, v5534, v5535, 3, 2, 4) -> f_914(v5516, v5517, v5518, v5519, v5520, 1, v5522, v5523, v5526, v5524, 0, v5528, v5529, v5531, v5530, v5532, v5533, v5534, v5535, 3, 2, 4) :|: 0 = 0
f_914(v5516, v5517, v5518, v5519, v5520, 1, v5522, v5523, v5526, v5524, 0, v5528, v5529, v5531, v5530, v5532, v5533, v5534, v5535, 3, 2, 4) -> f_919(v5516, v5517, v5518, v5519, v5520, 1, v5522, v5523, v5526, v5524, v5528, v5529, v5531, v5530, v5532, v5533, v5534, v5535, 3, 0, 2, 4) :|: 0 = 0
f_919(v5516, v5517, v5518, v5519, v5520, 1, v5522, v5523, v5526, v5524, v5528, v5529, v5531, v5530, v5532, v5533, v5534, v5535, 3, 0, 2, 4) -> f_923(v5516, v5517, v5518, v5519, v5520, 1, v5522, v5523, v5526, v5524, v5528, v5529, v5531, v5530, v5532, v5533, v5534, v5535, 3, 0, 2, 4) :|: TRUE
f_923(v5516, v5517, v5518, v5519, v5520, 1, v5522, v5523, v5526, v5524, v5528, v5529, v5531, v5530, v5532, v5533, v5534, v5535, 3, 0, 2, 4) -> f_924(v5516, v5517, v5518, v5519, v5520, 1, v5522, v5523, v5526, v5524, v5524, v5528, v5524, v5526, v5529, v5531, v5530, v5532, v5533, v5534, v5535, 3, 0, 2, 4) :|: v5526 <= v5524 && v5526 <= v5526 && v5526 <= v5524 && 1 + v5516 <= 0 && 1 + v5517 <= 0 && 1 <= v5518 && 1 <= v5519 && 1 <= v5520 && 1 <= v5522 && 1 <= v5523 && 1 <= v5526 && 2 <= v5524 && 1 <= v5524 && 2 <= v5528 && 1 <= v5524 && 1 <= v5526 && 1 <= v5529 && 1 <= v5530 && 4 <= v5531 && 4 <= v5532 && 4 <= v5533 && 4 <= v5534 && 4 <= v5535 && v5529 <= v5531 && v5530 <= v5532 && v5518 <= v5533 && v5519 <= v5534 && v5520 <= v5535
f_924(v6654, v6655, v6656, v6657, v6658, 1, v6660, v6661, v6662, v6663, v6664, v6665, v6666, v6667, v6668, v6670, v6669, v6671, v6672, v6673, v6674, 3, 0, 2, 4) -> f_928(v6654, v6655, v6656, v6657, v6658, 1, v6660, v6661, v6662, v6663, v6664, v6666, v6667, v6668, v6670, v6669, v6671, v6672, v6673, v6674, 3, 0, 2, 4) :|: 0 = 0
f_928(v6654, v6655, v6656, v6657, v6658, 1, v6660, v6661, v6662, v6663, v6664, v6666, v6667, v6668, v6670, v6669, v6671, v6672, v6673, v6674, 3, 0, 2, 4) -> f_934(v6654, v6655, v6656, v6657, v6658, 1, v6660, v6661, v6662, v6663, v6664, v6667, v6668, v6670, v6669, v6671, v6672, v6673, v6674, 3, 0, 2, 4) :|: 0 = 0
f_934(v6654, v6655, v6656, v6657, v6658, 1, v6660, v6661, v6662, v6663, v6664, v6667, v6668, v6670, v6669, v6671, v6672, v6673, v6674, 3, 0, 2, 4) -> f_940(v6654, v6655, v6656, v6657, v6658, 1, v6660, v6661, v6662, v6663, v6664, v6971, v6668, v6670, v6669, v6671, v6672, v6673, v6674, 3, 0, 2, 4) :|: v6971 + v6662 = v6664 && 0 <= v6971
f_940(v6654, v6655, v6656, v6657, v6658, 1, v6660, v6661, v6662, v6663, v6664, v6971, v6668, v6670, v6669, v6671, v6672, v6673, v6674, 3, 0, 2, 4) -> f_945(v6654, v6655, v6656, v6657, v6658, 1, v6660, v6661, v6662, v6663, v6664, v6971, v6668, v6670, v6669, v6671, v6672, v6673, v6674, 3, 0, 2, 4) :|: TRUE
f_945(v6654, v6655, v6656, v6657, v6658, 1, v6660, v6661, v6662, v6663, v6664, v6971, v6668, v6670, v6669, v6671, v6672, v6673, v6674, 3, 0, 2, 4) -> f_950(v6654, v6655, v6656, v6657, v6658, 1, v6660, v6661, v6662, v6663, v6664, v6971, v6668, v6670, v6669, v6671, v6672, v6673, v6674, 3, 0, 2, 4) :|: TRUE
f_950(v6654, v6655, v6656, v6657, v6658, 1, v6660, v6661, v6662, v6663, v6664, v6971, v6668, v6670, v6669, v6671, v6672, v6673, v6674, 3, 0, 2, 4) -> f_951(v6654, v6655, v6656, v6657, v6658, 1, v6660, v6661, v6662, v6663, v6664, v6971, v6668, v6670, v6669, v6671, v6672, v6673, v6674, 3, 0, 2, 4) :|: 1 + v6654 <= 0 && 1 + v6655 <= 0 && 1 <= v6656 && 1 <= v6657 && 1 <= v6658 && 1 <= v6660 && 1 <= v6661 && 1 <= v6662 && 2 <= v6663 && 1 <= v6664 && 0 <= v6971 && 1 <= v6668 && 1 <= v6669 && 4 <= v6670 && 4 <= v6671 && 4 <= v6672 && 4 <= v6673 && 4 <= v6674 && v6668 <= v6670 && v6669 <= v6671 && v6656 <= v6672 && v6657 <= v6673 && v6658 <= v6674
f_951(v7152, v7153, v7154, v7155, v7156, 1, v7158, v7159, v7160, v7161, v7162, v7163, v7164, v7166, v7165, v7167, v7168, v7169, v7170, 3, 0, 2, 4) -> f_957(v7152, v7153, v7154, v7155, v7156, 1, v7158, v7159, v7160, v7161, v7163, v7162, v7164, v7166, v7165, v7167, v7168, v7169, v7170, 3, 0, 2, 4) :|: 0 = 0
f_957(v7152, v7153, v7154, v7155, v7156, 1, v7158, v7159, v7160, v7161, v7163, v7162, v7164, v7166, v7165, v7167, v7168, v7169, v7170, 3, 0, 2, 4) -> f_963(v7152, v7153, v7154, v7155, v7156, 1, v7158, v7159, v7160, v7161, v7163, v7162, v7164, v7166, v7165, v7167, v7168, v7169, v7170, 3, 0, 2, 4) :|: 0 = 0
f_963(v7152, v7153, v7154, v7155, v7156, 1, v7158, v7159, v7160, v7161, v7163, v7162, v7164, v7166, v7165, v7167, v7168, v7169, v7170, 3, 0, 2, 4) -> f_968(v7152, v7153, v7154, v7155, v7156, 1, v7158, v7159, v7160, v7161, v7163, v7162, v7164, v7166, v7165, v7167, v7168, v7169, v7170, 3, 0, 2, 4) :|: v7160 <= v7163 && 1 <= v7163 && 2 <= v7162
f_963(v7152, v7153, v7154, v7155, v7156, 1, v7158, v7159, v7160, v7161, v7163, v7162, v7164, v7166, v7165, v7167, v7168, v7169, v7170, 3, 0, 2, 4) -> f_969(v7152, v7153, v7154, v7155, v7156, 1, v7158, v7159, v7160, v7161, v7163, v7162, v7164, v7166, v7165, v7167, v7168, v7169, v7170, 3, 0, 2, 4) :|: v7163 < v7160
f_968(v7152, v7153, v7154, v7155, v7156, 1, v7158, v7159, v7160, v7161, v7163, v7162, v7164, v7166, v7165, v7167, v7168, v7169, v7170, 3, 0, 2, 4) -> f_973(v7152, v7153, v7154, v7155, v7156, 1, v7158, v7159, v7160, v7161, v7163, v7162, v7164, v7166, v7165, v7167, v7168, v7169, v7170, 3, 0, 2, 4) :|: 0 = 0
f_973(v7152, v7153, v7154, v7155, v7156, 1, v7158, v7159, v7160, v7161, v7163, v7162, v7164, v7166, v7165, v7167, v7168, v7169, v7170, 3, 0, 2, 4) -> f_978(v7152, v7153, v7154, v7155, v7156, 1, v7158, v7159, v7160, v7161, v7163, v7162, v7164, v7166, v7165, v7167, v7168, v7169, v7170, 3, 0, 2, 4) :|: TRUE
f_978(v7152, v7153, v7154, v7155, v7156, 1, v7158, v7159, v7160, v7161, v7163, v7162, v7164, v7166, v7165, v7167, v7168, v7169, v7170, 3, 0, 2, 4) -> f_924(v7152, v7153, v7154, v7155, v7156, 1, v7158, v7159, v7160, v7161, v7163, v7162, v7160, v7163, v7164, v7166, v7165, v7167, v7168, v7169, v7170, 3, 0, 2, 4) :|: v7160 <= v7163 && v7160 <= v7163 && v7160 <= v7160 && 1 + v7152 <= 0 && 1 + v7153 <= 0 && 1 <= v7154 && 1 <= v7155 && 1 <= v7156 && 1 <= v7158 && 1 <= v7159 && 1 <= v7160 && 2 <= v7161 && 1 <= v7163 && 2 <= v7162 && 1 <= v7160 && 1 <= v7163 && 1 <= v7164 && 1 <= v7165 && 4 <= v7166 && 4 <= v7167 && 4 <= v7168 && 4 <= v7169 && 4 <= v7170 && v7164 <= v7166 && v7165 <= v7167 && v7154 <= v7168 && v7155 <= v7169 && v7156 <= v7170
f_969(v7152, v7153, v7154, v7155, v7156, 1, v7158, v7159, v7160, v7161, v7163, v7162, v7164, v7166, v7165, v7167, v7168, v7169, v7170, 3, 0, 2, 4) -> f_974(v7152, v7153, v7154, v7155, v7156, 1, v7158, v7159, v7160, v7161, v7163, 0, v7162, v7164, v7166, v7165, v7167, v7168, v7169, v7170, 3, 2, 4) :|: 0 = 0
f_974(v7152, v7153, v7154, v7155, v7156, 1, v7158, v7159, v7160, v7161, v7163, 0, v7162, v7164, v7166, v7165, v7167, v7168, v7169, v7170, 3, 2, 4) -> f_979(v7152, v7153, v7154, v7155, v7156, 1, v7158, v7159, v7160, v7161, v7163, 0, v7162, v7164, v7166, v7165, v7167, v7168, v7169, v7170, 3, 2, 4) :|: TRUE
f_979(v7152, v7153, v7154, v7155, v7156, 1, v7158, v7159, v7160, v7161, v7163, 0, v7162, v7164, v7166, v7165, v7167, v7168, v7169, v7170, 3, 2, 4) -> f_984(v7152, v7153, v7154, v7155, v7156, 1, v7158, v7159, v7160, v7161, v7163, 0, v7162, v7164, v7166, v7165, v7167, v7168, v7169, v7170, 3, 2, 4) :|: 0 = 0
f_984(v7152, v7153, v7154, v7155, v7156, 1, v7158, v7159, v7160, v7161, v7163, 0, v7162, v7164, v7166, v7165, v7167, v7168, v7169, v7170, 3, 2, 4) -> f_989(v7152, v7153, v7154, v7155, v7156, 1, v7158, v7159, v7160, v7161, v7163, 0, v7162, v7164, v7166, v7165, v7167, v7168, v7169, v7170, 3, 2, 4) :|: TRUE
f_989(v7152, v7153, v7154, v7155, v7156, 1, v7158, v7159, v7160, v7161, v7163, 0, v7162, v7164, v7166, v7165, v7167, v7168, v7169, v7170, 3, 2, 4) -> f_994(v7152, v7153, v7154, v7155, v7156, 1, v7158, v7159, v7160, v7161, v7163, 0, v7162, v7164, v7166, v7165, v7167, v7168, v7169, v7170, 3, 2, 4) :|: 0 = 0
f_994(v7152, v7153, v7154, v7155, v7156, 1, v7158, v7159, v7160, v7161, v7163, 0, v7162, v7164, v7166, v7165, v7167, v7168, v7169, v7170, 3, 2, 4) -> f_999(v7152, v7153, v7154, v7155, v7156, 1, v7158, v7159, v7160, v7161, v7163, 0, v7162, v7164, v7166, v7165, v7167, v7168, v7169, v7170, 3, 2, 4) :|: TRUE
f_999(v7152, v7153, v7154, v7155, v7156, 1, v7158, v7159, v7160, v7161, v7163, 0, v7162, v7164, v7166, v7165, v7167, v7168, v7169, v7170, 3, 2, 4) -> f_1004(v7152, v7153, v7154, v7155, v7156, 1, v7158, v7159, v7160, v7161, v7163, 0, v7162, v7164, v7166, v7165, v7167, v7168, v7169, v7170, 3, 2, 4) :|: TRUE
f_1004(v7152, v7153, v7154, v7155, v7156, 1, v7158, v7159, v7160, v7161, v7163, 0, v7162, v7164, v7166, v7165, v7167, v7168, v7169, v7170, 3, 2, 4) -> f_861(v7152, v7153, v7154, v7155, v7156, 1, v7158, v7159, v7160, v7161, v7163, 0, v7162, v7164, v7166, v7165, v7167, v7168, v7169, v7170, 3, 4) :|: v7163 < v7160 && 1 + v7152 <= 0 && 1 + v7153 <= 0 && 1 <= v7154 && 1 <= v7155 && 1 <= v7156 && 1 <= v7158 && 1 <= v7159 && 1 <= v7160 && 1 <= v7161 && 0 <= v7163 && 1 <= v7162 && 1 <= v7164 && 1 <= v7165 && 4 <= v7166 && 4 <= v7167 && 4 <= v7168 && 4 <= v7169 && 4 <= v7170 && v7164 <= v7166 && v7165 <= v7167 && v7154 <= v7168 && v7155 <= v7169 && v7156 <= v7170
f_861(v5516, v5517, v5518, v5519, v5520, 1, v5522, v5523, v5524, v5525, v5526, 0, v5528, v5529, v5531, v5530, v5532, v5533, v5534, v5535, 3, 4) -> f_868(v5516, v5517, v5518, v5519, v5520, 1, v5522, v5523, v5526, v5525, v5524, 0, v5528, v5529, v5531, v5530, v5532, v5533, v5534, v5535, 3, 4) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_963(v7152:0, v7153:0, v7154:0, v7155:0, v7156:0, 1, v7158:0, v7159:0, v7160:0, v7161:0, v6971:0 + v7160:0, v7162:0, v7164:0, v7166:0, v7165:0, v7167:0, v7168:0, v7169:0, v7170:0, 3, 0, 2, 4) -> f_963(v7152:0, v7153:0, v7154:0, v7155:0, v7156:0, 1, v7158:0, v7159:0, v7160:0, v7161:0, v6971:0, v6971:0 + v7160:0, v7164:0, v7166:0, v7165:0, v7167:0, v7168:0, v7169:0, v7170:0, 3, 0, 2, 4) :|: v7160:0 <= v6971:0 + v7160:0 && v7152:0 < 0 && v7153:0 < 0 && v7154:0 > 0 && v7155:0 > 0 && v7156:0 > 0 && v7158:0 > 0 && v7159:0 > 0 && v7160:0 > 0 && v7161:0 > 1 && v6971:0 + v7160:0 > 0 && v7162:0 > 1 && v7164:0 > 0 && v7165:0 > 0 && v7166:0 > 3 && v7167:0 > 3 && v6971:0 > -1 && v7168:0 > 3 && v7169:0 > 3 && v7170:0 > 3 && v7166:0 >= v7164:0 && v7167:0 >= v7165:0 && v7168:0 >= v7154:0 && v7169:0 >= v7155:0 && v7170:0 >= v7156:0
f_963(v7152:0, v7153:0, v7154:0, v7155:0, v7156:0, 1, v7158:0, v7159:0, v6971:0 + v7163:0, v7161:0, v7163:0, v7162:0, v7164:0, v7166:0, v7165:0, v7167:0, v7168:0, v7169:0, v7170:0, 3, 0, 2, 4) -> f_963(v7152:0, v7153:0, v7154:0, v7155:0, v7156:0, 1, v7158:0, v7159:0, v7163:0, v6971:0 + v7163:0, v6971:0, v6971:0 + v7163:0, v7164:0, v7166:0, v7165:0, v7167:0, v7168:0, v7169:0, v7170:0, 3, 0, 2, 4) :|: v7162:0 > 2 && v7163:0 < v6971:0 + v7163:0 && v7163:0 > 0 && v6971:0 + v7163:0 > 1 && v7152:0 < 0 && v7153:0 < 0 && v7154:0 > 0 && v7155:0 > 0 && v7156:0 > 0 && v7158:0 > 0 && v7159:0 > 0 && v7164:0 > 0 && v7165:0 > 0 && v7166:0 > 3 && v7167:0 > 3 && v7168:0 > 3 && v7161:0 > 0 && v6971:0 > -1 && v7169:0 > 3 && v7170:0 > 3 && v7166:0 >= v7164:0 && v7167:0 >= v7165:0 && v7168:0 >= v7154:0 && v7169:0 >= v7155:0 && v7170:0 >= v7156:0
Filtered unneeded arguments:
   f_963(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23) -> f_963(x1, x2, x3, x4, x5, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19)
Removed division, modulo operations, cleaned up constraints. Obtained 2 rules.P rules:
f_963(v7152:0, v7153:0, v7154:0, v7155:0, v7156:0, v7158:0, v7159:0, v7160:0, v7161:0, sum~v6971:0~v7160:0, v7162:0, v7164:0, v7166:0, v7165:0, v7167:0, v7168:0, v7169:0, v7170:0) -> f_963(v7152:0, v7153:0, v7154:0, v7155:0, v7156:0, v7158:0, v7159:0, v7160:0, v7161:0, v6971:0, v6971:0 + v7160:0, v7164:0, v7166:0, v7165:0, v7167:0, v7168:0, v7169:0, v7170:0) :|: v7152:0 < 0 && v7160:0 <= v6971:0 + v7160:0 && v7153:0 < 0 && v7154:0 > 0 && v7155:0 > 0 && v7156:0 > 0 && v7158:0 > 0 && v7159:0 > 0 && v7160:0 > 0 && v7161:0 > 1 && v6971:0 + v7160:0 > 0 && v7162:0 > 1 && v7164:0 > 0 && v7165:0 > 0 && v7166:0 > 3 && v7167:0 > 3 && v6971:0 > -1 && v7168:0 > 3 && v7169:0 > 3 && v7170:0 > 3 && v7166:0 >= v7164:0 && v7167:0 >= v7165:0 && v7168:0 >= v7154:0 && v7170:0 >= v7156:0 && v7169:0 >= v7155:0 && sum~v6971:0~v7160:0 = v6971:0 + v7160:0
f_963(v7152:0, v7153:0, v7154:0, v7155:0, v7156:0, v7158:0, v7159:0, sum~v6971:0~v7163:0, v7161:0, v7163:0, v7162:0, v7164:0, v7166:0, v7165:0, v7167:0, v7168:0, v7169:0, v7170:0) -> f_963(v7152:0, v7153:0, v7154:0, v7155:0, v7156:0, v7158:0, v7159:0, v7163:0, v6971:0 + v7163:0, v6971:0, v6971:0 + v7163:0, v7164:0, v7166:0, v7165:0, v7167:0, v7168:0, v7169:0, v7170:0) :|: v7163:0 < v6971:0 + v7163:0 && v7162:0 > 2 && v7163:0 > 0 && v6971:0 + v7163:0 > 1 && v7152:0 < 0 && v7153:0 < 0 && v7154:0 > 0 && v7155:0 > 0 && v7156:0 > 0 && v7158:0 > 0 && v7159:0 > 0 && v7164:0 > 0 && v7165:0 > 0 && v7166:0 > 3 && v7167:0 > 3 && v7168:0 > 3 && v7161:0 > 0 && v6971:0 > -1 && v7169:0 > 3 && v7170:0 > 3 && v7166:0 >= v7164:0 && v7167:0 >= v7165:0 && v7168:0 >= v7154:0 && v7170:0 >= v7156:0 && v7169:0 >= v7155:0 && sum~v6971:0~v7163:0 = v6971:0 + v7163:0

----------------------------------------

(23)
Obligation:
Rules:
f_963(v7152:0, v7153:0, v7154:0, v7155:0, v7156:0, v7158:0, v7159:0, v7160:0, v7161:0, sum~v6971:0~v7160:0, v7162:0, v7164:0, v7166:0, v7165:0, v7167:0, v7168:0, v7169:0, v7170:0) -> f_963(v7152:0, v7153:0, v7154:0, v7155:0, v7156:0, v7158:0, v7159:0, v7160:0, v7161:0, v6971:0, v6971:0 + v7160:0, v7164:0, v7166:0, v7165:0, v7167:0, v7168:0, v7169:0, v7170:0) :|: v7152:0 < 0 && v7160:0 <= v6971:0 + v7160:0 && v7153:0 < 0 && v7154:0 > 0 && v7155:0 > 0 && v7156:0 > 0 && v7158:0 > 0 && v7159:0 > 0 && v7160:0 > 0 && v7161:0 > 1 && v6971:0 + v7160:0 > 0 && v7162:0 > 1 && v7164:0 > 0 && v7165:0 > 0 && v7166:0 > 3 && v7167:0 > 3 && v6971:0 > -1 && v7168:0 > 3 && v7169:0 > 3 && v7170:0 > 3 && v7166:0 >= v7164:0 && v7167:0 >= v7165:0 && v7168:0 >= v7154:0 && v7170:0 >= v7156:0 && v7169:0 >= v7155:0 && sum~v6971:0~v7160:0 = v6971:0 + v7160:0
f_963(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17) -> f_963(x, x1, x2, x3, x4, x5, x6, x9, x18 + x9, x18, x18 + x9, x11, x12, x13, x14, x15, x16, x17) :|: x9 < x18 + x9 && x10 > 2 && x9 > 0 && x18 + x9 > 1 && x < 0 && x1 < 0 && x2 > 0 && x3 > 0 && x4 > 0 && x5 > 0 && x6 > 0 && x11 > 0 && x13 > 0 && x12 > 3 && x14 > 3 && x15 > 3 && x8 > 0 && x18 > -1 && x16 > 3 && x17 > 3 && x12 >= x11 && x14 >= x13 && x15 >= x2 && x17 >= x4 && x16 >= x3 && x7 = x18 + x9

----------------------------------------

(24) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(25)
Obligation:
Rules:
f_963(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, sum~x18:0~x9:0, x8:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0, x16:0, x17:0) -> f_963(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, x9:0, x18:0 + x9:0, x18:0, x18:0 + x9:0, x11:0, x12:0, x13:0, x14:0, x15:0, x16:0, x17:0) :|: x4:0 <= x17:0 && x3:0 <= x16:0 && x2:0 <= x15:0 && x14:0 >= x13:0 && x12:0 >= x11:0 && x17:0 > 3 && x16:0 > 3 && x18:0 > -1 && x8:0 > 0 && x15:0 > 3 && x14:0 > 3 && x12:0 > 3 && x13:0 > 0 && x11:0 > 0 && x6:0 > 0 && x5:0 > 0 && x4:0 > 0 && x3:0 > 0 && x2:0 > 0 && x1:0 < 0 && x:0 < 0 && x18:0 + x9:0 > 1 && x9:0 > 0 && x10:0 > 2 && x9:0 < x18:0 + x9:0 && sum~x18:0~x9:0 = x18:0 + x9:0
f_963(v7152:0:0, v7153:0:0, v7154:0:0, v7155:0:0, v7156:0:0, v7158:0:0, v7159:0:0, v7160:0:0, v7161:0:0, sum~v6971:0:0~v7160:0:0, v7162:0:0, v7164:0:0, v7166:0:0, v7165:0:0, v7167:0:0, v7168:0:0, v7169:0:0, v7170:0:0) -> f_963(v7152:0:0, v7153:0:0, v7154:0:0, v7155:0:0, v7156:0:0, v7158:0:0, v7159:0:0, v7160:0:0, v7161:0:0, v6971:0:0, v6971:0:0 + v7160:0:0, v7164:0:0, v7166:0:0, v7165:0:0, v7167:0:0, v7168:0:0, v7169:0:0, v7170:0:0) :|: v7170:0:0 >= v7156:0:0 && v7169:0:0 >= v7155:0:0 && v7168:0:0 >= v7154:0:0 && v7167:0:0 >= v7165:0:0 && v7166:0:0 >= v7164:0:0 && v7170:0:0 > 3 && v7169:0:0 > 3 && v7168:0:0 > 3 && v6971:0:0 > -1 && v7167:0:0 > 3 && v7166:0:0 > 3 && v7165:0:0 > 0 && v7164:0:0 > 0 && v7162:0:0 > 1 && v6971:0:0 + v7160:0:0 > 0 && v7161:0:0 > 1 && v7160:0:0 > 0 && v7159:0:0 > 0 && v7158:0:0 > 0 && v7156:0:0 > 0 && v7155:0:0 > 0 && v7154:0:0 > 0 && v7153:0:0 < 0 && v7160:0:0 <= v6971:0:0 + v7160:0:0 && v7152:0:0 < 0 && sum~v6971:0:0~v7160:0:0 = v6971:0:0 + v7160:0:0

----------------------------------------

(26) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_963 ] = f_963_10 + f_963_8

The following rules are decreasing:
f_963(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, sum~x18:0~x9:0, x8:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0, x16:0, x17:0) -> f_963(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, x9:0, x18:0 + x9:0, x18:0, x18:0 + x9:0, x11:0, x12:0, x13:0, x14:0, x15:0, x16:0, x17:0) :|: x4:0 <= x17:0 && x3:0 <= x16:0 && x2:0 <= x15:0 && x14:0 >= x13:0 && x12:0 >= x11:0 && x17:0 > 3 && x16:0 > 3 && x18:0 > -1 && x8:0 > 0 && x15:0 > 3 && x14:0 > 3 && x12:0 > 3 && x13:0 > 0 && x11:0 > 0 && x6:0 > 0 && x5:0 > 0 && x4:0 > 0 && x3:0 > 0 && x2:0 > 0 && x1:0 < 0 && x:0 < 0 && x18:0 + x9:0 > 1 && x9:0 > 0 && x10:0 > 2 && x9:0 < x18:0 + x9:0 && sum~x18:0~x9:0 = x18:0 + x9:0
f_963(v7152:0:0, v7153:0:0, v7154:0:0, v7155:0:0, v7156:0:0, v7158:0:0, v7159:0:0, v7160:0:0, v7161:0:0, sum~v6971:0:0~v7160:0:0, v7162:0:0, v7164:0:0, v7166:0:0, v7165:0:0, v7167:0:0, v7168:0:0, v7169:0:0, v7170:0:0) -> f_963(v7152:0:0, v7153:0:0, v7154:0:0, v7155:0:0, v7156:0:0, v7158:0:0, v7159:0:0, v7160:0:0, v7161:0:0, v6971:0:0, v6971:0:0 + v7160:0:0, v7164:0:0, v7166:0:0, v7165:0:0, v7167:0:0, v7168:0:0, v7169:0:0, v7170:0:0) :|: v7170:0:0 >= v7156:0:0 && v7169:0:0 >= v7155:0:0 && v7168:0:0 >= v7154:0:0 && v7167:0:0 >= v7165:0:0 && v7166:0:0 >= v7164:0:0 && v7170:0:0 > 3 && v7169:0:0 > 3 && v7168:0:0 > 3 && v6971:0:0 > -1 && v7167:0:0 > 3 && v7166:0:0 > 3 && v7165:0:0 > 0 && v7164:0:0 > 0 && v7162:0:0 > 1 && v6971:0:0 + v7160:0:0 > 0 && v7161:0:0 > 1 && v7160:0:0 > 0 && v7159:0:0 > 0 && v7158:0:0 > 0 && v7156:0:0 > 0 && v7155:0:0 > 0 && v7154:0:0 > 0 && v7153:0:0 < 0 && v7160:0:0 <= v6971:0:0 + v7160:0:0 && v7152:0:0 < 0 && sum~v6971:0:0~v7160:0:0 = v6971:0:0 + v7160:0:0

The following rules are bounded:
f_963(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, sum~x18:0~x9:0, x8:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0, x16:0, x17:0) -> f_963(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, x9:0, x18:0 + x9:0, x18:0, x18:0 + x9:0, x11:0, x12:0, x13:0, x14:0, x15:0, x16:0, x17:0) :|: x4:0 <= x17:0 && x3:0 <= x16:0 && x2:0 <= x15:0 && x14:0 >= x13:0 && x12:0 >= x11:0 && x17:0 > 3 && x16:0 > 3 && x18:0 > -1 && x8:0 > 0 && x15:0 > 3 && x14:0 > 3 && x12:0 > 3 && x13:0 > 0 && x11:0 > 0 && x6:0 > 0 && x5:0 > 0 && x4:0 > 0 && x3:0 > 0 && x2:0 > 0 && x1:0 < 0 && x:0 < 0 && x18:0 + x9:0 > 1 && x9:0 > 0 && x10:0 > 2 && x9:0 < x18:0 + x9:0 && sum~x18:0~x9:0 = x18:0 + x9:0
f_963(v7152:0:0, v7153:0:0, v7154:0:0, v7155:0:0, v7156:0:0, v7158:0:0, v7159:0:0, v7160:0:0, v7161:0:0, sum~v6971:0:0~v7160:0:0, v7162:0:0, v7164:0:0, v7166:0:0, v7165:0:0, v7167:0:0, v7168:0:0, v7169:0:0, v7170:0:0) -> f_963(v7152:0:0, v7153:0:0, v7154:0:0, v7155:0:0, v7156:0:0, v7158:0:0, v7159:0:0, v7160:0:0, v7161:0:0, v6971:0:0, v6971:0:0 + v7160:0:0, v7164:0:0, v7166:0:0, v7165:0:0, v7167:0:0, v7168:0:0, v7169:0:0, v7170:0:0) :|: v7170:0:0 >= v7156:0:0 && v7169:0:0 >= v7155:0:0 && v7168:0:0 >= v7154:0:0 && v7167:0:0 >= v7165:0:0 && v7166:0:0 >= v7164:0:0 && v7170:0:0 > 3 && v7169:0:0 > 3 && v7168:0:0 > 3 && v6971:0:0 > -1 && v7167:0:0 > 3 && v7166:0:0 > 3 && v7165:0:0 > 0 && v7164:0:0 > 0 && v7162:0:0 > 1 && v6971:0:0 + v7160:0:0 > 0 && v7161:0:0 > 1 && v7160:0:0 > 0 && v7159:0:0 > 0 && v7158:0:0 > 0 && v7156:0:0 > 0 && v7155:0:0 > 0 && v7154:0:0 > 0 && v7153:0:0 < 0 && v7160:0:0 <= v6971:0:0 + v7160:0:0 && v7152:0:0 < 0 && sum~v6971:0:0~v7160:0:0 = v6971:0:0 + v7160:0:0


----------------------------------------

(27)
YES

----------------------------------------

(28)
Obligation:
SCC
----------------------------------------

(29) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 33 rulesP rules:
f_848(v5392, v5393, v5394, v5395, v5396, 1, v5398, 0, v5402, v5401, v5400, v5403, v5404, v5406, v5405, v5407, v5408, v5409, v5410, 3, 4) -> f_854(v5392, v5393, v5394, v5395, v5396, 1, v5398, 0, v5402, v5401, v5400, v5403, v5404, v5406, v5405, v5407, v5408, v5409, v5410, 3, 2, 4) :|: 0 < v5402 && 3 <= v5403 && 2 <= v5400
f_854(v5392, v5393, v5394, v5395, v5396, 1, v5398, 0, v5402, v5401, v5400, v5403, v5404, v5406, v5405, v5407, v5408, v5409, v5410, 3, 2, 4) -> f_862(v5392, v5393, v5394, v5395, v5396, 1, v5398, 0, v5402, v5401, v5400, v5403, v5404, v5406, v5405, v5407, v5408, v5409, v5410, 3, 2, 4) :|: 0 = 0
f_862(v5392, v5393, v5394, v5395, v5396, 1, v5398, 0, v5402, v5401, v5400, v5403, v5404, v5406, v5405, v5407, v5408, v5409, v5410, 3, 2, 4) -> f_869(v5392, v5393, v5394, v5395, v5396, 1, v5398, 0, v5402, v5401, v5400, v5403, v5404, v5406, v5405, v5407, v5408, v5409, v5410, 3, 2, 4) :|: TRUE
f_869(v5392, v5393, v5394, v5395, v5396, 1, v5398, 0, v5402, v5401, v5400, v5403, v5404, v5406, v5405, v5407, v5408, v5409, v5410, 3, 2, 4) -> f_876(v5392, v5393, v5394, v5395, v5396, 1, v5398, 0, v5402, v5400, v5403, v5404, v5406, v5405, v5407, v5408, v5409, v5410, 3, 2, 4) :|: 0 = 0
f_876(v5392, v5393, v5394, v5395, v5396, 1, v5398, 0, v5402, v5400, v5403, v5404, v5406, v5405, v5407, v5408, v5409, v5410, 3, 2, 4) -> f_883(v5392, v5393, v5394, v5395, v5396, 1, v5398, 0, v5402, v5400, v5403, v5404, v5406, v5405, v5407, v5408, v5409, v5410, 3, 2, 4) :|: TRUE
f_883(v5392, v5393, v5394, v5395, v5396, 1, v5398, 0, v5402, v5400, v5403, v5404, v5406, v5405, v5407, v5408, v5409, v5410, 3, 2, 4) -> f_890(v5392, v5393, v5394, v5395, v5396, 1, v5398, 0, v5402, v5400, v5403, v5404, v5406, v5405, v5407, v5408, v5409, v5410, 3, 2, 4) :|: TRUE
f_890(v5392, v5393, v5394, v5395, v5396, 1, v5398, 0, v5402, v5400, v5403, v5404, v5406, v5405, v5407, v5408, v5409, v5410, 3, 2, 4) -> f_896(v5392, v5393, v5394, v5395, v5396, 1, v5398, 0, v5402, v5400, v5403, v5404, v5406, v5405, v5407, v5408, v5409, v5410, 3, 2, 4) :|: 0 = 0
f_896(v5392, v5393, v5394, v5395, v5396, 1, v5398, 0, v5402, v5400, v5403, v5404, v5406, v5405, v5407, v5408, v5409, v5410, 3, 2, 4) -> f_901(v5392, v5393, v5394, v5395, v5396, 1, v5398, 0, v5402, v5400, v5403, v5404, v5406, v5405, v5407, v5408, v5409, v5410, 3, 2, 4) :|: 0 = 0
f_901(v5392, v5393, v5394, v5395, v5396, 1, v5398, 0, v5402, v5400, v5403, v5404, v5406, v5405, v5407, v5408, v5409, v5410, 3, 2, 4) -> f_905(v5392, v5393, v5394, v5395, v5396, 1, v5398, 0, v5402, v5400, v5403, v5404, v5406, v5405, v5407, v5408, v5409, v5410, 3, 2, 4) :|: 0 = 0
f_905(v5392, v5393, v5394, v5395, v5396, 1, v5398, 0, v5402, v5400, v5403, v5404, v5406, v5405, v5407, v5408, v5409, v5410, 3, 2, 4) -> f_910(v5392, v5393, v5394, v5395, v5396, 1, v5398, 0, v5402, v5400, v5403, v5404, v5406, v5405, v5407, v5408, v5409, v5410, 3, 2, 4) :|: TRUE
f_910(v5392, v5393, v5394, v5395, v5396, 1, v5398, 0, v5402, v5400, v5403, v5404, v5406, v5405, v5407, v5408, v5409, v5410, 3, 2, 4) -> f_911(v5392, v5393, v5394, v5395, v5396, 1, v5398, 0, v5402, v5400, v5400, v5403, v5400, v5402, v5404, v5406, v5405, v5407, v5408, v5409, v5410, 3, 2, 4) :|: v5402 <= v5400 && v5402 <= v5402 && v5402 <= v5400 && 1 + v5392 <= 0 && 1 <= v5393 && 1 <= v5394 && 1 <= v5395 && 1 <= v5396 && 1 <= v5398 && 1 <= v5402 && 2 <= v5400 && 1 <= v5400 && 2 <= v5403 && 1 <= v5400 && 1 <= v5402 && 1 <= v5404 && 1 <= v5405 && 4 <= v5406 && 4 <= v5407 && 4 <= v5408 && 4 <= v5409 && 4 <= v5410 && v5404 <= v5406 && v5405 <= v5407 && v5394 <= v5408 && v5395 <= v5409 && v5396 <= v5410
f_911(v6412, v6413, v6414, v6415, v6416, 1, v6418, 0, v6420, v6421, v6422, v6423, v6424, v6425, v6426, v6428, v6427, v6429, v6430, v6431, v6432, 3, 2, 4) -> f_915(v6412, v6413, v6414, v6415, v6416, 1, v6418, 0, v6420, v6421, v6422, v6424, v6425, v6426, v6428, v6427, v6429, v6430, v6431, v6432, 3, 2, 4) :|: 0 = 0
f_915(v6412, v6413, v6414, v6415, v6416, 1, v6418, 0, v6420, v6421, v6422, v6424, v6425, v6426, v6428, v6427, v6429, v6430, v6431, v6432, 3, 2, 4) -> f_920(v6412, v6413, v6414, v6415, v6416, 1, v6418, 0, v6420, v6421, v6422, v6425, v6426, v6428, v6427, v6429, v6430, v6431, v6432, 3, 2, 4) :|: 0 = 0
f_920(v6412, v6413, v6414, v6415, v6416, 1, v6418, 0, v6420, v6421, v6422, v6425, v6426, v6428, v6427, v6429, v6430, v6431, v6432, 3, 2, 4) -> f_925(v6412, v6413, v6414, v6415, v6416, 1, v6418, 0, v6420, v6421, v6422, v6692, v6426, v6428, v6427, v6429, v6430, v6431, v6432, 3, 2, 4) :|: v6692 + v6420 = v6422 && 0 <= v6692
f_925(v6412, v6413, v6414, v6415, v6416, 1, v6418, 0, v6420, v6421, v6422, v6692, v6426, v6428, v6427, v6429, v6430, v6431, v6432, 3, 2, 4) -> f_929(v6412, v6413, v6414, v6415, v6416, 1, v6418, 0, v6420, v6421, v6422, v6692, v6426, v6428, v6427, v6429, v6430, v6431, v6432, 3, 2, 4) :|: TRUE
f_929(v6412, v6413, v6414, v6415, v6416, 1, v6418, 0, v6420, v6421, v6422, v6692, v6426, v6428, v6427, v6429, v6430, v6431, v6432, 3, 2, 4) -> f_935(v6412, v6413, v6414, v6415, v6416, 1, v6418, 0, v6420, v6421, v6422, v6692, v6426, v6428, v6427, v6429, v6430, v6431, v6432, 3, 2, 4) :|: TRUE
f_935(v6412, v6413, v6414, v6415, v6416, 1, v6418, 0, v6420, v6421, v6422, v6692, v6426, v6428, v6427, v6429, v6430, v6431, v6432, 3, 2, 4) -> f_936(v6412, v6413, v6414, v6415, v6416, 1, v6418, 0, v6420, v6421, v6422, v6692, v6426, v6428, v6427, v6429, v6430, v6431, v6432, 3, 2, 4) :|: 1 + v6412 <= 0 && 1 <= v6413 && 1 <= v6414 && 1 <= v6415 && 1 <= v6416 && 1 <= v6418 && 1 <= v6420 && 2 <= v6421 && 1 <= v6422 && 0 <= v6692 && 1 <= v6426 && 1 <= v6427 && 4 <= v6428 && 4 <= v6429 && 4 <= v6430 && 4 <= v6431 && 4 <= v6432 && v6426 <= v6428 && v6427 <= v6429 && v6414 <= v6430 && v6415 <= v6431 && v6416 <= v6432
f_936(v6914, v6915, v6916, v6917, v6918, 1, v6920, 0, v6922, v6923, v6924, v6925, v6926, v6928, v6927, v6929, v6930, v6931, v6932, 3, 2, 4) -> f_941(v6914, v6915, v6916, v6917, v6918, 1, v6920, 0, v6922, v6923, v6925, v6924, v6926, v6928, v6927, v6929, v6930, v6931, v6932, 3, 2, 4) :|: 0 = 0
f_941(v6914, v6915, v6916, v6917, v6918, 1, v6920, 0, v6922, v6923, v6925, v6924, v6926, v6928, v6927, v6929, v6930, v6931, v6932, 3, 2, 4) -> f_946(v6914, v6915, v6916, v6917, v6918, 1, v6920, 0, v6922, v6923, v6925, v6924, v6926, v6928, v6927, v6929, v6930, v6931, v6932, 3, 2, 4) :|: 0 = 0
f_946(v6914, v6915, v6916, v6917, v6918, 1, v6920, 0, v6922, v6923, v6925, v6924, v6926, v6928, v6927, v6929, v6930, v6931, v6932, 3, 2, 4) -> f_952(v6914, v6915, v6916, v6917, v6918, 1, v6920, 0, v6922, v6923, v6925, v6924, v6926, v6928, v6927, v6929, v6930, v6931, v6932, 3, 2, 4) :|: v6922 <= v6925 && 1 <= v6925 && 2 <= v6924
f_946(v6914, v6915, v6916, v6917, v6918, 1, v6920, 0, v6922, v6923, v6925, v6924, v6926, v6928, v6927, v6929, v6930, v6931, v6932, 3, 2, 4) -> f_953(v6914, v6915, v6916, v6917, v6918, 1, v6920, 0, v6922, v6923, v6925, v6924, v6926, v6928, v6927, v6929, v6930, v6931, v6932, 3, 2, 4) :|: v6925 < v6922
f_952(v6914, v6915, v6916, v6917, v6918, 1, v6920, 0, v6922, v6923, v6925, v6924, v6926, v6928, v6927, v6929, v6930, v6931, v6932, 3, 2, 4) -> f_958(v6914, v6915, v6916, v6917, v6918, 1, v6920, 0, v6922, v6923, v6925, v6924, v6926, v6928, v6927, v6929, v6930, v6931, v6932, 3, 2, 4) :|: 0 = 0
f_958(v6914, v6915, v6916, v6917, v6918, 1, v6920, 0, v6922, v6923, v6925, v6924, v6926, v6928, v6927, v6929, v6930, v6931, v6932, 3, 2, 4) -> f_964(v6914, v6915, v6916, v6917, v6918, 1, v6920, 0, v6922, v6923, v6925, v6924, v6926, v6928, v6927, v6929, v6930, v6931, v6932, 3, 2, 4) :|: TRUE
f_964(v6914, v6915, v6916, v6917, v6918, 1, v6920, 0, v6922, v6923, v6925, v6924, v6926, v6928, v6927, v6929, v6930, v6931, v6932, 3, 2, 4) -> f_911(v6914, v6915, v6916, v6917, v6918, 1, v6920, 0, v6922, v6923, v6925, v6924, v6922, v6925, v6926, v6928, v6927, v6929, v6930, v6931, v6932, 3, 2, 4) :|: v6922 <= v6925 && v6922 <= v6925 && v6922 <= v6922 && 1 + v6914 <= 0 && 1 <= v6915 && 1 <= v6916 && 1 <= v6917 && 1 <= v6918 && 1 <= v6920 && 1 <= v6922 && 2 <= v6923 && 1 <= v6925 && 2 <= v6924 && 1 <= v6922 && 1 <= v6925 && 1 <= v6926 && 1 <= v6927 && 4 <= v6928 && 4 <= v6929 && 4 <= v6930 && 4 <= v6931 && 4 <= v6932 && v6926 <= v6928 && v6927 <= v6929 && v6916 <= v6930 && v6917 <= v6931 && v6918 <= v6932
f_953(v6914, v6915, v6916, v6917, v6918, 1, v6920, 0, v6922, v6923, v6925, v6924, v6926, v6928, v6927, v6929, v6930, v6931, v6932, 3, 2, 4) -> f_959(v6914, v6915, v6916, v6917, v6918, 1, v6920, 0, v6922, v6923, v6925, v6924, v6926, v6928, v6927, v6929, v6930, v6931, v6932, 3, 2, 4) :|: 0 = 0
f_959(v6914, v6915, v6916, v6917, v6918, 1, v6920, 0, v6922, v6923, v6925, v6924, v6926, v6928, v6927, v6929, v6930, v6931, v6932, 3, 2, 4) -> f_965(v6914, v6915, v6916, v6917, v6918, 1, v6920, 0, v6922, v6923, v6925, v6924, v6926, v6928, v6927, v6929, v6930, v6931, v6932, 3, 2, 4) :|: TRUE
f_965(v6914, v6915, v6916, v6917, v6918, 1, v6920, 0, v6922, v6923, v6925, v6924, v6926, v6928, v6927, v6929, v6930, v6931, v6932, 3, 2, 4) -> f_970(v6914, v6915, v6916, v6917, v6918, 1, v6920, 0, v6922, v6923, v6925, v6924, v6926, v6928, v6927, v6929, v6930, v6931, v6932, 3, 2, 4) :|: 0 = 0
f_970(v6914, v6915, v6916, v6917, v6918, 1, v6920, 0, v6922, v6923, v6925, v6924, v6926, v6928, v6927, v6929, v6930, v6931, v6932, 3, 2, 4) -> f_975(v6914, v6915, v6916, v6917, v6918, 1, v6920, 0, v6922, v6923, v6925, v6924, v6926, v6928, v6927, v6929, v6930, v6931, v6932, 3, 2, 4) :|: TRUE
f_975(v6914, v6915, v6916, v6917, v6918, 1, v6920, 0, v6922, v6923, v6925, v6924, v6926, v6928, v6927, v6929, v6930, v6931, v6932, 3, 2, 4) -> f_980(v6914, v6915, v6916, v6917, v6918, 1, v6920, 0, v6922, v6923, v6925, v6924, v6926, v6928, v6927, v6929, v6930, v6931, v6932, 3, 2, 4) :|: 0 = 0
f_980(v6914, v6915, v6916, v6917, v6918, 1, v6920, 0, v6922, v6923, v6925, v6924, v6926, v6928, v6927, v6929, v6930, v6931, v6932, 3, 2, 4) -> f_985(v6914, v6915, v6916, v6917, v6918, 1, v6920, 0, v6922, v6923, v6925, v6924, v6926, v6928, v6927, v6929, v6930, v6931, v6932, 3, 2, 4) :|: TRUE
f_985(v6914, v6915, v6916, v6917, v6918, 1, v6920, 0, v6922, v6923, v6925, v6924, v6926, v6928, v6927, v6929, v6930, v6931, v6932, 3, 2, 4) -> f_990(v6914, v6915, v6916, v6917, v6918, 1, v6920, 0, v6922, v6923, v6925, v6924, v6926, v6928, v6927, v6929, v6930, v6931, v6932, 3, 2, 4) :|: TRUE
f_990(v6914, v6915, v6916, v6917, v6918, 1, v6920, 0, v6922, v6923, v6925, v6924, v6926, v6928, v6927, v6929, v6930, v6931, v6932, 3, 2, 4) -> f_843(v6914, v6915, v6916, v6917, v6918, 1, v6920, 0, v6922, v6923, v6925, v6924, v6926, v6928, v6927, v6929, v6930, v6931, v6932, 3, 4) :|: v6925 < v6922 && 1 + v6914 <= 0 && 1 <= v6915 && 1 <= v6916 && 1 <= v6917 && 1 <= v6918 && 1 <= v6920 && 1 <= v6922 && 1 <= v6923 && 0 <= v6925 && 1 <= v6924 && 1 <= v6926 && 1 <= v6927 && 4 <= v6928 && 4 <= v6929 && 4 <= v6930 && 4 <= v6931 && 4 <= v6932 && v6926 <= v6928 && v6927 <= v6929 && v6916 <= v6930 && v6917 <= v6931 && v6918 <= v6932
f_843(v5392, v5393, v5394, v5395, v5396, 1, v5398, 0, v5400, v5401, v5402, v5403, v5404, v5406, v5405, v5407, v5408, v5409, v5410, 3, 4) -> f_848(v5392, v5393, v5394, v5395, v5396, 1, v5398, 0, v5402, v5401, v5400, v5403, v5404, v5406, v5405, v5407, v5408, v5409, v5410, 3, 4) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_946(v6914:0, v6915:0, v6916:0, v6917:0, v6918:0, 1, v6920:0, 0, v6922:0, v6923:0, v6692:0 + v6922:0, v6924:0, v6926:0, v6928:0, v6927:0, v6929:0, v6930:0, v6931:0, v6932:0, 3, 2, 4) -> f_946(v6914:0, v6915:0, v6916:0, v6917:0, v6918:0, 1, v6920:0, 0, v6922:0, v6923:0, v6692:0, v6692:0 + v6922:0, v6926:0, v6928:0, v6927:0, v6929:0, v6930:0, v6931:0, v6932:0, 3, 2, 4) :|: v6922:0 <= v6692:0 + v6922:0 && v6914:0 < 0 && v6915:0 > 0 && v6916:0 > 0 && v6917:0 > 0 && v6918:0 > 0 && v6920:0 > 0 && v6922:0 > 0 && v6923:0 > 1 && v6692:0 + v6922:0 > 0 && v6924:0 > 1 && v6926:0 > 0 && v6927:0 > 0 && v6928:0 > 3 && v6929:0 > 3 && v6692:0 > -1 && v6930:0 > 3 && v6931:0 > 3 && v6932:0 > 3 && v6928:0 >= v6926:0 && v6929:0 >= v6927:0 && v6930:0 >= v6916:0 && v6931:0 >= v6917:0 && v6932:0 >= v6918:0
f_946(v6914:0, v6915:0, v6916:0, v6917:0, v6918:0, 1, v6920:0, 0, v6692:0 + v6925:0, v6923:0, v6925:0, v6924:0, v6926:0, v6928:0, v6927:0, v6929:0, v6930:0, v6931:0, v6932:0, 3, 2, 4) -> f_946(v6914:0, v6915:0, v6916:0, v6917:0, v6918:0, 1, v6920:0, 0, v6925:0, v6692:0 + v6925:0, v6692:0, v6692:0 + v6925:0, v6926:0, v6928:0, v6927:0, v6929:0, v6930:0, v6931:0, v6932:0, 3, 2, 4) :|: v6924:0 > 2 && v6925:0 < v6692:0 + v6925:0 && v6925:0 > 0 && v6692:0 + v6925:0 > 1 && v6914:0 < 0 && v6915:0 > 0 && v6916:0 > 0 && v6917:0 > 0 && v6918:0 > 0 && v6920:0 > 0 && v6926:0 > 0 && v6927:0 > 0 && v6928:0 > 3 && v6929:0 > 3 && v6930:0 > 3 && v6923:0 > 0 && v6692:0 > -1 && v6931:0 > 3 && v6932:0 > 3 && v6928:0 >= v6926:0 && v6929:0 >= v6927:0 && v6930:0 >= v6916:0 && v6931:0 >= v6917:0 && v6932:0 >= v6918:0
Filtered unneeded arguments:
   f_946(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22) -> f_946(x1, x2, x3, x4, x5, x7, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19)
Removed division, modulo operations, cleaned up constraints. Obtained 2 rules.P rules:
f_946(v6914:0, v6915:0, v6916:0, v6917:0, v6918:0, v6920:0, v6922:0, v6923:0, sum~v6692:0~v6922:0, v6924:0, v6926:0, v6928:0, v6927:0, v6929:0, v6930:0, v6931:0, v6932:0) -> f_946(v6914:0, v6915:0, v6916:0, v6917:0, v6918:0, v6920:0, v6922:0, v6923:0, v6692:0, v6692:0 + v6922:0, v6926:0, v6928:0, v6927:0, v6929:0, v6930:0, v6931:0, v6932:0) :|: v6914:0 < 0 && v6922:0 <= v6692:0 + v6922:0 && v6915:0 > 0 && v6916:0 > 0 && v6917:0 > 0 && v6918:0 > 0 && v6920:0 > 0 && v6922:0 > 0 && v6923:0 > 1 && v6692:0 + v6922:0 > 0 && v6924:0 > 1 && v6926:0 > 0 && v6927:0 > 0 && v6928:0 > 3 && v6929:0 > 3 && v6692:0 > -1 && v6930:0 > 3 && v6931:0 > 3 && v6932:0 > 3 && v6928:0 >= v6926:0 && v6929:0 >= v6927:0 && v6930:0 >= v6916:0 && v6932:0 >= v6918:0 && v6931:0 >= v6917:0 && sum~v6692:0~v6922:0 = v6692:0 + v6922:0
f_946(v6914:0, v6915:0, v6916:0, v6917:0, v6918:0, v6920:0, sum~v6692:0~v6925:0, v6923:0, v6925:0, v6924:0, v6926:0, v6928:0, v6927:0, v6929:0, v6930:0, v6931:0, v6932:0) -> f_946(v6914:0, v6915:0, v6916:0, v6917:0, v6918:0, v6920:0, v6925:0, v6692:0 + v6925:0, v6692:0, v6692:0 + v6925:0, v6926:0, v6928:0, v6927:0, v6929:0, v6930:0, v6931:0, v6932:0) :|: v6925:0 < v6692:0 + v6925:0 && v6924:0 > 2 && v6925:0 > 0 && v6692:0 + v6925:0 > 1 && v6914:0 < 0 && v6915:0 > 0 && v6916:0 > 0 && v6917:0 > 0 && v6918:0 > 0 && v6920:0 > 0 && v6926:0 > 0 && v6927:0 > 0 && v6928:0 > 3 && v6929:0 > 3 && v6930:0 > 3 && v6923:0 > 0 && v6692:0 > -1 && v6931:0 > 3 && v6932:0 > 3 && v6928:0 >= v6926:0 && v6929:0 >= v6927:0 && v6930:0 >= v6916:0 && v6932:0 >= v6918:0 && v6931:0 >= v6917:0 && sum~v6692:0~v6925:0 = v6692:0 + v6925:0

----------------------------------------

(30)
Obligation:
Rules:
f_946(v6914:0, v6915:0, v6916:0, v6917:0, v6918:0, v6920:0, v6922:0, v6923:0, sum~v6692:0~v6922:0, v6924:0, v6926:0, v6928:0, v6927:0, v6929:0, v6930:0, v6931:0, v6932:0) -> f_946(v6914:0, v6915:0, v6916:0, v6917:0, v6918:0, v6920:0, v6922:0, v6923:0, v6692:0, v6692:0 + v6922:0, v6926:0, v6928:0, v6927:0, v6929:0, v6930:0, v6931:0, v6932:0) :|: v6914:0 < 0 && v6922:0 <= v6692:0 + v6922:0 && v6915:0 > 0 && v6916:0 > 0 && v6917:0 > 0 && v6918:0 > 0 && v6920:0 > 0 && v6922:0 > 0 && v6923:0 > 1 && v6692:0 + v6922:0 > 0 && v6924:0 > 1 && v6926:0 > 0 && v6927:0 > 0 && v6928:0 > 3 && v6929:0 > 3 && v6692:0 > -1 && v6930:0 > 3 && v6931:0 > 3 && v6932:0 > 3 && v6928:0 >= v6926:0 && v6929:0 >= v6927:0 && v6930:0 >= v6916:0 && v6932:0 >= v6918:0 && v6931:0 >= v6917:0 && sum~v6692:0~v6922:0 = v6692:0 + v6922:0
f_946(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16) -> f_946(x, x1, x2, x3, x4, x5, x8, x17 + x8, x17, x17 + x8, x10, x11, x12, x13, x14, x15, x16) :|: x8 < x17 + x8 && x9 > 2 && x8 > 0 && x17 + x8 > 1 && x < 0 && x1 > 0 && x2 > 0 && x3 > 0 && x4 > 0 && x5 > 0 && x10 > 0 && x12 > 0 && x11 > 3 && x13 > 3 && x14 > 3 && x7 > 0 && x17 > -1 && x15 > 3 && x16 > 3 && x11 >= x10 && x13 >= x12 && x14 >= x2 && x16 >= x4 && x15 >= x3 && x6 = x17 + x8

----------------------------------------

(31) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(32)
Obligation:
Rules:
f_946(v6914:0:0, v6915:0:0, v6916:0:0, v6917:0:0, v6918:0:0, v6920:0:0, v6922:0:0, v6923:0:0, sum~v6692:0:0~v6922:0:0, v6924:0:0, v6926:0:0, v6928:0:0, v6927:0:0, v6929:0:0, v6930:0:0, v6931:0:0, v6932:0:0) -> f_946(v6914:0:0, v6915:0:0, v6916:0:0, v6917:0:0, v6918:0:0, v6920:0:0, v6922:0:0, v6923:0:0, v6692:0:0, v6692:0:0 + v6922:0:0, v6926:0:0, v6928:0:0, v6927:0:0, v6929:0:0, v6930:0:0, v6931:0:0, v6932:0:0) :|: v6932:0:0 >= v6918:0:0 && v6931:0:0 >= v6917:0:0 && v6930:0:0 >= v6916:0:0 && v6929:0:0 >= v6927:0:0 && v6928:0:0 >= v6926:0:0 && v6932:0:0 > 3 && v6931:0:0 > 3 && v6930:0:0 > 3 && v6692:0:0 > -1 && v6929:0:0 > 3 && v6928:0:0 > 3 && v6927:0:0 > 0 && v6926:0:0 > 0 && v6924:0:0 > 1 && v6692:0:0 + v6922:0:0 > 0 && v6923:0:0 > 1 && v6922:0:0 > 0 && v6920:0:0 > 0 && v6918:0:0 > 0 && v6917:0:0 > 0 && v6916:0:0 > 0 && v6915:0:0 > 0 && v6922:0:0 <= v6692:0:0 + v6922:0:0 && v6914:0:0 < 0 && sum~v6692:0:0~v6922:0:0 = v6692:0:0 + v6922:0:0
f_946(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, sum~x17:0~x8:0, x7:0, x8:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0, x16:0) -> f_946(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x8:0, x17:0 + x8:0, x17:0, x17:0 + x8:0, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0, x16:0) :|: x4:0 <= x16:0 && x3:0 <= x15:0 && x2:0 <= x14:0 && x13:0 >= x12:0 && x11:0 >= x10:0 && x16:0 > 3 && x15:0 > 3 && x17:0 > -1 && x7:0 > 0 && x14:0 > 3 && x13:0 > 3 && x11:0 > 3 && x12:0 > 0 && x10:0 > 0 && x5:0 > 0 && x4:0 > 0 && x3:0 > 0 && x2:0 > 0 && x1:0 > 0 && x:0 < 0 && x17:0 + x8:0 > 1 && x8:0 > 0 && x9:0 > 2 && x8:0 < x17:0 + x8:0 && sum~x17:0~x8:0 = x17:0 + x8:0

----------------------------------------

(33) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_946 ] = f_946_7 + f_946_9

The following rules are decreasing:
f_946(v6914:0:0, v6915:0:0, v6916:0:0, v6917:0:0, v6918:0:0, v6920:0:0, v6922:0:0, v6923:0:0, sum~v6692:0:0~v6922:0:0, v6924:0:0, v6926:0:0, v6928:0:0, v6927:0:0, v6929:0:0, v6930:0:0, v6931:0:0, v6932:0:0) -> f_946(v6914:0:0, v6915:0:0, v6916:0:0, v6917:0:0, v6918:0:0, v6920:0:0, v6922:0:0, v6923:0:0, v6692:0:0, v6692:0:0 + v6922:0:0, v6926:0:0, v6928:0:0, v6927:0:0, v6929:0:0, v6930:0:0, v6931:0:0, v6932:0:0) :|: v6932:0:0 >= v6918:0:0 && v6931:0:0 >= v6917:0:0 && v6930:0:0 >= v6916:0:0 && v6929:0:0 >= v6927:0:0 && v6928:0:0 >= v6926:0:0 && v6932:0:0 > 3 && v6931:0:0 > 3 && v6930:0:0 > 3 && v6692:0:0 > -1 && v6929:0:0 > 3 && v6928:0:0 > 3 && v6927:0:0 > 0 && v6926:0:0 > 0 && v6924:0:0 > 1 && v6692:0:0 + v6922:0:0 > 0 && v6923:0:0 > 1 && v6922:0:0 > 0 && v6920:0:0 > 0 && v6918:0:0 > 0 && v6917:0:0 > 0 && v6916:0:0 > 0 && v6915:0:0 > 0 && v6922:0:0 <= v6692:0:0 + v6922:0:0 && v6914:0:0 < 0 && sum~v6692:0:0~v6922:0:0 = v6692:0:0 + v6922:0:0
f_946(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, sum~x17:0~x8:0, x7:0, x8:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0, x16:0) -> f_946(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x8:0, x17:0 + x8:0, x17:0, x17:0 + x8:0, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0, x16:0) :|: x4:0 <= x16:0 && x3:0 <= x15:0 && x2:0 <= x14:0 && x13:0 >= x12:0 && x11:0 >= x10:0 && x16:0 > 3 && x15:0 > 3 && x17:0 > -1 && x7:0 > 0 && x14:0 > 3 && x13:0 > 3 && x11:0 > 3 && x12:0 > 0 && x10:0 > 0 && x5:0 > 0 && x4:0 > 0 && x3:0 > 0 && x2:0 > 0 && x1:0 > 0 && x:0 < 0 && x17:0 + x8:0 > 1 && x8:0 > 0 && x9:0 > 2 && x8:0 < x17:0 + x8:0 && sum~x17:0~x8:0 = x17:0 + x8:0

The following rules are bounded:
f_946(v6914:0:0, v6915:0:0, v6916:0:0, v6917:0:0, v6918:0:0, v6920:0:0, v6922:0:0, v6923:0:0, sum~v6692:0:0~v6922:0:0, v6924:0:0, v6926:0:0, v6928:0:0, v6927:0:0, v6929:0:0, v6930:0:0, v6931:0:0, v6932:0:0) -> f_946(v6914:0:0, v6915:0:0, v6916:0:0, v6917:0:0, v6918:0:0, v6920:0:0, v6922:0:0, v6923:0:0, v6692:0:0, v6692:0:0 + v6922:0:0, v6926:0:0, v6928:0:0, v6927:0:0, v6929:0:0, v6930:0:0, v6931:0:0, v6932:0:0) :|: v6932:0:0 >= v6918:0:0 && v6931:0:0 >= v6917:0:0 && v6930:0:0 >= v6916:0:0 && v6929:0:0 >= v6927:0:0 && v6928:0:0 >= v6926:0:0 && v6932:0:0 > 3 && v6931:0:0 > 3 && v6930:0:0 > 3 && v6692:0:0 > -1 && v6929:0:0 > 3 && v6928:0:0 > 3 && v6927:0:0 > 0 && v6926:0:0 > 0 && v6924:0:0 > 1 && v6692:0:0 + v6922:0:0 > 0 && v6923:0:0 > 1 && v6922:0:0 > 0 && v6920:0:0 > 0 && v6918:0:0 > 0 && v6917:0:0 > 0 && v6916:0:0 > 0 && v6915:0:0 > 0 && v6922:0:0 <= v6692:0:0 + v6922:0:0 && v6914:0:0 < 0 && sum~v6692:0:0~v6922:0:0 = v6692:0:0 + v6922:0:0
f_946(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, sum~x17:0~x8:0, x7:0, x8:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0, x16:0) -> f_946(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x8:0, x17:0 + x8:0, x17:0, x17:0 + x8:0, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0, x16:0) :|: x4:0 <= x16:0 && x3:0 <= x15:0 && x2:0 <= x14:0 && x13:0 >= x12:0 && x11:0 >= x10:0 && x16:0 > 3 && x15:0 > 3 && x17:0 > -1 && x7:0 > 0 && x14:0 > 3 && x13:0 > 3 && x11:0 > 3 && x12:0 > 0 && x10:0 > 0 && x5:0 > 0 && x4:0 > 0 && x3:0 > 0 && x2:0 > 0 && x1:0 > 0 && x:0 < 0 && x17:0 + x8:0 > 1 && x8:0 > 0 && x9:0 > 2 && x8:0 < x17:0 + x8:0 && sum~x17:0~x8:0 = x17:0 + x8:0


----------------------------------------

(34)
YES

----------------------------------------

(35)
Obligation:
SCC
----------------------------------------

(36) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 11 rulesP rules:
f_499(v987, v988, v989, v990, v991, 1, v993, v994, v996, v995, v997, v999, v998, v1000, v1001, v1002, v1003, 3, 0, 4) -> f_510(v987, v988, v989, v990, v991, 1, v993, v994, v996, v995, v997, v999, v998, v1000, v1001, v1002, v1003, 3, 0, 4) :|: 0 = 0
f_510(v987, v988, v989, v990, v991, 1, v993, v994, v996, v995, v997, v999, v998, v1000, v1001, v1002, v1003, 3, 0, 4) -> f_522(v987, v988, v989, v990, v991, 1, v993, v994, v996, v995, v997, v999, v998, v1000, v1001, v1002, v1003, 3, 0, 2, 4) :|: v994 <= v996 && 1 <= v996 && 2 <= v995
f_522(v987, v988, v989, v990, v991, 1, v993, v994, v996, v995, v997, v999, v998, v1000, v1001, v1002, v1003, 3, 0, 2, 4) -> f_535(v987, v988, v989, v990, v991, 1, v993, v994, v996, v995, v997, v999, v998, v1000, v1001, v1002, v1003, 3, 0, 2, 4) :|: 0 = 0
f_535(v987, v988, v989, v990, v991, 1, v993, v994, v996, v995, v997, v999, v998, v1000, v1001, v1002, v1003, 3, 0, 2, 4) -> f_547(v987, v988, v989, v990, v991, 1, v993, v994, v996, v995, v997, v999, v998, v1000, v1001, v1002, v1003, 3, 0, 2, 4) :|: TRUE
f_547(v987, v988, v989, v990, v991, 1, v993, v994, v996, v995, v997, v999, v998, v1000, v1001, v1002, v1003, 3, 0, 2, 4) -> f_562(v987, v988, v989, v990, v991, 1, v993, v994, v996, v997, v999, v998, v1000, v1001, v1002, v1003, 3, 0, 4) :|: 0 = 0
f_562(v987, v988, v989, v990, v991, 1, v993, v994, v996, v997, v999, v998, v1000, v1001, v1002, v1003, 3, 0, 4) -> f_577(v987, v988, v989, v990, v991, 1, v993, v994, v996, v997, v999, v998, v1000, v1001, v1002, v1003, 3, 0, 4) :|: 0 = 0
f_577(v987, v988, v989, v990, v991, 1, v993, v994, v996, v997, v999, v998, v1000, v1001, v1002, v1003, 3, 0, 4) -> f_591(v987, v988, v989, v990, v991, 1, v993, v994, v996, v2009, v997, v999, v998, v1000, v1001, v1002, v1003, 3, 0, 4) :|: v2009 + v994 = v996 && 0 <= v2009
f_591(v987, v988, v989, v990, v991, 1, v993, v994, v996, v2009, v997, v999, v998, v1000, v1001, v1002, v1003, 3, 0, 4) -> f_606(v987, v988, v989, v990, v991, 1, v993, v994, v996, v2009, v997, v999, v998, v1000, v1001, v1002, v1003, 3, 0, 4) :|: TRUE
f_606(v987, v988, v989, v990, v991, 1, v993, v994, v996, v2009, v997, v999, v998, v1000, v1001, v1002, v1003, 3, 0, 4) -> f_622(v987, v988, v989, v990, v991, 1, v993, v994, v996, v2009, v997, v999, v998, v1000, v1001, v1002, v1003, 3, 0, 4) :|: TRUE
f_622(v987, v988, v989, v990, v991, 1, v993, v994, v996, v2009, v997, v999, v998, v1000, v1001, v1002, v1003, 3, 0, 4) -> f_488(v987, v988, v989, v990, v991, 1, v993, v994, v996, v2009, v997, v999, v998, v1000, v1001, v1002, v1003, 3, 0, 4) :|: 1 + v987 <= 0 && 1 + v988 <= 0 && 1 <= v989 && 1 <= v990 && 1 <= v991 && 1 <= v993 && 1 <= v994 && 1 <= v996 && 0 <= v2009 && 1 <= v997 && 1 <= v998 && 4 <= v999 && 4 <= v1000 && 4 <= v1001 && 4 <= v1002 && 4 <= v1003 && v997 <= v999 && v998 <= v1000 && v989 <= v1001 && v990 <= v1002 && v991 <= v1003
f_488(v987, v988, v989, v990, v991, 1, v993, v994, v995, v996, v997, v999, v998, v1000, v1001, v1002, v1003, 3, 0, 4) -> f_499(v987, v988, v989, v990, v991, 1, v993, v994, v996, v995, v997, v999, v998, v1000, v1001, v1002, v1003, 3, 0, 4) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_499(v987:0, v988:0, v989:0, v990:0, v991:0, 1, v993:0, v994:0, v2009:0 + v994:0, v995:0, v997:0, v999:0, v998:0, v1000:0, v1001:0, v1002:0, v1003:0, 3, 0, 4) -> f_499(v987:0, v988:0, v989:0, v990:0, v991:0, 1, v993:0, v994:0, v2009:0, v2009:0 + v994:0, v997:0, v999:0, v998:0, v1000:0, v1001:0, v1002:0, v1003:0, 3, 0, 4) :|: v988:0 < 0 && v987:0 < 0 && v989:0 > 0 && v990:0 > 0 && v991:0 > 0 && v993:0 > 0 && v994:0 > 0 && v2009:0 + v994:0 > 0 && v2009:0 > -1 && v997:0 > 0 && v998:0 > 0 && v999:0 > 3 && v994:0 <= v2009:0 + v994:0 && v1000:0 > 3 && v995:0 > 1 && v1001:0 > 3 && v1002:0 > 3 && v1003:0 > 3 && v999:0 >= v997:0 && v998:0 <= v1000:0 && v989:0 <= v1001:0 && v991:0 <= v1003:0 && v990:0 <= v1002:0
Filtered unneeded arguments:
   f_499(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20) -> f_499(x1, x2, x3, x4, x5, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_499(v987:0, v988:0, v989:0, v990:0, v991:0, v993:0, v994:0, sum~v2009:0~v994:0, v995:0, v997:0, v999:0, v998:0, v1000:0, v1001:0, v1002:0, v1003:0) -> f_499(v987:0, v988:0, v989:0, v990:0, v991:0, v993:0, v994:0, v2009:0, v2009:0 + v994:0, v997:0, v999:0, v998:0, v1000:0, v1001:0, v1002:0, v1003:0) :|: v987:0 < 0 && v988:0 < 0 && v989:0 > 0 && v990:0 > 0 && v991:0 > 0 && v993:0 > 0 && v994:0 > 0 && v2009:0 + v994:0 > 0 && v2009:0 > -1 && v997:0 > 0 && v998:0 > 0 && v999:0 > 3 && v994:0 <= v2009:0 + v994:0 && v1000:0 > 3 && v995:0 > 1 && v1001:0 > 3 && v1002:0 > 3 && v1003:0 > 3 && v999:0 >= v997:0 && v998:0 <= v1000:0 && v989:0 <= v1001:0 && v990:0 <= v1002:0 && v991:0 <= v1003:0 && sum~v2009:0~v994:0 = v2009:0 + v994:0

----------------------------------------

(37)
Obligation:
Rules:
f_499(v987:0, v988:0, v989:0, v990:0, v991:0, v993:0, v994:0, sum~v2009:0~v994:0, v995:0, v997:0, v999:0, v998:0, v1000:0, v1001:0, v1002:0, v1003:0) -> f_499(v987:0, v988:0, v989:0, v990:0, v991:0, v993:0, v994:0, v2009:0, v2009:0 + v994:0, v997:0, v999:0, v998:0, v1000:0, v1001:0, v1002:0, v1003:0) :|: v987:0 < 0 && v988:0 < 0 && v989:0 > 0 && v990:0 > 0 && v991:0 > 0 && v993:0 > 0 && v994:0 > 0 && v2009:0 + v994:0 > 0 && v2009:0 > -1 && v997:0 > 0 && v998:0 > 0 && v999:0 > 3 && v994:0 <= v2009:0 + v994:0 && v1000:0 > 3 && v995:0 > 1 && v1001:0 > 3 && v1002:0 > 3 && v1003:0 > 3 && v999:0 >= v997:0 && v998:0 <= v1000:0 && v989:0 <= v1001:0 && v990:0 <= v1002:0 && v991:0 <= v1003:0 && sum~v2009:0~v994:0 = v2009:0 + v994:0

----------------------------------------

(38) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(39)
Obligation:
Rules:
f_499(v987:0:0, v988:0:0, v989:0:0, v990:0:0, v991:0:0, v993:0:0, v994:0:0, sum~v2009:0:0~v994:0:0, v995:0:0, v997:0:0, v999:0:0, v998:0:0, v1000:0:0, v1001:0:0, v1002:0:0, v1003:0:0) -> f_499(v987:0:0, v988:0:0, v989:0:0, v990:0:0, v991:0:0, v993:0:0, v994:0:0, v2009:0:0, v2009:0:0 + v994:0:0, v997:0:0, v999:0:0, v998:0:0, v1000:0:0, v1001:0:0, v1002:0:0, v1003:0:0) :|: v990:0:0 <= v1002:0:0 && v991:0:0 <= v1003:0:0 && v989:0:0 <= v1001:0:0 && v998:0:0 <= v1000:0:0 && v999:0:0 >= v997:0:0 && v1003:0:0 > 3 && v1002:0:0 > 3 && v1001:0:0 > 3 && v995:0:0 > 1 && v1000:0:0 > 3 && v994:0:0 <= v2009:0:0 + v994:0:0 && v999:0:0 > 3 && v998:0:0 > 0 && v997:0:0 > 0 && v2009:0:0 > -1 && v2009:0:0 + v994:0:0 > 0 && v994:0:0 > 0 && v993:0:0 > 0 && v991:0:0 > 0 && v990:0:0 > 0 && v989:0:0 > 0 && v988:0:0 < 0 && v987:0:0 < 0 && sum~v2009:0:0~v994:0:0 = v2009:0:0 + v994:0:0

----------------------------------------

(40) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_499 ] = f_499_8

The following rules are decreasing:
f_499(v987:0:0, v988:0:0, v989:0:0, v990:0:0, v991:0:0, v993:0:0, v994:0:0, sum~v2009:0:0~v994:0:0, v995:0:0, v997:0:0, v999:0:0, v998:0:0, v1000:0:0, v1001:0:0, v1002:0:0, v1003:0:0) -> f_499(v987:0:0, v988:0:0, v989:0:0, v990:0:0, v991:0:0, v993:0:0, v994:0:0, v2009:0:0, v2009:0:0 + v994:0:0, v997:0:0, v999:0:0, v998:0:0, v1000:0:0, v1001:0:0, v1002:0:0, v1003:0:0) :|: v990:0:0 <= v1002:0:0 && v991:0:0 <= v1003:0:0 && v989:0:0 <= v1001:0:0 && v998:0:0 <= v1000:0:0 && v999:0:0 >= v997:0:0 && v1003:0:0 > 3 && v1002:0:0 > 3 && v1001:0:0 > 3 && v995:0:0 > 1 && v1000:0:0 > 3 && v994:0:0 <= v2009:0:0 + v994:0:0 && v999:0:0 > 3 && v998:0:0 > 0 && v997:0:0 > 0 && v2009:0:0 > -1 && v2009:0:0 + v994:0:0 > 0 && v994:0:0 > 0 && v993:0:0 > 0 && v991:0:0 > 0 && v990:0:0 > 0 && v989:0:0 > 0 && v988:0:0 < 0 && v987:0:0 < 0 && sum~v2009:0:0~v994:0:0 = v2009:0:0 + v994:0:0

The following rules are bounded:
f_499(v987:0:0, v988:0:0, v989:0:0, v990:0:0, v991:0:0, v993:0:0, v994:0:0, sum~v2009:0:0~v994:0:0, v995:0:0, v997:0:0, v999:0:0, v998:0:0, v1000:0:0, v1001:0:0, v1002:0:0, v1003:0:0) -> f_499(v987:0:0, v988:0:0, v989:0:0, v990:0:0, v991:0:0, v993:0:0, v994:0:0, v2009:0:0, v2009:0:0 + v994:0:0, v997:0:0, v999:0:0, v998:0:0, v1000:0:0, v1001:0:0, v1002:0:0, v1003:0:0) :|: v990:0:0 <= v1002:0:0 && v991:0:0 <= v1003:0:0 && v989:0:0 <= v1001:0:0 && v998:0:0 <= v1000:0:0 && v999:0:0 >= v997:0:0 && v1003:0:0 > 3 && v1002:0:0 > 3 && v1001:0:0 > 3 && v995:0:0 > 1 && v1000:0:0 > 3 && v994:0:0 <= v2009:0:0 + v994:0:0 && v999:0:0 > 3 && v998:0:0 > 0 && v997:0:0 > 0 && v2009:0:0 > -1 && v2009:0:0 + v994:0:0 > 0 && v994:0:0 > 0 && v993:0:0 > 0 && v991:0:0 > 0 && v990:0:0 > 0 && v989:0:0 > 0 && v988:0:0 < 0 && v987:0:0 < 0 && sum~v2009:0:0~v994:0:0 = v2009:0:0 + v994:0:0


----------------------------------------

(41)
YES

----------------------------------------

(42)
Obligation:
SCC
----------------------------------------

(43) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 11 rulesP rules:
f_469(v809, v810, v811, v812, v813, 1, v815, 0, v818, v817, v819, v821, v820, v822, v823, v824, v825, 3, 4) -> f_479(v809, v810, v811, v812, v813, 1, v815, 0, v818, v817, v819, v821, v820, v822, v823, v824, v825, 3, 4) :|: 0 = 0
f_479(v809, v810, v811, v812, v813, 1, v815, 0, v818, v817, v819, v821, v820, v822, v823, v824, v825, 3, 4) -> f_490(v809, v810, v811, v812, v813, 1, v815, 0, v818, v817, v819, v821, v820, v822, v823, v824, v825, 3, 2, 4) :|: v810 <= v818 && 1 <= v818 && 2 <= v817
f_490(v809, v810, v811, v812, v813, 1, v815, 0, v818, v817, v819, v821, v820, v822, v823, v824, v825, 3, 2, 4) -> f_501(v809, v810, v811, v812, v813, 1, v815, 0, v818, v817, v819, v821, v820, v822, v823, v824, v825, 3, 2, 4) :|: 0 = 0
f_501(v809, v810, v811, v812, v813, 1, v815, 0, v818, v817, v819, v821, v820, v822, v823, v824, v825, 3, 2, 4) -> f_512(v809, v810, v811, v812, v813, 1, v815, 0, v818, v817, v819, v821, v820, v822, v823, v824, v825, 3, 2, 4) :|: TRUE
f_512(v809, v810, v811, v812, v813, 1, v815, 0, v818, v817, v819, v821, v820, v822, v823, v824, v825, 3, 2, 4) -> f_525(v809, v810, v811, v812, v813, 1, v815, 0, v818, v819, v821, v820, v822, v823, v824, v825, 3, 4) :|: 0 = 0
f_525(v809, v810, v811, v812, v813, 1, v815, 0, v818, v819, v821, v820, v822, v823, v824, v825, 3, 4) -> f_538(v809, v810, v811, v812, v813, 1, v815, 0, v818, v819, v821, v820, v822, v823, v824, v825, 3, 4) :|: 0 = 0
f_538(v809, v810, v811, v812, v813, 1, v815, 0, v818, v819, v821, v820, v822, v823, v824, v825, 3, 4) -> f_550(v809, v810, v811, v812, v813, 1, v815, 0, v818, v1529, v819, v821, v820, v822, v823, v824, v825, 3, 4) :|: v1529 + v810 = v818 && 0 <= v1529
f_550(v809, v810, v811, v812, v813, 1, v815, 0, v818, v1529, v819, v821, v820, v822, v823, v824, v825, 3, 4) -> f_565(v809, v810, v811, v812, v813, 1, v815, 0, v818, v1529, v819, v821, v820, v822, v823, v824, v825, 3, 4) :|: TRUE
f_565(v809, v810, v811, v812, v813, 1, v815, 0, v818, v1529, v819, v821, v820, v822, v823, v824, v825, 3, 4) -> f_580(v809, v810, v811, v812, v813, 1, v815, 0, v818, v1529, v819, v821, v820, v822, v823, v824, v825, 3, 4) :|: TRUE
f_580(v809, v810, v811, v812, v813, 1, v815, 0, v818, v1529, v819, v821, v820, v822, v823, v824, v825, 3, 4) -> f_459(v809, v810, v811, v812, v813, 1, v815, 0, v818, v1529, v819, v821, v820, v822, v823, v824, v825, 3, 4) :|: 1 + v809 <= 0 && 1 <= v810 && 1 <= v811 && 1 <= v812 && 1 <= v813 && 1 <= v815 && 1 <= v818 && 0 <= v1529 && 1 <= v819 && 1 <= v820 && 4 <= v821 && 4 <= v822 && 4 <= v823 && 4 <= v824 && 4 <= v825 && v819 <= v821 && v820 <= v822 && v811 <= v823 && v812 <= v824 && v813 <= v825
f_459(v809, v810, v811, v812, v813, 1, v815, 0, v817, v818, v819, v821, v820, v822, v823, v824, v825, 3, 4) -> f_469(v809, v810, v811, v812, v813, 1, v815, 0, v818, v817, v819, v821, v820, v822, v823, v824, v825, 3, 4) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_469(v809:0, v810:0, v811:0, v812:0, v813:0, 1, v815:0, 0, v1529:0 + v810:0, v817:0, v819:0, v821:0, v820:0, v822:0, v823:0, v824:0, v825:0, 3, 4) -> f_469(v809:0, v810:0, v811:0, v812:0, v813:0, 1, v815:0, 0, v1529:0, v1529:0 + v810:0, v819:0, v821:0, v820:0, v822:0, v823:0, v824:0, v825:0, 3, 4) :|: v810:0 > 0 && v809:0 < 0 && v811:0 > 0 && v812:0 > 0 && v813:0 > 0 && v815:0 > 0 && v1529:0 + v810:0 > 0 && v1529:0 > -1 && v819:0 > 0 && v820:0 > 0 && v821:0 > 3 && v810:0 <= v1529:0 + v810:0 && v822:0 > 3 && v817:0 > 1 && v823:0 > 3 && v824:0 > 3 && v825:0 > 3 && v821:0 >= v819:0 && v822:0 >= v820:0 && v823:0 >= v811:0 && v825:0 >= v813:0 && v824:0 >= v812:0
Filtered unneeded arguments:
   f_469(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19) -> f_469(x1, x2, x3, x4, x5, x7, x9, x10, x11, x12, x13, x14, x15, x16, x17)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_469(v809:0, v810:0, v811:0, v812:0, v813:0, v815:0, sum~v1529:0~v810:0, v817:0, v819:0, v821:0, v820:0, v822:0, v823:0, v824:0, v825:0) -> f_469(v809:0, v810:0, v811:0, v812:0, v813:0, v815:0, v1529:0, v1529:0 + v810:0, v819:0, v821:0, v820:0, v822:0, v823:0, v824:0, v825:0) :|: v809:0 < 0 && v810:0 > 0 && v811:0 > 0 && v812:0 > 0 && v813:0 > 0 && v815:0 > 0 && v1529:0 + v810:0 > 0 && v1529:0 > -1 && v819:0 > 0 && v820:0 > 0 && v821:0 > 3 && v810:0 <= v1529:0 + v810:0 && v822:0 > 3 && v817:0 > 1 && v823:0 > 3 && v824:0 > 3 && v825:0 > 3 && v821:0 >= v819:0 && v822:0 >= v820:0 && v823:0 >= v811:0 && v824:0 >= v812:0 && v825:0 >= v813:0 && sum~v1529:0~v810:0 = v1529:0 + v810:0

----------------------------------------

(44)
Obligation:
Rules:
f_469(v809:0, v810:0, v811:0, v812:0, v813:0, v815:0, sum~v1529:0~v810:0, v817:0, v819:0, v821:0, v820:0, v822:0, v823:0, v824:0, v825:0) -> f_469(v809:0, v810:0, v811:0, v812:0, v813:0, v815:0, v1529:0, v1529:0 + v810:0, v819:0, v821:0, v820:0, v822:0, v823:0, v824:0, v825:0) :|: v809:0 < 0 && v810:0 > 0 && v811:0 > 0 && v812:0 > 0 && v813:0 > 0 && v815:0 > 0 && v1529:0 + v810:0 > 0 && v1529:0 > -1 && v819:0 > 0 && v820:0 > 0 && v821:0 > 3 && v810:0 <= v1529:0 + v810:0 && v822:0 > 3 && v817:0 > 1 && v823:0 > 3 && v824:0 > 3 && v825:0 > 3 && v821:0 >= v819:0 && v822:0 >= v820:0 && v823:0 >= v811:0 && v824:0 >= v812:0 && v825:0 >= v813:0 && sum~v1529:0~v810:0 = v1529:0 + v810:0

----------------------------------------

(45) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(46)
Obligation:
Rules:
f_469(v809:0:0, v810:0:0, v811:0:0, v812:0:0, v813:0:0, v815:0:0, sum~v1529:0:0~v810:0:0, v817:0:0, v819:0:0, v821:0:0, v820:0:0, v822:0:0, v823:0:0, v824:0:0, v825:0:0) -> f_469(v809:0:0, v810:0:0, v811:0:0, v812:0:0, v813:0:0, v815:0:0, v1529:0:0, v1529:0:0 + v810:0:0, v819:0:0, v821:0:0, v820:0:0, v822:0:0, v823:0:0, v824:0:0, v825:0:0) :|: v824:0:0 >= v812:0:0 && v825:0:0 >= v813:0:0 && v823:0:0 >= v811:0:0 && v822:0:0 >= v820:0:0 && v821:0:0 >= v819:0:0 && v825:0:0 > 3 && v824:0:0 > 3 && v823:0:0 > 3 && v817:0:0 > 1 && v822:0:0 > 3 && v810:0:0 <= v1529:0:0 + v810:0:0 && v821:0:0 > 3 && v820:0:0 > 0 && v819:0:0 > 0 && v1529:0:0 > -1 && v1529:0:0 + v810:0:0 > 0 && v815:0:0 > 0 && v813:0:0 > 0 && v812:0:0 > 0 && v811:0:0 > 0 && v810:0:0 > 0 && v809:0:0 < 0 && sum~v1529:0:0~v810:0:0 = v1529:0:0 + v810:0:0

----------------------------------------

(47) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_469 ] = f_469_7

The following rules are decreasing:
f_469(v809:0:0, v810:0:0, v811:0:0, v812:0:0, v813:0:0, v815:0:0, sum~v1529:0:0~v810:0:0, v817:0:0, v819:0:0, v821:0:0, v820:0:0, v822:0:0, v823:0:0, v824:0:0, v825:0:0) -> f_469(v809:0:0, v810:0:0, v811:0:0, v812:0:0, v813:0:0, v815:0:0, v1529:0:0, v1529:0:0 + v810:0:0, v819:0:0, v821:0:0, v820:0:0, v822:0:0, v823:0:0, v824:0:0, v825:0:0) :|: v824:0:0 >= v812:0:0 && v825:0:0 >= v813:0:0 && v823:0:0 >= v811:0:0 && v822:0:0 >= v820:0:0 && v821:0:0 >= v819:0:0 && v825:0:0 > 3 && v824:0:0 > 3 && v823:0:0 > 3 && v817:0:0 > 1 && v822:0:0 > 3 && v810:0:0 <= v1529:0:0 + v810:0:0 && v821:0:0 > 3 && v820:0:0 > 0 && v819:0:0 > 0 && v1529:0:0 > -1 && v1529:0:0 + v810:0:0 > 0 && v815:0:0 > 0 && v813:0:0 > 0 && v812:0:0 > 0 && v811:0:0 > 0 && v810:0:0 > 0 && v809:0:0 < 0 && sum~v1529:0:0~v810:0:0 = v1529:0:0 + v810:0:0

The following rules are bounded:
f_469(v809:0:0, v810:0:0, v811:0:0, v812:0:0, v813:0:0, v815:0:0, sum~v1529:0:0~v810:0:0, v817:0:0, v819:0:0, v821:0:0, v820:0:0, v822:0:0, v823:0:0, v824:0:0, v825:0:0) -> f_469(v809:0:0, v810:0:0, v811:0:0, v812:0:0, v813:0:0, v815:0:0, v1529:0:0, v1529:0:0 + v810:0:0, v819:0:0, v821:0:0, v820:0:0, v822:0:0, v823:0:0, v824:0:0, v825:0:0) :|: v824:0:0 >= v812:0:0 && v825:0:0 >= v813:0:0 && v823:0:0 >= v811:0:0 && v822:0:0 >= v820:0:0 && v821:0:0 >= v819:0:0 && v825:0:0 > 3 && v824:0:0 > 3 && v823:0:0 > 3 && v817:0:0 > 1 && v822:0:0 > 3 && v810:0:0 <= v1529:0:0 + v810:0:0 && v821:0:0 > 3 && v820:0:0 > 0 && v819:0:0 > 0 && v1529:0:0 > -1 && v1529:0:0 + v810:0:0 > 0 && v815:0:0 > 0 && v813:0:0 > 0 && v812:0:0 > 0 && v811:0:0 > 0 && v810:0:0 > 0 && v809:0:0 < 0 && sum~v1529:0:0~v810:0:0 = v1529:0:0 + v810:0:0


----------------------------------------

(48)
YES

----------------------------------------

(49)
Obligation:
SCC
----------------------------------------

(50) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 11 rulesP rules:
f_461(v729, v730, v731, v732, v733, 0, 1, v736, v738, v737, v739, v741, v740, v742, v743, v744, v745, 3, 4) -> f_471(v729, v730, v731, v732, v733, 0, 1, v736, v738, v737, v739, v741, v740, v742, v743, v744, v745, 3, 4) :|: 0 = 0
f_471(v729, v730, v731, v732, v733, 0, 1, v736, v738, v737, v739, v741, v740, v742, v743, v744, v745, 3, 4) -> f_481(v729, v730, v731, v732, v733, 0, 1, v736, v738, v737, v739, v741, v740, v742, v743, v744, v745, 3, 2, 4) :|: v736 <= v738 && 1 <= v738 && 2 <= v737
f_481(v729, v730, v731, v732, v733, 0, 1, v736, v738, v737, v739, v741, v740, v742, v743, v744, v745, 3, 2, 4) -> f_493(v729, v730, v731, v732, v733, 0, 1, v736, v738, v737, v739, v741, v740, v742, v743, v744, v745, 3, 2, 4) :|: 0 = 0
f_493(v729, v730, v731, v732, v733, 0, 1, v736, v738, v737, v739, v741, v740, v742, v743, v744, v745, 3, 2, 4) -> f_504(v729, v730, v731, v732, v733, 0, 1, v736, v738, v737, v739, v741, v740, v742, v743, v744, v745, 3, 2, 4) :|: TRUE
f_504(v729, v730, v731, v732, v733, 0, 1, v736, v738, v737, v739, v741, v740, v742, v743, v744, v745, 3, 2, 4) -> f_515(v729, v730, v731, v732, v733, 0, 1, v736, v738, v739, v741, v740, v742, v743, v744, v745, 3, 4) :|: 0 = 0
f_515(v729, v730, v731, v732, v733, 0, 1, v736, v738, v739, v741, v740, v742, v743, v744, v745, 3, 4) -> f_528(v729, v730, v731, v732, v733, 0, 1, v736, v738, v739, v741, v740, v742, v743, v744, v745, 3, 4) :|: 0 = 0
f_528(v729, v730, v731, v732, v733, 0, 1, v736, v738, v739, v741, v740, v742, v743, v744, v745, 3, 4) -> f_541(v729, v730, v731, v732, v733, 0, 1, v736, v738, v1346, v739, v741, v740, v742, v743, v744, v745, 3, 4) :|: v1346 + v736 = v738 && 0 <= v1346
f_541(v729, v730, v731, v732, v733, 0, 1, v736, v738, v1346, v739, v741, v740, v742, v743, v744, v745, 3, 4) -> f_554(v729, v730, v731, v732, v733, 0, 1, v736, v738, v1346, v739, v741, v740, v742, v743, v744, v745, 3, 4) :|: TRUE
f_554(v729, v730, v731, v732, v733, 0, 1, v736, v738, v1346, v739, v741, v740, v742, v743, v744, v745, 3, 4) -> f_569(v729, v730, v731, v732, v733, 0, 1, v736, v738, v1346, v739, v741, v740, v742, v743, v744, v745, 3, 4) :|: TRUE
f_569(v729, v730, v731, v732, v733, 0, 1, v736, v738, v1346, v739, v741, v740, v742, v743, v744, v745, 3, 4) -> f_450(v729, v730, v731, v732, v733, 0, 1, v736, v738, v1346, v739, v741, v740, v742, v743, v744, v745, 3, 4) :|: 1 <= v729 && 1 + v730 <= 0 && 1 <= v731 && 1 <= v732 && 1 <= v733 && 1 <= v736 && 1 <= v738 && 0 <= v1346 && 1 <= v739 && 1 <= v740 && 4 <= v741 && 4 <= v742 && 4 <= v743 && 4 <= v744 && 4 <= v745 && v739 <= v741 && v740 <= v742 && v731 <= v743 && v732 <= v744 && v733 <= v745
f_450(v729, v730, v731, v732, v733, 0, 1, v736, v737, v738, v739, v741, v740, v742, v743, v744, v745, 3, 4) -> f_461(v729, v730, v731, v732, v733, 0, 1, v736, v738, v737, v739, v741, v740, v742, v743, v744, v745, 3, 4) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_461(v729:0, v730:0, v731:0, v732:0, v733:0, 0, 1, v736:0, v1346:0 + v736:0, v737:0, v739:0, v741:0, v740:0, v742:0, v743:0, v744:0, v745:0, 3, 4) -> f_461(v729:0, v730:0, v731:0, v732:0, v733:0, 0, 1, v736:0, v1346:0, v1346:0 + v736:0, v739:0, v741:0, v740:0, v742:0, v743:0, v744:0, v745:0, 3, 4) :|: v730:0 < 0 && v729:0 > 0 && v731:0 > 0 && v732:0 > 0 && v733:0 > 0 && v736:0 > 0 && v1346:0 + v736:0 > 0 && v1346:0 > -1 && v739:0 > 0 && v740:0 > 0 && v741:0 > 3 && v736:0 <= v1346:0 + v736:0 && v742:0 > 3 && v737:0 > 1 && v743:0 > 3 && v744:0 > 3 && v745:0 > 3 && v741:0 >= v739:0 && v742:0 >= v740:0 && v743:0 >= v731:0 && v745:0 >= v733:0 && v744:0 >= v732:0
Filtered unneeded arguments:
   f_461(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19) -> f_461(x1, x2, x3, x4, x5, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_461(v729:0, v730:0, v731:0, v732:0, v733:0, v736:0, sum~v1346:0~v736:0, v737:0, v739:0, v741:0, v740:0, v742:0, v743:0, v744:0, v745:0) -> f_461(v729:0, v730:0, v731:0, v732:0, v733:0, v736:0, v1346:0, v1346:0 + v736:0, v739:0, v741:0, v740:0, v742:0, v743:0, v744:0, v745:0) :|: v729:0 > 0 && v730:0 < 0 && v731:0 > 0 && v732:0 > 0 && v733:0 > 0 && v736:0 > 0 && v1346:0 + v736:0 > 0 && v1346:0 > -1 && v739:0 > 0 && v740:0 > 0 && v741:0 > 3 && v736:0 <= v1346:0 + v736:0 && v742:0 > 3 && v737:0 > 1 && v743:0 > 3 && v744:0 > 3 && v745:0 > 3 && v741:0 >= v739:0 && v742:0 >= v740:0 && v743:0 >= v731:0 && v744:0 >= v732:0 && v745:0 >= v733:0 && sum~v1346:0~v736:0 = v1346:0 + v736:0

----------------------------------------

(51)
Obligation:
Rules:
f_461(v729:0, v730:0, v731:0, v732:0, v733:0, v736:0, sum~v1346:0~v736:0, v737:0, v739:0, v741:0, v740:0, v742:0, v743:0, v744:0, v745:0) -> f_461(v729:0, v730:0, v731:0, v732:0, v733:0, v736:0, v1346:0, v1346:0 + v736:0, v739:0, v741:0, v740:0, v742:0, v743:0, v744:0, v745:0) :|: v729:0 > 0 && v730:0 < 0 && v731:0 > 0 && v732:0 > 0 && v733:0 > 0 && v736:0 > 0 && v1346:0 + v736:0 > 0 && v1346:0 > -1 && v739:0 > 0 && v740:0 > 0 && v741:0 > 3 && v736:0 <= v1346:0 + v736:0 && v742:0 > 3 && v737:0 > 1 && v743:0 > 3 && v744:0 > 3 && v745:0 > 3 && v741:0 >= v739:0 && v742:0 >= v740:0 && v743:0 >= v731:0 && v744:0 >= v732:0 && v745:0 >= v733:0 && sum~v1346:0~v736:0 = v1346:0 + v736:0

----------------------------------------

(52) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(53)
Obligation:
Rules:
f_461(v729:0:0, v730:0:0, v731:0:0, v732:0:0, v733:0:0, v736:0:0, sum~v1346:0:0~v736:0:0, v737:0:0, v739:0:0, v741:0:0, v740:0:0, v742:0:0, v743:0:0, v744:0:0, v745:0:0) -> f_461(v729:0:0, v730:0:0, v731:0:0, v732:0:0, v733:0:0, v736:0:0, v1346:0:0, v1346:0:0 + v736:0:0, v739:0:0, v741:0:0, v740:0:0, v742:0:0, v743:0:0, v744:0:0, v745:0:0) :|: v744:0:0 >= v732:0:0 && v745:0:0 >= v733:0:0 && v743:0:0 >= v731:0:0 && v742:0:0 >= v740:0:0 && v741:0:0 >= v739:0:0 && v745:0:0 > 3 && v744:0:0 > 3 && v743:0:0 > 3 && v737:0:0 > 1 && v742:0:0 > 3 && v736:0:0 <= v1346:0:0 + v736:0:0 && v741:0:0 > 3 && v740:0:0 > 0 && v739:0:0 > 0 && v1346:0:0 > -1 && v1346:0:0 + v736:0:0 > 0 && v736:0:0 > 0 && v733:0:0 > 0 && v732:0:0 > 0 && v731:0:0 > 0 && v730:0:0 < 0 && v729:0:0 > 0 && sum~v1346:0:0~v736:0:0 = v1346:0:0 + v736:0:0

----------------------------------------

(54) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_461 ] = f_461_7

The following rules are decreasing:
f_461(v729:0:0, v730:0:0, v731:0:0, v732:0:0, v733:0:0, v736:0:0, sum~v1346:0:0~v736:0:0, v737:0:0, v739:0:0, v741:0:0, v740:0:0, v742:0:0, v743:0:0, v744:0:0, v745:0:0) -> f_461(v729:0:0, v730:0:0, v731:0:0, v732:0:0, v733:0:0, v736:0:0, v1346:0:0, v1346:0:0 + v736:0:0, v739:0:0, v741:0:0, v740:0:0, v742:0:0, v743:0:0, v744:0:0, v745:0:0) :|: v744:0:0 >= v732:0:0 && v745:0:0 >= v733:0:0 && v743:0:0 >= v731:0:0 && v742:0:0 >= v740:0:0 && v741:0:0 >= v739:0:0 && v745:0:0 > 3 && v744:0:0 > 3 && v743:0:0 > 3 && v737:0:0 > 1 && v742:0:0 > 3 && v736:0:0 <= v1346:0:0 + v736:0:0 && v741:0:0 > 3 && v740:0:0 > 0 && v739:0:0 > 0 && v1346:0:0 > -1 && v1346:0:0 + v736:0:0 > 0 && v736:0:0 > 0 && v733:0:0 > 0 && v732:0:0 > 0 && v731:0:0 > 0 && v730:0:0 < 0 && v729:0:0 > 0 && sum~v1346:0:0~v736:0:0 = v1346:0:0 + v736:0:0

The following rules are bounded:
f_461(v729:0:0, v730:0:0, v731:0:0, v732:0:0, v733:0:0, v736:0:0, sum~v1346:0:0~v736:0:0, v737:0:0, v739:0:0, v741:0:0, v740:0:0, v742:0:0, v743:0:0, v744:0:0, v745:0:0) -> f_461(v729:0:0, v730:0:0, v731:0:0, v732:0:0, v733:0:0, v736:0:0, v1346:0:0, v1346:0:0 + v736:0:0, v739:0:0, v741:0:0, v740:0:0, v742:0:0, v743:0:0, v744:0:0, v745:0:0) :|: v744:0:0 >= v732:0:0 && v745:0:0 >= v733:0:0 && v743:0:0 >= v731:0:0 && v742:0:0 >= v740:0:0 && v741:0:0 >= v739:0:0 && v745:0:0 > 3 && v744:0:0 > 3 && v743:0:0 > 3 && v737:0:0 > 1 && v742:0:0 > 3 && v736:0:0 <= v1346:0:0 + v736:0:0 && v741:0:0 > 3 && v740:0:0 > 0 && v739:0:0 > 0 && v1346:0:0 > -1 && v1346:0:0 + v736:0:0 > 0 && v736:0:0 > 0 && v733:0:0 > 0 && v732:0:0 > 0 && v731:0:0 > 0 && v730:0:0 < 0 && v729:0:0 > 0 && sum~v1346:0:0~v736:0:0 = v1346:0:0 + v736:0:0


----------------------------------------

(55)
YES

----------------------------------------

(56)
Obligation:
SCC
----------------------------------------

(57) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 11 rulesP rules:
f_430(v543, v544, v545, v546, v547, 0, 1, v551, v550, v552, v554, v553, v555, v556, v557, v558, 3, 4) -> f_441(v543, v544, v545, v546, v547, 0, 1, v551, v550, v552, v554, v553, v555, v556, v557, v558, 3, 4) :|: 0 = 0
f_441(v543, v544, v545, v546, v547, 0, 1, v551, v550, v552, v554, v553, v555, v556, v557, v558, 3, 4) -> f_452(v543, v544, v545, v546, v547, 0, 1, v551, v550, v552, v554, v553, v555, v556, v557, v558, 3, 2, 4) :|: v544 <= v551 && 1 <= v551 && 2 <= v550
f_452(v543, v544, v545, v546, v547, 0, 1, v551, v550, v552, v554, v553, v555, v556, v557, v558, 3, 2, 4) -> f_463(v543, v544, v545, v546, v547, 0, 1, v551, v550, v552, v554, v553, v555, v556, v557, v558, 3, 2, 4) :|: 0 = 0
f_463(v543, v544, v545, v546, v547, 0, 1, v551, v550, v552, v554, v553, v555, v556, v557, v558, 3, 2, 4) -> f_473(v543, v544, v545, v546, v547, 0, 1, v551, v550, v552, v554, v553, v555, v556, v557, v558, 3, 2, 4) :|: TRUE
f_473(v543, v544, v545, v546, v547, 0, 1, v551, v550, v552, v554, v553, v555, v556, v557, v558, 3, 2, 4) -> f_484(v543, v544, v545, v546, v547, 0, 1, v551, v552, v554, v553, v555, v556, v557, v558, 3, 4) :|: 0 = 0
f_484(v543, v544, v545, v546, v547, 0, 1, v551, v552, v554, v553, v555, v556, v557, v558, 3, 4) -> f_496(v543, v544, v545, v546, v547, 0, 1, v551, v552, v554, v553, v555, v556, v557, v558, 3, 4) :|: 0 = 0
f_496(v543, v544, v545, v546, v547, 0, 1, v551, v552, v554, v553, v555, v556, v557, v558, 3, 4) -> f_507(v543, v544, v545, v546, v547, 0, 1, v551, v1091, v552, v554, v553, v555, v556, v557, v558, 3, 4) :|: v1091 + v544 = v551 && 0 <= v1091
f_507(v543, v544, v545, v546, v547, 0, 1, v551, v1091, v552, v554, v553, v555, v556, v557, v558, 3, 4) -> f_518(v543, v544, v545, v546, v547, 0, 1, v551, v1091, v552, v554, v553, v555, v556, v557, v558, 3, 4) :|: TRUE
f_518(v543, v544, v545, v546, v547, 0, 1, v551, v1091, v552, v554, v553, v555, v556, v557, v558, 3, 4) -> f_531(v543, v544, v545, v546, v547, 0, 1, v551, v1091, v552, v554, v553, v555, v556, v557, v558, 3, 4) :|: TRUE
f_531(v543, v544, v545, v546, v547, 0, 1, v551, v1091, v552, v554, v553, v555, v556, v557, v558, 3, 4) -> f_419(v543, v544, v545, v546, v547, 0, 1, v551, v1091, v552, v554, v553, v555, v556, v557, v558, 3, 4) :|: 1 <= v543 && 1 <= v544 && 1 <= v545 && 1 <= v546 && 1 <= v547 && 1 <= v551 && 0 <= v1091 && 1 <= v552 && 1 <= v553 && 4 <= v554 && 4 <= v555 && 4 <= v556 && 4 <= v557 && 4 <= v558 && v552 <= v554 && v553 <= v555 && v545 <= v556 && v546 <= v557 && v547 <= v558
f_419(v543, v544, v545, v546, v547, 0, 1, v550, v551, v552, v554, v553, v555, v556, v557, v558, 3, 4) -> f_430(v543, v544, v545, v546, v547, 0, 1, v551, v550, v552, v554, v553, v555, v556, v557, v558, 3, 4) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_430(v543:0, v544:0, v545:0, v546:0, v547:0, 0, 1, v1091:0 + v544:0, v550:0, v552:0, v554:0, v553:0, v555:0, v556:0, v557:0, v558:0, 3, 4) -> f_430(v543:0, v544:0, v545:0, v546:0, v547:0, 0, 1, v1091:0, v1091:0 + v544:0, v552:0, v554:0, v553:0, v555:0, v556:0, v557:0, v558:0, 3, 4) :|: v544:0 > 0 && v543:0 > 0 && v545:0 > 0 && v546:0 > 0 && v547:0 > 0 && v1091:0 + v544:0 > 0 && v1091:0 > -1 && v552:0 > 0 && v553:0 > 0 && v554:0 > 3 && v544:0 <= v1091:0 + v544:0 && v555:0 > 3 && v550:0 > 1 && v556:0 > 3 && v557:0 > 3 && v558:0 > 3 && v554:0 >= v552:0 && v555:0 >= v553:0 && v556:0 >= v545:0 && v558:0 >= v547:0 && v557:0 >= v546:0
Filtered unneeded arguments:
   f_430(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18) -> f_430(x1, x2, x3, x4, x5, x8, x9, x10, x11, x12, x13, x14, x15, x16)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_430(v543:0, v544:0, v545:0, v546:0, v547:0, sum~v1091:0~v544:0, v550:0, v552:0, v554:0, v553:0, v555:0, v556:0, v557:0, v558:0) -> f_430(v543:0, v544:0, v545:0, v546:0, v547:0, v1091:0, v1091:0 + v544:0, v552:0, v554:0, v553:0, v555:0, v556:0, v557:0, v558:0) :|: v543:0 > 0 && v544:0 > 0 && v545:0 > 0 && v546:0 > 0 && v547:0 > 0 && v1091:0 + v544:0 > 0 && v1091:0 > -1 && v552:0 > 0 && v553:0 > 0 && v554:0 > 3 && v544:0 <= v1091:0 + v544:0 && v555:0 > 3 && v550:0 > 1 && v556:0 > 3 && v557:0 > 3 && v558:0 > 3 && v554:0 >= v552:0 && v555:0 >= v553:0 && v556:0 >= v545:0 && v557:0 >= v546:0 && v558:0 >= v547:0 && sum~v1091:0~v544:0 = v1091:0 + v544:0

----------------------------------------

(58)
Obligation:
Rules:
f_430(v543:0, v544:0, v545:0, v546:0, v547:0, sum~v1091:0~v544:0, v550:0, v552:0, v554:0, v553:0, v555:0, v556:0, v557:0, v558:0) -> f_430(v543:0, v544:0, v545:0, v546:0, v547:0, v1091:0, v1091:0 + v544:0, v552:0, v554:0, v553:0, v555:0, v556:0, v557:0, v558:0) :|: v543:0 > 0 && v544:0 > 0 && v545:0 > 0 && v546:0 > 0 && v547:0 > 0 && v1091:0 + v544:0 > 0 && v1091:0 > -1 && v552:0 > 0 && v553:0 > 0 && v554:0 > 3 && v544:0 <= v1091:0 + v544:0 && v555:0 > 3 && v550:0 > 1 && v556:0 > 3 && v557:0 > 3 && v558:0 > 3 && v554:0 >= v552:0 && v555:0 >= v553:0 && v556:0 >= v545:0 && v557:0 >= v546:0 && v558:0 >= v547:0 && sum~v1091:0~v544:0 = v1091:0 + v544:0

----------------------------------------

(59) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(60)
Obligation:
Rules:
f_430(v543:0:0, v544:0:0, v545:0:0, v546:0:0, v547:0:0, sum~v1091:0:0~v544:0:0, v550:0:0, v552:0:0, v554:0:0, v553:0:0, v555:0:0, v556:0:0, v557:0:0, v558:0:0) -> f_430(v543:0:0, v544:0:0, v545:0:0, v546:0:0, v547:0:0, v1091:0:0, v1091:0:0 + v544:0:0, v552:0:0, v554:0:0, v553:0:0, v555:0:0, v556:0:0, v557:0:0, v558:0:0) :|: v557:0:0 >= v546:0:0 && v558:0:0 >= v547:0:0 && v556:0:0 >= v545:0:0 && v555:0:0 >= v553:0:0 && v554:0:0 >= v552:0:0 && v558:0:0 > 3 && v557:0:0 > 3 && v556:0:0 > 3 && v550:0:0 > 1 && v555:0:0 > 3 && v544:0:0 <= v1091:0:0 + v544:0:0 && v554:0:0 > 3 && v553:0:0 > 0 && v552:0:0 > 0 && v1091:0:0 > -1 && v1091:0:0 + v544:0:0 > 0 && v547:0:0 > 0 && v546:0:0 > 0 && v545:0:0 > 0 && v544:0:0 > 0 && v543:0:0 > 0 && sum~v1091:0:0~v544:0:0 = v1091:0:0 + v544:0:0

----------------------------------------

(61) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_430 ] = f_430_6

The following rules are decreasing:
f_430(v543:0:0, v544:0:0, v545:0:0, v546:0:0, v547:0:0, sum~v1091:0:0~v544:0:0, v550:0:0, v552:0:0, v554:0:0, v553:0:0, v555:0:0, v556:0:0, v557:0:0, v558:0:0) -> f_430(v543:0:0, v544:0:0, v545:0:0, v546:0:0, v547:0:0, v1091:0:0, v1091:0:0 + v544:0:0, v552:0:0, v554:0:0, v553:0:0, v555:0:0, v556:0:0, v557:0:0, v558:0:0) :|: v557:0:0 >= v546:0:0 && v558:0:0 >= v547:0:0 && v556:0:0 >= v545:0:0 && v555:0:0 >= v553:0:0 && v554:0:0 >= v552:0:0 && v558:0:0 > 3 && v557:0:0 > 3 && v556:0:0 > 3 && v550:0:0 > 1 && v555:0:0 > 3 && v544:0:0 <= v1091:0:0 + v544:0:0 && v554:0:0 > 3 && v553:0:0 > 0 && v552:0:0 > 0 && v1091:0:0 > -1 && v1091:0:0 + v544:0:0 > 0 && v547:0:0 > 0 && v546:0:0 > 0 && v545:0:0 > 0 && v544:0:0 > 0 && v543:0:0 > 0 && sum~v1091:0:0~v544:0:0 = v1091:0:0 + v544:0:0

The following rules are bounded:
f_430(v543:0:0, v544:0:0, v545:0:0, v546:0:0, v547:0:0, sum~v1091:0:0~v544:0:0, v550:0:0, v552:0:0, v554:0:0, v553:0:0, v555:0:0, v556:0:0, v557:0:0, v558:0:0) -> f_430(v543:0:0, v544:0:0, v545:0:0, v546:0:0, v547:0:0, v1091:0:0, v1091:0:0 + v544:0:0, v552:0:0, v554:0:0, v553:0:0, v555:0:0, v556:0:0, v557:0:0, v558:0:0) :|: v557:0:0 >= v546:0:0 && v558:0:0 >= v547:0:0 && v556:0:0 >= v545:0:0 && v555:0:0 >= v553:0:0 && v554:0:0 >= v552:0:0 && v558:0:0 > 3 && v557:0:0 > 3 && v556:0:0 > 3 && v550:0:0 > 1 && v555:0:0 > 3 && v544:0:0 <= v1091:0:0 + v544:0:0 && v554:0:0 > 3 && v553:0:0 > 0 && v552:0:0 > 0 && v1091:0:0 > -1 && v1091:0:0 + v544:0:0 > 0 && v547:0:0 > 0 && v546:0:0 > 0 && v545:0:0 > 0 && v544:0:0 > 0 && v543:0:0 > 0 && sum~v1091:0:0~v544:0:0 = v1091:0:0 + v544:0:0


----------------------------------------

(62)
YES
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.0s
