YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/bKiOh.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could be proven:

(0) C Problem
(1) CToIRSProof [EQUIVALENT, 0 ms]
(2) IntTRS
(3) TerminationGraphProcessor [SOUND, 11 ms]
(4) IntTRS
(5) IntTRSCompressionProof [EQUIVALENT, 0 ms]
(6) IntTRS
(7) CaseAnalysis [EQUIVALENT, 7 ms]
(8) AND
    (9) IntTRS
        (10) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (11) IntTRS
        (12) CaseAnalysis [EQUIVALENT, 9 ms]
        (13) AND
            (14) IntTRS
                (15) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                (16) IntTRS
                (17) PolynomialOrderProcessor [EQUIVALENT, 4 ms]
                (18) YES
            (19) IntTRS
                (20) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                (21) IntTRS
                (22) PolynomialOrderProcessor [EQUIVALENT, 2 ms]
                (23) YES
    (24) IntTRS
        (25) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (26) IntTRS
        (27) RankingReductionPairProof [EQUIVALENT, 1 ms]
        (28) YES


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/bKiOh.c
----------------------------------------

(1) CToIRSProof (EQUIVALENT)
Parsed C Integer Program as IRS.
----------------------------------------

(2)
Obligation:
Rules:
f1(x, y, z) -> f2(x_1, y, z) :|: TRUE
f2(x1, x2, x3) -> f3(x1, x4, x3) :|: TRUE
f3(x5, x6, x7) -> f4(x5, x6, x8) :|: TRUE
f6(x9, x10, x11) -> f9(arith, x10, x11) :|: TRUE && arith = x9 + x10
f7(x44, x45, x46) -> f10(x47, x45, x46) :|: TRUE && x47 = x44 + x46
f5(x15, x16, x17) -> f6(x15, x16, x17) :|: x18 < 0
f5(x48, x49, x50) -> f6(x48, x49, x50) :|: x51 > 0
f5(x19, x20, x21) -> f7(x19, x20, x21) :|: x22 = 0
f9(x23, x24, x25) -> f8(x23, x24, x25) :|: TRUE
f10(x26, x27, x28) -> f8(x26, x27, x28) :|: TRUE
f8(x52, x53, x54) -> f11(x52, x55, x54) :|: TRUE && x55 = x53 + x54
f11(x56, x57, x58) -> f12(x56, x57, x59) :|: TRUE && x59 = x58 - 1
f4(x35, x36, x37) -> f5(x35, x36, x37) :|: x35 >= 0
f12(x38, x39, x40) -> f4(x38, x39, x40) :|: TRUE
f4(x41, x42, x43) -> f13(x41, x42, x43) :|: x41 < 0
Start term: f1(x, y, z)

----------------------------------------

(3) TerminationGraphProcessor (SOUND)
Constructed the termination graph and obtained one non-trivial SCC.

----------------------------------------

(4)
Obligation:
Rules:
f4(x35, x36, x37) -> f5(x35, x36, x37) :|: x35 >= 0
f12(x38, x39, x40) -> f4(x38, x39, x40) :|: TRUE
f11(x56, x57, x58) -> f12(x56, x57, x59) :|: TRUE && x59 = x58 - 1
f8(x52, x53, x54) -> f11(x52, x55, x54) :|: TRUE && x55 = x53 + x54
f9(x23, x24, x25) -> f8(x23, x24, x25) :|: TRUE
f6(x9, x10, x11) -> f9(arith, x10, x11) :|: TRUE && arith = x9 + x10
f5(x15, x16, x17) -> f6(x15, x16, x17) :|: x18 < 0
f5(x48, x49, x50) -> f6(x48, x49, x50) :|: x51 > 0
f10(x26, x27, x28) -> f8(x26, x27, x28) :|: TRUE
f7(x44, x45, x46) -> f10(x47, x45, x46) :|: TRUE && x47 = x44 + x46
f5(x19, x20, x21) -> f7(x19, x20, x21) :|: x22 = 0

----------------------------------------

(5) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(6)
Obligation:
Rules:
f8(x52:0, x53:0, x54:0) -> f8(x52:0 + (x53:0 + x54:0), x53:0 + x54:0, x54:0 - 1) :|: x52:0 > -1 && x18:0 < 0
f8(x, x1, x2) -> f8(x + (x2 - 1), x1 + x2, x2 - 1) :|: x > -1
f8(x3, x4, x5) -> f8(x3 + (x4 + x5), x4 + x5, x5 - 1) :|: x3 > -1 && x6 > 0

----------------------------------------

(7) CaseAnalysis (EQUIVALENT)
Found the following inductive condition: 
f8(x0, x1, x2): -x2>=0

----------------------------------------

(8)
Complex Obligation (AND)

----------------------------------------

(9)
Obligation:
Rules:
f8(x52:0, x53:0, x54:0) -> f8(x52:0 + (x53:0 + x54:0), x53:0 + x54:0, x54:0 - 1) :|: x52:0 > -1 && x18:0 < 0 && -1 * x54:0 >= 0
f8(x, x1, x2) -> f8(x + (x2 - 1), x1 + x2, x2 - 1) :|: x > -1 && -1 * x2 >= 0
f8(x3, x4, x5) -> f8(x3 + (x4 + x5), x4 + x5, x5 - 1) :|: x3 > -1 && x6 > 0 && -1 * x5 >= 0

----------------------------------------

(10) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(11)
Obligation:
Rules:
f8(x:0, x1:0, x2:0) -> f8(x:0 + (x2:0 - 1), x1:0 + x2:0, x2:0 - 1) :|: x:0 > -1 && 0 <= -1 * x2:0
f8(x52:0:0, x53:0:0, x54:0:0) -> f8(x52:0:0 + (x53:0:0 + x54:0:0), x53:0:0 + x54:0:0, x54:0:0 - 1) :|: x52:0:0 > -1 && x18:0:0 < 0 && 0 <= -1 * x54:0:0
f8(x3:0, x4:0, x5:0) -> f8(x3:0 + (x4:0 + x5:0), x4:0 + x5:0, x5:0 - 1) :|: x3:0 > -1 && x6:0 > 0 && 0 <= -1 * x5:0

----------------------------------------

(12) CaseAnalysis (EQUIVALENT)
Found the following inductive condition: 
f8(x0, x1, x2): -1 - x1 - x2>=0

----------------------------------------

(13)
Complex Obligation (AND)

----------------------------------------

(14)
Obligation:
Rules:
f8(x:0, x1:0, x2:0) -> f8(x:0 + (x2:0 - 1), x1:0 + x2:0, x2:0 - 1) :|: x:0 > -1 && 0 <= -1 * x2:0 && -1 * x1:0 + -1 * x2:0 + -1 >= 0
f8(x52:0:0, x53:0:0, x54:0:0) -> f8(x52:0:0 + (x53:0:0 + x54:0:0), x53:0:0 + x54:0:0, x54:0:0 - 1) :|: x52:0:0 > -1 && x18:0:0 < 0 && 0 <= -1 * x54:0:0 && -1 * x53:0:0 + -1 * x54:0:0 + -1 >= 0
f8(x3:0, x4:0, x5:0) -> f8(x3:0 + (x4:0 + x5:0), x4:0 + x5:0, x5:0 - 1) :|: x3:0 > -1 && x6:0 > 0 && 0 <= -1 * x5:0 && -1 * x4:0 + -1 * x5:0 + -1 >= 0

----------------------------------------

(15) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(16)
Obligation:
Rules:
f8(x3:0:0, x4:0:0, x5:0:0) -> f8(x3:0:0 + (x4:0:0 + x5:0:0), x4:0:0 + x5:0:0, x5:0:0 - 1) :|: 0 <= -1 * x5:0:0 && 1 <= -1 * x4:0:0 + -1 * x5:0:0 && x6:0:0 > 0 && x3:0:0 > -1
f8(x:0:0, x1:0:0, x2:0:0) -> f8(x:0:0 + (x2:0:0 - 1), x1:0:0 + x2:0:0, x2:0:0 - 1) :|: x:0:0 > -1 && 0 <= -1 * x2:0:0 && 1 <= -1 * x1:0:0 + -1 * x2:0:0
f8(x52:0:0:0, x53:0:0:0, x54:0:0:0) -> f8(x52:0:0:0 + (x53:0:0:0 + x54:0:0:0), x53:0:0:0 + x54:0:0:0, x54:0:0:0 - 1) :|: 0 <= -1 * x54:0:0:0 && 1 <= -1 * x53:0:0:0 + -1 * x54:0:0:0 && x18:0:0:0 < 0 && x52:0:0:0 > -1

----------------------------------------

(17) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f8(x, x1, x2)] = x

The following rules are decreasing:
f8(x3:0:0, x4:0:0, x5:0:0) -> f8(x3:0:0 + (x4:0:0 + x5:0:0), x4:0:0 + x5:0:0, x5:0:0 - 1) :|: 0 <= -1 * x5:0:0 && 1 <= -1 * x4:0:0 + -1 * x5:0:0 && x6:0:0 > 0 && x3:0:0 > -1
f8(x:0:0, x1:0:0, x2:0:0) -> f8(x:0:0 + (x2:0:0 - 1), x1:0:0 + x2:0:0, x2:0:0 - 1) :|: x:0:0 > -1 && 0 <= -1 * x2:0:0 && 1 <= -1 * x1:0:0 + -1 * x2:0:0
f8(x52:0:0:0, x53:0:0:0, x54:0:0:0) -> f8(x52:0:0:0 + (x53:0:0:0 + x54:0:0:0), x53:0:0:0 + x54:0:0:0, x54:0:0:0 - 1) :|: 0 <= -1 * x54:0:0:0 && 1 <= -1 * x53:0:0:0 + -1 * x54:0:0:0 && x18:0:0:0 < 0 && x52:0:0:0 > -1
The following rules are bounded:
f8(x3:0:0, x4:0:0, x5:0:0) -> f8(x3:0:0 + (x4:0:0 + x5:0:0), x4:0:0 + x5:0:0, x5:0:0 - 1) :|: 0 <= -1 * x5:0:0 && 1 <= -1 * x4:0:0 + -1 * x5:0:0 && x6:0:0 > 0 && x3:0:0 > -1
f8(x:0:0, x1:0:0, x2:0:0) -> f8(x:0:0 + (x2:0:0 - 1), x1:0:0 + x2:0:0, x2:0:0 - 1) :|: x:0:0 > -1 && 0 <= -1 * x2:0:0 && 1 <= -1 * x1:0:0 + -1 * x2:0:0
f8(x52:0:0:0, x53:0:0:0, x54:0:0:0) -> f8(x52:0:0:0 + (x53:0:0:0 + x54:0:0:0), x53:0:0:0 + x54:0:0:0, x54:0:0:0 - 1) :|: 0 <= -1 * x54:0:0:0 && 1 <= -1 * x53:0:0:0 + -1 * x54:0:0:0 && x18:0:0:0 < 0 && x52:0:0:0 > -1

----------------------------------------

(18)
YES

----------------------------------------

(19)
Obligation:
Rules:
f8(x:0, x1:0, x2:0) -> f8(x:0 + (x2:0 - 1), x1:0 + x2:0, x2:0 - 1) :|: x:0 > -1 && 0 <= -1 * x2:0 && -1 * x1:0 + -1 * x2:0 + -1 < 0
f8(x52:0:0, x53:0:0, x54:0:0) -> f8(x52:0:0 + (x53:0:0 + x54:0:0), x53:0:0 + x54:0:0, x54:0:0 - 1) :|: x52:0:0 > -1 && x18:0:0 < 0 && 0 <= -1 * x54:0:0 && -1 * x53:0:0 + -1 * x54:0:0 + -1 < 0
f8(x3:0, x4:0, x5:0) -> f8(x3:0 + (x4:0 + x5:0), x4:0 + x5:0, x5:0 - 1) :|: x3:0 > -1 && x6:0 > 0 && 0 <= -1 * x5:0 && -1 * x4:0 + -1 * x5:0 + -1 < 0

----------------------------------------

(20) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(21)
Obligation:
Rules:
f8(x3:0:0, x4:0:0, x5:0:0) -> f8(x3:0:0 + (x4:0:0 + x5:0:0), x4:0:0 + x5:0:0, x5:0:0 - 1) :|: 0 <= -1 * x5:0:0 && 1 > -1 * x4:0:0 + -1 * x5:0:0 && x6:0:0 > 0 && x3:0:0 > -1
f8(x:0:0, x1:0:0, x2:0:0) -> f8(x:0:0 + (x2:0:0 - 1), x1:0:0 + x2:0:0, x2:0:0 - 1) :|: x:0:0 > -1 && 0 <= -1 * x2:0:0 && 1 > -1 * x1:0:0 + -1 * x2:0:0
f8(x52:0:0:0, x53:0:0:0, x54:0:0:0) -> f8(x52:0:0:0 + (x53:0:0:0 + x54:0:0:0), x53:0:0:0 + x54:0:0:0, x54:0:0:0 - 1) :|: 0 <= -1 * x54:0:0:0 && 1 > -1 * x53:0:0:0 + -1 * x54:0:0:0 && x18:0:0:0 < 0 && x52:0:0:0 > -1

----------------------------------------

(22) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f8(x, x1, x2)] = x1 + x2

The following rules are decreasing:
f8(x3:0:0, x4:0:0, x5:0:0) -> f8(x3:0:0 + (x4:0:0 + x5:0:0), x4:0:0 + x5:0:0, x5:0:0 - 1) :|: 0 <= -1 * x5:0:0 && 1 > -1 * x4:0:0 + -1 * x5:0:0 && x6:0:0 > 0 && x3:0:0 > -1
f8(x:0:0, x1:0:0, x2:0:0) -> f8(x:0:0 + (x2:0:0 - 1), x1:0:0 + x2:0:0, x2:0:0 - 1) :|: x:0:0 > -1 && 0 <= -1 * x2:0:0 && 1 > -1 * x1:0:0 + -1 * x2:0:0
f8(x52:0:0:0, x53:0:0:0, x54:0:0:0) -> f8(x52:0:0:0 + (x53:0:0:0 + x54:0:0:0), x53:0:0:0 + x54:0:0:0, x54:0:0:0 - 1) :|: 0 <= -1 * x54:0:0:0 && 1 > -1 * x53:0:0:0 + -1 * x54:0:0:0 && x18:0:0:0 < 0 && x52:0:0:0 > -1
The following rules are bounded:
f8(x3:0:0, x4:0:0, x5:0:0) -> f8(x3:0:0 + (x4:0:0 + x5:0:0), x4:0:0 + x5:0:0, x5:0:0 - 1) :|: 0 <= -1 * x5:0:0 && 1 > -1 * x4:0:0 + -1 * x5:0:0 && x6:0:0 > 0 && x3:0:0 > -1
f8(x:0:0, x1:0:0, x2:0:0) -> f8(x:0:0 + (x2:0:0 - 1), x1:0:0 + x2:0:0, x2:0:0 - 1) :|: x:0:0 > -1 && 0 <= -1 * x2:0:0 && 1 > -1 * x1:0:0 + -1 * x2:0:0
f8(x52:0:0:0, x53:0:0:0, x54:0:0:0) -> f8(x52:0:0:0 + (x53:0:0:0 + x54:0:0:0), x53:0:0:0 + x54:0:0:0, x54:0:0:0 - 1) :|: 0 <= -1 * x54:0:0:0 && 1 > -1 * x53:0:0:0 + -1 * x54:0:0:0 && x18:0:0:0 < 0 && x52:0:0:0 > -1

----------------------------------------

(23)
YES

----------------------------------------

(24)
Obligation:
Rules:
f8(x52:0, x53:0, x54:0) -> f8(x52:0 + (x53:0 + x54:0), x53:0 + x54:0, x54:0 - 1) :|: x52:0 > -1 && x18:0 < 0 && -1 * x54:0 < 0
f8(x, x1, x2) -> f8(x + (x2 - 1), x1 + x2, x2 - 1) :|: x > -1 && -1 * x2 < 0
f8(x3, x4, x5) -> f8(x3 + (x4 + x5), x4 + x5, x5 - 1) :|: x3 > -1 && x6 > 0 && -1 * x5 < 0

----------------------------------------

(25) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(26)
Obligation:
Rules:
f8(x:0, x1:0, x2:0) -> f8(x:0 + (x2:0 - 1), x1:0 + x2:0, x2:0 - 1) :|: x:0 > -1 && 0 > -1 * x2:0
f8(x52:0:0, x53:0:0, x54:0:0) -> f8(x52:0:0 + (x53:0:0 + x54:0:0), x53:0:0 + x54:0:0, x54:0:0 - 1) :|: x52:0:0 > -1 && x18:0:0 < 0 && 0 > -1 * x54:0:0
f8(x3:0, x4:0, x5:0) -> f8(x3:0 + (x4:0 + x5:0), x4:0 + x5:0, x5:0 - 1) :|: x3:0 > -1 && x6:0 > 0 && 0 > -1 * x5:0

----------------------------------------

(27) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f8 ] = f8_3

The following rules are decreasing:
f8(x:0, x1:0, x2:0) -> f8(x:0 + (x2:0 - 1), x1:0 + x2:0, x2:0 - 1) :|: x:0 > -1 && 0 > -1 * x2:0
f8(x52:0:0, x53:0:0, x54:0:0) -> f8(x52:0:0 + (x53:0:0 + x54:0:0), x53:0:0 + x54:0:0, x54:0:0 - 1) :|: x52:0:0 > -1 && x18:0:0 < 0 && 0 > -1 * x54:0:0
f8(x3:0, x4:0, x5:0) -> f8(x3:0 + (x4:0 + x5:0), x4:0 + x5:0, x5:0 - 1) :|: x3:0 > -1 && x6:0 > 0 && 0 > -1 * x5:0

The following rules are bounded:
f8(x:0, x1:0, x2:0) -> f8(x:0 + (x2:0 - 1), x1:0 + x2:0, x2:0 - 1) :|: x:0 > -1 && 0 > -1 * x2:0
f8(x52:0:0, x53:0:0, x54:0:0) -> f8(x52:0:0 + (x53:0:0 + x54:0:0), x53:0:0 + x54:0:0, x54:0:0 - 1) :|: x52:0:0 > -1 && x18:0:0 < 0 && 0 > -1 * x54:0:0
f8(x3:0, x4:0, x5:0) -> f8(x3:0 + (x4:0 + x5:0), x4:0 + x5:0, x5:0 - 1) :|: x3:0 > -1 && x6:0 > 0 && 0 > -1 * x5:0


----------------------------------------

(28)
YES
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.001s
Running Thread.stop() against 1756892498Exec. 120, RankingReductionPairProcessor[GenerateFollowingInequalities=False]
Stack trace:
    app//immutables.Immutable.DefaultImmutableSet.iterator(Unknown Source)
    app//aprove.Framework.Algebra.Polynomials.VarPolynomial.plus(VarPolynomial.java:526)
    app//aprove.Framework.IntTRS.Ranking.PCS.eliminateVariable(PCS.java:147)
    app//aprove.Framework.IntTRS.Ranking.PCS.eliminateOtherVariables(PCS.java:85)
    app//aprove.Framework.IntTRS.Ranking.TransitionRelation.<init>(TransitionRelation.java:113)
    app//aprove.Framework.IntTRS.Ranking.TransitionRelation.<init>(TransitionRelation.java:65)
