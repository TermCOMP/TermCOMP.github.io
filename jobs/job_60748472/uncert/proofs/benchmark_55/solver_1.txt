AST
proof of /home/ff862203/input_hT3t87Ebn1.ari
# AProVE Commit ID: 1c9e2a6453f9f0dca490585733f1cff3767d3e54 jan-christoph 20250828 unpublished


Innermost AST of the given PTRS could be proven:

(0) PTRS
(1) PTRStoPQTRSProof [EQUIVALENT, 0 ms]
(2) PQTRS
(3) PQTRStoADPProblemProof [EQUIVALENT, 0 ms]
(4) ADP
(5) AST_ADPUsableRulesProof [EQUIVALENT, 0 ms]
(6) ADP
(7) AST_ADPReductionPairProof [EQUIVALENT, 0 ms]
(8) ADP
(9) PisEmptyProof [EQUIVALENT, 0 ms]
(10) YES


----------------------------------------

(0)
Obligation:
Probabilistic term rewrite system:
The TRS has the following probabilistic rules:

   rw(tree(x, y)) -> 1 / 2 : rw(tree(tree(x, y), tree(x, y))) || 1 / 2 : rw(x)

and uses the innermost rewrite strategy.

----------------------------------------

(1) PTRStoPQTRSProof (EQUIVALENT)
Transformed PTRS into PQTRS. Q is:
   rw(tree(x, y))
----------------------------------------

(2)
Obligation:
Probabilistic Q term rewrite system:
The PQTRS has the following probabilistic rules:

   rw(tree(x, y)) -> 1 / 2 : rw(tree(tree(x, y), tree(x, y))) || 1 / 2 : rw(x)

And Q contains the following terms:
   rw(tree(x0, x1))

----------------------------------------

(3) PQTRStoADPProblemProof (EQUIVALENT)


A PQTRS (R,Q) is innermost AST iff ADP(R) is innermost AST (Chain-Criterion)[FLOPS24].
----------------------------------------

(4)
Obligation:
Probabilistic ADP Problem:
The ADP Problem has the following rules with active return value flag:

   rw(tree(x, y)) -> 1 / 2 : rw(tree(tree(x, y), tree(x, y))) || 1 / 2 : rw(x)

The ADP Problem has the following rules with annotations:

   RW(tree(x, y)) -> 1 / 2 : RW(tree(tree(x, y), tree(x, y))) || 1 / 2 : RW(x)


----------------------------------------

(5) AST_ADPUsableRulesProof (EQUIVALENT)


We use the usable rules processor [FLOPS24].
Hence, by the usable rules processor [FLOPS24] we can deactivate the flags for all non-usable rules [FROCOS05]
----------------------------------------

(6)
Obligation:
Probabilistic ADP Problem:
The set of rules with active return value flag is empty.
The ADP Problem has the following rules with annotations:

   RW(tree(x, y)) -> 1 / 2 : RW(tree(tree(x, y), tree(x, y))) || 1 / 2 : RW(x)


----------------------------------------

(7) AST_ADPReductionPairProof (EQUIVALENT)


We use the reduction pair processor [FLOPS24].
The following pairs can be oriented strictly and we delete all annotations:

   RW(tree(x, y)) -> 1 / 2 : RW(tree(tree(x, y), tree(x, y))) || 1 / 2 : RW(x)

The remaining pairs can at least be oriented weakly:
none

Used ordering:  Polynomial interpretation [POLO]:

   POL(RW(x_1)) = 2*x_1
   POL(tree(x_1, x_2)) = 1 + x_1

----------------------------------------

(8)
Obligation:
Probabilistic ADP Problem:
The set of rules with active return value flag is empty.
The set of rules with annotations is empty.

----------------------------------------

(9) PisEmptyProof (EQUIVALENT)
P contains no annotations anymore. Hence, there exists no infinite P-CT.
----------------------------------------

(10)
YES
