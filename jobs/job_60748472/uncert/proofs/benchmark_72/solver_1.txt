AST
proof of /home/ff862203/input_sapTwy5uXT.ari
# AProVE Commit ID: 1c9e2a6453f9f0dca490585733f1cff3767d3e54 jan-christoph 20250828 unpublished


Innermost AST of the given PTRS could be proven:

(0) PTRS
(1) PTRStoPQTRSProof [EQUIVALENT, 0 ms]
(2) PQTRS
(3) PQTRStoADPProblemProof [EQUIVALENT, 0 ms]
(4) ADP
(5) AST_ADPDependencyGraphProof [EQUIVALENT, 0 ms]
(6) ADP
(7) AST_ADPUsableTermsProof [EQUIVALENT, 0 ms]
(8) ADP
(9) AST_ADPUsableRulesProof [EQUIVALENT, 0 ms]
(10) ADP
(11) AST_ADPTransformationProof [EQUIVALENT, 0 ms]
(12) ADP
(13) AST_ADPTransformationProof [EQUIVALENT, 0 ms]
(14) ADP
(15) AST_ADPTransformationProof [EQUIVALENT, 0 ms]
(16) ADP
(17) AST_ADPUsableTermsProof [EQUIVALENT, 0 ms]
(18) ADP
(19) AST_ADPTransformationProof [EQUIVALENT, 0 ms]
(20) ADP
(21) AST_ADPUsableTermsProof [EQUIVALENT, 0 ms]
(22) ADP
(23) AST_ADPTransformationProof [EQUIVALENT, 0 ms]
(24) ADP
(25) AST_ADPUsableTermsProof [EQUIVALENT, 0 ms]
(26) ADP
(27) AST_ADPTransformationProof [EQUIVALENT, 0 ms]
(28) ADP
(29) AST_ADPTransformationProof [EQUIVALENT, 0 ms]
(30) ADP
(31) AST_ADPTransformationProof [EQUIVALENT, 0 ms]
(32) ADP
(33) AST_ADPTransformationProof [EQUIVALENT, 0 ms]
(34) ADP
(35) AST_ADPTransformationProof [EQUIVALENT, 0 ms]
(36) ADP
(37) AST_ADPUsableTermsProof [EQUIVALENT, 0 ms]
(38) ADP
(39) AST_ADPTransformationProof [EQUIVALENT, 0 ms]
(40) ADP
(41) AST_ADPUsableTermsProof [EQUIVALENT, 0 ms]
(42) ADP
(43) AST_ADPTransformationProof [EQUIVALENT, 0 ms]
(44) ADP
(45) AST_ADPUsableTermsProof [EQUIVALENT, 0 ms]
(46) ADP
(47) AST_ADPTransformationProof [EQUIVALENT, 0 ms]
(48) ADP
(49) AST_ADPUsableTermsProof [EQUIVALENT, 0 ms]
(50) ADP
(51) AST_ADPTransformationProof [EQUIVALENT, 0 ms]
(52) ADP
(53) AST_ADPTransformationProof [EQUIVALENT, 0 ms]
(54) ADP
(55) AST_ADPTransformationProof [EQUIVALENT, 0 ms]
(56) ADP
(57) AST_ADPTransformationProof [EQUIVALENT, 0 ms]
(58) ADP
(59) AST_ADPTransformationProof [EQUIVALENT, 0 ms]
(60) ADP
(61) AST_ADPTransformationProof [EQUIVALENT, 0 ms]
(62) ADP
(63) AST_ADPTransformationProof [EQUIVALENT, 0 ms]
(64) ADP
(65) AST_ADPTransformationProof [EQUIVALENT, 0 ms]
(66) ADP
(67) AST_ADPUsableRulesProof [EQUIVALENT, 0 ms]
(68) ADP
(69) AST_ADPReductionPairProof [EQUIVALENT, 0 ms]
(70) ADP
(71) PisEmptyProof [EQUIVALENT, 0 ms]
(72) YES


----------------------------------------

(0)
Obligation:
Probabilistic term rewrite system:
The TRS has the following probabilistic rules:

   g -> 1 / 2 : b1 || 1 / 2 : b2
   d(x) -> 1 : e(x, x)
   f(e(b1, b1)) -> 1 : h(f(d(g)), f(d(g)), f(d(g)), f(d(g)))

and uses the innermost rewrite strategy.

----------------------------------------

(1) PTRStoPQTRSProof (EQUIVALENT)
Transformed PTRS into PQTRS. Q is:
   g, d(x), f(e(b1, b1))
----------------------------------------

(2)
Obligation:
Probabilistic Q term rewrite system:
The PQTRS has the following probabilistic rules:

   g -> 1 / 2 : b1 || 1 / 2 : b2
   d(x) -> 1 : e(x, x)
   f(e(b1, b1)) -> 1 : h(f(d(g)), f(d(g)), f(d(g)), f(d(g)))

And Q contains the following terms:
   g, d(x0), f(e(b1, b1))

----------------------------------------

(3) PQTRStoADPProblemProof (EQUIVALENT)


A PQTRS (R,Q) is innermost AST iff ADP(R) is innermost AST (Chain-Criterion)[FLOPS24].
----------------------------------------

(4)
Obligation:
Probabilistic ADP Problem:
The ADP Problem has the following rules with active return value flag:

   g -> 1 / 2 : b1 || 1 / 2 : b2
   d(x) -> 1 : e(x, x)
   f(e(b1, b1)) -> 1 : h(f(d(g)), f(d(g)), f(d(g)), f(d(g)))

The ADP Problem has the following rules with annotations:

   G -> 1 / 2 : b1 || 1 / 2 : b2
   D(x) -> 1 : e(x, x)
   F(e(b1, b1)) -> 1 : h(F(D(G)), F(D(G)), F(D(G)), F(D(G)))


----------------------------------------

(5) AST_ADPDependencyGraphProof (EQUIVALENT)


We use the dependency graph processor [FLOPS24].
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 2 less nodes.
----------------------------------------

(6)
Obligation:
Probabilistic ADP Problem:
The ADP Problem has the following rules with active return value flag:

   g -> 1 / 2 : b1 || 1 / 2 : b2
   d(x) -> 1 : e(x, x)
   f(e(b1, b1)) -> 1 : h(f(d(g)), f(d(g)), f(d(g)), f(d(g)))

The ADP Problem has the following rules with annotations:

   F(e(b1, b1)) -> 1 : h(F(D(G)), F(D(G)), F(D(G)), F(D(G)))


----------------------------------------

(7) AST_ADPUsableTermsProof (EQUIVALENT)


We use the usable terms processor [FLOPS24].
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] gives us the following unusable Terms: 
[G, D(g)]
Hence, we can remove the annotations from these terms from every RHS of every ADP
----------------------------------------

(8)
Obligation:
Probabilistic ADP Problem:
The ADP Problem has the following rules with active return value flag:

   g -> 1 / 2 : b1 || 1 / 2 : b2
   d(x) -> 1 : e(x, x)
   f(e(b1, b1)) -> 1 : h(f(d(g)), f(d(g)), f(d(g)), f(d(g)))

The ADP Problem has the following rules with annotations:

   F(e(b1, b1)) -> 1 : h(F(d(g)), F(d(g)), F(d(g)), F(d(g)))


----------------------------------------

(9) AST_ADPUsableRulesProof (EQUIVALENT)


We use the usable rules processor [FLOPS24].
Hence, by the usable rules processor [FLOPS24] we can deactivate the flags for all non-usable rules [FROCOS05]
----------------------------------------

(10)
Obligation:
Probabilistic ADP Problem:
The ADP Problem has the following rules with active return value flag:

   g -> 1 / 2 : b1 || 1 / 2 : b2
   d(x) -> 1 : e(x, x)

The ADP Problem has the following rules with annotations:

   F(e(b1, b1)) -> 1 : h(F(d(g)), F(d(g)), F(d(g)), F(d(g)))


----------------------------------------

(11) AST_ADPTransformationProof (EQUIVALENT)
By rewriting [FLOPS24] for the rule F(e(b1, b1)) -> 1 : h(F(d(g)), F(d(g)), F(d(g)), F(d(g))) at position [3,0] we obtained the following new ADPs :

   F(e(b1, b1)) -> 1 : h(F(d(g)), F(d(g)), F(d(g)), F(e(g, g)))

and we added the following new probabilistic rules with active return value flag:
none

----------------------------------------

(12)
Obligation:
Probabilistic ADP Problem:
The ADP Problem has the following rules with active return value flag:

   g -> 1 / 2 : b1 || 1 / 2 : b2
   d(x) -> 1 : e(x, x)

The ADP Problem has the following rules with annotations:

   F(e(b1, b1)) -> 1 : h(F(d(g)), F(d(g)), F(d(g)), F(e(g, g)))


----------------------------------------

(13) AST_ADPTransformationProof (EQUIVALENT)
By rewriting [FLOPS24] for the rule F(e(b1, b1)) -> 1 : h(F(d(g)), F(d(g)), F(d(g)), F(e(g, g))) at position [2,0] we obtained the following new ADPs :

   F(e(b1, b1)) -> 1 : h(F(d(g)), F(d(g)), F(e(g, g)), F(e(g, g)))

and we added the following new probabilistic rules with active return value flag:
none

----------------------------------------

(14)
Obligation:
Probabilistic ADP Problem:
The ADP Problem has the following rules with active return value flag:

   g -> 1 / 2 : b1 || 1 / 2 : b2
   d(x) -> 1 : e(x, x)

The ADP Problem has the following rules with annotations:

   F(e(b1, b1)) -> 1 : h(F(d(g)), F(d(g)), F(e(g, g)), F(e(g, g)))


----------------------------------------

(15) AST_ADPTransformationProof (EQUIVALENT)
By rewriting [FLOPS24] for the rule F(e(b1, b1)) -> 1 : h(F(d(g)), F(d(g)), F(e(g, g)), F(e(g, g))) at position [2,0,0] we obtained the following new ADPs :

   F(e(b1, b1)) -> 1 / 2 : h(F(d(g)), F(d(g)), F(e(b1, g)), F(e(g, g))) || 1 / 2 : h(F(d(g)), F(d(g)), F(e(b2, g)), F(e(g, g)))

and we added the following new probabilistic rules with active return value flag:
none

----------------------------------------

(16)
Obligation:
Probabilistic ADP Problem:
The ADP Problem has the following rules with active return value flag:

   g -> 1 / 2 : b1 || 1 / 2 : b2
   d(x) -> 1 : e(x, x)

The ADP Problem has the following rules with annotations:

   F(e(b1, b1)) -> 1 / 2 : h(F(d(g)), F(d(g)), F(e(b1, g)), F(e(g, g))) || 1 / 2 : h(F(d(g)), F(d(g)), F(e(b2, g)), F(e(g, g)))


----------------------------------------

(17) AST_ADPUsableTermsProof (EQUIVALENT)


We use the usable terms processor [FLOPS24].
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] gives us the following unusable Terms: 
[F(e(b2, g))]
Hence, we can remove the annotations from these terms from every RHS of every ADP
----------------------------------------

(18)
Obligation:
Probabilistic ADP Problem:
The ADP Problem has the following rules with active return value flag:

   g -> 1 / 2 : b1 || 1 / 2 : b2
   d(x) -> 1 : e(x, x)

The ADP Problem has the following rules with annotations:

   F(e(b1, b1)) -> 1 / 2 : h(F(d(g)), F(d(g)), F(e(b1, g)), F(e(g, g))) || 1 / 2 : h(F(d(g)), F(d(g)), f(e(b2, g)), F(e(g, g)))


----------------------------------------

(19) AST_ADPTransformationProof (EQUIVALENT)
By rewriting [FLOPS24] for the rule F(e(b1, b1)) -> 1 / 2 : h(F(d(g)), F(d(g)), F(e(b1, g)), F(e(g, g))) || 1 / 2 : h(F(d(g)), F(d(g)), f(e(b2, g)), F(e(g, g))) at position [3,0,0] we obtained the following new ADPs :

   F(e(b1, b1)) -> 1 / 2 : h(F(d(g)), F(d(g)), f(e(b2, g)), F(e(g, g))) || 1 / 4 : h(F(d(g)), F(d(g)), F(e(b1, g)), F(e(b1, g))) || 1 / 4 : h(F(d(g)), F(d(g)), F(e(b1, g)), F(e(b2, g)))

and we added the following new probabilistic rules with active return value flag:
none

----------------------------------------

(20)
Obligation:
Probabilistic ADP Problem:
The ADP Problem has the following rules with active return value flag:

   g -> 1 / 2 : b1 || 1 / 2 : b2
   d(x) -> 1 : e(x, x)

The ADP Problem has the following rules with annotations:

   F(e(b1, b1)) -> 1 / 2 : h(F(d(g)), F(d(g)), f(e(b2, g)), F(e(g, g))) || 1 / 4 : h(F(d(g)), F(d(g)), F(e(b1, g)), F(e(b1, g))) || 1 / 4 : h(F(d(g)), F(d(g)), F(e(b1, g)), F(e(b2, g)))


----------------------------------------

(21) AST_ADPUsableTermsProof (EQUIVALENT)


We use the usable terms processor [FLOPS24].
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] gives us the following unusable Terms: 
[F(e(b2, g))]
Hence, we can remove the annotations from these terms from every RHS of every ADP
----------------------------------------

(22)
Obligation:
Probabilistic ADP Problem:
The ADP Problem has the following rules with active return value flag:

   g -> 1 / 2 : b1 || 1 / 2 : b2
   d(x) -> 1 : e(x, x)

The ADP Problem has the following rules with annotations:

   F(e(b1, b1)) -> 1 / 2 : h(F(d(g)), F(d(g)), f(e(b2, g)), F(e(g, g))) || 1 / 4 : h(F(d(g)), F(d(g)), F(e(b1, g)), F(e(b1, g))) || 1 / 4 : h(F(d(g)), F(d(g)), F(e(b1, g)), f(e(b2, g)))


----------------------------------------

(23) AST_ADPTransformationProof (EQUIVALENT)
By rewriting [FLOPS24] for the rule F(e(b1, b1)) -> 1 / 2 : h(F(d(g)), F(d(g)), f(e(b2, g)), F(e(g, g))) || 1 / 4 : h(F(d(g)), F(d(g)), F(e(b1, g)), F(e(b1, g))) || 1 / 4 : h(F(d(g)), F(d(g)), F(e(b1, g)), f(e(b2, g))) at position [3,0,0] we obtained the following new ADPs :

   F(e(b1, b1)) -> 1 / 4 : h(F(d(g)), F(d(g)), F(e(b1, g)), F(e(b1, g))) || 1 / 4 : h(F(d(g)), F(d(g)), F(e(b1, g)), f(e(b2, g))) || 1 / 4 : h(F(d(g)), F(d(g)), f(e(b2, g)), F(e(b1, g))) || 1 / 4 : h(F(d(g)), F(d(g)), f(e(b2, g)), F(e(b2, g)))

and we added the following new probabilistic rules with active return value flag:
none

----------------------------------------

(24)
Obligation:
Probabilistic ADP Problem:
The ADP Problem has the following rules with active return value flag:

   g -> 1 / 2 : b1 || 1 / 2 : b2
   d(x) -> 1 : e(x, x)

The ADP Problem has the following rules with annotations:

   F(e(b1, b1)) -> 1 / 4 : h(F(d(g)), F(d(g)), F(e(b1, g)), F(e(b1, g))) || 1 / 4 : h(F(d(g)), F(d(g)), F(e(b1, g)), f(e(b2, g))) || 1 / 4 : h(F(d(g)), F(d(g)), f(e(b2, g)), F(e(b1, g))) || 1 / 4 : h(F(d(g)), F(d(g)), f(e(b2, g)), F(e(b2, g)))


----------------------------------------

(25) AST_ADPUsableTermsProof (EQUIVALENT)


We use the usable terms processor [FLOPS24].
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] gives us the following unusable Terms: 
[F(e(b2, g))]
Hence, we can remove the annotations from these terms from every RHS of every ADP
----------------------------------------

(26)
Obligation:
Probabilistic ADP Problem:
The ADP Problem has the following rules with active return value flag:

   g -> 1 / 2 : b1 || 1 / 2 : b2
   d(x) -> 1 : e(x, x)

The ADP Problem has the following rules with annotations:

   F(e(b1, b1)) -> 1 / 4 : h(F(d(g)), F(d(g)), F(e(b1, g)), F(e(b1, g))) || 1 / 4 : h(F(d(g)), F(d(g)), F(e(b1, g)), f(e(b2, g))) || 1 / 4 : h(F(d(g)), F(d(g)), f(e(b2, g)), F(e(b1, g))) || 1 / 4 : h(F(d(g)), F(d(g)), f(e(b2, g)), f(e(b2, g)))


----------------------------------------

(27) AST_ADPTransformationProof (EQUIVALENT)
By rewriting [FLOPS24] for the rule F(e(b1, b1)) -> 1 / 4 : h(F(d(g)), F(d(g)), F(e(b1, g)), F(e(b1, g))) || 1 / 4 : h(F(d(g)), F(d(g)), F(e(b1, g)), f(e(b2, g))) || 1 / 4 : h(F(d(g)), F(d(g)), f(e(b2, g)), F(e(b1, g))) || 1 / 4 : h(F(d(g)), F(d(g)), f(e(b2, g)), f(e(b2, g))) at position [1,0] we obtained the following new ADPs :

   F(e(b1, b1)) -> 1 / 4 : h(F(d(g)), F(d(g)), F(e(b1, g)), f(e(b2, g))) || 1 / 4 : h(F(d(g)), F(d(g)), f(e(b2, g)), F(e(b1, g))) || 1 / 4 : h(F(d(g)), F(d(g)), f(e(b2, g)), f(e(b2, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), F(e(b1, g)), F(e(b1, g)))

and we added the following new probabilistic rules with active return value flag:
none

----------------------------------------

(28)
Obligation:
Probabilistic ADP Problem:
The ADP Problem has the following rules with active return value flag:

   g -> 1 / 2 : b1 || 1 / 2 : b2
   d(x) -> 1 : e(x, x)

The ADP Problem has the following rules with annotations:

   F(e(b1, b1)) -> 1 / 4 : h(F(d(g)), F(d(g)), F(e(b1, g)), f(e(b2, g))) || 1 / 4 : h(F(d(g)), F(d(g)), f(e(b2, g)), F(e(b1, g))) || 1 / 4 : h(F(d(g)), F(d(g)), f(e(b2, g)), f(e(b2, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), F(e(b1, g)), F(e(b1, g)))


----------------------------------------

(29) AST_ADPTransformationProof (EQUIVALENT)
By rewriting [FLOPS24] for the rule F(e(b1, b1)) -> 1 / 4 : h(F(d(g)), F(d(g)), F(e(b1, g)), f(e(b2, g))) || 1 / 4 : h(F(d(g)), F(d(g)), f(e(b2, g)), F(e(b1, g))) || 1 / 4 : h(F(d(g)), F(d(g)), f(e(b2, g)), f(e(b2, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), F(e(b1, g)), F(e(b1, g))) at position [1,0] we obtained the following new ADPs :

   F(e(b1, b1)) -> 1 / 4 : h(F(d(g)), F(d(g)), f(e(b2, g)), F(e(b1, g))) || 1 / 4 : h(F(d(g)), F(d(g)), f(e(b2, g)), f(e(b2, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), F(e(b1, g)), f(e(b2, g)))

and we added the following new probabilistic rules with active return value flag:
none

----------------------------------------

(30)
Obligation:
Probabilistic ADP Problem:
The ADP Problem has the following rules with active return value flag:

   g -> 1 / 2 : b1 || 1 / 2 : b2
   d(x) -> 1 : e(x, x)

The ADP Problem has the following rules with annotations:

   F(e(b1, b1)) -> 1 / 4 : h(F(d(g)), F(d(g)), f(e(b2, g)), F(e(b1, g))) || 1 / 4 : h(F(d(g)), F(d(g)), f(e(b2, g)), f(e(b2, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), F(e(b1, g)), f(e(b2, g)))


----------------------------------------

(31) AST_ADPTransformationProof (EQUIVALENT)
By rewriting [FLOPS24] for the rule F(e(b1, b1)) -> 1 / 4 : h(F(d(g)), F(d(g)), f(e(b2, g)), F(e(b1, g))) || 1 / 4 : h(F(d(g)), F(d(g)), f(e(b2, g)), f(e(b2, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), F(e(b1, g)), f(e(b2, g))) at position [1,0] we obtained the following new ADPs :

   F(e(b1, b1)) -> 1 / 4 : h(F(d(g)), F(d(g)), f(e(b2, g)), f(e(b2, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), f(e(b2, g)), F(e(b1, g)))

and we added the following new probabilistic rules with active return value flag:
none

----------------------------------------

(32)
Obligation:
Probabilistic ADP Problem:
The ADP Problem has the following rules with active return value flag:

   g -> 1 / 2 : b1 || 1 / 2 : b2
   d(x) -> 1 : e(x, x)

The ADP Problem has the following rules with annotations:

   F(e(b1, b1)) -> 1 / 4 : h(F(d(g)), F(d(g)), f(e(b2, g)), f(e(b2, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), f(e(b2, g)), F(e(b1, g)))


----------------------------------------

(33) AST_ADPTransformationProof (EQUIVALENT)
By rewriting [FLOPS24] for the rule F(e(b1, b1)) -> 1 / 4 : h(F(d(g)), F(d(g)), f(e(b2, g)), f(e(b2, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), f(e(b2, g)), F(e(b1, g))) at position [1,0] we obtained the following new ADPs :

   F(e(b1, b1)) -> 1 / 4 : h(F(d(g)), F(e(g, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), f(e(b2, g)), f(e(b2, g)))

and we added the following new probabilistic rules with active return value flag:
none

----------------------------------------

(34)
Obligation:
Probabilistic ADP Problem:
The ADP Problem has the following rules with active return value flag:

   g -> 1 / 2 : b1 || 1 / 2 : b2
   d(x) -> 1 : e(x, x)

The ADP Problem has the following rules with annotations:

   F(e(b1, b1)) -> 1 / 4 : h(F(d(g)), F(e(g, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), f(e(b2, g)), f(e(b2, g)))


----------------------------------------

(35) AST_ADPTransformationProof (EQUIVALENT)
By rewriting [FLOPS24] for the rule F(e(b1, b1)) -> 1 / 4 : h(F(d(g)), F(e(g, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), f(e(b2, g)), f(e(b2, g))) at position [1,0,0] we obtained the following new ADPs :

   F(e(b1, b1)) -> 1 / 4 : h(F(d(g)), F(e(g, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), F(e(b2, g)), F(e(b1, g)), F(e(b1, g)))

and we added the following new probabilistic rules with active return value flag:
none

----------------------------------------

(36)
Obligation:
Probabilistic ADP Problem:
The ADP Problem has the following rules with active return value flag:

   g -> 1 / 2 : b1 || 1 / 2 : b2
   d(x) -> 1 : e(x, x)

The ADP Problem has the following rules with annotations:

   F(e(b1, b1)) -> 1 / 4 : h(F(d(g)), F(e(g, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), F(e(b2, g)), F(e(b1, g)), F(e(b1, g)))


----------------------------------------

(37) AST_ADPUsableTermsProof (EQUIVALENT)


We use the usable terms processor [FLOPS24].
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] gives us the following unusable Terms: 
[F(e(b2, g))]
Hence, we can remove the annotations from these terms from every RHS of every ADP
----------------------------------------

(38)
Obligation:
Probabilistic ADP Problem:
The ADP Problem has the following rules with active return value flag:

   g -> 1 / 2 : b1 || 1 / 2 : b2
   d(x) -> 1 : e(x, x)

The ADP Problem has the following rules with annotations:

   F(e(b1, b1)) -> 1 / 4 : h(F(d(g)), F(e(g, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g)))


----------------------------------------

(39) AST_ADPTransformationProof (EQUIVALENT)
By rewriting [FLOPS24] for the rule F(e(b1, b1)) -> 1 / 4 : h(F(d(g)), F(e(g, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g))) at position [1,0,0] we obtained the following new ADPs :

   F(e(b1, b1)) -> 1 / 4 : h(F(d(g)), F(e(g, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), F(e(b2, g)), F(e(b1, g)), f(e(b2, g)))

and we added the following new probabilistic rules with active return value flag:
none

----------------------------------------

(40)
Obligation:
Probabilistic ADP Problem:
The ADP Problem has the following rules with active return value flag:

   g -> 1 / 2 : b1 || 1 / 2 : b2
   d(x) -> 1 : e(x, x)

The ADP Problem has the following rules with annotations:

   F(e(b1, b1)) -> 1 / 4 : h(F(d(g)), F(e(g, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), F(e(b2, g)), F(e(b1, g)), f(e(b2, g)))


----------------------------------------

(41) AST_ADPUsableTermsProof (EQUIVALENT)


We use the usable terms processor [FLOPS24].
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] gives us the following unusable Terms: 
[F(e(b2, g))]
Hence, we can remove the annotations from these terms from every RHS of every ADP
----------------------------------------

(42)
Obligation:
Probabilistic ADP Problem:
The ADP Problem has the following rules with active return value flag:

   g -> 1 / 2 : b1 || 1 / 2 : b2
   d(x) -> 1 : e(x, x)

The ADP Problem has the following rules with annotations:

   F(e(b1, b1)) -> 1 / 4 : h(F(d(g)), F(e(g, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), F(e(b1, g)), f(e(b2, g)))


----------------------------------------

(43) AST_ADPTransformationProof (EQUIVALENT)
By rewriting [FLOPS24] for the rule F(e(b1, b1)) -> 1 / 4 : h(F(d(g)), F(e(g, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 4 : h(F(d(g)), F(e(g, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), F(e(b1, g)), f(e(b2, g))) at position [1,0,0] we obtained the following new ADPs :

   F(e(b1, b1)) -> 1 / 4 : h(F(d(g)), F(e(g, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), F(e(b2, g)), f(e(b2, g)), F(e(b1, g)))

and we added the following new probabilistic rules with active return value flag:
none

----------------------------------------

(44)
Obligation:
Probabilistic ADP Problem:
The ADP Problem has the following rules with active return value flag:

   g -> 1 / 2 : b1 || 1 / 2 : b2
   d(x) -> 1 : e(x, x)

The ADP Problem has the following rules with annotations:

   F(e(b1, b1)) -> 1 / 4 : h(F(d(g)), F(e(g, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), F(e(b2, g)), f(e(b2, g)), F(e(b1, g)))


----------------------------------------

(45) AST_ADPUsableTermsProof (EQUIVALENT)


We use the usable terms processor [FLOPS24].
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] gives us the following unusable Terms: 
[F(e(b2, g))]
Hence, we can remove the annotations from these terms from every RHS of every ADP
----------------------------------------

(46)
Obligation:
Probabilistic ADP Problem:
The ADP Problem has the following rules with active return value flag:

   g -> 1 / 2 : b1 || 1 / 2 : b2
   d(x) -> 1 : e(x, x)

The ADP Problem has the following rules with annotations:

   F(e(b1, b1)) -> 1 / 4 : h(F(d(g)), F(e(g, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), F(e(b1, g)))


----------------------------------------

(47) AST_ADPTransformationProof (EQUIVALENT)
By rewriting [FLOPS24] for the rule F(e(b1, b1)) -> 1 / 4 : h(F(d(g)), F(e(g, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), F(e(b1, g))) at position [1,0,0] we obtained the following new ADPs :

   F(e(b1, b1)) -> 1 / 8 : h(F(d(g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), F(e(b2, g)), f(e(b2, g)), f(e(b2, g)))

and we added the following new probabilistic rules with active return value flag:
none

----------------------------------------

(48)
Obligation:
Probabilistic ADP Problem:
The ADP Problem has the following rules with active return value flag:

   g -> 1 / 2 : b1 || 1 / 2 : b2
   d(x) -> 1 : e(x, x)

The ADP Problem has the following rules with annotations:

   F(e(b1, b1)) -> 1 / 8 : h(F(d(g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), F(e(b2, g)), f(e(b2, g)), f(e(b2, g)))


----------------------------------------

(49) AST_ADPUsableTermsProof (EQUIVALENT)


We use the usable terms processor [FLOPS24].
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] gives us the following unusable Terms: 
[F(e(b2, g))]
Hence, we can remove the annotations from these terms from every RHS of every ADP
----------------------------------------

(50)
Obligation:
Probabilistic ADP Problem:
The ADP Problem has the following rules with active return value flag:

   g -> 1 / 2 : b1 || 1 / 2 : b2
   d(x) -> 1 : e(x, x)

The ADP Problem has the following rules with annotations:

   F(e(b1, b1)) -> 1 / 8 : h(F(d(g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), f(e(b2, g)))


----------------------------------------

(51) AST_ADPTransformationProof (EQUIVALENT)
By rewriting [FLOPS24] for the rule F(e(b1, b1)) -> 1 / 8 : h(F(d(g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), f(e(b2, g))) at position [0,0] we obtained the following new ADPs :

   F(e(b1, b1)) -> 1 / 8 : h(F(d(g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g)))

and we added the following new probabilistic rules with active return value flag:
none

----------------------------------------

(52)
Obligation:
Probabilistic ADP Problem:
The ADP Problem has the following rules with active return value flag:

   g -> 1 / 2 : b1 || 1 / 2 : b2
   d(x) -> 1 : e(x, x)

The ADP Problem has the following rules with annotations:

   F(e(b1, b1)) -> 1 / 8 : h(F(d(g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g)))


----------------------------------------

(53) AST_ADPTransformationProof (EQUIVALENT)
By rewriting [FLOPS24] for the rule F(e(b1, b1)) -> 1 / 8 : h(F(d(g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) at position [0,0] we obtained the following new ADPs :

   F(e(b1, b1)) -> 1 / 8 : h(F(d(g)), F(e(b1, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g)))

and we added the following new probabilistic rules with active return value flag:
none

----------------------------------------

(54)
Obligation:
Probabilistic ADP Problem:
The ADP Problem has the following rules with active return value flag:

   g -> 1 / 2 : b1 || 1 / 2 : b2
   d(x) -> 1 : e(x, x)

The ADP Problem has the following rules with annotations:

   F(e(b1, b1)) -> 1 / 8 : h(F(d(g)), F(e(b1, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g)))


----------------------------------------

(55) AST_ADPTransformationProof (EQUIVALENT)
By rewriting [FLOPS24] for the rule F(e(b1, b1)) -> 1 / 8 : h(F(d(g)), F(e(b1, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g))) at position [0,0] we obtained the following new ADPs :

   F(e(b1, b1)) -> 1 / 8 : h(F(d(g)), f(e(b2, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), f(e(b2, g)))

and we added the following new probabilistic rules with active return value flag:
none

----------------------------------------

(56)
Obligation:
Probabilistic ADP Problem:
The ADP Problem has the following rules with active return value flag:

   g -> 1 / 2 : b1 || 1 / 2 : b2
   d(x) -> 1 : e(x, x)

The ADP Problem has the following rules with annotations:

   F(e(b1, b1)) -> 1 / 8 : h(F(d(g)), f(e(b2, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), f(e(b2, g)))


----------------------------------------

(57) AST_ADPTransformationProof (EQUIVALENT)
By rewriting [FLOPS24] for the rule F(e(b1, b1)) -> 1 / 8 : h(F(d(g)), f(e(b2, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), f(e(b2, g))) at position [0,0] we obtained the following new ADPs :

   F(e(b1, b1)) -> 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), F(e(b1, g)), f(e(b2, g)))

and we added the following new probabilistic rules with active return value flag:
none

----------------------------------------

(58)
Obligation:
Probabilistic ADP Problem:
The ADP Problem has the following rules with active return value flag:

   g -> 1 / 2 : b1 || 1 / 2 : b2
   d(x) -> 1 : e(x, x)

The ADP Problem has the following rules with annotations:

   F(e(b1, b1)) -> 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), F(e(b1, g)), f(e(b2, g)))


----------------------------------------

(59) AST_ADPTransformationProof (EQUIVALENT)
By rewriting [FLOPS24] for the rule F(e(b1, b1)) -> 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), F(e(b1, g)), f(e(b2, g))) at position [0,0] we obtained the following new ADPs :

   F(e(b1, b1)) -> 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), f(e(b2, g)), F(e(b1, g)))

and we added the following new probabilistic rules with active return value flag:
none

----------------------------------------

(60)
Obligation:
Probabilistic ADP Problem:
The ADP Problem has the following rules with active return value flag:

   g -> 1 / 2 : b1 || 1 / 2 : b2
   d(x) -> 1 : e(x, x)

The ADP Problem has the following rules with annotations:

   F(e(b1, b1)) -> 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), f(e(b2, g)), F(e(b1, g)))


----------------------------------------

(61) AST_ADPTransformationProof (EQUIVALENT)
By rewriting [FLOPS24] for the rule F(e(b1, b1)) -> 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), f(e(b2, g)), F(e(b1, g))) at position [0,0] we obtained the following new ADPs :

   F(e(b1, b1)) -> 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), f(e(b2, g)), F(e(b1, g)))

and we added the following new probabilistic rules with active return value flag:
none

----------------------------------------

(62)
Obligation:
Probabilistic ADP Problem:
The ADP Problem has the following rules with active return value flag:

   g -> 1 / 2 : b1 || 1 / 2 : b2
   d(x) -> 1 : e(x, x)

The ADP Problem has the following rules with annotations:

   F(e(b1, b1)) -> 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), f(e(b2, g)), F(e(b1, g)))


----------------------------------------

(63) AST_ADPTransformationProof (EQUIVALENT)
By rewriting [FLOPS24] for the rule F(e(b1, b1)) -> 1 / 8 : h(F(d(g)), F(e(b1, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), f(e(b2, g)), F(e(b1, g))) at position [0,0] we obtained the following new ADPs :

   F(e(b1, b1)) -> 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), f(e(b2, g)), f(e(b2, g)))

and we added the following new probabilistic rules with active return value flag:
none

----------------------------------------

(64)
Obligation:
Probabilistic ADP Problem:
The ADP Problem has the following rules with active return value flag:

   g -> 1 / 2 : b1 || 1 / 2 : b2
   d(x) -> 1 : e(x, x)

The ADP Problem has the following rules with annotations:

   F(e(b1, b1)) -> 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), f(e(b2, g)), f(e(b2, g)))


----------------------------------------

(65) AST_ADPTransformationProof (EQUIVALENT)
By rewriting [FLOPS24] for the rule F(e(b1, b1)) -> 1 / 8 : h(F(d(g)), f(e(b2, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), f(e(b2, g)), f(e(b2, g))) at position [0,0] we obtained the following new ADPs :

   F(e(b1, b1)) -> 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), f(e(b2, g)), f(e(b2, g)))

and we added the following new probabilistic rules with active return value flag:
none

----------------------------------------

(66)
Obligation:
Probabilistic ADP Problem:
The ADP Problem has the following rules with active return value flag:

   g -> 1 / 2 : b1 || 1 / 2 : b2
   d(x) -> 1 : e(x, x)

The ADP Problem has the following rules with annotations:

   F(e(b1, b1)) -> 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), f(e(b2, g)), f(e(b2, g)))


----------------------------------------

(67) AST_ADPUsableRulesProof (EQUIVALENT)


We use the usable rules processor [FLOPS24].
Hence, by the usable rules processor [FLOPS24] we can deactivate the flags for all non-usable rules [FROCOS05]
----------------------------------------

(68)
Obligation:
Probabilistic ADP Problem:
The ADP Problem has the following rules with active return value flag:

   g -> 1 / 2 : b1 || 1 / 2 : b2

The ADP Problem has the following rules with annotations:

   F(e(b1, b1)) -> 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), f(e(b2, g)), f(e(b2, g)))


----------------------------------------

(69) AST_ADPReductionPairProof (EQUIVALENT)


We use the reduction pair processor [FLOPS24].
The following pairs can be oriented strictly and we delete all annotations:

   F(e(b1, b1)) -> 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), F(e(b1, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), F(e(b1, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), f(e(b2, g)), F(e(b1, g))) || 1 / 8 : h(F(e(g, g)), F(e(b1, g)), f(e(b2, g)), f(e(b2, g))) || 1 / 8 : h(F(e(g, g)), f(e(b2, g)), f(e(b2, g)), f(e(b2, g)))

The remaining pairs can at least be oriented weakly:
none

Used ordering:  Polynomial interpretation [POLO]:

   POL(F(x_1)) = x_1
   POL(b1) = 2
   POL(b2) = 0
   POL(e(x_1, x_2)) = x_1*x_2
   POL(f(x_1)) = 0
   POL(g) = 1
   POL(h(x_1, x_2, x_3, x_4)) = 0

----------------------------------------

(70)
Obligation:
Probabilistic ADP Problem:
The ADP Problem has the following rules with active return value flag:

   g -> 1 / 2 : b1 || 1 / 2 : b2

The set of rules with annotations is empty.

----------------------------------------

(71) PisEmptyProof (EQUIVALENT)
P contains no annotations anymore. Hence, there exists no infinite P-CT.
----------------------------------------

(72)
YES
