WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_nested_loop_stop/1]
1. non_recursive  : [eval_nested_loop__critedge_in/1]
2. recursive  : [eval_nested_loop_6/7,eval_nested_loop_7/8,eval_nested_loop_bb5_in/7,eval_nested_loop_bb6_in/7,eval_nested_loop_bb7_in/8]
3. recursive  : [eval_nested_loop_2/7,eval_nested_loop_3/8,eval_nested_loop__critedge3_in/7,eval_nested_loop_bb3_in/7,eval_nested_loop_bb4_in/8,eval_nested_loop_bb5_in_loop_cont/8]
4. recursive  : [eval_nested_loop_0/5,eval_nested_loop_1/6,eval_nested_loop__critedge2_in/8,eval_nested_loop__critedge3_in_loop_cont/9,eval_nested_loop_bb1_in/5,eval_nested_loop_bb2_in/5]
5. non_recursive  : [eval_nested_loop_bb1_in_loop_cont/2]
6. non_recursive  : [eval_nested_loop_bb0_in/4]
7. non_recursive  : [eval_nested_loop_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into eval_nested_loop_bb5_in/7
3. SCC is partially evaluated into eval_nested_loop__critedge3_in/7
4. SCC is partially evaluated into eval_nested_loop_bb1_in/5
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_nested_loop_bb0_in/4
7. SCC is partially evaluated into eval_nested_loop_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_nested_loop_bb5_in/7 
* CE 12 is refined into CE [15] 
* CE 14 is refined into CE [16] 
* CE 13 is refined into CE [17] 


### Cost equations --> "Loop" of eval_nested_loop_bb5_in/7 
* CEs [17] --> Loop 15 
* CEs [15] --> Loop 16 
* CEs [16] --> Loop 17 

### Ranking functions of CR eval_nested_loop_bb5_in(V_N,V_j_0,V_i_1,V_7,V_k_0,B,C) 
* RF of phase [15]: [V_N-V_k_0]

#### Partial ranking functions of CR eval_nested_loop_bb5_in(V_N,V_j_0,V_i_1,V_7,V_k_0,B,C) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    V_N-V_k_0


### Specialization of cost equations eval_nested_loop__critedge3_in/7 
* CE 9 is refined into CE [18] 
* CE 11 is refined into CE [19] 
* CE 10 is refined into CE [20,21,22,23] 


### Cost equations --> "Loop" of eval_nested_loop__critedge3_in/7 
* CEs [23] --> Loop 18 
* CEs [22] --> Loop 19 
* CEs [21] --> Loop 20 
* CEs [20] --> Loop 21 
* CEs [18] --> Loop 22 
* CEs [19] --> Loop 23 

### Ranking functions of CR eval_nested_loop__critedge3_in(V_m,V_N,V_j_0,V_i_1,B,C,D) 
* RF of phase [18,19]: [V_m-V_j_0]
* RF of phase [20]: [V_m-V_j_0]

#### Partial ranking functions of CR eval_nested_loop__critedge3_in(V_m,V_N,V_j_0,V_i_1,B,C,D) 
* Partial RF of phase [18,19]:
  - RF of loop [18:1]:
    V_N-V_i_1-1
  - RF of loop [18:1,19:1]:
    V_m-V_j_0
* Partial RF of phase [20]:
  - RF of loop [20:1]:
    V_m-V_j_0


### Specialization of cost equations eval_nested_loop_bb1_in/5 
* CE 6 is refined into CE [24] 
* CE 8 is refined into CE [25] 
* CE 7 is refined into CE [26,27,28,29,30,31,32,33,34,35,36,37] 


### Cost equations --> "Loop" of eval_nested_loop_bb1_in/5 
* CEs [37] --> Loop 24 
* CEs [33] --> Loop 25 
* CEs [36] --> Loop 26 
* CEs [32] --> Loop 27 
* CEs [29] --> Loop 28 
* CEs [35] --> Loop 29 
* CEs [31,34] --> Loop 30 
* CEs [28,30] --> Loop 31 
* CEs [27] --> Loop 32 
* CEs [26] --> Loop 33 
* CEs [24] --> Loop 34 
* CEs [25] --> Loop 35 

### Ranking functions of CR eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) 
* RF of phase [24,25,26,27,28,29,30,31,32]: [V_n+V_N-V_i_0,V_n-V_i_0]
* RF of phase [33]: [V_n-V_i_0]

#### Partial ranking functions of CR eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B) 
* Partial RF of phase [24,25,26,27,28,29,30,31,32]:
  - RF of loop [24:1,25:1]:
    V_N-V_i_0
  - RF of loop [24:1,25:1,26:1,27:1,28:1]:
    V_n-V_i_0
  - RF of loop [29:1,30:1,31:1,32:1]:
    V_N/2-V_i_0/2
    V_n/2-V_i_0/2
* Partial RF of phase [33]:
  - RF of loop [33:1]:
    V_n-V_i_0


### Specialization of cost equations eval_nested_loop_bb0_in/4 
* CE 5 is refined into CE [38,39,40,41,42,43] 
* CE 4 is refined into CE [44] 
* CE 3 is refined into CE [45] 
* CE 2 is refined into CE [46] 


### Cost equations --> "Loop" of eval_nested_loop_bb0_in/4 
* CEs [43] --> Loop 36 
* CEs [42] --> Loop 37 
* CEs [41] --> Loop 38 
* CEs [44] --> Loop 39 
* CEs [45] --> Loop 40 
* CEs [46] --> Loop 41 
* CEs [39] --> Loop 42 
* CEs [38] --> Loop 43 
* CEs [40] --> Loop 44 

### Ranking functions of CR eval_nested_loop_bb0_in(V_n,V_m,V_N,B) 

#### Partial ranking functions of CR eval_nested_loop_bb0_in(V_n,V_m,V_N,B) 


### Specialization of cost equations eval_nested_loop_start/4 
* CE 1 is refined into CE [47,48,49,50,51,52,53,54,55] 


### Cost equations --> "Loop" of eval_nested_loop_start/4 
* CEs [55] --> Loop 45 
* CEs [54] --> Loop 46 
* CEs [53] --> Loop 47 
* CEs [52] --> Loop 48 
* CEs [51] --> Loop 49 
* CEs [50] --> Loop 50 
* CEs [49] --> Loop 51 
* CEs [48] --> Loop 52 
* CEs [47] --> Loop 53 

### Ranking functions of CR eval_nested_loop_start(V_n,V_m,V_N,B) 

#### Partial ranking functions of CR eval_nested_loop_start(V_n,V_m,V_N,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_nested_loop_bb5_in(V_N,V_j_0,V_i_1,V_7,V_k_0,B,C):
* Chain [[15],17]: 1*it(15)+0
  Such that:it(15) =< -V_k_0+C

  with precondition: [B=2,V_N=C,V_N>=0,V_j_0>=0,V_7>=1,V_k_0>=V_i_1,V_N>=V_k_0+1] 

* Chain [[15],16]: 1*it(15)+0
  Such that:it(15) =< -V_k_0+C

  with precondition: [B=2,V_N>=0,V_j_0>=0,V_7>=1,V_k_0>=V_i_1,C>=V_k_0+1,V_N>=C+1] 

* Chain [17]: 0
  with precondition: [B=2,V_k_0=C,V_N>=0,V_j_0>=0,V_7>=1,V_k_0>=V_N,V_k_0>=V_i_1] 

* Chain [16]: 0
  with precondition: [B=2,V_k_0=C,V_N>=0,V_j_0>=0,V_7>=1,V_k_0>=V_i_1,V_N>=V_k_0+1] 


#### Cost of chains of eval_nested_loop__critedge3_in(V_m,V_N,V_j_0,V_i_1,B,C,D):
* Chain [[20],23]: 1*it(20)+0
  Such that:it(20) =< -V_j_0+C

  with precondition: [B=3,V_m=C,V_i_1=D,V_N>=0,V_j_0>=0,V_i_1>=V_N,V_m>=V_j_0+1] 

* Chain [[20],22]: 1*it(20)+0
  Such that:it(20) =< -V_j_0+C

  with precondition: [B=3,V_i_1=D,V_N>=0,V_j_0>=0,V_i_1>=V_N,C>=V_j_0+1,V_m>=C+1] 

* Chain [[18,19],23]: 1*it(18)+1*it(19)+1*s(3)+0
  Such that:aux(3) =< V_N-V_i_1
aux(4) =< -V_i_1+D
aux(5) =< V_m-V_j_0
it(18) =< aux(5)
it(19) =< aux(5)
it(18) =< aux(3)
s(3) =< aux(3)
it(18) =< aux(4)
s(3) =< aux(4)

  with precondition: [B=3,V_m=C,V_N>=0,V_j_0>=0,V_m>=V_j_0+1,D>=V_i_1,V_N>=D+1] 

* Chain [[18,19],22]: 1*it(18)+1*it(19)+1*s(3)+0
  Such that:aux(1) =< V_m-V_j_0
aux(3) =< V_N-V_i_1
aux(2) =< -V_j_0+C
aux(4) =< -V_i_1+D
it(18) =< aux(1)
it(19) =< aux(1)
it(18) =< aux(2)
it(19) =< aux(2)
it(18) =< aux(3)
s(3) =< aux(3)
it(18) =< aux(4)
s(3) =< aux(4)

  with precondition: [B=3,V_N>=0,V_j_0>=0,C>=V_j_0+1,D>=V_i_1,V_m>=C+1,V_N>=D+1] 

* Chain [[18,19],21,[20],23]: 1*it(18)+2*it(19)+2*s(3)+1
  Such that:aux(6) =< V_m-V_j_0
aux(7) =< -V_i_1+D
it(19) =< aux(6)
s(3) =< aux(7)
it(18) =< aux(6)
it(18) =< aux(7)

  with precondition: [B=3,V_m=C,V_N=D,V_N>=0,V_j_0>=0,V_m>=V_j_0+3,V_N>=V_i_1+1] 

* Chain [[18,19],21,[20],22]: 1*it(18)+1*it(19)+1*it(20)+2*s(3)+1
  Such that:aux(1) =< V_m-V_j_0
aux(8) =< -V_j_0+C
aux(9) =< -V_i_1+D
it(20) =< aux(8)
s(3) =< aux(9)
it(18) =< aux(1)
it(19) =< aux(1)
it(18) =< aux(8)
it(19) =< aux(8)
it(18) =< aux(9)

  with precondition: [B=3,V_N=D,V_N>=0,V_j_0>=0,C>=V_j_0+3,V_N>=V_i_1+1,V_m>=C+1] 

* Chain [[18,19],21,23]: 1*it(18)+1*it(19)+2*s(3)+1
  Such that:aux(10) =< -V_j_0+C
aux(11) =< -V_i_1+D
s(3) =< aux(11)
it(18) =< aux(10)
it(19) =< aux(10)
it(18) =< aux(11)

  with precondition: [B=3,V_m=C,V_N=D,V_N>=0,V_j_0>=0,V_m>=V_j_0+2,V_N>=V_i_1+1] 

* Chain [[18,19],21,22]: 1*it(18)+1*it(19)+2*s(3)+1
  Such that:aux(1) =< V_m-V_j_0
aux(2) =< -V_j_0+C
aux(12) =< -V_i_1+D
s(3) =< aux(12)
it(18) =< aux(1)
it(19) =< aux(1)
it(18) =< aux(2)
it(19) =< aux(2)
it(18) =< aux(12)

  with precondition: [B=3,V_N=D,V_N>=0,V_j_0>=0,C>=V_j_0+2,V_N>=V_i_1+1,V_m>=C+1] 

* Chain [23]: 0
  with precondition: [B=3,V_j_0=V_m,D=V_i_1,V_j_0=C,V_N>=0,V_j_0>=0] 

* Chain [22]: 0
  with precondition: [B=3,D=V_i_1,V_j_0=C,V_N>=0,V_j_0>=0,V_m>=V_j_0+1] 

* Chain [21,[20],23]: 1*it(20)+1*s(4)+1
  Such that:it(20) =< -V_j_0+C
s(4) =< -V_i_1+D

  with precondition: [B=3,V_m=C,V_N=D,V_N>=0,V_j_0>=0,V_m>=V_j_0+2,V_N>=V_i_1+1] 

* Chain [21,[20],22]: 1*it(20)+1*s(4)+1
  Such that:it(20) =< -V_j_0+C
s(4) =< -V_i_1+D

  with precondition: [B=3,V_N=D,V_N>=0,V_j_0>=0,C>=V_j_0+2,V_N>=V_i_1+1,V_m>=C+1] 

* Chain [21,23]: 1*s(4)+1
  Such that:s(4) =< -V_i_1+D

  with precondition: [B=3,V_m=V_j_0+1,V_m=C,V_N=D,V_m>=1,V_N>=0,V_N>=V_i_1+1] 

* Chain [21,22]: 1*s(4)+1
  Such that:s(4) =< -V_i_1+D

  with precondition: [B=3,C=V_j_0+1,V_N=D,V_N>=0,C>=1,V_N>=V_i_1+1,V_m>=C+1] 


#### Cost of chains of eval_nested_loop_bb1_in(V_n,V_m,V_N,V_i_0,B):
* Chain [[33],35]: 1*it(33)+0
  Such that:it(33) =< V_n-V_i_0

  with precondition: [V_m=0,B=4,V_N>=0,V_i_0>=0,V_n>=V_i_0+1] 

* Chain [[33],34]: 1*it(33)+0
  Such that:it(33) =< V_n-V_i_0

  with precondition: [V_m=0,B=4,V_N>=0,V_i_0>=0,V_n>=V_i_0+2] 

* Chain [[24,25,26,27,28,29,30,31,32],35]: 2*it(24)+3*it(26)+2*it(29)+6*it(30)+1*s(91)+1*s(92)+1*s(93)+1*s(97)+1*s(98)+1*s(99)+2*s(103)+2*s(105)+11*s(106)+1*s(107)+6*s(110)+3*s(112)+1*s(120)+0
  Such that:aux(34) =< V_n-V_i_0
aux(36) =< V_n/2-V_i_0/2
aux(23) =< V_m
aux(38) =< V_N-V_i_0
aux(39) =< V_N-V_i_0+1
aux(41) =< V_N/2-V_i_0/2
aux(43) =< V_n+V_N-V_i_0
aux(44) =< V_n/2+V_N/2-V_i_0/2
it(24) =< aux(43)
it(26) =< aux(43)
it(29) =< aux(43)
it(30) =< aux(43)
it(24) =< aux(34)
it(26) =< aux(34)
it(29) =< aux(34)
it(30) =< aux(34)
it(29) =< aux(36)
it(30) =< aux(36)
it(29) =< aux(44)
it(30) =< aux(44)
it(24) =< aux(38)
it(29) =< aux(38)
it(30) =< aux(38)
s(94) =< aux(38)
it(30) =< aux(39)
s(108) =< aux(39)
s(120) =< aux(39)
s(94) =< aux(43)
s(108) =< aux(43)
s(120) =< aux(43)
it(29) =< aux(41)
it(30) =< aux(41)
aux(26) =< aux(23)
aux(25) =< aux(38)
s(95) =< it(24)*aux(38)
s(96) =< it(24)*aux(23)
s(114) =< it(30)*aux(26)
s(109) =< it(29)*aux(26)
s(103) =< it(26)*aux(26)
s(102) =< it(24)*aux(26)
s(101) =< it(24)*aux(25)
s(106) =< s(108)
s(110) =< s(114)
s(112) =< s(114)
s(112) =< s(108)
s(105) =< s(109)
s(107) =< s(109)
s(107) =< s(108)
s(97) =< s(102)
s(98) =< s(102)
s(97) =< s(101)
s(99) =< s(101)
s(97) =< s(94)
s(99) =< s(94)
s(91) =< s(96)
s(92) =< s(96)
s(91) =< s(95)
s(93) =< s(95)
s(91) =< s(94)
s(93) =< s(94)

  with precondition: [B=4,V_m>=1,V_N>=0,V_i_0>=0,V_n>=V_i_0+1] 

* Chain [[24,25,26,27,28,29,30,31,32],34]: 2*it(24)+3*it(26)+2*it(29)+6*it(30)+1*s(91)+1*s(92)+1*s(93)+1*s(97)+1*s(98)+1*s(99)+2*s(103)+2*s(105)+11*s(106)+1*s(107)+6*s(110)+3*s(112)+1*s(120)+0
  Such that:aux(32) =< V_n+V_N-V_i_0
aux(23) =< V_m
aux(38) =< V_N-V_i_0
aux(39) =< V_N-V_i_0+1
aux(41) =< V_N/2-V_i_0/2
aux(45) =< V_n-V_i_0
aux(46) =< V_n/2-V_i_0/2
it(24) =< aux(32)
it(26) =< aux(32)
it(29) =< aux(32)
it(30) =< aux(32)
it(24) =< aux(45)
it(26) =< aux(45)
it(29) =< aux(45)
it(30) =< aux(45)
it(29) =< aux(46)
it(30) =< aux(46)
it(24) =< aux(38)
it(29) =< aux(38)
it(30) =< aux(38)
s(94) =< aux(38)
it(30) =< aux(39)
s(108) =< aux(39)
s(120) =< aux(39)
s(94) =< aux(45)
s(108) =< aux(45)
s(120) =< aux(45)
it(29) =< aux(41)
it(30) =< aux(41)
aux(26) =< aux(23)
aux(25) =< aux(38)
s(95) =< it(24)*aux(38)
s(96) =< it(24)*aux(23)
s(114) =< it(30)*aux(26)
s(109) =< it(29)*aux(26)
s(103) =< it(26)*aux(26)
s(102) =< it(24)*aux(26)
s(101) =< it(24)*aux(25)
s(106) =< s(108)
s(110) =< s(114)
s(112) =< s(114)
s(112) =< s(108)
s(105) =< s(109)
s(107) =< s(109)
s(107) =< s(108)
s(97) =< s(102)
s(98) =< s(102)
s(97) =< s(101)
s(99) =< s(101)
s(97) =< s(94)
s(99) =< s(94)
s(91) =< s(96)
s(92) =< s(96)
s(91) =< s(95)
s(93) =< s(95)
s(91) =< s(94)
s(93) =< s(94)

  with precondition: [B=4,V_m>=1,V_N>=0,V_i_0>=0,V_n>=V_i_0+2] 

* Chain [35]: 0
  with precondition: [B=4,V_n>=0,V_m>=0,V_i_0>=V_n,V_N+V_n>=V_i_0] 

* Chain [34]: 0
  with precondition: [B=4,V_m>=0,V_N>=0,V_i_0>=0,V_n>=V_i_0+1] 


#### Cost of chains of eval_nested_loop_bb0_in(V_n,V_m,V_N,B):
* Chain [44]: 0
  with precondition: [V_n=0,V_m>=0,V_N>=0] 

* Chain [43]: 1*s(121)+0
  Such that:s(121) =< V_n

  with precondition: [V_m=0,V_n>=1,V_N>=0] 

* Chain [42]: 1*s(122)+0
  Such that:s(122) =< V_n

  with precondition: [V_m=0,V_n>=2,V_N>=0] 

* Chain [41]: 0
  with precondition: [0>=V_n+1] 

* Chain [40]: 0
  with precondition: [0>=V_m+1] 

* Chain [39]: 0
  with precondition: [0>=V_N+1] 

* Chain [38]: 0
  with precondition: [V_n>=1,V_m>=0,V_N>=0] 

* Chain [37]: 2*s(131)+3*s(132)+2*s(133)+6*s(134)+1*s(137)+2*s(144)+11*s(147)+6*s(148)+3*s(149)+2*s(150)+1*s(151)+1*s(152)+1*s(153)+1*s(154)+1*s(155)+1*s(156)+1*s(157)+0
  Such that:s(123) =< V_n
s(129) =< V_n+V_N
s(124) =< V_n/2
s(130) =< V_n/2+V_N/2
s(125) =< V_m
s(126) =< V_N
s(127) =< V_N+1
s(128) =< V_N/2
s(131) =< s(129)
s(132) =< s(129)
s(133) =< s(129)
s(134) =< s(129)
s(131) =< s(123)
s(132) =< s(123)
s(133) =< s(123)
s(134) =< s(123)
s(133) =< s(124)
s(134) =< s(124)
s(133) =< s(130)
s(134) =< s(130)
s(131) =< s(126)
s(133) =< s(126)
s(134) =< s(126)
s(135) =< s(126)
s(134) =< s(127)
s(136) =< s(127)
s(137) =< s(127)
s(135) =< s(129)
s(136) =< s(129)
s(137) =< s(129)
s(133) =< s(128)
s(134) =< s(128)
s(138) =< s(125)
s(139) =< s(126)
s(140) =< s(131)*s(126)
s(141) =< s(131)*s(125)
s(142) =< s(134)*s(138)
s(143) =< s(133)*s(138)
s(144) =< s(132)*s(138)
s(145) =< s(131)*s(138)
s(146) =< s(131)*s(139)
s(147) =< s(136)
s(148) =< s(142)
s(149) =< s(142)
s(149) =< s(136)
s(150) =< s(143)
s(151) =< s(143)
s(151) =< s(136)
s(152) =< s(145)
s(153) =< s(145)
s(152) =< s(146)
s(154) =< s(146)
s(152) =< s(135)
s(154) =< s(135)
s(155) =< s(141)
s(156) =< s(141)
s(155) =< s(140)
s(157) =< s(140)
s(155) =< s(135)
s(157) =< s(135)

  with precondition: [V_n>=1,V_m>=1,V_N>=0] 

* Chain [36]: 2*s(165)+3*s(166)+2*s(167)+6*s(168)+1*s(171)+2*s(178)+11*s(181)+6*s(182)+3*s(183)+2*s(184)+1*s(185)+1*s(186)+1*s(187)+1*s(188)+1*s(189)+1*s(190)+1*s(191)+0
  Such that:s(163) =< V_n
s(158) =< V_n+V_N
s(164) =< V_n/2
s(159) =< V_m
s(160) =< V_N
s(161) =< V_N+1
s(162) =< V_N/2
s(165) =< s(158)
s(166) =< s(158)
s(167) =< s(158)
s(168) =< s(158)
s(165) =< s(163)
s(166) =< s(163)
s(167) =< s(163)
s(168) =< s(163)
s(167) =< s(164)
s(168) =< s(164)
s(165) =< s(160)
s(167) =< s(160)
s(168) =< s(160)
s(169) =< s(160)
s(168) =< s(161)
s(170) =< s(161)
s(171) =< s(161)
s(169) =< s(163)
s(170) =< s(163)
s(171) =< s(163)
s(167) =< s(162)
s(168) =< s(162)
s(172) =< s(159)
s(173) =< s(160)
s(174) =< s(165)*s(160)
s(175) =< s(165)*s(159)
s(176) =< s(168)*s(172)
s(177) =< s(167)*s(172)
s(178) =< s(166)*s(172)
s(179) =< s(165)*s(172)
s(180) =< s(165)*s(173)
s(181) =< s(170)
s(182) =< s(176)
s(183) =< s(176)
s(183) =< s(170)
s(184) =< s(177)
s(185) =< s(177)
s(185) =< s(170)
s(186) =< s(179)
s(187) =< s(179)
s(186) =< s(180)
s(188) =< s(180)
s(186) =< s(169)
s(188) =< s(169)
s(189) =< s(175)
s(190) =< s(175)
s(189) =< s(174)
s(191) =< s(174)
s(189) =< s(169)
s(191) =< s(169)

  with precondition: [V_n>=2,V_m>=1,V_N>=0] 


#### Cost of chains of eval_nested_loop_start(V_n,V_m,V_N,B):
* Chain [53]: 0
  with precondition: [V_n=0,V_m>=0,V_N>=0] 

* Chain [52]: 1*s(192)+0
  Such that:s(192) =< V_n

  with precondition: [V_m=0,V_n>=1,V_N>=0] 

* Chain [51]: 1*s(193)+0
  Such that:s(193) =< V_n

  with precondition: [V_m=0,V_n>=2,V_N>=0] 

* Chain [50]: 0
  with precondition: [0>=V_n+1] 

* Chain [49]: 0
  with precondition: [0>=V_m+1] 

* Chain [48]: 0
  with precondition: [0>=V_N+1] 

* Chain [47]: 0
  with precondition: [V_n>=1,V_m>=0,V_N>=0] 

* Chain [46]: 2*s(202)+3*s(203)+2*s(204)+6*s(205)+1*s(208)+2*s(215)+11*s(218)+6*s(219)+3*s(220)+2*s(221)+1*s(222)+1*s(223)+1*s(224)+1*s(225)+1*s(226)+1*s(227)+1*s(228)+0
  Such that:s(194) =< V_n
s(195) =< V_n+V_N
s(196) =< V_n/2
s(197) =< V_n/2+V_N/2
s(198) =< V_m
s(199) =< V_N
s(200) =< V_N+1
s(201) =< V_N/2
s(202) =< s(195)
s(203) =< s(195)
s(204) =< s(195)
s(205) =< s(195)
s(202) =< s(194)
s(203) =< s(194)
s(204) =< s(194)
s(205) =< s(194)
s(204) =< s(196)
s(205) =< s(196)
s(204) =< s(197)
s(205) =< s(197)
s(202) =< s(199)
s(204) =< s(199)
s(205) =< s(199)
s(206) =< s(199)
s(205) =< s(200)
s(207) =< s(200)
s(208) =< s(200)
s(206) =< s(195)
s(207) =< s(195)
s(208) =< s(195)
s(204) =< s(201)
s(205) =< s(201)
s(209) =< s(198)
s(210) =< s(199)
s(211) =< s(202)*s(199)
s(212) =< s(202)*s(198)
s(213) =< s(205)*s(209)
s(214) =< s(204)*s(209)
s(215) =< s(203)*s(209)
s(216) =< s(202)*s(209)
s(217) =< s(202)*s(210)
s(218) =< s(207)
s(219) =< s(213)
s(220) =< s(213)
s(220) =< s(207)
s(221) =< s(214)
s(222) =< s(214)
s(222) =< s(207)
s(223) =< s(216)
s(224) =< s(216)
s(223) =< s(217)
s(225) =< s(217)
s(223) =< s(206)
s(225) =< s(206)
s(226) =< s(212)
s(227) =< s(212)
s(226) =< s(211)
s(228) =< s(211)
s(226) =< s(206)
s(228) =< s(206)

  with precondition: [V_n>=1,V_m>=1,V_N>=0] 

* Chain [45]: 2*s(236)+3*s(237)+2*s(238)+6*s(239)+1*s(242)+2*s(249)+11*s(252)+6*s(253)+3*s(254)+2*s(255)+1*s(256)+1*s(257)+1*s(258)+1*s(259)+1*s(260)+1*s(261)+1*s(262)+0
  Such that:s(229) =< V_n
s(230) =< V_n+V_N
s(231) =< V_n/2
s(232) =< V_m
s(233) =< V_N
s(234) =< V_N+1
s(235) =< V_N/2
s(236) =< s(230)
s(237) =< s(230)
s(238) =< s(230)
s(239) =< s(230)
s(236) =< s(229)
s(237) =< s(229)
s(238) =< s(229)
s(239) =< s(229)
s(238) =< s(231)
s(239) =< s(231)
s(236) =< s(233)
s(238) =< s(233)
s(239) =< s(233)
s(240) =< s(233)
s(239) =< s(234)
s(241) =< s(234)
s(242) =< s(234)
s(240) =< s(229)
s(241) =< s(229)
s(242) =< s(229)
s(238) =< s(235)
s(239) =< s(235)
s(243) =< s(232)
s(244) =< s(233)
s(245) =< s(236)*s(233)
s(246) =< s(236)*s(232)
s(247) =< s(239)*s(243)
s(248) =< s(238)*s(243)
s(249) =< s(237)*s(243)
s(250) =< s(236)*s(243)
s(251) =< s(236)*s(244)
s(252) =< s(241)
s(253) =< s(247)
s(254) =< s(247)
s(254) =< s(241)
s(255) =< s(248)
s(256) =< s(248)
s(256) =< s(241)
s(257) =< s(250)
s(258) =< s(250)
s(257) =< s(251)
s(259) =< s(251)
s(257) =< s(240)
s(259) =< s(240)
s(260) =< s(246)
s(261) =< s(246)
s(260) =< s(245)
s(262) =< s(245)
s(260) =< s(240)
s(262) =< s(240)

  with precondition: [V_n>=2,V_m>=1,V_N>=0] 


Closed-form bounds of eval_nested_loop_start(V_n,V_m,V_N,B): 
-------------------------------------
* Chain [53] with precondition: [V_n=0,V_m>=0,V_N>=0] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [52] with precondition: [V_m=0,V_n>=1,V_N>=0] 
    - Upper bound: V_n 
    - Complexity: n 
* Chain [51] with precondition: [V_m=0,V_n>=2,V_N>=0] 
    - Upper bound: V_n 
    - Complexity: n 
* Chain [50] with precondition: [0>=V_n+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [49] with precondition: [0>=V_m+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [48] with precondition: [0>=V_N+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [47] with precondition: [V_n>=1,V_m>=0,V_N>=0] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [46] with precondition: [V_n>=1,V_m>=1,V_N>=0] 
    - Upper bound: (V_n+V_N)*(12*V_m)+4*V_N+(13*V_n+13*V_N)+(16*V_N+16) 
    - Complexity: n^2 
* Chain [45] with precondition: [V_n>=2,V_m>=1,V_N>=0] 
    - Upper bound: (V_n+V_N)*(12*V_m)+4*V_N+(13*V_n+13*V_N)+(16*V_N+16) 
    - Complexity: n^2 

### Maximum cost of eval_nested_loop_start(V_n,V_m,V_N,B): max([nat(V_n),nat(V_m)*12*nat(V_n+V_N)+nat(V_N)*4+nat(V_n+V_N)*13+nat(V_N+1)*16]) 
Asymptotic class: n^2 
* Total analysis performed in 464 ms.

