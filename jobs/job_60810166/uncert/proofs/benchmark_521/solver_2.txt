MAYBE
WARNING: Excluded non-linear constraints:[D*D-A*(A*(A*(A*A)))+1=<2*C-B]
WARNING: Excluded non-linear constraints:[D*D-A*(A*(A*(A*A)))+1=<2*C-B]
WARNING: Excluded non-linear constraints:[D*D-A*(A*(A*(A*A)))>=2*C-B]
WARNING: Excluded non-linear constraints:[F= -4*C+2*(C*C)+3*B+A*A,G=C+C*C+A*A]
WARNING: Excluded non-linear constraints:[B*B-C*(C*(C*(C*C)))>=2*D-E]

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_non_linear14_4/5,eval_non_linear14_5/6,eval_non_linear14_7/5,eval_non_linear14_8/6,eval_non_linear14_bb1_in/4,eval_non_linear14_bb2_in/4,eval_non_linear14_bb3_in/4,eval_non_linear14_bb4_in/4]
1. recursive  : [eval_non_linear14_bb5_in/5,eval_non_linear14_bb6_in/5]
2. non_recursive  : [eval_non_linear14_stop/1]
3. non_recursive  : [eval_non_linear14_bb7_in/1]
4. non_recursive  : [eval_non_linear14_bb5_in_loop_cont/2]
5. non_recursive  : [eval_non_linear14_bb1_in_loop_cont/6]
6. non_recursive  : [eval_non_linear14_2/8]
7. non_recursive  : [eval_non_linear14_1/7]
8. non_recursive  : [eval_non_linear14_0/6]
9. non_recursive  : [eval_non_linear14_bb0_in/6]
10. non_recursive  : [eval_non_linear14_start/7]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_non_linear14_bb1_in/4
1. SCC is partially evaluated into eval_non_linear14_bb5_in/5
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_non_linear14_bb1_in_loop_cont/6
6. SCC is partially evaluated into eval_non_linear14_2/8
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_non_linear14_start/7

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_non_linear14_bb1_in/4 
* CE 10 is refined into CE [16] 
* CE 11 is refined into CE [17] 
* CE 3 is refined into CE [18] 
* CE 8 is refined into CE [19] 
* CE 7 is refined into CE [20] 
* CE 9 is refined into CE [21] 
* CE 4 is refined into CE [22] 
* CE 5 is refined into CE [23] 
* CE 6 is refined into CE [24] 


### Cost equations --> "Loop" of eval_non_linear14_bb1_in/4 
* CEs [18] --> Loop 16 
* CEs [19] --> Loop 17 
* CEs [20] --> Loop 18 
* CEs [21] --> Loop 19 
* CEs [22] --> Loop 20 
* CEs [23] --> Loop 21 
* CEs [24] --> Loop 22 
* CEs [16] --> Loop 23 
* CEs [17] --> Loop 24 

### Ranking functions of CR eval_non_linear14_bb1_in(V_v_0,V__01,V__0,B) 

#### Partial ranking functions of CR eval_non_linear14_bb1_in(V_v_0,V__01,V__0,B) 
* Partial RF of phase [23,24]:
  - RF of loop [23:1]:
    V__01-1
  - RF of loop [24:1]:
    -V__0+4


### Specialization of cost equations eval_non_linear14_bb5_in/5 
* CE 15 is refined into CE [25] 
* CE 13 is refined into CE [26] 
* CE 14 is refined into CE [27] 


### Cost equations --> "Loop" of eval_non_linear14_bb5_in/5 
* CEs [26] --> Loop 25 
* CEs [27] --> Loop 26 
* CEs [25] --> Loop 27 

### Ranking functions of CR eval_non_linear14_bb5_in(V_x3,V__05,V__04,V__03,B) 

#### Partial ranking functions of CR eval_non_linear14_bb5_in(V_x3,V__05,V__04,V__03,B) 
* Partial RF of phase [25,26]:
  - RF of loop [25:1]:
    2/3*V__03-1/3 depends on loops [26:1] 
  - RF of loop [26:1]:
    -2/3*V__03-1/3 depends on loops [25:1] 


### Specialization of cost equations eval_non_linear14_bb1_in_loop_cont/6 
* CE 12 is refined into CE [28,29] 


### Cost equations --> "Loop" of eval_non_linear14_bb1_in_loop_cont/6 
* CEs [29] --> Loop 28 
* CEs [28] --> Loop 29 

### Ranking functions of CR eval_non_linear14_bb1_in_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR eval_non_linear14_bb1_in_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations eval_non_linear14_2/8 
* CE 2 is refined into CE [30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47] 


### Cost equations --> "Loop" of eval_non_linear14_2/8 
* CEs [47] --> Loop 30 
* CEs [39] --> Loop 31 
* CEs [37] --> Loop 32 
* CEs [33] --> Loop 33 
* CEs [35] --> Loop 34 
* CEs [43] --> Loop 35 
* CEs [45] --> Loop 36 
* CEs [41] --> Loop 37 
* CEs [31] --> Loop 38 
* CEs [46] --> Loop 39 
* CEs [38] --> Loop 40 
* CEs [36] --> Loop 41 
* CEs [32] --> Loop 42 
* CEs [34] --> Loop 43 
* CEs [42] --> Loop 44 
* CEs [44] --> Loop 45 
* CEs [40] --> Loop 46 
* CEs [30] --> Loop 47 

### Ranking functions of CR eval_non_linear14_2(V_x2,V_x3,V_x4,V_y1,V_y2,V_0,V_1,B) 

#### Partial ranking functions of CR eval_non_linear14_2(V_x2,V_x3,V_x4,V_y1,V_y2,V_0,V_1,B) 


### Specialization of cost equations eval_non_linear14_start/7 
* CE 1 is refined into CE [48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65] 


### Cost equations --> "Loop" of eval_non_linear14_start/7 
* CEs [57] --> Loop 48 
* CEs [58,59,60] --> Loop 49 
* CEs [61,62,63,64,65] --> Loop 50 
* CEs [48] --> Loop 51 
* CEs [49,50,51] --> Loop 52 
* CEs [52,53,54,55,56] --> Loop 53 

### Ranking functions of CR eval_non_linear14_start(V_x1,V_x2,V_x3,V_x4,V_y1,V_y2,B) 

#### Partial ranking functions of CR eval_non_linear14_start(V_x1,V_x2,V_x3,V_x4,V_y1,V_y2,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_non_linear14_bb1_in(V_v_0,V__01,V__0,B):
* Chain [[23,24],22]: 1*it(23)+1*it(24)+0
  Such that:it(23) =< V__01
it(24) =< -V__0

  with precondition: [V_v_0=1,B=3,0>=V__0,V__01>=2] 

* Chain [[23,24],21]: 1*it(23)+1*it(24)+0
  Such that:it(23) =< V__01
it(24) =< -V__0+4

  with precondition: [B=3,1>=V_v_0,V_v_0>=0] 

* Chain [[23,24],20]: 1*it(23)+1*it(24)+0
  Such that:it(23) =< V__01
it(24) =< -V__0+4

  with precondition: [B=3,1>=V_v_0,V_v_0>=0] 

* Chain [[23,24],19]: 1*it(23)+1*it(24)+0
  Such that:it(23) =< V__01
it(24) =< -V__0

  with precondition: [V_v_0=1,B=3,0>=V__0,V__01>=2] 

* Chain [[23,24],18]: 1*it(23)+1*it(24)+0
  Such that:it(23) =< V__01
it(24) =< -V__0+4

  with precondition: [B=3,1>=V_v_0,V_v_0>=0] 

* Chain [[23,24],17]: 1*it(23)+1*it(24)+0
  Such that:it(23) =< V__01
it(24) =< -V__0+4

  with precondition: [B=3,1>=V_v_0,V_v_0>=0] 

* Chain [[23,24],16]: 1*it(23)+1*it(24)+0
  Such that:it(23) =< V__01
it(24) =< -V__0+4

  with precondition: [B=3,1>=V_v_0,V_v_0>=0] 

* Chain [22]: 0
  with precondition: [B=3,0>=V_v_0,0>=V__0] 

* Chain [21]: 0
  with precondition: [B=3,0>=V_v_0,V__0>=4] 

* Chain [20]: 0
  with precondition: [B=3,0>=V_v_0+1] 

* Chain [19]: 0
  with precondition: [B=3,1>=V__01,0>=V__0] 

* Chain [18]: 0
  with precondition: [B=3,1>=V__01,V_v_0>=1] 

* Chain [17]: 0
  with precondition: [B=3,1>=V__01,V__0>=4] 

* Chain [16]: 0
  with precondition: [B=3,V_v_0>=2] 


#### Cost of chains of eval_non_linear14_bb5_in(V_x3,V__05,V__04,V__03,B):
* Chain [[25,26]]...: 2*it(25)+0
  with precondition: [B=2] 

* Chain [[25,26],27]: 2*it(25)+0
  with precondition: [B=2] 

* Chain [27]: 0
  with precondition: [B=2] 


#### Cost of chains of eval_non_linear14_bb1_in_loop_cont(A,B,C,D,E,F):
* Chain [29]: 1*s(16)+0
  with precondition: [A=3] 

* Chain [28]...: 2*s(17)+0
  with precondition: [A=3] 


#### Cost of chains of eval_non_linear14_2(V_x2,V_x3,V_x4,V_y1,V_y2,V_0,V_1,B):
* Chain [47]: 2*s(20)+2*s(21)+1*s(22)+0
  Such that:s(18) =< V_x2
s(19) =< -V_0
s(20) =< s(18)
s(21) =< s(19)

  with precondition: [V_1=1,0>=V_0,V_x2>=2] 

* Chain [46]: 1*s(23)+0
  with precondition: [1>=V_x2,0>=V_0] 

* Chain [45]: 1*s(24)+0
  with precondition: [1>=V_x2,V_0>=4] 

* Chain [44]: 1*s(25)+0
  with precondition: [1>=V_x2,V_1>=1] 

* Chain [43]: 1*s(26)+0
  with precondition: [0>=V_0,0>=V_1] 

* Chain [42]: 5*s(29)+5*s(30)+1*s(31)+0
  Such that:s(27) =< V_x2
s(28) =< -V_0+4
s(29) =< s(27)
s(30) =< s(28)

  with precondition: [1>=V_1,V_1>=0] 

* Chain [41]: 1*s(32)+0
  with precondition: [0>=V_1,V_0>=4] 

* Chain [40]: 1*s(33)+0
  with precondition: [0>=V_1+1] 

* Chain [39]: 1*s(34)+0
  with precondition: [V_1>=2] 

* Chain [38]...: 2*s(37)+2*s(38)+2*s(39)+0
  Such that:s(35) =< V_x2
s(36) =< -V_0
s(37) =< s(35)
s(38) =< s(36)

  with precondition: [V_1=1,0>=V_0,V_x2>=2] 

* Chain [37]...: 2*s(40)+0
  with precondition: [1>=V_x2,0>=V_0] 

* Chain [36]...: 2*s(41)+0
  with precondition: [1>=V_x2,V_0>=4] 

* Chain [35]...: 2*s(42)+0
  with precondition: [1>=V_x2,V_1>=1] 

* Chain [34]...: 2*s(43)+0
  with precondition: [0>=V_0,0>=V_1] 

* Chain [33]...: 5*s(46)+5*s(47)+2*s(48)+0
  Such that:s(44) =< V_x2
s(45) =< -V_0+4
s(46) =< s(44)
s(47) =< s(45)

  with precondition: [1>=V_1,V_1>=0] 

* Chain [32]...: 2*s(49)+0
  with precondition: [0>=V_1,V_0>=4] 

* Chain [31]...: 2*s(50)+0
  with precondition: [0>=V_1+1] 

* Chain [30]...: 2*s(51)+0
  with precondition: [V_1>=2] 


#### Cost of chains of eval_non_linear14_start(V_x1,V_x2,V_x3,V_x4,V_y1,V_y2,B):
* Chain [53]: 10*s(52)+5*s(55)+0
  Such that:s(53) =< V_x2
s(55) =< s(53)

  with precondition: [] 

* Chain [52]: 1*aux(86)+0
  with precondition: [1>=V_x2] 

* Chain [51]: 2*s(66)+2*s(67)+1*s(68)+0
  Such that:s(64) =< V_x2
s(66) =< s(64)

  with precondition: [V_x2>=2] 

* Chain [50]...: 15*s(69)+5*s(72)+0
  Such that:s(70) =< V_x2
s(72) =< s(70)

  with precondition: [] 

* Chain [49]...: 1*aux(87)+0
  with precondition: [1>=V_x2] 

* Chain [48]...: 2*s(83)+2*s(84)+2*s(85)+0
  Such that:s(81) =< V_x2
s(83) =< s(81)

  with precondition: [V_x2>=2] 


Closed-form bounds of eval_non_linear14_start(V_x1,V_x2,V_x3,V_x4,V_y1,V_y2,B): 
-------------------------------------
* Chain [53] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [52] with precondition: [1>=V_x2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [51] with precondition: [V_x2>=2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [50]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [49]... with precondition: [1>=V_x2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [48]... with precondition: [V_x2>=2] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_non_linear14_start(V_x1,V_x2,V_x3,V_x4,V_y1,V_y2,B): inf 
Asymptotic class: infinity 
* Total analysis performed in 161 ms.

