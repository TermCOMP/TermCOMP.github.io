MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_foo_bb1_in/2,eval_foo_bb2_in/2,eval_foo_bb3_in/2,eval_foo_bb4_in/2]
1. non_recursive  : [eval_foo_stop/1]
2. non_recursive  : [eval_foo_bb5_in/1]
3. non_recursive  : [eval_foo_bb1_in_loop_cont/2]
4. non_recursive  : [eval_foo_bb0_in/2]
5. non_recursive  : [eval_foo_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_foo_bb1_in/2
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_foo_bb0_in/2
5. SCC is partially evaluated into eval_foo_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_foo_bb1_in/2 
* CE 7 is refined into CE [8] 
* CE 4 is refined into CE [9] 
* CE 3 is refined into CE [10] 
* CE 6 is refined into CE [11] 
* CE 5 is refined into CE [12] 


### Cost equations --> "Loop" of eval_foo_bb1_in/2 
* CEs [9] --> Loop 8 
* CEs [10] --> Loop 9 
* CEs [11] --> Loop 10 
* CEs [12] --> Loop 11 
* CEs [8] --> Loop 12 

### Ranking functions of CR eval_foo_bb1_in(V__0,B) 

#### Partial ranking functions of CR eval_foo_bb1_in(V__0,B) 


### Specialization of cost equations eval_foo_bb0_in/2 
* CE 2 is refined into CE [13,14,15,16,17] 


### Cost equations --> "Loop" of eval_foo_bb0_in/2 
* CEs [17] --> Loop 13 
* CEs [16] --> Loop 14 
* CEs [15] --> Loop 15 
* CEs [14] --> Loop 16 
* CEs [13] --> Loop 17 

### Ranking functions of CR eval_foo_bb0_in(V_i,B) 

#### Partial ranking functions of CR eval_foo_bb0_in(V_i,B) 


### Specialization of cost equations eval_foo_start/2 
* CE 1 is refined into CE [18,19,20,21,22] 


### Cost equations --> "Loop" of eval_foo_start/2 
* CEs [22] --> Loop 18 
* CEs [21] --> Loop 19 
* CEs [20] --> Loop 20 
* CEs [19] --> Loop 21 
* CEs [18] --> Loop 22 

### Ranking functions of CR eval_foo_start(V_i,B) 

#### Partial ranking functions of CR eval_foo_start(V_i,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_foo_bb1_in(V__0,B):
* Chain [[9]]...: 1*it(9)+0
  with precondition: [V__0>=6,B=2] 

* Chain [[8]]...: 1*it(8)+0
  with precondition: [0>=V__0+6,B=2] 

* Chain [12]: 0
  with precondition: [V__0=0,B=2] 

* Chain [11,12]: 1
  with precondition: [B=2,5>=V__0,V__0>=1] 

* Chain [10,12]: 1
  with precondition: [B=2,0>=V__0+1,V__0+5>=0] 


#### Cost of chains of eval_foo_bb0_in(V_i,B):
* Chain [17]: 0
  with precondition: [V_i=0] 

* Chain [16]: 1
  with precondition: [5>=V_i,V_i>=1] 

* Chain [15]: 1
  with precondition: [0>=V_i+1,V_i+5>=0] 

* Chain [14]...: 1*s(1)+0
  with precondition: [0>=V_i+6] 

* Chain [13]...: 1*s(2)+0
  with precondition: [V_i>=6] 


#### Cost of chains of eval_foo_start(V_i,B):
* Chain [22]: 0
  with precondition: [V_i=0] 

* Chain [21]: 1
  with precondition: [5>=V_i,V_i>=1] 

* Chain [20]: 1
  with precondition: [0>=V_i+1,V_i+5>=0] 

* Chain [19]...: 1*s(3)+0
  with precondition: [0>=V_i+6] 

* Chain [18]...: 1*s(4)+0
  with precondition: [V_i>=6] 


Closed-form bounds of eval_foo_start(V_i,B): 
-------------------------------------
* Chain [22] with precondition: [V_i=0] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [21] with precondition: [5>=V_i,V_i>=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [20] with precondition: [0>=V_i+1,V_i+5>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [19]... with precondition: [0>=V_i+6] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [18]... with precondition: [V_i>=6] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_foo_start(V_i,B): inf 
Asymptotic class: infinity 
* Total analysis performed in 31 ms.

