WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_noiseTickSize_0/4,eval_noiseTickSize_1/5,eval_noiseTickSize_bb1_in/4]
1. non_recursive  : [eval_noiseTickSize_stop/1]
2. non_recursive  : [eval_noiseTickSize_bb2_in/1]
3. non_recursive  : [eval_noiseTickSize_bb1_in_loop_cont/2]
4. non_recursive  : [eval_noiseTickSize_bb0_in/2]
5. non_recursive  : [eval_noiseTickSize_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_noiseTickSize_bb1_in/4
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_noiseTickSize_bb1_in_loop_cont/2
4. SCC is partially evaluated into eval_noiseTickSize_bb0_in/2
5. SCC is partially evaluated into eval_noiseTickSize_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_noiseTickSize_bb1_in/4 
* CE 5 is refined into CE [8] 
* CE 6 is refined into CE [9] 
* CE 3 is refined into CE [10] 
* CE 4 is refined into CE [11] 


### Cost equations --> "Loop" of eval_noiseTickSize_bb1_in/4 
* CEs [10] --> Loop 8 
* CEs [11] --> Loop 9 
* CEs [8] --> Loop 10 
* CEs [9] --> Loop 11 

### Ranking functions of CR eval_noiseTickSize_bb1_in(V_DELTAS,V_j_0,V_i_0,B) 

#### Partial ranking functions of CR eval_noiseTickSize_bb1_in(V_DELTAS,V_j_0,V_i_0,B) 
* Partial RF of phase [10,11]:
  - RF of loop [10:1]:
    -V_j_0+10001 depends on loops [11:1] 
  - RF of loop [11:1]:
    V_DELTAS-V_i_0-1


### Specialization of cost equations eval_noiseTickSize_bb1_in_loop_cont/2 
* CE 7 is refined into CE [12] 


### Cost equations --> "Loop" of eval_noiseTickSize_bb1_in_loop_cont/2 
* CEs [12] --> Loop 12 

### Ranking functions of CR eval_noiseTickSize_bb1_in_loop_cont(A,B) 

#### Partial ranking functions of CR eval_noiseTickSize_bb1_in_loop_cont(A,B) 


### Specialization of cost equations eval_noiseTickSize_bb0_in/2 
* CE 2 is refined into CE [13,14] 


### Cost equations --> "Loop" of eval_noiseTickSize_bb0_in/2 
* CEs [14] --> Loop 13 
* CEs [13] --> Loop 14 

### Ranking functions of CR eval_noiseTickSize_bb0_in(V_DELTAS,B) 

#### Partial ranking functions of CR eval_noiseTickSize_bb0_in(V_DELTAS,B) 


### Specialization of cost equations eval_noiseTickSize_start/2 
* CE 1 is refined into CE [15,16] 


### Cost equations --> "Loop" of eval_noiseTickSize_start/2 
* CEs [16] --> Loop 15 
* CEs [15] --> Loop 16 

### Ranking functions of CR eval_noiseTickSize_start(V_DELTAS,B) 

#### Partial ranking functions of CR eval_noiseTickSize_start(V_DELTAS,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_noiseTickSize_bb1_in(V_DELTAS,V_j_0,V_i_0,B):
* Chain [[10,11],9]: 1*it(10)+1*it(11)+0
  Such that:aux(2) =< -V_j_0+10001
aux(6) =< V_DELTAS-V_i_0
it(11) =< aux(6)
aux(1) =< aux(6)*10000
it(10) =< aux(1)+aux(2)

  with precondition: [B=2,V_i_0>=0,V_DELTAS>=V_i_0+1] 

* Chain [[10,11],8]: 1*it(10)+1*it(11)+0
  Such that:aux(2) =< -V_j_0+10001
aux(7) =< V_DELTAS-V_i_0
it(11) =< aux(7)
aux(1) =< aux(7)*10000
it(10) =< aux(1)+aux(2)

  with precondition: [B=2,V_i_0>=0,V_DELTAS>=V_i_0+1] 

* Chain [8]: 0
  with precondition: [B=2,V_i_0>=0,V_i_0+1>=V_DELTAS] 


#### Cost of chains of eval_noiseTickSize_bb1_in_loop_cont(A,B):
* Chain [12]: 0
  with precondition: [A=2] 


#### Cost of chains of eval_noiseTickSize_bb0_in(V_DELTAS,B):
* Chain [14]: 0
  with precondition: [1>=V_DELTAS] 

* Chain [13]: 2*s(13)+2*s(15)+0
  Such that:s(12) =< 10001
s(11) =< V_DELTAS
s(13) =< s(11)
s(14) =< s(11)*10000
s(15) =< s(14)+s(12)

  with precondition: [V_DELTAS>=1] 


#### Cost of chains of eval_noiseTickSize_start(V_DELTAS,B):
* Chain [16]: 0
  with precondition: [1>=V_DELTAS] 

* Chain [15]: 2*s(18)+2*s(20)+0
  Such that:s(16) =< 10001
s(17) =< V_DELTAS
s(18) =< s(17)
s(19) =< s(17)*10000
s(20) =< s(19)+s(16)

  with precondition: [V_DELTAS>=1] 


Closed-form bounds of eval_noiseTickSize_start(V_DELTAS,B): 
-------------------------------------
* Chain [16] with precondition: [1>=V_DELTAS] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [15] with precondition: [V_DELTAS>=1] 
    - Upper bound: 20002*V_DELTAS+20002 
    - Complexity: n 

### Maximum cost of eval_noiseTickSize_start(V_DELTAS,B): nat(V_DELTAS)*20002+20002 
Asymptotic class: n 
* Total analysis performed in 37 ms.

