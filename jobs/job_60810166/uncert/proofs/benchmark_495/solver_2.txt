MAYBE
WARNING: Excluded non-linear constraints:[E=B*B-2*B+A+1]

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_size03_bb1_in/4,eval_size03_bb2_in/4]
1. recursive  : [eval_size03_bb3_in/2,eval_size03_bb4_in/2]
2. non_recursive  : [eval_size03_stop/1]
3. non_recursive  : [eval_size03_bb5_in/1]
4. non_recursive  : [eval_size03_bb3_in_loop_cont/2]
5. non_recursive  : [eval_size03_bb1_in_loop_cont/3]
6. non_recursive  : [eval_size03_bb0_in/3]
7. non_recursive  : [eval_size03_start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_size03_bb1_in/4
1. SCC is partially evaluated into eval_size03_bb3_in/2
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_size03_bb1_in_loop_cont/3
6. SCC is partially evaluated into eval_size03_bb0_in/3
7. SCC is partially evaluated into eval_size03_start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_size03_bb1_in/4 
* CE 4 is refined into CE [8] 
* CE 3 is refined into CE [9] 


### Cost equations --> "Loop" of eval_size03_bb1_in/4 
* CEs [9] --> Loop 8 
* CEs [8] --> Loop 9 

### Ranking functions of CR eval_size03_bb1_in(V__03,V__0,B,C) 
* RF of phase [8]: [V__0]

#### Partial ranking functions of CR eval_size03_bb1_in(V__03,V__0,B,C) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V__0


### Specialization of cost equations eval_size03_bb3_in/2 
* CE 7 is refined into CE [10] 
* CE 6 is refined into CE [11] 


### Cost equations --> "Loop" of eval_size03_bb3_in/2 
* CEs [11] --> Loop 10 
* CEs [10] --> Loop 11 

### Ranking functions of CR eval_size03_bb3_in(V__1,B) 
* RF of phase [10]: [V__1]

#### Partial ranking functions of CR eval_size03_bb3_in(V__1,B) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    V__1


### Specialization of cost equations eval_size03_bb1_in_loop_cont/3 
* CE 5 is refined into CE [12,13] 


### Cost equations --> "Loop" of eval_size03_bb1_in_loop_cont/3 
* CEs [13] --> Loop 12 
* CEs [12] --> Loop 13 

### Ranking functions of CR eval_size03_bb1_in_loop_cont(A,B,C) 

#### Partial ranking functions of CR eval_size03_bb1_in_loop_cont(A,B,C) 


### Specialization of cost equations eval_size03_bb0_in/3 
* CE 2 is refined into CE [14,15,16,17] 


### Cost equations --> "Loop" of eval_size03_bb0_in/3 
* CEs [16,17] --> Loop 14 
* CEs [15] --> Loop 15 
* CEs [14] --> Loop 16 

### Ranking functions of CR eval_size03_bb0_in(V_a,V_d,B) 

#### Partial ranking functions of CR eval_size03_bb0_in(V_a,V_d,B) 


### Specialization of cost equations eval_size03_start/5 
* CE 1 is refined into CE [18,19,20] 


### Cost equations --> "Loop" of eval_size03_start/5 
* CEs [20] --> Loop 17 
* CEs [19] --> Loop 18 
* CEs [18] --> Loop 19 

### Ranking functions of CR eval_size03_start(V_a,V_b,V_c,V_d,B) 

#### Partial ranking functions of CR eval_size03_start(V_a,V_b,V_c,V_d,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_size03_bb1_in(V__03,V__0,B,C):
* Chain [[8],9]: 1*it(8)+0
  Such that:it(8) =< V__0

  with precondition: [B=3,V__0>=1] 

* Chain [9]: 0
  with precondition: [B=3,C=V__03,0>=V__0] 


#### Cost of chains of eval_size03_bb3_in(V__1,B):
* Chain [[10],11]: 1*it(10)+0
  Such that:it(10) =< V__1

  with precondition: [B=2,V__1>=1] 

* Chain [11]: 0
  with precondition: [B=2,0>=V__1] 


#### Cost of chains of eval_size03_bb1_in_loop_cont(A,B,C):
* Chain [13]: 0
  with precondition: [A=3,0>=B] 

* Chain [12]: 1*s(1)+0
  Such that:s(1) =< B

  with precondition: [A=3,B>=1] 


#### Cost of chains of eval_size03_bb0_in(V_a,V_d,B):
* Chain [16]: 0
  with precondition: [0>=V_a,0>=V_d] 

* Chain [15]: 1*s(2)+0
  Such that:s(2) =< V_d

  with precondition: [0>=V_a,V_d>=1] 

* Chain [14]: 2*s(3)+1*s(5)+0
  Such that:aux(1) =< V_a
s(3) =< aux(1)

  with precondition: [V_a>=1] 


#### Cost of chains of eval_size03_start(V_a,V_b,V_c,V_d,B):
* Chain [19]: 0
  with precondition: [0>=V_a,0>=V_d] 

* Chain [18]: 1*s(6)+0
  Such that:s(6) =< V_d

  with precondition: [0>=V_a,V_d>=1] 

* Chain [17]: 2*s(8)+1*s(9)+0
  Such that:s(7) =< V_a
s(8) =< s(7)

  with precondition: [V_a>=1] 


Closed-form bounds of eval_size03_start(V_a,V_b,V_c,V_d,B): 
-------------------------------------
* Chain [19] with precondition: [0>=V_a,0>=V_d] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [18] with precondition: [0>=V_a,V_d>=1] 
    - Upper bound: V_d 
    - Complexity: n 
* Chain [17] with precondition: [V_a>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_size03_start(V_a,V_b,V_c,V_d,B): inf 
Asymptotic class: infinity 
* Total analysis performed in 31 ms.

