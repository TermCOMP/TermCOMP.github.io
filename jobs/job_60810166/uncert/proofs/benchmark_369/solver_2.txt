WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_speed_pldi10_ex4_bb2_in/7,eval_speed_pldi10_ex4_bb3_in/7]
1. recursive  : [eval_speed_pldi10_ex4_bb1_in/3,eval_speed_pldi10_ex4_bb2_in_loop_cont/4]
2. non_recursive  : [eval_speed_pldi10_ex4_stop/1]
3. non_recursive  : [eval_speed_pldi10_ex4_bb4_in/1]
4. non_recursive  : [eval_speed_pldi10_ex4_bb1_in_loop_cont/2]
5. non_recursive  : [eval_speed_pldi10_ex4_bb0_in/2]
6. non_recursive  : [eval_speed_pldi10_ex4_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_speed_pldi10_ex4_bb2_in/7
1. SCC is partially evaluated into eval_speed_pldi10_ex4_bb1_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_speed_pldi10_ex4_bb0_in/2
6. SCC is partially evaluated into eval_speed_pldi10_ex4_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_speed_pldi10_ex4_bb2_in/7 
* CE 6 is refined into CE [7] 
* CE 5 is refined into CE [8] 


### Cost equations --> "Loop" of eval_speed_pldi10_ex4_bb2_in/7 
* CEs [8] --> Loop 7 
* CEs [7] --> Loop 8 

### Ranking functions of CR eval_speed_pldi10_ex4_bb2_in(V_flag_0,V__0,V_flag_1,V__1,B,C,D) 
* RF of phase [7]: [V__1]

#### Partial ranking functions of CR eval_speed_pldi10_ex4_bb2_in(V_flag_0,V__0,V_flag_1,V__1,B,C,D) 
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    V__1


### Specialization of cost equations eval_speed_pldi10_ex4_bb1_in/3 
* CE 4 is refined into CE [9] 
* CE 3 is refined into CE [10,11] 


### Cost equations --> "Loop" of eval_speed_pldi10_ex4_bb1_in/3 
* CEs [10] --> Loop 9 
* CEs [11] --> Loop 10 
* CEs [9] --> Loop 11 

### Ranking functions of CR eval_speed_pldi10_ex4_bb1_in(V_flag_0,V__0,B) 

#### Partial ranking functions of CR eval_speed_pldi10_ex4_bb1_in(V_flag_0,V__0,B) 


### Specialization of cost equations eval_speed_pldi10_ex4_bb0_in/2 
* CE 2 is refined into CE [12,13] 


### Cost equations --> "Loop" of eval_speed_pldi10_ex4_bb0_in/2 
* CEs [13] --> Loop 12 
* CEs [12] --> Loop 13 

### Ranking functions of CR eval_speed_pldi10_ex4_bb0_in(V_n,B) 

#### Partial ranking functions of CR eval_speed_pldi10_ex4_bb0_in(V_n,B) 


### Specialization of cost equations eval_speed_pldi10_ex4_start/2 
* CE 1 is refined into CE [14,15] 


### Cost equations --> "Loop" of eval_speed_pldi10_ex4_start/2 
* CEs [15] --> Loop 14 
* CEs [14] --> Loop 15 

### Ranking functions of CR eval_speed_pldi10_ex4_start(V_n,B) 

#### Partial ranking functions of CR eval_speed_pldi10_ex4_start(V_n,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_speed_pldi10_ex4_bb2_in(V_flag_0,V__0,V_flag_1,V__1,B,C,D):
* Chain [[7],8]: 1*it(7)+0
  Such that:it(7) =< V__1

  with precondition: [B=2,C=1,D=0,1>=V_flag_1,V_flag_0>=1,V__1>=1] 

* Chain [8]: 0
  with precondition: [B=2,V_flag_1=C,V__1=D,1>=V_flag_1,0>=V__1,V_flag_0>=1] 


#### Cost of chains of eval_speed_pldi10_ex4_bb1_in(V_flag_0,V__0,B):
* Chain [10,11]: 1
  with precondition: [V_flag_0=1,B=3,0>=V__0] 

* Chain [9,10,11]: 1*s(1)+2
  Such that:s(1) =< V__0

  with precondition: [V_flag_0=1,B=3,V__0>=1] 


#### Cost of chains of eval_speed_pldi10_ex4_bb0_in(V_n,B):
* Chain [13]: 1
  with precondition: [0>=V_n] 

* Chain [12]: 1*s(2)+2
  Such that:s(2) =< V_n

  with precondition: [V_n>=1] 


#### Cost of chains of eval_speed_pldi10_ex4_start(V_n,B):
* Chain [15]: 1
  with precondition: [0>=V_n] 

* Chain [14]: 1*s(3)+2
  Such that:s(3) =< V_n

  with precondition: [V_n>=1] 


Closed-form bounds of eval_speed_pldi10_ex4_start(V_n,B): 
-------------------------------------
* Chain [15] with precondition: [0>=V_n] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [14] with precondition: [V_n>=1] 
    - Upper bound: V_n+2 
    - Complexity: n 

### Maximum cost of eval_speed_pldi10_ex4_start(V_n,B): nat(V_n)+1+1 
Asymptotic class: n 
* Total analysis performed in 39 ms.

