MAYBE
WARNING: Excluded non-linear constraints:[F=B+A*A,G=C+A*(A*A)]

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_size15_4/5,eval_size15_5/6,eval_size15_7/5,eval_size15_8/6,eval_size15_bb1_in/4,eval_size15_bb2_in/4,eval_size15_bb3_in/4,eval_size15_bb4_in/4]
1. recursive  : [eval_size15_bb5_in/5,eval_size15_bb6_in/5]
2. recursive  : [eval_size15_bb7_in/2,eval_size15_bb8_in/2]
3. non_recursive  : [eval_size15_stop/1]
4. non_recursive  : [eval_size15_bb9_in/1]
5. non_recursive  : [eval_size15_bb7_in_loop_cont/2]
6. non_recursive  : [eval_size15_bb5_in_loop_cont/3]
7. non_recursive  : [eval_size15_bb1_in_loop_cont/5]
8. non_recursive  : [eval_size15_2/7]
9. non_recursive  : [eval_size15_1/6]
10. non_recursive  : [eval_size15_0/5]
11. non_recursive  : [eval_size15_bb0_in/5]
12. non_recursive  : [eval_size15_start/7]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_size15_bb1_in/4
1. SCC is partially evaluated into eval_size15_bb5_in/5
2. SCC is partially evaluated into eval_size15_bb7_in/2
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_size15_bb5_in_loop_cont/3
7. SCC is partially evaluated into eval_size15_bb1_in_loop_cont/5
8. SCC is partially evaluated into eval_size15_2/7
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_size15_start/7

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_size15_bb1_in/4 
* CE 10 is refined into CE [20] 
* CE 11 is refined into CE [21] 
* CE 3 is refined into CE [22] 
* CE 8 is refined into CE [23] 
* CE 7 is refined into CE [24] 
* CE 9 is refined into CE [25] 
* CE 4 is refined into CE [26] 
* CE 5 is refined into CE [27] 
* CE 6 is refined into CE [28] 


### Cost equations --> "Loop" of eval_size15_bb1_in/4 
* CEs [22] --> Loop 20 
* CEs [23] --> Loop 21 
* CEs [24] --> Loop 22 
* CEs [25] --> Loop 23 
* CEs [26] --> Loop 24 
* CEs [27] --> Loop 25 
* CEs [28] --> Loop 26 
* CEs [20] --> Loop 27 
* CEs [21] --> Loop 28 

### Ranking functions of CR eval_size15_bb1_in(V__03,V__01,V__0,B) 

#### Partial ranking functions of CR eval_size15_bb1_in(V__03,V__01,V__0,B) 
* Partial RF of phase [27,28]:
  - RF of loop [27:1]:
    V__01-1
  - RF of loop [28:1]:
    -V__0+4


### Specialization of cost equations eval_size15_bb5_in/5 
* CE 15 is refined into CE [29] 
* CE 16 is refined into CE [30] 
* CE 13 is refined into CE [31] 
* CE 14 is refined into CE [32] 


### Cost equations --> "Loop" of eval_size15_bb5_in/5 
* CEs [31] --> Loop 29 
* CEs [32] --> Loop 30 
* CEs [29] --> Loop 31 
* CEs [30] --> Loop 32 

### Ranking functions of CR eval_size15_bb5_in(V__08,V__06,V__05,B,C) 
* RF of phase [30]: [-V__08]

#### Partial ranking functions of CR eval_size15_bb5_in(V__08,V__06,V__05,B,C) 
* Partial RF of phase [30]:
  - RF of loop [30:1]:
    -V__08


### Specialization of cost equations eval_size15_bb7_in/2 
* CE 19 is refined into CE [33] 
* CE 18 is refined into CE [34] 


### Cost equations --> "Loop" of eval_size15_bb7_in/2 
* CEs [34] --> Loop 33 
* CEs [33] --> Loop 34 

### Ranking functions of CR eval_size15_bb7_in(V__17,B) 
* RF of phase [33]: [V__17]

#### Partial ranking functions of CR eval_size15_bb7_in(V__17,B) 
* Partial RF of phase [33]:
  - RF of loop [33:1]:
    V__17


### Specialization of cost equations eval_size15_bb5_in_loop_cont/3 
* CE 17 is refined into CE [35,36] 


### Cost equations --> "Loop" of eval_size15_bb5_in_loop_cont/3 
* CEs [36] --> Loop 35 
* CEs [35] --> Loop 36 

### Ranking functions of CR eval_size15_bb5_in_loop_cont(A,B,C) 

#### Partial ranking functions of CR eval_size15_bb5_in_loop_cont(A,B,C) 


### Specialization of cost equations eval_size15_bb1_in_loop_cont/5 
* CE 12 is refined into CE [37,38,39,40,41,42,43,44,45,46] 


### Cost equations --> "Loop" of eval_size15_bb1_in_loop_cont/5 
* CEs [45,46] --> Loop 37 
* CEs [40] --> Loop 38 
* CEs [43,44] --> Loop 39 
* CEs [39] --> Loop 40 
* CEs [41,42] --> Loop 41 
* CEs [38] --> Loop 42 
* CEs [37] --> Loop 43 

### Ranking functions of CR eval_size15_bb1_in_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR eval_size15_bb1_in_loop_cont(A,B,C,D,E) 


### Specialization of cost equations eval_size15_2/7 
* CE 2 is refined into CE [47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109] 


### Cost equations --> "Loop" of eval_size15_2/7 
* CEs [109] --> Loop 44 
* CEs [81] --> Loop 45 
* CEs [74] --> Loop 46 
* CEs [60] --> Loop 47 
* CEs [67] --> Loop 48 
* CEs [95] --> Loop 49 
* CEs [102] --> Loop 50 
* CEs [88] --> Loop 51 
* CEs [53] --> Loop 52 
* CEs [107] --> Loop 53 
* CEs [108] --> Loop 54 
* CEs [79] --> Loop 55 
* CEs [80] --> Loop 56 
* CEs [72] --> Loop 57 
* CEs [73] --> Loop 58 
* CEs [58] --> Loop 59 
* CEs [59] --> Loop 60 
* CEs [65] --> Loop 61 
* CEs [66] --> Loop 62 
* CEs [105] --> Loop 63 
* CEs [77] --> Loop 64 
* CEs [70] --> Loop 65 
* CEs [56] --> Loop 66 
* CEs [63] --> Loop 67 
* CEs [106] --> Loop 68 
* CEs [78] --> Loop 69 
* CEs [71] --> Loop 70 
* CEs [57] --> Loop 71 
* CEs [64] --> Loop 72 
* CEs [93] --> Loop 73 
* CEs [100] --> Loop 74 
* CEs [94] --> Loop 75 
* CEs [101] --> Loop 76 
* CEs [86] --> Loop 77 
* CEs [87] --> Loop 78 
* CEs [91] --> Loop 79 
* CEs [98] --> Loop 80 
* CEs [84] --> Loop 81 
* CEs [92] --> Loop 82 
* CEs [99] --> Loop 83 
* CEs [85] --> Loop 84 
* CEs [51] --> Loop 85 
* CEs [52] --> Loop 86 
* CEs [49] --> Loop 87 
* CEs [50] --> Loop 88 
* CEs [104] --> Loop 89 
* CEs [76] --> Loop 90 
* CEs [69] --> Loop 91 
* CEs [55] --> Loop 92 
* CEs [62] --> Loop 93 
* CEs [103] --> Loop 94 
* CEs [75] --> Loop 95 
* CEs [68] --> Loop 96 
* CEs [54] --> Loop 97 
* CEs [61] --> Loop 98 
* CEs [90] --> Loop 99 
* CEs [97] --> Loop 100 
* CEs [83] --> Loop 101 
* CEs [89] --> Loop 102 
* CEs [96] --> Loop 103 
* CEs [82] --> Loop 104 
* CEs [48] --> Loop 105 
* CEs [47] --> Loop 106 

### Ranking functions of CR eval_size15_2(V_y,V_a,V_b,V_c,V_0,V_1,B) 

#### Partial ranking functions of CR eval_size15_2(V_y,V_a,V_b,V_c,V_0,V_1,B) 


### Specialization of cost equations eval_size15_start/7 
* CE 1 is refined into CE [110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172] 


### Cost equations --> "Loop" of eval_size15_start/7 
* CEs [168,169,170,171,172] --> Loop 107 
* CEs [164] --> Loop 108 
* CEs [165,166,167] --> Loop 109 
* CEs [155,157,159,161,163] --> Loop 110 
* CEs [154,156,158,160,162] --> Loop 111 
* CEs [131] --> Loop 112 
* CEs [130] --> Loop 113 
* CEs [149,150,151,152,153] --> Loop 114 
* CEs [129] --> Loop 115 
* CEs [144,145,146,147,148] --> Loop 116 
* CEs [128] --> Loop 117 
* CEs [139,142,143] --> Loop 118 
* CEs [138,140,141] --> Loop 119 
* CEs [135,136,137] --> Loop 120 
* CEs [132,133,134] --> Loop 121 
* CEs [123,124,125,126,127] --> Loop 122 
* CEs [111] --> Loop 123 
* CEs [110] --> Loop 124 
* CEs [118,119,120,121,122] --> Loop 125 
* CEs [115,116,117] --> Loop 126 
* CEs [112,113,114] --> Loop 127 

### Ranking functions of CR eval_size15_start(V_x,V_y,V_f,V_a,V_b,V_c,B) 

#### Partial ranking functions of CR eval_size15_start(V_x,V_y,V_f,V_a,V_b,V_c,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_size15_bb1_in(V__03,V__01,V__0,B):
* Chain [[27,28],26]: 1*it(27)+1*it(28)+0
  Such that:it(27) =< V__01
it(28) =< -V__0

  with precondition: [V__03=1,B=4,0>=V__0,V__01>=2] 

* Chain [[27,28],25]: 1*it(27)+1*it(28)+0
  Such that:it(27) =< V__01
it(28) =< -V__0+4

  with precondition: [B=4,1>=V__03,V__03>=0] 

* Chain [[27,28],24]: 1*it(27)+1*it(28)+0
  Such that:it(27) =< V__01
it(28) =< -V__0+4

  with precondition: [B=4,1>=V__03,V__03>=0] 

* Chain [[27,28],23]: 1*it(27)+1*it(28)+0
  Such that:it(27) =< V__01
it(28) =< -V__0

  with precondition: [V__03=1,B=4,0>=V__0,V__01>=2] 

* Chain [[27,28],22]: 1*it(27)+1*it(28)+0
  Such that:it(27) =< V__01
it(28) =< -V__0+4

  with precondition: [B=4,1>=V__03,V__03>=0] 

* Chain [[27,28],21]: 1*it(27)+1*it(28)+0
  Such that:it(27) =< V__01
it(28) =< -V__0+4

  with precondition: [B=4,1>=V__03,V__03>=0] 

* Chain [[27,28],20]: 1*it(27)+1*it(28)+0
  Such that:it(27) =< V__01
it(28) =< -V__0+4

  with precondition: [B=4,1>=V__03,V__03>=0] 

* Chain [26]: 0
  with precondition: [B=4,0>=V__03,0>=V__0] 

* Chain [25]: 0
  with precondition: [B=4,0>=V__03,V__0>=4] 

* Chain [24]: 0
  with precondition: [B=4,0>=V__03+1] 

* Chain [23]: 0
  with precondition: [B=4,1>=V__01,0>=V__0] 

* Chain [22]: 0
  with precondition: [B=4,1>=V__01,V__03>=1] 

* Chain [21]: 0
  with precondition: [B=4,1>=V__01,V__0>=4] 

* Chain [20]: 0
  with precondition: [B=4,V__03>=2] 


#### Cost of chains of eval_size15_bb5_in(V__08,V__06,V__05,B,C):
* Chain [[30],32]: 1*it(30)+0
  Such that:it(30) =< -V__08

  with precondition: [B=3,0>=V__08+1,V__06>=V__05+1] 

* Chain [[30],31]: 1*it(30)+0
  Such that:it(30) =< -V__08

  with precondition: [B=3,0>=V__08+1,V__06>=V__05+1] 

* Chain [[29]]...: 1*it(29)+0
  with precondition: [V__08>=1,V__06>=V__05+1] 

* Chain [[29],31]: 1*it(29)+0
  with precondition: [B=3,V__08>=1,V__06>=V__05+1] 

* Chain [32]: 0
  with precondition: [V__08=0,B=3,C=V__06] 

* Chain [31]: 0
  with precondition: [B=3,V__06=C,V__05>=V__06] 


#### Cost of chains of eval_size15_bb7_in(V__17,B):
* Chain [[33],34]: 1*it(33)+0
  Such that:it(33) =< V__17

  with precondition: [B=2,V__17>=1] 

* Chain [34]: 0
  with precondition: [B=2,0>=V__17] 


#### Cost of chains of eval_size15_bb5_in_loop_cont(A,B,C):
* Chain [36]: 0
  with precondition: [A=3,0>=B] 

* Chain [35]: 1*s(17)+0
  Such that:s(17) =< B

  with precondition: [A=3,B>=1] 


#### Cost of chains of eval_size15_bb1_in_loop_cont(A,B,C,D,E):
* Chain [43]: 0
  with precondition: [A=4,B=0,0>=C] 

* Chain [42]: 1*s(18)+0
  Such that:s(18) =< C

  with precondition: [A=4,B=0,C>=1] 

* Chain [41]: 4*s(20)+1*s(23)+0
  Such that:aux(6) =< -B
s(20) =< aux(6)

  with precondition: [A=4,0>=B+1,C>=D+1] 

* Chain [40]: 0
  with precondition: [A=4,0>=C,D>=C] 

* Chain [39]: 1*aux(7)+0
  with precondition: [A=4,B>=1,C>=D+1] 

* Chain [38]: 1*s(27)+0
  Such that:s(27) =< C

  with precondition: [A=4,C>=1,D>=C] 

* Chain [37]...: 1*aux(8)+0
  with precondition: [A=4,B>=1,C>=D+1] 


#### Cost of chains of eval_size15_2(V_y,V_a,V_b,V_c,V_0,V_1,B):
* Chain [106]: 2*s(33)+2*s(34)+0
  Such that:s(31) =< V_y
s(32) =< -V_0
s(33) =< s(31)
s(34) =< s(32)

  with precondition: [V_c=0,V_1=1,0>=V_b,0>=V_0,V_y>=2] 

* Chain [105]: 2*s(37)+2*s(38)+1*s(39)+0
  Such that:s(35) =< V_y
s(39) =< V_b
s(36) =< -V_0
s(37) =< s(35)
s(38) =< s(36)

  with precondition: [V_c=0,V_1=1,0>=V_0,V_y>=2,V_b>=1] 

* Chain [104]: 0
  with precondition: [V_c=0,1>=V_y,0>=V_b,0>=V_0] 

* Chain [103]: 0
  with precondition: [V_c=0,1>=V_y,0>=V_b,V_0>=4] 

* Chain [102]: 0
  with precondition: [V_c=0,1>=V_y,0>=V_b,V_1>=1] 

* Chain [101]: 1*s(40)+0
  Such that:s(40) =< V_b

  with precondition: [V_c=0,1>=V_y,0>=V_0,V_b>=1] 

* Chain [100]: 1*s(41)+0
  Such that:s(41) =< V_b

  with precondition: [V_c=0,1>=V_y,V_b>=1,V_0>=4] 

* Chain [99]: 1*s(42)+0
  Such that:s(42) =< V_b

  with precondition: [V_c=0,1>=V_y,V_b>=1,V_1>=1] 

* Chain [98]: 0
  with precondition: [V_c=0,0>=V_b,0>=V_0,0>=V_1] 

* Chain [97]: 5*s(45)+5*s(46)+0
  Such that:s(43) =< V_y
s(44) =< -V_0+4
s(45) =< s(43)
s(46) =< s(44)

  with precondition: [V_c=0,0>=V_b,1>=V_1,V_1>=0] 

* Chain [96]: 0
  with precondition: [V_c=0,0>=V_b,0>=V_1,V_0>=4] 

* Chain [95]: 0
  with precondition: [V_c=0,0>=V_b,0>=V_1+1] 

* Chain [94]: 0
  with precondition: [V_c=0,0>=V_b,V_1>=2] 

* Chain [93]: 1*s(47)+0
  Such that:s(47) =< V_b

  with precondition: [V_c=0,0>=V_0,0>=V_1,V_b>=1] 

* Chain [92]: 5*s(50)+5*s(51)+1*s(52)+0
  Such that:s(48) =< V_y
s(52) =< V_b
s(49) =< -V_0+4
s(50) =< s(48)
s(51) =< s(49)

  with precondition: [V_c=0,1>=V_1,V_b>=1,V_1>=0] 

* Chain [91]: 1*s(53)+0
  Such that:s(53) =< V_b

  with precondition: [V_c=0,0>=V_1,V_b>=1,V_0>=4] 

* Chain [90]: 1*s(54)+0
  Such that:s(54) =< V_b

  with precondition: [V_c=0,0>=V_1+1,V_b>=1] 

* Chain [89]: 1*s(55)+0
  Such that:s(55) =< V_b

  with precondition: [V_c=0,V_b>=1,V_1>=2] 

* Chain [88]: 2*s(58)+2*s(59)+0
  Such that:s(56) =< V_y
s(57) =< -V_0
s(58) =< s(56)
s(59) =< s(57)

  with precondition: [V_1=1,0>=V_b,0>=V_0,V_y>=2,V_a>=V_b] 

* Chain [87]: 2*s(62)+2*s(63)+4*s(65)+1*s(66)+0
  Such that:s(60) =< V_y
s(64) =< -V_c
s(61) =< -V_0
s(65) =< s(64)
s(62) =< s(60)
s(63) =< s(61)

  with precondition: [V_1=1,0>=V_c+1,0>=V_0,V_y>=2,V_b>=V_a+1] 

* Chain [86]: 2*s(69)+2*s(70)+1*s(71)+0
  Such that:s(67) =< V_y
s(71) =< V_b
s(68) =< -V_0
s(69) =< s(67)
s(70) =< s(68)

  with precondition: [V_1=1,0>=V_0,V_y>=2,V_b>=1,V_a>=V_b] 

* Chain [85]: 2*s(74)+2*s(75)+1*s(76)+0
  Such that:s(72) =< V_y
s(73) =< -V_0
s(74) =< s(72)
s(75) =< s(73)

  with precondition: [V_1=1,0>=V_0,V_y>=2,V_c>=1,V_b>=V_a+1] 

* Chain [84]: 0
  with precondition: [1>=V_y,0>=V_b,0>=V_0,V_a>=V_b] 

* Chain [83]: 0
  with precondition: [1>=V_y,0>=V_b,V_0>=4,V_a>=V_b] 

* Chain [82]: 0
  with precondition: [1>=V_y,0>=V_b,V_1>=1,V_a>=V_b] 

* Chain [81]: 4*s(78)+1*s(79)+0
  Such that:s(77) =< -V_c
s(78) =< s(77)

  with precondition: [1>=V_y,0>=V_c+1,0>=V_0,V_b>=V_a+1] 

* Chain [80]: 4*s(81)+1*s(82)+0
  Such that:s(80) =< -V_c
s(81) =< s(80)

  with precondition: [1>=V_y,0>=V_c+1,V_0>=4,V_b>=V_a+1] 

* Chain [79]: 4*s(84)+1*s(85)+0
  Such that:s(83) =< -V_c
s(84) =< s(83)

  with precondition: [1>=V_y,0>=V_c+1,V_1>=1,V_b>=V_a+1] 

* Chain [78]: 1*s(86)+0
  Such that:s(86) =< V_b

  with precondition: [1>=V_y,0>=V_0,V_b>=1,V_a>=V_b] 

* Chain [77]: 1*s(87)+0
  with precondition: [1>=V_y,0>=V_0,V_c>=1,V_b>=V_a+1] 

* Chain [76]: 1*s(88)+0
  Such that:s(88) =< V_b

  with precondition: [1>=V_y,V_b>=1,V_0>=4,V_a>=V_b] 

* Chain [75]: 1*s(89)+0
  Such that:s(89) =< V_b

  with precondition: [1>=V_y,V_b>=1,V_1>=1,V_a>=V_b] 

* Chain [74]: 1*s(90)+0
  with precondition: [1>=V_y,V_c>=1,V_0>=4,V_b>=V_a+1] 

* Chain [73]: 1*s(91)+0
  with precondition: [1>=V_y,V_c>=1,V_1>=1,V_b>=V_a+1] 

* Chain [72]: 0
  with precondition: [0>=V_b,0>=V_0,0>=V_1,V_a>=V_b] 

* Chain [71]: 5*s(94)+5*s(95)+0
  Such that:s(92) =< V_y
s(93) =< -V_0+4
s(94) =< s(92)
s(95) =< s(93)

  with precondition: [0>=V_b,1>=V_1,V_1>=0,V_a>=V_b] 

* Chain [70]: 0
  with precondition: [0>=V_b,0>=V_1,V_0>=4,V_a>=V_b] 

* Chain [69]: 0
  with precondition: [0>=V_b,0>=V_1+1,V_a>=V_b] 

* Chain [68]: 0
  with precondition: [0>=V_b,V_1>=2,V_a>=V_b] 

* Chain [67]: 4*s(97)+1*s(98)+0
  Such that:s(96) =< -V_c
s(97) =< s(96)

  with precondition: [0>=V_c+1,0>=V_0,0>=V_1,V_b>=V_a+1] 

* Chain [66]: 5*s(101)+5*s(102)+4*s(104)+1*s(105)+0
  Such that:s(99) =< V_y
s(103) =< -V_c
s(100) =< -V_0+4
s(104) =< s(103)
s(101) =< s(99)
s(102) =< s(100)

  with precondition: [0>=V_c+1,1>=V_1,V_1>=0,V_b>=V_a+1] 

* Chain [65]: 4*s(107)+1*s(108)+0
  Such that:s(106) =< -V_c
s(107) =< s(106)

  with precondition: [0>=V_c+1,0>=V_1,V_0>=4,V_b>=V_a+1] 

* Chain [64]: 4*s(110)+1*s(111)+0
  Such that:s(109) =< -V_c
s(110) =< s(109)

  with precondition: [0>=V_c+1,0>=V_1+1,V_b>=V_a+1] 

* Chain [63]: 4*s(113)+1*s(114)+0
  Such that:s(112) =< -V_c
s(113) =< s(112)

  with precondition: [0>=V_c+1,V_1>=2,V_b>=V_a+1] 

* Chain [62]: 1*s(115)+0
  Such that:s(115) =< V_b

  with precondition: [0>=V_0,0>=V_1,V_b>=1,V_a>=V_b] 

* Chain [61]: 1*s(116)+0
  with precondition: [0>=V_0,0>=V_1,V_c>=1,V_b>=V_a+1] 

* Chain [60]: 5*s(119)+5*s(120)+1*s(121)+0
  Such that:s(117) =< V_y
s(121) =< V_b
s(118) =< -V_0+4
s(119) =< s(117)
s(120) =< s(118)

  with precondition: [1>=V_1,V_b>=1,V_1>=0,V_a>=V_b] 

* Chain [59]: 5*s(124)+5*s(125)+1*s(126)+0
  Such that:s(122) =< V_y
s(123) =< -V_0+4
s(124) =< s(122)
s(125) =< s(123)

  with precondition: [1>=V_1,V_c>=1,V_1>=0,V_b>=V_a+1] 

* Chain [58]: 1*s(127)+0
  Such that:s(127) =< V_b

  with precondition: [0>=V_1,V_b>=1,V_0>=4,V_a>=V_b] 

* Chain [57]: 1*s(128)+0
  with precondition: [0>=V_1,V_c>=1,V_0>=4,V_b>=V_a+1] 

* Chain [56]: 1*s(129)+0
  Such that:s(129) =< V_b

  with precondition: [0>=V_1+1,V_b>=1,V_a>=V_b] 

* Chain [55]: 1*s(130)+0
  with precondition: [0>=V_1+1,V_c>=1,V_b>=V_a+1] 

* Chain [54]: 1*s(131)+0
  Such that:s(131) =< V_b

  with precondition: [V_b>=1,V_1>=2,V_a>=V_b] 

* Chain [53]: 1*s(132)+0
  with precondition: [V_c>=1,V_1>=2,V_b>=V_a+1] 

* Chain [52]...: 2*s(135)+2*s(136)+1*s(137)+0
  Such that:s(133) =< V_y
s(134) =< -V_0
s(135) =< s(133)
s(136) =< s(134)

  with precondition: [V_1=1,0>=V_0,V_y>=2,V_c>=1,V_b>=V_a+1] 

* Chain [51]...: 1*s(138)+0
  with precondition: [1>=V_y,0>=V_0,V_c>=1,V_b>=V_a+1] 

* Chain [50]...: 1*s(139)+0
  with precondition: [1>=V_y,V_c>=1,V_0>=4,V_b>=V_a+1] 

* Chain [49]...: 1*s(140)+0
  with precondition: [1>=V_y,V_c>=1,V_1>=1,V_b>=V_a+1] 

* Chain [48]...: 1*s(141)+0
  with precondition: [0>=V_0,0>=V_1,V_c>=1,V_b>=V_a+1] 

* Chain [47]...: 5*s(144)+5*s(145)+1*s(146)+0
  Such that:s(142) =< V_y
s(143) =< -V_0+4
s(144) =< s(142)
s(145) =< s(143)

  with precondition: [1>=V_1,V_c>=1,V_1>=0,V_b>=V_a+1] 

* Chain [46]...: 1*s(147)+0
  with precondition: [0>=V_1,V_c>=1,V_0>=4,V_b>=V_a+1] 

* Chain [45]...: 1*s(148)+0
  with precondition: [0>=V_1+1,V_c>=1,V_b>=V_a+1] 

* Chain [44]...: 1*s(149)+0
  with precondition: [V_c>=1,V_1>=2,V_b>=V_a+1] 


#### Cost of chains of eval_size15_start(V_x,V_y,V_f,V_a,V_b,V_c,B):
* Chain [127]: 0
  with precondition: [V_c=0,1>=V_y,0>=V_b] 

* Chain [126]: 3*s(150)+0
  Such that:aux(9) =< V_b
s(150) =< aux(9)

  with precondition: [V_c=0,1>=V_y,V_b>=1] 

* Chain [125]: 5*s(155)+5*s(156)+0
  Such that:s(153) =< V_y
s(155) =< s(153)

  with precondition: [V_c=0,0>=V_b] 

* Chain [124]: 2*s(159)+2*s(160)+0
  Such that:s(157) =< V_y
s(159) =< s(157)

  with precondition: [V_c=0,0>=V_b,V_y>=2] 

* Chain [123]: 1*s(162)+2*s(164)+2*s(165)+0
  Such that:s(161) =< V_y
s(162) =< V_b
s(164) =< s(161)

  with precondition: [V_c=0,V_y>=2,V_b>=1] 

* Chain [122]: 5*s(166)+5*s(170)+5*s(171)+0
  Such that:s(167) =< V_y
aux(10) =< V_b
s(166) =< aux(10)
s(170) =< s(167)

  with precondition: [V_c=0,V_b>=1] 

* Chain [121]: 0
  with precondition: [1>=V_y,0>=V_b,V_a>=V_b] 

* Chain [120]: 12*s(176)+3*s(177)+0
  Such that:aux(11) =< -V_c
s(176) =< aux(11)

  with precondition: [1>=V_y,0>=V_c+1,V_b>=V_a+1] 

* Chain [119]: 3*s(184)+0
  Such that:aux(12) =< V_b
s(184) =< aux(12)

  with precondition: [1>=V_y,V_b>=1,V_a>=V_b] 

* Chain [118]: 1*aux(13)+0
  with precondition: [1>=V_y,V_c>=1,V_b>=V_a+1] 

* Chain [117]: 2*s(192)+2*s(193)+0
  Such that:s(190) =< V_y
s(192) =< s(190)

  with precondition: [0>=V_b,V_y>=2,V_a>=V_b] 

* Chain [116]: 5*s(196)+5*s(197)+0
  Such that:s(194) =< V_y
s(196) =< s(194)

  with precondition: [0>=V_b,V_a>=V_b] 

* Chain [115]: 4*s(201)+2*s(202)+2*s(203)+1*s(204)+0
  Such that:s(198) =< V_y
s(199) =< -V_c
s(201) =< s(199)
s(202) =< s(198)

  with precondition: [0>=V_c+1,V_y>=2,V_b>=V_a+1] 

* Chain [114]: 20*s(206)+10*s(207)+5*s(212)+0
  Such that:s(208) =< V_y
aux(14) =< -V_c
s(206) =< aux(14)
s(212) =< s(208)

  with precondition: [0>=V_c+1,V_b>=V_a+1] 

* Chain [113]: 1*s(225)+2*s(227)+2*s(228)+0
  Such that:s(224) =< V_y
s(225) =< V_b
s(227) =< s(224)

  with precondition: [V_y>=2,V_b>=1,V_a>=V_b] 

* Chain [112]: 2*s(231)+2*s(232)+1*s(233)+0
  Such that:s(229) =< V_y
s(231) =< s(229)

  with precondition: [V_y>=2,V_c>=1,V_b>=V_a+1] 

* Chain [111]: 5*s(234)+5*s(238)+5*s(239)+0
  Such that:s(235) =< V_y
aux(15) =< V_b
s(234) =< aux(15)
s(238) =< s(235)

  with precondition: [V_b>=1,V_a>=V_b] 

* Chain [110]: 10*s(243)+5*s(246)+0
  Such that:s(244) =< V_y
s(246) =< s(244)

  with precondition: [V_c>=1,V_b>=V_a+1] 

* Chain [109]...: 1*aux(16)+0
  with precondition: [1>=V_y,V_c>=1,V_b>=V_a+1] 

* Chain [108]...: 2*s(257)+2*s(258)+1*s(259)+0
  Such that:s(255) =< V_y
s(257) =< s(255)

  with precondition: [V_y>=2,V_c>=1,V_b>=V_a+1] 

* Chain [107]...: 10*s(260)+5*s(263)+0
  Such that:s(261) =< V_y
s(263) =< s(261)

  with precondition: [V_c>=1,V_b>=V_a+1] 


Closed-form bounds of eval_size15_start(V_x,V_y,V_f,V_a,V_b,V_c,B): 
-------------------------------------
* Chain [127] with precondition: [V_c=0,1>=V_y,0>=V_b] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [126] with precondition: [V_c=0,1>=V_y,V_b>=1] 
    - Upper bound: 3*V_b 
    - Complexity: n 
* Chain [125] with precondition: [V_c=0,0>=V_b] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [124] with precondition: [V_c=0,0>=V_b,V_y>=2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [123] with precondition: [V_c=0,V_y>=2,V_b>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [122] with precondition: [V_c=0,V_b>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [121] with precondition: [1>=V_y,0>=V_b,V_a>=V_b] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [120] with precondition: [1>=V_y,0>=V_c+1,V_b>=V_a+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [119] with precondition: [1>=V_y,V_b>=1,V_a>=V_b] 
    - Upper bound: 3*V_b 
    - Complexity: n 
* Chain [118] with precondition: [1>=V_y,V_c>=1,V_b>=V_a+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [117] with precondition: [0>=V_b,V_y>=2,V_a>=V_b] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [116] with precondition: [0>=V_b,V_a>=V_b] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [115] with precondition: [0>=V_c+1,V_y>=2,V_b>=V_a+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [114] with precondition: [0>=V_c+1,V_b>=V_a+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [113] with precondition: [V_y>=2,V_b>=1,V_a>=V_b] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [112] with precondition: [V_y>=2,V_c>=1,V_b>=V_a+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [111] with precondition: [V_b>=1,V_a>=V_b] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [110] with precondition: [V_c>=1,V_b>=V_a+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [109]... with precondition: [1>=V_y,V_c>=1,V_b>=V_a+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [108]... with precondition: [V_y>=2,V_c>=1,V_b>=V_a+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [107]... with precondition: [V_c>=1,V_b>=V_a+1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_size15_start(V_x,V_y,V_f,V_a,V_b,V_c,B): inf 
Asymptotic class: infinity 
* Total analysis performed in 274 ms.

