WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_foo_2/3,eval_foo_3/4,eval_foo_6/5,eval_foo_7/6,eval_foo_bb1_in/3,eval_foo_bb2_in/3]
1. non_recursive  : [eval_foo_stop/1]
2. non_recursive  : [eval_foo_bb3_in/1]
3. non_recursive  : [eval_foo_bb1_in_loop_cont/2]
4. non_recursive  : [eval_foo_bb0_in/3]
5. non_recursive  : [eval_foo_start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_foo_bb1_in/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_foo_bb0_in/3
5. SCC is partially evaluated into eval_foo_start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_foo_bb1_in/3 
* CE 5 is refined into CE [6] 
* CE 4 is refined into CE [7] 
* CE 3 is refined into CE [8] 


### Cost equations --> "Loop" of eval_foo_bb1_in/3 
* CEs [7] --> Loop 6 
* CEs [8] --> Loop 7 
* CEs [6] --> Loop 8 

### Ranking functions of CR eval_foo_bb1_in(V__01,V__0,B) 
* RF of phase [6,7]: [-V__01+V__0]

#### Partial ranking functions of CR eval_foo_bb1_in(V__01,V__0,B) 
* Partial RF of phase [6,7]:
  - RF of loop [6:1]:
    -V__01/2+V__0/2
  - RF of loop [7:1]:
    -V__01+V__0


### Specialization of cost equations eval_foo_bb0_in/3 
* CE 2 is refined into CE [9,10] 


### Cost equations --> "Loop" of eval_foo_bb0_in/3 
* CEs [9] --> Loop 9 
* CEs [10] --> Loop 10 

### Ranking functions of CR eval_foo_bb0_in(V_i,V_j,B) 

#### Partial ranking functions of CR eval_foo_bb0_in(V_i,V_j,B) 


### Specialization of cost equations eval_foo_start/5 
* CE 1 is refined into CE [11,12] 


### Cost equations --> "Loop" of eval_foo_start/5 
* CEs [12] --> Loop 11 
* CEs [11] --> Loop 12 

### Ranking functions of CR eval_foo_start(V_i,V_j,V_nondetNat,V_nondetPos,B) 

#### Partial ranking functions of CR eval_foo_start(V_i,V_j,V_nondetNat,V_nondetPos,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_foo_bb1_in(V__01,V__0,B):
* Chain [[6,7],8]: 1*it(6)+1*it(7)+0
  Such that:aux(1) =< -V__01+V__0
it(6) =< -V__01/2+V__0/2
it(6) =< aux(1)
it(7) =< aux(1)

  with precondition: [B=2,V__0>=V__01+1] 

* Chain [8]: 0
  with precondition: [B=2,V__01>=V__0] 


#### Cost of chains of eval_foo_bb0_in(V_i,V_j,B):
* Chain [10]: 0
  with precondition: [V_j>=V_i] 

* Chain [9]: 1*s(2)+1*s(3)+0
  Such that:s(1) =< V_i-V_j
s(2) =< V_i/2-V_j/2
s(2) =< s(1)
s(3) =< s(1)

  with precondition: [V_i>=V_j+1] 


#### Cost of chains of eval_foo_start(V_i,V_j,V_nondetNat,V_nondetPos,B):
* Chain [12]: 0
  with precondition: [V_j>=V_i] 

* Chain [11]: 1*s(5)+1*s(6)+0
  Such that:s(4) =< V_i-V_j
s(5) =< V_i/2-V_j/2
s(5) =< s(4)
s(6) =< s(4)

  with precondition: [V_i>=V_j+1] 


Closed-form bounds of eval_foo_start(V_i,V_j,V_nondetNat,V_nondetPos,B): 
-------------------------------------
* Chain [12] with precondition: [V_j>=V_i] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [11] with precondition: [V_i>=V_j+1] 
    - Upper bound: 3/2*V_i-3/2*V_j 
    - Complexity: n 

### Maximum cost of eval_foo_start(V_i,V_j,V_nondetNat,V_nondetPos,B): nat(V_i/2-V_j/2)+nat(V_i-V_j) 
Asymptotic class: n 
* Total analysis performed in 30 ms.

