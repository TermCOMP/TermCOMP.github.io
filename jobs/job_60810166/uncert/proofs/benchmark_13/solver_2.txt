MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_amir8_bb2_in/5,eval_amir8_bb3_in/5]
1. recursive  : [eval_amir8_bb4_in/4,eval_amir8_bb5_in/4]
2. recursive  : [eval_amir8_bb1_in/6,eval_amir8_bb2_in_loop_cont/10,eval_amir8_bb4_in_loop_cont/10,eval_amir8_bb6_in/9]
3. recursive  : [eval_amir8_bb7_in/2,eval_amir8_bb8_in/2]
4. non_recursive  : [eval_amir8_stop/1]
5. non_recursive  : [eval_amir8_bb9_in/1]
6. non_recursive  : [eval_amir8_bb7_in_loop_cont/2]
7. non_recursive  : [eval_amir8_bb1_in_loop_cont/3]
8. non_recursive  : [eval_amir8_bb0_in/5]
9. non_recursive  : [eval_amir8_start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_amir8_bb2_in/5
1. SCC is partially evaluated into eval_amir8_bb4_in/4
2. SCC is partially evaluated into eval_amir8_bb1_in/6
3. SCC is partially evaluated into eval_amir8_bb7_in/2
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_amir8_bb1_in_loop_cont/3
8. SCC is partially evaluated into eval_amir8_bb0_in/5
9. SCC is partially evaluated into eval_amir8_start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_amir8_bb2_in/5 
* CE 7 is refined into CE [12] 
* CE 6 is refined into CE [13] 


### Cost equations --> "Loop" of eval_amir8_bb2_in/5 
* CEs [13] --> Loop 12 
* CEs [12] --> Loop 13 

### Ranking functions of CR eval_amir8_bb2_in(V_L1,V_i_0,B,C,D) 
* RF of phase [12]: [V_L1-V_i_0]

#### Partial ranking functions of CR eval_amir8_bb2_in(V_L1,V_i_0,B,C,D) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V_L1-V_i_0


### Specialization of cost equations eval_amir8_bb4_in/4 
* CE 9 is refined into CE [14] 
* CE 8 is refined into CE [15] 


### Cost equations --> "Loop" of eval_amir8_bb4_in/4 
* CEs [15] --> Loop 14 
* CEs [14] --> Loop 15 

### Ranking functions of CR eval_amir8_bb4_in(V_L1,V_i_1,B,C) 
* RF of phase [14]: [V_L1-V_i_1]

#### Partial ranking functions of CR eval_amir8_bb4_in(V_L1,V_i_1,B,C) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    V_L1-V_i_1


### Specialization of cost equations eval_amir8_bb1_in/6 
* CE 4 is refined into CE [16] 
* CE 3 is refined into CE [17,18] 


### Cost equations --> "Loop" of eval_amir8_bb1_in/6 
* CEs [17] --> Loop 16 
* CEs [18] --> Loop 17 
* CEs [16] --> Loop 18 

### Ranking functions of CR eval_amir8_bb1_in(V_L1,V_Y,V__01,V__0,B,C) 
* RF of phase [16]: [V__0]
* RF of phase [17]: [V__0]

#### Partial ranking functions of CR eval_amir8_bb1_in(V_L1,V_Y,V__01,V__0,B,C) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    V__0
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    V__0


### Specialization of cost equations eval_amir8_bb7_in/2 
* CE 11 is refined into CE [19] 
* CE 10 is refined into CE [20] 


### Cost equations --> "Loop" of eval_amir8_bb7_in/2 
* CEs [20] --> Loop 19 
* CEs [19] --> Loop 20 

### Ranking functions of CR eval_amir8_bb7_in(V__1,B) 
* RF of phase [19]: [V__1]

#### Partial ranking functions of CR eval_amir8_bb7_in(V__1,B) 
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    V__1


### Specialization of cost equations eval_amir8_bb1_in_loop_cont/3 
* CE 5 is refined into CE [21,22] 


### Cost equations --> "Loop" of eval_amir8_bb1_in_loop_cont/3 
* CEs [22] --> Loop 21 
* CEs [21] --> Loop 22 

### Ranking functions of CR eval_amir8_bb1_in_loop_cont(A,B,C) 

#### Partial ranking functions of CR eval_amir8_bb1_in_loop_cont(A,B,C) 


### Specialization of cost equations eval_amir8_bb0_in/5 
* CE 2 is refined into CE [23,24,25,26,27,28] 


### Cost equations --> "Loop" of eval_amir8_bb0_in/5 
* CEs [27,28] --> Loop 23 
* CEs [24] --> Loop 24 
* CEs [23] --> Loop 25 
* CEs [25,26] --> Loop 26 

### Ranking functions of CR eval_amir8_bb0_in(V_L1,V_L2,V_X,V_Y,B) 

#### Partial ranking functions of CR eval_amir8_bb0_in(V_L1,V_L2,V_X,V_Y,B) 


### Specialization of cost equations eval_amir8_start/5 
* CE 1 is refined into CE [29,30,31,32] 


### Cost equations --> "Loop" of eval_amir8_start/5 
* CEs [32] --> Loop 27 
* CEs [31] --> Loop 28 
* CEs [30] --> Loop 29 
* CEs [29] --> Loop 30 

### Ranking functions of CR eval_amir8_start(V_L1,V_L2,V_X,V_Y,B) 

#### Partial ranking functions of CR eval_amir8_start(V_L1,V_L2,V_X,V_Y,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_amir8_bb2_in(V_L1,V_i_0,B,C,D):
* Chain [[12],13]: 1*it(12)+0
  Such that:it(12) =< V_L1-V_i_0

  with precondition: [B=3,D=0,V_L1=C,V_i_0>=0,V_L1>=V_i_0+1] 

* Chain [13]: 0
  with precondition: [B=3,D=0,V_i_0=C,V_i_0>=0,V_i_0>=V_L1] 


#### Cost of chains of eval_amir8_bb4_in(V_L1,V_i_1,B,C):
* Chain [[14],15]: 1*it(14)+0
  Such that:it(14) =< V_L1-V_i_1

  with precondition: [B=2,V_L1=C,V_L1>=V_i_1+1] 

* Chain [15]: 0
  with precondition: [B=2,V_i_1=C,V_i_1>=V_L1] 


#### Cost of chains of eval_amir8_bb1_in(V_L1,V_Y,V__01,V__0,B,C):
* Chain [[17],18]: 1*it(17)+0
  Such that:it(17) =< V__0

  with precondition: [B=5,0>=V_L1,V__0>=1] 

* Chain [[16],18]: 1*it(16)+2*s(5)+0
  Such that:aux(2) =< V_L1
it(16) =< V__0
s(6) =< it(16)*aux(2)
s(5) =< s(6)

  with precondition: [B=5,V_L1>=1,V__0>=1] 

* Chain [18]: 0
  with precondition: [B=5,C=V__01,0>=V__0] 


#### Cost of chains of eval_amir8_bb7_in(V__1,B):
* Chain [[19],20]: 1*it(19)+0
  Such that:it(19) =< V__1

  with precondition: [B=4,V__1>=1] 

* Chain [20]: 0
  with precondition: [B=4,0>=V__1] 


#### Cost of chains of eval_amir8_bb1_in_loop_cont(A,B,C):
* Chain [22]: 0
  with precondition: [A=5,0>=B] 

* Chain [21]: 1*s(7)+0
  Such that:s(7) =< B

  with precondition: [A=5,B>=1] 


#### Cost of chains of eval_amir8_bb0_in(V_L1,V_L2,V_X,V_Y,B):
* Chain [26]: 2*s(8)+1*s(10)+0
  Such that:aux(3) =< V_L2
s(8) =< aux(3)

  with precondition: [0>=V_L1,V_L2>=1] 

* Chain [25]: 0
  with precondition: [0>=V_L2,0>=V_X] 

* Chain [24]: 1*s(11)+0
  Such that:s(11) =< V_X

  with precondition: [0>=V_L2,V_X>=1] 

* Chain [23]: 2*s(13)+4*s(15)+1*s(20)+0
  Such that:aux(4) =< V_L1
aux(5) =< V_L2
s(13) =< aux(5)
s(14) =< s(13)*aux(4)
s(15) =< s(14)

  with precondition: [V_L1>=1,V_L2>=1] 


#### Cost of chains of eval_amir8_start(V_L1,V_L2,V_X,V_Y,B):
* Chain [30]: 2*s(22)+1*s(23)+0
  Such that:s(21) =< V_L2
s(22) =< s(21)

  with precondition: [0>=V_L1,V_L2>=1] 

* Chain [29]: 0
  with precondition: [0>=V_L2,0>=V_X] 

* Chain [28]: 1*s(24)+0
  Such that:s(24) =< V_X

  with precondition: [0>=V_L2,V_X>=1] 

* Chain [27]: 2*s(27)+4*s(29)+1*s(30)+0
  Such that:s(25) =< V_L1
s(26) =< V_L2
s(27) =< s(26)
s(28) =< s(27)*s(25)
s(29) =< s(28)

  with precondition: [V_L1>=1,V_L2>=1] 


Closed-form bounds of eval_amir8_start(V_L1,V_L2,V_X,V_Y,B): 
-------------------------------------
* Chain [30] with precondition: [0>=V_L1,V_L2>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [29] with precondition: [0>=V_L2,0>=V_X] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [28] with precondition: [0>=V_L2,V_X>=1] 
    - Upper bound: V_X 
    - Complexity: n 
* Chain [27] with precondition: [V_L1>=1,V_L2>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_amir8_start(V_L1,V_L2,V_X,V_Y,B): inf 
Asymptotic class: infinity 
* Total analysis performed in 77 ms.

