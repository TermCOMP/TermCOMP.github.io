WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_foo__critedge_in/3,eval_foo_bb1_in/3]
1. non_recursive  : [eval_foo_stop/1]
2. non_recursive  : [eval_foo_bb2_in/1]
3. non_recursive  : [eval_foo_bb1_in_loop_cont/2]
4. non_recursive  : [eval_foo_bb0_in/3]
5. non_recursive  : [eval_foo_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_foo_bb1_in/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_foo_bb0_in/3
5. SCC is partially evaluated into eval_foo_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_foo_bb1_in/3 
* CE 7 is refined into CE [8] 
* CE 6 is refined into CE [9] 
* CE 5 is refined into CE [10] 


### Cost equations --> "Loop" of eval_foo_bb1_in/3 
* CEs [9] --> Loop 8 
* CEs [10] --> Loop 9 
* CEs [8] --> Loop 10 

### Ranking functions of CR eval_foo_bb1_in(V__01,V__0,B) 
* RF of phase [8]: [V__01-V__0-2]
* RF of phase [9]: [-V__01+V__0-2]

#### Partial ranking functions of CR eval_foo_bb1_in(V__01,V__0,B) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V__01-V__0-2
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    -V__01+V__0-2


### Specialization of cost equations eval_foo_bb0_in/3 
* CE 4 is refined into CE [11,12,13] 
* CE 3 is refined into CE [14] 
* CE 2 is refined into CE [15] 


### Cost equations --> "Loop" of eval_foo_bb0_in/3 
* CEs [12] --> Loop 11 
* CEs [13] --> Loop 12 
* CEs [11] --> Loop 13 
* CEs [14] --> Loop 14 
* CEs [15] --> Loop 15 

### Ranking functions of CR eval_foo_bb0_in(V_x,V_y,B) 

#### Partial ranking functions of CR eval_foo_bb0_in(V_x,V_y,B) 


### Specialization of cost equations eval_foo_start/3 
* CE 1 is refined into CE [16,17,18,19,20] 


### Cost equations --> "Loop" of eval_foo_start/3 
* CEs [20] --> Loop 16 
* CEs [19] --> Loop 17 
* CEs [18] --> Loop 18 
* CEs [17] --> Loop 19 
* CEs [16] --> Loop 20 

### Ranking functions of CR eval_foo_start(V_x,V_y,B) 

#### Partial ranking functions of CR eval_foo_start(V_x,V_y,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_foo_bb1_in(V__01,V__0,B):
* Chain [[9],10]: 1*it(9)+0
  Such that:it(9) =< -V__01+V__0

  with precondition: [B=2,V__01>=0,V__0>=V__01+3] 

* Chain [[8],10]: 1*it(8)+0
  Such that:it(8) =< V__01-V__0

  with precondition: [B=2,V__0>=0,V__01>=V__0+3] 

* Chain [10]: 0
  with precondition: [B=2,V__01>=0,V__0>=0,V__0+2>=V__01,V__01+2>=V__0] 


#### Cost of chains of eval_foo_bb0_in(V_x,V_y,B):
* Chain [15]: 0
  with precondition: [0>=V_x+1] 

* Chain [14]: 0
  with precondition: [0>=V_y+1] 

* Chain [13]: 0
  with precondition: [V_x>=0,V_y>=0,V_y+2>=V_x,V_x+2>=V_y] 

* Chain [12]: 1*s(1)+0
  Such that:s(1) =< -V_x+V_y

  with precondition: [V_x>=0,V_y>=V_x+3] 

* Chain [11]: 1*s(2)+0
  Such that:s(2) =< V_x-V_y

  with precondition: [V_y>=0,V_x>=V_y+3] 


#### Cost of chains of eval_foo_start(V_x,V_y,B):
* Chain [20]: 0
  with precondition: [0>=V_x+1] 

* Chain [19]: 0
  with precondition: [0>=V_y+1] 

* Chain [18]: 0
  with precondition: [V_x>=0,V_y>=0,V_y+2>=V_x,V_x+2>=V_y] 

* Chain [17]: 1*s(3)+0
  Such that:s(3) =< -V_x+V_y

  with precondition: [V_x>=0,V_y>=V_x+3] 

* Chain [16]: 1*s(4)+0
  Such that:s(4) =< V_x-V_y

  with precondition: [V_y>=0,V_x>=V_y+3] 


Closed-form bounds of eval_foo_start(V_x,V_y,B): 
-------------------------------------
* Chain [20] with precondition: [0>=V_x+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [19] with precondition: [0>=V_y+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [18] with precondition: [V_x>=0,V_y>=0,V_y+2>=V_x,V_x+2>=V_y] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [17] with precondition: [V_x>=0,V_y>=V_x+3] 
    - Upper bound: -V_x+V_y 
    - Complexity: n 
* Chain [16] with precondition: [V_y>=0,V_x>=V_y+3] 
    - Upper bound: V_x-V_y 
    - Complexity: n 

### Maximum cost of eval_foo_start(V_x,V_y,B): max([nat(-V_x+V_y),nat(V_x-V_y)]) 
Asymptotic class: n 
* Total analysis performed in 40 ms.

