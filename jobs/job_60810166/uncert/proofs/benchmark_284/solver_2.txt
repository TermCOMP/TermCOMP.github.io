WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_foo_bb2_in/8,eval_foo_bb3_in/8]
1. recursive  : [eval_foo_bb1_in/4,eval_foo_bb2_in_loop_cont/5]
2. non_recursive  : [eval_foo_stop/1]
3. non_recursive  : [eval_foo_bb4_in/1]
4. non_recursive  : [eval_foo_bb1_in_loop_cont/2]
5. non_recursive  : [eval_foo_bb0_in/4]
6. non_recursive  : [eval_foo_start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_foo_bb2_in/8
1. SCC is partially evaluated into eval_foo_bb1_in/4
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_foo_bb0_in/4
6. SCC is partially evaluated into eval_foo_start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_foo_bb2_in/8 
* CE 8 is refined into CE [9] 
* CE 7 is refined into CE [10] 


### Cost equations --> "Loop" of eval_foo_bb2_in/8 
* CEs [10] --> Loop 9 
* CEs [9] --> Loop 10 

### Ranking functions of CR eval_foo_bb2_in(V_z,V__03,V__01,V__14,V__12,B,C,D) 
* RF of phase [9]: [-V_z+V__12,-V_z+V__14]

#### Partial ranking functions of CR eval_foo_bb2_in(V_z,V__03,V__01,V__14,V__12,B,C,D) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    -V_z+V__12
    -V_z+V__14


### Specialization of cost equations eval_foo_bb1_in/4 
* CE 4 is refined into CE [11] 
* CE 6 is refined into CE [12] 
* CE 5 is refined into CE [13] 
* CE 3 is refined into CE [14] 


### Cost equations --> "Loop" of eval_foo_bb1_in/4 
* CEs [14] --> Loop 11 
* CEs [11] --> Loop 12 
* CEs [12] --> Loop 13 
* CEs [13] --> Loop 14 

### Ranking functions of CR eval_foo_bb1_in(V_z,V__03,V__01,B) 

#### Partial ranking functions of CR eval_foo_bb1_in(V_z,V__03,V__01,B) 


### Specialization of cost equations eval_foo_bb0_in/4 
* CE 2 is refined into CE [15,16,17,18] 


### Cost equations --> "Loop" of eval_foo_bb0_in/4 
* CEs [16] --> Loop 15 
* CEs [17] --> Loop 16 
* CEs [18] --> Loop 17 
* CEs [15] --> Loop 18 

### Ranking functions of CR eval_foo_bb0_in(V_x,V_y,V_z,B) 

#### Partial ranking functions of CR eval_foo_bb0_in(V_x,V_y,V_z,B) 


### Specialization of cost equations eval_foo_start/5 
* CE 1 is refined into CE [19,20,21,22] 


### Cost equations --> "Loop" of eval_foo_start/5 
* CEs [22] --> Loop 19 
* CEs [21] --> Loop 20 
* CEs [20] --> Loop 21 
* CEs [19] --> Loop 22 

### Ranking functions of CR eval_foo_start(V_c,V_x,V_y,V_z,B) 

#### Partial ranking functions of CR eval_foo_start(V_c,V_x,V_y,V_z,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_foo_bb2_in(V_z,V__03,V__01,V__14,V__12,B,C,D):
* Chain [[9],10]: 1*it(9)+0
  Such that:it(9) =< -V_z+V__14

  with precondition: [B=2,V__03=V__01,V__14=V__12,V_z=C,V_z=D,V__14>=V_z+1,V__03>=V__14] 


#### Cost of chains of eval_foo_bb1_in(V_z,V__03,V__01,B):
* Chain [14]: 0
  with precondition: [B=3,V__01>=V__03+1] 

* Chain [13]: 0
  with precondition: [B=3,V_z>=V__01] 

* Chain [12]: 0
  with precondition: [B=3,V__03>=V__01+1] 

* Chain [11,13]: 1*s(1)+1
  Such that:s(1) =< -V_z+V__01

  with precondition: [B=3,V__03=V__01,V__03>=V_z+1] 


#### Cost of chains of eval_foo_bb0_in(V_x,V_y,V_z,B):
* Chain [18]: 1*s(2)+1
  Such that:s(2) =< V_x-V_z

  with precondition: [V_x=V_y,V_x>=V_z+1] 

* Chain [17]: 0
  with precondition: [V_y>=V_x+1] 

* Chain [16]: 0
  with precondition: [V_z>=V_x] 

* Chain [15]: 0
  with precondition: [V_x>=V_y+1] 


#### Cost of chains of eval_foo_start(V_c,V_x,V_y,V_z,B):
* Chain [22]: 1*s(3)+1
  Such that:s(3) =< V_x-V_z

  with precondition: [V_x=V_y,V_x>=V_z+1] 

* Chain [21]: 0
  with precondition: [V_y>=V_x+1] 

* Chain [20]: 0
  with precondition: [V_z>=V_x] 

* Chain [19]: 0
  with precondition: [V_x>=V_y+1] 


Closed-form bounds of eval_foo_start(V_c,V_x,V_y,V_z,B): 
-------------------------------------
* Chain [22] with precondition: [V_x=V_y,V_x>=V_z+1] 
    - Upper bound: V_x-V_z+1 
    - Complexity: n 
* Chain [21] with precondition: [V_y>=V_x+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [20] with precondition: [V_z>=V_x] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [19] with precondition: [V_x>=V_y+1] 
    - Upper bound: 0 
    - Complexity: constant 

### Maximum cost of eval_foo_start(V_c,V_x,V_y,V_z,B): nat(V_x-V_z)+1 
Asymptotic class: n 
* Total analysis performed in 55 ms.

