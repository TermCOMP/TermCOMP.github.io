WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_foo_bb1_in/5,eval_foo_bb2_in/5]
1. non_recursive  : [eval_foo_stop/1]
2. non_recursive  : [eval_foo_bb3_in/1]
3. non_recursive  : [eval_foo_bb1_in_loop_cont/2]
4. non_recursive  : [eval_foo_bb0_in/5]
5. non_recursive  : [eval_foo_start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_foo_bb1_in/5
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_foo_bb0_in/5
5. SCC is partially evaluated into eval_foo_start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_foo_bb1_in/5 
* CE 7 is refined into CE [8] 
* CE 6 is refined into CE [9] 
* CE 5 is refined into CE [10] 


### Cost equations --> "Loop" of eval_foo_bb1_in/5 
* CEs [9] --> Loop 8 
* CEs [10] --> Loop 9 
* CEs [8] --> Loop 10 

### Ranking functions of CR eval_foo_bb1_in(V_a,V_b,V__01,V__0,B) 

#### Partial ranking functions of CR eval_foo_bb1_in(V_a,V_b,V__01,V__0,B) 
* Partial RF of phase [8,9]:
  - RF of loop [8:1]:
    V__0+1
  - RF of loop [9:1]:
    V__01+1


### Specialization of cost equations eval_foo_bb0_in/5 
* CE 3 is refined into CE [11] 
* CE 2 is refined into CE [12] 
* CE 4 is refined into CE [13,14] 


### Cost equations --> "Loop" of eval_foo_bb0_in/5 
* CEs [11] --> Loop 11 
* CEs [12] --> Loop 12 
* CEs [13] --> Loop 13 
* CEs [14] --> Loop 14 

### Ranking functions of CR eval_foo_bb0_in(V_a,V_b,V_x,V_y,B) 

#### Partial ranking functions of CR eval_foo_bb0_in(V_a,V_b,V_x,V_y,B) 


### Specialization of cost equations eval_foo_start/5 
* CE 1 is refined into CE [15,16,17,18] 


### Cost equations --> "Loop" of eval_foo_start/5 
* CEs [18] --> Loop 15 
* CEs [17] --> Loop 16 
* CEs [16] --> Loop 17 
* CEs [15] --> Loop 18 

### Ranking functions of CR eval_foo_start(V_a,V_b,V_x,V_y,B) 

#### Partial ranking functions of CR eval_foo_start(V_a,V_b,V_x,V_y,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_foo_bb1_in(V_a,V_b,V__01,V__0,B):
* Chain [[8,9],10]: 1*it(8)+1*it(9)+0
  Such that:it(9) =< V__01+1
it(8) =< V__0+1

  with precondition: [B=2,V_a=V_b] 

* Chain [10]: 0
  with precondition: [B=2,V_b=V_a,0>=V__01+1,0>=V__0+1] 


#### Cost of chains of eval_foo_bb0_in(V_a,V_b,V_x,V_y,B):
* Chain [14]: 1*s(1)+1*s(2)+0
  Such that:s(2) =< V_x+1
s(1) =< V_y+1

  with precondition: [V_b=V_a] 

* Chain [13]: 0
  with precondition: [V_b=V_a,0>=V_x+1,0>=V_y+1] 

* Chain [12]: 0
  with precondition: [V_b>=V_a+1] 

* Chain [11]: 0
  with precondition: [V_a>=V_b+1] 


#### Cost of chains of eval_foo_start(V_a,V_b,V_x,V_y,B):
* Chain [18]: 1*s(3)+1*s(4)+0
  Such that:s(3) =< V_x+1
s(4) =< V_y+1

  with precondition: [V_b=V_a] 

* Chain [17]: 0
  with precondition: [V_b=V_a,0>=V_x+1,0>=V_y+1] 

* Chain [16]: 0
  with precondition: [V_b>=V_a+1] 

* Chain [15]: 0
  with precondition: [V_a>=V_b+1] 


Closed-form bounds of eval_foo_start(V_a,V_b,V_x,V_y,B): 
-------------------------------------
* Chain [18] with precondition: [V_b=V_a] 
    - Upper bound: nat(V_y+1)+nat(V_x+1) 
    - Complexity: n 
* Chain [17] with precondition: [V_b=V_a,0>=V_x+1,0>=V_y+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [16] with precondition: [V_b>=V_a+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [15] with precondition: [V_a>=V_b+1] 
    - Upper bound: 0 
    - Complexity: constant 

### Maximum cost of eval_foo_start(V_a,V_b,V_x,V_y,B): nat(V_y+1)+nat(V_x+1) 
Asymptotic class: n 
* Total analysis performed in 39 ms.

