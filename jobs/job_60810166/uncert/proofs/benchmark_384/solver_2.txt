WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_t16_bb3_in/3,eval_t16_bb4_in/3]
1. recursive  : [eval_t16_bb1_in/3,eval_t16_bb2_in/3,eval_t16_bb3_in_loop_cont/4]
2. non_recursive  : [eval_t16_stop/1]
3. non_recursive  : [eval_t16_bb5_in/1]
4. non_recursive  : [eval_t16_bb1_in_loop_cont/2]
5. non_recursive  : [eval_t16_bb0_in/3]
6. non_recursive  : [eval_t16_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_t16_bb3_in/3
1. SCC is partially evaluated into eval_t16_bb1_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_t16_bb0_in/3
6. SCC is partially evaluated into eval_t16_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_t16_bb3_in/3 
* CE 7 is refined into CE [8] 
* CE 6 is refined into CE [9] 


### Cost equations --> "Loop" of eval_t16_bb3_in/3 
* CEs [9] --> Loop 8 
* CEs [8] --> Loop 9 

### Ranking functions of CR eval_t16_bb3_in(V__0,V_z_0,B) 
* RF of phase [8]: [V_z_0]

#### Partial ranking functions of CR eval_t16_bb3_in(V__0,V_z_0,B) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V_z_0


### Specialization of cost equations eval_t16_bb1_in/3 
* CE 5 is refined into CE [10] 
* CE 4 is refined into CE [11] 


### Cost equations --> "Loop" of eval_t16_bb1_in/3 
* CEs [11] --> Loop 10 
* CEs [10] --> Loop 11 

### Ranking functions of CR eval_t16_bb1_in(V_y,V__0,B) 
* RF of phase [10]: [V__0,-V_y+V__0]

#### Partial ranking functions of CR eval_t16_bb1_in(V_y,V__0,B) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    V__0
    -V_y+V__0


### Specialization of cost equations eval_t16_bb0_in/3 
* CE 3 is refined into CE [12,13] 
* CE 2 is refined into CE [14] 


### Cost equations --> "Loop" of eval_t16_bb0_in/3 
* CEs [12] --> Loop 12 
* CEs [13] --> Loop 13 
* CEs [14] --> Loop 14 

### Ranking functions of CR eval_t16_bb0_in(V_x,V_y,B) 

#### Partial ranking functions of CR eval_t16_bb0_in(V_x,V_y,B) 


### Specialization of cost equations eval_t16_start/3 
* CE 1 is refined into CE [15,16,17] 


### Cost equations --> "Loop" of eval_t16_start/3 
* CEs [17] --> Loop 15 
* CEs [16] --> Loop 16 
* CEs [15] --> Loop 17 

### Ranking functions of CR eval_t16_start(V_x,V_y,B) 

#### Partial ranking functions of CR eval_t16_start(V_x,V_y,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_t16_bb3_in(V__0,V_z_0,B):
* Chain [[8],9]: 1*it(8)+0
  Such that:it(8) =< V_z_0

  with precondition: [B=2,V__0>=1,V_z_0>=1,2*V__0+98>=V_z_0] 


#### Cost of chains of eval_t16_bb1_in(V_y,V__0,B):
* Chain [[10],11]: 1*it(10)+1*s(3)+0
  Such that:s(3) =< -98*V_y+100*V__0
it(10) =< -V_y+V__0

  with precondition: [B=3,V_y>=0,V__0>=V_y+1] 

* Chain [11]: 0
  with precondition: [B=3,V_y>=0,V_y>=V__0] 


#### Cost of chains of eval_t16_bb0_in(V_x,V_y,B):
* Chain [14]: 0
  with precondition: [0>=V_y+1] 

* Chain [13]: 0
  with precondition: [V_y>=0,V_y>=V_x] 

* Chain [12]: 1*s(4)+1*s(5)+0
  Such that:s(5) =< V_x-V_y
s(4) =< 100*V_x-98*V_y

  with precondition: [V_y>=0,V_x>=V_y+1] 


#### Cost of chains of eval_t16_start(V_x,V_y,B):
* Chain [17]: 0
  with precondition: [0>=V_y+1] 

* Chain [16]: 0
  with precondition: [V_y>=0,V_y>=V_x] 

* Chain [15]: 1*s(6)+1*s(7)+0
  Such that:s(6) =< V_x-V_y
s(7) =< 100*V_x-98*V_y

  with precondition: [V_y>=0,V_x>=V_y+1] 


Closed-form bounds of eval_t16_start(V_x,V_y,B): 
-------------------------------------
* Chain [17] with precondition: [0>=V_y+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [16] with precondition: [V_y>=0,V_y>=V_x] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [15] with precondition: [V_y>=0,V_x>=V_y+1] 
    - Upper bound: 101*V_x-99*V_y 
    - Complexity: n 

### Maximum cost of eval_t16_start(V_x,V_y,B): nat(100*V_x-98*V_y)+nat(V_x-V_y) 
Asymptotic class: n 
* Total analysis performed in 41 ms.

