WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_Loopus2011_ex2_0/6,eval_Loopus2011_ex2_1/7,eval_Loopus2011_ex2_bb10_in/8,eval_Loopus2011_ex2_bb11_in/10,eval_Loopus2011_ex2_bb1_in/6,eval_Loopus2011_ex2_bb2_in/7,eval_Loopus2011_ex2_bb3_in/7,eval_Loopus2011_ex2_bb4_in/8,eval_Loopus2011_ex2_bb5_in/8,eval_Loopus2011_ex2_bb6_in/8,eval_Loopus2011_ex2_bb7_in/10,eval_Loopus2011_ex2_bb8_in/8,eval_Loopus2011_ex2_bb9_in/8]
1. non_recursive  : [eval_Loopus2011_ex2_stop/1]
2. non_recursive  : [eval_Loopus2011_ex2_bb12_in/1]
3. non_recursive  : [eval_Loopus2011_ex2_bb1_in_loop_cont/2]
4. non_recursive  : [eval_Loopus2011_ex2_bb0_in/3]
5. non_recursive  : [eval_Loopus2011_ex2_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_Loopus2011_ex2_bb1_in/6
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_Loopus2011_ex2_bb0_in/3
5. SCC is partially evaluated into eval_Loopus2011_ex2_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_Loopus2011_ex2_bb1_in/6 
* CE 34 is refined into CE [56] 
* CE 8 is refined into CE [57] 
* CE 30 is discarded (unfeasible) 
* CE 4 is discarded (unfeasible) 
* CE 36 is discarded (unfeasible) 
* CE 10 is discarded (unfeasible) 
* CE 32 is discarded (unfeasible) 
* CE 6 is discarded (unfeasible) 
* CE 55 is refined into CE [58] 
* CE 12 is discarded (unfeasible) 
* CE 38 is discarded (unfeasible) 
* CE 40 is discarded (unfeasible) 
* CE 14 is discarded (unfeasible) 
* CE 15 is refined into CE [59] 
* CE 45 is discarded (unfeasible) 
* CE 19 is refined into CE [60] 
* CE 53 is discarded (unfeasible) 
* CE 27 is discarded (unfeasible) 
* CE 21 is discarded (unfeasible) 
* CE 20 is refined into CE [61] 
* CE 28 is discarded (unfeasible) 
* CE 46 is refined into CE [62] 
* CE 54 is discarded (unfeasible) 
* CE 41 is refined into CE [63] 
* CE 48 is discarded (unfeasible) 
* CE 47 is discarded (unfeasible) 
* CE 22 is discarded (unfeasible) 
* CE 7 is refined into CE [64] 
* CE 3 is discarded (unfeasible) 
* CE 9 is discarded (unfeasible) 
* CE 5 is discarded (unfeasible) 
* CE 33 is refined into CE [65] 
* CE 29 is discarded (unfeasible) 
* CE 35 is discarded (unfeasible) 
* CE 31 is discarded (unfeasible) 
* CE 11 is discarded (unfeasible) 
* CE 13 is discarded (unfeasible) 
* CE 37 is discarded (unfeasible) 
* CE 39 is discarded (unfeasible) 
* CE 17 is refined into CE [66] 
* CE 25 is discarded (unfeasible) 
* CE 18 is refined into CE [67] 
* CE 26 is discarded (unfeasible) 
* CE 43 is discarded (unfeasible) 
* CE 51 is discarded (unfeasible) 
* CE 44 is refined into CE [68] 
* CE 52 is discarded (unfeasible) 
* CE 42 is refined into CE [69] 
* CE 50 is discarded (unfeasible) 
* CE 49 is discarded (unfeasible) 
* CE 16 is refined into CE [70] 
* CE 24 is discarded (unfeasible) 
* CE 23 is discarded (unfeasible) 


### Cost equations --> "Loop" of eval_Loopus2011_ex2_bb1_in/6 
* CEs [64] --> Loop 56 
* CEs [65] --> Loop 57 
* CEs [68] --> Loop 58 
* CEs [66] --> Loop 59 
* CEs [69] --> Loop 60 
* CEs [70] --> Loop 61 
* CEs [67] --> Loop 62 
* CEs [57] --> Loop 63 
* CEs [56] --> Loop 64 
* CEs [58] --> Loop 65 
* CEs [62] --> Loop 66 
* CEs [59] --> Loop 67 
* CEs [63] --> Loop 68 
* CEs [60] --> Loop 69 
* CEs [61] --> Loop 70 

### Ranking functions of CR eval_Loopus2011_ex2_bb1_in(V_r,V_d_0,V_f_0,V_c_0,V__0,B) 
* RF of phase [58]: [V__0/4-3/4]
* RF of phase [59]: [-V__0/4+63]

#### Partial ranking functions of CR eval_Loopus2011_ex2_bb1_in(V_r,V_d_0,V_f_0,V_c_0,V__0,B) 
* Partial RF of phase [58]:
  - RF of loop [58:1]:
    V__0/4-3/4
* Partial RF of phase [59]:
  - RF of loop [59:1]:
    -V__0/4+63


### Specialization of cost equations eval_Loopus2011_ex2_bb0_in/3 
* CE 2 is refined into CE [71,72,73,74,75,76,77,78,79,80,81,82,83] 


### Cost equations --> "Loop" of eval_Loopus2011_ex2_bb0_in/3 
* CEs [80] --> Loop 71 
* CEs [83] --> Loop 72 
* CEs [79] --> Loop 73 
* CEs [78] --> Loop 74 
* CEs [77] --> Loop 75 
* CEs [82] --> Loop 76 
* CEs [76] --> Loop 77 
* CEs [75] --> Loop 78 
* CEs [74] --> Loop 79 
* CEs [73] --> Loop 80 
* CEs [72] --> Loop 81 
* CEs [71] --> Loop 82 
* CEs [81] --> Loop 83 

### Ranking functions of CR eval_Loopus2011_ex2_bb0_in(V_r,V_s,B) 

#### Partial ranking functions of CR eval_Loopus2011_ex2_bb0_in(V_r,V_s,B) 


### Specialization of cost equations eval_Loopus2011_ex2_start/3 
* CE 1 is refined into CE [84,85,86,87,88,89,90,91,92,93,94,95,96] 


### Cost equations --> "Loop" of eval_Loopus2011_ex2_start/3 
* CEs [96] --> Loop 84 
* CEs [95] --> Loop 85 
* CEs [94] --> Loop 86 
* CEs [93] --> Loop 87 
* CEs [92] --> Loop 88 
* CEs [91] --> Loop 89 
* CEs [90] --> Loop 90 
* CEs [89] --> Loop 91 
* CEs [88] --> Loop 92 
* CEs [87] --> Loop 93 
* CEs [86] --> Loop 94 
* CEs [85] --> Loop 95 
* CEs [84] --> Loop 96 

### Ranking functions of CR eval_Loopus2011_ex2_start(V_r,V_s,B) 

#### Partial ranking functions of CR eval_Loopus2011_ex2_start(V_r,V_s,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_Loopus2011_ex2_bb1_in(V_r,V_d_0,V_f_0,V_c_0,V__0,B):
* Chain [[58],67]: 1*it(58)+0
  Such that:it(58) =< V__0/4

  with precondition: [V_f_0=0,V_c_0=4,B=2,1>=V_d_0,V_d_0>=0,V__0>=4] 

* Chain [[58],66]: 1*it(58)+0
  Such that:it(58) =< V__0/4

  with precondition: [V_f_0=0,V_c_0=4,B=2,1>=V_d_0,V_d_0>=0,V__0>=4] 

* Chain [[58],61,63]: 1*it(58)+1
  Such that:it(58) =< V__0/4

  with precondition: [V_f_0=0,V_c_0=4,B=2,1>=V_d_0,V_d_0>=0,V__0>=4] 

* Chain [[58],61,57,65]: 1*it(58)+2
  Such that:it(58) =< V__0/4

  with precondition: [V_f_0=0,V_c_0=4,B=2,1>=V_d_0,V_d_0>=0,V__0>=4] 

* Chain [[58],61,56,65]: 1*it(58)+2
  Such that:it(58) =< V__0/4

  with precondition: [V_f_0=0,V_c_0=4,B=2,1>=V_d_0,V_d_0>=0,V__0>=4] 

* Chain [70]: 0
  with precondition: [V_d_0=0,V_f_0=0,V_c_0=4,B=2,V__0>=252] 

* Chain [67]: 0
  with precondition: [V_f_0=0,V_c_0=4,B=2,2>=V_d_0,V_d_0>=0] 

* Chain [66]: 0
  with precondition: [V_f_0=0,V_c_0=4,B=2,1>=V_d_0,3>=V__0,V_d_0>=0] 

* Chain [62,[59],69]: 1*it(59)+1
  Such that:it(59) =< -V__0/4+62

  with precondition: [V_d_0=0,V_f_0=0,V_c_0=4,B=2,247>=V__0] 

* Chain [62,[59],68]: 1*it(59)+1
  Such that:it(59) =< -V__0/4

  with precondition: [V_d_0=0,V_f_0=0,V_c_0=4,B=2,0>=V__0+7] 

* Chain [62,[59],67]: 1*it(59)+1
  Such that:it(59) =< -V__0/4+62

  with precondition: [V_d_0=0,V_f_0=0,V_c_0=4,B=2,247>=V__0] 

* Chain [62,[59],60,64]: 1*it(59)+2
  Such that:it(59) =< -V__0/4

  with precondition: [V_d_0=0,V_f_0=0,V_c_0=4,B=2,0>=V__0+6] 

* Chain [62,[59],60,63]: 1*it(59)+2
  Such that:it(59) =< -V__0/4+62

  with precondition: [V_d_0=0,V_f_0=0,V_c_0=4,B=2,247>=V__0] 

* Chain [62,[59],60,57,65]: 1*it(59)+3
  Such that:it(59) =< -V__0/4+62

  with precondition: [V_d_0=0,V_f_0=0,V_c_0=4,B=2,247>=V__0] 

* Chain [62,[59],60,56,65]: 1*it(59)+3
  Such that:it(59) =< -V__0/4+62

  with precondition: [V_d_0=0,V_f_0=0,V_c_0=4,B=2,247>=V__0] 

* Chain [62,69]: 1
  with precondition: [V_d_0=0,V_f_0=0,V_c_0=4,B=2,251>=V__0,V__0>=248] 

* Chain [62,68]: 1
  with precondition: [V_d_0=0,V_f_0=0,V_c_0=4,B=2,0>=V__0+3] 

* Chain [62,67]: 1
  with precondition: [V_d_0=0,V_f_0=0,V_c_0=4,B=2,251>=V__0] 

* Chain [62,60,64]: 2
  with precondition: [V_d_0=0,V_f_0=0,V_c_0=4,V__0+2=0,B=2] 

* Chain [62,60,63]: 2
  with precondition: [V_d_0=0,V_f_0=0,V_c_0=4,B=2,251>=V__0,V__0+2>=0] 

* Chain [62,60,57,65]: 3
  with precondition: [V_d_0=0,V_f_0=0,V_c_0=4,B=2,251>=V__0,V__0+1>=0] 

* Chain [62,60,56,65]: 3
  with precondition: [V_d_0=0,V_f_0=0,V_c_0=4,B=2,251>=V__0,V__0+2>=0] 


#### Cost of chains of eval_Loopus2011_ex2_bb0_in(V_r,V_s,B):
* Chain [83]: 0
  with precondition: [] 

* Chain [82]: 2
  with precondition: [V_s+2=0] 

* Chain [81]: 1
  with precondition: [251>=V_s] 

* Chain [80]: 3
  with precondition: [251>=V_s,V_s+2>=0] 

* Chain [79]: 3
  with precondition: [251>=V_s,V_s+1>=0] 

* Chain [78]: 1
  with precondition: [251>=V_s,V_s>=248] 

* Chain [77]: 5*s(12)+3
  Such that:s(11) =< -V_s/4+62
s(12) =< s(11)

  with precondition: [247>=V_s] 

* Chain [76]: 0
  with precondition: [3>=V_s] 

* Chain [75]: 1
  with precondition: [0>=V_s+3] 

* Chain [74]: 1*s(13)+2
  Such that:s(13) =< -V_s/4

  with precondition: [0>=V_s+6] 

* Chain [73]: 1*s(14)+1
  Such that:s(14) =< -V_s/4

  with precondition: [0>=V_s+7] 

* Chain [72]: 5*s(16)+2
  Such that:s(15) =< V_s/4
s(16) =< s(15)

  with precondition: [V_s>=4] 

* Chain [71]: 0
  with precondition: [V_s>=252] 


#### Cost of chains of eval_Loopus2011_ex2_start(V_r,V_s,B):
* Chain [96]: 0
  with precondition: [] 

* Chain [95]: 2
  with precondition: [V_s+2=0] 

* Chain [94]: 1
  with precondition: [251>=V_s] 

* Chain [93]: 3
  with precondition: [251>=V_s,V_s+2>=0] 

* Chain [92]: 3
  with precondition: [251>=V_s,V_s+1>=0] 

* Chain [91]: 1
  with precondition: [251>=V_s,V_s>=248] 

* Chain [90]: 5*s(18)+3
  Such that:s(17) =< -V_s/4+62
s(18) =< s(17)

  with precondition: [247>=V_s] 

* Chain [89]: 0
  with precondition: [3>=V_s] 

* Chain [88]: 1
  with precondition: [0>=V_s+3] 

* Chain [87]: 1*s(19)+2
  Such that:s(19) =< -V_s/4

  with precondition: [0>=V_s+6] 

* Chain [86]: 1*s(20)+1
  Such that:s(20) =< -V_s/4

  with precondition: [0>=V_s+7] 

* Chain [85]: 5*s(22)+2
  Such that:s(21) =< V_s/4
s(22) =< s(21)

  with precondition: [V_s>=4] 

* Chain [84]: 0
  with precondition: [V_s>=252] 


Closed-form bounds of eval_Loopus2011_ex2_start(V_r,V_s,B): 
-------------------------------------
* Chain [96] with precondition: [] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [95] with precondition: [V_s+2=0] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [94] with precondition: [251>=V_s] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [93] with precondition: [251>=V_s,V_s+2>=0] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [92] with precondition: [251>=V_s,V_s+1>=0] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [91] with precondition: [251>=V_s,V_s>=248] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [90] with precondition: [247>=V_s] 
    - Upper bound: -5/4*V_s+313 
    - Complexity: n 
* Chain [89] with precondition: [3>=V_s] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [88] with precondition: [0>=V_s+3] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [87] with precondition: [0>=V_s+6] 
    - Upper bound: -V_s/4+2 
    - Complexity: n 
* Chain [86] with precondition: [0>=V_s+7] 
    - Upper bound: -V_s/4+1 
    - Complexity: n 
* Chain [85] with precondition: [V_s>=4] 
    - Upper bound: 5/4*V_s+2 
    - Complexity: n 
* Chain [84] with precondition: [V_s>=252] 
    - Upper bound: 0 
    - Complexity: constant 

### Maximum cost of eval_Loopus2011_ex2_start(V_r,V_s,B): max([max([3,nat(-V_s/4+62)*5+3,nat(V_s/4)*5+2]),nat(-V_s/4)+2]) 
Asymptotic class: n 
* Total analysis performed in 799 ms.

