WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_t27_bb3_in/5,eval_t27_bb4_in/5]
1. recursive  : [eval_t27_bb1_in/3,eval_t27_bb2_in/3,eval_t27_bb3_in_loop_cont/4]
2. non_recursive  : [eval_t27_stop/1]
3. non_recursive  : [eval_t27_bb5_in/1]
4. non_recursive  : [eval_t27_bb1_in_loop_cont/2]
5. non_recursive  : [eval_t27_bb0_in/3]
6. non_recursive  : [eval_t27_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_t27_bb3_in/5
1. SCC is partially evaluated into eval_t27_bb1_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_t27_bb0_in/3
6. SCC is partially evaluated into eval_t27_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_t27_bb3_in/5 
* CE 6 is refined into CE [7] 
* CE 5 is refined into CE [8] 


### Cost equations --> "Loop" of eval_t27_bb3_in/5 
* CEs [8] --> Loop 7 
* CEs [7] --> Loop 8 

### Ranking functions of CR eval_t27_bb3_in(V__01,V__0,V__1,B,C) 
* RF of phase [7]: [V__1/100-99/100]

#### Partial ranking functions of CR eval_t27_bb3_in(V__01,V__0,V__1,B,C) 
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    V__1/100-99/100


### Specialization of cost equations eval_t27_bb1_in/3 
* CE 4 is refined into CE [9] 
* CE 3 is refined into CE [10,11] 


### Cost equations --> "Loop" of eval_t27_bb1_in/3 
* CEs [11] --> Loop 9 
* CEs [10] --> Loop 10 
* CEs [9] --> Loop 11 

### Ranking functions of CR eval_t27_bb1_in(V__01,V__0,B) 
* RF of phase [9]: [-V__0]
* RF of phase [10]: [-V__0,-V__01/1000-9/10]

#### Partial ranking functions of CR eval_t27_bb1_in(V__01,V__0,B) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    -V__0
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    -V__0
    -V__01/1000-9/10


### Specialization of cost equations eval_t27_bb0_in/3 
* CE 2 is refined into CE [12,13,14,15] 


### Cost equations --> "Loop" of eval_t27_bb0_in/3 
* CEs [15] --> Loop 12 
* CEs [12] --> Loop 13 
* CEs [14] --> Loop 14 
* CEs [13] --> Loop 15 

### Ranking functions of CR eval_t27_bb0_in(V_n,V_y,B) 

#### Partial ranking functions of CR eval_t27_bb0_in(V_n,V_y,B) 


### Specialization of cost equations eval_t27_start/3 
* CE 1 is refined into CE [16,17,18,19] 


### Cost equations --> "Loop" of eval_t27_start/3 
* CEs [19] --> Loop 16 
* CEs [18] --> Loop 17 
* CEs [17] --> Loop 18 
* CEs [16] --> Loop 19 

### Ranking functions of CR eval_t27_start(V_n,V_y,B) 

#### Partial ranking functions of CR eval_t27_start(V_n,V_y,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_t27_bb3_in(V__01,V__0,V__1,B,C):
* Chain [[7],8]: 1*it(7)+0
  Such that:it(7) =< V__1/100-C/100

  with precondition: [B=2,0>=V__0+1,99>=C,C>=0,V__01+1000>=V__1,V__1>=C+100] 

* Chain [8]: 0
  with precondition: [B=2,V__1=C,0>=V__0+1,99>=V__1,V__01+1000>=V__1] 


#### Cost of chains of eval_t27_bb1_in(V__01,V__0,B):
* Chain [[10],[9],11]: 1*it(9)+1*it(10)+1*s(3)+0
  Such that:it(10) =< -V__01/1000
s(3) =< V__01/100-10*V__0
aux(1) =< -V__0
it(9) =< aux(1)
it(10) =< aux(1)

  with precondition: [B=3,0>=V__01+901,0>=V__0+2,V__01>=1000*V__0+100] 

* Chain [[10],11]: 1*it(10)+0
  Such that:it(10) =< -V__01/1000
it(10) =< -V__0

  with precondition: [B=3,0>=V__0+1,1000*V__0+99>=V__01] 

* Chain [[9],11]: 1*it(9)+1*s(3)+0
  Such that:s(3) =< V__01/100-10*V__0
it(9) =< -V__0

  with precondition: [B=3,0>=V__0+1,V__01+900>=0] 

* Chain [11]: 0
  with precondition: [B=3,V__0>=0] 


#### Cost of chains of eval_t27_bb0_in(V_n,V_y,B):
* Chain [15]: 1*s(4)+1*s(5)+0
  Such that:s(4) =< -10*V_n+V_y/100
s(5) =< -V_n

  with precondition: [0>=V_n+1,V_y+900>=0] 

* Chain [14]: 1*s(6)+0
  Such that:s(6) =< -V_n
s(6) =< -V_y/1000

  with precondition: [0>=V_n+1,1000*V_n+99>=V_y] 

* Chain [13]: 1*s(7)+1*s(8)+1*s(10)+0
  Such that:s(8) =< -10*V_n+V_y/100
s(9) =< -V_n
s(7) =< -V_y/1000
s(10) =< s(9)
s(7) =< s(9)

  with precondition: [0>=V_n+2,0>=V_y+901,V_y>=1000*V_n+100] 

* Chain [12]: 0
  with precondition: [V_n>=0] 


#### Cost of chains of eval_t27_start(V_n,V_y,B):
* Chain [19]: 1*s(11)+1*s(12)+0
  Such that:s(11) =< -10*V_n+V_y/100
s(12) =< -V_n

  with precondition: [0>=V_n+1,V_y+900>=0] 

* Chain [18]: 1*s(13)+0
  Such that:s(13) =< -V_n
s(13) =< -V_y/1000

  with precondition: [0>=V_n+1,1000*V_n+99>=V_y] 

* Chain [17]: 1*s(14)+1*s(16)+1*s(17)+0
  Such that:s(14) =< -10*V_n+V_y/100
s(15) =< -V_n
s(16) =< -V_y/1000
s(17) =< s(15)
s(16) =< s(15)

  with precondition: [0>=V_n+2,0>=V_y+901,V_y>=1000*V_n+100] 

* Chain [16]: 0
  with precondition: [V_n>=0] 


Closed-form bounds of eval_t27_start(V_n,V_y,B): 
-------------------------------------
* Chain [19] with precondition: [0>=V_n+1,V_y+900>=0] 
    - Upper bound: -11*V_n+V_y/100 
    - Complexity: n 
* Chain [18] with precondition: [0>=V_n+1,1000*V_n+99>=V_y] 
    - Upper bound: -V_n 
    - Complexity: n 
* Chain [17] with precondition: [0>=V_n+2,0>=V_y+901,V_y>=1000*V_n+100] 
    - Upper bound: -11*V_n+9/1000*V_y 
    - Complexity: n 
* Chain [16] with precondition: [V_n>=0] 
    - Upper bound: 0 
    - Complexity: constant 

### Maximum cost of eval_t27_start(V_n,V_y,B): nat(-V_y/1000)+nat(-10*V_n+V_y/100)+nat(-V_n) 
Asymptotic class: n 
* Total analysis performed in 64 ms.

