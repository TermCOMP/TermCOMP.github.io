WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_speedpldi2_bb1_in/4,eval_speedpldi2_bb2_in/4,eval_speedpldi2_bb3_in/4]
1. non_recursive  : [eval_speedpldi2_stop/1]
2. non_recursive  : [eval_speedpldi2_bb4_in/1]
3. non_recursive  : [eval_speedpldi2_bb1_in_loop_cont/2]
4. non_recursive  : [eval_speedpldi2_bb0_in/3]
5. non_recursive  : [eval_speedpldi2_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_speedpldi2_bb1_in/4
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_speedpldi2_bb0_in/3
5. SCC is partially evaluated into eval_speedpldi2_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_speedpldi2_bb1_in/4 
* CE 7 is refined into CE [8] 
* CE 6 is refined into CE [9] 
* CE 5 is refined into CE [10] 


### Cost equations --> "Loop" of eval_speedpldi2_bb1_in/4 
* CEs [9] --> Loop 8 
* CEs [10] --> Loop 9 
* CEs [8] --> Loop 10 

### Ranking functions of CR eval_speedpldi2_bb1_in(V_m,V_v2_0,V_v1_0,B) 
* RF of phase [8,9]: [V_v2_0+2*V_v1_0-1]

#### Partial ranking functions of CR eval_speedpldi2_bb1_in(V_m,V_v2_0,V_v1_0,B) 
* Partial RF of phase [8,9]:
  - RF of loop [8:1]:
    V_m-V_v2_0 depends on loops [9:1] 
    V_v1_0
  - RF of loop [9:1]:
    -V_m+V_v2_0+1 depends on loops [8:1] 
    V_v2_0 depends on loops [8:1] 


### Specialization of cost equations eval_speedpldi2_bb0_in/3 
* CE 4 is refined into CE [11,12] 
* CE 3 is refined into CE [13] 
* CE 2 is refined into CE [14] 


### Cost equations --> "Loop" of eval_speedpldi2_bb0_in/3 
* CEs [12] --> Loop 11 
* CEs [13] --> Loop 12 
* CEs [14] --> Loop 13 
* CEs [11] --> Loop 14 

### Ranking functions of CR eval_speedpldi2_bb0_in(V_n,V_m,B) 

#### Partial ranking functions of CR eval_speedpldi2_bb0_in(V_n,V_m,B) 


### Specialization of cost equations eval_speedpldi2_start/3 
* CE 1 is refined into CE [15,16,17,18] 


### Cost equations --> "Loop" of eval_speedpldi2_start/3 
* CEs [18] --> Loop 15 
* CEs [17] --> Loop 16 
* CEs [16] --> Loop 17 
* CEs [15] --> Loop 18 

### Ranking functions of CR eval_speedpldi2_start(V_n,V_m,B) 

#### Partial ranking functions of CR eval_speedpldi2_start(V_n,V_m,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_speedpldi2_bb1_in(V_m,V_v2_0,V_v1_0,B):
* Chain [[8,9],10]: 1*it(8)+1*it(9)+0
  Such that:it(8) =< V_v1_0
aux(20) =< V_v2_0+2*V_v1_0
it(8) =< aux(20)
it(9) =< aux(20)

  with precondition: [B=2,V_m>=1,V_v2_0>=0,V_v1_0>=1] 

* Chain [10]: 0
  with precondition: [V_v1_0=0,B=2,V_m>=1,V_v2_0>=0] 


#### Cost of chains of eval_speedpldi2_bb0_in(V_n,V_m,B):
* Chain [14]: 0
  with precondition: [V_n=0,V_m>=1] 

* Chain [13]: 0
  with precondition: [0>=V_n+1] 

* Chain [12]: 0
  with precondition: [0>=V_m] 

* Chain [11]: 1*s(1)+1*s(3)+0
  Such that:s(1) =< V_n
s(2) =< 2*V_n
s(1) =< s(2)
s(3) =< s(2)

  with precondition: [V_n>=1,V_m>=1] 


#### Cost of chains of eval_speedpldi2_start(V_n,V_m,B):
* Chain [18]: 0
  with precondition: [V_n=0,V_m>=1] 

* Chain [17]: 0
  with precondition: [0>=V_n+1] 

* Chain [16]: 0
  with precondition: [0>=V_m] 

* Chain [15]: 1*s(4)+1*s(6)+0
  Such that:s(4) =< V_n
s(5) =< 2*V_n
s(4) =< s(5)
s(6) =< s(5)

  with precondition: [V_n>=1,V_m>=1] 


Closed-form bounds of eval_speedpldi2_start(V_n,V_m,B): 
-------------------------------------
* Chain [18] with precondition: [V_n=0,V_m>=1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [17] with precondition: [0>=V_n+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [16] with precondition: [0>=V_m] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [15] with precondition: [V_n>=1,V_m>=1] 
    - Upper bound: 3*V_n 
    - Complexity: n 

### Maximum cost of eval_speedpldi2_start(V_n,V_m,B): nat(2*V_n)+nat(V_n) 
Asymptotic class: n 
* Total analysis performed in 52 ms.

