WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_nestedLoop_6/7,eval_nestedLoop_7/8,eval_nestedLoop_bb4_in/7,eval_nestedLoop_bb5_in/8]
1. recursive  : [eval_nestedLoop_2/8,eval_nestedLoop_3/9,eval_nestedLoop_bb2_in/8,eval_nestedLoop_bb3_in/9,eval_nestedLoop_bb4_in_loop_cont/9]
2. recursive  : [eval_nestedLoop_0/5,eval_nestedLoop_1/6,eval_nestedLoop_bb1_in/5,eval_nestedLoop_bb2_in_loop_cont/10,eval_nestedLoop_bb6_in/9]
3. non_recursive  : [eval_nestedLoop_stop/1]
4. non_recursive  : [eval_nestedLoop_bb7_in/1]
5. non_recursive  : [eval_nestedLoop_bb1_in_loop_cont/2]
6. non_recursive  : [eval_nestedLoop_bb0_in/4]
7. non_recursive  : [eval_nestedLoop_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_nestedLoop_bb4_in/7
1. SCC is partially evaluated into eval_nestedLoop_bb2_in/8
2. SCC is partially evaluated into eval_nestedLoop_bb1_in/5
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_nestedLoop_bb0_in/4
7. SCC is partially evaluated into eval_nestedLoop_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_nestedLoop_bb4_in/7 
* CE 12 is refined into CE [13] 
* CE 11 is refined into CE [14] 


### Cost equations --> "Loop" of eval_nestedLoop_bb4_in/7 
* CEs [14] --> Loop 13 
* CEs [13] --> Loop 14 

### Ranking functions of CR eval_nestedLoop_bb4_in(V_N,V_j_0,V_i_1,V_7,V_k_0,B,C) 
* RF of phase [14]: [V_N-V_k_0]

#### Partial ranking functions of CR eval_nestedLoop_bb4_in(V_N,V_j_0,V_i_1,V_7,V_k_0,B,C) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    V_N-V_k_0


### Specialization of cost equations eval_nestedLoop_bb2_in/8 
* CE 10 is refined into CE [15,16] 
* CE 8 is refined into CE [17] 
* CE 9 is refined into CE [18] 


### Cost equations --> "Loop" of eval_nestedLoop_bb2_in/8 
* CEs [18] --> Loop 15 
* CEs [17] --> Loop 16 
* CEs [16] --> Loop 17 
* CEs [15] --> Loop 18 

### Ranking functions of CR eval_nestedLoop_bb2_in(V_m,V_N,V_j_0,V_i_1,B,C,D,E) 
* RF of phase [17,18]: [V_m-V_j_0]

#### Partial ranking functions of CR eval_nestedLoop_bb2_in(V_m,V_N,V_j_0,V_i_1,B,C,D,E) 
* Partial RF of phase [17,18]:
  - RF of loop [17:1]:
    V_N-V_i_1
  - RF of loop [17:1,18:1]:
    V_m-V_j_0


### Specialization of cost equations eval_nestedLoop_bb1_in/5 
* CE 7 is refined into CE [19,20,21,22] 
* CE 6 is refined into CE [23] 


### Cost equations --> "Loop" of eval_nestedLoop_bb1_in/5 
* CEs [23] --> Loop 19 
* CEs [21,22] --> Loop 20 
* CEs [20] --> Loop 21 
* CEs [19] --> Loop 22 

### Ranking functions of CR eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) 
* RF of phase [20,21,22]: [V_n-V_i_0]

#### Partial ranking functions of CR eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B) 
* Partial RF of phase [20,21,22]:
  - RF of loop [20:1,21:1,22:1]:
    V_n-V_i_0


### Specialization of cost equations eval_nestedLoop_bb0_in/4 
* CE 5 is refined into CE [24,25] 
* CE 4 is refined into CE [26] 
* CE 3 is refined into CE [27] 
* CE 2 is refined into CE [28] 


### Cost equations --> "Loop" of eval_nestedLoop_bb0_in/4 
* CEs [25] --> Loop 23 
* CEs [24] --> Loop 24 
* CEs [26] --> Loop 25 
* CEs [27] --> Loop 26 
* CEs [28] --> Loop 27 

### Ranking functions of CR eval_nestedLoop_bb0_in(V_n,V_m,V_N,B) 

#### Partial ranking functions of CR eval_nestedLoop_bb0_in(V_n,V_m,V_N,B) 


### Specialization of cost equations eval_nestedLoop_start/4 
* CE 1 is refined into CE [29,30,31,32,33] 


### Cost equations --> "Loop" of eval_nestedLoop_start/4 
* CEs [33] --> Loop 28 
* CEs [32] --> Loop 29 
* CEs [31] --> Loop 30 
* CEs [30] --> Loop 31 
* CEs [29] --> Loop 32 

### Ranking functions of CR eval_nestedLoop_start(V_n,V_m,V_N,B) 

#### Partial ranking functions of CR eval_nestedLoop_start(V_n,V_m,V_N,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_nestedLoop_bb4_in(V_N,V_j_0,V_i_1,V_7,V_k_0,B,C):
* Chain [[14],13]: 1*it(14)+0
  Such that:it(14) =< -V_k_0+C

  with precondition: [B=2,V_N>=0,V_j_0>=0,V_7>=1,V_k_0>=V_i_1,C>=V_k_0+1,V_N>=C] 

* Chain [13]: 0
  with precondition: [B=2,V_k_0=C,V_N>=0,V_j_0>=0,V_7>=1,V_k_0>=V_i_1] 


#### Cost of chains of eval_nestedLoop_bb2_in(V_m,V_N,V_j_0,V_i_1,B,C,D,E):
* Chain [[17,18],16]: 1*it(17)+1*it(18)+1*s(3)+0
  Such that:aux(3) =< V_N-V_i_1
aux(4) =< -V_i_1+D
aux(5) =< -V_j_0+C
it(17) =< aux(5)
it(18) =< aux(5)
it(17) =< aux(3)
s(3) =< aux(3)
it(17) =< aux(4)
s(3) =< aux(4)

  with precondition: [B=3,V_m=C,V_N>=0,V_j_0>=0,V_m>=V_j_0+1,D>=V_i_1] 

* Chain [[17,18],15]: 1*it(17)+1*it(18)+1*s(3)+0
  Such that:aux(1) =< V_m-V_j_0
aux(3) =< V_N-V_i_1
aux(2) =< -V_j_0+C
aux(4) =< -V_i_1+D
it(17) =< aux(1)
it(18) =< aux(1)
it(17) =< aux(2)
it(18) =< aux(2)
it(17) =< aux(3)
s(3) =< aux(3)
it(17) =< aux(4)
s(3) =< aux(4)

  with precondition: [B=3,0>=E,V_N>=0,V_j_0>=0,C>=V_j_0+1,D>=V_i_1,V_m>=C] 

* Chain [16]: 0
  with precondition: [B=3,V_j_0=V_m,D=V_i_1,V_j_0=C,V_N>=0,V_j_0>=0] 

* Chain [15]: 0
  with precondition: [B=3,D=V_i_1,V_j_0=C,0>=E,V_N>=0,V_j_0>=0,V_m>=V_j_0] 


#### Cost of chains of eval_nestedLoop_bb1_in(V_n,V_m,V_N,V_i_0,B):
* Chain [[20,21,22],19]: 3*it(20)+1*s(28)+1*s(29)+2*s(30)+1*s(31)+1*s(32)+0
  Such that:aux(15) =< V_n-V_i_0
aux(10) =< V_m
aux(14) =< V_N
aux(11) =< V_N-V_i_0
it(20) =< aux(15)
aux(13) =< aux(10)
s(37) =< it(20)*aux(14)
s(38) =< it(20)*aux(11)
s(35) =< it(20)*aux(10)
s(36) =< it(20)*aux(13)
s(34) =< s(38)
s(34) =< s(37)
s(28) =< s(36)
s(29) =< s(36)
s(28) =< s(34)
s(30) =< s(34)
s(31) =< s(35)
s(32) =< s(35)
s(31) =< s(34)

  with precondition: [B=4,V_m>=0,V_N>=0,V_i_0>=0,V_n>=V_i_0+1] 

* Chain [19]: 0
  with precondition: [B=4,V_n>=0,V_m>=0,V_N>=0,V_i_0>=0] 


#### Cost of chains of eval_nestedLoop_bb0_in(V_n,V_m,V_N,B):
* Chain [27]: 0
  with precondition: [0>=V_n+1] 

* Chain [26]: 0
  with precondition: [0>=V_m+1] 

* Chain [25]: 0
  with precondition: [0>=V_N+1] 

* Chain [24]: 0
  with precondition: [V_n>=0,V_m>=0,V_N>=0] 

* Chain [23]: 3*s(43)+1*s(50)+1*s(51)+2*s(52)+1*s(53)+1*s(54)+0
  Such that:s(39) =< V_n
s(40) =< V_m
aux(17) =< V_N
s(43) =< s(39)
s(44) =< s(40)
s(45) =< s(43)*aux(17)
s(47) =< s(43)*s(40)
s(48) =< s(43)*s(44)
s(50) =< s(48)
s(51) =< s(48)
s(50) =< s(45)
s(52) =< s(45)
s(53) =< s(47)
s(54) =< s(47)
s(53) =< s(45)

  with precondition: [V_n>=1,V_m>=0,V_N>=0] 


#### Cost of chains of eval_nestedLoop_start(V_n,V_m,V_N,B):
* Chain [32]: 0
  with precondition: [0>=V_n+1] 

* Chain [31]: 0
  with precondition: [0>=V_m+1] 

* Chain [30]: 0
  with precondition: [0>=V_N+1] 

* Chain [29]: 0
  with precondition: [V_n>=0,V_m>=0,V_N>=0] 

* Chain [28]: 3*s(58)+1*s(63)+1*s(64)+2*s(65)+1*s(66)+1*s(67)+0
  Such that:s(55) =< V_n
s(56) =< V_m
s(57) =< V_N
s(58) =< s(55)
s(59) =< s(56)
s(60) =< s(58)*s(57)
s(61) =< s(58)*s(56)
s(62) =< s(58)*s(59)
s(63) =< s(62)
s(64) =< s(62)
s(63) =< s(60)
s(65) =< s(60)
s(66) =< s(61)
s(67) =< s(61)
s(66) =< s(60)

  with precondition: [V_n>=1,V_m>=0,V_N>=0] 


Closed-form bounds of eval_nestedLoop_start(V_n,V_m,V_N,B): 
-------------------------------------
* Chain [32] with precondition: [0>=V_n+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [31] with precondition: [0>=V_m+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [30] with precondition: [0>=V_N+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [29] with precondition: [V_n>=0,V_m>=0,V_N>=0] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [28] with precondition: [V_n>=1,V_m>=0,V_N>=0] 
    - Upper bound: 4*V_n*V_m+3*V_n+2*V_n*V_N 
    - Complexity: n^2 

### Maximum cost of eval_nestedLoop_start(V_n,V_m,V_N,B): nat(V_n)*4*nat(V_m)+nat(V_n)*3+nat(V_n)*2*nat(V_N) 
Asymptotic class: n^2 
* Total analysis performed in 172 ms.

