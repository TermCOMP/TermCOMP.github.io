MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_foo_11/5,eval_foo_12/6,eval_foo_bb6_in/5,eval_foo_bb7_in/5,eval_foo_bb8_in/6]
1. recursive  : [eval_foo_5/5,eval_foo_6/6,eval_foo__critedge4_in/8,eval_foo_bb3_in/5,eval_foo_bb4_in/5,eval_foo_bb5_in/6,eval_foo_bb6_in_loop_cont/9]
2. recursive  : [eval_foo__critedge_in/5,eval_foo_bb1_in/3,eval_foo_bb2_in/3,eval_foo_bb3_in_loop_cont/6]
3. non_recursive  : [eval_foo_stop/1]
4. non_recursive  : [eval_foo_bb9_in/1]
5. non_recursive  : [eval_foo_bb1_in_loop_cont/2]
6. non_recursive  : [eval_foo_bb0_in/3]
7. non_recursive  : [eval_foo_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_foo_bb6_in/5
1. SCC is partially evaluated into eval_foo_bb3_in/5
2. SCC is partially evaluated into eval_foo_bb1_in/3
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_foo_bb0_in/3
7. SCC is partially evaluated into eval_foo_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_foo_bb6_in/5 
* CE 8 is refined into CE [11] 
* CE 10 is refined into CE [12] 
* CE 9 is refined into CE [13] 


### Cost equations --> "Loop" of eval_foo_bb6_in/5 
* CEs [13] --> Loop 11 
* CEs [11] --> Loop 12 
* CEs [12] --> Loop 13 

### Ranking functions of CR eval_foo_bb6_in(V__23,V__2,B,C,D) 
* RF of phase [11]: [V__23/3-V__2/3-2/3]

#### Partial ranking functions of CR eval_foo_bb6_in(V__23,V__2,B,C,D) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    V__23/3-V__2/3-2/3


### Specialization of cost equations eval_foo_bb3_in/5 
* CE 5 is refined into CE [14] 
* CE 7 is refined into CE [15] 
* CE 6 is refined into CE [16,17,18,19] 


### Cost equations --> "Loop" of eval_foo_bb3_in/5 
* CEs [19] --> Loop 14 
* CEs [18] --> Loop 15 
* CEs [17] --> Loop 16 
* CEs [16] --> Loop 17 
* CEs [14] --> Loop 18 
* CEs [15] --> Loop 19 

### Ranking functions of CR eval_foo_bb3_in(V__12,V__1,B,C,D) 
* RF of phase [14,16]: [V__12-4,V__12-V__1-3,V__12+2*V__1-6]
* RF of phase [17]: [V__12/2-1/2,V__12/2-V__1/2]

#### Partial ranking functions of CR eval_foo_bb3_in(V__12,V__1,B,C,D) 
* Partial RF of phase [14,16]:
  - RF of loop [14:1]:
    V__12+2*V__1-9
    V__12/2-7/2
    2/5*V__12-2/5*V__1-13/5
  - RF of loop [16:1]:
    V__12/2-2
    V__12/2-V__1/2-3/2
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    V__12/2-1/2
    V__12/2-V__1/2


### Specialization of cost equations eval_foo_bb1_in/3 
* CE 4 is refined into CE [20] 
* CE 3 is refined into CE [21,22,23,24,25,26,27,28,29,30,31,32,33] 


### Cost equations --> "Loop" of eval_foo_bb1_in/3 
* CEs [32] --> Loop 20 
* CEs [33] --> Loop 21 
* CEs [31] --> Loop 22 
* CEs [30] --> Loop 23 
* CEs [25] --> Loop 24 
* CEs [23] --> Loop 25 
* CEs [22] --> Loop 26 
* CEs [28] --> Loop 27 
* CEs [27] --> Loop 28 
* CEs [29] --> Loop 29 
* CEs [26] --> Loop 30 
* CEs [24] --> Loop 31 
* CEs [21] --> Loop 32 
* CEs [20] --> Loop 33 

### Ranking functions of CR eval_foo_bb1_in(V__01,V__0,B) 

#### Partial ranking functions of CR eval_foo_bb1_in(V__01,V__0,B) 
* Partial RF of phase [20,21,22,23,24,25,26,27,28,29,30,31,32]:
  - RF of loop [20:1]:
    V__01-3 depends on loops [25:1,26:1] 
  - RF of loop [20:1,23:1]:
    V__01/7+3/7*V__0-9/7
  - RF of loop [21:1]:
    V__01/6-5/6 depends on loops [25:1,26:1] 
    V__01/9+V__0/3-11/9
  - RF of loop [22:1]:
    V__01/3-1 depends on loops [25:1,26:1] 
    V__01/9+V__0/3-1
  - RF of loop [23:1]:
    V__01/4-3/4 depends on loops [25:1,26:1] 
  - RF of loop [24:1]:
    V__01 depends on loops [25:1,26:1] 
  - RF of loop [24:1,25:1,26:1,32:1]:
    V__0/2-1/2 depends on loops [20:1,21:1,22:1,23:1,27:1,28:1,29:1,30:1,31:1] 
  - RF of loop [26:1]:
    -V__01+1 depends on loops [20:1,21:1,22:1,23:1,24:1,27:1,28:1,29:1,30:1,31:1,32:1] 
  - RF of loop [27:1]:
    V__01/6-7/6 depends on loops [25:1,26:1] 
    V__01/9+V__0/3-13/9
  - RF of loop [28:1]:
    V__01/3-4/3 depends on loops [25:1,26:1] 
    V__01/9+V__0/3-10/9
  - RF of loop [29:1]:
    V__01/4-5/4 depends on loops [25:1,26:1] 
    V__01/7+3/7*V__0-11/7
  - RF of loop [30:1]:
    V__01/8-7/8 depends on loops [25:1,26:1] 
    V__01/11+3/11*V__0-13/11
  - RF of loop [31:1]:
    V__01/2-5/2 depends on loops [25:1,26:1] 
    V__01/3+V__0-11/3
  - RF of loop [32:1]:
    V__01-2 depends on loops [25:1,26:1] 


### Specialization of cost equations eval_foo_bb0_in/3 
* CE 2 is refined into CE [34,35] 


### Cost equations --> "Loop" of eval_foo_bb0_in/3 
* CEs [35] --> Loop 34 
* CEs [34] --> Loop 35 

### Ranking functions of CR eval_foo_bb0_in(V_x,V_y,B) 

#### Partial ranking functions of CR eval_foo_bb0_in(V_x,V_y,B) 


### Specialization of cost equations eval_foo_start/3 
* CE 1 is refined into CE [36,37] 


### Cost equations --> "Loop" of eval_foo_start/3 
* CEs [37] --> Loop 36 
* CEs [36] --> Loop 37 

### Ranking functions of CR eval_foo_start(V_x,V_y,B) 

#### Partial ranking functions of CR eval_foo_start(V_x,V_y,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_foo_bb6_in(V__23,V__2,B,C,D):
* Chain [[11],13]: 1*it(11)+0
  Such that:it(11) =< V__23/2-C/2

  with precondition: [B=2,V__23+2*V__2=2*D+C,V__23>=C+2,V__23+2*V__2+4>=3*C,3*C>=2*V__2+V__23] 

* Chain [[11],12]: 1*it(11)+0
  Such that:it(11) =< -V__2+D

  with precondition: [B=2,V__23+2*V__2=2*D+C,V__23>=C+2,3*C>=2*V__2+V__23+6] 

* Chain [13]: 0
  with precondition: [B=2,V__23=C,V__2=D,V__2+2>=V__23,V__23>=V__2] 

* Chain [12]: 0
  with precondition: [B=2,V__23=C,V__2=D,V__23>=V__2+3] 


#### Cost of chains of eval_foo_bb3_in(V__12,V__1,B,C,D):
* Chain [[17],19]: 1*it(17)+0
  Such that:it(17) =< V__12/2-D/2

  with precondition: [B=3,V__1=D,V__1>=1,C+1>=V__1,V__12>=C+2,2*V__1+2>=V__12+C] 

* Chain [[17],18]: 1*it(17)+0
  Such that:it(17) =< 1

  with precondition: [B=3,V__12=V__1+3,V__12=C+2,V__12=D+3,V__12>=4] 

* Chain [[14,16],[17],19]: 1*it(14)+1*it(16)+1*it(17)+1*s(3)+0
  Such that:it(17) =< 3/2
aux(1) =< V__12
aux(4) =< V__12+2*V__1
aux(5) =< V__12+2*V__1-3*D
aux(6) =< V__12-D
it(14) =< 2*V__12-2*V__1
aux(7) =< V__12/2
it(16) =< V__12/2-V__1/2
aux(8) =< V__12/2-D/2
s(3) =< V__12/3-V__1/3
it(14) =< 2/5*V__12-2/5*V__1
aux(9) =< V__12-V__1
it(17) =< aux(9)
s(3) =< aux(9)
it(14) =< aux(1)
it(16) =< aux(1)
it(14) =< aux(9)
it(16) =< aux(9)
it(14) =< aux(4)
it(16) =< aux(4)
it(14) =< aux(5)
it(16) =< aux(5)
it(14) =< aux(6)
it(16) =< aux(6)
it(14) =< aux(7)
it(16) =< aux(7)
it(14) =< aux(8)
it(16) =< aux(8)

  with precondition: [B=3,V__1>=1,D>=V__1,D>=C,C+1>=D,V__12+2*V__1>=3*D+4] 

* Chain [[14,16],[17],18]: 1*it(14)+1*it(16)+1*it(17)+1*s(3)+0
  Such that:it(17) =< 1
aux(1) =< V__12
aux(4) =< V__12+2*V__1
aux(5) =< V__12+2*V__1-3*C
aux(6) =< V__12-C
aux(7) =< V__12/2
it(16) =< V__12/2-V__1/2
aux(8) =< V__12/2-C/2
s(3) =< V__12/3-V__1/3
it(14) =< 2/5*V__12-2/5*V__1
aux(10) =< V__12-V__1
it(14) =< aux(1)
it(16) =< aux(1)
it(14) =< aux(10)
it(16) =< aux(10)
it(14) =< aux(4)
it(16) =< aux(4)
it(14) =< aux(5)
it(16) =< aux(5)
it(14) =< aux(6)
it(16) =< aux(6)
it(14) =< aux(7)
it(16) =< aux(7)
it(14) =< aux(8)
it(16) =< aux(8)

  with precondition: [B=3,C=D+1,V__1>=1,C>=V__1+1,V__12+2*V__1>=3*C+2] 

* Chain [[14,16],18]: 1*it(14)+1*it(16)+1*s(3)+0
  Such that:aux(1) =< V__12
aux(2) =< V__12-V__1
aux(3) =< V__12-V__1-C+D
aux(4) =< V__12+2*V__1
aux(5) =< V__12+2*V__1-C-2*D
aux(6) =< V__12-C
aux(7) =< V__12/2
it(16) =< V__12/2-V__1/2-C/2+D/2
aux(8) =< V__12/2-C/2
s(3) =< V__12/3-V__1/3-C/3+D/3
it(14) =< 2/5*V__12-2/5*V__1-2/5*C+2/5*D
it(14) =< aux(1)
it(16) =< aux(1)
it(14) =< aux(2)
it(16) =< aux(2)
it(14) =< aux(3)
it(16) =< aux(3)
it(14) =< aux(4)
it(16) =< aux(4)
it(14) =< aux(5)
it(16) =< aux(5)
it(14) =< aux(6)
it(16) =< aux(6)
it(14) =< aux(7)
it(16) =< aux(7)
it(14) =< aux(8)
it(16) =< aux(8)

  with precondition: [B=3,V__1>=1,D>=V__1,C>=D+2,V__12+2*V__1>=2*D+C+2] 

* Chain [[14,16],15,[17],19]: 1*it(14)+1*it(16)+1*it(17)+1*s(3)+1*s(4)+1
  Such that:it(17) =< 1/2
aux(1) =< V__12
aux(4) =< V__12+2*V__1
aux(5) =< V__12+2*V__1-3*C
it(14) =< 2*V__12-2*V__1+3
aux(7) =< V__12/2
it(16) =< V__12/2-V__1/2
s(3) =< V__12/3-V__1/3
s(3) =< V__12/3-V__1/3+1/2
it(14) =< 2/5*V__12-2/5*V__1
aux(11) =< V__12-V__1
aux(12) =< V__12-V__1+3/2
aux(13) =< V__12-C
aux(14) =< V__12/2-C/2
aux(3) =< aux(11)
aux(3) =< aux(12)
it(16) =< aux(12)
s(4) =< aux(13)
s(4) =< aux(14)
it(14) =< aux(1)
it(16) =< aux(1)
it(14) =< aux(11)
it(16) =< aux(11)
it(14) =< aux(3)
it(16) =< aux(3)
it(14) =< aux(4)
it(16) =< aux(4)
it(14) =< aux(5)
it(16) =< aux(5)
it(14) =< aux(13)
it(16) =< aux(13)
it(14) =< aux(7)
it(16) =< aux(7)
it(14) =< aux(14)
it(16) =< aux(14)

  with precondition: [B=3,C+1=D,V__1>=1,C>=V__1,V__12+2*V__1>=3*C+8] 

* Chain [[14,16],15,19]: 1*it(14)+1*it(16)+1*s(3)+1*s(4)+1
  Such that:aux(1) =< V__12
aux(2) =< V__12-V__1
aux(4) =< V__12+2*V__1
aux(5) =< V__12+2*V__1-C-2*D
it(14) =< 2*V__12-2*V__1-2*C+2*D
aux(7) =< V__12/2
it(16) =< V__12/2-V__1/2-C/2+D/2
s(3) =< V__12/3-V__1/3-C/3+D/3
it(14) =< 2/5*V__12-2/5*V__1-2/5*C+2/5*D
aux(15) =< V__12-V__1-C+D
aux(16) =< V__12-C
aux(17) =< V__12/2-C/2
it(16) =< aux(15)
s(4) =< aux(16)
s(4) =< aux(17)
it(14) =< aux(1)
it(16) =< aux(1)
it(14) =< aux(2)
it(16) =< aux(2)
it(14) =< aux(15)
it(14) =< aux(4)
it(16) =< aux(4)
it(14) =< aux(5)
it(16) =< aux(5)
it(14) =< aux(16)
it(16) =< aux(16)
it(14) =< aux(7)
it(16) =< aux(7)
it(14) =< aux(17)
it(16) =< aux(17)

  with precondition: [B=3,V__1>=1,D>=V__1+1,D>=C,C+1>=D,V__12+2*V__1>=2*D+C+4] 

* Chain [[14,16],15,18]: 1*it(14)+1*it(16)+1*s(3)+1*s(4)+1
  Such that:aux(1) =< V__12
aux(4) =< V__12+2*V__1
aux(5) =< V__12+2*V__1-3*D
it(14) =< 2*V__12-2*V__1+3
aux(7) =< V__12/2
it(16) =< V__12/2-V__1/2
s(3) =< V__12/3-V__1/3
s(3) =< V__12/3-V__1/3+1/2
it(14) =< 2/5*V__12-2/5*V__1
aux(18) =< V__12-V__1
aux(19) =< V__12-V__1+3/2
aux(20) =< V__12-D
aux(21) =< V__12/2-D/2
aux(3) =< aux(18)
aux(3) =< aux(19)
it(16) =< aux(19)
s(4) =< aux(20)
s(4) =< aux(21)
it(14) =< aux(1)
it(16) =< aux(1)
it(14) =< aux(18)
it(16) =< aux(18)
it(14) =< aux(3)
it(16) =< aux(3)
it(14) =< aux(4)
it(16) =< aux(4)
it(14) =< aux(5)
it(16) =< aux(5)
it(14) =< aux(20)
it(16) =< aux(20)
it(14) =< aux(7)
it(16) =< aux(7)
it(14) =< aux(21)
it(16) =< aux(21)

  with precondition: [B=3,C=D+1,V__1>=1,C>=V__1+2,V__12+2*V__1>=3*C+2] 

* Chain [19]: 0
  with precondition: [B=3,V__12=C,V__1=D,V__1>=1,V__1>=V__12] 

* Chain [18]: 0
  with precondition: [B=3,V__12=C,V__1=D,V__1>=1,V__12>=V__1+1] 

* Chain [15,[17],19]: 1*it(17)+1*s(4)+1
  Such that:it(17) =< 1/2
s(4) =< V__12/2-D/2

  with precondition: [B=3,D=C+1,V__12+2*V__1=3*D+3,3*D+1>=V__12,V__12>=D+5] 

* Chain [15,19]: 1*s(4)+1
  Such that:s(4) =< -V__1+D

  with precondition: [B=3,V__12+2*V__1=2*D+C+2,V__1>=1,D>=V__1+1,V__12+2*V__1>=3*D+1,3*D+2>=2*V__1+V__12] 

* Chain [15,18]: 1*s(4)+1
  Such that:s(4) =< V__12/2-D/2

  with precondition: [B=3,V__12+2*V__1=3*C,V__12+2*V__1=3*D+3,V__1>=1,V__12>=V__1+6] 


#### Cost of chains of eval_foo_bb1_in(V__01,V__0,B):
* Chain [[20,21,22,23,24,25,26,27,28,29,30,31,32],33]: 1*it(20)+3*it(21)+2*it(23)+1*it(24)+1*it(25)+1*it(26)+2*it(27)+1*it(28)+2*it(29)+2*it(30)+2*it(31)+1*it(32)+1*s(161)+1*s(162)+1*s(163)+1*s(172)+1*s(173)+1*s(174)+2*s(175)+1*s(184)+1*s(185)+1*s(186)+1*s(187)+1*s(195)+1*s(196)+1*s(197)+1*s(198)+2*s(199)+1*s(200)+4*s(210)+1*s(211)+1*s(213)+1*s(221)+1*s(222)+2*s(223)+1*s(236)+0
  Such that:aux(278) =< V__01+V__0
aux(280) =< V__01+3*V__0
aux(24) =< V__01+V__0/2
aux(285) =< V__01/2+V__0/2
aux(287) =< V__01/2+V__0/4
aux(289) =< V__01/2+3/4*V__0
aux(292) =< V__01/3+V__0
aux(299) =< V__01/7+3/7*V__0
aux(301) =< V__01/9+V__0/3
aux(303) =< V__01/11+3/11*V__0
aux(313) =< 10/9*V__01+4/3*V__0
aux(315) =< 10/9*V__01+10/3*V__0
aux(317) =< 11/9*V__01+2/3*V__0
aux(319) =< 11/9*V__01+5/3*V__0
aux(321) =< 11/9*V__01+11/3*V__0
aux(323) =< 25/18*V__01+7/6*V__0
aux(39) =< aux(278)
it(21) =< aux(278)
it(23) =< aux(278)
it(24) =< aux(278)
it(25) =< aux(278)
it(27) =< aux(278)
it(28) =< aux(278)
it(29) =< aux(278)
it(30) =< aux(278)
it(31) =< aux(278)
it(32) =< aux(278)
it(21) =< aux(280)
it(23) =< aux(280)
it(24) =< aux(280)
it(25) =< aux(280)
it(27) =< aux(280)
it(28) =< aux(280)
it(29) =< aux(280)
it(30) =< aux(280)
it(31) =< aux(280)
it(32) =< aux(280)
s(167) =< aux(280)
it(30) =< aux(285)
it(31) =< aux(285)
it(32) =< aux(285)
s(221) =< aux(285)
it(27) =< aux(287)
it(28) =< aux(287)
it(29) =< aux(287)
it(30) =< aux(287)
it(31) =< aux(287)
it(32) =< aux(287)
s(196) =< aux(287)
it(27) =< aux(289)
it(28) =< aux(289)
it(29) =< aux(289)
it(30) =< aux(289)
it(31) =< aux(289)
it(32) =< aux(289)
s(196) =< aux(289)
it(31) =< aux(292)
it(20) =< aux(299)
it(23) =< aux(299)
it(29) =< aux(299)
s(222) =< aux(299)
aux(70) =< aux(301)
it(21) =< aux(301)
it(27) =< aux(301)
it(28) =< aux(301)
s(222) =< aux(301)
it(30) =< aux(303)
aux(86) =< aux(313)
it(23) =< aux(313)
it(24) =< aux(313)
it(25) =< aux(313)
it(27) =< aux(313)
it(28) =< aux(313)
it(29) =< aux(313)
it(30) =< aux(313)
it(31) =< aux(313)
it(32) =< aux(313)
it(23) =< aux(315)
it(24) =< aux(315)
it(25) =< aux(315)
it(27) =< aux(315)
it(28) =< aux(315)
it(29) =< aux(315)
it(30) =< aux(315)
it(31) =< aux(315)
it(32) =< aux(315)
s(191) =< aux(315)
aux(178) =< aux(317)
it(28) =< aux(317)
it(29) =< aux(317)
it(30) =< aux(317)
it(31) =< aux(317)
it(32) =< aux(317)
aux(180) =< aux(319)
it(28) =< aux(319)
it(29) =< aux(319)
it(30) =< aux(319)
it(31) =< aux(319)
it(32) =< aux(319)
it(28) =< aux(321)
it(29) =< aux(321)
it(30) =< aux(321)
it(31) =< aux(321)
it(32) =< aux(321)
s(204) =< aux(321)
it(28) =< aux(323)
it(29) =< aux(323)
it(30) =< aux(323)
it(31) =< aux(323)
it(32) =< aux(323)
s(209) =< aux(323)
aux(49) =< aux(24)
aux(54) =< aux(280)
aux(53) =< aux(24)+1
aux(50) =< aux(278)
aux(37) =< aux(24)-2
aux(95) =< aux(24)*(1/3)-1/3
s(164) =< aux(39)*(1/2)
s(213) =< aux(178)*(2/5)
s(199) =< aux(178)*(1/3)
s(201) =< aux(180)*(1/2)
s(211) =< aux(178)*(1/2)
s(197) =< aux(178)*(2/5)
s(198) =< aux(178)*(1/2)
s(188) =< aux(86)*(1/2)
s(184) =< aux(70)*(3/2)
aux(40) =< it(20)*aux(37)
aux(38) =< it(20)*aux(278)
s(168) =< it(20)*aux(280)
s(170) =< it(20)*aux(24)
s(165) =< aux(38)*(1/2)
aux(65) =< it(21)*aux(53)
aux(63) =< it(21)*aux(50)
s(180) =< it(21)*aux(54)
aux(84) =< it(21)*aux(49)
s(163) =< aux(40)*(2/5)
s(162) =< aux(40)*(1/3)
s(161) =< aux(40)*(1/2)
s(177) =< aux(63)*(1/2)
s(172) =< aux(65)*(2/5)
s(174) =< aux(65)*(1/3)
s(173) =< aux(65)*(1/2)
s(195) =< it(23)*aux(95)
s(185) =< aux(84)*(2/5)
s(187) =< aux(84)*(1/3)
s(186) =< aux(84)*(1/2)
s(175) =< aux(39)
s(175) =< s(164)
s(223) =< s(167)
s(223) =< aux(39)
s(223) =< s(164)
s(213) =< aux(178)
s(211) =< aux(178)
s(213) =< s(204)
s(211) =< s(204)
s(213) =< aux(180)
s(211) =< aux(180)
s(213) =< s(201)
s(211) =< s(201)
s(206) =< aux(178)
s(206) =< s(209)
s(198) =< s(209)
s(200) =< aux(180)
s(200) =< s(201)
s(197) =< aux(178)
s(198) =< aux(178)
s(197) =< s(206)
s(198) =< s(206)
s(197) =< s(204)
s(198) =< s(204)
s(197) =< aux(180)
s(198) =< aux(180)
s(197) =< s(201)
s(198) =< s(201)
s(184) =< aux(84)
s(187) =< aux(84)
s(185) =< aux(63)
s(186) =< aux(63)
s(185) =< aux(84)
s(186) =< aux(84)
s(185) =< s(180)
s(186) =< s(180)
s(185) =< s(191)
s(186) =< s(191)
s(185) =< aux(86)
s(186) =< aux(86)
s(185) =< s(177)
s(186) =< s(177)
s(185) =< s(188)
s(186) =< s(188)
s(173) =< aux(65)
s(172) =< aux(63)
s(173) =< aux(63)
s(172) =< aux(84)
s(173) =< aux(84)
s(172) =< aux(65)
s(172) =< s(180)
s(173) =< s(180)
s(172) =< s(167)
s(173) =< s(167)
s(172) =< aux(39)
s(173) =< aux(39)
s(172) =< s(177)
s(173) =< s(177)
s(172) =< s(164)
s(173) =< s(164)
s(163) =< aux(38)
s(161) =< aux(38)
s(163) =< s(170)
s(161) =< s(170)
s(163) =< aux(40)
s(161) =< aux(40)
s(163) =< s(168)
s(161) =< s(168)
s(163) =< s(167)
s(161) =< s(167)
s(163) =< aux(39)
s(161) =< aux(39)
s(163) =< s(165)
s(161) =< s(165)
s(163) =< s(164)
s(161) =< s(164)

  with precondition: [B=4,V__0>=2] 

* Chain [33]: 0
  with precondition: [B=4,1>=V__0] 


#### Cost of chains of eval_foo_bb0_in(V_x,V_y,B):
* Chain [35]: 0
  with precondition: [1>=V_x] 

* Chain [34]: 3*s(256)+2*s(257)+2*s(258)+2*s(260)+1*s(261)+2*s(262)+2*s(263)+2*s(264)+1*s(265)+1*s(267)+1*s(268)+1*s(269)+1*s(270)+1*s(285)+2*s(286)+1*s(288)+1*s(289)+1*s(290)+1*s(292)+1*s(302)+1*s(303)+1*s(304)+1*s(306)+1*s(307)+1*s(308)+1*s(309)+1*s(310)+1*s(311)+1*s(312)+2*s(313)+2*s(314)+1*s(316)+6*s(317)+0
  Such that:s(239) =< V_x+V_y
s(245) =< V_x+V_y/3
s(240) =< 3*V_x+V_y
s(241) =< V_x/2+V_y
s(242) =< V_x/2+V_y/2
s(247) =< V_x/3+V_y/9
s(243) =< V_x/4+V_y/2
s(251) =< 2/3*V_x+11/9*V_y
s(244) =< 3/4*V_x+V_y/2
s(246) =< 3/7*V_x+V_y/7
s(248) =< 3/11*V_x+V_y/11
s(249) =< 4/3*V_x+10/9*V_y
s(252) =< 5/3*V_x+11/9*V_y
s(254) =< 7/6*V_x+25/18*V_y
s(250) =< 10/3*V_x+10/9*V_y
s(253) =< 11/3*V_x+11/9*V_y
s(256) =< s(239)
s(257) =< s(239)
s(258) =< s(239)
s(260) =< s(239)
s(261) =< s(239)
s(262) =< s(239)
s(263) =< s(239)
s(264) =< s(239)
s(265) =< s(239)
s(256) =< s(240)
s(257) =< s(240)
s(258) =< s(240)
s(260) =< s(240)
s(261) =< s(240)
s(262) =< s(240)
s(263) =< s(240)
s(264) =< s(240)
s(265) =< s(240)
s(263) =< s(242)
s(264) =< s(242)
s(265) =< s(242)
s(267) =< s(242)
s(260) =< s(243)
s(261) =< s(243)
s(262) =< s(243)
s(263) =< s(243)
s(264) =< s(243)
s(265) =< s(243)
s(268) =< s(243)
s(260) =< s(244)
s(261) =< s(244)
s(262) =< s(244)
s(263) =< s(244)
s(264) =< s(244)
s(265) =< s(244)
s(268) =< s(244)
s(264) =< s(245)
s(269) =< s(246)
s(257) =< s(246)
s(262) =< s(246)
s(270) =< s(246)
s(256) =< s(247)
s(260) =< s(247)
s(261) =< s(247)
s(270) =< s(247)
s(263) =< s(248)
s(257) =< s(249)
s(258) =< s(249)
s(260) =< s(249)
s(261) =< s(249)
s(262) =< s(249)
s(263) =< s(249)
s(264) =< s(249)
s(265) =< s(249)
s(257) =< s(250)
s(258) =< s(250)
s(260) =< s(250)
s(261) =< s(250)
s(262) =< s(250)
s(263) =< s(250)
s(264) =< s(250)
s(265) =< s(250)
s(261) =< s(251)
s(262) =< s(251)
s(263) =< s(251)
s(264) =< s(251)
s(265) =< s(251)
s(261) =< s(252)
s(262) =< s(252)
s(263) =< s(252)
s(264) =< s(252)
s(265) =< s(252)
s(261) =< s(253)
s(262) =< s(253)
s(263) =< s(253)
s(264) =< s(253)
s(265) =< s(253)
s(261) =< s(254)
s(262) =< s(254)
s(263) =< s(254)
s(264) =< s(254)
s(265) =< s(254)
s(278) =< s(241)
s(279) =< s(240)
s(280) =< s(241)+1
s(281) =< s(239)
s(282) =< s(241)-2
s(283) =< s(241)*(1/3)-1/3
s(284) =< s(239)*(1/2)
s(285) =< s(251)*(2/5)
s(286) =< s(251)*(1/3)
s(287) =< s(252)*(1/2)
s(288) =< s(251)*(1/2)
s(289) =< s(251)*(2/5)
s(290) =< s(251)*(1/2)
s(291) =< s(249)*(1/2)
s(292) =< s(247)*(3/2)
s(293) =< s(269)*s(282)
s(294) =< s(269)*s(239)
s(295) =< s(269)*s(240)
s(296) =< s(269)*s(241)
s(297) =< s(294)*(1/2)
s(298) =< s(256)*s(280)
s(299) =< s(256)*s(281)
s(300) =< s(256)*s(279)
s(301) =< s(256)*s(278)
s(302) =< s(293)*(2/5)
s(303) =< s(293)*(1/3)
s(304) =< s(293)*(1/2)
s(305) =< s(299)*(1/2)
s(306) =< s(298)*(2/5)
s(307) =< s(298)*(1/3)
s(308) =< s(298)*(1/2)
s(309) =< s(257)*s(283)
s(310) =< s(301)*(2/5)
s(311) =< s(301)*(1/3)
s(312) =< s(301)*(1/2)
s(313) =< s(239)
s(313) =< s(284)
s(314) =< s(240)
s(314) =< s(239)
s(314) =< s(284)
s(285) =< s(251)
s(288) =< s(251)
s(285) =< s(253)
s(288) =< s(253)
s(285) =< s(252)
s(288) =< s(252)
s(285) =< s(287)
s(288) =< s(287)
s(315) =< s(251)
s(315) =< s(254)
s(290) =< s(254)
s(316) =< s(252)
s(316) =< s(287)
s(289) =< s(251)
s(290) =< s(251)
s(289) =< s(315)
s(290) =< s(315)
s(289) =< s(253)
s(290) =< s(253)
s(289) =< s(252)
s(290) =< s(252)
s(289) =< s(287)
s(290) =< s(287)
s(292) =< s(301)
s(311) =< s(301)
s(310) =< s(299)
s(312) =< s(299)
s(310) =< s(301)
s(312) =< s(301)
s(310) =< s(300)
s(312) =< s(300)
s(310) =< s(250)
s(312) =< s(250)
s(310) =< s(249)
s(312) =< s(249)
s(310) =< s(305)
s(312) =< s(305)
s(310) =< s(291)
s(312) =< s(291)
s(308) =< s(298)
s(306) =< s(299)
s(308) =< s(299)
s(306) =< s(301)
s(308) =< s(301)
s(306) =< s(298)
s(306) =< s(300)
s(308) =< s(300)
s(306) =< s(240)
s(308) =< s(240)
s(306) =< s(239)
s(308) =< s(239)
s(306) =< s(305)
s(308) =< s(305)
s(306) =< s(284)
s(308) =< s(284)
s(302) =< s(294)
s(304) =< s(294)
s(302) =< s(296)
s(304) =< s(296)
s(302) =< s(293)
s(304) =< s(293)
s(302) =< s(295)
s(304) =< s(295)
s(302) =< s(240)
s(304) =< s(240)
s(302) =< s(239)
s(304) =< s(239)
s(302) =< s(297)
s(304) =< s(297)
s(302) =< s(284)
s(304) =< s(284)

  with precondition: [V_x>=2] 


#### Cost of chains of eval_foo_start(V_x,V_y,B):
* Chain [37]: 0
  with precondition: [1>=V_x] 

* Chain [36]: 3*s(336)+2*s(337)+2*s(338)+2*s(339)+1*s(340)+2*s(341)+2*s(342)+2*s(343)+1*s(344)+1*s(345)+1*s(346)+1*s(347)+1*s(348)+1*s(356)+2*s(357)+1*s(359)+1*s(360)+1*s(361)+1*s(363)+1*s(373)+1*s(374)+1*s(375)+1*s(377)+1*s(378)+1*s(379)+1*s(380)+1*s(381)+1*s(382)+1*s(383)+2*s(384)+2*s(385)+1*s(387)+6*s(388)+0
  Such that:s(320) =< V_x+V_y
s(321) =< V_x+V_y/3
s(322) =< 3*V_x+V_y
s(323) =< V_x/2+V_y
s(324) =< V_x/2+V_y/2
s(325) =< V_x/3+V_y/9
s(326) =< V_x/4+V_y/2
s(327) =< 2/3*V_x+11/9*V_y
s(328) =< 3/4*V_x+V_y/2
s(329) =< 3/7*V_x+V_y/7
s(330) =< 3/11*V_x+V_y/11
s(331) =< 4/3*V_x+10/9*V_y
s(332) =< 5/3*V_x+11/9*V_y
s(333) =< 7/6*V_x+25/18*V_y
s(334) =< 10/3*V_x+10/9*V_y
s(335) =< 11/3*V_x+11/9*V_y
s(336) =< s(320)
s(337) =< s(320)
s(338) =< s(320)
s(339) =< s(320)
s(340) =< s(320)
s(341) =< s(320)
s(342) =< s(320)
s(343) =< s(320)
s(344) =< s(320)
s(336) =< s(322)
s(337) =< s(322)
s(338) =< s(322)
s(339) =< s(322)
s(340) =< s(322)
s(341) =< s(322)
s(342) =< s(322)
s(343) =< s(322)
s(344) =< s(322)
s(342) =< s(324)
s(343) =< s(324)
s(344) =< s(324)
s(345) =< s(324)
s(339) =< s(326)
s(340) =< s(326)
s(341) =< s(326)
s(342) =< s(326)
s(343) =< s(326)
s(344) =< s(326)
s(346) =< s(326)
s(339) =< s(328)
s(340) =< s(328)
s(341) =< s(328)
s(342) =< s(328)
s(343) =< s(328)
s(344) =< s(328)
s(346) =< s(328)
s(343) =< s(321)
s(347) =< s(329)
s(337) =< s(329)
s(341) =< s(329)
s(348) =< s(329)
s(336) =< s(325)
s(339) =< s(325)
s(340) =< s(325)
s(348) =< s(325)
s(342) =< s(330)
s(337) =< s(331)
s(338) =< s(331)
s(339) =< s(331)
s(340) =< s(331)
s(341) =< s(331)
s(342) =< s(331)
s(343) =< s(331)
s(344) =< s(331)
s(337) =< s(334)
s(338) =< s(334)
s(339) =< s(334)
s(340) =< s(334)
s(341) =< s(334)
s(342) =< s(334)
s(343) =< s(334)
s(344) =< s(334)
s(340) =< s(327)
s(341) =< s(327)
s(342) =< s(327)
s(343) =< s(327)
s(344) =< s(327)
s(340) =< s(332)
s(341) =< s(332)
s(342) =< s(332)
s(343) =< s(332)
s(344) =< s(332)
s(340) =< s(335)
s(341) =< s(335)
s(342) =< s(335)
s(343) =< s(335)
s(344) =< s(335)
s(340) =< s(333)
s(341) =< s(333)
s(342) =< s(333)
s(343) =< s(333)
s(344) =< s(333)
s(349) =< s(323)
s(350) =< s(322)
s(351) =< s(323)+1
s(352) =< s(320)
s(353) =< s(323)-2
s(354) =< s(323)*(1/3)-1/3
s(355) =< s(320)*(1/2)
s(356) =< s(327)*(2/5)
s(357) =< s(327)*(1/3)
s(358) =< s(332)*(1/2)
s(359) =< s(327)*(1/2)
s(360) =< s(327)*(2/5)
s(361) =< s(327)*(1/2)
s(362) =< s(331)*(1/2)
s(363) =< s(325)*(3/2)
s(364) =< s(347)*s(353)
s(365) =< s(347)*s(320)
s(366) =< s(347)*s(322)
s(367) =< s(347)*s(323)
s(368) =< s(365)*(1/2)
s(369) =< s(336)*s(351)
s(370) =< s(336)*s(352)
s(371) =< s(336)*s(350)
s(372) =< s(336)*s(349)
s(373) =< s(364)*(2/5)
s(374) =< s(364)*(1/3)
s(375) =< s(364)*(1/2)
s(376) =< s(370)*(1/2)
s(377) =< s(369)*(2/5)
s(378) =< s(369)*(1/3)
s(379) =< s(369)*(1/2)
s(380) =< s(337)*s(354)
s(381) =< s(372)*(2/5)
s(382) =< s(372)*(1/3)
s(383) =< s(372)*(1/2)
s(384) =< s(320)
s(384) =< s(355)
s(385) =< s(322)
s(385) =< s(320)
s(385) =< s(355)
s(356) =< s(327)
s(359) =< s(327)
s(356) =< s(335)
s(359) =< s(335)
s(356) =< s(332)
s(359) =< s(332)
s(356) =< s(358)
s(359) =< s(358)
s(386) =< s(327)
s(386) =< s(333)
s(361) =< s(333)
s(387) =< s(332)
s(387) =< s(358)
s(360) =< s(327)
s(361) =< s(327)
s(360) =< s(386)
s(361) =< s(386)
s(360) =< s(335)
s(361) =< s(335)
s(360) =< s(332)
s(361) =< s(332)
s(360) =< s(358)
s(361) =< s(358)
s(363) =< s(372)
s(382) =< s(372)
s(381) =< s(370)
s(383) =< s(370)
s(381) =< s(372)
s(383) =< s(372)
s(381) =< s(371)
s(383) =< s(371)
s(381) =< s(334)
s(383) =< s(334)
s(381) =< s(331)
s(383) =< s(331)
s(381) =< s(376)
s(383) =< s(376)
s(381) =< s(362)
s(383) =< s(362)
s(379) =< s(369)
s(377) =< s(370)
s(379) =< s(370)
s(377) =< s(372)
s(379) =< s(372)
s(377) =< s(369)
s(377) =< s(371)
s(379) =< s(371)
s(377) =< s(322)
s(379) =< s(322)
s(377) =< s(320)
s(379) =< s(320)
s(377) =< s(376)
s(379) =< s(376)
s(377) =< s(355)
s(379) =< s(355)
s(373) =< s(365)
s(375) =< s(365)
s(373) =< s(367)
s(375) =< s(367)
s(373) =< s(364)
s(375) =< s(364)
s(373) =< s(366)
s(375) =< s(366)
s(373) =< s(322)
s(375) =< s(322)
s(373) =< s(320)
s(375) =< s(320)
s(373) =< s(368)
s(375) =< s(368)
s(373) =< s(355)
s(375) =< s(355)

  with precondition: [V_x>=2] 


Closed-form bounds of eval_foo_start(V_x,V_y,B): 
-------------------------------------
* Chain [37] with precondition: [1>=V_x] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [36] with precondition: [V_x>=2] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_foo_start(V_x,V_y,B): inf 
Asymptotic class: infinity 
* Total analysis performed in 1245 ms.

