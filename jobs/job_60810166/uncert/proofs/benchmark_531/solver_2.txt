WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_encode_mcu_AC_refine_bb1_in/4,eval_encode_mcu_AC_refine_bb2_in/4]
1. recursive  : [eval_encode_mcu_AC_refine_6/4,eval_encode_mcu_AC_refine_7/5,eval_encode_mcu_AC_refine_bb6_in/4,eval_encode_mcu_AC_refine_bb7_in/4,eval_encode_mcu_AC_refine_bb8_in/5]
2. recursive  : [eval_encode_mcu_AC_refine_2/4,eval_encode_mcu_AC_refine_3/5,eval_encode_mcu_AC_refine__critedge_in/7,eval_encode_mcu_AC_refine_bb3_in/4,eval_encode_mcu_AC_refine_bb4_in/4,eval_encode_mcu_AC_refine_bb5_in/5,eval_encode_mcu_AC_refine_bb6_in_loop_cont/8]
3. non_recursive  : [eval_encode_mcu_AC_refine_stop/1]
4. non_recursive  : [eval_encode_mcu_AC_refine_bb9_in/1]
5. non_recursive  : [eval_encode_mcu_AC_refine_bb3_in_loop_cont/2]
6. non_recursive  : [eval_encode_mcu_AC_refine_bb1_in_loop_cont/5]
7. non_recursive  : [eval_encode_mcu_AC_refine_bb0_in/3]
8. non_recursive  : [eval_encode_mcu_AC_refine_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_encode_mcu_AC_refine_bb1_in/4
1. SCC is partially evaluated into eval_encode_mcu_AC_refine_bb6_in/4
2. SCC is partially evaluated into eval_encode_mcu_AC_refine_bb3_in/4
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_encode_mcu_AC_refine_bb1_in_loop_cont/5
7. SCC is partially evaluated into eval_encode_mcu_AC_refine_bb0_in/3
8. SCC is partially evaluated into eval_encode_mcu_AC_refine_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_encode_mcu_AC_refine_bb1_in/4 
* CE 4 is refined into CE [12] 
* CE 3 is refined into CE [13] 


### Cost equations --> "Loop" of eval_encode_mcu_AC_refine_bb1_in/4 
* CEs [13] --> Loop 12 
* CEs [12] --> Loop 13 

### Ranking functions of CR eval_encode_mcu_AC_refine_bb1_in(V_cinfo_Se,V_k_0,B,C) 
* RF of phase [12]: [V_cinfo_Se-V_k_0+1]

#### Partial ranking functions of CR eval_encode_mcu_AC_refine_bb1_in(V_cinfo_Se,V_k_0,B,C) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V_cinfo_Se-V_k_0+1


### Specialization of cost equations eval_encode_mcu_AC_refine_bb6_in/4 
* CE 9 is refined into CE [14] 
* CE 11 is refined into CE [15] 
* CE 10 is refined into CE [16] 


### Cost equations --> "Loop" of eval_encode_mcu_AC_refine_bb6_in/4 
* CEs [16] --> Loop 14 
* CEs [14] --> Loop 15 
* CEs [15] --> Loop 16 

### Ranking functions of CR eval_encode_mcu_AC_refine_bb6_in(V_r_1,B,C,D) 
* RF of phase [14]: [V_r_1-15]

#### Partial ranking functions of CR eval_encode_mcu_AC_refine_bb6_in(V_r_1,B,C,D) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    V_r_1-15


### Specialization of cost equations eval_encode_mcu_AC_refine_bb3_in/4 
* CE 8 is refined into CE [17] 
* CE 7 is refined into CE [18,19,20,21] 
* CE 6 is refined into CE [22] 


### Cost equations --> "Loop" of eval_encode_mcu_AC_refine_bb3_in/4 
* CEs [22] --> Loop 17 
* CEs [21] --> Loop 18 
* CEs [19,20] --> Loop 19 
* CEs [18] --> Loop 20 
* CEs [17] --> Loop 21 

### Ranking functions of CR eval_encode_mcu_AC_refine_bb3_in(V_cinfo_Se,V_k_1,V_r_0,B) 
* RF of phase [17,18,19,20]: [V_cinfo_Se-V_k_1+1]

#### Partial ranking functions of CR eval_encode_mcu_AC_refine_bb3_in(V_cinfo_Se,V_k_1,V_r_0,B) 
* Partial RF of phase [17,18,19,20]:
  - RF of loop [17:1,18:1,19:1,20:1]:
    V_cinfo_Se-V_k_1+1
  - RF of loop [18:1]:
    V_r_0/32-31/32 depends on loops [17:1,20:1] 
  - RF of loop [19:1]:
    V_r_0/16-15/16 depends on loops [17:1,20:1] 


### Specialization of cost equations eval_encode_mcu_AC_refine_bb1_in_loop_cont/5 
* CE 5 is refined into CE [23,24] 


### Cost equations --> "Loop" of eval_encode_mcu_AC_refine_bb1_in_loop_cont/5 
* CEs [24] --> Loop 22 
* CEs [23] --> Loop 23 

### Ranking functions of CR eval_encode_mcu_AC_refine_bb1_in_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR eval_encode_mcu_AC_refine_bb1_in_loop_cont(A,B,C,D,E) 


### Specialization of cost equations eval_encode_mcu_AC_refine_bb0_in/3 
* CE 2 is refined into CE [25,26] 


### Cost equations --> "Loop" of eval_encode_mcu_AC_refine_bb0_in/3 
* CEs [25] --> Loop 24 
* CEs [26] --> Loop 25 

### Ranking functions of CR eval_encode_mcu_AC_refine_bb0_in(V_cinfo_Ss,V_cinfo_Se,B) 

#### Partial ranking functions of CR eval_encode_mcu_AC_refine_bb0_in(V_cinfo_Ss,V_cinfo_Se,B) 


### Specialization of cost equations eval_encode_mcu_AC_refine_start/3 
* CE 1 is refined into CE [27,28] 


### Cost equations --> "Loop" of eval_encode_mcu_AC_refine_start/3 
* CEs [28] --> Loop 26 
* CEs [27] --> Loop 27 

### Ranking functions of CR eval_encode_mcu_AC_refine_start(V_cinfo_Ss,V_cinfo_Se,B) 

#### Partial ranking functions of CR eval_encode_mcu_AC_refine_start(V_cinfo_Ss,V_cinfo_Se,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_encode_mcu_AC_refine_bb1_in(V_cinfo_Se,V_k_0,B,C):
* Chain [[12],13]: 1*it(12)+0
  Such that:it(12) =< V_cinfo_Se-V_k_0+1

  with precondition: [B=4,C=0,V_cinfo_Se>=V_k_0] 

* Chain [13]: 0
  with precondition: [B=4,C=0,V_k_0>=V_cinfo_Se+1] 


#### Cost of chains of eval_encode_mcu_AC_refine_bb6_in(V_r_1,B,C,D):
* Chain [[14],16]: 1*it(14)+0
  Such that:it(14) =< V_r_1-C

  with precondition: [B=2,D=0,15>=C,C>=0,V_r_1>=C+16] 

* Chain [[14],15]: 1*it(14)+0
  Such that:it(14) =< V_r_1-C

  with precondition: [B=2,D=0,C>=16,V_r_1>=C+16] 

* Chain [16]: 0
  with precondition: [B=2,D=0,V_r_1=C,15>=V_r_1] 

* Chain [15]: 0
  with precondition: [B=2,D=0,V_r_1=C,V_r_1>=16] 


#### Cost of chains of eval_encode_mcu_AC_refine_bb3_in(V_cinfo_Se,V_k_1,V_r_0,B):
* Chain [[17,18,19,20],21]: 2*it(17)+1*it(18)+1*it(19)+1*s(5)+1*s(6)+0
  Such that:aux(13) =< V_r_0
aux(2) =< V_r_0/32
aux(14) =< V_cinfo_Se-V_k_1+1
it(17) =< aux(14)
it(18) =< aux(14)
it(19) =< aux(14)
aux(5) =< max([aux(13),0])+it(17)
s(5) =< it(17)+aux(13)
s(6) =< it(17)+aux(13)
it(19) =< it(17)+aux(13)
it(18) =< aux(14)+it(17)*(1/32)+aux(2)
aux(9) =< aux(5)
s(5) =< it(18)*aux(5)
s(6) =< it(19)*aux(9)

  with precondition: [B=3,V_cinfo_Se>=V_k_1] 

* Chain [21]: 0
  with precondition: [B=3,V_k_1>=V_cinfo_Se+1] 


#### Cost of chains of eval_encode_mcu_AC_refine_bb1_in_loop_cont(A,B,C,D,E):
* Chain [23]: 0
  with precondition: [A=4,C>=B+1] 

* Chain [22]: 2*s(10)+1*s(11)+1*s(12)+1*s(14)+1*s(15)+0
  Such that:s(9) =< B-C+1
s(7) =< D
s(8) =< D/32
s(10) =< s(9)
s(11) =< s(9)
s(12) =< s(9)
s(13) =< max([s(7),0])+s(10)
s(14) =< s(10)+s(7)
s(15) =< s(10)+s(7)
s(12) =< s(10)+s(7)
s(11) =< s(9)+s(10)*(1/32)+s(8)
s(16) =< s(13)
s(14) =< s(11)*s(13)
s(15) =< s(12)*s(16)

  with precondition: [A=4,B>=C] 


#### Cost of chains of eval_encode_mcu_AC_refine_bb0_in(V_cinfo_Ss,V_cinfo_Se,B):
* Chain [25]: 3*s(17)+1*s(22)+1*s(23)+1*s(25)+1*s(26)+0
  Such that:aux(16) =< -V_cinfo_Ss+V_cinfo_Se+1
s(17) =< aux(16)
s(22) =< aux(16)
s(23) =< aux(16)
s(24) =< max([0,0])+s(17)
s(25) =< s(17)
s(26) =< s(17)
s(23) =< s(17)
s(22) =< aux(16)+s(17)*(1/32)
s(27) =< s(24)
s(25) =< s(22)*s(24)
s(26) =< s(23)*s(27)

  with precondition: [V_cinfo_Se>=V_cinfo_Ss] 

* Chain [24]: 0
  with precondition: [V_cinfo_Ss>=V_cinfo_Se+1] 


#### Cost of chains of eval_encode_mcu_AC_refine_start(V_cinfo_Ss,V_cinfo_Se,B):
* Chain [27]: 3*s(29)+1*s(30)+1*s(31)+1*s(33)+1*s(34)+0
  Such that:s(28) =< -V_cinfo_Ss+V_cinfo_Se+1
s(29) =< s(28)
s(30) =< s(28)
s(31) =< s(28)
s(32) =< max([0,0])+s(29)
s(33) =< s(29)
s(34) =< s(29)
s(31) =< s(29)
s(30) =< s(28)+s(29)*(1/32)
s(35) =< s(32)
s(33) =< s(30)*s(32)
s(34) =< s(31)*s(35)

  with precondition: [V_cinfo_Se>=V_cinfo_Ss] 

* Chain [26]: 0
  with precondition: [V_cinfo_Ss>=V_cinfo_Se+1] 


Closed-form bounds of eval_encode_mcu_AC_refine_start(V_cinfo_Ss,V_cinfo_Se,B): 
-------------------------------------
* Chain [27] with precondition: [V_cinfo_Se>=V_cinfo_Ss] 
    - Upper bound: -7*V_cinfo_Ss+7*V_cinfo_Se+7 
    - Complexity: n 
* Chain [26] with precondition: [V_cinfo_Ss>=V_cinfo_Se+1] 
    - Upper bound: 0 
    - Complexity: constant 

### Maximum cost of eval_encode_mcu_AC_refine_start(V_cinfo_Ss,V_cinfo_Se,B): nat(-V_cinfo_Ss+V_cinfo_Se+1)*7 
Asymptotic class: n 
* Total analysis performed in 83 ms.

