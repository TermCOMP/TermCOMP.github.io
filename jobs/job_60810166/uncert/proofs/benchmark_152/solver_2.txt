WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_foo_stop/1]
1. non_recursive  : [eval_foo__critedge_in/1]
2. recursive  : [eval_foo_2/4,eval_foo_3/5,eval_foo_bb2_in/4,eval_foo_bb3_in/4,eval_foo_bb4_in/5]
3. non_recursive  : [eval_foo_bb2_in_loop_cont/2]
4. non_recursive  : [eval_foo_bb1_in/3]
5. non_recursive  : [eval_foo_bb0_in/3]
6. non_recursive  : [eval_foo_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into eval_foo_bb2_in/4
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_foo_bb1_in/3
5. SCC is partially evaluated into eval_foo_bb0_in/3
6. SCC is partially evaluated into eval_foo_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_foo_bb2_in/4 
* CE 7 is refined into CE [13] 
* CE 6 is refined into CE [14] 
* CE 12 is refined into CE [15] 
* CE 9 is refined into CE [16] 
* CE 8 is refined into CE [17] 
* CE 11 is discarded (unfeasible) 
* CE 10 is refined into CE [18] 


### Cost equations --> "Loop" of eval_foo_bb2_in/4 
* CEs [17] --> Loop 13 
* CEs [16] --> Loop 14 
* CEs [18] --> Loop 15 
* CEs [13] --> Loop 16 
* CEs [14] --> Loop 17 
* CEs [15] --> Loop 18 

### Ranking functions of CR eval_foo_bb2_in(V_id,V_maxId,V__0,B) 
* RF of phase [13]: [V_maxId-V__0+1]
* RF of phase [14]: [V_id-V__0,V_maxId-V__0-1]

#### Partial ranking functions of CR eval_foo_bb2_in(V_id,V_maxId,V__0,B) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    V_maxId-V__0+1
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    V_id-V__0
    V_maxId-V__0-1


### Specialization of cost equations eval_foo_bb1_in/3 
* CE 5 is refined into CE [19,20,21,22,23] 


### Cost equations --> "Loop" of eval_foo_bb1_in/3 
* CEs [23] --> Loop 19 
* CEs [22] --> Loop 20 
* CEs [20,21] --> Loop 21 
* CEs [19] --> Loop 22 

### Ranking functions of CR eval_foo_bb1_in(V_id,V_maxId,B) 

#### Partial ranking functions of CR eval_foo_bb1_in(V_id,V_maxId,B) 


### Specialization of cost equations eval_foo_bb0_in/3 
* CE 4 is refined into CE [24] 
* CE 2 is refined into CE [25,26,27,28] 
* CE 3 is refined into CE [29] 


### Cost equations --> "Loop" of eval_foo_bb0_in/3 
* CEs [24] --> Loop 23 
* CEs [28] --> Loop 24 
* CEs [27] --> Loop 25 
* CEs [26] --> Loop 26 
* CEs [29] --> Loop 27 
* CEs [25] --> Loop 28 

### Ranking functions of CR eval_foo_bb0_in(V_id,V_maxId,B) 

#### Partial ranking functions of CR eval_foo_bb0_in(V_id,V_maxId,B) 


### Specialization of cost equations eval_foo_start/4 
* CE 1 is refined into CE [30,31,32,33,34,35] 


### Cost equations --> "Loop" of eval_foo_start/4 
* CEs [35] --> Loop 29 
* CEs [34] --> Loop 30 
* CEs [33] --> Loop 31 
* CEs [32] --> Loop 32 
* CEs [31] --> Loop 33 
* CEs [30] --> Loop 34 

### Ranking functions of CR eval_foo_start(V_id,V_maxId,V_tmp,B) 

#### Partial ranking functions of CR eval_foo_start(V_id,V_maxId,V_tmp,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_foo_bb2_in(V_id,V_maxId,V__0,B):
* Chain [[13],17]: 1*it(13)+0
  Such that:it(13) =< V_maxId-V__0+1

  with precondition: [B=2,V_id>=0,V__0>=V_id+1,V_maxId>=V__0] 

* Chain [[13],15,[14],18]: 1*it(13)+1*it(14)+1
  Such that:it(14) =< V_id
it(13) =< V_maxId-V__0+1

  with precondition: [B=2,V_id>=1,V__0>=V_id+1,V_maxId>=V__0] 

* Chain [[13],15,[14],16]: 1*it(13)+1*it(14)+1
  Such that:it(14) =< V_id
it(13) =< V_maxId-V__0+1

  with precondition: [B=2,V_id>=2,V__0>=V_id+1,V_maxId>=V__0] 

* Chain [[13],15,18]: 1*it(13)+1
  Such that:it(13) =< V_maxId-V__0+1

  with precondition: [V_id=0,B=2,V__0>=1,V_maxId>=V__0] 

* Chain [[13],15,16]: 1*it(13)+1
  Such that:it(13) =< V_maxId-V__0+1

  with precondition: [B=2,V_id>=1,V__0>=V_id+1,V_maxId>=V__0] 

* Chain [17]: 0
  with precondition: [B=2,V_id>=0,V_maxId>=V_id+1,V__0>=V_id+1] 


#### Cost of chains of eval_foo_bb1_in(V_id,V_maxId,B):
* Chain [22]: 1*s(4)+1
  Such that:s(4) =< V_maxId

  with precondition: [V_id=0,V_maxId>=1] 

* Chain [21]: 1*s(5)+0
  Such that:s(5) =< -V_id+V_maxId

  with precondition: [V_id>=0,V_maxId>=V_id+1] 

* Chain [20]: 1*s(6)+2*s(8)+1
  Such that:s(7) =< -V_id+V_maxId
s(6) =< V_id
s(8) =< s(7)

  with precondition: [V_id>=1,V_maxId>=V_id+1] 

* Chain [19]: 1*s(9)+1*s(10)+1
  Such that:s(10) =< -V_id+V_maxId
s(9) =< V_id

  with precondition: [V_id>=2,V_maxId>=V_id+1] 


#### Cost of chains of eval_foo_bb0_in(V_id,V_maxId,B):
* Chain [28]: 1*s(11)+1
  Such that:s(11) =< V_maxId

  with precondition: [V_id=0,V_maxId>=1] 

* Chain [27]: 0
  with precondition: [0>=V_id+1] 

* Chain [26]: 1*s(12)+0
  Such that:s(12) =< -V_id+V_maxId

  with precondition: [V_id>=0,V_maxId>=V_id+1] 

* Chain [25]: 1*s(14)+2*s(15)+1
  Such that:s(13) =< -V_id+V_maxId
s(14) =< V_id
s(15) =< s(13)

  with precondition: [V_id>=1,V_maxId>=V_id+1] 

* Chain [24]: 1*s(16)+1*s(17)+1
  Such that:s(16) =< -V_id+V_maxId
s(17) =< V_id

  with precondition: [V_id>=2,V_maxId>=V_id+1] 

* Chain [23]: 0
  with precondition: [V_id>=V_maxId] 


#### Cost of chains of eval_foo_start(V_id,V_maxId,V_tmp,B):
* Chain [34]: 1*s(18)+1
  Such that:s(18) =< V_maxId

  with precondition: [V_id=0,V_maxId>=1] 

* Chain [33]: 0
  with precondition: [0>=V_id+1] 

* Chain [32]: 1*s(19)+0
  Such that:s(19) =< -V_id+V_maxId

  with precondition: [V_id>=0,V_maxId>=V_id+1] 

* Chain [31]: 1*s(21)+2*s(22)+1
  Such that:s(20) =< -V_id+V_maxId
s(21) =< V_id
s(22) =< s(20)

  with precondition: [V_id>=1,V_maxId>=V_id+1] 

* Chain [30]: 1*s(23)+1*s(24)+1
  Such that:s(23) =< -V_id+V_maxId
s(24) =< V_id

  with precondition: [V_id>=2,V_maxId>=V_id+1] 

* Chain [29]: 0
  with precondition: [V_id>=V_maxId] 


Closed-form bounds of eval_foo_start(V_id,V_maxId,V_tmp,B): 
-------------------------------------
* Chain [34] with precondition: [V_id=0,V_maxId>=1] 
    - Upper bound: V_maxId+1 
    - Complexity: n 
* Chain [33] with precondition: [0>=V_id+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [32] with precondition: [V_id>=0,V_maxId>=V_id+1] 
    - Upper bound: -V_id+V_maxId 
    - Complexity: n 
* Chain [31] with precondition: [V_id>=1,V_maxId>=V_id+1] 
    - Upper bound: -V_id+2*V_maxId+1 
    - Complexity: n 
* Chain [30] with precondition: [V_id>=2,V_maxId>=V_id+1] 
    - Upper bound: V_maxId+1 
    - Complexity: n 
* Chain [29] with precondition: [V_id>=V_maxId] 
    - Upper bound: 0 
    - Complexity: constant 

### Maximum cost of eval_foo_start(V_id,V_maxId,V_tmp,B): max([nat(V_maxId)+1,nat(V_id)+1+nat(-V_id+V_maxId)+nat(-V_id+V_maxId)]) 
Asymptotic class: n 
* Total analysis performed in 88 ms.

