WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_loops_bb3_in/4,eval_loops_bb4_in/4]
1. recursive  : [eval_loops_bb1_in/2,eval_loops_bb2_in/2,eval_loops_bb3_in_loop_cont/4,eval_loops_bb5_in/3]
2. non_recursive  : [eval_loops_stop/1]
3. non_recursive  : [eval_loops_bb6_in/1]
4. non_recursive  : [eval_loops_bb1_in_loop_cont/2]
5. non_recursive  : [eval_loops_bb0_in/2]
6. non_recursive  : [eval_loops_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_loops_bb3_in/4
1. SCC is partially evaluated into eval_loops_bb1_in/2
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_loops_bb0_in/2
6. SCC is partially evaluated into eval_loops_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_loops_bb3_in/4 
* CE 8 is refined into CE [9] 
* CE 7 is refined into CE [10] 


### Cost equations --> "Loop" of eval_loops_bb3_in/4 
* CEs [10] --> Loop 9 
* CEs [9] --> Loop 10 

### Ranking functions of CR eval_loops_bb3_in(V_x_0,V_y_0,B,C) 
* RF of phase [9]: [2*V_x_0-2*V_y_0-1]

#### Partial ranking functions of CR eval_loops_bb3_in(V_x_0,V_y_0,B,C) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    2*V_x_0-2*V_y_0-1


### Specialization of cost equations eval_loops_bb1_in/2 
* CE 6 is refined into CE [11] 
* CE 5 is refined into CE [12] 
* CE 4 is refined into CE [13] 


### Cost equations --> "Loop" of eval_loops_bb1_in/2 
* CEs [12] --> Loop 11 
* CEs [13] --> Loop 12 
* CEs [11] --> Loop 13 

### Ranking functions of CR eval_loops_bb1_in(V_x_0,B) 
* RF of phase [11]: [V_x_0-1]
* RF of phase [12]: [V_x_0+1]

#### Partial ranking functions of CR eval_loops_bb1_in(V_x_0,B) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    V_x_0-1
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V_x_0+1


### Specialization of cost equations eval_loops_bb0_in/2 
* CE 3 is refined into CE [14,15] 
* CE 2 is refined into CE [16] 


### Cost equations --> "Loop" of eval_loops_bb0_in/2 
* CEs [15] --> Loop 14 
* CEs [16] --> Loop 15 
* CEs [14] --> Loop 16 

### Ranking functions of CR eval_loops_bb0_in(V_n,B) 

#### Partial ranking functions of CR eval_loops_bb0_in(V_n,B) 


### Specialization of cost equations eval_loops_start/2 
* CE 1 is refined into CE [17,18,19] 


### Cost equations --> "Loop" of eval_loops_start/2 
* CEs [19] --> Loop 17 
* CEs [18] --> Loop 18 
* CEs [17] --> Loop 19 

### Ranking functions of CR eval_loops_start(V_n,B) 

#### Partial ranking functions of CR eval_loops_start(V_n,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_loops_bb3_in(V_x_0,V_y_0,B,C):
* Chain [[9],10]: 1*it(9)+0
  Such that:it(9) =< 2*V_x_0-2*V_y_0

  with precondition: [B=2,V_y_0>=1,C>=2*V_y_0,C>=V_x_0,2*V_x_0>=C+2] 


#### Cost of chains of eval_loops_bb1_in(V_x_0,B):
* Chain [[12],13]: 1*it(12)+0
  Such that:it(12) =< V_x_0+1

  with precondition: [B=3,1>=V_x_0,V_x_0>=0] 

* Chain [[11],[12],13]: 1*it(11)+1*it(12)+1*s(3)+0
  Such that:it(12) =< 2
it(11) =< V_x_0
aux(1) =< 2*V_x_0
s(3) =< it(11)*aux(1)

  with precondition: [B=3,V_x_0>=2] 


#### Cost of chains of eval_loops_bb0_in(V_n,B):
* Chain [16]: 1*s(4)+0
  Such that:s(4) =< V_n+1

  with precondition: [1>=V_n,V_n>=0] 

* Chain [15]: 0
  with precondition: [0>=V_n+1] 

* Chain [14]: 1*s(5)+1*s(6)+1*s(8)+0
  Such that:s(5) =< 2
s(6) =< V_n
s(7) =< 2*V_n
s(8) =< s(6)*s(7)

  with precondition: [V_n>=2] 


#### Cost of chains of eval_loops_start(V_n,B):
* Chain [19]: 1*s(9)+0
  Such that:s(9) =< V_n+1

  with precondition: [1>=V_n,V_n>=0] 

* Chain [18]: 0
  with precondition: [0>=V_n+1] 

* Chain [17]: 1*s(10)+1*s(11)+1*s(13)+0
  Such that:s(10) =< 2
s(11) =< V_n
s(12) =< 2*V_n
s(13) =< s(11)*s(12)

  with precondition: [V_n>=2] 


Closed-form bounds of eval_loops_start(V_n,B): 
-------------------------------------
* Chain [19] with precondition: [1>=V_n,V_n>=0] 
    - Upper bound: V_n+1 
    - Complexity: n 
* Chain [18] with precondition: [0>=V_n+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [17] with precondition: [V_n>=2] 
    - Upper bound: V_n+2+2*V_n*V_n 
    - Complexity: n^2 

### Maximum cost of eval_loops_start(V_n,B): max([nat(V_n+1),nat(V_n)+2+nat(2*V_n)*nat(V_n)]) 
Asymptotic class: n^2 
* Total analysis performed in 46 ms.

