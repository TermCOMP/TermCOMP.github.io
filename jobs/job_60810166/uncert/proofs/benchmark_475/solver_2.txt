MAYBE
WARNING: Excluded non-linear constraints:[C+1=<B*B]
WARNING: Excluded non-linear constraints:[C>=B*B]
WARNING: Excluded non-linear constraints:[E=5*C+A*A]
WARNING: Excluded non-linear constraints:[B>=C*C]

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_twn03_bb1_in/5,eval_twn03_bb2_in/5]
1. recursive  : [eval_twn03_bb3_in/4,eval_twn03_bb4_in/4]
2. non_recursive  : [eval_twn03_stop/1]
3. non_recursive  : [eval_twn03_bb5_in/1]
4. non_recursive  : [eval_twn03_bb3_in_loop_cont/2]
5. non_recursive  : [eval_twn03_bb1_in_loop_cont/5]
6. non_recursive  : [eval_twn03_bb0_in/4]
7. non_recursive  : [eval_twn03_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_twn03_bb1_in/5
1. SCC is partially evaluated into eval_twn03_bb3_in/4
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_twn03_bb1_in_loop_cont/5
6. SCC is partially evaluated into eval_twn03_bb0_in/4
7. SCC is partially evaluated into eval_twn03_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_twn03_bb1_in/5 
* CE 5 is refined into CE [9] 
* CE 4 is refined into CE [10] 


### Cost equations --> "Loop" of eval_twn03_bb1_in/5 
* CEs [10] --> Loop 9 
* CEs [9] --> Loop 10 

### Ranking functions of CR eval_twn03_bb1_in(V__02,V__0,B,C,D) 
* RF of phase [9]: [V__02]

#### Partial ranking functions of CR eval_twn03_bb1_in(V__02,V__0,B,C,D) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V__02


### Specialization of cost equations eval_twn03_bb3_in/4 
* CE 8 is refined into CE [11] 
* CE 7 is refined into CE [12] 


### Cost equations --> "Loop" of eval_twn03_bb3_in/4 
* CEs [12] --> Loop 11 
* CEs [11] --> Loop 12 

### Ranking functions of CR eval_twn03_bb3_in(V__02,V__01,V__1,B) 

#### Partial ranking functions of CR eval_twn03_bb3_in(V__02,V__01,V__1,B) 


### Specialization of cost equations eval_twn03_bb1_in_loop_cont/5 
* CE 6 is refined into CE [13,14] 


### Cost equations --> "Loop" of eval_twn03_bb1_in_loop_cont/5 
* CEs [14] --> Loop 13 
* CEs [13] --> Loop 14 

### Ranking functions of CR eval_twn03_bb1_in_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR eval_twn03_bb1_in_loop_cont(A,B,C,D,E) 


### Specialization of cost equations eval_twn03_bb0_in/4 
* CE 3 is refined into CE [15,16,17,18] 
* CE 2 is refined into CE [19] 


### Cost equations --> "Loop" of eval_twn03_bb0_in/4 
* CEs [15] --> Loop 15 
* CEs [17] --> Loop 16 
* CEs [19] --> Loop 17 
* CEs [16] --> Loop 18 
* CEs [18] --> Loop 19 

### Ranking functions of CR eval_twn03_bb0_in(V_a,V_b,V_c,B) 

#### Partial ranking functions of CR eval_twn03_bb0_in(V_a,V_b,V_c,B) 


### Specialization of cost equations eval_twn03_start/4 
* CE 1 is refined into CE [20,21,22,23,24] 


### Cost equations --> "Loop" of eval_twn03_start/4 
* CEs [24] --> Loop 20 
* CEs [23] --> Loop 21 
* CEs [22] --> Loop 22 
* CEs [21] --> Loop 23 
* CEs [20] --> Loop 24 

### Ranking functions of CR eval_twn03_start(V_a,V_b,V_c,B) 

#### Partial ranking functions of CR eval_twn03_start(V_a,V_b,V_c,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_twn03_bb1_in(V__02,V__0,B,C,D):
* Chain [[9],10]: 1*it(9)+0
  Such that:it(9) =< V__02

  with precondition: [B=3,C=0,V__02>=1,V__0>=1] 

* Chain [10]: 0
  with precondition: [B=3,V__02=C,V__0=D,0>=V__02,V__0>=1] 


#### Cost of chains of eval_twn03_bb3_in(V__02,V__01,V__1,B):
* Chain [[11]]...: 1*it(11)+0
  with precondition: [B=2] 

* Chain [[11],12]: 1*it(11)+0
  with precondition: [B=2] 

* Chain [12]: 0
  with precondition: [B=2] 


#### Cost of chains of eval_twn03_bb1_in_loop_cont(A,B,C,D,E):
* Chain [14]: 1*s(2)+0
  with precondition: [A=3] 

* Chain [13]...: 1*s(3)+0
  with precondition: [A=3] 


#### Cost of chains of eval_twn03_bb0_in(V_a,V_b,V_c,B):
* Chain [19]...: 1*s(4)+0
  with precondition: [0>=V_c,V_a>=1] 

* Chain [18]...: 1*s(5)+1*s(6)+0
  Such that:s(5) =< V_c

  with precondition: [V_a>=1,V_c>=1] 

* Chain [17]: 0
  with precondition: [0>=V_a] 

* Chain [16]: 1*s(7)+0
  with precondition: [0>=V_c,V_a>=1] 

* Chain [15]: 1*s(8)+1*s(9)+0
  Such that:s(8) =< V_c

  with precondition: [V_a>=1,V_c>=1] 


#### Cost of chains of eval_twn03_start(V_a,V_b,V_c,B):
* Chain [24]: 0
  with precondition: [0>=V_a] 

* Chain [23]: 1*s(10)+0
  with precondition: [0>=V_c,V_a>=1] 

* Chain [22]: 1*s(11)+1*s(12)+0
  Such that:s(11) =< V_c

  with precondition: [V_a>=1,V_c>=1] 

* Chain [21]...: 1*s(13)+0
  with precondition: [0>=V_c,V_a>=1] 

* Chain [20]...: 1*s(14)+1*s(15)+0
  Such that:s(14) =< V_c

  with precondition: [V_a>=1,V_c>=1] 


Closed-form bounds of eval_twn03_start(V_a,V_b,V_c,B): 
-------------------------------------
* Chain [24] with precondition: [0>=V_a] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [23] with precondition: [0>=V_c,V_a>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [22] with precondition: [V_a>=1,V_c>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [21]... with precondition: [0>=V_c,V_a>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [20]... with precondition: [V_a>=1,V_c>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_twn03_start(V_a,V_b,V_c,B): inf 
Asymptotic class: infinity 
* Total analysis performed in 42 ms.

