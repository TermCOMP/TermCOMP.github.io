MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_size12_4/10,eval_size12_5/11,eval_size12_bb3_in/9,eval_size12_bb4_in/9]
1. recursive  : [eval_size12_bb1_in/7,eval_size12_bb2_in/7,eval_size12_bb3_in_loop_cont/12,eval_size12_bb5_in/11]
2. recursive  : [eval_size12_11/3,eval_size12_12/4,eval_size12_bb6_in/2,eval_size12_bb7_in/2,eval_size12_bb8_in/4]
3. non_recursive  : [eval_size12_stop/1]
4. non_recursive  : [eval_size12_bb9_in/1]
5. non_recursive  : [eval_size12_bb6_in_loop_cont/2]
6. non_recursive  : [eval_size12_bb1_in_loop_cont/3]
7. non_recursive  : [eval_size12_bb0_in/5]
8. non_recursive  : [eval_size12_start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_size12_bb3_in/9
1. SCC is partially evaluated into eval_size12_bb1_in/7
2. SCC is partially evaluated into eval_size12_bb6_in/2
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_size12_bb1_in_loop_cont/3
7. SCC is partially evaluated into eval_size12_bb0_in/5
8. SCC is partially evaluated into eval_size12_start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_size12_bb3_in/9 
* CE 8 is refined into CE [11] 
* CE 6 is refined into CE [12] 
* CE 7 is refined into CE [13] 


### Cost equations --> "Loop" of eval_size12_bb3_in/9 
* CEs [12] --> Loop 11 
* CEs [13] --> Loop 12 
* CEs [11] --> Loop 13 

### Ranking functions of CR eval_size12_bb3_in(V_a,V__06,V_t2_0,V__12,V__1,B,C,D,E) 
* RF of phase [11,12]: [V_t2_0]

#### Partial ranking functions of CR eval_size12_bb3_in(V_a,V__06,V_t2_0,V__12,V__1,B,C,D,E) 
* Partial RF of phase [11,12]:
  - RF of loop [11:1,12:1]:
    V_t2_0


### Specialization of cost equations eval_size12_bb1_in/7 
* CE 4 is refined into CE [14] 
* CE 3 is refined into CE [15,16] 


### Cost equations --> "Loop" of eval_size12_bb1_in/7 
* CEs [16] --> Loop 14 
* CEs [15] --> Loop 15 
* CEs [14] --> Loop 16 

### Ranking functions of CR eval_size12_bb1_in(V_a,V_t1_0,V__06,V__01,V__0,B,C) 
* RF of phase [14]: [V_t1_0]
* RF of phase [15]: [V_t1_0]

#### Partial ranking functions of CR eval_size12_bb1_in(V_a,V_t1_0,V__06,V__01,V__0,B,C) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    V_t1_0
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    V_t1_0


### Specialization of cost equations eval_size12_bb6_in/2 
* CE 10 is refined into CE [17] 
* CE 9 is refined into CE [18] 


### Cost equations --> "Loop" of eval_size12_bb6_in/2 
* CEs [18] --> Loop 17 
* CEs [17] --> Loop 18 

### Ranking functions of CR eval_size12_bb6_in(V__17,B) 
* RF of phase [17]: [V__17]

#### Partial ranking functions of CR eval_size12_bb6_in(V__17,B) 
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    V__17


### Specialization of cost equations eval_size12_bb1_in_loop_cont/3 
* CE 5 is refined into CE [19,20] 


### Cost equations --> "Loop" of eval_size12_bb1_in_loop_cont/3 
* CEs [20] --> Loop 19 
* CEs [19] --> Loop 20 

### Ranking functions of CR eval_size12_bb1_in_loop_cont(A,B,C) 

#### Partial ranking functions of CR eval_size12_bb1_in_loop_cont(A,B,C) 


### Specialization of cost equations eval_size12_bb0_in/5 
* CE 2 is refined into CE [21,22,23,24,25,26] 


### Cost equations --> "Loop" of eval_size12_bb0_in/5 
* CEs [23] --> Loop 21 
* CEs [26] --> Loop 22 
* CEs [24] --> Loop 23 
* CEs [25] --> Loop 24 
* CEs [22] --> Loop 25 
* CEs [21] --> Loop 26 

### Ranking functions of CR eval_size12_bb0_in(V_a,V_b,V_c,V_d,B) 

#### Partial ranking functions of CR eval_size12_bb0_in(V_a,V_b,V_c,V_d,B) 


### Specialization of cost equations eval_size12_start/5 
* CE 1 is refined into CE [27,28,29,30,31,32] 


### Cost equations --> "Loop" of eval_size12_start/5 
* CEs [32] --> Loop 27 
* CEs [31] --> Loop 28 
* CEs [30] --> Loop 29 
* CEs [29] --> Loop 30 
* CEs [28] --> Loop 31 
* CEs [27] --> Loop 32 

### Ranking functions of CR eval_size12_start(V_a,V_b,V_c,V_d,B) 

#### Partial ranking functions of CR eval_size12_start(V_a,V_b,V_c,V_d,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_size12_bb3_in(V_a,V__06,V_t2_0,V__12,V__1,B,C,D,E):
* Chain [[11,12],13]: 2*it(11)+0
  Such that:aux(3) =< V_t2_0
it(11) =< aux(3)

  with precondition: [B=2,C=0,V__06+V_a=D+E,V_a>=1,V_t2_0>=1] 

* Chain [13]: 0
  with precondition: [B=2,D=V__12,E=V__1,V_t2_0=C,0>=V_t2_0,V_a>=1] 


#### Cost of chains of eval_size12_bb1_in(V_a,V_t1_0,V__06,V__01,V__0,B,C):
* Chain [[15],[14],16]: 2*it(14)+2*s(5)+0
  Such that:aux(11) =< V_t1_0
it(14) =< aux(11)

  with precondition: [B=4,V__06+V_a=C,V_t1_0>=2,0>=V__06+V_a,V_a>=V_t1_0,V__0+V__01>=1] 

* Chain [[15],16]: 1*it(15)+2*s(5)+0
  Such that:it(15) =< V_t1_0

  with precondition: [B=4,V_t1_0>=1,V_a>=V_t1_0,V__0+V__01>=1,C+2>=2*V_t1_0+V__06+V_a] 

* Chain [[14],16]: 1*it(14)+0
  Such that:it(14) =< V_t1_0

  with precondition: [B=4,V__0+V__01=C,V_t1_0>=1,V_a>=V_t1_0,0>=V__0+V__01] 

* Chain [16]: 0
  with precondition: [B=4,C=V__06,0>=V_t1_0,V_a>=V_t1_0] 


#### Cost of chains of eval_size12_bb6_in(V__17,B):
* Chain [[17],18]: 1*it(17)+0
  Such that:it(17) =< V__17

  with precondition: [B=3,V__17>=1] 

* Chain [18]: 0
  with precondition: [B=3,0>=V__17] 


#### Cost of chains of eval_size12_bb1_in_loop_cont(A,B,C):
* Chain [20]: 0
  with precondition: [A=4,0>=B] 

* Chain [19]: 1*s(7)+0
  Such that:s(7) =< B

  with precondition: [A=4,B>=1] 


#### Cost of chains of eval_size12_bb0_in(V_a,V_b,V_c,V_d,B):
* Chain [26]: 0
  with precondition: [0>=V_a,0>=V_d] 

* Chain [25]: 1*s(8)+0
  Such that:s(8) =< V_d

  with precondition: [0>=V_a,V_d>=1] 

* Chain [24]: 1*s(9)+2*s(10)+0
  Such that:s(9) =< V_a

  with precondition: [V_a>=1,2>=3*V_a+V_d,V_b+V_c>=1] 

* Chain [23]: 1*s(11)+0
  Such that:s(11) =< V_a

  with precondition: [V_a>=1,0>=V_b+V_c] 

* Chain [22]: 1*s(12)+3*s(13)+0
  Such that:s(12) =< V_a

  with precondition: [V_a>=1,V_b+V_c>=1] 

* Chain [21]: 2*s(16)+2*s(17)+0
  Such that:s(15) =< V_a
s(16) =< s(15)

  with precondition: [V_a>=2,0>=V_a+V_d,V_b+V_c>=1] 


#### Cost of chains of eval_size12_start(V_a,V_b,V_c,V_d,B):
* Chain [32]: 0
  with precondition: [0>=V_a,0>=V_d] 

* Chain [31]: 1*s(18)+0
  Such that:s(18) =< V_d

  with precondition: [0>=V_a,V_d>=1] 

* Chain [30]: 1*s(19)+2*s(20)+0
  Such that:s(19) =< V_a

  with precondition: [V_a>=1,2>=3*V_a+V_d,V_b+V_c>=1] 

* Chain [29]: 1*s(21)+0
  Such that:s(21) =< V_a

  with precondition: [V_a>=1,0>=V_b+V_c] 

* Chain [28]: 1*s(22)+3*s(23)+0
  Such that:s(22) =< V_a

  with precondition: [V_a>=1,V_b+V_c>=1] 

* Chain [27]: 2*s(25)+2*s(26)+0
  Such that:s(24) =< V_a
s(25) =< s(24)

  with precondition: [V_a>=2,0>=V_a+V_d,V_b+V_c>=1] 


Closed-form bounds of eval_size12_start(V_a,V_b,V_c,V_d,B): 
-------------------------------------
* Chain [32] with precondition: [0>=V_a,0>=V_d] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [31] with precondition: [0>=V_a,V_d>=1] 
    - Upper bound: V_d 
    - Complexity: n 
* Chain [30] with precondition: [V_a>=1,2>=3*V_a+V_d,V_b+V_c>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [29] with precondition: [V_a>=1,0>=V_b+V_c] 
    - Upper bound: V_a 
    - Complexity: n 
* Chain [28] with precondition: [V_a>=1,V_b+V_c>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [27] with precondition: [V_a>=2,0>=V_a+V_d,V_b+V_c>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_size12_start(V_a,V_b,V_c,V_d,B): inf 
Asymptotic class: infinity 
* Total analysis performed in 137 ms.

