WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_hc_compute_2/3,eval_hc_compute_3/4,eval_hc_compute_bb3_in/3,eval_hc_compute_bb4_in/3,eval_hc_compute_bb5_in/4]
1. recursive  : [eval_hc_compute_8/3,eval_hc_compute_9/4,eval_hc_compute_bb7_in/3,eval_hc_compute_bb8_in/3,eval_hc_compute_bb9_in/4]
2. recursive  : [eval_hc_compute__critedge1_in/4,eval_hc_compute_bb6_in/3,eval_hc_compute_bb7_in_loop_cont/5]
3. recursive  : [eval_hc_compute__critedge_in/3,eval_hc_compute_bb1_in/2,eval_hc_compute_bb2_in/2,eval_hc_compute_bb3_in_loop_cont/4,eval_hc_compute_bb6_in_loop_cont/3]
4. non_recursive  : [eval_hc_compute_stop/1]
5. non_recursive  : [eval_hc_compute_bb10_in/1]
6. non_recursive  : [eval_hc_compute_bb1_in_loop_cont/2]
7. non_recursive  : [eval_hc_compute_bb0_in/2]
8. non_recursive  : [eval_hc_compute_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_hc_compute_bb3_in/3
1. SCC is partially evaluated into eval_hc_compute_bb7_in/3
2. SCC is partially evaluated into eval_hc_compute_bb6_in/3
3. SCC is partially evaluated into eval_hc_compute_bb1_in/2
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_hc_compute_bb0_in/2
8. SCC is partially evaluated into eval_hc_compute_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_hc_compute_bb3_in/3 
* CE 5 is refined into CE [13] 
* CE 7 is refined into CE [14] 
* CE 6 is refined into CE [15] 


### Cost equations --> "Loop" of eval_hc_compute_bb3_in/3 
* CEs [15] --> Loop 13 
* CEs [13] --> Loop 14 
* CEs [14] --> Loop 15 

### Ranking functions of CR eval_hc_compute_bb3_in(V_j_0,B,C) 
* RF of phase [13]: [V_j_0]

#### Partial ranking functions of CR eval_hc_compute_bb3_in(V_j_0,B,C) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    V_j_0


### Specialization of cost equations eval_hc_compute_bb7_in/3 
* CE 10 is refined into CE [16] 
* CE 12 is refined into CE [17] 
* CE 11 is refined into CE [18] 


### Cost equations --> "Loop" of eval_hc_compute_bb7_in/3 
* CEs [18] --> Loop 16 
* CEs [16] --> Loop 17 
* CEs [17] --> Loop 18 

### Ranking functions of CR eval_hc_compute_bb7_in(V_y_0,B,C) 
* RF of phase [16]: [V_y_0]

#### Partial ranking functions of CR eval_hc_compute_bb7_in(V_y_0,B,C) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    V_y_0


### Specialization of cost equations eval_hc_compute_bb6_in/3 
* CE 9 is refined into CE [19] 
* CE 8 is refined into CE [20,21,22] 


### Cost equations --> "Loop" of eval_hc_compute_bb6_in/3 
* CEs [22] --> Loop 19 
* CEs [20,21] --> Loop 20 
* CEs [19] --> Loop 21 

### Ranking functions of CR eval_hc_compute_bb6_in(V_i_0,V_x_0,B) 
* RF of phase [19,20]: [V_x_0]

#### Partial ranking functions of CR eval_hc_compute_bb6_in(V_i_0,V_x_0,B) 
* Partial RF of phase [19,20]:
  - RF of loop [19:1]:
    V_x_0-1
  - RF of loop [20:1]:
    V_x_0


### Specialization of cost equations eval_hc_compute_bb1_in/2 
* CE 4 is refined into CE [23] 
* CE 3 is refined into CE [24,25,26,27] 


### Cost equations --> "Loop" of eval_hc_compute_bb1_in/2 
* CEs [27] --> Loop 22 
* CEs [26] --> Loop 23 
* CEs [25] --> Loop 24 
* CEs [24] --> Loop 25 
* CEs [23] --> Loop 26 

### Ranking functions of CR eval_hc_compute_bb1_in(V_i_0,B) 
* RF of phase [22,23]: [V_i_0-1]

#### Partial ranking functions of CR eval_hc_compute_bb1_in(V_i_0,B) 
* Partial RF of phase [22,23]:
  - RF of loop [22:1]:
    V_i_0/2-1
  - RF of loop [23:1]:
    V_i_0-1


### Specialization of cost equations eval_hc_compute_bb0_in/2 
* CE 2 is refined into CE [28,29,30,31] 


### Cost equations --> "Loop" of eval_hc_compute_bb0_in/2 
* CEs [31] --> Loop 27 
* CEs [30] --> Loop 28 
* CEs [29] --> Loop 29 
* CEs [28] --> Loop 30 

### Ranking functions of CR eval_hc_compute_bb0_in(V_num_values,B) 

#### Partial ranking functions of CR eval_hc_compute_bb0_in(V_num_values,B) 


### Specialization of cost equations eval_hc_compute_start/2 
* CE 1 is refined into CE [32,33,34,35] 


### Cost equations --> "Loop" of eval_hc_compute_start/2 
* CEs [35] --> Loop 31 
* CEs [34] --> Loop 32 
* CEs [33] --> Loop 33 
* CEs [32] --> Loop 34 

### Ranking functions of CR eval_hc_compute_start(V_num_values,B) 

#### Partial ranking functions of CR eval_hc_compute_start(V_num_values,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_hc_compute_bb3_in(V_j_0,B,C):
* Chain [[13],15]: 1*it(13)+0
  Such that:it(13) =< V_j_0

  with precondition: [B=3,C=0,V_j_0>=1] 

* Chain [[13],14]: 1*it(13)+0
  Such that:it(13) =< V_j_0-C

  with precondition: [B=3,C>=1,V_j_0>=C+1] 

* Chain [15]: 0
  with precondition: [V_j_0=0,B=3,C=0] 

* Chain [14]: 0
  with precondition: [B=3,V_j_0=C,V_j_0>=1] 


#### Cost of chains of eval_hc_compute_bb7_in(V_y_0,B,C):
* Chain [[16],18]: 1*it(16)+0
  Such that:it(16) =< V_y_0

  with precondition: [B=2,C=0,V_y_0>=1] 

* Chain [[16],17]: 1*it(16)+0
  Such that:it(16) =< V_y_0-C

  with precondition: [B=2,C>=1,V_y_0>=C+1] 

* Chain [17]: 0
  with precondition: [B=2,V_y_0=C,V_y_0>=1] 


#### Cost of chains of eval_hc_compute_bb6_in(V_i_0,V_x_0,B):
* Chain [[19,20],21]: 2*it(19)+1*s(5)+1*s(6)+0
  Such that:aux(5) =< V_x_0
it(19) =< aux(5)
aux(2) =< aux(5)+1
s(5) =< it(19)*aux(5)
s(6) =< it(19)*aux(2)

  with precondition: [B=4,V_i_0>=1,V_x_0>=1] 

* Chain [21]: 0
  with precondition: [B=4,0>=V_x_0,V_i_0>=1] 


#### Cost of chains of eval_hc_compute_bb1_in(V_i_0,B):
* Chain [[22,23],25,26]: 1*it(22)+6*it(23)+2*s(8)+1*s(10)+1*s(11)+1*s(34)+1*s(35)+1*s(38)+1*s(39)+1
  Such that:it(22) =< V_i_0/2
aux(10) =< 1
aux(11) =< V_i_0
s(8) =< aux(10)
s(9) =< aux(10)+1
s(10) =< s(8)*aux(10)
s(11) =< s(8)*s(9)
it(22) =< aux(11)
it(23) =< aux(11)
s(38) =< it(23)*aux(10)
s(39) =< it(23)*s(9)
s(20) =< aux(11)+1
s(34) =< it(23)*aux(11)
s(35) =< it(23)*s(20)

  with precondition: [B=5,V_i_0>=2] 

* Chain [[22,23],24,26]: 1*it(22)+9*it(23)+2*s(34)+2*s(35)+1*s(38)+1*s(39)+1
  Such that:s(28) =< 1
it(22) =< V_i_0/2
aux(13) =< V_i_0
it(22) =< aux(13)
it(23) =< aux(13)
s(20) =< aux(13)+1
s(34) =< it(23)*aux(13)
s(35) =< it(23)*s(20)
s(30) =< s(28)+1
s(38) =< it(23)*s(28)
s(39) =< it(23)*s(30)

  with precondition: [B=5,V_i_0>=3] 

* Chain [26]: 0
  with precondition: [B=5,0>=V_i_0] 

* Chain [25,26]: 2*s(8)+1*s(10)+1*s(11)+1
  Such that:s(7) =< 1
s(8) =< s(7)
s(9) =< s(7)+1
s(10) =< s(8)*s(7)
s(11) =< s(8)*s(9)

  with precondition: [V_i_0=1,B=5] 

* Chain [24,26]: 3*s(41)+1*s(45)+1*s(46)+1
  Such that:aux(12) =< V_i_0
s(41) =< aux(12)
s(44) =< aux(12)+1
s(45) =< s(41)*aux(12)
s(46) =< s(41)*s(44)

  with precondition: [B=5,V_i_0>=2] 


#### Cost of chains of eval_hc_compute_bb0_in(V_num_values,B):
* Chain [30]: 2*s(66)+1*s(68)+1*s(69)+1
  Such that:s(65) =< 1
s(66) =< s(65)
s(67) =< s(65)+1
s(68) =< s(66)*s(65)
s(69) =< s(66)*s(67)

  with precondition: [V_num_values=1] 

* Chain [29]: 0
  with precondition: [0>=V_num_values] 

* Chain [28]: 1*s(71)+9*s(73)+2*s(75)+2*s(76)+2*s(77)+1*s(79)+1*s(80)+1*s(81)+1*s(82)+1
  Such that:s(70) =< 1
s(72) =< V_num_values
s(71) =< V_num_values/2
s(73) =< s(72)
s(74) =< s(72)+1
s(75) =< s(73)*s(72)
s(76) =< s(73)*s(74)
s(77) =< s(70)
s(78) =< s(70)+1
s(79) =< s(77)*s(70)
s(80) =< s(77)*s(78)
s(71) =< s(72)
s(81) =< s(73)*s(70)
s(82) =< s(73)*s(78)

  with precondition: [V_num_values>=2] 

* Chain [27]: 1*s(84)+9*s(86)+2*s(88)+2*s(89)+1*s(91)+1*s(92)+1
  Such that:s(83) =< 1
s(85) =< V_num_values
s(84) =< V_num_values/2
s(84) =< s(85)
s(86) =< s(85)
s(87) =< s(85)+1
s(88) =< s(86)*s(85)
s(89) =< s(86)*s(87)
s(90) =< s(83)+1
s(91) =< s(86)*s(83)
s(92) =< s(86)*s(90)

  with precondition: [V_num_values>=3] 


#### Cost of chains of eval_hc_compute_start(V_num_values,B):
* Chain [34]: 2*s(94)+1*s(96)+1*s(97)+1
  Such that:s(93) =< 1
s(94) =< s(93)
s(95) =< s(93)+1
s(96) =< s(94)*s(93)
s(97) =< s(94)*s(95)

  with precondition: [V_num_values=1] 

* Chain [33]: 0
  with precondition: [0>=V_num_values] 

* Chain [32]: 1*s(100)+9*s(101)+2*s(103)+2*s(104)+2*s(105)+1*s(107)+1*s(108)+1*s(109)+1*s(110)+1
  Such that:s(98) =< 1
s(99) =< V_num_values
s(100) =< V_num_values/2
s(101) =< s(99)
s(102) =< s(99)+1
s(103) =< s(101)*s(99)
s(104) =< s(101)*s(102)
s(105) =< s(98)
s(106) =< s(98)+1
s(107) =< s(105)*s(98)
s(108) =< s(105)*s(106)
s(100) =< s(99)
s(109) =< s(101)*s(98)
s(110) =< s(101)*s(106)

  with precondition: [V_num_values>=2] 

* Chain [31]: 1*s(113)+9*s(114)+2*s(116)+2*s(117)+1*s(119)+1*s(120)+1
  Such that:s(111) =< 1
s(112) =< V_num_values
s(113) =< V_num_values/2
s(113) =< s(112)
s(114) =< s(112)
s(115) =< s(112)+1
s(116) =< s(114)*s(112)
s(117) =< s(114)*s(115)
s(118) =< s(111)+1
s(119) =< s(114)*s(111)
s(120) =< s(114)*s(118)

  with precondition: [V_num_values>=3] 


Closed-form bounds of eval_hc_compute_start(V_num_values,B): 
-------------------------------------
* Chain [34] with precondition: [V_num_values=1] 
    - Upper bound: 6 
    - Complexity: constant 
* Chain [33] with precondition: [0>=V_num_values] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [32] with precondition: [V_num_values>=2] 
    - Upper bound: V_num_values/2+(14*V_num_values+6+4*V_num_values*V_num_values) 
    - Complexity: n^2 
* Chain [31] with precondition: [V_num_values>=3] 
    - Upper bound: V_num_values/2+(14*V_num_values+1+4*V_num_values*V_num_values) 
    - Complexity: n^2 

### Maximum cost of eval_hc_compute_start(V_num_values,B): nat(V_num_values)*4*nat(V_num_values)+nat(V_num_values)*14+nat(V_num_values/2)+6 
Asymptotic class: n^2 
* Total analysis performed in 88 ms.

