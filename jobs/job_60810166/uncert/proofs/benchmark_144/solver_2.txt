WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_foo_bb2_in/5,eval_foo_bb3_in/5]
1. recursive  : [eval_foo_bb1_in/3,eval_foo_bb2_in_loop_cont/4]
2. non_recursive  : [eval_foo_stop/1]
3. non_recursive  : [eval_foo_bb4_in/1]
4. non_recursive  : [eval_foo_bb1_in_loop_cont/2]
5. non_recursive  : [eval_foo_bb0_in/3]
6. non_recursive  : [eval_foo_start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_foo_bb2_in/5
1. SCC is partially evaluated into eval_foo_bb1_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_foo_bb0_in/3
6. SCC is partially evaluated into eval_foo_start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_foo_bb2_in/5 
* CE 7 is refined into CE [9] 
* CE 8 is discarded (unfeasible) 
* CE 6 is refined into CE [10] 


### Cost equations --> "Loop" of eval_foo_bb2_in/5 
* CEs [10] --> Loop 9 
* CEs [9] --> Loop 10 

### Ranking functions of CR eval_foo_bb2_in(V__01,V__0,V__02,B,C) 
* RF of phase [9]: [-V__01+V__02+1,V__02]

#### Partial ranking functions of CR eval_foo_bb2_in(V__01,V__0,V__02,B,C) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    -V__01+V__02+1
    V__02


### Specialization of cost equations eval_foo_bb1_in/3 
* CE 5 is refined into CE [11] 
* CE 4 is refined into CE [12] 
* CE 3 is refined into CE [13,14] 


### Cost equations --> "Loop" of eval_foo_bb1_in/3 
* CEs [14] --> Loop 11 
* CEs [13] --> Loop 12 
* CEs [11] --> Loop 13 
* CEs [12] --> Loop 14 

### Ranking functions of CR eval_foo_bb1_in(V__01,V__0,B) 
* RF of phase [11]: [V__01]

#### Partial ranking functions of CR eval_foo_bb1_in(V__01,V__0,B) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    V__01


### Specialization of cost equations eval_foo_bb0_in/3 
* CE 2 is refined into CE [15,16,17,18] 


### Cost equations --> "Loop" of eval_foo_bb0_in/3 
* CEs [17] --> Loop 15 
* CEs [18] --> Loop 16 
* CEs [15] --> Loop 17 
* CEs [16] --> Loop 18 

### Ranking functions of CR eval_foo_bb0_in(V_x,V_y,B) 

#### Partial ranking functions of CR eval_foo_bb0_in(V_x,V_y,B) 


### Specialization of cost equations eval_foo_start/5 
* CE 1 is refined into CE [19,20,21,22] 


### Cost equations --> "Loop" of eval_foo_start/5 
* CEs [22] --> Loop 19 
* CEs [21] --> Loop 20 
* CEs [20] --> Loop 21 
* CEs [19] --> Loop 22 

### Ranking functions of CR eval_foo_start(V_x,V_y,V_tmp,V_xtmp,B) 

#### Partial ranking functions of CR eval_foo_start(V_x,V_y,V_tmp,V_xtmp,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_foo_bb2_in(V__01,V__0,V__02,B,C):
* Chain [[9],10]: 1*it(9)+0
  Such that:it(9) =< -V__01+V__02+1

  with precondition: [B=2,C>=0,V__0>=V__02,V__01>=C+1,V__02>=V__01+C] 

* Chain [10]: 0
  with precondition: [B=2,V__02=C,V__0>=1,V__02>=0,V__01>=V__02+1,V__0>=V__02] 


#### Cost of chains of eval_foo_bb1_in(V__01,V__0,B):
* Chain [[11],14]: 1*it(11)+1*s(3)+0
  Such that:it(11) =< V__01
s(3) =< V__01+V__0

  with precondition: [B=3,V__01>=1,V__0>=V__01] 

* Chain [14]: 0
  with precondition: [B=3,0>=V__01] 

* Chain [13]: 0
  with precondition: [B=3,0>=V__0] 

* Chain [12,[11],14]: 1*it(11)+1*s(3)+1
  Such that:s(3) =< V__01+V__0
it(11) =< V__0

  with precondition: [B=3,V__0>=1,V__01>=V__0+1] 


#### Cost of chains of eval_foo_bb0_in(V_x,V_y,B):
* Chain [18]: 0
  with precondition: [0>=V_x] 

* Chain [17]: 0
  with precondition: [0>=V_y] 

* Chain [16]: 1*s(4)+1*s(5)+1
  Such that:s(5) =< V_x
s(4) =< V_x+V_y

  with precondition: [V_x>=1,V_y>=V_x+1] 

* Chain [15]: 1*s(6)+1*s(7)+0
  Such that:s(7) =< V_x+V_y
s(6) =< V_y

  with precondition: [V_y>=1,V_x>=V_y] 


#### Cost of chains of eval_foo_start(V_x,V_y,V_tmp,V_xtmp,B):
* Chain [22]: 0
  with precondition: [0>=V_x] 

* Chain [21]: 0
  with precondition: [0>=V_y] 

* Chain [20]: 1*s(8)+1*s(9)+1
  Such that:s(8) =< V_x
s(9) =< V_x+V_y

  with precondition: [V_x>=1,V_y>=V_x+1] 

* Chain [19]: 1*s(10)+1*s(11)+0
  Such that:s(10) =< V_x+V_y
s(11) =< V_y

  with precondition: [V_y>=1,V_x>=V_y] 


Closed-form bounds of eval_foo_start(V_x,V_y,V_tmp,V_xtmp,B): 
-------------------------------------
* Chain [22] with precondition: [0>=V_x] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [21] with precondition: [0>=V_y] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [20] with precondition: [V_x>=1,V_y>=V_x+1] 
    - Upper bound: 2*V_x+V_y+1 
    - Complexity: n 
* Chain [19] with precondition: [V_y>=1,V_x>=V_y] 
    - Upper bound: V_x+2*V_y 
    - Complexity: n 

### Maximum cost of eval_foo_start(V_x,V_y,V_tmp,V_xtmp,B): nat(V_x+V_y)+max([nat(V_y),nat(V_x)+1]) 
Asymptotic class: n 
* Total analysis performed in 53 ms.

