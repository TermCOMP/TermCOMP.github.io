WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_knuth_morris_pratt_0/11,eval_knuth_morris_pratt_1/12,eval_knuth_morris_pratt_2/12,eval_knuth_morris_pratt_3/13,eval_knuth_morris_pratt_bb2_in/11,eval_knuth_morris_pratt_bb3_in/11,eval_knuth_morris_pratt_bb4_in/12,eval_knuth_morris_pratt_bb5_in/13]
1. recursive  : [eval_knuth_morris_pratt__critedge_in/6,eval_knuth_morris_pratt_bb1_in/5,eval_knuth_morris_pratt_bb2_in_loop_cont/7]
2. non_recursive  : [eval_knuth_morris_pratt_stop/1]
3. non_recursive  : [eval_knuth_morris_pratt_bb6_in/1]
4. non_recursive  : [eval_knuth_morris_pratt_bb1_in_loop_cont/2]
5. non_recursive  : [eval_knuth_morris_pratt_bb0_in/3]
6. non_recursive  : [eval_knuth_morris_pratt_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_knuth_morris_pratt_bb2_in/11
1. SCC is partially evaluated into eval_knuth_morris_pratt_bb1_in/5
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_knuth_morris_pratt_bb0_in/3
6. SCC is partially evaluated into eval_knuth_morris_pratt_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_knuth_morris_pratt_bb2_in/11 
* CE 9 is refined into CE [11] 
* CE 8 is refined into CE [12] 
* CE 10 is refined into CE [13] 


### Cost equations --> "Loop" of eval_knuth_morris_pratt_bb2_in/11 
* CEs [11] --> Loop 10 
* CEs [12] --> Loop 11 
* CEs [13] --> Loop 12 

### Ranking functions of CR eval_knuth_morris_pratt_bb2_in(V_n,V_m,V_j_0,V_i_0,V_j_1,B,C,D,E,F,G) 

#### Partial ranking functions of CR eval_knuth_morris_pratt_bb2_in(V_n,V_m,V_j_0,V_i_0,V_j_1,B,C,D,E,F,G) 


### Specialization of cost equations eval_knuth_morris_pratt_bb1_in/5 
* CE 5 is refined into CE [14,15] 
* CE 6 is refined into CE [16] 
* CE 7 is refined into CE [17] 
* CE 4 is refined into CE [18,19] 
* CE 3 is refined into CE [20,21] 


### Cost equations --> "Loop" of eval_knuth_morris_pratt_bb1_in/5 
* CEs [19] --> Loop 13 
* CEs [21] --> Loop 14 
* CEs [18] --> Loop 15 
* CEs [20] --> Loop 16 
* CEs [17] --> Loop 17 
* CEs [16] --> Loop 18 
* CEs [14] --> Loop 19 
* CEs [15] --> Loop 20 

### Ranking functions of CR eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) 
* RF of phase [13]: [V_m-V_i_0-1,V_m-V_j_0-1,V_n-V_i_0,V_n-V_j_0]
* RF of phase [14]: [V_n-V_i_0,V_n-V_j_0]

#### Partial ranking functions of CR eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    V_m-V_i_0-1
    V_m-V_j_0-1
    V_n-V_i_0
    V_n-V_j_0
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    V_n-V_i_0
    V_n-V_j_0


### Specialization of cost equations eval_knuth_morris_pratt_bb0_in/3 
* CE 2 is refined into CE [22,23,24,25,26,27,28,29] 


### Cost equations --> "Loop" of eval_knuth_morris_pratt_bb0_in/3 
* CEs [25] --> Loop 21 
* CEs [28] --> Loop 22 
* CEs [23] --> Loop 23 
* CEs [29] --> Loop 24 
* CEs [27] --> Loop 25 
* CEs [26] --> Loop 26 
* CEs [24] --> Loop 27 
* CEs [22] --> Loop 28 

### Ranking functions of CR eval_knuth_morris_pratt_bb0_in(V_n,V_m,B) 

#### Partial ranking functions of CR eval_knuth_morris_pratt_bb0_in(V_n,V_m,B) 


### Specialization of cost equations eval_knuth_morris_pratt_start/3 
* CE 1 is refined into CE [30,31,32,33,34,35,36,37] 


### Cost equations --> "Loop" of eval_knuth_morris_pratt_start/3 
* CEs [37] --> Loop 29 
* CEs [36] --> Loop 30 
* CEs [35] --> Loop 31 
* CEs [34] --> Loop 32 
* CEs [33] --> Loop 33 
* CEs [32] --> Loop 34 
* CEs [31] --> Loop 35 
* CEs [30] --> Loop 36 

### Ranking functions of CR eval_knuth_morris_pratt_start(V_n,V_m,B) 

#### Partial ranking functions of CR eval_knuth_morris_pratt_start(V_n,V_m,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_knuth_morris_pratt_bb2_in(V_n,V_m,V_j_0,V_i_0,V_j_1,B,C,D,E,F,G):
* Chain [12]: 0
  with precondition: [B=2,D=V_m,V_j_1=V_j_0,V_n=C,V_j_1=E,V_i_0=F,V_j_1=G,0>=V_j_1+1,V_n>=V_i_0+1] 

* Chain [11]: 0
  with precondition: [B=2,D=V_m,V_j_1=V_j_0,V_n=C,V_j_1=E,V_i_0=F,V_j_1=G,V_j_1>=0,V_n>=V_i_0+1] 

* Chain [10]: 0
  with precondition: [B=3,V_j_1=V_j_0,V_j_1>=0,V_n>=V_i_0+1] 


#### Cost of chains of eval_knuth_morris_pratt_bb1_in(V_n,V_m,V_j_0,V_i_0,B):
* Chain [[14],18]: 1*it(14)+0
  Such that:it(14) =< V_n-V_j_0

  with precondition: [B=3,V_i_0=V_j_0,V_i_0>=0,V_i_0>=V_m,V_n>=V_i_0+2] 

* Chain [[14],17]: 1*it(14)+0
  Such that:it(14) =< V_n-V_j_0

  with precondition: [B=3,V_i_0=V_j_0,V_i_0>=0,V_i_0>=V_m,V_n>=V_i_0+1] 

* Chain [[13],20]: 1*it(13)+0
  Such that:it(13) =< V_m-V_i_0

  with precondition: [B=3,V_i_0=V_j_0,V_i_0>=0,V_n>=V_m,V_m>=V_i_0+2] 

* Chain [[13],18]: 1*it(13)+0
  Such that:it(13) =< V_n-V_j_0
it(13) =< V_m-V_j_0

  with precondition: [B=3,V_i_0=V_j_0,V_i_0>=0,V_n>=V_i_0+2,V_m>=V_i_0+2] 

* Chain [[13],17]: 1*it(13)+0
  Such that:it(13) =< V_n-V_j_0

  with precondition: [B=3,V_i_0=V_j_0,V_i_0>=0,V_m>=V_n+1,V_n>=V_i_0+1] 

* Chain [20]: 0
  with precondition: [B=3,V_j_0+1=V_m,V_j_0=V_i_0,V_j_0>=0,V_n>=V_j_0+1] 

* Chain [18]: 0
  with precondition: [B=3,V_j_0=V_i_0,V_j_0>=0,V_n>=V_j_0+1] 

* Chain [17]: 0
  with precondition: [B=3,V_i_0=V_j_0,V_i_0>=0,V_i_0>=V_n] 


#### Cost of chains of eval_knuth_morris_pratt_bb0_in(V_n,V_m,B):
* Chain [28]: 0
  with precondition: [V_m=1,V_n>=1] 

* Chain [27]: 0
  with precondition: [0>=V_n] 

* Chain [26]: 1*s(1)+0
  Such that:s(1) =< V_n

  with precondition: [0>=V_m,V_n>=1] 

* Chain [25]: 1*s(2)+0
  Such that:s(2) =< V_n

  with precondition: [0>=V_m,V_n>=2] 

* Chain [24]: 0
  with precondition: [V_n>=1] 

* Chain [23]: 1*s(3)+0
  Such that:s(3) =< V_n

  with precondition: [V_n>=1,V_m>=V_n+1] 

* Chain [22]: 1*s(4)+0
  Such that:s(4) =< V_n
s(4) =< V_m

  with precondition: [V_n>=2,V_m>=2] 

* Chain [21]: 1*s(5)+0
  Such that:s(5) =< V_m

  with precondition: [V_m>=2,V_n>=V_m] 


#### Cost of chains of eval_knuth_morris_pratt_start(V_n,V_m,B):
* Chain [36]: 0
  with precondition: [V_m=1,V_n>=1] 

* Chain [35]: 0
  with precondition: [0>=V_n] 

* Chain [34]: 1*s(6)+0
  Such that:s(6) =< V_n

  with precondition: [0>=V_m,V_n>=1] 

* Chain [33]: 1*s(7)+0
  Such that:s(7) =< V_n

  with precondition: [0>=V_m,V_n>=2] 

* Chain [32]: 0
  with precondition: [V_n>=1] 

* Chain [31]: 1*s(8)+0
  Such that:s(8) =< V_n

  with precondition: [V_n>=1,V_m>=V_n+1] 

* Chain [30]: 1*s(9)+0
  Such that:s(9) =< V_n
s(9) =< V_m

  with precondition: [V_n>=2,V_m>=2] 

* Chain [29]: 1*s(10)+0
  Such that:s(10) =< V_m

  with precondition: [V_m>=2,V_n>=V_m] 


Closed-form bounds of eval_knuth_morris_pratt_start(V_n,V_m,B): 
-------------------------------------
* Chain [36] with precondition: [V_m=1,V_n>=1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [35] with precondition: [0>=V_n] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [34] with precondition: [0>=V_m,V_n>=1] 
    - Upper bound: V_n 
    - Complexity: n 
* Chain [33] with precondition: [0>=V_m,V_n>=2] 
    - Upper bound: V_n 
    - Complexity: n 
* Chain [32] with precondition: [V_n>=1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [31] with precondition: [V_n>=1,V_m>=V_n+1] 
    - Upper bound: V_n 
    - Complexity: n 
* Chain [30] with precondition: [V_n>=2,V_m>=2] 
    - Upper bound: V_n 
    - Complexity: n 
* Chain [29] with precondition: [V_m>=2,V_n>=V_m] 
    - Upper bound: V_m 
    - Complexity: n 

### Maximum cost of eval_knuth_morris_pratt_start(V_n,V_m,B): max([nat(V_n),nat(V_m)]) 
Asymptotic class: n 
* Total analysis performed in 126 ms.

