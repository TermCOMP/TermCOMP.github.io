MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_counterex1a_1/6,eval_counterex1a_2/7,eval_counterex1a_5/6,eval_counterex1a_6/7,eval_counterex1a_bb1_in/5,eval_counterex1a_bb2_in/5,eval_counterex1a_bb3_in/5,eval_counterex1a_bb4_in/5]
1. non_recursive  : [eval_counterex1a_stop/1]
2. non_recursive  : [eval_counterex1a__critedge_in/1]
3. non_recursive  : [eval_counterex1a_bb1_in_loop_cont/2]
4. non_recursive  : [eval_counterex1a_bb0_in/5]
5. non_recursive  : [eval_counterex1a_start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_counterex1a_bb1_in/5
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_counterex1a_bb0_in/5
5. SCC is partially evaluated into eval_counterex1a_start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_counterex1a_bb1_in/5 
* CE 11 is refined into CE [12] 
* CE 9 is refined into CE [13] 
* CE 10 is refined into CE [14] 
* CE 8 is refined into CE [15] 
* CE 7 is refined into CE [16] 
* CE 6 is refined into CE [17] 
* CE 5 is refined into CE [18] 
* CE 3 is refined into CE [19] 
* CE 4 is refined into CE [20] 


### Cost equations --> "Loop" of eval_counterex1a_bb1_in/5 
* CEs [15] --> Loop 12 
* CEs [16] --> Loop 13 
* CEs [17] --> Loop 14 
* CEs [18] --> Loop 15 
* CEs [19] --> Loop 16 
* CEs [20] --> Loop 17 
* CEs [12] --> Loop 18 
* CEs [13] --> Loop 19 
* CEs [14] --> Loop 20 

### Ranking functions of CR eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B) 
* RF of phase [13]: [V__04+1]

#### Partial ranking functions of CR eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B) 
* Partial RF of phase [12,14,16,17]:
  - RF of loop [12:1,14:1]:
    V__04+1 depends on loops [16:1,17:1] 
  - RF of loop [14:1]:
    V__0 depends on loops [16:1] 
    V__01+1
  - RF of loop [16:1]:
    -V__0+1 depends on loops [14:1] 
  - RF of loop [16:1,17:1]:
    V_n-V__04+1 depends on loops [12:1,14:1] 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    V__04+1


### Specialization of cost equations eval_counterex1a_bb0_in/5 
* CE 2 is refined into CE [21,22,23,24,25,26,27,28,29,30,31,32,33,34,35] 


### Cost equations --> "Loop" of eval_counterex1a_bb0_in/5 
* CEs [35] --> Loop 21 
* CEs [34] --> Loop 22 
* CEs [33] --> Loop 23 
* CEs [32] --> Loop 24 
* CEs [31] --> Loop 25 
* CEs [30] --> Loop 26 
* CEs [24] --> Loop 27 
* CEs [25] --> Loop 28 
* CEs [29] --> Loop 29 
* CEs [28] --> Loop 30 
* CEs [27] --> Loop 31 
* CEs [26] --> Loop 32 
* CEs [21] --> Loop 33 
* CEs [23] --> Loop 34 
* CEs [22] --> Loop 35 

### Ranking functions of CR eval_counterex1a_bb0_in(V_n,V_b,V_x,V_y,B) 

#### Partial ranking functions of CR eval_counterex1a_bb0_in(V_n,V_b,V_x,V_y,B) 


### Specialization of cost equations eval_counterex1a_start/5 
* CE 1 is refined into CE [36,37,38,39,40,41,42,43,44,45,46,47,48,49,50] 


### Cost equations --> "Loop" of eval_counterex1a_start/5 
* CEs [50] --> Loop 36 
* CEs [49] --> Loop 37 
* CEs [48] --> Loop 38 
* CEs [47] --> Loop 39 
* CEs [46] --> Loop 40 
* CEs [45] --> Loop 41 
* CEs [44] --> Loop 42 
* CEs [43] --> Loop 43 
* CEs [42] --> Loop 44 
* CEs [41] --> Loop 45 
* CEs [40] --> Loop 46 
* CEs [39] --> Loop 47 
* CEs [38] --> Loop 48 
* CEs [37] --> Loop 49 
* CEs [36] --> Loop 50 

### Ranking functions of CR eval_counterex1a_start(V_n,V_b,V_x,V_y,B) 

#### Partial ranking functions of CR eval_counterex1a_start(V_n,V_b,V_x,V_y,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_counterex1a_bb1_in(V_n,V__04,V__01,V__0,B):
* Chain [[13],20]: 1*it(13)+0
  Such that:it(13) =< V__04+1

  with precondition: [B=2,0>=V__0+1,V__04>=0,V__01>=0,V_n>=V__04] 

* Chain [[13],15,[12,14,16,17]]...: 3*it(12)+1*it(13)+1*it(14)+1
  Such that:it(13) =< V__04
aux(20) =< V__01
it(14) =< aux(20)

  with precondition: [B=2,0>=V__0+1,V__04>=2,V__01>=1,V_n>=V__04] 

* Chain [[13],15,[12,14,16,17],20]: 3*it(12)+1*it(13)+1*it(14)+1
  Such that:it(13) =< V__04
aux(21) =< V__01
it(14) =< aux(21)

  with precondition: [B=2,0>=V__0+1,V__04>=2,V__01>=1,V_n>=V__04] 

* Chain [[13],15,[12,14,16,17],19]: 3*it(12)+1*it(13)+1*it(14)+1
  Such that:it(13) =< V__04
aux(22) =< V__01
it(14) =< aux(22)

  with precondition: [B=2,0>=V__0+1,V__04>=2,V__01>=1,V_n>=V__04] 

* Chain [[13],15,[12,14,16,17],18]: 3*it(12)+1*it(13)+1*it(14)+1
  Such that:it(13) =< V__04
aux(23) =< V__01
it(14) =< aux(23)

  with precondition: [B=2,0>=V__0+1,V__04>=2,V__01>=1,V_n>=V__04] 

* Chain [[13],15,20]: 1*it(13)+1
  Such that:it(13) =< V__04

  with precondition: [B=2,0>=V__0+1,V__04>=1,V__01>=0,V_n>=V__04] 

* Chain [[13],15,19]: 1*it(13)+1
  Such that:it(13) =< V__04

  with precondition: [V__01=0,B=2,0>=V__0+1,V__04>=1,V_n>=V__04] 

* Chain [[12,14,16,17]]...: 3*it(12)+1*it(14)+0
  Such that:aux(20) =< V__01+1
it(14) =< aux(20)

  with precondition: [V__0>=0,V__01>=0,V_n>=V__04,V__04>=0,B=2] 

* Chain [[12,14,16,17],20]: 3*it(12)+1*it(14)+0
  Such that:aux(21) =< V__01+1
it(14) =< aux(21)

  with precondition: [B=2,V__04>=0,V__01>=0,V__0>=0,V_n>=V__04] 

* Chain [[12,14,16,17],19]: 3*it(12)+1*it(14)+0
  Such that:aux(22) =< V__01+1
it(14) =< aux(22)

  with precondition: [B=2,V__04>=0,V__01>=0,V__0>=0,V_n>=V__04,V__0+V_n>=V__04+1] 

* Chain [[12,14,16,17],18]: 3*it(12)+1*it(14)+0
  Such that:aux(19) =< V__01
aux(18) =< V__01+1
it(14) =< aux(18)
it(14) =< aux(19)

  with precondition: [B=2,V__04>=0,V__01>=0,V__0>=0,V_n>=V__04] 

* Chain [20]: 0
  with precondition: [B=2,0>=V__04+1] 

* Chain [19]: 0
  with precondition: [B=2,0>=V__01+1] 

* Chain [18]: 0
  with precondition: [B=2,V__04>=V_n+1] 

* Chain [15,[12,14,16,17]]...: 3*it(12)+1*it(14)+1
  Such that:aux(20) =< V__01
it(14) =< aux(20)

  with precondition: [B=2,0>=V__0+1,V__04>=1,V__01>=1,V_n>=V__04] 

* Chain [15,[12,14,16,17],20]: 3*it(12)+1*it(14)+1
  Such that:aux(21) =< V__01
it(14) =< aux(21)

  with precondition: [B=2,0>=V__0+1,V__04>=1,V__01>=1,V_n>=V__04] 

* Chain [15,[12,14,16,17],19]: 3*it(12)+1*it(14)+1
  Such that:aux(22) =< V__01
it(14) =< aux(22)

  with precondition: [B=2,0>=V__0+1,V__04>=1,V__01>=1,V_n>=V__04] 

* Chain [15,[12,14,16,17],18]: 3*it(12)+1*it(14)+1
  Such that:aux(23) =< V__01
it(14) =< aux(23)

  with precondition: [B=2,0>=V__0+1,V__04>=1,V__01>=1,V_n>=V__04] 

* Chain [15,20]: 1
  with precondition: [V__04=0,B=2,0>=V__0+1,V_n>=0,V__01>=0] 

* Chain [15,19]: 1
  with precondition: [V__01=0,B=2,0>=V__0+1,V__04>=0,V_n>=V__04] 


#### Cost of chains of eval_counterex1a_bb0_in(V_n,V_b,V_x,V_y,B):
* Chain [35]: 1
  with precondition: [V_x=0,0>=V_b+1,V_y>=0,V_n>=V_y] 

* Chain [34]: 1*s(29)+1
  Such that:s(29) =< V_y

  with precondition: [V_x=0,0>=V_b+1,V_y>=1,V_n>=V_y] 

* Chain [33]: 1
  with precondition: [V_y=0,0>=V_b+1,V_n>=0,V_x>=0] 

* Chain [32]: 1*s(30)+0
  Such that:s(30) =< V_y+1

  with precondition: [0>=V_b+1,V_x>=0,V_y>=0,V_n>=V_y] 

* Chain [31]: 1*s(31)+1
  Such that:s(31) =< V_y

  with precondition: [0>=V_b+1,V_x>=0,V_y>=1,V_n>=V_y] 

* Chain [30]: 3*s(33)+9*s(34)+1
  Such that:s(32) =< V_x
s(33) =< s(32)

  with precondition: [0>=V_b+1,V_x>=1,V_y>=1,V_n>=V_y] 

* Chain [29]: 3*s(37)+3*s(38)+9*s(39)+1
  Such that:s(36) =< V_x
s(35) =< V_y
s(37) =< s(35)
s(38) =< s(36)

  with precondition: [0>=V_b+1,V_x>=1,V_y>=2,V_n>=V_y] 

* Chain [28]: 0
  with precondition: [0>=V_x+1] 

* Chain [27]: 0
  with precondition: [0>=V_y+1] 

* Chain [26]: 1*s(42)+1*s(43)+6*s(44)+0
  Such that:s(40) =< V_x
s(41) =< V_x+1
s(42) =< s(41)
s(42) =< s(40)
s(43) =< s(41)

  with precondition: [V_b>=0,V_x>=0,V_y>=0,V_n>=V_y] 

* Chain [25]: 1*s(46)+3*s(47)+0
  Such that:s(45) =< V_x+1
s(46) =< s(45)

  with precondition: [V_b>=0,V_x>=0,V_y>=0,V_n>=V_y,V_b+V_n>=V_y+1] 

* Chain [24]: 0
  with precondition: [V_y>=V_n+1] 

* Chain [23]...: 1*s(49)+3*s(50)+1
  Such that:s(48) =< V_x
s(49) =< s(48)

  with precondition: [0>=V_b+1,V_x>=1,V_y>=1,V_n>=V_y] 

* Chain [22]...: 1*s(51)+1*s(53)+3*s(54)+1
  Such that:s(52) =< V_x
s(51) =< V_y
s(53) =< s(52)

  with precondition: [0>=V_b+1,V_x>=1,V_y>=2,V_n>=V_y] 

* Chain [21]...: 1*s(56)+3*s(57)+0
  Such that:s(55) =< V_x+1
s(56) =< s(55)

  with precondition: [V_b>=0,V_x>=0,V_y>=0,V_n>=V_y] 


#### Cost of chains of eval_counterex1a_start(V_n,V_b,V_x,V_y,B):
* Chain [50]: 1
  with precondition: [V_x=0,0>=V_b+1,V_y>=0,V_n>=V_y] 

* Chain [49]: 1*s(58)+1
  Such that:s(58) =< V_y

  with precondition: [V_x=0,0>=V_b+1,V_y>=1,V_n>=V_y] 

* Chain [48]: 1
  with precondition: [V_y=0,0>=V_b+1,V_n>=0,V_x>=0] 

* Chain [47]: 1*s(59)+0
  Such that:s(59) =< V_y+1

  with precondition: [0>=V_b+1,V_x>=0,V_y>=0,V_n>=V_y] 

* Chain [46]: 1*s(60)+1
  Such that:s(60) =< V_y

  with precondition: [0>=V_b+1,V_x>=0,V_y>=1,V_n>=V_y] 

* Chain [45]: 3*s(62)+9*s(63)+1
  Such that:s(61) =< V_x
s(62) =< s(61)

  with precondition: [0>=V_b+1,V_x>=1,V_y>=1,V_n>=V_y] 

* Chain [44]: 3*s(66)+3*s(67)+9*s(68)+1
  Such that:s(64) =< V_x
s(65) =< V_y
s(66) =< s(65)
s(67) =< s(64)

  with precondition: [0>=V_b+1,V_x>=1,V_y>=2,V_n>=V_y] 

* Chain [43]: 0
  with precondition: [0>=V_x+1] 

* Chain [42]: 0
  with precondition: [0>=V_y+1] 

* Chain [41]: 1*s(71)+1*s(72)+6*s(73)+0
  Such that:s(69) =< V_x
s(70) =< V_x+1
s(71) =< s(70)
s(71) =< s(69)
s(72) =< s(70)

  with precondition: [V_b>=0,V_x>=0,V_y>=0,V_n>=V_y] 

* Chain [40]: 1*s(75)+3*s(76)+0
  Such that:s(74) =< V_x+1
s(75) =< s(74)

  with precondition: [V_b>=0,V_x>=0,V_y>=0,V_n>=V_y,V_b+V_n>=V_y+1] 

* Chain [39]: 0
  with precondition: [V_y>=V_n+1] 

* Chain [38]...: 1*s(78)+3*s(79)+1
  Such that:s(77) =< V_x
s(78) =< s(77)

  with precondition: [0>=V_b+1,V_x>=1,V_y>=1,V_n>=V_y] 

* Chain [37]...: 1*s(81)+1*s(82)+3*s(83)+1
  Such that:s(80) =< V_x
s(81) =< V_y
s(82) =< s(80)

  with precondition: [0>=V_b+1,V_x>=1,V_y>=2,V_n>=V_y] 

* Chain [36]...: 1*s(85)+3*s(86)+0
  Such that:s(84) =< V_x+1
s(85) =< s(84)

  with precondition: [V_b>=0,V_x>=0,V_y>=0,V_n>=V_y] 


Closed-form bounds of eval_counterex1a_start(V_n,V_b,V_x,V_y,B): 
-------------------------------------
* Chain [50] with precondition: [V_x=0,0>=V_b+1,V_y>=0,V_n>=V_y] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [49] with precondition: [V_x=0,0>=V_b+1,V_y>=1,V_n>=V_y] 
    - Upper bound: V_y+1 
    - Complexity: n 
* Chain [48] with precondition: [V_y=0,0>=V_b+1,V_n>=0,V_x>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [47] with precondition: [0>=V_b+1,V_x>=0,V_y>=0,V_n>=V_y] 
    - Upper bound: V_y+1 
    - Complexity: n 
* Chain [46] with precondition: [0>=V_b+1,V_x>=0,V_y>=1,V_n>=V_y] 
    - Upper bound: V_y+1 
    - Complexity: n 
* Chain [45] with precondition: [0>=V_b+1,V_x>=1,V_y>=1,V_n>=V_y] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [44] with precondition: [0>=V_b+1,V_x>=1,V_y>=2,V_n>=V_y] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [43] with precondition: [0>=V_x+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [42] with precondition: [0>=V_y+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [41] with precondition: [V_b>=0,V_x>=0,V_y>=0,V_n>=V_y] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [40] with precondition: [V_b>=0,V_x>=0,V_y>=0,V_n>=V_y,V_n+V_b>=V_y+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [39] with precondition: [V_y>=V_n+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [38]... with precondition: [0>=V_b+1,V_x>=1,V_y>=1,V_n>=V_y] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [37]... with precondition: [0>=V_b+1,V_x>=1,V_y>=2,V_n>=V_y] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [36]... with precondition: [V_b>=0,V_x>=0,V_y>=0,V_n>=V_y] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_counterex1a_start(V_n,V_b,V_x,V_y,B): inf 
Asymptotic class: infinity 
* Total analysis performed in 226 ms.

