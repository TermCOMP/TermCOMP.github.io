MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_non_linear16_bb1_in/3,eval_non_linear16_bb2_in/3]
1. recursive  : [eval_non_linear16_7/6,eval_non_linear16_8/7,eval_non_linear16_bb4_in/4,eval_non_linear16_bb5_in/4]
2. non_recursive  : [eval_non_linear16_stop/1]
3. non_recursive  : [eval_non_linear16_bb6_in/1]
4. non_recursive  : [eval_non_linear16_bb4_in_loop_cont/2]
5. non_recursive  : [eval_non_linear16_4/4]
6. non_recursive  : [eval_non_linear16_3/3]
7. non_recursive  : [eval_non_linear16_bb3_in/3]
8. non_recursive  : [eval_non_linear16_bb1_in_loop_cont/4]
9. non_recursive  : [eval_non_linear16_bb0_in/5]
10. non_recursive  : [eval_non_linear16_start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_non_linear16_bb1_in/3
1. SCC is partially evaluated into eval_non_linear16_bb4_in/4
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_non_linear16_4/4
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_non_linear16_bb0_in/5
10. SCC is partially evaluated into eval_non_linear16_start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_non_linear16_bb1_in/3 
* CE 4 is refined into CE [10] 
* CE 5 is refined into CE [11] 
* CE 3 is refined into CE [12] 


### Cost equations --> "Loop" of eval_non_linear16_bb1_in/3 
* CEs [12] --> Loop 10 
* CEs [10] --> Loop 11 
* CEs [11] --> Loop 12 

### Ranking functions of CR eval_non_linear16_bb1_in(V__01,V__0,B) 

#### Partial ranking functions of CR eval_non_linear16_bb1_in(V__01,V__0,B) 


### Specialization of cost equations eval_non_linear16_bb4_in/4 
* CE 8 is refined into CE [13] 
* CE 9 is refined into CE [14] 
* CE 7 is refined into CE [15] 


### Cost equations --> "Loop" of eval_non_linear16_bb4_in/4 
* CEs [15] --> Loop 13 
* CEs [13] --> Loop 14 
* CEs [14] --> Loop 15 

### Ranking functions of CR eval_non_linear16_bb4_in(V_t_0,V__03,V__02,B) 

#### Partial ranking functions of CR eval_non_linear16_bb4_in(V_t_0,V__03,V__02,B) 


### Specialization of cost equations eval_non_linear16_4/4 
* CE 6 is refined into CE [16,17,18,19] 


### Cost equations --> "Loop" of eval_non_linear16_4/4 
* CEs [19] --> Loop 16 
* CEs [18] --> Loop 17 
* CEs [16] --> Loop 18 
* CEs [17] --> Loop 19 

### Ranking functions of CR eval_non_linear16_4(V_y1,V_y2,V_5,B) 

#### Partial ranking functions of CR eval_non_linear16_4(V_y1,V_y2,V_5,B) 


### Specialization of cost equations eval_non_linear16_bb0_in/5 
* CE 2 is refined into CE [20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35] 


### Cost equations --> "Loop" of eval_non_linear16_bb0_in/5 
* CEs [31] --> Loop 20 
* CEs [33] --> Loop 21 
* CEs [27,34,35] --> Loop 22 
* CEs [32] --> Loop 23 
* CEs [23] --> Loop 24 
* CEs [29] --> Loop 25 
* CEs [30] --> Loop 26 
* CEs [25] --> Loop 27 
* CEs [26] --> Loop 28 
* CEs [28] --> Loop 29 
* CEs [24] --> Loop 30 
* CEs [22] --> Loop 31 
* CEs [20] --> Loop 32 
* CEs [21] --> Loop 33 

### Ranking functions of CR eval_non_linear16_bb0_in(V_x1,V_x2,V_y1,V_y2,B) 

#### Partial ranking functions of CR eval_non_linear16_bb0_in(V_x1,V_x2,V_y1,V_y2,B) 


### Specialization of cost equations eval_non_linear16_start/5 
* CE 1 is refined into CE [36,37,38,39,40,41,42,43,44,45,46,47,48,49] 


### Cost equations --> "Loop" of eval_non_linear16_start/5 
* CEs [49] --> Loop 34 
* CEs [48] --> Loop 35 
* CEs [47] --> Loop 36 
* CEs [46] --> Loop 37 
* CEs [45] --> Loop 38 
* CEs [44] --> Loop 39 
* CEs [43] --> Loop 40 
* CEs [42] --> Loop 41 
* CEs [41] --> Loop 42 
* CEs [40] --> Loop 43 
* CEs [39] --> Loop 44 
* CEs [38] --> Loop 45 
* CEs [37] --> Loop 46 
* CEs [36] --> Loop 47 

### Ranking functions of CR eval_non_linear16_start(V_x1,V_x2,V_y1,V_y2,B) 

#### Partial ranking functions of CR eval_non_linear16_start(V_x1,V_x2,V_y1,V_y2,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_non_linear16_bb1_in(V__01,V__0,B):
* Chain [[10]]...: 1*it(10)+0
  with precondition: [V__0>=V__01+1,V__01>=1,B=2] 

* Chain [[10],11]: 1*it(10)+0
  with precondition: [B=2,V__01>=1,V__0>=V__01+1] 

* Chain [12]: 0
  with precondition: [B=2,0>=V__01] 

* Chain [11]: 0
  with precondition: [B=2,V__01>=V__0] 


#### Cost of chains of eval_non_linear16_bb4_in(V_t_0,V__03,V__02,B):
* Chain [[13]]...: 1*it(13)+0
  with precondition: [V__02>=1,V_t_0>=1,B=3] 

* Chain [[13],15]: 1*it(13)+0
  with precondition: [B=3,V_t_0>=1,V__02>=1] 

* Chain [[13],14]: 1*it(13)+0
  with precondition: [B=3,V_t_0>=1,V__02>=1] 

* Chain [15]: 0
  with precondition: [B=3,0>=V_t_0] 

* Chain [14]: 0
  with precondition: [B=3,0>=V__02] 


#### Cost of chains of eval_non_linear16_4(V_y1,V_y2,V_5,B):
* Chain [19]: 0
  with precondition: [0>=V_y1] 

* Chain [18]: 0
  with precondition: [0>=V_5] 

* Chain [17]: 1*s(3)+0
  with precondition: [V_y1>=1,V_5>=1] 

* Chain [16]...: 1*s(4)+0
  with precondition: [V_y1>=1,V_5>=1] 


#### Cost of chains of eval_non_linear16_bb0_in(V_x1,V_x2,V_y1,V_y2,B):
* Chain [33]: 0
  with precondition: [0>=V_x2] 

* Chain [32]: 0
  with precondition: [0>=V_x2,0>=V_y1] 

* Chain [31]: 1*s(5)+0
  with precondition: [0>=V_x2,V_y1>=1] 

* Chain [30]: 1*s(6)+0
  with precondition: [0>=V_y1,V_x2>=1,V_x1>=V_x2+1] 

* Chain [29]: 0
  with precondition: [0>=V_y1,V_x2>=V_x1] 

* Chain [28]: 2*s(7)+0
  with precondition: [V_x2>=1,V_y1>=1,V_x1>=V_x2+1] 

* Chain [27]: 1*s(9)+0
  with precondition: [V_x2>=1,V_x1>=V_x2+1] 

* Chain [26]: 1*s(10)+0
  with precondition: [V_y1>=1,V_x2>=V_x1] 

* Chain [25]: 0
  with precondition: [V_x2>=V_x1] 

* Chain [24]...: 1*s(11)+0
  with precondition: [0>=V_x2,V_y1>=1] 

* Chain [23]...: 1*s(12)+0
  with precondition: [0>=V_y1,V_x2>=1,V_x1>=V_x2+1] 

* Chain [22]...: 1*aux(2)+0
  with precondition: [V_x2>=1,V_y1>=1,V_x1>=V_x2+1] 

* Chain [21]...: 1*s(19)+0
  with precondition: [V_x2>=1,V_x1>=V_x2+1] 

* Chain [20]...: 1*s(20)+0
  with precondition: [V_y1>=1,V_x2>=V_x1] 


#### Cost of chains of eval_non_linear16_start(V_x1,V_x2,V_y1,V_y2,B):
* Chain [47]: 0
  with precondition: [0>=V_x2] 

* Chain [46]: 0
  with precondition: [0>=V_x2,0>=V_y1] 

* Chain [45]: 1*s(21)+0
  with precondition: [0>=V_x2,V_y1>=1] 

* Chain [44]: 1*s(22)+0
  with precondition: [0>=V_y1,V_x2>=1,V_x1>=V_x2+1] 

* Chain [43]: 0
  with precondition: [0>=V_y1,V_x2>=V_x1] 

* Chain [42]: 2*s(23)+0
  with precondition: [V_x2>=1,V_y1>=1,V_x1>=V_x2+1] 

* Chain [41]: 1*s(24)+0
  with precondition: [V_x2>=1,V_x1>=V_x2+1] 

* Chain [40]: 1*s(25)+0
  with precondition: [V_y1>=1,V_x2>=V_x1] 

* Chain [39]: 0
  with precondition: [V_x2>=V_x1] 

* Chain [38]...: 1*s(26)+0
  with precondition: [0>=V_x2,V_y1>=1] 

* Chain [37]...: 1*s(27)+0
  with precondition: [0>=V_y1,V_x2>=1,V_x1>=V_x2+1] 

* Chain [36]...: 1*s(28)+0
  with precondition: [V_x2>=1,V_y1>=1,V_x1>=V_x2+1] 

* Chain [35]...: 1*s(29)+0
  with precondition: [V_x2>=1,V_x1>=V_x2+1] 

* Chain [34]...: 1*s(30)+0
  with precondition: [V_y1>=1,V_x2>=V_x1] 


Closed-form bounds of eval_non_linear16_start(V_x1,V_x2,V_y1,V_y2,B): 
-------------------------------------
* Chain [47] with precondition: [0>=V_x2] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [46] with precondition: [0>=V_x2,0>=V_y1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [45] with precondition: [0>=V_x2,V_y1>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [44] with precondition: [0>=V_y1,V_x2>=1,V_x1>=V_x2+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [43] with precondition: [0>=V_y1,V_x2>=V_x1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [42] with precondition: [V_x2>=1,V_y1>=1,V_x1>=V_x2+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [41] with precondition: [V_x2>=1,V_x1>=V_x2+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [40] with precondition: [V_y1>=1,V_x2>=V_x1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [39] with precondition: [V_x2>=V_x1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [38]... with precondition: [0>=V_x2,V_y1>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [37]... with precondition: [0>=V_y1,V_x2>=1,V_x1>=V_x2+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [36]... with precondition: [V_x2>=1,V_y1>=1,V_x1>=V_x2+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [35]... with precondition: [V_x2>=1,V_x1>=V_x2+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [34]... with precondition: [V_y1>=1,V_x2>=V_x1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_non_linear16_start(V_x1,V_x2,V_y1,V_y2,B): inf 
Asymptotic class: infinity 
* Total analysis performed in 63 ms.

