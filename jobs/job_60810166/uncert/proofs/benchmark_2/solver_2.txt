MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_loop_bb4_in/7,eval_loop_bb5_in/7]
1. recursive  : [eval_loop_bb1_in/4,eval_loop_bb2_in/4,eval_loop_bb3_in/4,eval_loop_bb4_in_loop_cont/5,eval_loop_bb6_in/4]
2. non_recursive  : [eval_loop_stop/1]
3. non_recursive  : [eval_loop_bb7_in/1]
4. non_recursive  : [eval_loop_bb1_in_loop_cont/2]
5. non_recursive  : [eval_loop_bb0_in/4]
6. non_recursive  : [eval_loop_start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_loop_bb4_in/7
1. SCC is partially evaluated into eval_loop_bb1_in/4
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_loop_bb0_in/4
6. SCC is partially evaluated into eval_loop_start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_loop_bb4_in/7 
* CE 7 is refined into CE [8] 
* CE 6 is refined into CE [9] 


### Cost equations --> "Loop" of eval_loop_bb4_in/7 
* CEs [9] --> Loop 8 
* CEs [8] --> Loop 9 

### Ranking functions of CR eval_loop_bb4_in(V__04,V__01,V__0,V__03,V__12,B,C) 
* RF of phase [8]: [V__03]

#### Partial ranking functions of CR eval_loop_bb4_in(V__04,V__01,V__0,V__03,V__12,B,C) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V__03


### Specialization of cost equations eval_loop_bb1_in/4 
* CE 5 is refined into CE [10] 
* CE 4 is refined into CE [11] 
* CE 3 is refined into CE [12,13] 


### Cost equations --> "Loop" of eval_loop_bb1_in/4 
* CEs [11] --> Loop 10 
* CEs [12] --> Loop 11 
* CEs [13] --> Loop 12 
* CEs [10] --> Loop 13 

### Ranking functions of CR eval_loop_bb1_in(V__04,V__01,V__0,B) 

#### Partial ranking functions of CR eval_loop_bb1_in(V__04,V__01,V__0,B) 
* Partial RF of phase [10,11,12]:
  - RF of loop [10:1]:
    V__01 depends on loops [12:1] 
  - RF of loop [11:1]:
    -V__04
  - RF of loop [11:1,12:1]:
    V__0/2 depends on loops [10:1] 


### Specialization of cost equations eval_loop_bb0_in/4 
* CE 2 is refined into CE [14,15,16] 


### Cost equations --> "Loop" of eval_loop_bb0_in/4 
* CEs [16] --> Loop 14 
* CEs [15] --> Loop 15 
* CEs [14] --> Loop 16 

### Ranking functions of CR eval_loop_bb0_in(V_x1,V_x2,V_x4,B) 

#### Partial ranking functions of CR eval_loop_bb0_in(V_x1,V_x2,V_x4,B) 


### Specialization of cost equations eval_loop_start/5 
* CE 1 is refined into CE [17,18,19] 


### Cost equations --> "Loop" of eval_loop_start/5 
* CEs [19] --> Loop 17 
* CEs [18] --> Loop 18 
* CEs [17] --> Loop 19 

### Ranking functions of CR eval_loop_start(V_x1,V_x2,V_x3,V_x4,B) 

#### Partial ranking functions of CR eval_loop_start(V_x1,V_x2,V_x3,V_x4,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_loop_bb4_in(V__04,V__01,V__0,V__03,V__12,B,C):
* Chain [[8],9]: 1*it(8)+0
  Such that:it(8) =< V__03

  with precondition: [B=2,V__01>=1,V__0>=1,V__03>=1,V__04+1>=V__03,V__03+V__12>=V__01+V__04+1] 

* Chain [9]: 0
  with precondition: [B=2,V__12=C,0>=V__03,V__01>=1,V__0>=1,V__04+1>=V__03,V__03+V__12>=V__01+V__04+1] 


#### Cost of chains of eval_loop_bb1_in(V__04,V__01,V__0,B):
* Chain [[10,11,12]]...: 1*it(10)+1*it(11)+1*it(12)+1*s(3)+0
  Such that:it(11) =< -V__04

  with precondition: [V__01>=1,B=3] 

* Chain [[10,11,12],13]: 1*it(10)+1*it(11)+1*it(12)+1*s(3)+0
  Such that:it(11) =< -V__04

  with precondition: [B=3,V__01>=1] 

* Chain [13]: 0
  with precondition: [B=3,0>=V__01] 


#### Cost of chains of eval_loop_bb0_in(V_x1,V_x2,V_x4,B):
* Chain [16]: 0
  with precondition: [0>=V_x2] 

* Chain [15]: 1*s(4)+3*s(5)+0
  Such that:s(4) =< -V_x4

  with precondition: [V_x2>=1] 

* Chain [14]...: 1*s(8)+3*s(9)+0
  Such that:s(8) =< -V_x4

  with precondition: [V_x2>=1] 


#### Cost of chains of eval_loop_start(V_x1,V_x2,V_x3,V_x4,B):
* Chain [19]: 0
  with precondition: [0>=V_x2] 

* Chain [18]: 1*s(12)+3*s(13)+0
  Such that:s(12) =< -V_x4

  with precondition: [V_x2>=1] 

* Chain [17]...: 1*s(14)+3*s(15)+0
  Such that:s(14) =< -V_x4

  with precondition: [V_x2>=1] 


Closed-form bounds of eval_loop_start(V_x1,V_x2,V_x3,V_x4,B): 
-------------------------------------
* Chain [19] with precondition: [0>=V_x2] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [18] with precondition: [V_x2>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [17]... with precondition: [V_x2>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_loop_start(V_x1,V_x2,V_x3,V_x4,B): inf 
Asymptotic class: infinity 
* Total analysis performed in 69 ms.

