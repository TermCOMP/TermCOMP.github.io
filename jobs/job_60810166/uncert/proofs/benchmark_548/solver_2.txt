WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_local_alloc_bb3_in/4,eval_local_alloc_bb4_in/4]
1. recursive  : [eval_local_alloc_bb1_in/5,eval_local_alloc_bb2_in/5,eval_local_alloc_bb3_in_loop_cont/7,eval_local_alloc_bb5_in/6]
2. non_recursive  : [eval_local_alloc_stop/1]
3. non_recursive  : [eval_local_alloc_bb6_in/1]
4. non_recursive  : [eval_local_alloc_bb1_in_loop_cont/2]
5. non_recursive  : [eval_local_alloc_bb0_in/4]
6. non_recursive  : [eval_local_alloc_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_local_alloc_bb3_in/4
1. SCC is partially evaluated into eval_local_alloc_bb1_in/5
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_local_alloc_bb0_in/4
6. SCC is partially evaluated into eval_local_alloc_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_local_alloc_bb3_in/4 
* CE 7 is refined into CE [8] 
* CE 6 is refined into CE [9] 


### Cost equations --> "Loop" of eval_local_alloc_bb3_in/4 
* CEs [9] --> Loop 8 
* CEs [8] --> Loop 9 

### Ranking functions of CR eval_local_alloc_bb3_in(V_next_qty_0,V_i_0,B,C) 
* RF of phase [8]: [V_next_qty_0-V_i_0]

#### Partial ranking functions of CR eval_local_alloc_bb3_in(V_next_qty_0,V_i_0,B,C) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V_next_qty_0-V_i_0


### Specialization of cost equations eval_local_alloc_bb1_in/5 
* CE 5 is refined into CE [10] 
* CE 4 is refined into CE [11,12] 
* CE 3 is refined into CE [13] 


### Cost equations --> "Loop" of eval_local_alloc_bb1_in/5 
* CEs [13] --> Loop 10 
* CEs [11] --> Loop 11 
* CEs [12] --> Loop 12 
* CEs [10] --> Loop 13 

### Ranking functions of CR eval_local_alloc_bb1_in(V_n_basic_blocks,V_limit,V_b_0,V_next_qty_0,B) 
* RF of phase [10,12]: [V_n_basic_blocks-V_b_0]

#### Partial ranking functions of CR eval_local_alloc_bb1_in(V_n_basic_blocks,V_limit,V_b_0,V_next_qty_0,B) 
* Partial RF of phase [10,12]:
  - RF of loop [10:1,12:1]:
    V_n_basic_blocks-V_b_0


### Specialization of cost equations eval_local_alloc_bb0_in/4 
* CE 2 is refined into CE [14,15,16,17] 


### Cost equations --> "Loop" of eval_local_alloc_bb0_in/4 
* CEs [17] --> Loop 14 
* CEs [15] --> Loop 15 
* CEs [16] --> Loop 16 
* CEs [14] --> Loop 17 

### Ranking functions of CR eval_local_alloc_bb0_in(V_max_qty,V_n_basic_blocks,V_limit,B) 

#### Partial ranking functions of CR eval_local_alloc_bb0_in(V_max_qty,V_n_basic_blocks,V_limit,B) 


### Specialization of cost equations eval_local_alloc_start/4 
* CE 1 is refined into CE [18,19,20,21] 


### Cost equations --> "Loop" of eval_local_alloc_start/4 
* CEs [21] --> Loop 18 
* CEs [20] --> Loop 19 
* CEs [19] --> Loop 20 
* CEs [18] --> Loop 21 

### Ranking functions of CR eval_local_alloc_start(V_max_qty,V_n_basic_blocks,V_limit,B) 

#### Partial ranking functions of CR eval_local_alloc_start(V_max_qty,V_n_basic_blocks,V_limit,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_local_alloc_bb3_in(V_next_qty_0,V_i_0,B,C):
* Chain [[8],9]: 1*it(8)+0
  Such that:it(8) =< -V_i_0+C

  with precondition: [B=2,V_next_qty_0=C,V_i_0>=0,V_next_qty_0>=V_i_0+1] 

* Chain [9]: 0
  with precondition: [B=2,V_i_0=C,V_i_0>=0,V_i_0>=V_next_qty_0] 


#### Cost of chains of eval_local_alloc_bb1_in(V_n_basic_blocks,V_limit,V_b_0,V_next_qty_0,B):
* Chain [[10,12],13]: 2*it(10)+0
  Such that:aux(3) =< V_n_basic_blocks-V_b_0
it(10) =< aux(3)

  with precondition: [B=3,V_b_0>=0,V_n_basic_blocks>=V_b_0+1] 

* Chain [13]: 0
  with precondition: [B=3,V_b_0>=0,V_b_0>=V_n_basic_blocks] 

* Chain [11,[10,12],13]: 2*it(10)+1*s(1)+1
  Such that:aux(3) =< V_n_basic_blocks
s(1) =< V_next_qty_0
it(10) =< aux(3)

  with precondition: [V_b_0=0,B=3,V_n_basic_blocks>=2,V_next_qty_0>=1,V_limit>=V_next_qty_0+1] 

* Chain [11,13]: 1*s(1)+1
  Such that:s(1) =< V_next_qty_0

  with precondition: [V_n_basic_blocks=1,V_b_0=0,B=3,V_next_qty_0>=1,V_limit>=V_next_qty_0+1] 


#### Cost of chains of eval_local_alloc_bb0_in(V_max_qty,V_n_basic_blocks,V_limit,B):
* Chain [17]: 1*s(2)+1
  Such that:s(2) =< V_max_qty

  with precondition: [V_n_basic_blocks=1,V_max_qty>=1,V_limit>=V_max_qty+1] 

* Chain [16]: 0
  with precondition: [0>=V_n_basic_blocks] 

* Chain [15]: 1*s(4)+2*s(5)+1
  Such that:s(4) =< V_max_qty
s(3) =< V_n_basic_blocks
s(5) =< s(3)

  with precondition: [V_max_qty>=1,V_n_basic_blocks>=2,V_limit>=V_max_qty+1] 

* Chain [14]: 2*s(7)+0
  Such that:s(6) =< V_n_basic_blocks
s(7) =< s(6)

  with precondition: [V_n_basic_blocks>=1] 


#### Cost of chains of eval_local_alloc_start(V_max_qty,V_n_basic_blocks,V_limit,B):
* Chain [21]: 1*s(8)+1
  Such that:s(8) =< V_max_qty

  with precondition: [V_n_basic_blocks=1,V_max_qty>=1,V_limit>=V_max_qty+1] 

* Chain [20]: 0
  with precondition: [0>=V_n_basic_blocks] 

* Chain [19]: 1*s(9)+2*s(11)+1
  Such that:s(9) =< V_max_qty
s(10) =< V_n_basic_blocks
s(11) =< s(10)

  with precondition: [V_max_qty>=1,V_n_basic_blocks>=2,V_limit>=V_max_qty+1] 

* Chain [18]: 2*s(13)+0
  Such that:s(12) =< V_n_basic_blocks
s(13) =< s(12)

  with precondition: [V_n_basic_blocks>=1] 


Closed-form bounds of eval_local_alloc_start(V_max_qty,V_n_basic_blocks,V_limit,B): 
-------------------------------------
* Chain [21] with precondition: [V_n_basic_blocks=1,V_max_qty>=1,V_limit>=V_max_qty+1] 
    - Upper bound: V_max_qty+1 
    - Complexity: n 
* Chain [20] with precondition: [0>=V_n_basic_blocks] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [19] with precondition: [V_max_qty>=1,V_n_basic_blocks>=2,V_limit>=V_max_qty+1] 
    - Upper bound: V_max_qty+2*V_n_basic_blocks+1 
    - Complexity: n 
* Chain [18] with precondition: [V_n_basic_blocks>=1] 
    - Upper bound: 2*V_n_basic_blocks 
    - Complexity: n 

### Maximum cost of eval_local_alloc_start(V_max_qty,V_n_basic_blocks,V_limit,B): nat(V_max_qty)+1+nat(V_n_basic_blocks)*2 
Asymptotic class: n 
* Total analysis performed in 71 ms.

