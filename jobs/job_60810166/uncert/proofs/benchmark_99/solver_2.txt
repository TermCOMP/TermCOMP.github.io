MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_foo_bb1_in/5,eval_foo_bb2_in/5]
1. non_recursive  : [eval_foo_stop/1]
2. non_recursive  : [eval_foo_bb3_in/1]
3. non_recursive  : [eval_foo_bb1_in_loop_cont/2]
4. non_recursive  : [eval_foo_bb0_in/5]
5. non_recursive  : [eval_foo_start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_foo_bb1_in/5
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_foo_bb0_in/5
5. SCC is partially evaluated into eval_foo_start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_foo_bb1_in/5 
* CE 4 is refined into CE [6] 
* CE 5 is refined into CE [7] 
* CE 3 is refined into CE [8] 


### Cost equations --> "Loop" of eval_foo_bb1_in/5 
* CEs [8] --> Loop 6 
* CEs [6] --> Loop 7 
* CEs [7] --> Loop 8 

### Ranking functions of CR eval_foo_bb1_in(V_n,V__02,V__01,V__0,B) 

#### Partial ranking functions of CR eval_foo_bb1_in(V_n,V__02,V__01,V__0,B) 


### Specialization of cost equations eval_foo_bb0_in/5 
* CE 2 is refined into CE [9,10,11,12,13] 


### Cost equations --> "Loop" of eval_foo_bb0_in/5 
* CEs [13] --> Loop 9 
* CEs [9] --> Loop 10 
* CEs [12] --> Loop 11 
* CEs [11] --> Loop 12 
* CEs [10] --> Loop 13 

### Ranking functions of CR eval_foo_bb0_in(V_x,V_y,V_z,V_n,B) 

#### Partial ranking functions of CR eval_foo_bb0_in(V_x,V_y,V_z,V_n,B) 


### Specialization of cost equations eval_foo_start/5 
* CE 1 is refined into CE [14,15,16,17,18] 


### Cost equations --> "Loop" of eval_foo_start/5 
* CEs [18] --> Loop 14 
* CEs [17] --> Loop 15 
* CEs [16] --> Loop 16 
* CEs [15] --> Loop 17 
* CEs [14] --> Loop 18 

### Ranking functions of CR eval_foo_start(V_x,V_y,V_z,V_n,B) 

#### Partial ranking functions of CR eval_foo_start(V_x,V_y,V_z,V_n,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_foo_bb1_in(V_n,V__02,V__01,V__0,B):
* Chain [[6]]...: 1*it(6)+0
  with precondition: [V_n>=V__0,V__0+V__01>=0,B=2] 

* Chain [[6],8]: 1*it(6)+0
  with precondition: [B=2,V_n>=V__0,V__0+V__01>=0] 

* Chain [[6],7]: 1*it(6)+0
  with precondition: [B=2,V_n>=V__0,V__0+V__01>=0,0>=2*V__0+V__01+V__02+1] 

* Chain [8]: 0
  with precondition: [B=2,V__0>=V_n+1] 

* Chain [7]: 0
  with precondition: [B=2,0>=V__0+V__01+1] 


#### Cost of chains of eval_foo_bb0_in(V_x,V_y,V_z,V_n,B):
* Chain [13]: 0
  with precondition: [0>=V_x+V_y+1] 

* Chain [12]: 1*s(1)+0
  with precondition: [V_n>=V_x,V_x+V_y>=0] 

* Chain [11]: 1*s(2)+0
  with precondition: [V_n>=V_x,V_x+V_y>=0,0>=2*V_x+V_y+V_z+1] 

* Chain [10]: 0
  with precondition: [V_x>=V_n+1] 

* Chain [9]...: 1*s(3)+0
  with precondition: [V_n>=V_x,V_x+V_y>=0] 


#### Cost of chains of eval_foo_start(V_x,V_y,V_z,V_n,B):
* Chain [18]: 0
  with precondition: [0>=V_x+V_y+1] 

* Chain [17]: 1*s(4)+0
  with precondition: [V_n>=V_x,V_x+V_y>=0] 

* Chain [16]: 1*s(5)+0
  with precondition: [V_n>=V_x,V_x+V_y>=0,0>=2*V_x+V_y+V_z+1] 

* Chain [15]: 0
  with precondition: [V_x>=V_n+1] 

* Chain [14]...: 1*s(6)+0
  with precondition: [V_n>=V_x,V_x+V_y>=0] 


Closed-form bounds of eval_foo_start(V_x,V_y,V_z,V_n,B): 
-------------------------------------
* Chain [18] with precondition: [0>=V_x+V_y+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [17] with precondition: [V_n>=V_x,V_x+V_y>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [16] with precondition: [V_n>=V_x,V_x+V_y>=0,0>=2*V_x+V_y+V_z+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [15] with precondition: [V_x>=V_n+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [14]... with precondition: [V_n>=V_x,V_x+V_y>=0] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_foo_start(V_x,V_y,V_z,V_n,B): inf 
Asymptotic class: infinity 
* Total analysis performed in 37 ms.

