MAYBE
WARNING: Excluded non-linear constraints:[C+1=<B*B]
WARNING: Excluded non-linear constraints:[C>=B*B]
WARNING: Excluded non-linear constraints:[G=5*C+A*A]
WARNING: Excluded non-linear constraints:[G>=H*H]

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_twn04_bb2_in/6,eval_twn04_bb3_in/6]
1. recursive  : [eval_twn04_bb1_in/4,eval_twn04_bb2_in_loop_cont/7,eval_twn04_bb4_in/6]
2. non_recursive  : [eval_twn04_stop/1]
3. non_recursive  : [eval_twn04_bb5_in/1]
4. non_recursive  : [eval_twn04_bb1_in_loop_cont/2]
5. non_recursive  : [eval_twn04_bb0_in/4]
6. non_recursive  : [eval_twn04_start/6]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_twn04_bb2_in/6
1. SCC is partially evaluated into eval_twn04_bb1_in/4
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_twn04_bb0_in/4
6. SCC is partially evaluated into eval_twn04_start/6

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_twn04_bb2_in/6 
* CE 7 is refined into CE [8] 
* CE 6 is refined into CE [9] 


### Cost equations --> "Loop" of eval_twn04_bb2_in/6 
* CEs [9] --> Loop 8 
* CEs [8] --> Loop 9 

### Ranking functions of CR eval_twn04_bb2_in(V__03,V__12,V__1,B,C,D) 

#### Partial ranking functions of CR eval_twn04_bb2_in(V__03,V__12,V__1,B,C,D) 


### Specialization of cost equations eval_twn04_bb1_in/4 
* CE 5 is refined into CE [10] 
* CE 4 is refined into CE [11,12,13] 


### Cost equations --> "Loop" of eval_twn04_bb1_in/4 
* CEs [13] --> Loop 10 
* CEs [11,12] --> Loop 11 
* CEs [10] --> Loop 12 

### Ranking functions of CR eval_twn04_bb1_in(V_d,V_e,V__03,B) 
* RF of phase [10,11]: [V__03]

#### Partial ranking functions of CR eval_twn04_bb1_in(V_d,V_e,V__03,B) 
* Partial RF of phase [10,11]:
  - RF of loop [10:1,11:1]:
    V__03


### Specialization of cost equations eval_twn04_bb0_in/4 
* CE 3 is refined into CE [14,15] 
* CE 2 is refined into CE [16] 


### Cost equations --> "Loop" of eval_twn04_bb0_in/4 
* CEs [15] --> Loop 13 
* CEs [16] --> Loop 14 
* CEs [14] --> Loop 15 

### Ranking functions of CR eval_twn04_bb0_in(V_c,V_d,V_e,B) 

#### Partial ranking functions of CR eval_twn04_bb0_in(V_c,V_d,V_e,B) 


### Specialization of cost equations eval_twn04_start/6 
* CE 1 is refined into CE [17,18,19] 


### Cost equations --> "Loop" of eval_twn04_start/6 
* CEs [19] --> Loop 16 
* CEs [18] --> Loop 17 
* CEs [17] --> Loop 18 

### Ranking functions of CR eval_twn04_start(V_a,V_b,V_c,V_d,V_e,B) 

#### Partial ranking functions of CR eval_twn04_start(V_a,V_b,V_c,V_d,V_e,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_twn04_bb2_in(V__03,V__12,V__1,B,C,D):
* Chain [[8]]...: 1*it(8)+0
  with precondition: [V__03>=1,V__1>=1,B=2] 

* Chain [[8],9]: 1*it(8)+0
  with precondition: [B=2,V__03>=1,V__1>=1] 

* Chain [9]: 0
  with precondition: [B=2,C=V__12,D=V__1,V__03>=1] 


#### Cost of chains of eval_twn04_bb1_in(V_d,V_e,V__03,B):
* Chain [[10,11],12]: 1*it(10)+2*s(5)+0
  Such that:aux(4) =< V__03
it(10) =< aux(4)

  with precondition: [B=3,V_d>=1,V__03>=1] 

* Chain [12]: 0
  with precondition: [B=3,0>=V__03,V_d>=1] 


#### Cost of chains of eval_twn04_bb0_in(V_c,V_d,V_e,B):
* Chain [15]: 0
  with precondition: [0>=V_c,V_d>=1] 

* Chain [14]: 0
  with precondition: [0>=V_d] 

* Chain [13]: 1*s(8)+2*s(9)+0
  Such that:s(7) =< V_c
s(8) =< s(7)

  with precondition: [V_c>=1,V_d>=1] 


#### Cost of chains of eval_twn04_start(V_a,V_b,V_c,V_d,V_e,B):
* Chain [18]: 0
  with precondition: [0>=V_c,V_d>=1] 

* Chain [17]: 0
  with precondition: [0>=V_d] 

* Chain [16]: 1*s(11)+2*s(12)+0
  Such that:s(10) =< V_c
s(11) =< s(10)

  with precondition: [V_c>=1,V_d>=1] 


Closed-form bounds of eval_twn04_start(V_a,V_b,V_c,V_d,V_e,B): 
-------------------------------------
* Chain [18] with precondition: [0>=V_c,V_d>=1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [17] with precondition: [0>=V_d] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [16] with precondition: [V_c>=1,V_d>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_twn04_start(V_a,V_b,V_c,V_d,V_e,B): inf 
Asymptotic class: infinity 
* Total analysis performed in 46 ms.

