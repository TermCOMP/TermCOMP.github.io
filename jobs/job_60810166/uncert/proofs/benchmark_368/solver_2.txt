WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_speed_pldi10_ex3_2/4,eval_speed_pldi10_ex3_3/5,eval_speed_pldi10_ex3_bb3_in/4,eval_speed_pldi10_ex3_bb4_in/4,eval_speed_pldi10_ex3_bb5_in/5]
1. recursive  : [eval_speed_pldi10_ex3_bb1_in/2,eval_speed_pldi10_ex3_bb2_in/2,eval_speed_pldi10_ex3_bb3_in_loop_cont/3]
2. non_recursive  : [eval_speed_pldi10_ex3_stop/1]
3. non_recursive  : [eval_speed_pldi10_ex3_bb6_in/1]
4. non_recursive  : [eval_speed_pldi10_ex3_bb1_in_loop_cont/2]
5. non_recursive  : [eval_speed_pldi10_ex3_bb0_in/2]
6. non_recursive  : [eval_speed_pldi10_ex3_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_speed_pldi10_ex3_bb3_in/4
1. SCC is partially evaluated into eval_speed_pldi10_ex3_bb1_in/2
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_speed_pldi10_ex3_bb0_in/2
6. SCC is partially evaluated into eval_speed_pldi10_ex3_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_speed_pldi10_ex3_bb3_in/4 
* CE 5 is refined into CE [8] 
* CE 7 is refined into CE [9] 
* CE 6 is refined into CE [10] 


### Cost equations --> "Loop" of eval_speed_pldi10_ex3_bb3_in/4 
* CEs [10] --> Loop 8 
* CEs [8] --> Loop 9 
* CEs [9] --> Loop 10 

### Ranking functions of CR eval_speed_pldi10_ex3_bb3_in(V__0,V__1,B,C) 
* RF of phase [8]: [V__1]

#### Partial ranking functions of CR eval_speed_pldi10_ex3_bb3_in(V__0,V__1,B,C) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V__1


### Specialization of cost equations eval_speed_pldi10_ex3_bb1_in/2 
* CE 4 is refined into CE [11] 
* CE 3 is refined into CE [12,13,14,15] 


### Cost equations --> "Loop" of eval_speed_pldi10_ex3_bb1_in/2 
* CEs [15] --> Loop 11 
* CEs [14] --> Loop 12 
* CEs [13] --> Loop 13 
* CEs [12] --> Loop 14 
* CEs [11] --> Loop 15 

### Ranking functions of CR eval_speed_pldi10_ex3_bb1_in(V__0,B) 
* RF of phase [11,12]: [V__0-1]

#### Partial ranking functions of CR eval_speed_pldi10_ex3_bb1_in(V__0,B) 
* Partial RF of phase [11,12]:
  - RF of loop [11:1]:
    V__0/2-1
  - RF of loop [12:1]:
    V__0-1


### Specialization of cost equations eval_speed_pldi10_ex3_bb0_in/2 
* CE 2 is refined into CE [16,17,18,19] 


### Cost equations --> "Loop" of eval_speed_pldi10_ex3_bb0_in/2 
* CEs [19] --> Loop 16 
* CEs [18] --> Loop 17 
* CEs [17] --> Loop 18 
* CEs [16] --> Loop 19 

### Ranking functions of CR eval_speed_pldi10_ex3_bb0_in(V_n,B) 

#### Partial ranking functions of CR eval_speed_pldi10_ex3_bb0_in(V_n,B) 


### Specialization of cost equations eval_speed_pldi10_ex3_start/2 
* CE 1 is refined into CE [20,21,22,23] 


### Cost equations --> "Loop" of eval_speed_pldi10_ex3_start/2 
* CEs [23] --> Loop 20 
* CEs [22] --> Loop 21 
* CEs [21] --> Loop 22 
* CEs [20] --> Loop 23 

### Ranking functions of CR eval_speed_pldi10_ex3_start(V_n,B) 

#### Partial ranking functions of CR eval_speed_pldi10_ex3_start(V_n,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_speed_pldi10_ex3_bb3_in(V__0,V__1,B,C):
* Chain [[8],10]: 1*it(8)+0
  Such that:it(8) =< V__1

  with precondition: [B=2,C=0,V__1>=1,V__0>=V__1+1] 

* Chain [[8],9]: 1*it(8)+0
  Such that:it(8) =< V__1-C

  with precondition: [B=2,C>=1,V__0>=V__1+1,V__1>=C+1] 

* Chain [10]: 0
  with precondition: [V__1=0,B=2,C=0,V__0>=1] 

* Chain [9]: 0
  with precondition: [B=2,V__1=C,V__1>=1,V__0>=V__1+1] 


#### Cost of chains of eval_speed_pldi10_ex3_bb1_in(V__0,B):
* Chain [[11,12],14,15]: 1*it(11)+2*it(12)+1
  Such that:it(11) =< V__0/2
aux(3) =< V__0
it(11) =< aux(3)
it(12) =< aux(3)

  with precondition: [B=3,V__0>=2] 

* Chain [[11,12],13,15]: 1*it(11)+3*it(12)+1
  Such that:it(11) =< V__0/2
aux(4) =< V__0
it(11) =< aux(4)
it(12) =< aux(4)

  with precondition: [B=3,V__0>=3] 

* Chain [15]: 0
  with precondition: [B=3,0>=V__0] 

* Chain [14,15]: 1
  with precondition: [V__0=1,B=3] 

* Chain [13,15]: 1*s(4)+1
  Such that:s(4) =< V__0

  with precondition: [B=3,V__0>=2] 


#### Cost of chains of eval_speed_pldi10_ex3_bb0_in(V_n,B):
* Chain [19]: 1
  with precondition: [V_n=1] 

* Chain [18]: 0
  with precondition: [0>=V_n] 

* Chain [17]: 1*s(9)+3*s(11)+1
  Such that:s(10) =< V_n
s(9) =< V_n/2
s(11) =< s(10)
s(9) =< s(10)

  with precondition: [V_n>=2] 

* Chain [16]: 1*s(12)+3*s(14)+1
  Such that:s(13) =< V_n
s(12) =< V_n/2
s(12) =< s(13)
s(14) =< s(13)

  with precondition: [V_n>=3] 


#### Cost of chains of eval_speed_pldi10_ex3_start(V_n,B):
* Chain [23]: 1
  with precondition: [V_n=1] 

* Chain [22]: 0
  with precondition: [0>=V_n] 

* Chain [21]: 1*s(16)+3*s(17)+1
  Such that:s(15) =< V_n
s(16) =< V_n/2
s(17) =< s(15)
s(16) =< s(15)

  with precondition: [V_n>=2] 

* Chain [20]: 1*s(19)+3*s(20)+1
  Such that:s(18) =< V_n
s(19) =< V_n/2
s(19) =< s(18)
s(20) =< s(18)

  with precondition: [V_n>=3] 


Closed-form bounds of eval_speed_pldi10_ex3_start(V_n,B): 
-------------------------------------
* Chain [23] with precondition: [V_n=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [22] with precondition: [0>=V_n] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [21] with precondition: [V_n>=2] 
    - Upper bound: 7/2*V_n+1 
    - Complexity: n 
* Chain [20] with precondition: [V_n>=3] 
    - Upper bound: 7/2*V_n+1 
    - Complexity: n 

### Maximum cost of eval_speed_pldi10_ex3_start(V_n,B): max([1,nat(V_n)*3+1+nat(V_n/2)]) 
Asymptotic class: n 
* Total analysis performed in 56 ms.

