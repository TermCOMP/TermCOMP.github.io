MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_foo_bb1_in/3,eval_foo_bb2_in/3]
1. non_recursive  : [eval_foo_stop/1]
2. non_recursive  : [eval_foo_bb3_in/1]
3. non_recursive  : [eval_foo_bb1_in_loop_cont/2]
4. non_recursive  : [eval_foo_bb0_in/3]
5. non_recursive  : [eval_foo_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_foo_bb1_in/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_foo_bb0_in/3
5. SCC is partially evaluated into eval_foo_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_foo_bb1_in/3 
* CE 7 is refined into CE [8] 
* CE 5 is refined into CE [9] 
* CE 6 is refined into CE [10] 


### Cost equations --> "Loop" of eval_foo_bb1_in/3 
* CEs [9] --> Loop 8 
* CEs [10] --> Loop 9 
* CEs [8] --> Loop 10 

### Ranking functions of CR eval_foo_bb1_in(V__01,V__0,B) 

#### Partial ranking functions of CR eval_foo_bb1_in(V__01,V__0,B) 


### Specialization of cost equations eval_foo_bb0_in/3 
* CE 4 is refined into CE [11,12,13] 
* CE 3 is refined into CE [14] 
* CE 2 is refined into CE [15] 


### Cost equations --> "Loop" of eval_foo_bb0_in/3 
* CEs [12] --> Loop 11 
* CEs [14] --> Loop 12 
* CEs [15] --> Loop 13 
* CEs [11] --> Loop 14 
* CEs [13] --> Loop 15 

### Ranking functions of CR eval_foo_bb0_in(V_y1,V_y2,B) 

#### Partial ranking functions of CR eval_foo_bb0_in(V_y1,V_y2,B) 


### Specialization of cost equations eval_foo_start/3 
* CE 1 is refined into CE [16,17,18,19,20] 


### Cost equations --> "Loop" of eval_foo_start/3 
* CEs [20] --> Loop 16 
* CEs [19] --> Loop 17 
* CEs [18] --> Loop 18 
* CEs [17] --> Loop 19 
* CEs [16] --> Loop 20 

### Ranking functions of CR eval_foo_start(V_y1,V_y2,B) 

#### Partial ranking functions of CR eval_foo_start(V_y1,V_y2,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_foo_bb1_in(V__01,V__0,B):
* Chain [[8,9]]...: 2*it(8)+0
  with precondition: [V__0+V__01>=1,V__0>=0,V__01>=0,B=2] 

* Chain [[8,9],10]: 2*it(8)+0
  with precondition: [B=2,V__01>=1,V__0>=1,V__0+V__01>=3] 

* Chain [10]: 0
  with precondition: [B=2,V__0=V__01,V__0>=0] 


#### Cost of chains of eval_foo_bb0_in(V_y1,V_y2,B):
* Chain [15]...: 2*s(1)+0
  with precondition: [V_y1>=0,V_y2>=0,V_y1+V_y2>=1] 

* Chain [14]: 0
  with precondition: [V_y1=V_y2,V_y1>=0] 

* Chain [13]: 0
  with precondition: [0>=V_y1+1] 

* Chain [12]: 0
  with precondition: [0>=V_y2+1] 

* Chain [11]: 2*s(2)+0
  with precondition: [V_y1>=1,V_y2>=1,V_y1+V_y2>=3] 


#### Cost of chains of eval_foo_start(V_y1,V_y2,B):
* Chain [20]: 0
  with precondition: [V_y1=V_y2,V_y1>=0] 

* Chain [19]: 0
  with precondition: [0>=V_y1+1] 

* Chain [18]: 0
  with precondition: [0>=V_y2+1] 

* Chain [17]: 2*s(3)+0
  with precondition: [V_y1>=1,V_y2>=1,V_y1+V_y2>=3] 

* Chain [16]...: 2*s(4)+0
  with precondition: [V_y1>=0,V_y2>=0,V_y1+V_y2>=1] 


Closed-form bounds of eval_foo_start(V_y1,V_y2,B): 
-------------------------------------
* Chain [20] with precondition: [V_y1=V_y2,V_y1>=0] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [19] with precondition: [0>=V_y1+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [18] with precondition: [0>=V_y2+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [17] with precondition: [V_y1>=1,V_y2>=1,V_y1+V_y2>=3] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [16]... with precondition: [V_y1>=0,V_y2>=0,V_y1+V_y2>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_foo_start(V_y1,V_y2,B): inf 
Asymptotic class: infinity 
* Total analysis performed in 34 ms.

