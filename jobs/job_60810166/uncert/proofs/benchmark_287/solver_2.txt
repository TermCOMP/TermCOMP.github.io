WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_foo_bb3_in/4,eval_foo_bb4_in/4]
1. recursive  : [eval_foo_bb5_in/4,eval_foo_bb6_in/4]
2. recursive  : [eval_foo_bb1_in/3,eval_foo_bb2_in/3,eval_foo_bb3_in_loop_cont/4,eval_foo_bb5_in_loop_cont/4]
3. non_recursive  : [eval_foo_stop/1]
4. non_recursive  : [eval_foo_bb7_in/1]
5. non_recursive  : [eval_foo_bb1_in_loop_cont/2]
6. non_recursive  : [eval_foo_bb0_in/3]
7. non_recursive  : [eval_foo_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_foo_bb3_in/4
1. SCC is partially evaluated into eval_foo_bb5_in/4
2. SCC is partially evaluated into eval_foo_bb1_in/3
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_foo_bb0_in/3
7. SCC is partially evaluated into eval_foo_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_foo_bb3_in/4 
* CE 8 is refined into CE [11] 
* CE 7 is refined into CE [12] 


### Cost equations --> "Loop" of eval_foo_bb3_in/4 
* CEs [12] --> Loop 11 
* CEs [11] --> Loop 12 

### Ranking functions of CR eval_foo_bb3_in(V__0,V__1,B,C) 
* RF of phase [11]: [V__1]

#### Partial ranking functions of CR eval_foo_bb3_in(V__0,V__1,B,C) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    V__1


### Specialization of cost equations eval_foo_bb5_in/4 
* CE 10 is refined into CE [13] 
* CE 9 is refined into CE [14] 


### Cost equations --> "Loop" of eval_foo_bb5_in/4 
* CEs [14] --> Loop 13 
* CEs [13] --> Loop 14 

### Ranking functions of CR eval_foo_bb5_in(V__01,V__12,B,C) 
* RF of phase [13]: [V__12]

#### Partial ranking functions of CR eval_foo_bb5_in(V__01,V__12,B,C) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    V__12


### Specialization of cost equations eval_foo_bb1_in/3 
* CE 5 is refined into CE [15] 
* CE 6 is refined into CE [16] 
* CE 4 is refined into CE [17] 
* CE 3 is refined into CE [18] 


### Cost equations --> "Loop" of eval_foo_bb1_in/3 
* CEs [18] --> Loop 15 
* CEs [17] --> Loop 16 
* CEs [15] --> Loop 17 
* CEs [16] --> Loop 18 

### Ranking functions of CR eval_foo_bb1_in(V__01,V__0,B) 

#### Partial ranking functions of CR eval_foo_bb1_in(V__01,V__0,B) 


### Specialization of cost equations eval_foo_bb0_in/3 
* CE 2 is refined into CE [19,20,21,22] 


### Cost equations --> "Loop" of eval_foo_bb0_in/3 
* CEs [21] --> Loop 19 
* CEs [22] --> Loop 20 
* CEs [19] --> Loop 21 
* CEs [20] --> Loop 22 

### Ranking functions of CR eval_foo_bb0_in(V_x,V_y,B) 

#### Partial ranking functions of CR eval_foo_bb0_in(V_x,V_y,B) 


### Specialization of cost equations eval_foo_start/3 
* CE 1 is refined into CE [23,24,25,26] 


### Cost equations --> "Loop" of eval_foo_start/3 
* CEs [26] --> Loop 23 
* CEs [25] --> Loop 24 
* CEs [24] --> Loop 25 
* CEs [23] --> Loop 26 

### Ranking functions of CR eval_foo_start(V_x,V_y,B) 

#### Partial ranking functions of CR eval_foo_start(V_x,V_y,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_foo_bb3_in(V__0,V__1,B,C):
* Chain [[11],12]: 1*it(11)+0
  Such that:it(11) =< V__1

  with precondition: [B=2,C=0,V__0>=2,V__1>=1,V__0>=V__1] 


#### Cost of chains of eval_foo_bb5_in(V__01,V__12,B,C):
* Chain [[13],14]: 1*it(13)+0
  Such that:it(13) =< V__12

  with precondition: [B=2,C=0,V__12>=1,V__01>=V__12] 


#### Cost of chains of eval_foo_bb1_in(V__01,V__0,B):
* Chain [18]: 0
  with precondition: [B=3,0>=V__01] 

* Chain [17]: 0
  with precondition: [B=3,0>=V__0] 

* Chain [16,18]: 1*s(1)+1
  Such that:s(1) =< V__01

  with precondition: [B=3,V__0>=1,V__01>=V__0] 

* Chain [15,17]: 1*s(2)+1
  Such that:s(2) =< V__0

  with precondition: [B=3,V__01>=1,V__0>=V__01+1] 


#### Cost of chains of eval_foo_bb0_in(V_x,V_y,B):
* Chain [22]: 0
  with precondition: [0>=V_x] 

* Chain [21]: 0
  with precondition: [0>=V_y] 

* Chain [20]: 1*s(3)+1
  Such that:s(3) =< V_y

  with precondition: [V_x>=1,V_y>=V_x] 

* Chain [19]: 1*s(4)+1
  Such that:s(4) =< V_x

  with precondition: [V_y>=1,V_x>=V_y+1] 


#### Cost of chains of eval_foo_start(V_x,V_y,B):
* Chain [26]: 0
  with precondition: [0>=V_x] 

* Chain [25]: 0
  with precondition: [0>=V_y] 

* Chain [24]: 1*s(5)+1
  Such that:s(5) =< V_y

  with precondition: [V_x>=1,V_y>=V_x] 

* Chain [23]: 1*s(6)+1
  Such that:s(6) =< V_x

  with precondition: [V_y>=1,V_x>=V_y+1] 


Closed-form bounds of eval_foo_start(V_x,V_y,B): 
-------------------------------------
* Chain [26] with precondition: [0>=V_x] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [25] with precondition: [0>=V_y] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [24] with precondition: [V_x>=1,V_y>=V_x] 
    - Upper bound: V_y+1 
    - Complexity: n 
* Chain [23] with precondition: [V_y>=1,V_x>=V_y+1] 
    - Upper bound: V_x+1 
    - Complexity: n 

### Maximum cost of eval_foo_start(V_x,V_y,B): max([nat(V_x)+1,nat(V_y)+1]) 
Asymptotic class: n 
* Total analysis performed in 57 ms.

