MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_f_4/5,eval_f_5/6,eval_f_7/5,eval_f_8/6,eval_f_bb1_in/4,eval_f_bb2_in/4,eval_f_bb3_in/4,eval_f_bb4_in/4]
1. recursive  : [eval_f_bb5_in/4,eval_f_bb6_in/4]
2. recursive  : [eval_f_bb7_in/2,eval_f_bb8_in/2]
3. non_recursive  : [eval_f_stop/1]
4. non_recursive  : [eval_f_bb9_in/1]
5. non_recursive  : [eval_f_bb7_in_loop_cont/2]
6. non_recursive  : [eval_f_bb5_in_loop_cont/3]
7. non_recursive  : [eval_f_bb1_in_loop_cont/4]
8. non_recursive  : [eval_f_2/6]
9. non_recursive  : [eval_f_1/5]
10. non_recursive  : [eval_f_0/4]
11. non_recursive  : [eval_f_bb0_in/4]
12. non_recursive  : [eval_f_start/8]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_f_bb1_in/4
1. SCC is partially evaluated into eval_f_bb5_in/4
2. SCC is partially evaluated into eval_f_bb7_in/2
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_f_bb5_in_loop_cont/3
7. SCC is partially evaluated into eval_f_bb1_in_loop_cont/4
8. SCC is partially evaluated into eval_f_2/6
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_f_start/8

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_f_bb1_in/4 
* CE 10 is refined into CE [19] 
* CE 11 is refined into CE [20] 
* CE 3 is refined into CE [21] 
* CE 8 is refined into CE [22] 
* CE 7 is refined into CE [23] 
* CE 9 is refined into CE [24] 
* CE 4 is refined into CE [25] 
* CE 5 is refined into CE [26] 
* CE 6 is refined into CE [27] 


### Cost equations --> "Loop" of eval_f_bb1_in/4 
* CEs [21] --> Loop 19 
* CEs [22] --> Loop 20 
* CEs [23] --> Loop 21 
* CEs [24] --> Loop 22 
* CEs [25] --> Loop 23 
* CEs [26] --> Loop 24 
* CEs [27] --> Loop 25 
* CEs [19] --> Loop 26 
* CEs [20] --> Loop 27 

### Ranking functions of CR eval_f_bb1_in(V__03,V__01,V__0,B) 

#### Partial ranking functions of CR eval_f_bb1_in(V__03,V__01,V__0,B) 
* Partial RF of phase [26,27]:
  - RF of loop [26:1]:
    V__01-1
  - RF of loop [27:1]:
    -V__0+4


### Specialization of cost equations eval_f_bb5_in/4 
* CE 14 is refined into CE [28] 
* CE 15 is refined into CE [29] 
* CE 13 is refined into CE [30] 


### Cost equations --> "Loop" of eval_f_bb5_in/4 
* CEs [30] --> Loop 28 
* CEs [28] --> Loop 29 
* CEs [29] --> Loop 30 

### Ranking functions of CR eval_f_bb5_in(V__06,V__05,B,C) 

#### Partial ranking functions of CR eval_f_bb5_in(V__06,V__05,B,C) 


### Specialization of cost equations eval_f_bb7_in/2 
* CE 18 is refined into CE [31] 
* CE 17 is refined into CE [32] 


### Cost equations --> "Loop" of eval_f_bb7_in/2 
* CEs [32] --> Loop 31 
* CEs [31] --> Loop 32 

### Ranking functions of CR eval_f_bb7_in(V__17,B) 
* RF of phase [31]: [V__17]

#### Partial ranking functions of CR eval_f_bb7_in(V__17,B) 
* Partial RF of phase [31]:
  - RF of loop [31:1]:
    V__17


### Specialization of cost equations eval_f_bb5_in_loop_cont/3 
* CE 16 is refined into CE [33,34] 


### Cost equations --> "Loop" of eval_f_bb5_in_loop_cont/3 
* CEs [34] --> Loop 33 
* CEs [33] --> Loop 34 

### Ranking functions of CR eval_f_bb5_in_loop_cont(A,B,C) 

#### Partial ranking functions of CR eval_f_bb5_in_loop_cont(A,B,C) 


### Specialization of cost equations eval_f_bb1_in_loop_cont/4 
* CE 12 is refined into CE [35,36,37,38,39,40] 


### Cost equations --> "Loop" of eval_f_bb1_in_loop_cont/4 
* CEs [39,40] --> Loop 35 
* CEs [37] --> Loop 36 
* CEs [38] --> Loop 37 
* CEs [36] --> Loop 38 
* CEs [35] --> Loop 39 

### Ranking functions of CR eval_f_bb1_in_loop_cont(A,B,C,D) 

#### Partial ranking functions of CR eval_f_bb1_in_loop_cont(A,B,C,D) 


### Specialization of cost equations eval_f_2/6 
* CE 2 is refined into CE [41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85] 


### Cost equations --> "Loop" of eval_f_2/6 
* CEs [85] --> Loop 40 
* CEs [65] --> Loop 41 
* CEs [60] --> Loop 42 
* CEs [50] --> Loop 43 
* CEs [55] --> Loop 44 
* CEs [75] --> Loop 45 
* CEs [80] --> Loop 46 
* CEs [70] --> Loop 47 
* CEs [45] --> Loop 48 
* CEs [83] --> Loop 49 
* CEs [84] --> Loop 50 
* CEs [63] --> Loop 51 
* CEs [64] --> Loop 52 
* CEs [58] --> Loop 53 
* CEs [59] --> Loop 54 
* CEs [48] --> Loop 55 
* CEs [49] --> Loop 56 
* CEs [53] --> Loop 57 
* CEs [54] --> Loop 58 
* CEs [82] --> Loop 59 
* CEs [81] --> Loop 60 
* CEs [62] --> Loop 61 
* CEs [61] --> Loop 62 
* CEs [57] --> Loop 63 
* CEs [56] --> Loop 64 
* CEs [47] --> Loop 65 
* CEs [46] --> Loop 66 
* CEs [52] --> Loop 67 
* CEs [51] --> Loop 68 
* CEs [73] --> Loop 69 
* CEs [74] --> Loop 70 
* CEs [78] --> Loop 71 
* CEs [79] --> Loop 72 
* CEs [68] --> Loop 73 
* CEs [69] --> Loop 74 
* CEs [72] --> Loop 75 
* CEs [71] --> Loop 76 
* CEs [77] --> Loop 77 
* CEs [76] --> Loop 78 
* CEs [67] --> Loop 79 
* CEs [66] --> Loop 80 
* CEs [43] --> Loop 81 
* CEs [44] --> Loop 82 
* CEs [42] --> Loop 83 
* CEs [41] --> Loop 84 

### Ranking functions of CR eval_f_2(V_x2,V_y1,V_y2,V_0,V_1,B) 

#### Partial ranking functions of CR eval_f_2(V_x2,V_y1,V_y2,V_0,V_1,B) 


### Specialization of cost equations eval_f_start/8 
* CE 1 is refined into CE [86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130] 


### Cost equations --> "Loop" of eval_f_start/8 
* CEs [126,127,128,129,130] --> Loop 85 
* CEs [122] --> Loop 86 
* CEs [123,124,125] --> Loop 87 
* CEs [113,115,117,119,121] --> Loop 88 
* CEs [112,114,116,118,120] --> Loop 89 
* CEs [89] --> Loop 90 
* CEs [88] --> Loop 91 
* CEs [103,105,107,109,111] --> Loop 92 
* CEs [87] --> Loop 93 
* CEs [86] --> Loop 94 
* CEs [102,104,106,108,110] --> Loop 95 
* CEs [97,99,101] --> Loop 96 
* CEs [96,98,100] --> Loop 97 
* CEs [91,93,95] --> Loop 98 
* CEs [90,92,94] --> Loop 99 

### Ranking functions of CR eval_f_start(V_x1,V_x2,V_x3,V_x4,V_y1,V_y2,V_f,B) 

#### Partial ranking functions of CR eval_f_start(V_x1,V_x2,V_x3,V_x4,V_y1,V_y2,V_f,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_f_bb1_in(V__03,V__01,V__0,B):
* Chain [[26,27],25]: 1*it(26)+1*it(27)+0
  Such that:it(26) =< V__01
it(27) =< -V__0

  with precondition: [V__03=1,B=4,0>=V__0,V__01>=2] 

* Chain [[26,27],24]: 1*it(26)+1*it(27)+0
  Such that:it(26) =< V__01
it(27) =< -V__0+4

  with precondition: [B=4,1>=V__03,V__03>=0] 

* Chain [[26,27],23]: 1*it(26)+1*it(27)+0
  Such that:it(26) =< V__01
it(27) =< -V__0+4

  with precondition: [B=4,1>=V__03,V__03>=0] 

* Chain [[26,27],22]: 1*it(26)+1*it(27)+0
  Such that:it(26) =< V__01
it(27) =< -V__0

  with precondition: [V__03=1,B=4,0>=V__0,V__01>=2] 

* Chain [[26,27],21]: 1*it(26)+1*it(27)+0
  Such that:it(26) =< V__01
it(27) =< -V__0+4

  with precondition: [B=4,1>=V__03,V__03>=0] 

* Chain [[26,27],20]: 1*it(26)+1*it(27)+0
  Such that:it(26) =< V__01
it(27) =< -V__0+4

  with precondition: [B=4,1>=V__03,V__03>=0] 

* Chain [[26,27],19]: 1*it(26)+1*it(27)+0
  Such that:it(26) =< V__01
it(27) =< -V__0+4

  with precondition: [B=4,1>=V__03,V__03>=0] 

* Chain [25]: 0
  with precondition: [B=4,0>=V__03,0>=V__0] 

* Chain [24]: 0
  with precondition: [B=4,0>=V__03,V__0>=4] 

* Chain [23]: 0
  with precondition: [B=4,0>=V__03+1] 

* Chain [22]: 0
  with precondition: [B=4,1>=V__01,0>=V__0] 

* Chain [21]: 0
  with precondition: [B=4,1>=V__01,V__03>=1] 

* Chain [20]: 0
  with precondition: [B=4,1>=V__01,V__0>=4] 

* Chain [19]: 0
  with precondition: [B=4,V__03>=2] 


#### Cost of chains of eval_f_bb5_in(V__06,V__05,B,C):
* Chain [[28]]...: 1*it(28)+0
  with precondition: [V__05>=V__06+1,V__06>=1] 

* Chain [[28],29]: 1*it(28)+0
  with precondition: [B=3,V__06>=1,C>=3*V__06,V__05>=V__06+1,C+3*V__06>=12,C+9*V__06>=8*V__05] 

* Chain [30]: 0
  with precondition: [B=3,V__06=C,0>=V__06] 

* Chain [29]: 0
  with precondition: [B=3,V__06=C,V__06>=V__05] 


#### Cost of chains of eval_f_bb7_in(V__17,B):
* Chain [[31],32]: 1*it(31)+0
  Such that:it(31) =< V__17

  with precondition: [B=2,V__17>=1] 

* Chain [32]: 0
  with precondition: [B=2,0>=V__17] 


#### Cost of chains of eval_f_bb5_in_loop_cont(A,B,C):
* Chain [34]: 0
  with precondition: [A=3,0>=B] 

* Chain [33]: 1*s(15)+0
  Such that:s(15) =< B

  with precondition: [A=3,B>=1] 


#### Cost of chains of eval_f_bb1_in_loop_cont(A,B,C,D):
* Chain [39]: 0
  with precondition: [A=4,0>=B] 

* Chain [38]: 0
  with precondition: [A=4,0>=B,B>=C] 

* Chain [37]: 2*s(16)+0
  with precondition: [A=4,B>=1,C>=B+1] 

* Chain [36]: 1*s(18)+0
  Such that:s(18) =< B

  with precondition: [A=4,B>=1,B>=C] 

* Chain [35]...: 1*aux(5)+0
  with precondition: [A=4,B>=1,C>=B+1] 


#### Cost of chains of eval_f_2(V_x2,V_y1,V_y2,V_0,V_1,B):
* Chain [84]: 2*s(24)+2*s(25)+0
  Such that:s(22) =< V_x2
s(23) =< -V_0
s(24) =< s(22)
s(25) =< s(23)

  with precondition: [V_1=1,0>=V_y2,0>=V_0,V_x2>=2] 

* Chain [83]: 2*s(28)+2*s(29)+0
  Such that:s(26) =< V_x2
s(27) =< -V_0
s(28) =< s(26)
s(29) =< s(27)

  with precondition: [V_1=1,0>=V_y2,0>=V_0,V_x2>=2,V_y2>=V_y1] 

* Chain [82]: 2*s(32)+2*s(33)+1*s(34)+0
  Such that:s(30) =< V_x2
s(34) =< V_y2
s(31) =< -V_0
s(32) =< s(30)
s(33) =< s(31)

  with precondition: [V_1=1,0>=V_0,V_x2>=2,V_y2>=1,V_y2>=V_y1] 

* Chain [81]: 2*s(37)+2*s(38)+2*s(39)+0
  Such that:s(35) =< V_x2
s(36) =< -V_0
s(37) =< s(35)
s(38) =< s(36)

  with precondition: [V_1=1,0>=V_0,V_x2>=2,V_y2>=1,V_y1>=V_y2+1] 

* Chain [80]: 0
  with precondition: [1>=V_x2,0>=V_y2,0>=V_0] 

* Chain [79]: 0
  with precondition: [1>=V_x2,0>=V_y2,0>=V_0,V_y2>=V_y1] 

* Chain [78]: 0
  with precondition: [1>=V_x2,0>=V_y2,V_0>=4] 

* Chain [77]: 0
  with precondition: [1>=V_x2,0>=V_y2,V_0>=4,V_y2>=V_y1] 

* Chain [76]: 0
  with precondition: [1>=V_x2,0>=V_y2,V_1>=1] 

* Chain [75]: 0
  with precondition: [1>=V_x2,0>=V_y2,V_1>=1,V_y2>=V_y1] 

* Chain [74]: 1*s(40)+0
  Such that:s(40) =< V_y2

  with precondition: [1>=V_x2,0>=V_0,V_y2>=1,V_y2>=V_y1] 

* Chain [73]: 2*s(41)+0
  with precondition: [1>=V_x2,0>=V_0,V_y2>=1,V_y1>=V_y2+1] 

* Chain [72]: 1*s(42)+0
  Such that:s(42) =< V_y2

  with precondition: [1>=V_x2,V_y2>=1,V_0>=4,V_y2>=V_y1] 

* Chain [71]: 2*s(43)+0
  with precondition: [1>=V_x2,V_y2>=1,V_0>=4,V_y1>=V_y2+1] 

* Chain [70]: 1*s(44)+0
  Such that:s(44) =< V_y2

  with precondition: [1>=V_x2,V_y2>=1,V_1>=1,V_y2>=V_y1] 

* Chain [69]: 2*s(45)+0
  with precondition: [1>=V_x2,V_y2>=1,V_1>=1,V_y1>=V_y2+1] 

* Chain [68]: 0
  with precondition: [0>=V_y2,0>=V_0,0>=V_1] 

* Chain [67]: 0
  with precondition: [0>=V_y2,0>=V_0,0>=V_1,V_y2>=V_y1] 

* Chain [66]: 5*s(48)+5*s(49)+0
  Such that:s(46) =< V_x2
s(47) =< -V_0+4
s(48) =< s(46)
s(49) =< s(47)

  with precondition: [0>=V_y2,1>=V_1,V_1>=0] 

* Chain [65]: 5*s(52)+5*s(53)+0
  Such that:s(50) =< V_x2
s(51) =< -V_0+4
s(52) =< s(50)
s(53) =< s(51)

  with precondition: [0>=V_y2,1>=V_1,V_1>=0,V_y2>=V_y1] 

* Chain [64]: 0
  with precondition: [0>=V_y2,0>=V_1,V_0>=4] 

* Chain [63]: 0
  with precondition: [0>=V_y2,0>=V_1,V_0>=4,V_y2>=V_y1] 

* Chain [62]: 0
  with precondition: [0>=V_y2,0>=V_1+1] 

* Chain [61]: 0
  with precondition: [0>=V_y2,0>=V_1+1,V_y2>=V_y1] 

* Chain [60]: 0
  with precondition: [0>=V_y2,V_1>=2] 

* Chain [59]: 0
  with precondition: [0>=V_y2,V_1>=2,V_y2>=V_y1] 

* Chain [58]: 1*s(54)+0
  Such that:s(54) =< V_y2

  with precondition: [0>=V_0,0>=V_1,V_y2>=1,V_y2>=V_y1] 

* Chain [57]: 2*s(55)+0
  with precondition: [0>=V_0,0>=V_1,V_y2>=1,V_y1>=V_y2+1] 

* Chain [56]: 5*s(58)+5*s(59)+1*s(60)+0
  Such that:s(56) =< V_x2
s(60) =< V_y2
s(57) =< -V_0+4
s(58) =< s(56)
s(59) =< s(57)

  with precondition: [1>=V_1,V_y2>=1,V_1>=0,V_y2>=V_y1] 

* Chain [55]: 5*s(63)+5*s(64)+2*s(65)+0
  Such that:s(61) =< V_x2
s(62) =< -V_0+4
s(63) =< s(61)
s(64) =< s(62)

  with precondition: [1>=V_1,V_y2>=1,V_1>=0,V_y1>=V_y2+1] 

* Chain [54]: 1*s(66)+0
  Such that:s(66) =< V_y2

  with precondition: [0>=V_1,V_y2>=1,V_0>=4,V_y2>=V_y1] 

* Chain [53]: 2*s(67)+0
  with precondition: [0>=V_1,V_y2>=1,V_0>=4,V_y1>=V_y2+1] 

* Chain [52]: 1*s(68)+0
  Such that:s(68) =< V_y2

  with precondition: [0>=V_1+1,V_y2>=1,V_y2>=V_y1] 

* Chain [51]: 2*s(69)+0
  with precondition: [0>=V_1+1,V_y2>=1,V_y1>=V_y2+1] 

* Chain [50]: 1*s(70)+0
  Such that:s(70) =< V_y2

  with precondition: [V_y2>=1,V_1>=2,V_y2>=V_y1] 

* Chain [49]: 2*s(71)+0
  with precondition: [V_y2>=1,V_1>=2,V_y1>=V_y2+1] 

* Chain [48]...: 2*s(74)+2*s(75)+1*s(76)+0
  Such that:s(72) =< V_x2
s(73) =< -V_0
s(74) =< s(72)
s(75) =< s(73)

  with precondition: [V_1=1,0>=V_0,V_x2>=2,V_y2>=1,V_y1>=V_y2+1] 

* Chain [47]...: 1*s(77)+0
  with precondition: [1>=V_x2,0>=V_0,V_y2>=1,V_y1>=V_y2+1] 

* Chain [46]...: 1*s(78)+0
  with precondition: [1>=V_x2,V_y2>=1,V_0>=4,V_y1>=V_y2+1] 

* Chain [45]...: 1*s(79)+0
  with precondition: [1>=V_x2,V_y2>=1,V_1>=1,V_y1>=V_y2+1] 

* Chain [44]...: 1*s(80)+0
  with precondition: [0>=V_0,0>=V_1,V_y2>=1,V_y1>=V_y2+1] 

* Chain [43]...: 5*s(83)+5*s(84)+1*s(85)+0
  Such that:s(81) =< V_x2
s(82) =< -V_0+4
s(83) =< s(81)
s(84) =< s(82)

  with precondition: [1>=V_1,V_y2>=1,V_1>=0,V_y1>=V_y2+1] 

* Chain [42]...: 1*s(86)+0
  with precondition: [0>=V_1,V_y2>=1,V_0>=4,V_y1>=V_y2+1] 

* Chain [41]...: 1*s(87)+0
  with precondition: [0>=V_1+1,V_y2>=1,V_y1>=V_y2+1] 

* Chain [40]...: 1*s(88)+0
  with precondition: [V_y2>=1,V_1>=2,V_y1>=V_y2+1] 


#### Cost of chains of eval_f_start(V_x1,V_x2,V_x3,V_x4,V_y1,V_y2,V_f,B):
* Chain [99]: 0
  with precondition: [1>=V_x2,0>=V_y2] 

* Chain [98]: 0
  with precondition: [1>=V_x2,0>=V_y2,V_y2>=V_y1] 

* Chain [97]: 3*s(89)+0
  Such that:aux(6) =< V_y2
s(89) =< aux(6)

  with precondition: [1>=V_x2,V_y2>=1,V_y2>=V_y1] 

* Chain [96]: 1*aux(7)+0
  with precondition: [1>=V_x2,V_y2>=1,V_y1>=V_y2+1] 

* Chain [95]: 5*s(97)+5*s(98)+0
  Such that:s(95) =< V_x2
s(97) =< s(95)

  with precondition: [0>=V_y2] 

* Chain [94]: 2*s(101)+2*s(102)+0
  Such that:s(99) =< V_x2
s(101) =< s(99)

  with precondition: [0>=V_y2,V_x2>=2] 

* Chain [93]: 2*s(105)+2*s(106)+0
  Such that:s(103) =< V_x2
s(105) =< s(103)

  with precondition: [0>=V_y2,V_x2>=2,V_y2>=V_y1] 

* Chain [92]: 5*s(109)+5*s(110)+0
  Such that:s(107) =< V_x2
s(109) =< s(107)

  with precondition: [0>=V_y2,V_y2>=V_y1] 

* Chain [91]: 1*s(112)+2*s(114)+2*s(115)+0
  Such that:s(111) =< V_x2
s(112) =< V_y2
s(114) =< s(111)

  with precondition: [V_x2>=2,V_y2>=1,V_y2>=V_y1] 

* Chain [90]: 2*s(118)+2*s(119)+2*s(120)+0
  Such that:s(116) =< V_x2
s(118) =< s(116)

  with precondition: [V_x2>=2,V_y2>=1,V_y1>=V_y2+1] 

* Chain [89]: 5*s(121)+5*s(125)+5*s(126)+0
  Such that:s(122) =< V_x2
aux(8) =< V_y2
s(121) =< aux(8)
s(125) =< s(122)

  with precondition: [V_y2>=1,V_y2>=V_y1] 

* Chain [88]: 15*s(130)+5*s(133)+0
  Such that:s(131) =< V_x2
s(133) =< s(131)

  with precondition: [V_y2>=1,V_y1>=V_y2+1] 

* Chain [87]...: 1*aux(9)+0
  with precondition: [1>=V_x2,V_y2>=1,V_y1>=V_y2+1] 

* Chain [86]...: 2*s(144)+2*s(145)+1*s(146)+0
  Such that:s(142) =< V_x2
s(144) =< s(142)

  with precondition: [V_x2>=2,V_y2>=1,V_y1>=V_y2+1] 

* Chain [85]...: 10*s(147)+5*s(150)+0
  Such that:s(148) =< V_x2
s(150) =< s(148)

  with precondition: [V_y2>=1,V_y1>=V_y2+1] 


Closed-form bounds of eval_f_start(V_x1,V_x2,V_x3,V_x4,V_y1,V_y2,V_f,B): 
-------------------------------------
* Chain [99] with precondition: [1>=V_x2,0>=V_y2] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [98] with precondition: [1>=V_x2,0>=V_y2,V_y2>=V_y1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [97] with precondition: [1>=V_x2,V_y2>=1,V_y2>=V_y1] 
    - Upper bound: 3*V_y2 
    - Complexity: n 
* Chain [96] with precondition: [1>=V_x2,V_y2>=1,V_y1>=V_y2+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [95] with precondition: [0>=V_y2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [94] with precondition: [0>=V_y2,V_x2>=2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [93] with precondition: [0>=V_y2,V_x2>=2,V_y2>=V_y1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [92] with precondition: [0>=V_y2,V_y2>=V_y1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [91] with precondition: [V_x2>=2,V_y2>=1,V_y2>=V_y1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [90] with precondition: [V_x2>=2,V_y2>=1,V_y1>=V_y2+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [89] with precondition: [V_y2>=1,V_y2>=V_y1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [88] with precondition: [V_y2>=1,V_y1>=V_y2+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [87]... with precondition: [1>=V_x2,V_y2>=1,V_y1>=V_y2+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [86]... with precondition: [V_x2>=2,V_y2>=1,V_y1>=V_y2+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [85]... with precondition: [V_y2>=1,V_y1>=V_y2+1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_f_start(V_x1,V_x2,V_x3,V_x4,V_y1,V_y2,V_f,B): inf 
Asymptotic class: infinity 
* Total analysis performed in 196 ms.

