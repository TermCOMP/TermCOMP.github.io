WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_speed_pldi10_ex1_2/5,eval_speed_pldi10_ex1_3/6,eval_speed_pldi10_ex1_bb3_in/5,eval_speed_pldi10_ex1_bb4_in/5,eval_speed_pldi10_ex1_bb5_in/6,eval_speed_pldi10_ex1_bb6_in/8]
1. recursive  : [eval_speed_pldi10_ex1_bb1_in/3,eval_speed_pldi10_ex1_bb2_in/3,eval_speed_pldi10_ex1_bb3_in_loop_cont/6,eval_speed_pldi10_ex1_bb7_in/5]
2. non_recursive  : [eval_speed_pldi10_ex1_stop/1]
3. non_recursive  : [eval_speed_pldi10_ex1_bb8_in/1]
4. non_recursive  : [eval_speed_pldi10_ex1_bb1_in_loop_cont/2]
5. non_recursive  : [eval_speed_pldi10_ex1_bb0_in/2]
6. non_recursive  : [eval_speed_pldi10_ex1_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_speed_pldi10_ex1_bb3_in/5
1. SCC is partially evaluated into eval_speed_pldi10_ex1_bb1_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_speed_pldi10_ex1_bb0_in/2
6. SCC is partially evaluated into eval_speed_pldi10_ex1_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_speed_pldi10_ex1_bb3_in/5 
* CE 7 is refined into CE [8] 
* CE 6 is refined into CE [9] 
* CE 5 is refined into CE [10] 


### Cost equations --> "Loop" of eval_speed_pldi10_ex1_bb3_in/5 
* CEs [9] --> Loop 8 
* CEs [10] --> Loop 9 
* CEs [8] --> Loop 10 

### Ranking functions of CR eval_speed_pldi10_ex1_bb3_in(V_j_0,V__1,B,C,D) 
* RF of phase [8,9]: [-V_j_0+V__1]

#### Partial ranking functions of CR eval_speed_pldi10_ex1_bb3_in(V_j_0,V__1,B,C,D) 
* Partial RF of phase [8,9]:
  - RF of loop [8:1]:
    V__1-1
  - RF of loop [8:1,9:1]:
    -V_j_0+V__1


### Specialization of cost equations eval_speed_pldi10_ex1_bb1_in/3 
* CE 4 is refined into CE [11] 
* CE 3 is refined into CE [12,13] 


### Cost equations --> "Loop" of eval_speed_pldi10_ex1_bb1_in/3 
* CEs [13] --> Loop 11 
* CEs [12] --> Loop 12 
* CEs [11] --> Loop 13 

### Ranking functions of CR eval_speed_pldi10_ex1_bb1_in(V_i_0,V__0,B) 
* RF of phase [11]: [-V_i_0+V__0-1]

#### Partial ranking functions of CR eval_speed_pldi10_ex1_bb1_in(V_i_0,V__0,B) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    -V_i_0+V__0-1


### Specialization of cost equations eval_speed_pldi10_ex1_bb0_in/2 
* CE 2 is refined into CE [14,15,16] 


### Cost equations --> "Loop" of eval_speed_pldi10_ex1_bb0_in/2 
* CEs [15] --> Loop 14 
* CEs [16] --> Loop 15 
* CEs [14] --> Loop 16 

### Ranking functions of CR eval_speed_pldi10_ex1_bb0_in(V_n,B) 

#### Partial ranking functions of CR eval_speed_pldi10_ex1_bb0_in(V_n,B) 


### Specialization of cost equations eval_speed_pldi10_ex1_start/2 
* CE 1 is refined into CE [17,18,19] 


### Cost equations --> "Loop" of eval_speed_pldi10_ex1_start/2 
* CEs [19] --> Loop 17 
* CEs [18] --> Loop 18 
* CEs [17] --> Loop 19 

### Ranking functions of CR eval_speed_pldi10_ex1_start(V_n,B) 

#### Partial ranking functions of CR eval_speed_pldi10_ex1_start(V_n,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_speed_pldi10_ex1_bb3_in(V_j_0,V__1,B,C,D):
* Chain [[8,9],10]: 1*it(8)+1*it(9)+0
  Such that:it(8) =< V__1-D
aux(3) =< -V_j_0+V__1
it(8) =< aux(3)
it(9) =< aux(3)

  with precondition: [B=2,C=D,V_j_0>=1,V__1>=V_j_0+1,C>=V_j_0,V__1>=C] 

* Chain [10]: 0
  with precondition: [B=2,V__1=V_j_0,V__1=C,V__1=D,V__1>=1] 


#### Cost of chains of eval_speed_pldi10_ex1_bb1_in(V_i_0,V__0,B):
* Chain [[11],13]: 1*it(11)+1*s(7)+1*s(8)+0
  Such that:aux(7) =< V__0
aux(8) =< -V_i_0+V__0
s(7) =< aux(8)
aux(4) =< aux(8)
it(11) =< aux(8)
aux(4) =< aux(7)
s(7) =< aux(7)
s(9) =< it(11)*aux(4)
s(7) =< s(9)
s(8) =< s(9)

  with precondition: [B=3,V_i_0>=0,V__0>=V_i_0+2] 

* Chain [[11],12,13]: 1*it(11)+1*s(7)+1*s(8)+1
  Such that:aux(7) =< V__0
aux(9) =< -V_i_0+V__0
s(7) =< aux(9)
aux(4) =< aux(9)
it(11) =< aux(9)
aux(4) =< aux(7)
s(7) =< aux(7)
s(9) =< it(11)*aux(4)
s(7) =< s(9)
s(8) =< s(9)

  with precondition: [B=3,V_i_0>=0,V__0>=V_i_0+2] 

* Chain [13]: 0
  with precondition: [B=3,V_i_0>=0,V_i_0>=V__0] 

* Chain [12,13]: 1
  with precondition: [B=3,V__0=V_i_0+1,V__0>=1] 


#### Cost of chains of eval_speed_pldi10_ex1_bb0_in(V_n,B):
* Chain [16]: 1
  with precondition: [V_n=1] 

* Chain [15]: 0
  with precondition: [0>=V_n] 

* Chain [14]: 2*s(26)+2*s(28)+2*s(30)+1
  Such that:aux(12) =< V_n
s(26) =< aux(12)
s(28) =< aux(12)
s(29) =< s(28)*aux(12)
s(26) =< s(29)
s(30) =< s(29)

  with precondition: [V_n>=2] 


#### Cost of chains of eval_speed_pldi10_ex1_start(V_n,B):
* Chain [19]: 1
  with precondition: [V_n=1] 

* Chain [18]: 0
  with precondition: [0>=V_n] 

* Chain [17]: 2*s(32)+2*s(33)+2*s(35)+1
  Such that:s(31) =< V_n
s(32) =< s(31)
s(33) =< s(31)
s(34) =< s(33)*s(31)
s(32) =< s(34)
s(35) =< s(34)

  with precondition: [V_n>=2] 


Closed-form bounds of eval_speed_pldi10_ex1_start(V_n,B): 
-------------------------------------
* Chain [19] with precondition: [V_n=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [18] with precondition: [0>=V_n] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [17] with precondition: [V_n>=2] 
    - Upper bound: 4*V_n+1+2*V_n*V_n 
    - Complexity: n^2 

### Maximum cost of eval_speed_pldi10_ex1_start(V_n,B): max([1,nat(V_n)*4+1+nat(V_n)*2*nat(V_n)]) 
Asymptotic class: n^2 
* Total analysis performed in 73 ms.

