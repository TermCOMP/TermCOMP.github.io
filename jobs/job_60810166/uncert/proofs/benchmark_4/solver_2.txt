MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_amir13_bb3_in/8,eval_amir13_bb4_in/8]
1. recursive  : [eval_amir13_bb2_in/12,eval_amir13_bb3_in_loop_cont/16,eval_amir13_bb5_in/15]
2. recursive  : [eval_amir13_bb1_in/7,eval_amir13_bb2_in_loop_cont/14,eval_amir13_bb6_in/13]
3. recursive  : [eval_amir13_bb7_in/2,eval_amir13_bb8_in/2]
4. non_recursive  : [eval_amir13_stop/1]
5. non_recursive  : [eval_amir13_bb9_in/1]
6. non_recursive  : [eval_amir13_bb7_in_loop_cont/2]
7. non_recursive  : [eval_amir13_bb1_in_loop_cont/3]
8. non_recursive  : [eval_amir13_bb0_in/3]
9. non_recursive  : [eval_amir13_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_amir13_bb3_in/8
1. SCC is partially evaluated into eval_amir13_bb2_in/12
2. SCC is partially evaluated into eval_amir13_bb1_in/7
3. SCC is partially evaluated into eval_amir13_bb7_in/2
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_amir13_bb1_in_loop_cont/3
8. SCC is partially evaluated into eval_amir13_bb0_in/3
9. SCC is partially evaluated into eval_amir13_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_amir13_bb3_in/8 
* CE 11 is refined into CE [12] 
* CE 10 is refined into CE [13] 


### Cost equations --> "Loop" of eval_amir13_bb3_in/8 
* CEs [13] --> Loop 12 
* CEs [12] --> Loop 13 

### Ranking functions of CR eval_amir13_bb3_in(V__1,V_x2_2,V_x1_2,V_i_1,B,C,D,E) 
* RF of phase [12]: [V__1-V_i_1]

#### Partial ranking functions of CR eval_amir13_bb3_in(V__1,V_x2_2,V_x1_2,V_i_1,B,C,D,E) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V__1-V_i_1


### Specialization of cost equations eval_amir13_bb2_in/12 
* CE 7 is refined into CE [14] 
* CE 6 is refined into CE [15,16] 


### Cost equations --> "Loop" of eval_amir13_bb2_in/12 
* CEs [16] --> Loop 14 
* CEs [15] --> Loop 15 
* CEs [14] --> Loop 16 

### Ranking functions of CR eval_amir13_bb2_in(V_0,V_x5_1,V_x2_1,V_x1_1,V_i_0,V__1,B,C,D,E,F,G) 

#### Partial ranking functions of CR eval_amir13_bb2_in(V_0,V_x5_1,V_x2_1,V_x1_1,V_i_0,V__1,B,C,D,E,F,G) 


### Specialization of cost equations eval_amir13_bb1_in/7 
* CE 4 is refined into CE [17] 
* CE 3 is refined into CE [18,19,20] 


### Cost equations --> "Loop" of eval_amir13_bb1_in/7 
* CEs [20] --> Loop 17 
* CEs [19] --> Loop 18 
* CEs [18] --> Loop 19 
* CEs [17] --> Loop 20 

### Ranking functions of CR eval_amir13_bb1_in(V_x5_0,V_x2_0,V_x1_0,V__01,V__0,B,C) 
* RF of phase [17,18]: [V__01-1]

#### Partial ranking functions of CR eval_amir13_bb1_in(V_x5_0,V_x2_0,V_x1_0,V__01,V__0,B,C) 
* Partial RF of phase [17,18]:
  - RF of loop [17:1,18:1]:
    V__01-1


### Specialization of cost equations eval_amir13_bb7_in/2 
* CE 9 is refined into CE [21] 
* CE 8 is refined into CE [22] 


### Cost equations --> "Loop" of eval_amir13_bb7_in/2 
* CEs [22] --> Loop 21 
* CEs [21] --> Loop 22 

### Ranking functions of CR eval_amir13_bb7_in(V__2,B) 
* RF of phase [21]: [V__2]

#### Partial ranking functions of CR eval_amir13_bb7_in(V__2,B) 
* Partial RF of phase [21]:
  - RF of loop [21:1]:
    V__2


### Specialization of cost equations eval_amir13_bb1_in_loop_cont/3 
* CE 5 is refined into CE [23,24] 


### Cost equations --> "Loop" of eval_amir13_bb1_in_loop_cont/3 
* CEs [24] --> Loop 23 
* CEs [23] --> Loop 24 

### Ranking functions of CR eval_amir13_bb1_in_loop_cont(A,B,C) 

#### Partial ranking functions of CR eval_amir13_bb1_in_loop_cont(A,B,C) 


### Specialization of cost equations eval_amir13_bb0_in/3 
* CE 2 is refined into CE [25,26,27,28,29,30] 


### Cost equations --> "Loop" of eval_amir13_bb0_in/3 
* CEs [29,30] --> Loop 25 
* CEs [28] --> Loop 26 
* CEs [27] --> Loop 27 
* CEs [26] --> Loop 28 
* CEs [25] --> Loop 29 

### Ranking functions of CR eval_amir13_bb0_in(V_x3,V_x7,B) 

#### Partial ranking functions of CR eval_amir13_bb0_in(V_x3,V_x7,B) 


### Specialization of cost equations eval_amir13_start/3 
* CE 1 is refined into CE [31,32,33,34,35] 


### Cost equations --> "Loop" of eval_amir13_start/3 
* CEs [35] --> Loop 30 
* CEs [34] --> Loop 31 
* CEs [33] --> Loop 32 
* CEs [32] --> Loop 33 
* CEs [31] --> Loop 34 

### Ranking functions of CR eval_amir13_start(V_x3,V_x7,B) 

#### Partial ranking functions of CR eval_amir13_start(V_x3,V_x7,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_amir13_bb3_in(V__1,V_x2_2,V_x1_2,V_i_1,B,C,D,E):
* Chain [[12],13]: 1*it(12)+0
  Such that:it(12) =< -V_x2_2-V_x1_2+C+D

  with precondition: [B=2,V__1=E,V__1+V_x1_2+V_x2_2=V_i_1+C+D,V_i_1>=0,V__1>=V_i_1+1] 

* Chain [13]: 0
  with precondition: [B=2,C=V_x2_2,D=V_x1_2,V_i_1=E,V_i_1>=0,V_i_1>=V__1] 


#### Cost of chains of eval_amir13_bb2_in(V_0,V_x5_1,V_x2_1,V_x1_1,V_i_0,V__1,B,C,D,E,F,G):
* Chain [[14,15]]...: 3*it(14)+0
  with precondition: [V_0>=V_i_0+1,V_0>=0,B=3] 

* Chain [[14,15],16]: 3*it(14)+0
  with precondition: [B=3,E=G,V_i_0>=0,F>=V_0,V_0>=V_i_0+1,F>=V__1+1,D+E+1>=V_x1_1+V_x2_1+F,V_x5_1+D+2*E>=V__1+V_x1_1+V_x2_1+C] 

* Chain [16]: 0
  with precondition: [B=3,C=V_x5_1,D=V_x2_1,E=V_x1_1,G=V__1,V_i_0=F,V_0>=0,V_i_0>=V_0] 


#### Cost of chains of eval_amir13_bb1_in(V_x5_0,V_x2_0,V_x1_0,V__01,V__0,B,C):
* Chain [[17,18],19,20]: 2*it(17)+6*s(8)+1
  Such that:aux(12) =< V__01
it(17) =< aux(12)

  with precondition: [B=5,V__01>=2] 

* Chain [20]: 0
  with precondition: [B=5,C=V__0,0>=V__01] 

* Chain [19,20]: 1
  with precondition: [V__01=1,B=5,V__0+V_x5_0=C] 


#### Cost of chains of eval_amir13_bb7_in(V__2,B):
* Chain [[21],22]: 1*it(21)+0
  Such that:it(21) =< V__2

  with precondition: [B=4,V__2>=1] 

* Chain [22]: 0
  with precondition: [B=4,0>=V__2] 


#### Cost of chains of eval_amir13_bb1_in_loop_cont(A,B,C):
* Chain [24]: 0
  with precondition: [A=5,0>=B] 

* Chain [23]: 1*s(10)+0
  Such that:s(10) =< B

  with precondition: [A=5,B>=1] 


#### Cost of chains of eval_amir13_bb0_in(V_x3,V_x7,B):
* Chain [29]: 1
  with precondition: [V_x7=1,0>=V_x3] 

* Chain [28]: 1*s(11)+1
  Such that:s(11) =< V_x3

  with precondition: [V_x7=1,V_x3>=1] 

* Chain [27]: 0
  with precondition: [0>=V_x3,0>=V_x7] 

* Chain [26]: 1*s(12)+0
  Such that:s(12) =< V_x3

  with precondition: [0>=V_x7,V_x3>=1] 

* Chain [25]: 4*s(14)+13*s(15)+1
  Such that:aux(13) =< V_x7
s(14) =< aux(13)

  with precondition: [V_x7>=2] 


#### Cost of chains of eval_amir13_start(V_x3,V_x7,B):
* Chain [34]: 1
  with precondition: [V_x7=1,0>=V_x3] 

* Chain [33]: 1*s(20)+1
  Such that:s(20) =< V_x3

  with precondition: [V_x7=1,V_x3>=1] 

* Chain [32]: 0
  with precondition: [0>=V_x3,0>=V_x7] 

* Chain [31]: 1*s(21)+0
  Such that:s(21) =< V_x3

  with precondition: [0>=V_x7,V_x3>=1] 

* Chain [30]: 4*s(23)+13*s(24)+1
  Such that:s(22) =< V_x7
s(23) =< s(22)

  with precondition: [V_x7>=2] 


Closed-form bounds of eval_amir13_start(V_x3,V_x7,B): 
-------------------------------------
* Chain [34] with precondition: [V_x7=1,0>=V_x3] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [33] with precondition: [V_x7=1,V_x3>=1] 
    - Upper bound: V_x3+1 
    - Complexity: n 
* Chain [32] with precondition: [0>=V_x3,0>=V_x7] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [31] with precondition: [0>=V_x7,V_x3>=1] 
    - Upper bound: V_x3 
    - Complexity: n 
* Chain [30] with precondition: [V_x7>=2] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_amir13_start(V_x3,V_x7,B): inf 
Asymptotic class: infinity 
* Total analysis performed in 171 ms.

