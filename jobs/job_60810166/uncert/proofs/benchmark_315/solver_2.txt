MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_foo_0/3,eval_foo_1/4,eval_foo_10/5,eval_foo_11/6,eval_foo_3/5,eval_foo_4/6,eval_foo_bb1_in/3,eval_foo_bb2_in/3,eval_foo_bb3_in/4,eval_foo_bb4_in/4,eval_foo_bb5_in/4,eval_foo_bb6_in/4,eval_foo_bb7_in/4,eval_foo_bb8_in/4]
1. non_recursive  : [eval_foo_stop/1]
2. non_recursive  : [eval_foo_bb9_in/1]
3. non_recursive  : [eval_foo_bb1_in_loop_cont/2]
4. non_recursive  : [eval_foo_bb0_in/3]
5. non_recursive  : [eval_foo_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_foo_bb1_in/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_foo_bb0_in/3
5. SCC is partially evaluated into eval_foo_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_foo_bb1_in/3 
* CE 8 is refined into CE [9] 
* CE 7 is refined into CE [10] 
* CE 5 is refined into CE [11] 
* CE 4 is refined into CE [12] 
* CE 6 is refined into CE [13] 
* CE 3 is refined into CE [14] 


### Cost equations --> "Loop" of eval_foo_bb1_in/3 
* CEs [11] --> Loop 9 
* CEs [12] --> Loop 10 
* CEs [13] --> Loop 11 
* CEs [14] --> Loop 12 
* CEs [9] --> Loop 13 
* CEs [10] --> Loop 14 

### Ranking functions of CR eval_foo_bb1_in(V__01,V__0,B) 

#### Partial ranking functions of CR eval_foo_bb1_in(V__01,V__0,B) 
* Partial RF of phase [9,11]:
  - RF of loop [9:1]:
    V__0
  - RF of loop [11:1]:
    V__01 depends on loops [9:1] 
* Partial RF of phase [10,12]:
  - RF of loop [10:1]:
    V__01
  - RF of loop [12:1]:
    -V__0 depends on loops [10:1] 


### Specialization of cost equations eval_foo_bb0_in/3 
* CE 2 is refined into CE [15,16,17,18,19] 


### Cost equations --> "Loop" of eval_foo_bb0_in/3 
* CEs [19] --> Loop 15 
* CEs [16] --> Loop 16 
* CEs [18] --> Loop 17 
* CEs [17] --> Loop 18 
* CEs [15] --> Loop 19 

### Ranking functions of CR eval_foo_bb0_in(V_x,V_y,B) 

#### Partial ranking functions of CR eval_foo_bb0_in(V_x,V_y,B) 


### Specialization of cost equations eval_foo_start/3 
* CE 1 is refined into CE [20,21,22,23,24] 


### Cost equations --> "Loop" of eval_foo_start/3 
* CEs [24] --> Loop 20 
* CEs [23] --> Loop 21 
* CEs [22] --> Loop 22 
* CEs [21] --> Loop 23 
* CEs [20] --> Loop 24 

### Ranking functions of CR eval_foo_start(V_x,V_y,B) 

#### Partial ranking functions of CR eval_foo_start(V_x,V_y,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_foo_bb1_in(V__01,V__0,B):
* Chain [[10,12],[9,11],14]: 1*it(10)+2*it(12)+0
  Such that:aux(2) =< V__01
it(10) =< aux(2)

  with precondition: [B=2,0>=V__0+1,V__01>=2] 

* Chain [[10,12],[9,11],13]: 1*it(10)+2*it(12)+0
  Such that:aux(4) =< V__01
it(10) =< aux(4)

  with precondition: [B=2,0>=V__0+1,V__01>=2] 

* Chain [[10,12],14]: 1*it(10)+1*it(12)+0
  Such that:it(10) =< V__01

  with precondition: [B=2,0>=V__0+1,V__01>=1] 

* Chain [[10,12],13]: 1*it(10)+1*it(12)+0
  Such that:it(10) =< V__01

  with precondition: [B=2,0>=V__0+1,V__01>=1] 

* Chain [[9,11],14]: 1*it(9)+1*it(11)+0
  Such that:it(9) =< V__0

  with precondition: [B=2,V__01>=1,V__0>=1] 

* Chain [[9,11],13]: 1*it(9)+1*it(11)+0
  Such that:it(9) =< V__0

  with precondition: [B=2,V__01>=1,V__0>=1] 

* Chain [14]: 0
  with precondition: [V__0=0,B=2] 

* Chain [13]: 0
  with precondition: [B=2,0>=V__01] 


#### Cost of chains of eval_foo_bb0_in(V_x,V_y,B):
* Chain [19]: 0
  with precondition: [V_x=0] 

* Chain [18]: 2*s(20)+2*s(21)+0
  Such that:s(19) =< V_y
s(20) =< s(19)

  with precondition: [0>=V_x+1,V_y>=1] 

* Chain [17]: 2*s(23)+4*s(24)+0
  Such that:s(22) =< V_y
s(23) =< s(22)

  with precondition: [0>=V_x+1,V_y>=2] 

* Chain [16]: 0
  with precondition: [0>=V_y] 

* Chain [15]: 2*s(26)+2*s(27)+0
  Such that:s(25) =< V_x
s(26) =< s(25)

  with precondition: [V_x>=1,V_y>=1] 


#### Cost of chains of eval_foo_start(V_x,V_y,B):
* Chain [24]: 0
  with precondition: [V_x=0] 

* Chain [23]: 2*s(29)+2*s(30)+0
  Such that:s(28) =< V_y
s(29) =< s(28)

  with precondition: [0>=V_x+1,V_y>=1] 

* Chain [22]: 2*s(32)+4*s(33)+0
  Such that:s(31) =< V_y
s(32) =< s(31)

  with precondition: [0>=V_x+1,V_y>=2] 

* Chain [21]: 0
  with precondition: [0>=V_y] 

* Chain [20]: 2*s(35)+2*s(36)+0
  Such that:s(34) =< V_x
s(35) =< s(34)

  with precondition: [V_x>=1,V_y>=1] 


Closed-form bounds of eval_foo_start(V_x,V_y,B): 
-------------------------------------
* Chain [24] with precondition: [V_x=0] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [23] with precondition: [0>=V_x+1,V_y>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [22] with precondition: [0>=V_x+1,V_y>=2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [21] with precondition: [0>=V_y] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [20] with precondition: [V_x>=1,V_y>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_foo_start(V_x,V_y,B): inf 
Asymptotic class: infinity 
* Total analysis performed in 81 ms.

