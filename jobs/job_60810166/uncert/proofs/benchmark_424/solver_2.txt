WORST_CASE(?,O(1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_nd_loop_0/2,eval_nd_loop_1/3,eval_nd_loop_bb1_in/2]
1. non_recursive  : [eval_nd_loop_stop/1]
2. non_recursive  : [eval_nd_loop_bb2_in/1]
3. non_recursive  : [eval_nd_loop_bb1_in_loop_cont/2]
4. non_recursive  : [eval_nd_loop_bb0_in/1]
5. non_recursive  : [eval_nd_loop_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_nd_loop_bb1_in/2
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_nd_loop_bb0_in/1
5. SCC is partially evaluated into eval_nd_loop_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_nd_loop_bb1_in/2 
* CE 4 is refined into CE [5] 
* CE 3 is refined into CE [6] 


### Cost equations --> "Loop" of eval_nd_loop_bb1_in/2 
* CEs [6] --> Loop 5 
* CEs [5] --> Loop 6 

### Ranking functions of CR eval_nd_loop_bb1_in(V_x_0,B) 
* RF of phase [6]: [-V_x_0+9]

#### Partial ranking functions of CR eval_nd_loop_bb1_in(V_x_0,B) 
* Partial RF of phase [6]:
  - RF of loop [6:1]:
    -V_x_0+9


### Specialization of cost equations eval_nd_loop_bb0_in/1 
* CE 2 is refined into CE [7,8] 


### Cost equations --> "Loop" of eval_nd_loop_bb0_in/1 
* CEs [7,8] --> Loop 7 

### Ranking functions of CR eval_nd_loop_bb0_in(B) 

#### Partial ranking functions of CR eval_nd_loop_bb0_in(B) 


### Specialization of cost equations eval_nd_loop_start/1 
* CE 1 is refined into CE [9] 


### Cost equations --> "Loop" of eval_nd_loop_start/1 
* CEs [9] --> Loop 8 

### Ranking functions of CR eval_nd_loop_start(B) 

#### Partial ranking functions of CR eval_nd_loop_start(B) 


Computing Bounds
=====================================

#### Cost of chains of eval_nd_loop_bb1_in(V_x_0,B):
* Chain [[6],5]: 1*it(6)+0
  Such that:it(6) =< -V_x_0+9

  with precondition: [B=2,8>=V_x_0,V_x_0>=0] 

* Chain [5]: 0
  with precondition: [B=2,V_x_0>=0] 


#### Cost of chains of eval_nd_loop_bb0_in(B):
* Chain [7]: 9
  with precondition: [] 


#### Cost of chains of eval_nd_loop_start(B):
* Chain [8]: 9
  with precondition: [] 


Closed-form bounds of eval_nd_loop_start(B): 
-------------------------------------
* Chain [8] with precondition: [] 
    - Upper bound: 9 
    - Complexity: constant 

### Maximum cost of eval_nd_loop_start(B): 9 
Asymptotic class: constant 
* Total analysis performed in 17 ms.

