WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_foo_bb1_in/3,eval_foo_bb2_in/3]
1. non_recursive  : [eval_foo_stop/1]
2. non_recursive  : [eval_foo_bb3_in/1]
3. non_recursive  : [eval_foo_bb1_in_loop_cont/2]
4. non_recursive  : [eval_foo_bb0_in/3]
5. non_recursive  : [eval_foo_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_foo_bb1_in/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_foo_bb0_in/3
5. SCC is partially evaluated into eval_foo_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_foo_bb1_in/3 
* CE 6 is refined into CE [7] 
* CE 4 is refined into CE [8] 
* CE 5 is refined into CE [9] 


### Cost equations --> "Loop" of eval_foo_bb1_in/3 
* CEs [8] --> Loop 7 
* CEs [9] --> Loop 8 
* CEs [7] --> Loop 9 

### Ranking functions of CR eval_foo_bb1_in(V_M,V__0,B) 
* RF of phase [7]: [V_M-V__0]

#### Partial ranking functions of CR eval_foo_bb1_in(V_M,V__0,B) 
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    V_M-V__0


### Specialization of cost equations eval_foo_bb0_in/3 
* CE 3 is refined into CE [10,11,12] 
* CE 2 is refined into CE [13] 


### Cost equations --> "Loop" of eval_foo_bb0_in/3 
* CEs [11] --> Loop 10 
* CEs [12] --> Loop 11 
* CEs [13] --> Loop 12 
* CEs [10] --> Loop 13 

### Ranking functions of CR eval_foo_bb0_in(V_x,V_M,B) 

#### Partial ranking functions of CR eval_foo_bb0_in(V_x,V_M,B) 


### Specialization of cost equations eval_foo_start/3 
* CE 1 is refined into CE [14,15,16,17] 


### Cost equations --> "Loop" of eval_foo_start/3 
* CEs [17] --> Loop 14 
* CEs [16] --> Loop 15 
* CEs [15] --> Loop 16 
* CEs [14] --> Loop 17 

### Ranking functions of CR eval_foo_start(V_x,V_M,B) 

#### Partial ranking functions of CR eval_foo_start(V_x,V_M,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_foo_bb1_in(V_M,V__0,B):
* Chain [[7],9]: 1*it(7)+0
  Such that:it(7) =< V_M-V__0

  with precondition: [B=2,V_M>=1,V_M>=V__0+1] 

* Chain [9]: 0
  with precondition: [B=2,V_M=V__0,V_M>=1] 

* Chain [8,[7],9]: 1*it(7)+1
  Such that:it(7) =< V_M

  with precondition: [B=2,V_M>=1,V__0>=V_M+1] 


#### Cost of chains of eval_foo_bb0_in(V_x,V_M,B):
* Chain [13]: 0
  with precondition: [V_x=V_M,V_x>=1] 

* Chain [12]: 0
  with precondition: [0>=V_M] 

* Chain [11]: 1*s(1)+0
  Such that:s(1) =< -V_x+V_M

  with precondition: [V_M>=1,V_M>=V_x+1] 

* Chain [10]: 1*s(2)+1
  Such that:s(2) =< V_M

  with precondition: [V_M>=1,V_x>=V_M+1] 


#### Cost of chains of eval_foo_start(V_x,V_M,B):
* Chain [17]: 0
  with precondition: [V_x=V_M,V_x>=1] 

* Chain [16]: 0
  with precondition: [0>=V_M] 

* Chain [15]: 1*s(3)+0
  Such that:s(3) =< -V_x+V_M

  with precondition: [V_M>=1,V_M>=V_x+1] 

* Chain [14]: 1*s(4)+1
  Such that:s(4) =< V_M

  with precondition: [V_M>=1,V_x>=V_M+1] 


Closed-form bounds of eval_foo_start(V_x,V_M,B): 
-------------------------------------
* Chain [17] with precondition: [V_x=V_M,V_x>=1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [16] with precondition: [0>=V_M] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [15] with precondition: [V_M>=1,V_M>=V_x+1] 
    - Upper bound: -V_x+V_M 
    - Complexity: n 
* Chain [14] with precondition: [V_M>=1,V_x>=V_M+1] 
    - Upper bound: V_M+1 
    - Complexity: n 

### Maximum cost of eval_foo_start(V_x,V_M,B): max([nat(-V_x+V_M),nat(V_M)+1]) 
Asymptotic class: n 
* Total analysis performed in 31 ms.

