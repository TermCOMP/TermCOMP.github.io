WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_foo_bb1_in/4,eval_foo_bb2_in/4]
1. recursive  : [eval_foo_bb3_in/3,eval_foo_bb4_in/3]
2. non_recursive  : [eval_foo_stop/1]
3. non_recursive  : [eval_foo_bb5_in/1]
4. non_recursive  : [eval_foo_bb3_in_loop_cont/2]
5. non_recursive  : [eval_foo_bb1_in_loop_cont/4]
6. non_recursive  : [eval_foo_bb0_in/4]
7. non_recursive  : [eval_foo_start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_foo_bb1_in/4
1. SCC is partially evaluated into eval_foo_bb3_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_foo_bb1_in_loop_cont/4
6. SCC is partially evaluated into eval_foo_bb0_in/4
7. SCC is partially evaluated into eval_foo_start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_foo_bb1_in/4 
* CE 4 is refined into CE [8] 
* CE 3 is refined into CE [9] 


### Cost equations --> "Loop" of eval_foo_bb1_in/4 
* CEs [9] --> Loop 8 
* CEs [8] --> Loop 9 

### Ranking functions of CR eval_foo_bb1_in(V_n,V__0,B,C) 
* RF of phase [8]: [V_n-V__0]

#### Partial ranking functions of CR eval_foo_bb1_in(V_n,V__0,B,C) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V_n-V__0


### Specialization of cost equations eval_foo_bb3_in/3 
* CE 7 is refined into CE [10] 
* CE 6 is refined into CE [11] 


### Cost equations --> "Loop" of eval_foo_bb3_in/3 
* CEs [11] --> Loop 10 
* CEs [10] --> Loop 11 

### Ranking functions of CR eval_foo_bb3_in(V_m,V__1,B) 
* RF of phase [10]: [V_m-V__1]

#### Partial ranking functions of CR eval_foo_bb3_in(V_m,V__1,B) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    V_m-V__1


### Specialization of cost equations eval_foo_bb1_in_loop_cont/4 
* CE 5 is refined into CE [12,13] 


### Cost equations --> "Loop" of eval_foo_bb1_in_loop_cont/4 
* CEs [13] --> Loop 12 
* CEs [12] --> Loop 13 

### Ranking functions of CR eval_foo_bb1_in_loop_cont(A,B,C,D) 

#### Partial ranking functions of CR eval_foo_bb1_in_loop_cont(A,B,C,D) 


### Specialization of cost equations eval_foo_bb0_in/4 
* CE 2 is refined into CE [14,15,16,17] 


### Cost equations --> "Loop" of eval_foo_bb0_in/4 
* CEs [16] --> Loop 14 
* CEs [17] --> Loop 15 
* CEs [14] --> Loop 16 
* CEs [15] --> Loop 17 

### Ranking functions of CR eval_foo_bb0_in(V_x,V_n,V_m,B) 

#### Partial ranking functions of CR eval_foo_bb0_in(V_x,V_n,V_m,B) 


### Specialization of cost equations eval_foo_start/5 
* CE 1 is refined into CE [18,19,20,21] 


### Cost equations --> "Loop" of eval_foo_start/5 
* CEs [21] --> Loop 18 
* CEs [20] --> Loop 19 
* CEs [19] --> Loop 20 
* CEs [18] --> Loop 21 

### Ranking functions of CR eval_foo_start(V_x,V_i,V_n,V_m,B) 

#### Partial ranking functions of CR eval_foo_start(V_x,V_i,V_n,V_m,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_foo_bb1_in(V_n,V__0,B,C):
* Chain [[8],9]: 1*it(8)+0
  Such that:it(8) =< V_n-V__0

  with precondition: [B=3,V_n=C,V_n>=V__0+1] 

* Chain [9]: 0
  with precondition: [B=3,V__0=C,V__0>=V_n] 


#### Cost of chains of eval_foo_bb3_in(V_m,V__1,B):
* Chain [[10],11]: 1*it(10)+0
  Such that:it(10) =< V_m-V__1

  with precondition: [B=2,V_m>=V__1+1] 

* Chain [11]: 0
  with precondition: [B=2,V__1>=V_m] 


#### Cost of chains of eval_foo_bb1_in_loop_cont(A,B,C,D):
* Chain [13]: 0
  with precondition: [A=3,C>=B] 

* Chain [12]: 1*s(1)+0
  Such that:s(1) =< B-C

  with precondition: [A=3,B>=C+1] 


#### Cost of chains of eval_foo_bb0_in(V_x,V_n,V_m,B):
* Chain [17]: 1*s(2)+1*s(3)+0
  Such that:s(2) =< -V_x+V_n
s(3) =< -V_n+V_m

  with precondition: [V_n>=V_x+1,V_m>=V_n+1] 

* Chain [16]: 1*s(4)+0
  Such that:s(4) =< -V_x+V_n

  with precondition: [V_n>=V_x+1,V_n>=V_m] 

* Chain [15]: 1*s(5)+0
  Such that:s(5) =< -V_x+V_m

  with precondition: [V_m>=V_x+1,V_x>=V_n] 

* Chain [14]: 0
  with precondition: [V_x>=V_n,V_x>=V_m] 


#### Cost of chains of eval_foo_start(V_x,V_i,V_n,V_m,B):
* Chain [21]: 1*s(6)+1*s(7)+0
  Such that:s(6) =< -V_x+V_n
s(7) =< -V_n+V_m

  with precondition: [V_n>=V_x+1,V_m>=V_n+1] 

* Chain [20]: 1*s(8)+0
  Such that:s(8) =< -V_x+V_n

  with precondition: [V_n>=V_x+1,V_n>=V_m] 

* Chain [19]: 1*s(9)+0
  Such that:s(9) =< -V_x+V_m

  with precondition: [V_m>=V_x+1,V_x>=V_n] 

* Chain [18]: 0
  with precondition: [V_x>=V_n,V_x>=V_m] 


Closed-form bounds of eval_foo_start(V_x,V_i,V_n,V_m,B): 
-------------------------------------
* Chain [21] with precondition: [V_n>=V_x+1,V_m>=V_n+1] 
    - Upper bound: -V_x+V_m 
    - Complexity: n 
* Chain [20] with precondition: [V_n>=V_x+1,V_n>=V_m] 
    - Upper bound: -V_x+V_n 
    - Complexity: n 
* Chain [19] with precondition: [V_m>=V_x+1,V_x>=V_n] 
    - Upper bound: -V_x+V_m 
    - Complexity: n 
* Chain [18] with precondition: [V_x>=V_n,V_x>=V_m] 
    - Upper bound: 0 
    - Complexity: constant 

### Maximum cost of eval_foo_start(V_x,V_i,V_n,V_m,B): max([nat(-V_x+V_m),nat(-V_n+V_m)+nat(-V_x+V_n)]) 
Asymptotic class: n 
* Total analysis performed in 42 ms.

