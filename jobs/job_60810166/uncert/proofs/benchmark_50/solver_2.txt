WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_foo_bb1_in/3,eval_foo_bb2_in/3]
1. non_recursive  : [eval_foo_stop/1]
2. non_recursive  : [eval_foo_bb3_in/1]
3. non_recursive  : [eval_foo_bb1_in_loop_cont/2]
4. non_recursive  : [eval_foo_bb0_in/3]
5. non_recursive  : [eval_foo_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_foo_bb1_in/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_foo_bb0_in/3
5. SCC is partially evaluated into eval_foo_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_foo_bb1_in/3 
* CE 7 is refined into CE [8] 
* CE 5 is refined into CE [9] 
* CE 6 is refined into CE [10] 


### Cost equations --> "Loop" of eval_foo_bb1_in/3 
* CEs [9] --> Loop 8 
* CEs [10] --> Loop 9 
* CEs [8] --> Loop 10 

### Ranking functions of CR eval_foo_bb1_in(V__01,V__0,B) 
* RF of phase [8,9]: [V__01+V__0-2]

#### Partial ranking functions of CR eval_foo_bb1_in(V__01,V__0,B) 
* Partial RF of phase [8,9]:
  - RF of loop [8:1]:
    V__01-1
    V__01-V__0 depends on loops [9:1] 
  - RF of loop [9:1]:
    V__0-1
    -V__01+V__0 depends on loops [8:1] 


### Specialization of cost equations eval_foo_bb0_in/3 
* CE 4 is refined into CE [11,12] 
* CE 3 is refined into CE [13] 
* CE 2 is refined into CE [14] 


### Cost equations --> "Loop" of eval_foo_bb0_in/3 
* CEs [12] --> Loop 11 
* CEs [13] --> Loop 12 
* CEs [14] --> Loop 13 
* CEs [11] --> Loop 14 

### Ranking functions of CR eval_foo_bb0_in(V_y1,V_y2,B) 

#### Partial ranking functions of CR eval_foo_bb0_in(V_y1,V_y2,B) 


### Specialization of cost equations eval_foo_start/3 
* CE 1 is refined into CE [15,16,17,18] 


### Cost equations --> "Loop" of eval_foo_start/3 
* CEs [18] --> Loop 15 
* CEs [17] --> Loop 16 
* CEs [16] --> Loop 17 
* CEs [15] --> Loop 18 

### Ranking functions of CR eval_foo_start(V_y1,V_y2,B) 

#### Partial ranking functions of CR eval_foo_start(V_y1,V_y2,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_foo_bb1_in(V__01,V__0,B):
* Chain [[8,9],10]: 1*it(8)+1*it(9)+0
  Such that:aux(4) =< -V__01+V__0
aux(2) =< V__01-V__0
aux(1) =< 2*V__01+V__0
aux(14) =< V__01
aux(15) =< V__01+V__0
aux(16) =< V__01+2*V__0
aux(17) =< V__0
aux(3) =< aux(14)
it(8) =< aux(14)
aux(1) =< aux(15)
aux(3) =< aux(15)
it(8) =< aux(15)
it(9) =< aux(15)
aux(1) =< aux(16)
aux(3) =< aux(16)
aux(1) =< aux(17)
it(9) =< aux(17)
it(9) =< aux(3)+aux(4)
aux(1) =< it(9)*aux(17)
it(8) =< aux(1)+aux(2)

  with precondition: [B=2,V__01>=1,V__0>=1,V__0+V__01>=3] 

* Chain [10]: 0
  with precondition: [B=2,V__0=V__01,V__0>=1] 


#### Cost of chains of eval_foo_bb0_in(V_y1,V_y2,B):
* Chain [14]: 0
  with precondition: [V_y1=V_y2,V_y1>=1] 

* Chain [13]: 0
  with precondition: [0>=V_y1] 

* Chain [12]: 0
  with precondition: [0>=V_y2] 

* Chain [11]: 1*s(9)+1*s(10)+0
  Such that:s(2) =< -V_y1+V_y2
s(7) =< V_y1
s(1) =< V_y1-V_y2
s(5) =< V_y1+V_y2
s(3) =< V_y1+2*V_y2
s(6) =< 2*V_y1+V_y2
aux(18) =< V_y2
s(2) =< aux(18)
s(8) =< aux(18)
s(9) =< aux(18)
s(3) =< s(5)
s(8) =< s(5)
s(9) =< s(5)
s(10) =< s(5)
s(3) =< s(6)
s(8) =< s(6)
s(3) =< s(7)
s(10) =< s(7)
s(10) =< s(8)+s(1)
s(3) =< s(10)*s(7)
s(9) =< s(3)+s(2)

  with precondition: [V_y1>=1,V_y2>=1,V_y1+V_y2>=3] 


#### Cost of chains of eval_foo_start(V_y1,V_y2,B):
* Chain [18]: 0
  with precondition: [V_y1=V_y2,V_y1>=1] 

* Chain [17]: 0
  with precondition: [0>=V_y1] 

* Chain [16]: 0
  with precondition: [0>=V_y2] 

* Chain [15]: 1*s(19)+1*s(20)+0
  Such that:s(11) =< -V_y1+V_y2
s(12) =< V_y1
s(13) =< V_y1-V_y2
s(14) =< V_y1+V_y2
s(15) =< V_y1+2*V_y2
s(16) =< 2*V_y1+V_y2
aux(19) =< V_y2
s(11) =< aux(19)
s(18) =< aux(19)
s(19) =< aux(19)
s(15) =< s(14)
s(18) =< s(14)
s(19) =< s(14)
s(20) =< s(14)
s(15) =< s(16)
s(18) =< s(16)
s(15) =< s(12)
s(20) =< s(12)
s(20) =< s(18)+s(13)
s(15) =< s(20)*s(12)
s(19) =< s(15)+s(11)

  with precondition: [V_y1>=1,V_y2>=1,V_y1+V_y2>=3] 


Closed-form bounds of eval_foo_start(V_y1,V_y2,B): 
-------------------------------------
* Chain [18] with precondition: [V_y1=V_y2,V_y1>=1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [17] with precondition: [0>=V_y1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [16] with precondition: [0>=V_y2] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [15] with precondition: [V_y1>=1,V_y2>=1,V_y1+V_y2>=3] 
    - Upper bound: V_y1+2*V_y2 
    - Complexity: n 

### Maximum cost of eval_foo_start(V_y1,V_y2,B): nat(V_y1+V_y2)+nat(V_y2) 
Asymptotic class: n 
* Total analysis performed in 54 ms.

