WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_foo_bb1_in/4,eval_foo_bb2_in/4]
1. non_recursive  : [eval_foo_stop/1]
2. non_recursive  : [eval_foo_bb3_in/1]
3. non_recursive  : [eval_foo_bb1_in_loop_cont/2]
4. non_recursive  : [eval_foo_bb0_in/4]
5. non_recursive  : [eval_foo_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_foo_bb1_in/4
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_foo_bb0_in/4
5. SCC is partially evaluated into eval_foo_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_foo_bb1_in/4 
* CE 6 is refined into CE [7] 
* CE 5 is refined into CE [8] 


### Cost equations --> "Loop" of eval_foo_bb1_in/4 
* CEs [8] --> Loop 7 
* CEs [7] --> Loop 8 

### Ranking functions of CR eval_foo_bb1_in(V_a,V_b,V__0,B) 
* RF of phase [7]: [V__0+1]

#### Partial ranking functions of CR eval_foo_bb1_in(V_a,V_b,V__0,B) 
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    V__0+1


### Specialization of cost equations eval_foo_bb0_in/4 
* CE 3 is refined into CE [9] 
* CE 2 is refined into CE [10] 
* CE 4 is refined into CE [11,12] 


### Cost equations --> "Loop" of eval_foo_bb0_in/4 
* CEs [9] --> Loop 9 
* CEs [10] --> Loop 10 
* CEs [12] --> Loop 11 
* CEs [11] --> Loop 12 

### Ranking functions of CR eval_foo_bb0_in(V_x,V_a,V_b,B) 

#### Partial ranking functions of CR eval_foo_bb0_in(V_x,V_a,V_b,B) 


### Specialization of cost equations eval_foo_start/4 
* CE 1 is refined into CE [13,14,15,16] 


### Cost equations --> "Loop" of eval_foo_start/4 
* CEs [16] --> Loop 13 
* CEs [15] --> Loop 14 
* CEs [14] --> Loop 15 
* CEs [13] --> Loop 16 

### Ranking functions of CR eval_foo_start(V_x,V_a,V_b,B) 

#### Partial ranking functions of CR eval_foo_start(V_x,V_a,V_b,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_foo_bb1_in(V_a,V_b,V__0,B):
* Chain [[7],8]: 1*it(7)+0
  Such that:it(7) =< V__0+1

  with precondition: [B=2,V_a=V_b,V__0>=0] 

* Chain [8]: 0
  with precondition: [B=2,V_b=V_a,0>=V__0+1] 


#### Cost of chains of eval_foo_bb0_in(V_x,V_a,V_b,B):
* Chain [12]: 0
  with precondition: [V_b=V_a,0>=V_x+1] 

* Chain [11]: 1*s(1)+0
  Such that:s(1) =< V_x+1

  with precondition: [V_b=V_a,V_x>=0] 

* Chain [10]: 0
  with precondition: [V_b>=V_a+1] 

* Chain [9]: 0
  with precondition: [V_a>=V_b+1] 


#### Cost of chains of eval_foo_start(V_x,V_a,V_b,B):
* Chain [16]: 0
  with precondition: [V_b=V_a,0>=V_x+1] 

* Chain [15]: 1*s(2)+0
  Such that:s(2) =< V_x+1

  with precondition: [V_b=V_a,V_x>=0] 

* Chain [14]: 0
  with precondition: [V_b>=V_a+1] 

* Chain [13]: 0
  with precondition: [V_a>=V_b+1] 


Closed-form bounds of eval_foo_start(V_x,V_a,V_b,B): 
-------------------------------------
* Chain [16] with precondition: [V_b=V_a,0>=V_x+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [15] with precondition: [V_b=V_a,V_x>=0] 
    - Upper bound: V_x+1 
    - Complexity: n 
* Chain [14] with precondition: [V_b>=V_a+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [13] with precondition: [V_a>=V_b+1] 
    - Upper bound: 0 
    - Complexity: constant 

### Maximum cost of eval_foo_start(V_x,V_a,V_b,B): nat(V_x+1) 
Asymptotic class: n 
* Total analysis performed in 26 ms.

