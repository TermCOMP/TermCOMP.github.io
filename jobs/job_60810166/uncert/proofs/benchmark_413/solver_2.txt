MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_counterex1b_0/3,eval_counterex1b_1/4,eval_counterex1b_bb1_in/3,eval_counterex1b_bb2_in/3,eval_counterex1b_bb3_in/4]
1. recursive  : [eval_counterex1b_6/7,eval_counterex1b_7/8,eval_counterex1b_bb4_in/7,eval_counterex1b_bb5_in/7,eval_counterex1b_bb6_in/8]
2. recursive  : [eval_counterex1b__critedge2_in/4,eval_counterex1b__critedge_in/5,eval_counterex1b_bb1_in_loop_cont/6,eval_counterex1b_bb4_in_loop_cont/5]
3. non_recursive  : [eval_counterex1b_stop/1]
4. non_recursive  : [eval_counterex1b_bb7_in/1]
5. non_recursive  : [eval_counterex1b__critedge2_in_loop_cont/2]
6. non_recursive  : [eval_counterex1b_bb0_in/4]
7. non_recursive  : [eval_counterex1b_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_counterex1b_bb1_in/3
1. SCC is partially evaluated into eval_counterex1b_bb4_in/7
2. SCC is partially evaluated into eval_counterex1b__critedge2_in/4
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_counterex1b_bb0_in/4
7. SCC is partially evaluated into eval_counterex1b_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_counterex1b_bb1_in/3 
* CE 5 is refined into CE [11] 
* CE 7 is refined into CE [12] 
* CE 6 is refined into CE [13] 


### Cost equations --> "Loop" of eval_counterex1b_bb1_in/3 
* CEs [13] --> Loop 11 
* CEs [11] --> Loop 12 
* CEs [12] --> Loop 13 

### Ranking functions of CR eval_counterex1b_bb1_in(V__1,B,C) 
* RF of phase [11]: [V__1+1]

#### Partial ranking functions of CR eval_counterex1b_bb1_in(V__1,B,C) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    V__1+1


### Specialization of cost equations eval_counterex1b_bb4_in/7 
* CE 8 is refined into CE [14] 
* CE 10 is refined into CE [15] 
* CE 9 is refined into CE [16] 


### Cost equations --> "Loop" of eval_counterex1b_bb4_in/7 
* CEs [16] --> Loop 14 
* CEs [14] --> Loop 15 
* CEs [15] --> Loop 16 

### Ranking functions of CR eval_counterex1b_bb4_in(V_n,V__01,V__0,V__1,V__2,B,C) 
* RF of phase [14]: [V_n-V__2+1]

#### Partial ranking functions of CR eval_counterex1b_bb4_in(V_n,V__01,V__0,V__1,V__2,B,C) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    V_n-V__2+1


### Specialization of cost equations eval_counterex1b__critedge2_in/4 
* CE 4 is refined into CE [17] 
* CE 3 is refined into CE [18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33] 


### Cost equations --> "Loop" of eval_counterex1b__critedge2_in/4 
* CEs [32] --> Loop 17 
* CEs [31] --> Loop 18 
* CEs [33] --> Loop 19 
* CEs [29] --> Loop 20 
* CEs [21] --> Loop 21 
* CEs [25] --> Loop 22 
* CEs [28] --> Loop 23 
* CEs [27] --> Loop 24 
* CEs [24] --> Loop 25 
* CEs [23] --> Loop 26 
* CEs [22] --> Loop 27 
* CEs [26] --> Loop 28 
* CEs [18] --> Loop 29 
* CEs [30] --> Loop 30 
* CEs [20] --> Loop 31 
* CEs [19] --> Loop 32 
* CEs [17] --> Loop 33 

### Ranking functions of CR eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) 
* RF of phase [17,18,19,20,21,22,23,24,25,27,28,29,30,31]: [V__0+1]
* RF of phase [26]: [V__0+1]

#### Partial ranking functions of CR eval_counterex1b__critedge2_in(V_n,V__01,V__0,B) 
* Partial RF of phase [17,18,19,20,21,22,23,24,25,27,28,29,30,31]:
  - RF of loop [17:1,18:1]:
    V__01 depends on loops [19:1,20:1,21:1,22:1,27:1,28:1,29:1,30:1] 
  - RF of loop [17:1,18:1,19:1,20:1,21:1,22:1,23:1,24:1,25:1,27:1,28:1,29:1,30:1,31:1]:
    V__0+1
  - RF of loop [18:1]:
    -V_n+V__01-1 depends on loops [19:1,20:1,21:1,22:1,27:1,28:1,29:1,30:1] 
  - RF of loop [20:1,22:1]:
    V_n-V__01 depends on loops [17:1,18:1,19:1,21:1,29:1,30:1,31:1] 
  - RF of loop [22:1,27:1]:
    -V__01 depends on loops [17:1,18:1,19:1,21:1,29:1,30:1,31:1] 
  - RF of loop [27:1,28:1]:
    V_n-V__01+1 depends on loops [17:1,18:1,19:1,21:1,29:1,30:1,31:1] 
  - RF of loop [31:1]:
    V__01+1 depends on loops [19:1,20:1,21:1,22:1,27:1,28:1,29:1,30:1] 
* Partial RF of phase [26]:
  - RF of loop [26:1]:
    V__0+1


### Specialization of cost equations eval_counterex1b_bb0_in/4 
* CE 2 is refined into CE [34,35,36,37,38,39,40] 


### Cost equations --> "Loop" of eval_counterex1b_bb0_in/4 
* CEs [40] --> Loop 34 
* CEs [38] --> Loop 35 
* CEs [39] --> Loop 36 
* CEs [36] --> Loop 37 
* CEs [37] --> Loop 38 
* CEs [35] --> Loop 39 
* CEs [34] --> Loop 40 

### Ranking functions of CR eval_counterex1b_bb0_in(V_n,V_x,V_y,B) 

#### Partial ranking functions of CR eval_counterex1b_bb0_in(V_n,V_x,V_y,B) 


### Specialization of cost equations eval_counterex1b_start/4 
* CE 1 is refined into CE [41,42,43,44,45,46,47] 


### Cost equations --> "Loop" of eval_counterex1b_start/4 
* CEs [47] --> Loop 41 
* CEs [46] --> Loop 42 
* CEs [45] --> Loop 43 
* CEs [44] --> Loop 44 
* CEs [43] --> Loop 45 
* CEs [42] --> Loop 46 
* CEs [41] --> Loop 47 

### Ranking functions of CR eval_counterex1b_start(V_n,V_x,V_y,B) 

#### Partial ranking functions of CR eval_counterex1b_start(V_n,V_x,V_y,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_counterex1b_bb1_in(V__1,B,C):
* Chain [[11],13]: 1*it(11)+0
  Such that:it(11) =< V__1+1

  with precondition: [B=2,C+1=0,V__1>=0] 

* Chain [[11],12]: 1*it(11)+0
  Such that:it(11) =< V__1-C

  with precondition: [B=2,C>=0,V__1>=C+1] 

* Chain [13]: 0
  with precondition: [B=2,V__1=C,0>=V__1+1] 

* Chain [12]: 0
  with precondition: [B=2,V__1=C,V__1>=0] 


#### Cost of chains of eval_counterex1b_bb4_in(V_n,V__01,V__0,V__1,V__2,B,C):
* Chain [[14],16]: 1*it(14)+0
  Such that:it(14) =< V_n-V__2+1

  with precondition: [B=3,V_n+1=C,V__0>=0,V__2>=V__1,V_n>=V__2] 

* Chain [[14],15]: 1*it(14)+0
  Such that:it(14) =< -V__2+C

  with precondition: [B=3,V__0>=0,V__2>=V__1,C>=V__2+1,V_n>=C] 

* Chain [16]: 0
  with precondition: [B=3,V__2=C,V__0>=0,V__2>=V_n+1,V__2>=V__1] 

* Chain [15]: 0
  with precondition: [B=3,V__2=C,V__0>=0,V__2>=V__1,V_n>=V__2] 


#### Cost of chains of eval_counterex1b__critedge2_in(V_n,V__01,V__0,B):
* Chain [[26],33]: 1*it(26)+0
  Such that:it(26) =< V__0+1

  with precondition: [B=4,0>=V__01+1,V__0>=0,V__01>=V_n+1] 

* Chain [[17,18,19,20,21,22,23,24,25,27,28,29,30,31],[26],33]: 14*it(17)+1*it(26)+11*s(31)+1*s(34)+2*s(37)+1*s(42)+0
  Such that:aux(19) =< V_n
aux(227) =< V__0
aux(228) =< V__0+1
aux(226) =< aux(227)
it(26) =< aux(227)
aux(226) =< aux(228)
it(26) =< aux(228)
it(17) =< aux(228)
it(17) =< aux(226)
aux(149) =< aux(19)+2
aux(20) =< aux(19)+1
aux(47) =< aux(19)
s(37) =< it(17)*aux(20)
s(42) =< it(17)*aux(149)
s(34) =< it(17)*aux(47)

  with precondition: [B=4,0>=V_n+2,V__0>=1,V_n>=V__01] 

* Chain [[17,18,19,20,21,22,23,24,25,27,28,29,30,31],33]: 14*it(17)+11*s(31)+1*s(34)+2*s(37)+1*s(42)+0
  Such that:aux(19) =< V_n
aux(229) =< V__0+1
it(17) =< aux(229)
aux(149) =< aux(19)+2
aux(20) =< aux(19)+1
aux(47) =< aux(19)
s(37) =< it(17)*aux(20)
s(42) =< it(17)*aux(149)
s(34) =< it(17)*aux(47)

  with precondition: [B=4,V__0>=0] 

* Chain [[17,18,19,20,21,22,23,24,25,27,28,29,30,31],32,[26],33]: 14*it(17)+1*it([32,[26],33])+12*s(31)+1*s(34)+2*s(37)+1*s(42)+1*s(47)+0
  Such that:it([32,[26],33]) =< 1
aux(248) =< V_n
s(47) =< V__0
aux(475) =< -V_n
aux(482) =< V__0+1
it([32,[26],33]) =< aux(475)
it(17) =< aux(482)
it([32,[26],33]) =< aux(482)
aux(378) =< aux(248)+2
aux(249) =< aux(248)+1
aux(276) =< aux(248)
s(37) =< it(17)*aux(249)
s(42) =< it(17)*aux(378)
s(34) =< it(17)*aux(276)

  with precondition: [B=4,0>=V_n+2,V__01>=0,V__0>=2] 

* Chain [[17,18,19,20,21,22,23,24,25,27,28,29,30,31],32,33]: 14*it(17)+1*it([32,33])+12*s(31)+1*s(34)+2*s(37)+1*s(42)+0
  Such that:it([32,33]) =< 1
aux(501) =< V_n
aux(786) =< -V_n
aux(793) =< V__0+1
it([32,33]) =< aux(786)
it(17) =< aux(793)
it([32,33]) =< aux(793)
aux(631) =< aux(501)+2
aux(502) =< aux(501)+1
aux(529) =< aux(501)
s(37) =< it(17)*aux(502)
s(42) =< it(17)*aux(631)
s(34) =< it(17)*aux(529)

  with precondition: [B=4,0>=V_n+2,V__01>=0,V__0>=1] 

* Chain [33]: 0
  with precondition: [B=4,0>=V__0+1] 

* Chain [32,[26],33]: 1*it(26)+1*s(46)+1
  Such that:s(46) =< V__01+1
it(26) =< V__0

  with precondition: [B=4,0>=V_n+2,V__01>=0,V__0>=1] 

* Chain [32,33]: 1*s(46)+1
  Such that:s(46) =< V__01+1

  with precondition: [V__0=0,B=4,0>=V_n+2,V__01>=0] 


#### Cost of chains of eval_counterex1b_bb0_in(V_n,V_x,V_y,B):
* Chain [40]: 1*s(64)+1
  Such that:s(64) =< V_y+1

  with precondition: [V_x=0,0>=V_n+2,V_y>=0] 

* Chain [39]: 1*s(65)+1*s(68)+1*s(69)+14*s(71)+2*s(75)+1*s(76)+12*s(78)+1
  Such that:s(65) =< 1
s(66) =< -V_n
s(69) =< V_x
s(70) =< V_x+1
s(68) =< V_y+1
s(65) =< s(66)
s(71) =< s(70)
s(65) =< s(70)
s(72) =< 2
s(73) =< 1
s(75) =< s(71)*s(73)
s(76) =< s(71)*s(72)

  with precondition: [0>=V_n+2,V_x>=1,V_y>=0] 

* Chain [38]: 1*s(83)+14*s(84)+2*s(88)+1*s(89)+11*s(91)+0
  Such that:s(80) =< V_x
s(81) =< V_x+1
s(82) =< s(80)
s(83) =< s(80)
s(82) =< s(81)
s(83) =< s(81)
s(84) =< s(81)
s(84) =< s(82)
s(85) =< 2
s(86) =< 1
s(88) =< s(84)*s(86)
s(89) =< s(84)*s(85)

  with precondition: [0>=V_n+2,V_x>=1,V_n>=V_y] 

* Chain [37]: 1*s(92)+1*s(94)+14*s(97)+2*s(101)+1*s(102)+12*s(104)+0
  Such that:s(92) =< 1
s(95) =< -V_n
s(94) =< V_x
s(96) =< V_x+1
s(92) =< s(95)
s(97) =< s(96)
s(92) =< s(96)
s(98) =< 2
s(99) =< 1
s(101) =< s(97)*s(99)
s(102) =< s(97)*s(98)

  with precondition: [0>=V_n+2,V_x>=2,V_y>=0] 

* Chain [36]: 0
  with precondition: [0>=V_x+1] 

* Chain [35]: 1*s(105)+0
  Such that:s(105) =< V_x+1

  with precondition: [0>=V_y+1,V_x>=0,V_y>=V_n+1] 

* Chain [34]: 14*s(108)+2*s(112)+1*s(113)+1*s(114)+11*s(115)+0
  Such that:s(106) =< V_n
s(107) =< V_x+1
s(108) =< s(107)
s(109) =< s(106)+2
s(110) =< s(106)+1
s(111) =< s(106)
s(112) =< s(108)*s(110)
s(113) =< s(108)*s(109)
s(114) =< s(108)*s(111)

  with precondition: [V_x>=0] 


#### Cost of chains of eval_counterex1b_start(V_n,V_x,V_y,B):
* Chain [47]: 1*s(116)+1
  Such that:s(116) =< V_y+1

  with precondition: [V_x=0,0>=V_n+2,V_y>=0] 

* Chain [46]: 1*s(117)+1*s(119)+1*s(121)+14*s(122)+2*s(125)+1*s(126)+12*s(127)+1
  Such that:s(117) =< 1
s(118) =< -V_n
s(119) =< V_x
s(120) =< V_x+1
s(121) =< V_y+1
s(117) =< s(118)
s(122) =< s(120)
s(117) =< s(120)
s(123) =< 2
s(124) =< 1
s(125) =< s(122)*s(124)
s(126) =< s(122)*s(123)

  with precondition: [0>=V_n+2,V_x>=1,V_y>=0] 

* Chain [45]: 1*s(131)+14*s(132)+2*s(135)+1*s(136)+11*s(137)+0
  Such that:s(128) =< V_x
s(129) =< V_x+1
s(130) =< s(128)
s(131) =< s(128)
s(130) =< s(129)
s(131) =< s(129)
s(132) =< s(129)
s(132) =< s(130)
s(133) =< 2
s(134) =< 1
s(135) =< s(132)*s(134)
s(136) =< s(132)*s(133)

  with precondition: [0>=V_n+2,V_x>=1,V_n>=V_y] 

* Chain [44]: 1*s(138)+1*s(140)+14*s(142)+2*s(145)+1*s(146)+12*s(147)+0
  Such that:s(138) =< 1
s(139) =< -V_n
s(140) =< V_x
s(141) =< V_x+1
s(138) =< s(139)
s(142) =< s(141)
s(138) =< s(141)
s(143) =< 2
s(144) =< 1
s(145) =< s(142)*s(144)
s(146) =< s(142)*s(143)

  with precondition: [0>=V_n+2,V_x>=2,V_y>=0] 

* Chain [43]: 0
  with precondition: [0>=V_x+1] 

* Chain [42]: 1*s(148)+0
  Such that:s(148) =< V_x+1

  with precondition: [0>=V_y+1,V_x>=0,V_y>=V_n+1] 

* Chain [41]: 14*s(151)+2*s(155)+1*s(156)+1*s(157)+11*s(158)+0
  Such that:s(149) =< V_n
s(150) =< V_x+1
s(151) =< s(150)
s(152) =< s(149)+2
s(153) =< s(149)+1
s(154) =< s(149)
s(155) =< s(151)*s(153)
s(156) =< s(151)*s(152)
s(157) =< s(151)*s(154)

  with precondition: [V_x>=0] 


Closed-form bounds of eval_counterex1b_start(V_n,V_x,V_y,B): 
-------------------------------------
* Chain [47] with precondition: [V_x=0,0>=V_n+2,V_y>=0] 
    - Upper bound: V_y+2 
    - Complexity: n 
* Chain [46] with precondition: [0>=V_n+2,V_x>=1,V_y>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [45] with precondition: [0>=V_n+2,V_x>=1,V_n>=V_y] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [44] with precondition: [0>=V_n+2,V_x>=2,V_y>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [43] with precondition: [0>=V_x+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [42] with precondition: [0>=V_y+1,V_x>=0,V_y>=V_n+1] 
    - Upper bound: V_x+1 
    - Complexity: n 
* Chain [41] with precondition: [V_x>=0] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_counterex1b_start(V_n,V_x,V_y,B): inf 
Asymptotic class: infinity 
* Total analysis performed in 1578 ms.

