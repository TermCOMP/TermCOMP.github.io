MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_counterex1c_1/6,eval_counterex1c_2/7,eval_counterex1c_5/6,eval_counterex1c_6/7,eval_counterex1c_LeafBlock7_in/5,eval_counterex1c_LeafBlock_in/5,eval_counterex1c_NodeBlock_in/5,eval_counterex1c_bb1_in/5,eval_counterex1c_bb2_in/5,eval_counterex1c_bb3_in/5,eval_counterex1c_bb4_in/5]
1. non_recursive  : [eval_counterex1c_stop/1]
2. non_recursive  : [eval_counterex1c__critedge_in/1]
3. non_recursive  : [eval_counterex1c_NewDefault_in/1]
4. non_recursive  : [eval_counterex1c_bb1_in_loop_cont/2]
5. non_recursive  : [eval_counterex1c_bb0_in/5]
6. non_recursive  : [eval_counterex1c_start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_counterex1c_bb1_in/5
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_counterex1c_bb1_in_loop_cont/2
5. SCC is partially evaluated into eval_counterex1c_bb0_in/5
6. SCC is partially evaluated into eval_counterex1c_start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_counterex1c_bb1_in/5 
* CE 11 is refined into CE [14] 
* CE 9 is refined into CE [15] 
* CE 10 is refined into CE [16] 
* CE 3 is refined into CE [17] 
* CE 6 is refined into CE [18] 
* CE 5 is refined into CE [19] 
* CE 4 is refined into CE [20] 
* CE 7 is refined into CE [21] 
* CE 8 is refined into CE [22] 


### Cost equations --> "Loop" of eval_counterex1c_bb1_in/5 
* CEs [19] --> Loop 14 
* CEs [20] --> Loop 15 
* CEs [21] --> Loop 16 
* CEs [22] --> Loop 17 
* CEs [14] --> Loop 18 
* CEs [15] --> Loop 19 
* CEs [16] --> Loop 20 
* CEs [17] --> Loop 21 
* CEs [18] --> Loop 22 

### Ranking functions of CR eval_counterex1c_bb1_in(V_n,V__04,V__01,V__0,B) 

#### Partial ranking functions of CR eval_counterex1c_bb1_in(V_n,V__04,V__01,V__0,B) 
* Partial RF of phase [14,15,16,17]:
  - RF of loop [14:1,15:1]:
    V__04+1 depends on loops [16:1,17:1] 
  - RF of loop [15:1]:
    V__0 depends on loops [16:1] 
    V__01+1
  - RF of loop [16:1]:
    -V__0+1 depends on loops [15:1] 
  - RF of loop [16:1,17:1]:
    V_n-V__04+1 depends on loops [14:1,15:1] 


### Specialization of cost equations eval_counterex1c_bb1_in_loop_cont/2 
* CE 13 is refined into CE [23] 
* CE 12 is refined into CE [24] 


### Cost equations --> "Loop" of eval_counterex1c_bb1_in_loop_cont/2 
* CEs [23] --> Loop 23 
* CEs [24] --> Loop 24 

### Ranking functions of CR eval_counterex1c_bb1_in_loop_cont(A,B) 

#### Partial ranking functions of CR eval_counterex1c_bb1_in_loop_cont(A,B) 


### Specialization of cost equations eval_counterex1c_bb0_in/5 
* CE 2 is refined into CE [25,26,27,28,29,30,31,32,33] 


### Cost equations --> "Loop" of eval_counterex1c_bb0_in/5 
* CEs [32,33] --> Loop 25 
* CEs [31] --> Loop 26 
* CEs [26] --> Loop 27 
* CEs [27] --> Loop 28 
* CEs [28] --> Loop 29 
* CEs [25] --> Loop 30 
* CEs [30] --> Loop 31 
* CEs [29] --> Loop 32 

### Ranking functions of CR eval_counterex1c_bb0_in(V_n,V_b,V_x,V_y,B) 

#### Partial ranking functions of CR eval_counterex1c_bb0_in(V_n,V_b,V_x,V_y,B) 


### Specialization of cost equations eval_counterex1c_start/5 
* CE 1 is refined into CE [34,35,36,37,38,39,40,41] 


### Cost equations --> "Loop" of eval_counterex1c_start/5 
* CEs [41] --> Loop 33 
* CEs [40] --> Loop 34 
* CEs [39] --> Loop 35 
* CEs [38] --> Loop 36 
* CEs [37] --> Loop 37 
* CEs [36] --> Loop 38 
* CEs [35] --> Loop 39 
* CEs [34] --> Loop 40 

### Ranking functions of CR eval_counterex1c_start(V_n,V_b,V_x,V_y,B) 

#### Partial ranking functions of CR eval_counterex1c_start(V_n,V_b,V_x,V_y,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_counterex1c_bb1_in(V_n,V__04,V__01,V__0,B):
* Chain [[14,15,16,17]]...: 3*it(14)+1*it(15)+0
  Such that:it(15) =< V__01+1

  with precondition: [1>=V__0,V__0>=0,V__01>=0,V_n>=V__04,V__04>=0] 

* Chain [[14,15,16,17],20]: 3*it(14)+1*it(15)+0
  Such that:it(15) =< V__01+1

  with precondition: [B=3,1>=V__0,V__04>=0,V__01>=0,V__0>=0,V__0+V_n>=V__04+1] 

* Chain [[14,15,16,17],19]: 3*it(14)+1*it(15)+0
  Such that:it(15) =< V__01+1

  with precondition: [B=3,1>=V__0,V__04>=0,V__01>=0,V__0>=0,V__0+V_n>=V__04+1] 

* Chain [[14,15,16,17],18]: 3*it(14)+1*it(15)+0
  Such that:it(15) =< V__01

  with precondition: [B=3,1>=V__0,V__0>=0,V_n>=V__04,V__04>=V__0,V__01>=V__0] 

* Chain [22]: 0
  with precondition: [B=2,0>=V__0+1,V__04>=0,V__01>=0,V_n>=V__04] 

* Chain [21]: 0
  with precondition: [B=2,V__04>=0,V__01>=0,V__0>=2,V_n>=V__04] 

* Chain [20]: 0
  with precondition: [B=3,0>=V__04+1] 

* Chain [19]: 0
  with precondition: [B=3,0>=V__01+1] 

* Chain [18]: 0
  with precondition: [B=3,V__04>=V_n+1] 


#### Cost of chains of eval_counterex1c_bb1_in_loop_cont(A,B):
* Chain [24]: 0
  with precondition: [A=2] 

* Chain [23]: 0
  with precondition: [A=3] 


#### Cost of chains of eval_counterex1c_bb0_in(V_n,V_b,V_x,V_y,B):
* Chain [32]: 2*s(6)+6*s(7)+0
  Such that:s(5) =< V_x+1
s(6) =< s(5)

  with precondition: [1>=V_b,V_b>=0,V_x>=0,V_y>=0,V_b+V_n>=V_y+1] 

* Chain [31]: 1*s(8)+3*s(9)+0
  Such that:s(8) =< V_x

  with precondition: [1>=V_b,V_b>=0,V_x>=V_b,V_y>=V_b,V_n>=V_y] 

* Chain [30]: 0
  with precondition: [0>=V_b+1,V_x>=0,V_y>=0,V_n>=V_y] 

* Chain [29]: 0
  with precondition: [0>=V_x+1] 

* Chain [28]: 0
  with precondition: [0>=V_y+1] 

* Chain [27]: 0
  with precondition: [V_b>=2,V_x>=0,V_y>=0,V_n>=V_y] 

* Chain [26]: 0
  with precondition: [V_y>=V_n+1] 

* Chain [25]...: 2*s(10)+6*s(11)+0
  Such that:aux(18) =< V_x+1
s(10) =< aux(18)

  with precondition: [1>=V_b,V_b>=0,V_x>=0,V_y>=0,V_n>=V_y] 


#### Cost of chains of eval_counterex1c_start(V_n,V_b,V_x,V_y,B):
* Chain [40]: 2*s(15)+6*s(16)+0
  Such that:s(14) =< V_x+1
s(15) =< s(14)

  with precondition: [1>=V_b,V_b>=0,V_x>=0,V_y>=0,V_b+V_n>=V_y+1] 

* Chain [39]: 1*s(17)+3*s(18)+0
  Such that:s(17) =< V_x

  with precondition: [1>=V_b,V_b>=0,V_x>=V_b,V_y>=V_b,V_n>=V_y] 

* Chain [38]: 0
  with precondition: [0>=V_b+1,V_x>=0,V_y>=0,V_n>=V_y] 

* Chain [37]: 0
  with precondition: [0>=V_x+1] 

* Chain [36]: 0
  with precondition: [0>=V_y+1] 

* Chain [35]: 0
  with precondition: [V_b>=2,V_x>=0,V_y>=0,V_n>=V_y] 

* Chain [34]: 0
  with precondition: [V_y>=V_n+1] 

* Chain [33]...: 2*s(20)+6*s(21)+0
  Such that:s(19) =< V_x+1
s(20) =< s(19)

  with precondition: [1>=V_b,V_b>=0,V_x>=0,V_y>=0,V_n>=V_y] 


Closed-form bounds of eval_counterex1c_start(V_n,V_b,V_x,V_y,B): 
-------------------------------------
* Chain [40] with precondition: [1>=V_b,V_b>=0,V_x>=0,V_y>=0,V_n+V_b>=V_y+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [39] with precondition: [1>=V_b,V_b>=0,V_x>=V_b,V_y>=V_b,V_n>=V_y] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [38] with precondition: [0>=V_b+1,V_x>=0,V_y>=0,V_n>=V_y] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [37] with precondition: [0>=V_x+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [36] with precondition: [0>=V_y+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [35] with precondition: [V_b>=2,V_x>=0,V_y>=0,V_n>=V_y] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [34] with precondition: [V_y>=V_n+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [33]... with precondition: [1>=V_b,V_b>=0,V_x>=0,V_y>=0,V_n>=V_y] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_counterex1c_start(V_n,V_b,V_x,V_y,B): inf 
Asymptotic class: infinity 
* Total analysis performed in 127 ms.

