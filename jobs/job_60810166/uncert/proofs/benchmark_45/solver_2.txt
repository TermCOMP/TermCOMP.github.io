WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_foo_bb1_in/3,eval_foo_bb2_in/3]
1. recursive  : [eval_foo_bb3_in/3,eval_foo_bb4_in/3]
2. non_recursive  : [eval_foo_stop/1]
3. non_recursive  : [eval_foo_bb5_in/1]
4. non_recursive  : [eval_foo_bb3_in_loop_cont/2]
5. non_recursive  : [eval_foo_bb1_in_loop_cont/4]
6. non_recursive  : [eval_foo_bb0_in/3]
7. non_recursive  : [eval_foo_start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_foo_bb1_in/3
1. SCC is partially evaluated into eval_foo_bb3_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_foo_bb1_in_loop_cont/4
6. SCC is partially evaluated into eval_foo_bb0_in/3
7. SCC is partially evaluated into eval_foo_start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_foo_bb1_in/3 
* CE 6 is refined into CE [10] 
* CE 5 is refined into CE [11] 


### Cost equations --> "Loop" of eval_foo_bb1_in/3 
* CEs [11] --> Loop 10 
* CEs [10] --> Loop 11 

### Ranking functions of CR eval_foo_bb1_in(V__01,B,C) 
* RF of phase [10]: [V__01]

#### Partial ranking functions of CR eval_foo_bb1_in(V__01,B,C) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    V__01


### Specialization of cost equations eval_foo_bb3_in/3 
* CE 9 is refined into CE [12] 
* CE 8 is refined into CE [13] 


### Cost equations --> "Loop" of eval_foo_bb3_in/3 
* CEs [13] --> Loop 12 
* CEs [12] --> Loop 13 

### Ranking functions of CR eval_foo_bb3_in(V_y,V__12,B) 
* RF of phase [12]: [V_y-V__12]

#### Partial ranking functions of CR eval_foo_bb3_in(V_y,V__12,B) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V_y-V__12


### Specialization of cost equations eval_foo_bb1_in_loop_cont/4 
* CE 7 is refined into CE [14,15] 


### Cost equations --> "Loop" of eval_foo_bb1_in_loop_cont/4 
* CEs [15] --> Loop 14 
* CEs [14] --> Loop 15 

### Ranking functions of CR eval_foo_bb1_in_loop_cont(A,B,C,D) 

#### Partial ranking functions of CR eval_foo_bb1_in_loop_cont(A,B,C,D) 


### Specialization of cost equations eval_foo_bb0_in/3 
* CE 4 is refined into CE [16] 
* CE 2 is refined into CE [17] 
* CE 3 is refined into CE [18] 


### Cost equations --> "Loop" of eval_foo_bb0_in/3 
* CEs [16] --> Loop 16 
* CEs [17] --> Loop 17 
* CEs [18] --> Loop 18 

### Ranking functions of CR eval_foo_bb0_in(V_x,V_y,B) 

#### Partial ranking functions of CR eval_foo_bb0_in(V_x,V_y,B) 


### Specialization of cost equations eval_foo_start/5 
* CE 1 is refined into CE [19,20,21] 


### Cost equations --> "Loop" of eval_foo_start/5 
* CEs [21] --> Loop 19 
* CEs [20] --> Loop 20 
* CEs [19] --> Loop 21 

### Ranking functions of CR eval_foo_start(V_x,V_y,V_z,V_i,B) 

#### Partial ranking functions of CR eval_foo_start(V_x,V_y,V_z,V_i,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_foo_bb1_in(V__01,B,C):
* Chain [[10],11]: 1*it(10)+0
  Such that:it(10) =< V__01

  with precondition: [B=3,C=0,V__01>=1] 


#### Cost of chains of eval_foo_bb3_in(V_y,V__12,B):
* Chain [[12],13]: 1*it(12)+0
  Such that:it(12) =< V_y-V__12

  with precondition: [B=2,V_y>=1,V_y>=V__12+1] 

* Chain [13]: 0
  with precondition: [B=2,V_y>=1,V__12>=V_y] 


#### Cost of chains of eval_foo_bb1_in_loop_cont(A,B,C,D):
* Chain [15]: 0
  with precondition: [A=3,B>=1,C>=B] 

* Chain [14]: 1*s(1)+0
  Such that:s(1) =< B-C

  with precondition: [A=3,B>=1,B>=C+1] 


#### Cost of chains of eval_foo_bb0_in(V_x,V_y,B):
* Chain [18]: 0
  with precondition: [0>=V_x] 

* Chain [17]: 0
  with precondition: [0>=V_y] 

* Chain [16]: 1*s(2)+1*s(3)+0
  Such that:s(2) =< V_x
s(3) =< V_y

  with precondition: [V_x>=1,V_y>=1] 


#### Cost of chains of eval_foo_start(V_x,V_y,V_z,V_i,B):
* Chain [21]: 0
  with precondition: [0>=V_x] 

* Chain [20]: 0
  with precondition: [0>=V_y] 

* Chain [19]: 1*s(4)+1*s(5)+0
  Such that:s(4) =< V_x
s(5) =< V_y

  with precondition: [V_x>=1,V_y>=1] 


Closed-form bounds of eval_foo_start(V_x,V_y,V_z,V_i,B): 
-------------------------------------
* Chain [21] with precondition: [0>=V_x] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [20] with precondition: [0>=V_y] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [19] with precondition: [V_x>=1,V_y>=1] 
    - Upper bound: V_x+V_y 
    - Complexity: n 

### Maximum cost of eval_foo_start(V_x,V_y,V_z,V_i,B): nat(V_y)+nat(V_x) 
Asymptotic class: n 
* Total analysis performed in 34 ms.

