WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_foo_bb2_in/4,eval_foo_bb3_in/4]
1. recursive  : [eval_foo_bb1_in/3,eval_foo_bb2_in_loop_cont/5,eval_foo_bb4_in/4]
2. non_recursive  : [eval_foo_stop/1]
3. non_recursive  : [eval_foo_bb5_in/1]
4. non_recursive  : [eval_foo_bb1_in_loop_cont/2]
5. non_recursive  : [eval_foo_bb0_in/3]
6. non_recursive  : [eval_foo_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_foo_bb2_in/4
1. SCC is partially evaluated into eval_foo_bb1_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_foo_bb0_in/3
6. SCC is partially evaluated into eval_foo_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_foo_bb2_in/4 
* CE 6 is refined into CE [7] 
* CE 5 is refined into CE [8] 


### Cost equations --> "Loop" of eval_foo_bb2_in/4 
* CEs [8] --> Loop 7 
* CEs [7] --> Loop 8 

### Ranking functions of CR eval_foo_bb2_in(V__0,V__01,B,C) 
* RF of phase [7]: [V__0-V__01+1]

#### Partial ranking functions of CR eval_foo_bb2_in(V__0,V__01,B,C) 
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    V__0-V__01+1


### Specialization of cost equations eval_foo_bb1_in/3 
* CE 4 is refined into CE [9] 
* CE 3 is refined into CE [10,11] 


### Cost equations --> "Loop" of eval_foo_bb1_in/3 
* CEs [10] --> Loop 9 
* CEs [11] --> Loop 10 
* CEs [9] --> Loop 11 

### Ranking functions of CR eval_foo_bb1_in(V_n,V__0,B) 
* RF of phase [9]: [V_n-V__0]
* RF of phase [10]: [-V__0,V_n-V__0]

#### Partial ranking functions of CR eval_foo_bb1_in(V_n,V__0,B) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V_n-V__0
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    -V__0
    V_n-V__0


### Specialization of cost equations eval_foo_bb0_in/3 
* CE 2 is refined into CE [12,13,14,15] 


### Cost equations --> "Loop" of eval_foo_bb0_in/3 
* CEs [15] --> Loop 12 
* CEs [14] --> Loop 13 
* CEs [12] --> Loop 14 
* CEs [13] --> Loop 15 

### Ranking functions of CR eval_foo_bb0_in(V_i,V_n,B) 

#### Partial ranking functions of CR eval_foo_bb0_in(V_i,V_n,B) 


### Specialization of cost equations eval_foo_start/4 
* CE 1 is refined into CE [16,17,18,19] 


### Cost equations --> "Loop" of eval_foo_start/4 
* CEs [19] --> Loop 16 
* CEs [18] --> Loop 17 
* CEs [17] --> Loop 18 
* CEs [16] --> Loop 19 

### Ranking functions of CR eval_foo_start(V_i,V_j,V_n,B) 

#### Partial ranking functions of CR eval_foo_start(V_i,V_j,V_n,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_foo_bb2_in(V__0,V__01,B,C):
* Chain [[7],8]: 1*it(7)+0
  Such that:it(7) =< -V__01+C

  with precondition: [B=2,V__0+1=C,V__01>=0,V__0>=V__01] 

* Chain [8]: 0
  with precondition: [B=2,V__01=C,V__01>=0,V__01>=V__0+1] 


#### Cost of chains of eval_foo_bb1_in(V_n,V__0,B):
* Chain [[10],[9],11]: 1*it(9)+1*it(10)+1*s(3)+0
  Such that:it(10) =< -V__0
aux(2) =< V_n
it(9) =< aux(2)
s(3) =< it(9)*aux(2)

  with precondition: [B=3,0>=V__0+1,V_n>=1] 

* Chain [[10],11]: 1*it(10)+0
  Such that:it(10) =< V_n-V__0

  with precondition: [B=3,0>=V_n,V_n>=V__0+1] 

* Chain [[9],11]: 1*it(9)+1*s(3)+0
  Such that:aux(1) =< V_n
it(9) =< V_n-V__0
s(3) =< it(9)*aux(1)

  with precondition: [B=3,V__0>=0,V_n>=V__0+1] 

* Chain [11]: 0
  with precondition: [B=3,V__0>=V_n] 


#### Cost of chains of eval_foo_bb0_in(V_i,V_n,B):
* Chain [15]: 1*s(4)+1*s(6)+1*s(7)+0
  Such that:s(4) =< -V_i
s(5) =< V_n
s(6) =< s(5)
s(7) =< s(6)*s(5)

  with precondition: [0>=V_i+1,V_n>=1] 

* Chain [14]: 1*s(8)+0
  Such that:s(8) =< -V_i+V_n

  with precondition: [0>=V_n,V_n>=V_i+1] 

* Chain [13]: 1*s(10)+1*s(11)+0
  Such that:s(10) =< -V_i+V_n
s(9) =< V_n
s(11) =< s(10)*s(9)

  with precondition: [V_i>=0,V_n>=V_i+1] 

* Chain [12]: 0
  with precondition: [V_i>=V_n] 


#### Cost of chains of eval_foo_start(V_i,V_j,V_n,B):
* Chain [19]: 1*s(12)+1*s(14)+1*s(15)+0
  Such that:s(12) =< -V_i
s(13) =< V_n
s(14) =< s(13)
s(15) =< s(14)*s(13)

  with precondition: [0>=V_i+1,V_n>=1] 

* Chain [18]: 1*s(16)+0
  Such that:s(16) =< -V_i+V_n

  with precondition: [0>=V_n,V_n>=V_i+1] 

* Chain [17]: 1*s(17)+1*s(19)+0
  Such that:s(17) =< -V_i+V_n
s(18) =< V_n
s(19) =< s(17)*s(18)

  with precondition: [V_i>=0,V_n>=V_i+1] 

* Chain [16]: 0
  with precondition: [V_i>=V_n] 


Closed-form bounds of eval_foo_start(V_i,V_j,V_n,B): 
-------------------------------------
* Chain [19] with precondition: [0>=V_i+1,V_n>=1] 
    - Upper bound: V_n*V_n+V_n+ -V_i 
    - Complexity: n^2 
* Chain [18] with precondition: [0>=V_n,V_n>=V_i+1] 
    - Upper bound: -V_i+V_n 
    - Complexity: n 
* Chain [17] with precondition: [V_i>=0,V_n>=V_i+1] 
    - Upper bound: -V_i+V_n+(-V_i+V_n)*V_n 
    - Complexity: n^2 
* Chain [16] with precondition: [V_i>=V_n] 
    - Upper bound: 0 
    - Complexity: constant 

### Maximum cost of eval_foo_start(V_i,V_j,V_n,B): max([nat(-V_i+V_n)*nat(V_n)+nat(-V_i+V_n),nat(V_n)*nat(V_n)+nat(V_n)+nat(-V_i)]) 
Asymptotic class: n^2 
* Total analysis performed in 55 ms.

