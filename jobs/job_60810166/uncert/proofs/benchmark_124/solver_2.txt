MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_foo_bb1_in/3,eval_foo_bb2_in/3]
1. non_recursive  : [eval_foo_stop/1]
2. non_recursive  : [eval_foo_bb3_in/1]
3. non_recursive  : [eval_foo_bb1_in_loop_cont/2]
4. non_recursive  : [eval_foo_3/3]
5. non_recursive  : [eval_foo_2/2]
6. non_recursive  : [eval_foo_1/2]
7. non_recursive  : [eval_foo_0/1]
8. non_recursive  : [eval_foo_bb0_in/1]
9. non_recursive  : [eval_foo_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_foo_bb1_in/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_foo_3/3
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_foo_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_foo_bb1_in/3 
* CE 4 is refined into CE [5] 
* CE 3 is refined into CE [6] 


### Cost equations --> "Loop" of eval_foo_bb1_in/3 
* CEs [6] --> Loop 5 
* CEs [5] --> Loop 6 

### Ranking functions of CR eval_foo_bb1_in(V__01,V__0,B) 

#### Partial ranking functions of CR eval_foo_bb1_in(V__01,V__0,B) 


### Specialization of cost equations eval_foo_3/3 
* CE 2 is refined into CE [7,8,9] 


### Cost equations --> "Loop" of eval_foo_3/3 
* CEs [9] --> Loop 7 
* CEs [7] --> Loop 8 
* CEs [8] --> Loop 9 

### Ranking functions of CR eval_foo_3(V_1,V_2,B) 

#### Partial ranking functions of CR eval_foo_3(V_1,V_2,B) 


### Specialization of cost equations eval_foo_start/3 
* CE 1 is refined into CE [10,11,12] 


### Cost equations --> "Loop" of eval_foo_start/3 
* CEs [12] --> Loop 10 
* CEs [10,11] --> Loop 11 

### Ranking functions of CR eval_foo_start(V_a,V_b,B) 

#### Partial ranking functions of CR eval_foo_start(V_a,V_b,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_foo_bb1_in(V__01,V__0,B):
* Chain [[5]]...: 1*it(5)+0
  with precondition: [V__0>=V__01+1,B=2] 

* Chain [[5],6]: 1*it(5)+0
  with precondition: [B=2,V__0>=V__01+1] 

* Chain [6]: 0
  with precondition: [B=2,V__01>=V__0] 


#### Cost of chains of eval_foo_3(V_1,V_2,B):
* Chain [9]: 0
  with precondition: [0>=V_1+V_2] 

* Chain [8]: 1*s(1)+0
  with precondition: [V_1+V_2>=1] 

* Chain [7]...: 1*s(2)+0
  with precondition: [V_1+V_2>=1] 


#### Cost of chains of eval_foo_start(V_a,V_b,B):
* Chain [11]: 1*aux(1)+0
  with precondition: [] 

* Chain [10]...: 1*s(4)+0
  with precondition: [] 


Closed-form bounds of eval_foo_start(V_a,V_b,B): 
-------------------------------------
* Chain [11] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [10]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_foo_start(V_a,V_b,B): inf 
Asymptotic class: infinity 
* Total analysis performed in 16 ms.

