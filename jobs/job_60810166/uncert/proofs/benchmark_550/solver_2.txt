WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_Perl_scan_vstring_4/4,eval_Perl_scan_vstring_5/5,eval_Perl_scan_vstring_bb1_in/4,eval_Perl_scan_vstring_bb2_in/4,eval_Perl_scan_vstring_bb3_in/5]
1. non_recursive  : [eval_Perl_scan_vstring_stop/1]
2. non_recursive  : [eval_Perl_scan_vstring_bb12_in/1]
3. recursive  : [eval_Perl_scan_vstring_bb5_in/4]
4. recursive  : [eval_Perl_scan_vstring_22/8,eval_Perl_scan_vstring_23/9,eval_Perl_scan_vstring_bb10_in/8,eval_Perl_scan_vstring_bb11_in/9,eval_Perl_scan_vstring_bb9_in/8]
5. recursive  : [eval_Perl_scan_vstring_18/5,eval_Perl_scan_vstring_19/6,eval_Perl_scan_vstring__critedge2_in/4,eval_Perl_scan_vstring_bb5_in_loop_cont/6,eval_Perl_scan_vstring_bb6_in/5,eval_Perl_scan_vstring_bb7_in/5,eval_Perl_scan_vstring_bb8_in/6,eval_Perl_scan_vstring_bb9_in_loop_cont/5]
6. non_recursive  : [eval_Perl_scan_vstring__critedge2_in_loop_cont/2]
7. non_recursive  : [eval_Perl_scan_vstring_11/5]
8. non_recursive  : [eval_Perl_scan_vstring_10/4]
9. non_recursive  : [eval_Perl_scan_vstring_bb4_in/4]
10. non_recursive  : [eval_Perl_scan_vstring_9/5]
11. non_recursive  : [eval_Perl_scan_vstring_8/4]
12. non_recursive  : [eval_Perl_scan_vstring__critedge_in/4]
13. non_recursive  : [eval_Perl_scan_vstring_bb1_in_loop_cont/5]
14. non_recursive  : [eval_Perl_scan_vstring_1/4]
15. non_recursive  : [eval_Perl_scan_vstring_0/3]
16. non_recursive  : [eval_Perl_scan_vstring_bb0_in/3]
17. non_recursive  : [eval_Perl_scan_vstring_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_Perl_scan_vstring_bb1_in/4
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_Perl_scan_vstring_bb5_in/4
4. SCC is partially evaluated into eval_Perl_scan_vstring_bb9_in/8
5. SCC is partially evaluated into eval_Perl_scan_vstring__critedge2_in/4
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_Perl_scan_vstring_11/5
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_Perl_scan_vstring_9/5
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is partially evaluated into eval_Perl_scan_vstring_1/4
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is partially evaluated into eval_Perl_scan_vstring_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_Perl_scan_vstring_bb1_in/4 
* CE 5 is refined into CE [23] 
* CE 7 is refined into CE [24] 
* CE 6 is refined into CE [25] 


### Cost equations --> "Loop" of eval_Perl_scan_vstring_bb1_in/4 
* CEs [25] --> Loop 22 
* CEs [23] --> Loop 23 
* CEs [24] --> Loop 24 

### Ranking functions of CR eval_Perl_scan_vstring_bb1_in(V_PL_bufend,V_pos_1,B,C) 
* RF of phase [22]: [V_PL_bufend-V_pos_1]

#### Partial ranking functions of CR eval_Perl_scan_vstring_bb1_in(V_PL_bufend,V_pos_1,B,C) 
* Partial RF of phase [22]:
  - RF of loop [22:1]:
    V_PL_bufend-V_pos_1


### Specialization of cost equations eval_Perl_scan_vstring_bb5_in/4 
* CE 19 is refined into CE [26] 
* CE 18 is refined into CE [27] 


### Cost equations --> "Loop" of eval_Perl_scan_vstring_bb5_in/4 
* CEs [27] --> Loop 25 
* CEs [26] --> Loop 26 

### Ranking functions of CR eval_Perl_scan_vstring_bb5_in(V__1,V_end_0,B,C) 
* RF of phase [25]: [-V__1+V_end_0]

#### Partial ranking functions of CR eval_Perl_scan_vstring_bb5_in(V__1,V_end_0,B,C) 
* Partial RF of phase [25]:
  - RF of loop [25:1]:
    -V__1+V_end_0


### Specialization of cost equations eval_Perl_scan_vstring_bb9_in/8 
* CE 20 is refined into CE [28] 
* CE 22 is refined into CE [29] 
* CE 21 is refined into CE [30] 


### Cost equations --> "Loop" of eval_Perl_scan_vstring_bb9_in/8 
* CEs [30] --> Loop 27 
* CEs [28] --> Loop 28 
* CEs [29] --> Loop 29 

### Ranking functions of CR eval_Perl_scan_vstring_bb9_in(V_PL_bufend,V_pos_2,V__1,V_end_0,V_16,V_pos_3,B,C) 
* RF of phase [27]: [V_PL_bufend-V_pos_3]

#### Partial ranking functions of CR eval_Perl_scan_vstring_bb9_in(V_PL_bufend,V_pos_2,V__1,V_end_0,V_16,V_pos_3,B,C) 
* Partial RF of phase [27]:
  - RF of loop [27:1]:
    V_PL_bufend-V_pos_3


### Specialization of cost equations eval_Perl_scan_vstring__critedge2_in/4 
* CE 14 is refined into CE [31,32] 
* CE 17 is refined into CE [33,34] 
* CE 15 is refined into CE [35,36,37,38,39,40] 
* CE 16 is refined into CE [41,42,43,44,45,46] 


### Cost equations --> "Loop" of eval_Perl_scan_vstring__critedge2_in/4 
* CEs [37,43] --> Loop 30 
* CEs [40,46] --> Loop 31 
* CEs [35,41] --> Loop 32 
* CEs [38,44] --> Loop 33 
* CEs [39,45] --> Loop 34 
* CEs [36,42] --> Loop 35 
* CEs [31] --> Loop 36 
* CEs [32] --> Loop 37 
* CEs [33] --> Loop 38 
* CEs [34] --> Loop 39 

### Ranking functions of CR eval_Perl_scan_vstring__critedge2_in(V_PL_bufend,V_pos_2,V__1,B) 
* RF of phase [30,31,34,35]: [V_PL_bufend-V_pos_2-1]

#### Partial ranking functions of CR eval_Perl_scan_vstring__critedge2_in(V_PL_bufend,V_pos_2,V__1,B) 
* Partial RF of phase [30,31,34,35]:
  - RF of loop [30:1]:
    V_PL_bufend/2-V__1/2-3/2 depends on loops [31:1,34:1] 
  - RF of loop [30:1,31:1]:
    V_PL_bufend/2-V_pos_2/2-1
  - RF of loop [31:1]:
    -V_pos_2+V__1+1 depends on loops [30:1,35:1] 
  - RF of loop [34:1,35:1]:
    V_PL_bufend-V_pos_2-1
  - RF of loop [35:1]:
    V_PL_bufend/2-V__1/2-1 depends on loops [31:1,34:1] 
    V_pos_2-V__1 depends on loops [30:1,31:1,34:1] 


### Specialization of cost equations eval_Perl_scan_vstring_11/5 
* CE 12 is refined into CE [47,48,49,50,51,52,53] 
* CE 11 is refined into CE [54,55,56,57,58,59,60] 
* CE 13 is refined into CE [61,62,63,64,65,66,67] 


### Cost equations --> "Loop" of eval_Perl_scan_vstring_11/5 
* CEs [53] --> Loop 40 
* CEs [52] --> Loop 41 
* CEs [49] --> Loop 42 
* CEs [50] --> Loop 43 
* CEs [47] --> Loop 44 
* CEs [51] --> Loop 45 
* CEs [48] --> Loop 46 
* CEs [60] --> Loop 47 
* CEs [59] --> Loop 48 
* CEs [56] --> Loop 49 
* CEs [57] --> Loop 50 
* CEs [54] --> Loop 51 
* CEs [58] --> Loop 52 
* CEs [55] --> Loop 53 
* CEs [67] --> Loop 54 
* CEs [66] --> Loop 55 
* CEs [63] --> Loop 56 
* CEs [64] --> Loop 57 
* CEs [61] --> Loop 58 
* CEs [65] --> Loop 59 
* CEs [62] --> Loop 60 

### Ranking functions of CR eval_Perl_scan_vstring_11(V_s,V_PL_bufend,V_pos_1,V_9,B) 

#### Partial ranking functions of CR eval_Perl_scan_vstring_11(V_s,V_PL_bufend,V_pos_1,V_9,B) 


### Specialization of cost equations eval_Perl_scan_vstring_9/5 
* CE 9 is refined into CE [68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88] 
* CE 8 is refined into CE [89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109] 
* CE 10 is refined into CE [110] 


### Cost equations --> "Loop" of eval_Perl_scan_vstring_9/5 
* CEs [74,81,88] --> Loop 61 
* CEs [73,80,87] --> Loop 62 
* CEs [72,79,86] --> Loop 63 
* CEs [71] --> Loop 64 
* CEs [78,85] --> Loop 65 
* CEs [70] --> Loop 66 
* CEs [77,84] --> Loop 67 
* CEs [76,83] --> Loop 68 
* CEs [75,82] --> Loop 69 
* CEs [69] --> Loop 70 
* CEs [68] --> Loop 71 
* CEs [95,102,109] --> Loop 72 
* CEs [94,101,108] --> Loop 73 
* CEs [93,100,107] --> Loop 74 
* CEs [92] --> Loop 75 
* CEs [99,106] --> Loop 76 
* CEs [91] --> Loop 77 
* CEs [98,105] --> Loop 78 
* CEs [97,104] --> Loop 79 
* CEs [96,103] --> Loop 80 
* CEs [90] --> Loop 81 
* CEs [89] --> Loop 82 
* CEs [110] --> Loop 83 

### Ranking functions of CR eval_Perl_scan_vstring_9(V_s,V_PL_bufend,V_pos_1,V_7,B) 

#### Partial ranking functions of CR eval_Perl_scan_vstring_9(V_s,V_PL_bufend,V_pos_1,V_7,B) 


### Specialization of cost equations eval_Perl_scan_vstring_1/4 
* CE 3 is refined into CE [111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150] 
* CE 2 is refined into CE [151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190] 
* CE 4 is refined into CE [191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236] 


### Cost equations --> "Loop" of eval_Perl_scan_vstring_1/4 
* CEs [116,117,118,119,120] --> Loop 84 
* CEs [143,150] --> Loop 85 
* CEs [128,135,142,149] --> Loop 86 
* CEs [127,134,138,140,141,145,147,148] --> Loop 87 
* CEs [123,125,126,130,132,133,136,137,139,144,146] --> Loop 88 
* CEs [111,112,113,114,115,121] --> Loop 89 
* CEs [156,157,158,159,160] --> Loop 90 
* CEs [183,190] --> Loop 91 
* CEs [168,175,182,189] --> Loop 92 
* CEs [167,174,178,180,181,185,187,188] --> Loop 93 
* CEs [163,165,166,170,172,173,176,177,179,184,186] --> Loop 94 
* CEs [151,152,153,154,155,161] --> Loop 95 
* CEs [122,124,129,131] --> Loop 96 
* CEs [162,164,169,171] --> Loop 97 
* CEs [198,199,200,201,202] --> Loop 98 
* CEs [227,236] --> Loop 99 
* CEs [210,217,222,226,231,235] --> Loop 100 
* CEs [209,216,220,221,224,225,229,230,233,234] --> Loop 101 
* CEs [193,196,206,207,208,213,214,215,218,219,228] --> Loop 102 
* CEs [191,192,195,203] --> Loop 103 
* CEs [194,197,204,205,211,212] --> Loop 104 
* CEs [223,232] --> Loop 105 

### Ranking functions of CR eval_Perl_scan_vstring_1(V_s,V_PL_bufend,V_0,B) 

#### Partial ranking functions of CR eval_Perl_scan_vstring_1(V_s,V_PL_bufend,V_0,B) 


### Specialization of cost equations eval_Perl_scan_vstring_start/3 
* CE 1 is refined into CE [237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258] 


### Cost equations --> "Loop" of eval_Perl_scan_vstring_start/3 
* CEs [244] --> Loop 106 
* CEs [252,258] --> Loop 107 
* CEs [251,257] --> Loop 108 
* CEs [243,250,256] --> Loop 109 
* CEs [242,249,255] --> Loop 110 
* CEs [241,248,254] --> Loop 111 
* CEs [240,247,253] --> Loop 112 
* CEs [239] --> Loop 113 
* CEs [237] --> Loop 114 
* CEs [238,245,246] --> Loop 115 

### Ranking functions of CR eval_Perl_scan_vstring_start(V_s,V_PL_bufend,B) 

#### Partial ranking functions of CR eval_Perl_scan_vstring_start(V_s,V_PL_bufend,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_Perl_scan_vstring_bb1_in(V_PL_bufend,V_pos_1,B,C):
* Chain [[22],24]: 1*it(22)+0
  Such that:it(22) =< V_PL_bufend-V_pos_1

  with precondition: [B=5,V_PL_bufend=C,V_PL_bufend>=V_pos_1+1] 

* Chain [[22],23]: 1*it(22)+0
  Such that:it(22) =< -V_pos_1+C

  with precondition: [B=5,C>=V_pos_1+1,V_PL_bufend>=C+1] 

* Chain [24]: 0
  with precondition: [B=5,V_pos_1=C,V_pos_1>=V_PL_bufend] 

* Chain [23]: 0
  with precondition: [B=5,V_pos_1=C,V_PL_bufend>=V_pos_1+1] 


#### Cost of chains of eval_Perl_scan_vstring_bb5_in(V__1,V_end_0,B,C):
* Chain [[25],26]: 1*it(25)+0
  Such that:it(25) =< -V__1+V_end_0

  with precondition: [B=2,V__1=C,V_end_0>=V__1+1] 

* Chain [26]: 0
  with precondition: [B=2,V_end_0=C,V__1>=V_end_0] 


#### Cost of chains of eval_Perl_scan_vstring_bb9_in(V_PL_bufend,V_pos_2,V__1,V_end_0,V_16,V_pos_3,B,C):
* Chain [[27],29]: 1*it(27)+0
  Such that:it(27) =< V_PL_bufend-V_pos_3

  with precondition: [B=3,V_PL_bufend=C,V_pos_3>=V_pos_2+1,V_PL_bufend>=V_pos_3+1] 

* Chain [[27],28]: 1*it(27)+0
  Such that:it(27) =< -V_pos_3+C

  with precondition: [B=3,V_pos_3>=V_pos_2+1,C>=V_pos_3+1,V_PL_bufend>=C+1] 

* Chain [28]: 0
  with precondition: [B=3,V_pos_3=C,V_pos_3>=V_pos_2+1,V_PL_bufend>=V_pos_3+1] 


#### Cost of chains of eval_Perl_scan_vstring__critedge2_in(V_PL_bufend,V_pos_2,V__1,B):
* Chain [[30,31,34,35],39]: 2*it(30)+6*it(34)+2*s(17)+2*s(23)+0
  Such that:aux(53) =< V_PL_bufend-V__1
aux(57) =< V_pos_2-V__1
aux(37) =< 2*V_pos_2-2*V__1
aux(58) =< V_PL_bufend-V_pos_2
aux(59) =< V_PL_bufend/2-V_pos_2/2
it(30) =< aux(58)
it(34) =< aux(58)
it(30) =< aux(59)
aux(30) =< aux(58)
aux(19) =< aux(58)-2
aux(41) =< max([aux(53),aux(30),aux(30)])
aux(39) =< it(34)*aux(30)
aux(8) =< it(34)*aux(19)
aux(10) =< max([aux(57),aux(58),0])+aux(58)
aux(23) =< it(30)*aux(30)
aux(7) =< it(30)*aux(19)
aux(41) =< aux(10)+1
aux(34) =< aux(23)*2
s(19) =< aux(8)+aux(7)+aux(53)
s(19) =< it(30)*aux(10)
s(24) =< aux(39)+aux(23)+aux(53)
s(24) =< aux(34)+aux(34)+aux(37)
s(24) =< it(34)*aux(41)
s(23) =< s(24)
s(17) =< s(19)

  with precondition: [B=4,V_PL_bufend>=V_pos_2+2] 

* Chain [[30,31,34,35],38]: 2*it(30)+7*it(34)+2*s(17)+2*s(23)+0
  Such that:aux(53) =< V_PL_bufend-V__1
aux(57) =< V_pos_2-V__1
aux(37) =< 2*V_pos_2-2*V__1
aux(60) =< V_PL_bufend-V_pos_2
aux(61) =< V_PL_bufend/2-V_pos_2/2
it(34) =< aux(60)
it(30) =< aux(60)
it(30) =< aux(61)
aux(30) =< aux(60)
aux(19) =< aux(60)-2
aux(41) =< max([aux(53),aux(30),aux(30)])
aux(39) =< it(34)*aux(30)
aux(8) =< it(34)*aux(19)
aux(10) =< max([aux(57),aux(60),0])+aux(60)
aux(23) =< it(30)*aux(30)
aux(7) =< it(30)*aux(19)
aux(41) =< aux(10)+1
aux(34) =< aux(23)*2
s(19) =< aux(8)+aux(7)+aux(53)
s(19) =< it(30)*aux(10)
s(24) =< aux(39)+aux(23)+aux(53)
s(24) =< aux(34)+aux(34)+aux(37)
s(24) =< it(34)*aux(41)
s(23) =< s(24)
s(17) =< s(19)

  with precondition: [B=4,V_PL_bufend>=V_pos_2+3] 

* Chain [[30,31,34,35],37]: 2*it(30)+6*it(34)+2*s(17)+2*s(23)+0
  Such that:aux(53) =< V_PL_bufend-V__1
aux(57) =< V_pos_2-V__1
aux(37) =< 2*V_pos_2-2*V__1
aux(62) =< V_PL_bufend-V_pos_2
aux(63) =< V_PL_bufend/2-V_pos_2/2
it(30) =< aux(62)
it(34) =< aux(62)
it(30) =< aux(63)
aux(30) =< aux(62)
aux(19) =< aux(62)-2
aux(41) =< max([aux(53),aux(30),aux(30)])
aux(39) =< it(34)*aux(30)
aux(8) =< it(34)*aux(19)
aux(10) =< max([aux(57),aux(62),0])+aux(62)
aux(23) =< it(30)*aux(30)
aux(7) =< it(30)*aux(19)
aux(41) =< aux(10)+1
aux(34) =< aux(23)*2
s(19) =< aux(8)+aux(7)+aux(53)
s(19) =< it(30)*aux(10)
s(24) =< aux(39)+aux(23)+aux(53)
s(24) =< aux(34)+aux(34)+aux(37)
s(24) =< it(34)*aux(41)
s(23) =< s(24)
s(17) =< s(19)

  with precondition: [B=4,V_PL_bufend>=V_pos_2+3] 

* Chain [[30,31,34,35],36]: 2*it(30)+7*it(34)+2*s(17)+2*s(23)+0
  Such that:aux(53) =< V_PL_bufend-V__1
aux(57) =< V_pos_2-V__1
aux(37) =< 2*V_pos_2-2*V__1
aux(64) =< V_PL_bufend-V_pos_2
aux(65) =< V_PL_bufend/2-V_pos_2/2
it(34) =< aux(64)
it(30) =< aux(64)
it(30) =< aux(65)
aux(30) =< aux(64)
aux(19) =< aux(64)-2
aux(41) =< max([aux(53),aux(30),aux(30)])
aux(39) =< it(34)*aux(30)
aux(8) =< it(34)*aux(19)
aux(10) =< max([aux(57),aux(64),0])+aux(64)
aux(23) =< it(30)*aux(30)
aux(7) =< it(30)*aux(19)
aux(41) =< aux(10)+1
aux(34) =< aux(23)*2
s(19) =< aux(8)+aux(7)+aux(53)
s(19) =< it(30)*aux(10)
s(24) =< aux(39)+aux(23)+aux(53)
s(24) =< aux(34)+aux(34)+aux(37)
s(24) =< it(34)*aux(41)
s(23) =< s(24)
s(17) =< s(19)

  with precondition: [B=4,V_PL_bufend>=V_pos_2+4] 

* Chain [[30,31,34,35],33,38]: 2*it(30)+9*it(34)+2*s(17)+2*s(23)+1
  Such that:aux(53) =< V_PL_bufend-V__1
aux(57) =< V_pos_2-V__1
aux(37) =< 2*V_pos_2-2*V__1
aux(68) =< V_PL_bufend-V_pos_2
aux(69) =< V_PL_bufend/2-V_pos_2/2
aux(55) =< aux(68)
aux(55) =< aux(69)
it(34) =< aux(68)
it(30) =< aux(68)
it(30) =< aux(69)
it(30) =< aux(55)
aux(30) =< aux(68)
aux(19) =< aux(68)-2
aux(41) =< max([aux(53),aux(30),aux(30)])
aux(39) =< it(34)*aux(30)
aux(8) =< it(34)*aux(19)
aux(10) =< max([aux(57),aux(68),0])+aux(68)
aux(23) =< it(30)*aux(30)
aux(7) =< it(30)*aux(19)
aux(41) =< aux(10)+1
aux(34) =< aux(23)*2
s(19) =< aux(8)+aux(7)+aux(53)
s(19) =< it(30)*aux(10)
s(24) =< aux(39)+aux(23)+aux(53)
s(24) =< aux(34)+aux(34)+aux(37)
s(24) =< it(34)*aux(41)
s(23) =< s(24)
s(17) =< s(19)

  with precondition: [B=4,V_PL_bufend>=V_pos_2+3] 

* Chain [[30,31,34,35],32,38]: 2*it(30)+11*it(34)+2*s(17)+2*s(23)+1
  Such that:aux(53) =< V_PL_bufend-V__1
aux(57) =< V_pos_2-V__1
aux(37) =< 2*V_pos_2-2*V__1
aux(73) =< V_PL_bufend-V_pos_2
aux(74) =< V_PL_bufend/2-V_pos_2/2
aux(55) =< aux(73)
aux(55) =< aux(74)
it(34) =< aux(73)
it(30) =< aux(73)
it(30) =< aux(74)
it(30) =< aux(55)
aux(30) =< aux(73)
aux(19) =< aux(73)-2
aux(41) =< max([aux(53),aux(30),aux(30)])
aux(39) =< it(34)*aux(30)
aux(8) =< it(34)*aux(19)
aux(10) =< max([aux(57),aux(73),0])+aux(73)
aux(23) =< it(30)*aux(30)
aux(7) =< it(30)*aux(19)
aux(41) =< aux(10)+1
aux(34) =< aux(23)*2
s(19) =< aux(8)+aux(7)+aux(53)
s(19) =< it(30)*aux(10)
s(24) =< aux(39)+aux(23)+aux(53)
s(24) =< aux(34)+aux(34)+aux(37)
s(24) =< it(34)*aux(41)
s(23) =< s(24)
s(17) =< s(19)

  with precondition: [B=4,V_PL_bufend>=V_pos_2+4] 

* Chain [39]: 0
  with precondition: [B=4,V_pos_2+1>=V_PL_bufend,V__1>=V_pos_2] 

* Chain [38]: 1*s(25)+0
  Such that:s(25) =< V_pos_2-V__1

  with precondition: [B=4,V_pos_2+1>=V_PL_bufend,V_pos_2>=V__1+1] 

* Chain [37]: 0
  with precondition: [B=4,V_PL_bufend>=V_pos_2+2,V__1>=V_pos_2] 

* Chain [36]: 1*s(26)+0
  Such that:s(26) =< V_pos_2-V__1

  with precondition: [B=4,V_PL_bufend>=V_pos_2+2,V_pos_2>=V__1+1] 

* Chain [33,38]: 3*s(25)+1
  Such that:aux(67) =< V_PL_bufend-V_pos_2
s(25) =< aux(67)

  with precondition: [B=4,V_PL_bufend>=V_pos_2+2,V__1>=V_pos_2] 

* Chain [32,38]: 3*s(25)+2*s(29)+1
  Such that:aux(71) =< V_pos_2-V__1+1
aux(72) =< V_PL_bufend-V_pos_2
s(25) =< aux(72)
s(29) =< aux(71)

  with precondition: [B=4,V_PL_bufend>=V_pos_2+2,V_pos_2>=V__1+1] 


#### Cost of chains of eval_Perl_scan_vstring_11(V_s,V_PL_bufend,V_pos_1,V_9,B):
* Chain [60]: 1*s(142)+0
  Such that:s(142) =< -V_s+V_pos_1

  with precondition: [V_9=0,V_pos_1>=V_s+1,V_pos_1+1>=V_PL_bufend] 

* Chain [59]: 1*s(144)+3*s(146)+2*s(147)+1
  Such that:s(144) =< -V_s+V_pos_1
s(145) =< -V_s+V_pos_1+1
s(143) =< V_PL_bufend-V_pos_1
s(146) =< s(143)
s(147) =< s(145)

  with precondition: [V_9=0,V_pos_1>=V_s+1,V_PL_bufend>=V_pos_1+2] 

* Chain [58]: 0
  with precondition: [V_9=0,V_pos_1+1>=V_PL_bufend,V_s>=V_pos_1] 

* Chain [57]: 3*s(149)+1
  Such that:s(148) =< V_PL_bufend-V_pos_1
s(149) =< s(148)

  with precondition: [V_9=0,V_s>=V_pos_1,V_PL_bufend>=V_pos_1+2] 

* Chain [56]: 2*s(155)+6*s(156)+2*s(168)+2*s(169)+0
  Such that:s(152) =< -2*V_s+2*V_pos_1
s(150) =< -V_s+V_PL_bufend
s(151) =< -V_s+V_pos_1
s(153) =< V_PL_bufend-V_pos_1
s(154) =< V_PL_bufend/2-V_pos_1/2
s(155) =< s(153)
s(156) =< s(153)
s(155) =< s(154)
s(157) =< s(153)
s(158) =< s(153)-2
s(159) =< max([s(150),s(157),s(157)])
s(160) =< s(156)*s(157)
s(161) =< s(156)*s(158)
s(162) =< max([s(151),s(153),0])+s(153)
s(163) =< s(155)*s(157)
s(164) =< s(155)*s(158)
s(159) =< s(162)+1
s(165) =< s(163)*2
s(166) =< s(161)+s(164)+s(150)
s(166) =< s(155)*s(162)
s(167) =< s(160)+s(163)+s(150)
s(167) =< s(165)+s(165)+s(152)
s(167) =< s(156)*s(159)
s(168) =< s(167)
s(169) =< s(166)

  with precondition: [V_9=0,V_PL_bufend>=V_pos_1+2] 

* Chain [55]: 22*s(176)+2*s(177)+2*s(189)+2*s(190)+4*s(191)+4*s(197)+4*s(198)+1
  Such that:s(174) =< -2*V_s+2*V_pos_1
s(171) =< -V_s+V_PL_bufend
s(173) =< -V_s+V_pos_1
s(170) =< V_PL_bufend-V_pos_1
s(172) =< V_PL_bufend/2-V_pos_1/2
s(175) =< s(170)
s(175) =< s(172)
s(176) =< s(170)
s(177) =< s(170)
s(177) =< s(172)
s(177) =< s(175)
s(178) =< s(170)
s(179) =< s(170)-2
s(180) =< max([s(171),s(178),s(178)])
s(181) =< s(176)*s(178)
s(182) =< s(176)*s(179)
s(183) =< max([s(173),s(170),0])+s(170)
s(184) =< s(177)*s(178)
s(185) =< s(177)*s(179)
s(180) =< s(183)+1
s(186) =< s(184)*2
s(187) =< s(182)+s(185)+s(171)
s(187) =< s(177)*s(183)
s(188) =< s(181)+s(184)+s(171)
s(188) =< s(186)+s(186)+s(174)
s(188) =< s(176)*s(180)
s(189) =< s(188)
s(190) =< s(187)
s(191) =< s(170)
s(191) =< s(172)
s(192) =< s(191)*s(178)
s(193) =< s(191)*s(179)
s(194) =< s(192)*2
s(195) =< s(182)+s(193)+s(171)
s(195) =< s(191)*s(183)
s(196) =< s(181)+s(192)+s(171)
s(196) =< s(194)+s(194)+s(174)
s(196) =< s(176)*s(180)
s(197) =< s(196)
s(198) =< s(195)

  with precondition: [V_9=0,V_PL_bufend>=V_pos_1+3] 

* Chain [54]: 18*s(205)+2*s(206)+2*s(218)+2*s(219)+2*s(220)+2*s(226)+2*s(227)+1
  Such that:s(203) =< -2*V_s+2*V_pos_1
s(200) =< -V_s+V_PL_bufend
s(202) =< -V_s+V_pos_1
s(199) =< V_PL_bufend-V_pos_1
s(201) =< V_PL_bufend/2-V_pos_1/2
s(204) =< s(199)
s(204) =< s(201)
s(205) =< s(199)
s(206) =< s(199)
s(206) =< s(201)
s(206) =< s(204)
s(207) =< s(199)
s(208) =< s(199)-2
s(209) =< max([s(200),s(207),s(207)])
s(210) =< s(205)*s(207)
s(211) =< s(205)*s(208)
s(212) =< max([s(202),s(199),0])+s(199)
s(213) =< s(206)*s(207)
s(214) =< s(206)*s(208)
s(209) =< s(212)+1
s(215) =< s(213)*2
s(216) =< s(211)+s(214)+s(200)
s(216) =< s(206)*s(212)
s(217) =< s(210)+s(213)+s(200)
s(217) =< s(215)+s(215)+s(203)
s(217) =< s(205)*s(209)
s(218) =< s(217)
s(219) =< s(216)
s(220) =< s(199)
s(220) =< s(201)
s(221) =< s(220)*s(207)
s(222) =< s(220)*s(208)
s(223) =< s(221)*2
s(224) =< s(211)+s(222)+s(200)
s(224) =< s(220)*s(212)
s(225) =< s(210)+s(221)+s(200)
s(225) =< s(223)+s(223)+s(203)
s(225) =< s(205)*s(209)
s(226) =< s(225)
s(227) =< s(224)

  with precondition: [V_9=0,V_PL_bufend>=V_pos_1+4] 

* Chain [53]: 1*s(228)+0
  Such that:s(228) =< -V_s+V_pos_1

  with precondition: [0>=V_9+1,V_pos_1>=V_s+2,V_pos_1+1>=V_PL_bufend] 

* Chain [52]: 3*s(230)+3*s(232)+1
  Such that:s(229) =< V_PL_bufend-V_pos_1
aux(85) =< -V_s+V_pos_1
s(230) =< aux(85)
s(232) =< s(229)

  with precondition: [0>=V_9+1,V_pos_1>=V_s+2,V_PL_bufend>=V_pos_1+2] 

* Chain [51]: 0
  with precondition: [0>=V_9+1,V_pos_1+1>=V_PL_bufend,V_s+1>=V_pos_1] 

* Chain [50]: 3*s(235)+1
  Such that:s(234) =< V_PL_bufend-V_pos_1
s(235) =< s(234)

  with precondition: [0>=V_9+1,V_s+1>=V_pos_1,V_PL_bufend>=V_pos_1+2] 

* Chain [49]: 2*s(241)+6*s(242)+2*s(254)+2*s(255)+0
  Such that:s(238) =< -2*V_s+2*V_pos_1
s(236) =< -V_s+V_PL_bufend
s(237) =< -V_s+V_pos_1
s(239) =< V_PL_bufend-V_pos_1
s(240) =< V_PL_bufend/2-V_pos_1/2
s(241) =< s(239)
s(242) =< s(239)
s(241) =< s(240)
s(243) =< s(239)
s(244) =< s(239)-2
s(245) =< max([s(236),s(243),s(243)])
s(246) =< s(242)*s(243)
s(247) =< s(242)*s(244)
s(248) =< max([s(237),s(239),0])+s(239)
s(249) =< s(241)*s(243)
s(250) =< s(241)*s(244)
s(245) =< s(248)+1
s(251) =< s(249)*2
s(252) =< s(247)+s(250)+s(236)
s(252) =< s(241)*s(248)
s(253) =< s(246)+s(249)+s(236)
s(253) =< s(251)+s(251)+s(238)
s(253) =< s(242)*s(245)
s(254) =< s(253)
s(255) =< s(252)

  with precondition: [0>=V_9+1,V_PL_bufend>=V_pos_1+2] 

* Chain [48]: 22*s(262)+2*s(263)+2*s(275)+2*s(276)+4*s(277)+4*s(283)+4*s(284)+1
  Such that:s(260) =< -2*V_s+2*V_pos_1
s(257) =< -V_s+V_PL_bufend
s(259) =< -V_s+V_pos_1
s(256) =< V_PL_bufend-V_pos_1
s(258) =< V_PL_bufend/2-V_pos_1/2
s(261) =< s(256)
s(261) =< s(258)
s(262) =< s(256)
s(263) =< s(256)
s(263) =< s(258)
s(263) =< s(261)
s(264) =< s(256)
s(265) =< s(256)-2
s(266) =< max([s(257),s(264),s(264)])
s(267) =< s(262)*s(264)
s(268) =< s(262)*s(265)
s(269) =< max([s(259),s(256),0])+s(256)
s(270) =< s(263)*s(264)
s(271) =< s(263)*s(265)
s(266) =< s(269)+1
s(272) =< s(270)*2
s(273) =< s(268)+s(271)+s(257)
s(273) =< s(263)*s(269)
s(274) =< s(267)+s(270)+s(257)
s(274) =< s(272)+s(272)+s(260)
s(274) =< s(262)*s(266)
s(275) =< s(274)
s(276) =< s(273)
s(277) =< s(256)
s(277) =< s(258)
s(278) =< s(277)*s(264)
s(279) =< s(277)*s(265)
s(280) =< s(278)*2
s(281) =< s(268)+s(279)+s(257)
s(281) =< s(277)*s(269)
s(282) =< s(267)+s(278)+s(257)
s(282) =< s(280)+s(280)+s(260)
s(282) =< s(262)*s(266)
s(283) =< s(282)
s(284) =< s(281)

  with precondition: [0>=V_9+1,V_PL_bufend>=V_pos_1+3] 

* Chain [47]: 18*s(291)+2*s(292)+2*s(304)+2*s(305)+2*s(306)+2*s(312)+2*s(313)+1
  Such that:s(289) =< -2*V_s+2*V_pos_1
s(286) =< -V_s+V_PL_bufend
s(288) =< -V_s+V_pos_1
s(285) =< V_PL_bufend-V_pos_1
s(287) =< V_PL_bufend/2-V_pos_1/2
s(290) =< s(285)
s(290) =< s(287)
s(291) =< s(285)
s(292) =< s(285)
s(292) =< s(287)
s(292) =< s(290)
s(293) =< s(285)
s(294) =< s(285)-2
s(295) =< max([s(286),s(293),s(293)])
s(296) =< s(291)*s(293)
s(297) =< s(291)*s(294)
s(298) =< max([s(288),s(285),0])+s(285)
s(299) =< s(292)*s(293)
s(300) =< s(292)*s(294)
s(295) =< s(298)+1
s(301) =< s(299)*2
s(302) =< s(297)+s(300)+s(286)
s(302) =< s(292)*s(298)
s(303) =< s(296)+s(299)+s(286)
s(303) =< s(301)+s(301)+s(289)
s(303) =< s(291)*s(295)
s(304) =< s(303)
s(305) =< s(302)
s(306) =< s(285)
s(306) =< s(287)
s(307) =< s(306)*s(293)
s(308) =< s(306)*s(294)
s(309) =< s(307)*2
s(310) =< s(297)+s(308)+s(286)
s(310) =< s(306)*s(298)
s(311) =< s(296)+s(307)+s(286)
s(311) =< s(309)+s(309)+s(289)
s(311) =< s(291)*s(295)
s(312) =< s(311)
s(313) =< s(310)

  with precondition: [0>=V_9+1,V_PL_bufend>=V_pos_1+4] 

* Chain [46]: 1*s(314)+0
  Such that:s(314) =< -V_s+V_pos_1

  with precondition: [V_9>=1,V_pos_1>=V_s+2,V_pos_1+1>=V_PL_bufend] 

* Chain [45]: 3*s(316)+3*s(318)+1
  Such that:s(315) =< V_PL_bufend-V_pos_1
aux(86) =< -V_s+V_pos_1
s(316) =< aux(86)
s(318) =< s(315)

  with precondition: [V_9>=1,V_pos_1>=V_s+2,V_PL_bufend>=V_pos_1+2] 

* Chain [44]: 0
  with precondition: [V_9>=1,V_pos_1+1>=V_PL_bufend,V_s+1>=V_pos_1] 

* Chain [43]: 3*s(321)+1
  Such that:s(320) =< V_PL_bufend-V_pos_1
s(321) =< s(320)

  with precondition: [V_9>=1,V_s+1>=V_pos_1,V_PL_bufend>=V_pos_1+2] 

* Chain [42]: 2*s(327)+6*s(328)+2*s(340)+2*s(341)+0
  Such that:s(324) =< -2*V_s+2*V_pos_1
s(322) =< -V_s+V_PL_bufend
s(323) =< -V_s+V_pos_1
s(325) =< V_PL_bufend-V_pos_1
s(326) =< V_PL_bufend/2-V_pos_1/2
s(327) =< s(325)
s(328) =< s(325)
s(327) =< s(326)
s(329) =< s(325)
s(330) =< s(325)-2
s(331) =< max([s(322),s(329),s(329)])
s(332) =< s(328)*s(329)
s(333) =< s(328)*s(330)
s(334) =< max([s(323),s(325),0])+s(325)
s(335) =< s(327)*s(329)
s(336) =< s(327)*s(330)
s(331) =< s(334)+1
s(337) =< s(335)*2
s(338) =< s(333)+s(336)+s(322)
s(338) =< s(327)*s(334)
s(339) =< s(332)+s(335)+s(322)
s(339) =< s(337)+s(337)+s(324)
s(339) =< s(328)*s(331)
s(340) =< s(339)
s(341) =< s(338)

  with precondition: [V_9>=1,V_PL_bufend>=V_pos_1+2] 

* Chain [41]: 22*s(348)+2*s(349)+2*s(361)+2*s(362)+4*s(363)+4*s(369)+4*s(370)+1
  Such that:s(346) =< -2*V_s+2*V_pos_1
s(343) =< -V_s+V_PL_bufend
s(345) =< -V_s+V_pos_1
s(342) =< V_PL_bufend-V_pos_1
s(344) =< V_PL_bufend/2-V_pos_1/2
s(347) =< s(342)
s(347) =< s(344)
s(348) =< s(342)
s(349) =< s(342)
s(349) =< s(344)
s(349) =< s(347)
s(350) =< s(342)
s(351) =< s(342)-2
s(352) =< max([s(343),s(350),s(350)])
s(353) =< s(348)*s(350)
s(354) =< s(348)*s(351)
s(355) =< max([s(345),s(342),0])+s(342)
s(356) =< s(349)*s(350)
s(357) =< s(349)*s(351)
s(352) =< s(355)+1
s(358) =< s(356)*2
s(359) =< s(354)+s(357)+s(343)
s(359) =< s(349)*s(355)
s(360) =< s(353)+s(356)+s(343)
s(360) =< s(358)+s(358)+s(346)
s(360) =< s(348)*s(352)
s(361) =< s(360)
s(362) =< s(359)
s(363) =< s(342)
s(363) =< s(344)
s(364) =< s(363)*s(350)
s(365) =< s(363)*s(351)
s(366) =< s(364)*2
s(367) =< s(354)+s(365)+s(343)
s(367) =< s(363)*s(355)
s(368) =< s(353)+s(364)+s(343)
s(368) =< s(366)+s(366)+s(346)
s(368) =< s(348)*s(352)
s(369) =< s(368)
s(370) =< s(367)

  with precondition: [V_9>=1,V_PL_bufend>=V_pos_1+3] 

* Chain [40]: 18*s(377)+2*s(378)+2*s(390)+2*s(391)+2*s(392)+2*s(398)+2*s(399)+1
  Such that:s(375) =< -2*V_s+2*V_pos_1
s(372) =< -V_s+V_PL_bufend
s(374) =< -V_s+V_pos_1
s(371) =< V_PL_bufend-V_pos_1
s(373) =< V_PL_bufend/2-V_pos_1/2
s(376) =< s(371)
s(376) =< s(373)
s(377) =< s(371)
s(378) =< s(371)
s(378) =< s(373)
s(378) =< s(376)
s(379) =< s(371)
s(380) =< s(371)-2
s(381) =< max([s(372),s(379),s(379)])
s(382) =< s(377)*s(379)
s(383) =< s(377)*s(380)
s(384) =< max([s(374),s(371),0])+s(371)
s(385) =< s(378)*s(379)
s(386) =< s(378)*s(380)
s(381) =< s(384)+1
s(387) =< s(385)*2
s(388) =< s(383)+s(386)+s(372)
s(388) =< s(378)*s(384)
s(389) =< s(382)+s(385)+s(372)
s(389) =< s(387)+s(387)+s(375)
s(389) =< s(377)*s(381)
s(390) =< s(389)
s(391) =< s(388)
s(392) =< s(371)
s(392) =< s(373)
s(393) =< s(392)*s(379)
s(394) =< s(392)*s(380)
s(395) =< s(393)*2
s(396) =< s(383)+s(394)+s(372)
s(396) =< s(392)*s(384)
s(397) =< s(382)+s(393)+s(372)
s(397) =< s(395)+s(395)+s(375)
s(397) =< s(377)*s(381)
s(398) =< s(397)
s(399) =< s(396)

  with precondition: [V_9>=1,V_PL_bufend>=V_pos_1+4] 


#### Cost of chains of eval_Perl_scan_vstring_9(V_s,V_PL_bufend,V_pos_1,V_7,B):
* Chain [83]: 0
  with precondition: [V_7=0] 

* Chain [82]: 1*s(400)+0
  Such that:s(400) =< -V_s+V_pos_1

  with precondition: [0>=V_7+1,V_pos_1>=V_s+1,V_pos_1+1>=V_PL_bufend] 

* Chain [81]: 1*s(401)+3*s(404)+2*s(405)+1
  Such that:s(401) =< -V_s+V_pos_1
s(402) =< -V_s+V_pos_1+1
s(403) =< V_PL_bufend-V_pos_1
s(404) =< s(403)
s(405) =< s(402)

  with precondition: [0>=V_7+1,V_pos_1>=V_s+1,V_PL_bufend>=V_pos_1+2] 

* Chain [80]: 2*s(406)+0
  Such that:aux(87) =< -V_s+V_pos_1
s(406) =< aux(87)

  with precondition: [0>=V_7+1,V_pos_1>=V_s+2,V_pos_1+1>=V_PL_bufend] 

* Chain [79]: 6*s(410)+6*s(411)+1
  Such that:aux(88) =< -V_s+V_pos_1
aux(89) =< V_PL_bufend-V_pos_1
s(410) =< aux(88)
s(411) =< aux(89)

  with precondition: [0>=V_7+1,V_pos_1>=V_s+2,V_PL_bufend>=V_pos_1+2] 

* Chain [78]: 0
  with precondition: [0>=V_7+1,V_pos_1+1>=V_PL_bufend,V_s+1>=V_pos_1] 

* Chain [77]: 0
  with precondition: [0>=V_7+1,V_pos_1+1>=V_PL_bufend,V_s>=V_pos_1] 

* Chain [76]: 6*s(417)+1
  Such that:aux(90) =< V_PL_bufend-V_pos_1
s(417) =< aux(90)

  with precondition: [0>=V_7+1,V_s+1>=V_pos_1,V_PL_bufend>=V_pos_1+2] 

* Chain [75]: 3*s(421)+1
  Such that:s(420) =< V_PL_bufend-V_pos_1
s(421) =< s(420)

  with precondition: [0>=V_7+1,V_s>=V_pos_1,V_PL_bufend>=V_pos_1+2] 

* Chain [74]: 6*s(427)+18*s(428)+6*s(440)+6*s(441)+0
  Such that:aux(91) =< -2*V_s+2*V_pos_1
aux(92) =< -V_s+V_PL_bufend
aux(93) =< -V_s+V_pos_1
aux(94) =< V_PL_bufend-V_pos_1
aux(95) =< V_PL_bufend/2-V_pos_1/2
s(427) =< aux(94)
s(428) =< aux(94)
s(427) =< aux(95)
s(429) =< aux(94)
s(430) =< aux(94)-2
s(431) =< max([aux(92),s(429),s(429)])
s(432) =< s(428)*s(429)
s(433) =< s(428)*s(430)
s(434) =< max([aux(93),aux(94),0])+aux(94)
s(435) =< s(427)*s(429)
s(436) =< s(427)*s(430)
s(431) =< s(434)+1
s(437) =< s(435)*2
s(438) =< s(433)+s(436)+aux(92)
s(438) =< s(427)*s(434)
s(439) =< s(432)+s(435)+aux(92)
s(439) =< s(437)+s(437)+aux(91)
s(439) =< s(428)*s(431)
s(440) =< s(439)
s(441) =< s(438)

  with precondition: [0>=V_7+1,V_PL_bufend>=V_pos_1+2] 

* Chain [73]: 66*s(488)+6*s(489)+6*s(501)+6*s(502)+12*s(503)+12*s(509)+12*s(510)+1
  Such that:aux(96) =< -2*V_s+2*V_pos_1
aux(97) =< -V_s+V_PL_bufend
aux(98) =< -V_s+V_pos_1
aux(99) =< V_PL_bufend-V_pos_1
aux(100) =< V_PL_bufend/2-V_pos_1/2
s(487) =< aux(99)
s(487) =< aux(100)
s(488) =< aux(99)
s(489) =< aux(99)
s(489) =< aux(100)
s(489) =< s(487)
s(490) =< aux(99)
s(491) =< aux(99)-2
s(492) =< max([aux(97),s(490),s(490)])
s(493) =< s(488)*s(490)
s(494) =< s(488)*s(491)
s(495) =< max([aux(98),aux(99),0])+aux(99)
s(496) =< s(489)*s(490)
s(497) =< s(489)*s(491)
s(492) =< s(495)+1
s(498) =< s(496)*2
s(499) =< s(494)+s(497)+aux(97)
s(499) =< s(489)*s(495)
s(500) =< s(493)+s(496)+aux(97)
s(500) =< s(498)+s(498)+aux(96)
s(500) =< s(488)*s(492)
s(501) =< s(500)
s(502) =< s(499)
s(503) =< aux(99)
s(503) =< aux(100)
s(504) =< s(503)*s(490)
s(505) =< s(503)*s(491)
s(506) =< s(504)*2
s(507) =< s(494)+s(505)+aux(97)
s(507) =< s(503)*s(495)
s(508) =< s(493)+s(504)+aux(97)
s(508) =< s(506)+s(506)+aux(96)
s(508) =< s(488)*s(492)
s(509) =< s(508)
s(510) =< s(507)

  with precondition: [0>=V_7+1,V_PL_bufend>=V_pos_1+3] 

* Chain [72]: 54*s(575)+6*s(576)+6*s(588)+6*s(589)+6*s(590)+6*s(596)+6*s(597)+1
  Such that:aux(101) =< -2*V_s+2*V_pos_1
aux(102) =< -V_s+V_PL_bufend
aux(103) =< -V_s+V_pos_1
aux(104) =< V_PL_bufend-V_pos_1
aux(105) =< V_PL_bufend/2-V_pos_1/2
s(574) =< aux(104)
s(574) =< aux(105)
s(575) =< aux(104)
s(576) =< aux(104)
s(576) =< aux(105)
s(576) =< s(574)
s(577) =< aux(104)
s(578) =< aux(104)-2
s(579) =< max([aux(102),s(577),s(577)])
s(580) =< s(575)*s(577)
s(581) =< s(575)*s(578)
s(582) =< max([aux(103),aux(104),0])+aux(104)
s(583) =< s(576)*s(577)
s(584) =< s(576)*s(578)
s(579) =< s(582)+1
s(585) =< s(583)*2
s(586) =< s(581)+s(584)+aux(102)
s(586) =< s(576)*s(582)
s(587) =< s(580)+s(583)+aux(102)
s(587) =< s(585)+s(585)+aux(101)
s(587) =< s(575)*s(579)
s(588) =< s(587)
s(589) =< s(586)
s(590) =< aux(104)
s(590) =< aux(105)
s(591) =< s(590)*s(577)
s(592) =< s(590)*s(578)
s(593) =< s(591)*2
s(594) =< s(581)+s(592)+aux(102)
s(594) =< s(590)*s(582)
s(595) =< s(580)+s(591)+aux(102)
s(595) =< s(593)+s(593)+aux(101)
s(595) =< s(575)*s(579)
s(596) =< s(595)
s(597) =< s(594)

  with precondition: [0>=V_7+1,V_PL_bufend>=V_pos_1+4] 

* Chain [71]: 1*s(656)+0
  Such that:s(656) =< -V_s+V_pos_1

  with precondition: [V_7>=1,V_pos_1>=V_s+1,V_pos_1+1>=V_PL_bufend] 

* Chain [70]: 1*s(657)+3*s(660)+2*s(661)+1
  Such that:s(657) =< -V_s+V_pos_1
s(658) =< -V_s+V_pos_1+1
s(659) =< V_PL_bufend-V_pos_1
s(660) =< s(659)
s(661) =< s(658)

  with precondition: [V_7>=1,V_pos_1>=V_s+1,V_PL_bufend>=V_pos_1+2] 

* Chain [69]: 2*s(662)+0
  Such that:aux(106) =< -V_s+V_pos_1
s(662) =< aux(106)

  with precondition: [V_7>=1,V_pos_1>=V_s+2,V_pos_1+1>=V_PL_bufend] 

* Chain [68]: 6*s(666)+6*s(667)+1
  Such that:aux(107) =< -V_s+V_pos_1
aux(108) =< V_PL_bufend-V_pos_1
s(666) =< aux(107)
s(667) =< aux(108)

  with precondition: [V_7>=1,V_pos_1>=V_s+2,V_PL_bufend>=V_pos_1+2] 

* Chain [67]: 0
  with precondition: [V_7>=1,V_pos_1+1>=V_PL_bufend,V_s+1>=V_pos_1] 

* Chain [66]: 0
  with precondition: [V_7>=1,V_pos_1+1>=V_PL_bufend,V_s>=V_pos_1] 

* Chain [65]: 6*s(673)+1
  Such that:aux(109) =< V_PL_bufend-V_pos_1
s(673) =< aux(109)

  with precondition: [V_7>=1,V_s+1>=V_pos_1,V_PL_bufend>=V_pos_1+2] 

* Chain [64]: 3*s(677)+1
  Such that:s(676) =< V_PL_bufend-V_pos_1
s(677) =< s(676)

  with precondition: [V_7>=1,V_s>=V_pos_1,V_PL_bufend>=V_pos_1+2] 

* Chain [63]: 6*s(683)+18*s(684)+6*s(696)+6*s(697)+0
  Such that:aux(110) =< -2*V_s+2*V_pos_1
aux(111) =< -V_s+V_PL_bufend
aux(112) =< -V_s+V_pos_1
aux(113) =< V_PL_bufend-V_pos_1
aux(114) =< V_PL_bufend/2-V_pos_1/2
s(683) =< aux(113)
s(684) =< aux(113)
s(683) =< aux(114)
s(685) =< aux(113)
s(686) =< aux(113)-2
s(687) =< max([aux(111),s(685),s(685)])
s(688) =< s(684)*s(685)
s(689) =< s(684)*s(686)
s(690) =< max([aux(112),aux(113),0])+aux(113)
s(691) =< s(683)*s(685)
s(692) =< s(683)*s(686)
s(687) =< s(690)+1
s(693) =< s(691)*2
s(694) =< s(689)+s(692)+aux(111)
s(694) =< s(683)*s(690)
s(695) =< s(688)+s(691)+aux(111)
s(695) =< s(693)+s(693)+aux(110)
s(695) =< s(684)*s(687)
s(696) =< s(695)
s(697) =< s(694)

  with precondition: [V_7>=1,V_PL_bufend>=V_pos_1+2] 

* Chain [62]: 66*s(744)+6*s(745)+6*s(757)+6*s(758)+12*s(759)+12*s(765)+12*s(766)+1
  Such that:aux(115) =< -2*V_s+2*V_pos_1
aux(116) =< -V_s+V_PL_bufend
aux(117) =< -V_s+V_pos_1
aux(118) =< V_PL_bufend-V_pos_1
aux(119) =< V_PL_bufend/2-V_pos_1/2
s(743) =< aux(118)
s(743) =< aux(119)
s(744) =< aux(118)
s(745) =< aux(118)
s(745) =< aux(119)
s(745) =< s(743)
s(746) =< aux(118)
s(747) =< aux(118)-2
s(748) =< max([aux(116),s(746),s(746)])
s(749) =< s(744)*s(746)
s(750) =< s(744)*s(747)
s(751) =< max([aux(117),aux(118),0])+aux(118)
s(752) =< s(745)*s(746)
s(753) =< s(745)*s(747)
s(748) =< s(751)+1
s(754) =< s(752)*2
s(755) =< s(750)+s(753)+aux(116)
s(755) =< s(745)*s(751)
s(756) =< s(749)+s(752)+aux(116)
s(756) =< s(754)+s(754)+aux(115)
s(756) =< s(744)*s(748)
s(757) =< s(756)
s(758) =< s(755)
s(759) =< aux(118)
s(759) =< aux(119)
s(760) =< s(759)*s(746)
s(761) =< s(759)*s(747)
s(762) =< s(760)*2
s(763) =< s(750)+s(761)+aux(116)
s(763) =< s(759)*s(751)
s(764) =< s(749)+s(760)+aux(116)
s(764) =< s(762)+s(762)+aux(115)
s(764) =< s(744)*s(748)
s(765) =< s(764)
s(766) =< s(763)

  with precondition: [V_7>=1,V_PL_bufend>=V_pos_1+3] 

* Chain [61]: 54*s(831)+6*s(832)+6*s(844)+6*s(845)+6*s(846)+6*s(852)+6*s(853)+1
  Such that:aux(120) =< -2*V_s+2*V_pos_1
aux(121) =< -V_s+V_PL_bufend
aux(122) =< -V_s+V_pos_1
aux(123) =< V_PL_bufend-V_pos_1
aux(124) =< V_PL_bufend/2-V_pos_1/2
s(830) =< aux(123)
s(830) =< aux(124)
s(831) =< aux(123)
s(832) =< aux(123)
s(832) =< aux(124)
s(832) =< s(830)
s(833) =< aux(123)
s(834) =< aux(123)-2
s(835) =< max([aux(121),s(833),s(833)])
s(836) =< s(831)*s(833)
s(837) =< s(831)*s(834)
s(838) =< max([aux(122),aux(123),0])+aux(123)
s(839) =< s(832)*s(833)
s(840) =< s(832)*s(834)
s(835) =< s(838)+1
s(841) =< s(839)*2
s(842) =< s(837)+s(840)+aux(121)
s(842) =< s(832)*s(838)
s(843) =< s(836)+s(839)+aux(121)
s(843) =< s(841)+s(841)+aux(120)
s(843) =< s(831)*s(835)
s(844) =< s(843)
s(845) =< s(842)
s(846) =< aux(123)
s(846) =< aux(124)
s(847) =< s(846)*s(833)
s(848) =< s(846)*s(834)
s(849) =< s(847)*2
s(850) =< s(837)+s(848)+aux(121)
s(850) =< s(846)*s(838)
s(851) =< s(836)+s(847)+aux(121)
s(851) =< s(849)+s(849)+aux(120)
s(851) =< s(831)*s(835)
s(852) =< s(851)
s(853) =< s(850)

  with precondition: [V_7>=1,V_PL_bufend>=V_pos_1+4] 


#### Cost of chains of eval_Perl_scan_vstring_1(V_s,V_PL_bufend,V_0,B):
* Chain [105]: 2
  with precondition: [V_0=0,V_PL_bufend=V_s+2] 

* Chain [104]: 2
  with precondition: [V_0=0,V_PL_bufend=V_s+1] 

* Chain [103]: 5*s(916)+0
  Such that:aux(129) =< -V_s+V_PL_bufend
s(916) =< aux(129)

  with precondition: [V_0=0,V_PL_bufend>=V_s+1] 

* Chain [102]: 65*s(921)+12*s(936)+12*s(949)+12*s(950)+1
  Such that:aux(138) =< -V_s+V_PL_bufend
aux(139) =< -V_s/2+V_PL_bufend/2
s(921) =< aux(138)
s(936) =< aux(138)
s(936) =< aux(139)
s(938) =< aux(138)
s(939) =< aux(138)-2
s(940) =< max([aux(138),s(938),s(938)])
s(941) =< s(921)*s(938)
s(942) =< s(921)*s(939)
s(943) =< max([0,aux(138),0])+aux(138)
s(944) =< s(936)*s(938)
s(945) =< s(936)*s(939)
s(940) =< s(943)+1
s(946) =< s(944)*2
s(947) =< s(942)+s(945)+aux(138)
s(947) =< s(936)*s(943)
s(948) =< s(941)+s(944)+aux(138)
s(948) =< s(946)+s(946)
s(948) =< s(921)*s(940)
s(949) =< s(948)
s(950) =< s(947)

  with precondition: [V_0=0,V_PL_bufend>=V_s+2] 

* Chain [101]: 156*s(986)+12*s(987)+12*s(999)+12*s(1000)+24*s(1001)+24*s(1007)+24*s(1008)+10*s(1042)+2*s(1047)+48*s(1056)+12*s(1069)+12*s(1070)+1
  Such that:aux(154) =< 1
aux(155) =< -2*V_s+2*V_PL_bufend
aux(156) =< -V_s+V_PL_bufend
aux(157) =< -V_s+V_PL_bufend+1
aux(158) =< -V_s/2+V_PL_bufend/2
s(1047) =< aux(154)
s(986) =< aux(156)
s(1054) =< aux(155)
s(1054) =< aux(156)
s(1056) =< s(1054)
s(1058) =< s(1054)
s(1059) =< s(1054)-2
s(1060) =< max([aux(156),s(1058),s(1058)])
s(1061) =< s(1056)*s(1058)
s(1062) =< s(1056)*s(1059)
s(1063) =< max([aux(156),s(1054),0])+s(1054)
s(1060) =< s(1063)+1
s(1066) =< s(1061)*2
s(1067) =< s(1062)+s(1062)+aux(156)
s(1067) =< s(1056)*s(1063)
s(1068) =< s(1061)+s(1061)+aux(156)
s(1068) =< s(1066)+s(1066)+aux(155)
s(1068) =< s(1056)*s(1060)
s(1069) =< s(1068)
s(1070) =< s(1067)
s(1040) =< aux(156)
s(1040) =< aux(157)
s(1042) =< s(1040)
s(985) =< aux(156)
s(985) =< aux(158)
s(987) =< aux(156)
s(987) =< aux(158)
s(987) =< s(985)
s(988) =< aux(156)
s(989) =< aux(156)-2
s(990) =< max([aux(156),s(988),s(988)])
s(991) =< s(986)*s(988)
s(992) =< s(986)*s(989)
s(993) =< max([0,aux(156),0])+aux(156)
s(994) =< s(987)*s(988)
s(995) =< s(987)*s(989)
s(990) =< s(993)+1
s(996) =< s(994)*2
s(997) =< s(992)+s(995)+aux(156)
s(997) =< s(987)*s(993)
s(998) =< s(991)+s(994)+aux(156)
s(998) =< s(996)+s(996)
s(998) =< s(986)*s(990)
s(999) =< s(998)
s(1000) =< s(997)
s(1001) =< aux(156)
s(1001) =< aux(158)
s(1002) =< s(1001)*s(988)
s(1003) =< s(1001)*s(989)
s(1004) =< s(1002)*2
s(1005) =< s(992)+s(1003)+aux(156)
s(1005) =< s(1001)*s(993)
s(1006) =< s(991)+s(1002)+aux(156)
s(1006) =< s(1004)+s(1004)
s(1006) =< s(986)*s(990)
s(1007) =< s(1006)
s(1008) =< s(1005)

  with precondition: [V_0=0,V_PL_bufend>=V_s+3] 

* Chain [100]: 136*s(1110)+12*s(1111)+12*s(1123)+12*s(1124)+12*s(1125)+12*s(1131)+12*s(1132)+168*s(1174)+36*s(1187)+36*s(1188)+1
  Such that:aux(169) =< -2*V_s+2*V_PL_bufend
aux(170) =< -V_s+V_PL_bufend
aux(171) =< -V_s/2+V_PL_bufend/2
s(1171) =< aux(169)
s(1110) =< aux(170)
s(1171) =< aux(170)
s(1174) =< s(1171)
s(1176) =< s(1171)
s(1177) =< s(1171)-2
s(1178) =< max([aux(170),s(1176),s(1176)])
s(1179) =< s(1174)*s(1176)
s(1180) =< s(1174)*s(1177)
s(1181) =< max([aux(170),s(1171),0])+s(1171)
s(1178) =< s(1181)+1
s(1184) =< s(1179)*2
s(1185) =< s(1180)+s(1180)+aux(170)
s(1185) =< s(1174)*s(1181)
s(1186) =< s(1179)+s(1179)+aux(170)
s(1186) =< s(1184)+s(1184)+aux(169)
s(1186) =< s(1174)*s(1178)
s(1187) =< s(1186)
s(1188) =< s(1185)
s(1109) =< aux(170)
s(1109) =< aux(171)
s(1111) =< aux(170)
s(1111) =< aux(171)
s(1111) =< s(1109)
s(1112) =< aux(170)
s(1113) =< aux(170)-2
s(1114) =< max([aux(170),s(1112),s(1112)])
s(1115) =< s(1110)*s(1112)
s(1116) =< s(1110)*s(1113)
s(1117) =< max([0,aux(170),0])+aux(170)
s(1118) =< s(1111)*s(1112)
s(1119) =< s(1111)*s(1113)
s(1114) =< s(1117)+1
s(1120) =< s(1118)*2
s(1121) =< s(1116)+s(1119)+aux(170)
s(1121) =< s(1111)*s(1117)
s(1122) =< s(1115)+s(1118)+aux(170)
s(1122) =< s(1120)+s(1120)
s(1122) =< s(1110)*s(1114)
s(1123) =< s(1122)
s(1124) =< s(1121)
s(1125) =< aux(170)
s(1125) =< aux(171)
s(1126) =< s(1125)*s(1112)
s(1127) =< s(1125)*s(1113)
s(1128) =< s(1126)*2
s(1129) =< s(1116)+s(1127)+aux(170)
s(1129) =< s(1125)*s(1117)
s(1130) =< s(1115)+s(1126)+aux(170)
s(1130) =< s(1128)+s(1128)
s(1130) =< s(1110)*s(1114)
s(1131) =< s(1130)
s(1132) =< s(1129)

  with precondition: [V_0=0,V_PL_bufend>=V_s+4] 

* Chain [99]: 2*s(1232)+132*s(1239)+24*s(1252)+24*s(1253)+1
  Such that:aux(176) =< -2*V_s+2*V_PL_bufend
aux(177) =< -V_s+V_PL_bufend
s(1236) =< aux(176)
s(1232) =< aux(177)
s(1236) =< aux(177)
s(1239) =< s(1236)
s(1241) =< s(1236)
s(1242) =< s(1236)-2
s(1243) =< max([aux(177),s(1241),s(1241)])
s(1244) =< s(1239)*s(1241)
s(1245) =< s(1239)*s(1242)
s(1246) =< max([aux(177),s(1236),0])+s(1236)
s(1243) =< s(1246)+1
s(1249) =< s(1244)*2
s(1250) =< s(1245)+s(1245)+aux(177)
s(1250) =< s(1239)*s(1246)
s(1251) =< s(1244)+s(1244)+aux(177)
s(1251) =< s(1249)+s(1249)+aux(176)
s(1251) =< s(1239)*s(1243)
s(1252) =< s(1251)
s(1253) =< s(1250)

  with precondition: [V_0=0,V_PL_bufend>=V_s+5] 

* Chain [98]: 0
  with precondition: [V_0=0,V_s>=V_PL_bufend] 

* Chain [97]: 2
  with precondition: [V_PL_bufend=V_s+2,0>=V_0+1] 

* Chain [96]: 2
  with precondition: [V_PL_bufend=V_s+2,V_0>=1] 

* Chain [95]: 11*s(1296)+0
  Such that:aux(184) =< -V_s+V_PL_bufend
s(1296) =< aux(184)

  with precondition: [0>=V_0+1,V_PL_bufend>=V_s+2] 

* Chain [94]: 2*s(1307)+65*s(1310)+4*s(1311)+12*s(1319)+12*s(1332)+12*s(1333)+1
  Such that:aux(191) =< 1
aux(192) =< 2
aux(193) =< -V_s+V_PL_bufend
aux(194) =< -V_s/2+V_PL_bufend/2
s(1307) =< aux(191)
s(1310) =< aux(193)
s(1311) =< aux(192)
s(1319) =< aux(193)
s(1319) =< aux(194)
s(1321) =< aux(193)
s(1322) =< aux(193)-2
s(1323) =< max([aux(193),s(1321),s(1321)])
s(1324) =< s(1310)*s(1321)
s(1325) =< s(1310)*s(1322)
s(1326) =< max([aux(191),aux(193),0])+aux(193)
s(1327) =< s(1319)*s(1321)
s(1328) =< s(1319)*s(1322)
s(1323) =< s(1326)+1
s(1329) =< s(1327)*2
s(1330) =< s(1325)+s(1328)+aux(193)
s(1330) =< s(1319)*s(1326)
s(1331) =< s(1324)+s(1327)+aux(193)
s(1331) =< s(1329)+s(1329)+aux(192)
s(1331) =< s(1310)*s(1323)
s(1332) =< s(1331)
s(1333) =< s(1330)

  with precondition: [0>=V_0+1,V_PL_bufend>=V_s+3] 

* Chain [93]: 164*s(1378)+12*s(1379)+12*s(1391)+12*s(1392)+24*s(1393)+24*s(1399)+24*s(1400)+10*s(1434)+48*s(1447)+12*s(1460)+12*s(1461)+1
  Such that:aux(207) =< 1
aux(208) =< 2
aux(209) =< -2*V_s+2*V_PL_bufend
aux(210) =< -V_s+V_PL_bufend
aux(211) =< -V_s+V_PL_bufend+1
aux(212) =< -V_s/2+V_PL_bufend/2
s(1377) =< aux(210)
s(1377) =< aux(212)
s(1378) =< aux(210)
s(1379) =< aux(210)
s(1379) =< aux(212)
s(1379) =< s(1377)
s(1380) =< aux(210)
s(1381) =< aux(210)-2
s(1382) =< max([aux(210),s(1380),s(1380)])
s(1383) =< s(1378)*s(1380)
s(1384) =< s(1378)*s(1381)
s(1385) =< max([aux(207),aux(210),0])+aux(210)
s(1386) =< s(1379)*s(1380)
s(1387) =< s(1379)*s(1381)
s(1382) =< s(1385)+1
s(1388) =< s(1386)*2
s(1389) =< s(1384)+s(1387)+aux(210)
s(1389) =< s(1379)*s(1385)
s(1390) =< s(1383)+s(1386)+aux(210)
s(1390) =< s(1388)+s(1388)+aux(208)
s(1390) =< s(1378)*s(1382)
s(1391) =< s(1390)
s(1392) =< s(1389)
s(1393) =< aux(210)
s(1393) =< aux(212)
s(1394) =< s(1393)*s(1380)
s(1395) =< s(1393)*s(1381)
s(1396) =< s(1394)*2
s(1397) =< s(1384)+s(1395)+aux(210)
s(1397) =< s(1393)*s(1385)
s(1398) =< s(1383)+s(1394)+aux(210)
s(1398) =< s(1396)+s(1396)+aux(208)
s(1398) =< s(1378)*s(1382)
s(1399) =< s(1398)
s(1400) =< s(1397)
s(1445) =< aux(209)
s(1445) =< aux(210)
s(1447) =< s(1445)
s(1449) =< s(1445)
s(1450) =< s(1445)-2
s(1451) =< max([aux(210),s(1449),s(1449)])
s(1452) =< s(1447)*s(1449)
s(1453) =< s(1447)*s(1450)
s(1454) =< max([aux(210),s(1445),0])+s(1445)
s(1451) =< s(1454)+1
s(1457) =< s(1452)*2
s(1458) =< s(1453)+s(1453)+aux(210)
s(1458) =< s(1447)*s(1454)
s(1459) =< s(1452)+s(1452)+aux(210)
s(1459) =< s(1457)+s(1457)+aux(209)
s(1459) =< s(1447)*s(1451)
s(1460) =< s(1459)
s(1461) =< s(1458)
s(1432) =< aux(210)
s(1432) =< aux(211)
s(1434) =< s(1432)

  with precondition: [0>=V_0+1,V_PL_bufend>=V_s+4] 

* Chain [92]: 110*s(1500)+12*s(1501)+12*s(1513)+12*s(1514)+12*s(1515)+12*s(1521)+12*s(1522)+168*s(1559)+36*s(1572)+36*s(1573)+1
  Such that:aux(219) =< 1
aux(220) =< 2
aux(221) =< -2*V_s+2*V_PL_bufend
aux(222) =< -V_s+V_PL_bufend
aux(223) =< -V_s/2+V_PL_bufend/2
s(1499) =< aux(222)
s(1499) =< aux(223)
s(1500) =< aux(222)
s(1501) =< aux(222)
s(1501) =< aux(223)
s(1501) =< s(1499)
s(1502) =< aux(222)
s(1503) =< aux(222)-2
s(1504) =< max([aux(222),s(1502),s(1502)])
s(1505) =< s(1500)*s(1502)
s(1506) =< s(1500)*s(1503)
s(1507) =< max([aux(219),aux(222),0])+aux(222)
s(1508) =< s(1501)*s(1502)
s(1509) =< s(1501)*s(1503)
s(1504) =< s(1507)+1
s(1510) =< s(1508)*2
s(1511) =< s(1506)+s(1509)+aux(222)
s(1511) =< s(1501)*s(1507)
s(1512) =< s(1505)+s(1508)+aux(222)
s(1512) =< s(1510)+s(1510)+aux(220)
s(1512) =< s(1500)*s(1504)
s(1513) =< s(1512)
s(1514) =< s(1511)
s(1515) =< aux(222)
s(1515) =< aux(223)
s(1516) =< s(1515)*s(1502)
s(1517) =< s(1515)*s(1503)
s(1518) =< s(1516)*2
s(1519) =< s(1506)+s(1517)+aux(222)
s(1519) =< s(1515)*s(1507)
s(1520) =< s(1505)+s(1516)+aux(222)
s(1520) =< s(1518)+s(1518)+aux(220)
s(1520) =< s(1500)*s(1504)
s(1521) =< s(1520)
s(1522) =< s(1519)
s(1556) =< aux(221)
s(1556) =< aux(222)
s(1559) =< s(1556)
s(1561) =< s(1556)
s(1562) =< s(1556)-2
s(1563) =< max([aux(222),s(1561),s(1561)])
s(1564) =< s(1559)*s(1561)
s(1565) =< s(1559)*s(1562)
s(1566) =< max([aux(222),s(1556),0])+s(1556)
s(1563) =< s(1566)+1
s(1569) =< s(1564)*2
s(1570) =< s(1565)+s(1565)+aux(222)
s(1570) =< s(1559)*s(1566)
s(1571) =< s(1564)+s(1564)+aux(222)
s(1571) =< s(1569)+s(1569)+aux(221)
s(1571) =< s(1559)*s(1563)
s(1572) =< s(1571)
s(1573) =< s(1570)

  with precondition: [0>=V_0+1,V_PL_bufend>=V_s+5] 

* Chain [91]: 2*s(1612)+132*s(1619)+24*s(1632)+24*s(1633)+1
  Such that:aux(228) =< -2*V_s+2*V_PL_bufend
aux(229) =< -V_s+V_PL_bufend
s(1616) =< aux(228)
s(1612) =< aux(229)
s(1616) =< aux(229)
s(1619) =< s(1616)
s(1621) =< s(1616)
s(1622) =< s(1616)-2
s(1623) =< max([aux(229),s(1621),s(1621)])
s(1624) =< s(1619)*s(1621)
s(1625) =< s(1619)*s(1622)
s(1626) =< max([aux(229),s(1616),0])+s(1616)
s(1623) =< s(1626)+1
s(1629) =< s(1624)*2
s(1630) =< s(1625)+s(1625)+aux(229)
s(1630) =< s(1619)*s(1626)
s(1631) =< s(1624)+s(1624)+aux(229)
s(1631) =< s(1629)+s(1629)+aux(228)
s(1631) =< s(1619)*s(1623)
s(1632) =< s(1631)
s(1633) =< s(1630)

  with precondition: [0>=V_0+1,V_PL_bufend>=V_s+6] 

* Chain [90]: 2
  with precondition: [0>=V_0+1,V_s+1>=V_PL_bufend] 

* Chain [89]: 11*s(1674)+0
  Such that:aux(235) =< -V_s+V_PL_bufend
s(1674) =< aux(235)

  with precondition: [V_0>=1,V_PL_bufend>=V_s+2] 

* Chain [88]: 2*s(1685)+65*s(1688)+4*s(1689)+12*s(1697)+12*s(1710)+12*s(1711)+1
  Such that:aux(242) =< 1
aux(243) =< 2
aux(244) =< -V_s+V_PL_bufend
aux(245) =< -V_s/2+V_PL_bufend/2
s(1685) =< aux(242)
s(1688) =< aux(244)
s(1689) =< aux(243)
s(1697) =< aux(244)
s(1697) =< aux(245)
s(1699) =< aux(244)
s(1700) =< aux(244)-2
s(1701) =< max([aux(244),s(1699),s(1699)])
s(1702) =< s(1688)*s(1699)
s(1703) =< s(1688)*s(1700)
s(1704) =< max([aux(242),aux(244),0])+aux(244)
s(1705) =< s(1697)*s(1699)
s(1706) =< s(1697)*s(1700)
s(1701) =< s(1704)+1
s(1707) =< s(1705)*2
s(1708) =< s(1703)+s(1706)+aux(244)
s(1708) =< s(1697)*s(1704)
s(1709) =< s(1702)+s(1705)+aux(244)
s(1709) =< s(1707)+s(1707)+aux(243)
s(1709) =< s(1688)*s(1701)
s(1710) =< s(1709)
s(1711) =< s(1708)

  with precondition: [V_0>=1,V_PL_bufend>=V_s+3] 

* Chain [87]: 164*s(1756)+12*s(1757)+12*s(1769)+12*s(1770)+24*s(1771)+24*s(1777)+24*s(1778)+10*s(1812)+48*s(1825)+12*s(1838)+12*s(1839)+1
  Such that:aux(258) =< 1
aux(259) =< 2
aux(260) =< -2*V_s+2*V_PL_bufend
aux(261) =< -V_s+V_PL_bufend
aux(262) =< -V_s+V_PL_bufend+1
aux(263) =< -V_s/2+V_PL_bufend/2
s(1755) =< aux(261)
s(1755) =< aux(263)
s(1756) =< aux(261)
s(1757) =< aux(261)
s(1757) =< aux(263)
s(1757) =< s(1755)
s(1758) =< aux(261)
s(1759) =< aux(261)-2
s(1760) =< max([aux(261),s(1758),s(1758)])
s(1761) =< s(1756)*s(1758)
s(1762) =< s(1756)*s(1759)
s(1763) =< max([aux(258),aux(261),0])+aux(261)
s(1764) =< s(1757)*s(1758)
s(1765) =< s(1757)*s(1759)
s(1760) =< s(1763)+1
s(1766) =< s(1764)*2
s(1767) =< s(1762)+s(1765)+aux(261)
s(1767) =< s(1757)*s(1763)
s(1768) =< s(1761)+s(1764)+aux(261)
s(1768) =< s(1766)+s(1766)+aux(259)
s(1768) =< s(1756)*s(1760)
s(1769) =< s(1768)
s(1770) =< s(1767)
s(1771) =< aux(261)
s(1771) =< aux(263)
s(1772) =< s(1771)*s(1758)
s(1773) =< s(1771)*s(1759)
s(1774) =< s(1772)*2
s(1775) =< s(1762)+s(1773)+aux(261)
s(1775) =< s(1771)*s(1763)
s(1776) =< s(1761)+s(1772)+aux(261)
s(1776) =< s(1774)+s(1774)+aux(259)
s(1776) =< s(1756)*s(1760)
s(1777) =< s(1776)
s(1778) =< s(1775)
s(1823) =< aux(260)
s(1823) =< aux(261)
s(1825) =< s(1823)
s(1827) =< s(1823)
s(1828) =< s(1823)-2
s(1829) =< max([aux(261),s(1827),s(1827)])
s(1830) =< s(1825)*s(1827)
s(1831) =< s(1825)*s(1828)
s(1832) =< max([aux(261),s(1823),0])+s(1823)
s(1829) =< s(1832)+1
s(1835) =< s(1830)*2
s(1836) =< s(1831)+s(1831)+aux(261)
s(1836) =< s(1825)*s(1832)
s(1837) =< s(1830)+s(1830)+aux(261)
s(1837) =< s(1835)+s(1835)+aux(260)
s(1837) =< s(1825)*s(1829)
s(1838) =< s(1837)
s(1839) =< s(1836)
s(1810) =< aux(261)
s(1810) =< aux(262)
s(1812) =< s(1810)

  with precondition: [V_0>=1,V_PL_bufend>=V_s+4] 

* Chain [86]: 110*s(1878)+12*s(1879)+12*s(1891)+12*s(1892)+12*s(1893)+12*s(1899)+12*s(1900)+168*s(1937)+36*s(1950)+36*s(1951)+1
  Such that:aux(270) =< 1
aux(271) =< 2
aux(272) =< -2*V_s+2*V_PL_bufend
aux(273) =< -V_s+V_PL_bufend
aux(274) =< -V_s/2+V_PL_bufend/2
s(1877) =< aux(273)
s(1877) =< aux(274)
s(1878) =< aux(273)
s(1879) =< aux(273)
s(1879) =< aux(274)
s(1879) =< s(1877)
s(1880) =< aux(273)
s(1881) =< aux(273)-2
s(1882) =< max([aux(273),s(1880),s(1880)])
s(1883) =< s(1878)*s(1880)
s(1884) =< s(1878)*s(1881)
s(1885) =< max([aux(270),aux(273),0])+aux(273)
s(1886) =< s(1879)*s(1880)
s(1887) =< s(1879)*s(1881)
s(1882) =< s(1885)+1
s(1888) =< s(1886)*2
s(1889) =< s(1884)+s(1887)+aux(273)
s(1889) =< s(1879)*s(1885)
s(1890) =< s(1883)+s(1886)+aux(273)
s(1890) =< s(1888)+s(1888)+aux(271)
s(1890) =< s(1878)*s(1882)
s(1891) =< s(1890)
s(1892) =< s(1889)
s(1893) =< aux(273)
s(1893) =< aux(274)
s(1894) =< s(1893)*s(1880)
s(1895) =< s(1893)*s(1881)
s(1896) =< s(1894)*2
s(1897) =< s(1884)+s(1895)+aux(273)
s(1897) =< s(1893)*s(1885)
s(1898) =< s(1883)+s(1894)+aux(273)
s(1898) =< s(1896)+s(1896)+aux(271)
s(1898) =< s(1878)*s(1882)
s(1899) =< s(1898)
s(1900) =< s(1897)
s(1934) =< aux(272)
s(1934) =< aux(273)
s(1937) =< s(1934)
s(1939) =< s(1934)
s(1940) =< s(1934)-2
s(1941) =< max([aux(273),s(1939),s(1939)])
s(1942) =< s(1937)*s(1939)
s(1943) =< s(1937)*s(1940)
s(1944) =< max([aux(273),s(1934),0])+s(1934)
s(1941) =< s(1944)+1
s(1947) =< s(1942)*2
s(1948) =< s(1943)+s(1943)+aux(273)
s(1948) =< s(1937)*s(1944)
s(1949) =< s(1942)+s(1942)+aux(273)
s(1949) =< s(1947)+s(1947)+aux(272)
s(1949) =< s(1937)*s(1941)
s(1950) =< s(1949)
s(1951) =< s(1948)

  with precondition: [V_0>=1,V_PL_bufend>=V_s+5] 

* Chain [85]: 2*s(1990)+132*s(1997)+24*s(2010)+24*s(2011)+1
  Such that:aux(279) =< -2*V_s+2*V_PL_bufend
aux(280) =< -V_s+V_PL_bufend
s(1994) =< aux(279)
s(1990) =< aux(280)
s(1994) =< aux(280)
s(1997) =< s(1994)
s(1999) =< s(1994)
s(2000) =< s(1994)-2
s(2001) =< max([aux(280),s(1999),s(1999)])
s(2002) =< s(1997)*s(1999)
s(2003) =< s(1997)*s(2000)
s(2004) =< max([aux(280),s(1994),0])+s(1994)
s(2001) =< s(2004)+1
s(2007) =< s(2002)*2
s(2008) =< s(2003)+s(2003)+aux(280)
s(2008) =< s(1997)*s(2004)
s(2009) =< s(2002)+s(2002)+aux(280)
s(2009) =< s(2007)+s(2007)+aux(279)
s(2009) =< s(1997)*s(2001)
s(2010) =< s(2009)
s(2011) =< s(2008)

  with precondition: [V_0>=1,V_PL_bufend>=V_s+6] 

* Chain [84]: 2
  with precondition: [V_0>=1,V_s+1>=V_PL_bufend] 


#### Cost of chains of eval_Perl_scan_vstring_start(V_s,V_PL_bufend,B):
* Chain [115]: 2
  with precondition: [V_PL_bufend=V_s+2] 

* Chain [114]: 2
  with precondition: [V_PL_bufend=V_s+1] 

* Chain [113]: 5*s(2053)+0
  Such that:s(2052) =< -V_s+V_PL_bufend
s(2053) =< s(2052)

  with precondition: [V_PL_bufend>=V_s+1] 

* Chain [112]: 87*s(2056)+12*s(2057)+12*s(2069)+12*s(2070)+1
  Such that:s(2055) =< -V_s/2+V_PL_bufend/2
aux(282) =< -V_s+V_PL_bufend
s(2056) =< aux(282)
s(2057) =< aux(282)
s(2057) =< s(2055)
s(2058) =< aux(282)
s(2059) =< aux(282)-2
s(2060) =< max([aux(282),s(2058),s(2058)])
s(2061) =< s(2056)*s(2058)
s(2062) =< s(2056)*s(2059)
s(2063) =< max([0,aux(282),0])+aux(282)
s(2064) =< s(2057)*s(2058)
s(2065) =< s(2057)*s(2059)
s(2060) =< s(2063)+1
s(2066) =< s(2064)*2
s(2067) =< s(2062)+s(2065)+aux(282)
s(2067) =< s(2057)*s(2063)
s(2068) =< s(2061)+s(2064)+aux(282)
s(2068) =< s(2066)+s(2066)
s(2068) =< s(2056)*s(2060)
s(2069) =< s(2068)
s(2070) =< s(2067)

  with precondition: [V_PL_bufend>=V_s+2] 

* Chain [111]: 6*s(2080)+286*s(2081)+48*s(2083)+12*s(2093)+12*s(2094)+10*s(2096)+12*s(2098)+12*s(2110)+12*s(2111)+48*s(2112)+24*s(2118)+24*s(2119)+8*s(2126)+24*s(2139)+24*s(2140)+1
  Such that:s(2076) =< -2*V_s+2*V_PL_bufend
s(2078) =< -V_s+V_PL_bufend+1
aux(283) =< 1
aux(284) =< 2
aux(285) =< -V_s+V_PL_bufend
aux(286) =< -V_s/2+V_PL_bufend/2
s(2080) =< aux(283)
s(2081) =< aux(285)
s(2082) =< s(2076)
s(2082) =< aux(285)
s(2083) =< s(2082)
s(2084) =< s(2082)
s(2085) =< s(2082)-2
s(2086) =< max([aux(285),s(2084),s(2084)])
s(2087) =< s(2083)*s(2084)
s(2088) =< s(2083)*s(2085)
s(2089) =< max([aux(285),s(2082),0])+s(2082)
s(2086) =< s(2089)+1
s(2090) =< s(2087)*2
s(2091) =< s(2088)+s(2088)+aux(285)
s(2091) =< s(2083)*s(2089)
s(2092) =< s(2087)+s(2087)+aux(285)
s(2092) =< s(2090)+s(2090)+s(2076)
s(2092) =< s(2083)*s(2086)
s(2093) =< s(2092)
s(2094) =< s(2091)
s(2095) =< aux(285)
s(2095) =< s(2078)
s(2096) =< s(2095)
s(2097) =< aux(285)
s(2097) =< aux(286)
s(2098) =< aux(285)
s(2098) =< aux(286)
s(2098) =< s(2097)
s(2099) =< aux(285)
s(2100) =< aux(285)-2
s(2101) =< max([aux(285),s(2099),s(2099)])
s(2102) =< s(2081)*s(2099)
s(2103) =< s(2081)*s(2100)
s(2104) =< max([0,aux(285),0])+aux(285)
s(2105) =< s(2098)*s(2099)
s(2106) =< s(2098)*s(2100)
s(2101) =< s(2104)+1
s(2107) =< s(2105)*2
s(2108) =< s(2103)+s(2106)+aux(285)
s(2108) =< s(2098)*s(2104)
s(2109) =< s(2102)+s(2105)+aux(285)
s(2109) =< s(2107)+s(2107)
s(2109) =< s(2081)*s(2101)
s(2110) =< s(2109)
s(2111) =< s(2108)
s(2112) =< aux(285)
s(2112) =< aux(286)
s(2113) =< s(2112)*s(2099)
s(2114) =< s(2112)*s(2100)
s(2115) =< s(2113)*2
s(2116) =< s(2103)+s(2114)+aux(285)
s(2116) =< s(2112)*s(2104)
s(2117) =< s(2102)+s(2113)+aux(285)
s(2117) =< s(2115)+s(2115)
s(2117) =< s(2081)*s(2101)
s(2118) =< s(2117)
s(2119) =< s(2116)
s(2126) =< aux(284)
s(2130) =< max([aux(285),s(2099),s(2099)])
s(2133) =< max([aux(283),aux(285),0])+aux(285)
s(2130) =< s(2133)+1
s(2137) =< s(2103)+s(2114)+aux(285)
s(2137) =< s(2112)*s(2133)
s(2138) =< s(2102)+s(2113)+aux(285)
s(2138) =< s(2115)+s(2115)+aux(284)
s(2138) =< s(2081)*s(2130)
s(2139) =< s(2138)
s(2140) =< s(2137)

  with precondition: [V_PL_bufend>=V_s+3] 

* Chain [110]: 464*s(2166)+264*s(2167)+60*s(2177)+60*s(2178)+36*s(2180)+12*s(2192)+12*s(2193)+60*s(2194)+12*s(2200)+12*s(2201)+24*s(2222)+24*s(2223)+48*s(2230)+48*s(2231)+20*s(2246)+1
  Such that:aux(287) =< 1
aux(288) =< 2
aux(289) =< -2*V_s+2*V_PL_bufend
aux(290) =< -V_s+V_PL_bufend
aux(291) =< -V_s+V_PL_bufend+1
aux(292) =< -V_s/2+V_PL_bufend/2
s(2179) =< aux(290)
s(2179) =< aux(292)
s(2166) =< aux(290)
s(2180) =< aux(290)
s(2180) =< aux(292)
s(2180) =< s(2179)
s(2181) =< aux(290)
s(2182) =< aux(290)-2
s(2213) =< max([aux(290),s(2181),s(2181)])
s(2184) =< s(2166)*s(2181)
s(2185) =< s(2166)*s(2182)
s(2216) =< max([aux(287),aux(290),0])+aux(290)
s(2187) =< s(2180)*s(2181)
s(2188) =< s(2180)*s(2182)
s(2213) =< s(2216)+1
s(2189) =< s(2187)*2
s(2220) =< s(2185)+s(2188)+aux(290)
s(2220) =< s(2180)*s(2216)
s(2221) =< s(2184)+s(2187)+aux(290)
s(2221) =< s(2189)+s(2189)+aux(288)
s(2221) =< s(2166)*s(2213)
s(2222) =< s(2221)
s(2223) =< s(2220)
s(2194) =< aux(290)
s(2194) =< aux(292)
s(2195) =< s(2194)*s(2181)
s(2196) =< s(2194)*s(2182)
s(2197) =< s(2195)*2
s(2228) =< s(2185)+s(2196)+aux(290)
s(2228) =< s(2194)*s(2216)
s(2229) =< s(2184)+s(2195)+aux(290)
s(2229) =< s(2197)+s(2197)+aux(288)
s(2229) =< s(2166)*s(2213)
s(2230) =< s(2229)
s(2231) =< s(2228)
s(2165) =< aux(289)
s(2165) =< aux(290)
s(2167) =< s(2165)
s(2168) =< s(2165)
s(2169) =< s(2165)-2
s(2170) =< max([aux(290),s(2168),s(2168)])
s(2171) =< s(2167)*s(2168)
s(2172) =< s(2167)*s(2169)
s(2173) =< max([aux(290),s(2165),0])+s(2165)
s(2170) =< s(2173)+1
s(2174) =< s(2171)*2
s(2175) =< s(2172)+s(2172)+aux(290)
s(2175) =< s(2167)*s(2173)
s(2176) =< s(2171)+s(2171)+aux(290)
s(2176) =< s(2174)+s(2174)+aux(289)
s(2176) =< s(2167)*s(2170)
s(2177) =< s(2176)
s(2178) =< s(2175)
s(2245) =< aux(290)
s(2245) =< aux(291)
s(2246) =< s(2245)
s(2183) =< max([aux(290),s(2181),s(2181)])
s(2186) =< max([0,aux(290),0])+aux(290)
s(2183) =< s(2186)+1
s(2190) =< s(2185)+s(2188)+aux(290)
s(2190) =< s(2180)*s(2186)
s(2191) =< s(2184)+s(2187)+aux(290)
s(2191) =< s(2189)+s(2189)
s(2191) =< s(2166)*s(2183)
s(2192) =< s(2191)
s(2193) =< s(2190)
s(2198) =< s(2185)+s(2196)+aux(290)
s(2198) =< s(2194)*s(2186)
s(2199) =< s(2184)+s(2195)+aux(290)
s(2199) =< s(2197)+s(2197)
s(2199) =< s(2166)*s(2183)
s(2200) =< s(2199)
s(2201) =< s(2198)

  with precondition: [V_PL_bufend>=V_s+4] 

* Chain [109]: 222*s(2295)+468*s(2296)+96*s(2306)+96*s(2307)+24*s(2315)+24*s(2327)+24*s(2328)+24*s(2329)+24*s(2335)+24*s(2336)+1
  Such that:aux(293) =< 1
aux(294) =< 2
aux(295) =< -2*V_s+2*V_PL_bufend
aux(296) =< -V_s+V_PL_bufend
aux(297) =< -V_s/2+V_PL_bufend/2
s(2313) =< aux(296)
s(2313) =< aux(297)
s(2295) =< aux(296)
s(2315) =< aux(296)
s(2315) =< aux(297)
s(2315) =< s(2313)
s(2316) =< aux(296)
s(2317) =< aux(296)-2
s(2318) =< max([aux(296),s(2316),s(2316)])
s(2319) =< s(2295)*s(2316)
s(2320) =< s(2295)*s(2317)
s(2321) =< max([aux(293),aux(296),0])+aux(296)
s(2322) =< s(2315)*s(2316)
s(2323) =< s(2315)*s(2317)
s(2318) =< s(2321)+1
s(2324) =< s(2322)*2
s(2325) =< s(2320)+s(2323)+aux(296)
s(2325) =< s(2315)*s(2321)
s(2326) =< s(2319)+s(2322)+aux(296)
s(2326) =< s(2324)+s(2324)+aux(294)
s(2326) =< s(2295)*s(2318)
s(2327) =< s(2326)
s(2328) =< s(2325)
s(2329) =< aux(296)
s(2329) =< aux(297)
s(2330) =< s(2329)*s(2316)
s(2331) =< s(2329)*s(2317)
s(2332) =< s(2330)*2
s(2333) =< s(2320)+s(2331)+aux(296)
s(2333) =< s(2329)*s(2321)
s(2334) =< s(2319)+s(2330)+aux(296)
s(2334) =< s(2332)+s(2332)+aux(294)
s(2334) =< s(2295)*s(2318)
s(2335) =< s(2334)
s(2336) =< s(2333)
s(2294) =< aux(295)
s(2294) =< aux(296)
s(2296) =< s(2294)
s(2297) =< s(2294)
s(2298) =< s(2294)-2
s(2299) =< max([aux(296),s(2297),s(2297)])
s(2300) =< s(2296)*s(2297)
s(2301) =< s(2296)*s(2298)
s(2302) =< max([aux(296),s(2294),0])+s(2294)
s(2299) =< s(2302)+1
s(2303) =< s(2300)*2
s(2304) =< s(2301)+s(2301)+aux(296)
s(2304) =< s(2296)*s(2302)
s(2305) =< s(2300)+s(2300)+aux(296)
s(2305) =< s(2303)+s(2303)+aux(295)
s(2305) =< s(2296)*s(2299)
s(2306) =< s(2305)
s(2307) =< s(2304)

  with precondition: [V_PL_bufend>=V_s+5] 

* Chain [108]: 4*s(2395)+264*s(2396)+48*s(2406)+48*s(2407)+1
  Such that:aux(298) =< -2*V_s+2*V_PL_bufend
aux(299) =< -V_s+V_PL_bufend
s(2394) =< aux(298)
s(2395) =< aux(299)
s(2394) =< aux(299)
s(2396) =< s(2394)
s(2397) =< s(2394)
s(2398) =< s(2394)-2
s(2399) =< max([aux(299),s(2397),s(2397)])
s(2400) =< s(2396)*s(2397)
s(2401) =< s(2396)*s(2398)
s(2402) =< max([aux(299),s(2394),0])+s(2394)
s(2399) =< s(2402)+1
s(2403) =< s(2400)*2
s(2404) =< s(2401)+s(2401)+aux(299)
s(2404) =< s(2396)*s(2402)
s(2405) =< s(2400)+s(2400)+aux(299)
s(2405) =< s(2403)+s(2403)+aux(298)
s(2405) =< s(2396)*s(2399)
s(2406) =< s(2405)
s(2407) =< s(2404)

  with precondition: [V_PL_bufend>=V_s+6] 

* Chain [107]: 2
  with precondition: [V_s+1>=V_PL_bufend] 

* Chain [106]: 0
  with precondition: [V_s>=V_PL_bufend] 


Closed-form bounds of eval_Perl_scan_vstring_start(V_s,V_PL_bufend,B): 
-------------------------------------
* Chain [115] with precondition: [V_PL_bufend=V_s+2] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [114] with precondition: [V_PL_bufend=V_s+1] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [113] with precondition: [V_PL_bufend>=V_s+1] 
    - Upper bound: -5*V_s+5*V_PL_bufend 
    - Complexity: n 
* Chain [112] with precondition: [V_PL_bufend>=V_s+2] 
    - Upper bound: (-24*V_s+24*V_PL_bufend-48)*(-V_s+V_PL_bufend)+1+(-123*V_s+123*V_PL_bufend)+(-24*V_s+24*V_PL_bufend)*(-V_s+V_PL_bufend) 
    - Complexity: n^2 
* Chain [111] with precondition: [V_PL_bufend>=V_s+3] 
    - Upper bound: (-120*V_s+120*V_PL_bufend-240)*(-V_s+V_PL_bufend)+23+(-48*V_s+48*V_PL_bufend-48)*(-2*V_s+2*V_PL_bufend)+(-500*V_s+500*V_PL_bufend)+(-120*V_s+120*V_PL_bufend)*(-V_s+V_PL_bufend)+(-96*V_s+96*V_PL_bufend)+(-2*V_s+2*V_PL_bufend)*(-48*V_s+48*V_PL_bufend) 
    - Complexity: n^2 
* Chain [110] with precondition: [V_PL_bufend>=V_s+4] 
    - Upper bound: (-192*V_s+192*V_PL_bufend-384)*(-V_s+V_PL_bufend)+1+(-240*V_s+240*V_PL_bufend-240)*(-2*V_s+2*V_PL_bufend)+(-892*V_s+892*V_PL_bufend)+(-192*V_s+192*V_PL_bufend)*(-V_s+V_PL_bufend)+(-528*V_s+528*V_PL_bufend)+(-2*V_s+2*V_PL_bufend)*(-240*V_s+240*V_PL_bufend) 
    - Complexity: n^2 
* Chain [109] with precondition: [V_PL_bufend>=V_s+5] 
    - Upper bound: (-96*V_s+96*V_PL_bufend-192)*(-V_s+V_PL_bufend)+1+(-384*V_s+384*V_PL_bufend-384)*(-2*V_s+2*V_PL_bufend)+(-558*V_s+558*V_PL_bufend)+(-96*V_s+96*V_PL_bufend)*(-V_s+V_PL_bufend)+(-936*V_s+936*V_PL_bufend)+(-2*V_s+2*V_PL_bufend)*(-384*V_s+384*V_PL_bufend) 
    - Complexity: n^2 
* Chain [108] with precondition: [V_PL_bufend>=V_s+6] 
    - Upper bound: (-192*V_s+192*V_PL_bufend-192)*(-2*V_s+2*V_PL_bufend)+1+(-100*V_s+100*V_PL_bufend)+(-528*V_s+528*V_PL_bufend)+(-2*V_s+2*V_PL_bufend)*(-192*V_s+192*V_PL_bufend) 
    - Complexity: n^2 
* Chain [107] with precondition: [V_s+1>=V_PL_bufend] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [106] with precondition: [V_s>=V_PL_bufend] 
    - Upper bound: 0 
    - Complexity: constant 

### Maximum cost of eval_Perl_scan_vstring_start(V_s,V_PL_bufend,B): max([2,nat(-V_s+V_PL_bufend)*95+1+max([nat(nat(-2*V_s+2*V_PL_bufend)+ -2)*96*nat(-2*V_s+2*V_PL_bufend)+nat(-2*V_s+2*V_PL_bufend)*264+nat(-2*V_s+2*V_PL_bufend)*96*nat(-2*V_s+2*V_PL_bufend),nat(nat(-2*V_s+2*V_PL_bufend)+ -2)*24*nat(-2*V_s+2*V_PL_bufend)+nat(nat(-V_s+V_PL_bufend)+ -2)*72*nat(-V_s+V_PL_bufend)+nat(-V_s+V_PL_bufend)*377+nat(-V_s+V_PL_bufend)*72*nat(-V_s+V_PL_bufend)+nat(-2*V_s+2*V_PL_bufend)*48+nat(-2*V_s+2*V_PL_bufend)*24*nat(-2*V_s+2*V_PL_bufend)+max([nat(nat(-V_s+V_PL_bufend)+ -2)*24*nat(-V_s+V_PL_bufend)+nat(-V_s+V_PL_bufend)*24*nat(-V_s+V_PL_bufend)+max([22,nat(nat(-2*V_s+2*V_PL_bufend)+ -2)*96*nat(-2*V_s+2*V_PL_bufend)+nat(nat(-V_s+V_PL_bufend)+ -2)*72*nat(-V_s+V_PL_bufend)+nat(-V_s+V_PL_bufend)*392+nat(-V_s+V_PL_bufend)*72*nat(-V_s+V_PL_bufend)+nat(-2*V_s+2*V_PL_bufend)*216+nat(-2*V_s+2*V_PL_bufend)*96*nat(-2*V_s+2*V_PL_bufend)]),nat(nat(-2*V_s+2*V_PL_bufend)+ -2)*168*nat(-2*V_s+2*V_PL_bufend)+nat(-V_s+V_PL_bufend)*58+nat(-2*V_s+2*V_PL_bufend)*420+nat(-2*V_s+2*V_PL_bufend)*168*nat(-2*V_s+2*V_PL_bufend)])+(nat(nat(-V_s+V_PL_bufend)+ -2)*24*nat(-V_s+V_PL_bufend)+nat(-V_s+V_PL_bufend)*23+nat(-V_s+V_PL_bufend)*24*nat(-V_s+V_PL_bufend))])+nat(-V_s+V_PL_bufend)*5]) 
Asymptotic class: n^2 
* Total analysis performed in 1418 ms.

