WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_Configure_11/4,eval_Configure_12/5,eval_Configure_bb7_in/4,eval_Configure_bb8_in/4,eval_Configure_bb9_in/5]
1. recursive  : [eval_Configure__critedge_in/8,eval_Configure_bb10_in/8]
2. recursive  : [eval_Configure_3/3,eval_Configure_4/4,eval_Configure_7/4,eval_Configure_8/5,eval_Configure__critedge_in_loop_cont/4,eval_Configure_bb2_in/3,eval_Configure_bb3_in/3,eval_Configure_bb4_in/4,eval_Configure_bb5_in/4,eval_Configure_bb6_in/5,eval_Configure_bb7_in_loop_cont/9]
3. non_recursive  : [eval_Configure_stop/1]
4. non_recursive  : [eval_Configure_bb11_in/1]
5. non_recursive  : [eval_Configure_bb2_in_loop_cont/2]
6. non_recursive  : [eval_Configure_1/3]
7. non_recursive  : [eval_Configure_0/2]
8. non_recursive  : [eval_Configure_bb1_in/2]
9. non_recursive  : [eval_Configure_bb0_in/2]
10. non_recursive  : [eval_Configure_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_Configure_bb7_in/4
1. SCC is partially evaluated into eval_Configure__critedge_in/8
2. SCC is partially evaluated into eval_Configure_bb2_in/3
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_Configure_1/3
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_Configure_bb0_in/2
10. SCC is partially evaluated into eval_Configure_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_Configure_bb7_in/4 
* CE 12 is refined into CE [17] 
* CE 14 is refined into CE [18] 
* CE 13 is refined into CE [19] 


### Cost equations --> "Loop" of eval_Configure_bb7_in/4 
* CEs [19] --> Loop 16 
* CEs [17] --> Loop 17 
* CEs [18] --> Loop 18 

### Ranking functions of CR eval_Configure_bb7_in(V_ac,V_NumberParams_0,B,C) 
* RF of phase [16]: [V_ac-V_NumberParams_0]

#### Partial ranking functions of CR eval_Configure_bb7_in(V_ac,V_NumberParams_0,B,C) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    V_ac-V_NumberParams_0


### Specialization of cost equations eval_Configure__critedge_in/8 
* CE 16 is refined into CE [20] 
* CE 15 is refined into CE [21] 


### Cost equations --> "Loop" of eval_Configure__critedge_in/8 
* CEs [21] --> Loop 19 
* CEs [20] --> Loop 20 

### Ranking functions of CR eval_Configure__critedge_in(V_CLcount_2,V_4,V_7,V_9,V_NumberParams_0,V_CLcount_3,B,C) 
* RF of phase [19]: [V_NumberParams_0-V_CLcount_3]

#### Partial ranking functions of CR eval_Configure__critedge_in(V_CLcount_2,V_4,V_7,V_9,V_NumberParams_0,V_CLcount_3,B,C) 
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    V_NumberParams_0-V_CLcount_3


### Specialization of cost equations eval_Configure_bb2_in/3 
* CE 7 is refined into CE [22] 
* CE 11 is refined into CE [23] 
* CE 8 is refined into CE [24,25,26,27] 
* CE 9 is refined into CE [28,29,30,31] 
* CE 10 is refined into CE [32] 


### Cost equations --> "Loop" of eval_Configure_bb2_in/3 
* CEs [27,31] --> Loop 21 
* CEs [26,30] --> Loop 22 
* CEs [32] --> Loop 23 
* CEs [25,29] --> Loop 24 
* CEs [24,28] --> Loop 25 
* CEs [22] --> Loop 26 
* CEs [23] --> Loop 27 

### Ranking functions of CR eval_Configure_bb2_in(V_ac,V_CLcount_2,B) 
* RF of phase [21,22,23]: [V_ac-V_CLcount_2]

#### Partial ranking functions of CR eval_Configure_bb2_in(V_ac,V_CLcount_2,B) 
* Partial RF of phase [21,22,23]:
  - RF of loop [21:1]:
    V_ac/2-V_CLcount_2/2-1
  - RF of loop [22:1]:
    V_ac-V_CLcount_2-1
  - RF of loop [23:1]:
    V_ac/2-V_CLcount_2/2


### Specialization of cost equations eval_Configure_1/3 
* CE 5 is refined into CE [33,34,35,36,37] 
* CE 4 is refined into CE [38,39,40,41,42] 
* CE 6 is refined into CE [43,44,45] 


### Cost equations --> "Loop" of eval_Configure_1/3 
* CEs [37] --> Loop 28 
* CEs [36] --> Loop 29 
* CEs [35] --> Loop 30 
* CEs [42] --> Loop 31 
* CEs [41] --> Loop 32 
* CEs [40] --> Loop 33 
* CEs [45] --> Loop 34 
* CEs [43,44] --> Loop 35 
* CEs [33] --> Loop 36 
* CEs [38] --> Loop 37 
* CEs [34] --> Loop 38 
* CEs [39] --> Loop 39 

### Ranking functions of CR eval_Configure_1(V_ac,V_1,B) 

#### Partial ranking functions of CR eval_Configure_1(V_ac,V_1,B) 


### Specialization of cost equations eval_Configure_bb0_in/2 
* CE 2 is refined into CE [46,47,48,49,50,51,52,53,54,55,56,57] 
* CE 3 is refined into CE [58,59,60] 


### Cost equations --> "Loop" of eval_Configure_bb0_in/2 
* CEs [54,57] --> Loop 40 
* CEs [53,56] --> Loop 41 
* CEs [51,52,55] --> Loop 42 
* CEs [50] --> Loop 43 
* CEs [59] --> Loop 44 
* CEs [48,49] --> Loop 45 
* CEs [46,47] --> Loop 46 
* CEs [58,60] --> Loop 47 

### Ranking functions of CR eval_Configure_bb0_in(V_ac,B) 

#### Partial ranking functions of CR eval_Configure_bb0_in(V_ac,B) 


### Specialization of cost equations eval_Configure_start/2 
* CE 1 is refined into CE [61,62,63,64,65,66,67,68] 


### Cost equations --> "Loop" of eval_Configure_start/2 
* CEs [68] --> Loop 48 
* CEs [67] --> Loop 49 
* CEs [66] --> Loop 50 
* CEs [65] --> Loop 51 
* CEs [64] --> Loop 52 
* CEs [63] --> Loop 53 
* CEs [62] --> Loop 54 
* CEs [61] --> Loop 55 

### Ranking functions of CR eval_Configure_start(V_ac,B) 

#### Partial ranking functions of CR eval_Configure_start(V_ac,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_Configure_bb7_in(V_ac,V_NumberParams_0,B,C):
* Chain [[16],18]: 1*it(16)+0
  Such that:it(16) =< V_ac-V_NumberParams_0

  with precondition: [B=3,V_ac=C,V_ac>=V_NumberParams_0+1] 

* Chain [[16],17]: 1*it(16)+0
  Such that:it(16) =< -V_NumberParams_0+C

  with precondition: [B=3,C>=V_NumberParams_0+1,V_ac>=C+1] 

* Chain [18]: 0
  with precondition: [B=3,V_NumberParams_0=V_ac,V_NumberParams_0=C] 

* Chain [17]: 0
  with precondition: [B=3,V_NumberParams_0=C,V_ac>=V_NumberParams_0+1] 


#### Cost of chains of eval_Configure__critedge_in(V_CLcount_2,V_4,V_7,V_9,V_NumberParams_0,V_CLcount_3,B,C):
* Chain [[19],20]: 1*it(19)+0
  Such that:it(19) =< V_NumberParams_0-V_CLcount_3

  with precondition: [V_4=0,B=2,V_CLcount_2+1=V_9,V_NumberParams_0=C,V_CLcount_3>=V_CLcount_2+1,V_NumberParams_0>=V_CLcount_3+1] 

* Chain [20]: 0
  with precondition: [V_4=0,B=2,V_9=V_CLcount_2+1,V_CLcount_3=C,V_CLcount_3>=V_9,V_CLcount_3>=V_NumberParams_0] 


#### Cost of chains of eval_Configure_bb2_in(V_ac,V_CLcount_2,B):
* Chain [[21,22,23],27]: 2*it(21)+1*it(22)+4*s(7)+0
  Such that:aux(4) =< V_ac-V_CLcount_2
aux(5) =< V_ac-V_CLcount_2+1
aux(6) =< V_ac/2-V_CLcount_2/2
aux(7) =< V_ac/2-V_CLcount_2/2+1/2
it(21) =< aux(4)
it(22) =< aux(4)
s(8) =< aux(4)
it(21) =< aux(5)
it(22) =< aux(5)
s(8) =< aux(5)
it(21) =< aux(6)
it(21) =< aux(7)
s(7) =< s(8)

  with precondition: [B=4,V_CLcount_2>=1,V_ac>=V_CLcount_2+1] 

* Chain [[21,22,23],26]: 2*it(21)+5*it(22)+0
  Such that:aux(8) =< V_ac-V_CLcount_2
aux(9) =< V_ac/2-V_CLcount_2/2
it(21) =< aux(8)
it(22) =< aux(8)
it(21) =< aux(9)

  with precondition: [B=4,V_CLcount_2>=1,V_ac>=V_CLcount_2+2] 

* Chain [[21,22,23],25,27]: 2*it(21)+5*it(22)+1
  Such that:aux(10) =< V_ac-V_CLcount_2
aux(11) =< V_ac/2-V_CLcount_2/2
it(21) =< aux(10)
it(22) =< aux(10)
it(21) =< aux(11)

  with precondition: [B=4,V_CLcount_2>=1,V_ac>=V_CLcount_2+2] 

* Chain [[21,22,23],24,27]: 2*it(21)+9*it(22)+1
  Such that:aux(15) =< V_ac-V_CLcount_2
aux(16) =< V_ac/2-V_CLcount_2/2
aux(7) =< aux(15)
aux(7) =< aux(16)
it(22) =< aux(15)
it(21) =< aux(15)
it(21) =< aux(16)
it(21) =< aux(7)

  with precondition: [B=4,V_CLcount_2>=1,V_ac>=V_CLcount_2+3] 

* Chain [27]: 0
  with precondition: [B=4,V_CLcount_2>=1,V_CLcount_2>=V_ac] 

* Chain [26]: 0
  with precondition: [B=4,V_CLcount_2>=1,V_ac>=V_CLcount_2+1] 

* Chain [25,27]: 1
  with precondition: [B=4,V_CLcount_2+1=V_ac,V_CLcount_2>=1] 

* Chain [24,27]: 4*s(9)+1
  Such that:aux(14) =< V_ac-V_CLcount_2
s(9) =< aux(14)

  with precondition: [B=4,V_CLcount_2>=1,V_ac>=V_CLcount_2+2] 


#### Cost of chains of eval_Configure_1(V_ac,V_1,B):
* Chain [39]: 0
  with precondition: [V_ac=3,0>=V_1+1] 

* Chain [38]: 0
  with precondition: [V_ac=3,V_1>=1] 

* Chain [37]: 1
  with precondition: [V_ac=4,0>=V_1+1] 

* Chain [36]: 1
  with precondition: [V_ac=4,V_1>=1] 

* Chain [35]: 6*s(35)+19*s(36)+1
  Such that:aux(21) =< V_ac
aux(22) =< V_ac/2
s(35) =< aux(21)
s(36) =< aux(21)
s(35) =< aux(22)

  with precondition: [V_1=0,V_ac>=3] 

* Chain [34]: 9*s(46)+2*s(47)+1
  Such that:s(43) =< V_ac
s(44) =< V_ac/2
s(45) =< s(43)
s(45) =< s(44)
s(46) =< s(43)
s(47) =< s(43)
s(47) =< s(44)
s(47) =< s(45)

  with precondition: [V_1=0,V_ac>=4] 

* Chain [33]: 2*s(52)+5*s(53)+0
  Such that:aux(23) =< V_ac
aux(24) =< V_ac/2
s(52) =< aux(23)
s(53) =< aux(23)
s(52) =< aux(24)

  with precondition: [0>=V_1+1,V_ac>=4] 

* Chain [32]: 14*s(58)+4*s(59)+1
  Such that:s(56) =< V_ac
s(57) =< V_ac/2
s(58) =< s(56)
s(59) =< s(56)
s(59) =< s(57)

  with precondition: [0>=V_1+1,V_ac>=5] 

* Chain [31]: 9*s(63)+2*s(64)+1
  Such that:s(60) =< V_ac
s(61) =< V_ac/2
s(62) =< s(60)
s(62) =< s(61)
s(63) =< s(60)
s(64) =< s(60)
s(64) =< s(61)
s(64) =< s(62)

  with precondition: [0>=V_1+1,V_ac>=6] 

* Chain [30]: 2*s(69)+5*s(70)+0
  Such that:aux(25) =< V_ac
aux(26) =< V_ac/2
s(69) =< aux(25)
s(70) =< aux(25)
s(69) =< aux(26)

  with precondition: [V_ac>=4,V_1>=1] 

* Chain [29]: 14*s(75)+4*s(76)+1
  Such that:s(73) =< V_ac
s(74) =< V_ac/2
s(75) =< s(73)
s(76) =< s(73)
s(76) =< s(74)

  with precondition: [V_ac>=5,V_1>=1] 

* Chain [28]: 9*s(80)+2*s(81)+1
  Such that:s(77) =< V_ac
s(78) =< V_ac/2
s(79) =< s(77)
s(79) =< s(78)
s(80) =< s(77)
s(81) =< s(77)
s(81) =< s(78)
s(81) =< s(79)

  with precondition: [V_ac>=6,V_1>=1] 


#### Cost of chains of eval_Configure_bb0_in(V_ac,B):
* Chain [47]: 8
  with precondition: [V_ac=2] 

* Chain [46]: 0
  with precondition: [V_ac=3] 

* Chain [45]: 1
  with precondition: [V_ac=4] 

* Chain [44]: 0
  with precondition: [1>=V_ac] 

* Chain [43]: 6*s(92)+19*s(93)+1
  Such that:s(90) =< V_ac
s(91) =< V_ac/2
s(92) =< s(90)
s(93) =< s(90)
s(92) =< s(91)

  with precondition: [V_ac>=3] 

* Chain [42]: 19*s(97)+2*s(98)+4*s(101)+1
  Such that:aux(28) =< V_ac
aux(29) =< V_ac/2
s(96) =< aux(28)
s(96) =< aux(29)
s(97) =< aux(28)
s(98) =< aux(28)
s(98) =< aux(29)
s(98) =< s(96)
s(101) =< aux(28)
s(101) =< aux(29)

  with precondition: [V_ac>=4] 

* Chain [41]: 28*s(109)+8*s(110)+1
  Such that:aux(30) =< V_ac
aux(31) =< V_ac/2
s(109) =< aux(30)
s(110) =< aux(30)
s(110) =< aux(31)

  with precondition: [V_ac>=5] 

* Chain [40]: 18*s(118)+4*s(119)+1
  Such that:aux(32) =< V_ac
aux(33) =< V_ac/2
s(117) =< aux(32)
s(117) =< aux(33)
s(118) =< aux(32)
s(119) =< aux(32)
s(119) =< aux(33)
s(119) =< s(117)

  with precondition: [V_ac>=6] 


#### Cost of chains of eval_Configure_start(V_ac,B):
* Chain [55]: 8
  with precondition: [V_ac=2] 

* Chain [54]: 0
  with precondition: [V_ac=3] 

* Chain [53]: 1
  with precondition: [V_ac=4] 

* Chain [52]: 0
  with precondition: [1>=V_ac] 

* Chain [51]: 6*s(127)+19*s(128)+1
  Such that:s(125) =< V_ac
s(126) =< V_ac/2
s(127) =< s(125)
s(128) =< s(125)
s(127) =< s(126)

  with precondition: [V_ac>=3] 

* Chain [50]: 19*s(132)+2*s(133)+4*s(134)+1
  Such that:s(129) =< V_ac
s(130) =< V_ac/2
s(131) =< s(129)
s(131) =< s(130)
s(132) =< s(129)
s(133) =< s(129)
s(133) =< s(130)
s(133) =< s(131)
s(134) =< s(129)
s(134) =< s(130)

  with precondition: [V_ac>=4] 

* Chain [49]: 28*s(137)+8*s(138)+1
  Such that:s(135) =< V_ac
s(136) =< V_ac/2
s(137) =< s(135)
s(138) =< s(135)
s(138) =< s(136)

  with precondition: [V_ac>=5] 

* Chain [48]: 18*s(142)+4*s(143)+1
  Such that:s(139) =< V_ac
s(140) =< V_ac/2
s(141) =< s(139)
s(141) =< s(140)
s(142) =< s(139)
s(143) =< s(139)
s(143) =< s(140)
s(143) =< s(141)

  with precondition: [V_ac>=6] 


Closed-form bounds of eval_Configure_start(V_ac,B): 
-------------------------------------
* Chain [55] with precondition: [V_ac=2] 
    - Upper bound: 8 
    - Complexity: constant 
* Chain [54] with precondition: [V_ac=3] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [53] with precondition: [V_ac=4] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [52] with precondition: [1>=V_ac] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [51] with precondition: [V_ac>=3] 
    - Upper bound: 25*V_ac+1 
    - Complexity: n 
* Chain [50] with precondition: [V_ac>=4] 
    - Upper bound: 25*V_ac+1 
    - Complexity: n 
* Chain [49] with precondition: [V_ac>=5] 
    - Upper bound: 36*V_ac+1 
    - Complexity: n 
* Chain [48] with precondition: [V_ac>=6] 
    - Upper bound: 22*V_ac+1 
    - Complexity: n 

### Maximum cost of eval_Configure_start(V_ac,B): max([8,nat(V_ac)*36+1]) 
Asymptotic class: n 
* Total analysis performed in 184 ms.

