WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_foo_bb1_in/3,eval_foo_bb2_in/3]
1. non_recursive  : [eval_foo_stop/1]
2. non_recursive  : [eval_foo_bb3_in/1]
3. non_recursive  : [eval_foo_bb1_in_loop_cont/2]
4. non_recursive  : [eval_foo_bb0_in/3]
5. non_recursive  : [eval_foo_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_foo_bb1_in/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_foo_bb0_in/3
5. SCC is partially evaluated into eval_foo_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_foo_bb1_in/3 
* CE 5 is refined into CE [6] 
* CE 3 is refined into CE [7] 
* CE 4 is refined into CE [8] 


### Cost equations --> "Loop" of eval_foo_bb1_in/3 
* CEs [7] --> Loop 6 
* CEs [8] --> Loop 7 
* CEs [6] --> Loop 8 

### Ranking functions of CR eval_foo_bb1_in(V__01,V__0,B) 

#### Partial ranking functions of CR eval_foo_bb1_in(V__01,V__0,B) 
* Partial RF of phase [6,7]:
  - RF of loop [6:1]:
    V__0+1 depends on loops [7:1] 
    -V__01/2 depends on loops [7:1] 
  - RF of loop [7:1]:
    V__01+1 depends on loops [6:1] 
    V__01+2*V__0+1


### Specialization of cost equations eval_foo_bb0_in/3 
* CE 2 is refined into CE [9,10] 


### Cost equations --> "Loop" of eval_foo_bb0_in/3 
* CEs [10] --> Loop 9 
* CEs [9] --> Loop 10 

### Ranking functions of CR eval_foo_bb0_in(V_a,V_b,B) 

#### Partial ranking functions of CR eval_foo_bb0_in(V_a,V_b,B) 


### Specialization of cost equations eval_foo_start/3 
* CE 1 is refined into CE [11,12] 


### Cost equations --> "Loop" of eval_foo_start/3 
* CEs [12] --> Loop 11 
* CEs [11] --> Loop 12 

### Ranking functions of CR eval_foo_start(V_a,V_b,B) 

#### Partial ranking functions of CR eval_foo_start(V_a,V_b,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_foo_bb1_in(V__01,V__0,B):
* Chain [[6,7],8]: 1*it(6)+1*it(7)+0
  Such that:aux(29) =< V__01+2*V__0
it(7) =< V__01+2*V__0+1
aux(52) =< V__01+2*V__0+1/2
aux(2) =< -V__01/2
aux(4) =< V__0+1
aux(50) =< aux(29)
aux(42) =< aux(29)+1/2
aux(1) =< it(7)*aux(52)
aux(3) =< it(7)*aux(50)
aux(1) =< it(7)*aux(42)
aux(3) =< it(7)*aux(29)
it(6) =< aux(3)+aux(4)
it(6) =< aux(1)+aux(2)

  with precondition: [B=2,V__0>=0] 

* Chain [8]: 0
  with precondition: [B=2,0>=V__0+1] 


#### Cost of chains of eval_foo_bb0_in(V_a,V_b,B):
* Chain [10]: 0
  with precondition: [0>=V_a+1] 

* Chain [9]: 1*s(2)+1*s(10)+0
  Such that:s(5) =< V_a+1
s(1) =< 2*V_a+V_b
s(2) =< 2*V_a+V_b+1
s(3) =< 2*V_a+V_b+1/2
s(4) =< -V_b/2
s(6) =< s(1)
s(7) =< s(1)+1/2
s(8) =< s(2)*s(3)
s(9) =< s(2)*s(6)
s(8) =< s(2)*s(7)
s(9) =< s(2)*s(1)
s(10) =< s(9)+s(5)
s(10) =< s(8)+s(4)

  with precondition: [V_a>=0] 


#### Cost of chains of eval_foo_start(V_a,V_b,B):
* Chain [12]: 0
  with precondition: [0>=V_a+1] 

* Chain [11]: 1*s(13)+1*s(20)+0
  Such that:s(11) =< V_a+1
s(12) =< 2*V_a+V_b
s(13) =< 2*V_a+V_b+1
s(14) =< 2*V_a+V_b+1/2
s(15) =< -V_b/2
s(16) =< s(12)
s(17) =< s(12)+1/2
s(18) =< s(13)*s(14)
s(19) =< s(13)*s(16)
s(18) =< s(13)*s(17)
s(19) =< s(13)*s(12)
s(20) =< s(19)+s(11)
s(20) =< s(18)+s(15)

  with precondition: [V_a>=0] 


Closed-form bounds of eval_foo_start(V_a,V_b,B): 
-------------------------------------
* Chain [12] with precondition: [0>=V_a+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [11] with precondition: [V_a>=0] 
    - Upper bound: V_a+1+nat(2*V_a+V_b+1)*nat(2*V_a+V_b)+nat(2*V_a+V_b+1) 
    - Complexity: n^2 

### Maximum cost of eval_foo_start(V_a,V_b,B): nat(2*V_a+V_b+1)*nat(2*V_a+V_b)+nat(V_a+1)+nat(2*V_a+V_b+1) 
Asymptotic class: n^2 
* Total analysis performed in 79 ms.

