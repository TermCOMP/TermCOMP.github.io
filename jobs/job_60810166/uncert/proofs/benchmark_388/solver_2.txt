WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_t28_bb1_in/5,eval_t28_bb2_in/5]
1. recursive  : [eval_t28_bb3_in/2,eval_t28_bb4_in/2]
2. recursive  : [eval_t28_bb5_in/2,eval_t28_bb6_in/2]
3. non_recursive  : [eval_t28_stop/1]
4. non_recursive  : [eval_t28_bb7_in/1]
5. non_recursive  : [eval_t28_bb5_in_loop_cont/2]
6. non_recursive  : [eval_t28_bb3_in_loop_cont/3]
7. non_recursive  : [eval_t28_bb1_in_loop_cont/4]
8. non_recursive  : [eval_t28_bb0_in/3]
9. non_recursive  : [eval_t28_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_t28_bb1_in/5
1. SCC is partially evaluated into eval_t28_bb3_in/2
2. SCC is partially evaluated into eval_t28_bb5_in/2
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_t28_bb3_in_loop_cont/3
7. SCC is partially evaluated into eval_t28_bb1_in_loop_cont/4
8. SCC is partially evaluated into eval_t28_bb0_in/3
9. SCC is partially evaluated into eval_t28_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_t28_bb1_in/5 
* CE 4 is refined into CE [11] 
* CE 3 is refined into CE [12] 


### Cost equations --> "Loop" of eval_t28_bb1_in/5 
* CEs [12] --> Loop 11 
* CEs [11] --> Loop 12 

### Ranking functions of CR eval_t28_bb1_in(V__01,V__0,B,C,D) 
* RF of phase [11]: [-V__01+V__0]

#### Partial ranking functions of CR eval_t28_bb1_in(V__01,V__0,B,C,D) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    -V__01+V__0


### Specialization of cost equations eval_t28_bb3_in/2 
* CE 7 is refined into CE [13] 
* CE 6 is refined into CE [14] 


### Cost equations --> "Loop" of eval_t28_bb3_in/2 
* CEs [14] --> Loop 13 
* CEs [13] --> Loop 14 

### Ranking functions of CR eval_t28_bb3_in(V__12,B) 
* RF of phase [13]: [V__12]

#### Partial ranking functions of CR eval_t28_bb3_in(V__12,B) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    V__12


### Specialization of cost equations eval_t28_bb5_in/2 
* CE 10 is refined into CE [15] 
* CE 9 is refined into CE [16] 


### Cost equations --> "Loop" of eval_t28_bb5_in/2 
* CEs [16] --> Loop 15 
* CEs [15] --> Loop 16 

### Ranking functions of CR eval_t28_bb5_in(V__1,B) 
* RF of phase [15]: [-V__1]

#### Partial ranking functions of CR eval_t28_bb5_in(V__1,B) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    -V__1


### Specialization of cost equations eval_t28_bb3_in_loop_cont/3 
* CE 8 is refined into CE [17,18] 


### Cost equations --> "Loop" of eval_t28_bb3_in_loop_cont/3 
* CEs [18] --> Loop 17 
* CEs [17] --> Loop 18 

### Ranking functions of CR eval_t28_bb3_in_loop_cont(A,B,C) 

#### Partial ranking functions of CR eval_t28_bb3_in_loop_cont(A,B,C) 


### Specialization of cost equations eval_t28_bb1_in_loop_cont/4 
* CE 5 is refined into CE [19,20,21,22] 


### Cost equations --> "Loop" of eval_t28_bb1_in_loop_cont/4 
* CEs [22] --> Loop 19 
* CEs [20] --> Loop 20 
* CEs [21] --> Loop 21 
* CEs [19] --> Loop 22 

### Ranking functions of CR eval_t28_bb1_in_loop_cont(A,B,C,D) 

#### Partial ranking functions of CR eval_t28_bb1_in_loop_cont(A,B,C,D) 


### Specialization of cost equations eval_t28_bb0_in/3 
* CE 2 is refined into CE [23,24,25,26,27,28,29] 


### Cost equations --> "Loop" of eval_t28_bb0_in/3 
* CEs [29] --> Loop 23 
* CEs [27] --> Loop 24 
* CEs [26] --> Loop 25 
* CEs [24] --> Loop 26 
* CEs [23] --> Loop 27 
* CEs [28] --> Loop 28 
* CEs [25] --> Loop 29 

### Ranking functions of CR eval_t28_bb0_in(V_x,V_y,B) 

#### Partial ranking functions of CR eval_t28_bb0_in(V_x,V_y,B) 


### Specialization of cost equations eval_t28_start/3 
* CE 1 is refined into CE [30,31,32,33,34,35,36] 


### Cost equations --> "Loop" of eval_t28_start/3 
* CEs [36] --> Loop 30 
* CEs [35] --> Loop 31 
* CEs [34] --> Loop 32 
* CEs [33] --> Loop 33 
* CEs [32] --> Loop 34 
* CEs [31] --> Loop 35 
* CEs [30] --> Loop 36 

### Ranking functions of CR eval_t28_start(V_x,V_y,B) 

#### Partial ranking functions of CR eval_t28_start(V_x,V_y,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_t28_bb1_in(V__01,V__0,B,C,D):
* Chain [[11],12]: 1*it(11)+0
  Such that:it(11) =< -V__01/1000+C/1000

  with precondition: [B=4,C+999*V__01=1000*V__0,D+999*V__01=1000*V__0,V__0>=V__01+1] 

* Chain [12]: 0
  with precondition: [B=4,V__0=C,V__01=D,V__01>=V__0] 


#### Cost of chains of eval_t28_bb3_in(V__12,B):
* Chain [[13],14]: 1*it(13)+0
  Such that:it(13) =< V__12

  with precondition: [B=3,V__12>=1] 

* Chain [14]: 0
  with precondition: [B=3,0>=V__12] 


#### Cost of chains of eval_t28_bb5_in(V__1,B):
* Chain [[15],16]: 1*it(15)+0
  Such that:it(15) =< -V__1

  with precondition: [B=2,0>=V__1+1] 

* Chain [16]: 0
  with precondition: [B=2,V__1>=0] 


#### Cost of chains of eval_t28_bb3_in_loop_cont(A,B,C):
* Chain [18]: 1*s(1)+0
  Such that:s(1) =< -B

  with precondition: [A=3,0>=B+1] 

* Chain [17]: 0
  with precondition: [A=3,B>=0] 


#### Cost of chains of eval_t28_bb1_in_loop_cont(A,B,C,D):
* Chain [22]: 1*s(2)+0
  Such that:s(2) =< -B

  with precondition: [A=4,0>=B+1,0>=C] 

* Chain [21]: 1*s(3)+1*s(4)+0
  Such that:s(4) =< -B
s(3) =< C

  with precondition: [A=4,0>=B+1,C>=1] 

* Chain [20]: 0
  with precondition: [A=4,0>=C,B>=0] 

* Chain [19]: 1*s(5)+0
  Such that:s(5) =< C

  with precondition: [A=4,B>=0,C>=1] 


#### Cost of chains of eval_t28_bb0_in(V_x,V_y,B):
* Chain [29]: 0
  with precondition: [V_x=0,V_y=0] 

* Chain [28]: 1*s(6)+0
  Such that:s(6) =< -V_y/1000

  with precondition: [1000*V_x=999*V_y,0>=V_x+999] 

* Chain [27]: 1*s(7)+0
  Such that:s(7) =< -V_x

  with precondition: [0>=V_x+1,0>=V_y,V_y>=V_x] 

* Chain [26]: 1*s(8)+1*s(9)+0
  Such that:s(8) =< -V_x
s(9) =< V_y

  with precondition: [0>=V_x+1,V_y>=1] 

* Chain [25]: 1*s(10)+0
  Such that:s(10) =< V_y

  with precondition: [V_x>=0,V_y>=1,V_y>=V_x] 

* Chain [24]: 1*s(11)+1*s(12)+0
  Such that:s(12) =< -1000*V_x+999*V_y
s(11) =< V_x-V_y

  with precondition: [999*V_y>=1000*V_x+1,V_x>=V_y+1] 

* Chain [23]: 1*s(13)+1*s(14)+0
  Such that:s(13) =< V_x-V_y
s(14) =< 1000*V_x-999*V_y

  with precondition: [1000*V_x>=999*V_y+1,V_x>=V_y+1] 


#### Cost of chains of eval_t28_start(V_x,V_y,B):
* Chain [36]: 0
  with precondition: [V_x=0,V_y=0] 

* Chain [35]: 1*s(15)+0
  Such that:s(15) =< -V_y/1000

  with precondition: [1000*V_x=999*V_y,0>=V_x+999] 

* Chain [34]: 1*s(16)+0
  Such that:s(16) =< -V_x

  with precondition: [0>=V_x+1,0>=V_y,V_y>=V_x] 

* Chain [33]: 1*s(17)+1*s(18)+0
  Such that:s(17) =< -V_x
s(18) =< V_y

  with precondition: [0>=V_x+1,V_y>=1] 

* Chain [32]: 1*s(19)+0
  Such that:s(19) =< V_y

  with precondition: [V_x>=0,V_y>=1,V_y>=V_x] 

* Chain [31]: 1*s(20)+1*s(21)+0
  Such that:s(20) =< -1000*V_x+999*V_y
s(21) =< V_x-V_y

  with precondition: [999*V_y>=1000*V_x+1,V_x>=V_y+1] 

* Chain [30]: 1*s(22)+1*s(23)+0
  Such that:s(22) =< V_x-V_y
s(23) =< 1000*V_x-999*V_y

  with precondition: [1000*V_x>=999*V_y+1,V_x>=V_y+1] 


Closed-form bounds of eval_t28_start(V_x,V_y,B): 
-------------------------------------
* Chain [36] with precondition: [V_x=0,V_y=0] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [35] with precondition: [1000*V_x=999*V_y,0>=V_x+999] 
    - Upper bound: -V_y/1000 
    - Complexity: n 
* Chain [34] with precondition: [0>=V_x+1,0>=V_y,V_y>=V_x] 
    - Upper bound: -V_x 
    - Complexity: n 
* Chain [33] with precondition: [0>=V_x+1,V_y>=1] 
    - Upper bound: -V_x+V_y 
    - Complexity: n 
* Chain [32] with precondition: [V_x>=0,V_y>=1,V_y>=V_x] 
    - Upper bound: V_y 
    - Complexity: n 
* Chain [31] with precondition: [999*V_y>=1000*V_x+1,V_x>=V_y+1] 
    - Upper bound: -999*V_x+998*V_y 
    - Complexity: n 
* Chain [30] with precondition: [1000*V_x>=999*V_y+1,V_x>=V_y+1] 
    - Upper bound: 1001*V_x-1000*V_y 
    - Complexity: n 

### Maximum cost of eval_t28_start(V_x,V_y,B): max([max([max([nat(-V_x),nat(-V_y/1000)]),nat(V_x-V_y)+max([nat(-1000*V_x+999*V_y),nat(1000*V_x-999*V_y)])]),nat(-V_x)+nat(V_y)]) 
Asymptotic class: n 
* Total analysis performed in 68 ms.

