WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_speed_popl10_nested_multiple_0/4,eval_speed_popl10_nested_multiple_1/5,eval_speed_popl10_nested_multiple_bb2_in/4,eval_speed_popl10_nested_multiple_bb3_in/4,eval_speed_popl10_nested_multiple_bb4_in/5]
1. recursive  : [eval_speed_popl10_nested_multiple_bb1_in/5,eval_speed_popl10_nested_multiple_bb2_in_loop_cont/7,eval_speed_popl10_nested_multiple_bb5_in/6]
2. non_recursive  : [eval_speed_popl10_nested_multiple_stop/1]
3. non_recursive  : [eval_speed_popl10_nested_multiple_bb6_in/1]
4. non_recursive  : [eval_speed_popl10_nested_multiple_bb1_in_loop_cont/2]
5. non_recursive  : [eval_speed_popl10_nested_multiple_bb0_in/5]
6. non_recursive  : [eval_speed_popl10_nested_multiple_start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_speed_popl10_nested_multiple_bb2_in/4
1. SCC is partially evaluated into eval_speed_popl10_nested_multiple_bb1_in/5
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_speed_popl10_nested_multiple_bb0_in/5
6. SCC is partially evaluated into eval_speed_popl10_nested_multiple_start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_speed_popl10_nested_multiple_bb2_in/4 
* CE 5 is refined into CE [8] 
* CE 7 is refined into CE [9] 
* CE 6 is refined into CE [10] 


### Cost equations --> "Loop" of eval_speed_popl10_nested_multiple_bb2_in/4 
* CEs [10] --> Loop 8 
* CEs [8] --> Loop 9 
* CEs [9] --> Loop 10 

### Ranking functions of CR eval_speed_popl10_nested_multiple_bb2_in(V_m,V__1,B,C) 
* RF of phase [8]: [V_m-V__1]

#### Partial ranking functions of CR eval_speed_popl10_nested_multiple_bb2_in(V_m,V__1,B,C) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V_m-V__1


### Specialization of cost equations eval_speed_popl10_nested_multiple_bb1_in/5 
* CE 4 is refined into CE [11] 
* CE 3 is refined into CE [12,13,14,15] 


### Cost equations --> "Loop" of eval_speed_popl10_nested_multiple_bb1_in/5 
* CEs [15] --> Loop 11 
* CEs [14] --> Loop 12 
* CEs [13] --> Loop 13 
* CEs [12] --> Loop 14 
* CEs [11] --> Loop 15 

### Ranking functions of CR eval_speed_popl10_nested_multiple_bb1_in(V_n,V_m,V__01,V__0,B) 
* RF of phase [11,12]: [V_n-V__0]
* RF of phase [13]: [V_n-V__0]

#### Partial ranking functions of CR eval_speed_popl10_nested_multiple_bb1_in(V_n,V_m,V__01,V__0,B) 
* Partial RF of phase [11,12]:
  - RF of loop [11:1]:
    V_m-V__01-1
  - RF of loop [11:1,12:1]:
    V_n-V__0
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    V_n-V__0


### Specialization of cost equations eval_speed_popl10_nested_multiple_bb0_in/5 
* CE 2 is refined into CE [16,17,18,19,20,21] 


### Cost equations --> "Loop" of eval_speed_popl10_nested_multiple_bb0_in/5 
* CEs [17] --> Loop 16 
* CEs [21] --> Loop 17 
* CEs [20] --> Loop 18 
* CEs [18] --> Loop 19 
* CEs [19] --> Loop 20 
* CEs [16] --> Loop 21 

### Ranking functions of CR eval_speed_popl10_nested_multiple_bb0_in(V_x,V_n,V_y,V_m,B) 

#### Partial ranking functions of CR eval_speed_popl10_nested_multiple_bb0_in(V_x,V_n,V_y,V_m,B) 


### Specialization of cost equations eval_speed_popl10_nested_multiple_start/5 
* CE 1 is refined into CE [22,23,24,25,26,27] 


### Cost equations --> "Loop" of eval_speed_popl10_nested_multiple_start/5 
* CEs [27] --> Loop 22 
* CEs [26] --> Loop 23 
* CEs [25] --> Loop 24 
* CEs [24] --> Loop 25 
* CEs [23] --> Loop 26 
* CEs [22] --> Loop 27 

### Ranking functions of CR eval_speed_popl10_nested_multiple_start(V_x,V_n,V_y,V_m,B) 

#### Partial ranking functions of CR eval_speed_popl10_nested_multiple_start(V_x,V_n,V_y,V_m,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_speed_popl10_nested_multiple_bb2_in(V_m,V__1,B,C):
* Chain [[8],10]: 1*it(8)+0
  Such that:it(8) =< V_m-V__1

  with precondition: [B=2,V_m=C,V_m>=V__1+1] 

* Chain [[8],9]: 1*it(8)+0
  Such that:it(8) =< -V__1+C

  with precondition: [B=2,C>=V__1+1,V_m>=C+1] 

* Chain [10]: 0
  with precondition: [B=2,V__1=C,V__1>=V_m] 

* Chain [9]: 0
  with precondition: [B=2,V__1=C,V_m>=V__1+1] 


#### Cost of chains of eval_speed_popl10_nested_multiple_bb1_in(V_n,V_m,V__01,V__0,B):
* Chain [[13],15]: 1*it(13)+0
  Such that:it(13) =< V_n-V__0

  with precondition: [B=3,V__01>=V_m,V_n>=V__0+1] 

* Chain [[11,12],15]: 1*it(11)+1*it(12)+1*s(3)+0
  Such that:aux(5) =< V_n-V__0
aux(6) =< V_m-V__01
it(11) =< aux(5)
it(12) =< aux(5)
it(11) =< aux(6)
s(3) =< aux(6)

  with precondition: [B=3,V_m>=V__01+1,V_n>=V__0+1] 

* Chain [[11,12],14,[13],15]: 1*it(11)+2*it(12)+2*s(3)+1
  Such that:aux(7) =< V_n-V__0
aux(8) =< V_m-V__01
it(12) =< aux(7)
s(3) =< aux(8)
it(11) =< aux(7)
it(11) =< aux(8)

  with precondition: [B=3,V_m>=V__01+1,V_n>=V__0+3] 

* Chain [[11,12],14,15]: 1*it(11)+1*it(12)+2*s(3)+1
  Such that:aux(9) =< V_n-V__0
aux(10) =< V_m-V__01
s(3) =< aux(10)
it(11) =< aux(9)
it(12) =< aux(9)
it(11) =< aux(10)

  with precondition: [B=3,V_m>=V__01+1,V_n>=V__0+2] 

* Chain [15]: 0
  with precondition: [B=3,V__0>=V_n] 

* Chain [14,[13],15]: 1*it(13)+1*s(4)+1
  Such that:it(13) =< V_n-V__0
s(4) =< V_m-V__01

  with precondition: [B=3,V_m>=V__01+1,V_n>=V__0+2] 

* Chain [14,15]: 1*s(4)+1
  Such that:s(4) =< V_m-V__01

  with precondition: [B=3,V_n=V__0+1,V_m>=V__01+1] 


#### Cost of chains of eval_speed_popl10_nested_multiple_bb0_in(V_x,V_n,V_y,V_m,B):
* Chain [21]: 1*s(12)+1
  Such that:s(12) =< -V_y+V_m

  with precondition: [V_n=V_x+1,V_m>=V_y+1] 

* Chain [20]: 1*s(15)+1*s(16)+1*s(17)+0
  Such that:s(13) =< -V_x+V_n
s(14) =< -V_y+V_m
s(15) =< s(13)
s(16) =< s(13)
s(15) =< s(14)
s(17) =< s(14)

  with precondition: [V_n>=V_x+1,V_m>=V_y+1] 

* Chain [19]: 1*s(18)+0
  Such that:s(18) =< -V_x+V_n

  with precondition: [V_n>=V_x+1,V_y>=V_m] 

* Chain [18]: 2*s(21)+3*s(22)+1*s(23)+1
  Such that:s(19) =< -V_x+V_n
s(20) =< -V_y+V_m
s(21) =< s(19)
s(22) =< s(20)
s(23) =< s(19)
s(23) =< s(20)

  with precondition: [V_n>=V_x+2,V_m>=V_y+1] 

* Chain [17]: 2*s(26)+2*s(27)+1*s(28)+1
  Such that:s(24) =< -V_x+V_n
s(25) =< -V_y+V_m
s(26) =< s(24)
s(27) =< s(25)
s(28) =< s(24)
s(28) =< s(25)

  with precondition: [V_n>=V_x+3,V_m>=V_y+1] 

* Chain [16]: 0
  with precondition: [V_x>=V_n] 


#### Cost of chains of eval_speed_popl10_nested_multiple_start(V_x,V_n,V_y,V_m,B):
* Chain [27]: 1*s(29)+1
  Such that:s(29) =< -V_y+V_m

  with precondition: [V_n=V_x+1,V_m>=V_y+1] 

* Chain [26]: 1*s(32)+1*s(33)+1*s(34)+0
  Such that:s(30) =< -V_x+V_n
s(31) =< -V_y+V_m
s(32) =< s(30)
s(33) =< s(30)
s(32) =< s(31)
s(34) =< s(31)

  with precondition: [V_n>=V_x+1,V_m>=V_y+1] 

* Chain [25]: 1*s(35)+0
  Such that:s(35) =< -V_x+V_n

  with precondition: [V_n>=V_x+1,V_y>=V_m] 

* Chain [24]: 2*s(38)+3*s(39)+1*s(40)+1
  Such that:s(36) =< -V_x+V_n
s(37) =< -V_y+V_m
s(38) =< s(36)
s(39) =< s(37)
s(40) =< s(36)
s(40) =< s(37)

  with precondition: [V_n>=V_x+2,V_m>=V_y+1] 

* Chain [23]: 2*s(43)+2*s(44)+1*s(45)+1
  Such that:s(41) =< -V_x+V_n
s(42) =< -V_y+V_m
s(43) =< s(41)
s(44) =< s(42)
s(45) =< s(41)
s(45) =< s(42)

  with precondition: [V_n>=V_x+3,V_m>=V_y+1] 

* Chain [22]: 0
  with precondition: [V_x>=V_n] 


Closed-form bounds of eval_speed_popl10_nested_multiple_start(V_x,V_n,V_y,V_m,B): 
-------------------------------------
* Chain [27] with precondition: [V_n=V_x+1,V_m>=V_y+1] 
    - Upper bound: -V_y+V_m+1 
    - Complexity: n 
* Chain [26] with precondition: [V_n>=V_x+1,V_m>=V_y+1] 
    - Upper bound: -2*V_x+2*V_n-V_y+V_m 
    - Complexity: n 
* Chain [25] with precondition: [V_n>=V_x+1,V_y>=V_m] 
    - Upper bound: -V_x+V_n 
    - Complexity: n 
* Chain [24] with precondition: [V_n>=V_x+2,V_m>=V_y+1] 
    - Upper bound: -3*V_x+3*V_n-3*V_y+3*V_m+1 
    - Complexity: n 
* Chain [23] with precondition: [V_n>=V_x+3,V_m>=V_y+1] 
    - Upper bound: -3*V_x+3*V_n-2*V_y+2*V_m+1 
    - Complexity: n 
* Chain [22] with precondition: [V_x>=V_n] 
    - Upper bound: 0 
    - Complexity: constant 

### Maximum cost of eval_speed_popl10_nested_multiple_start(V_x,V_n,V_y,V_m,B): max([nat(-V_y+V_m)+1,nat(-V_x+V_n)+1+nat(-V_y+V_m)*2+(nat(-V_y+V_m)+nat(-V_x+V_n))+nat(-V_x+V_n)]) 
Asymptotic class: n 
* Total analysis performed in 87 ms.

