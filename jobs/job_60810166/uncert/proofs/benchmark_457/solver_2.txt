WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_speedNestedMultipleDep_bb3_in/4,eval_speedNestedMultipleDep_bb4_in/4]
1. recursive  : [eval_speedNestedMultipleDep_bb1_in/4,eval_speedNestedMultipleDep_bb2_in/4,eval_speedNestedMultipleDep_bb3_in_loop_cont/5]
2. non_recursive  : [eval_speedNestedMultipleDep_stop/1]
3. non_recursive  : [eval_speedNestedMultipleDep_bb5_in/1]
4. non_recursive  : [eval_speedNestedMultipleDep_bb1_in_loop_cont/2]
5. non_recursive  : [eval_speedNestedMultipleDep_bb0_in/3]
6. non_recursive  : [eval_speedNestedMultipleDep_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_speedNestedMultipleDep_bb3_in/4
1. SCC is partially evaluated into eval_speedNestedMultipleDep_bb1_in/4
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_speedNestedMultipleDep_bb0_in/3
6. SCC is partially evaluated into eval_speedNestedMultipleDep_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_speedNestedMultipleDep_bb3_in/4 
* CE 6 is refined into CE [7] 
* CE 5 is refined into CE [8] 


### Cost equations --> "Loop" of eval_speedNestedMultipleDep_bb3_in/4 
* CEs [8] --> Loop 7 
* CEs [7] --> Loop 8 

### Ranking functions of CR eval_speedNestedMultipleDep_bb3_in(V_m,V_x_0,V_y_0,B) 
* RF of phase [7]: [V_m-V_y_0]

#### Partial ranking functions of CR eval_speedNestedMultipleDep_bb3_in(V_m,V_x_0,V_y_0,B) 
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    V_m-V_y_0


### Specialization of cost equations eval_speedNestedMultipleDep_bb1_in/4 
* CE 4 is refined into CE [9] 
* CE 3 is refined into CE [10,11] 


### Cost equations --> "Loop" of eval_speedNestedMultipleDep_bb1_in/4 
* CEs [11] --> Loop 9 
* CEs [10] --> Loop 10 
* CEs [9] --> Loop 11 

### Ranking functions of CR eval_speedNestedMultipleDep_bb1_in(V_n,V_m,V_x_0,B) 
* RF of phase [9]: [V_n-V_x_0]
* RF of phase [10]: [V_n-V_x_0]

#### Partial ranking functions of CR eval_speedNestedMultipleDep_bb1_in(V_n,V_m,V_x_0,B) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V_n-V_x_0
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    V_n-V_x_0


### Specialization of cost equations eval_speedNestedMultipleDep_bb0_in/3 
* CE 2 is refined into CE [12,13,14] 


### Cost equations --> "Loop" of eval_speedNestedMultipleDep_bb0_in/3 
* CEs [13] --> Loop 12 
* CEs [12] --> Loop 13 
* CEs [14] --> Loop 14 

### Ranking functions of CR eval_speedNestedMultipleDep_bb0_in(V_n,V_m,B) 

#### Partial ranking functions of CR eval_speedNestedMultipleDep_bb0_in(V_n,V_m,B) 


### Specialization of cost equations eval_speedNestedMultipleDep_start/3 
* CE 1 is refined into CE [15,16,17] 


### Cost equations --> "Loop" of eval_speedNestedMultipleDep_start/3 
* CEs [17] --> Loop 15 
* CEs [16] --> Loop 16 
* CEs [15] --> Loop 17 

### Ranking functions of CR eval_speedNestedMultipleDep_start(V_n,V_m,B) 

#### Partial ranking functions of CR eval_speedNestedMultipleDep_start(V_n,V_m,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_speedNestedMultipleDep_bb3_in(V_m,V_x_0,V_y_0,B):
* Chain [[7],8]: 1*it(7)+0
  Such that:it(7) =< V_m-V_y_0

  with precondition: [B=2,V_x_0>=0,V_y_0>=0,V_m>=V_y_0+1] 

* Chain [8]: 0
  with precondition: [B=2,V_x_0>=0,V_y_0>=0,V_y_0>=V_m] 


#### Cost of chains of eval_speedNestedMultipleDep_bb1_in(V_n,V_m,V_x_0,B):
* Chain [[10],11]: 1*it(10)+0
  Such that:it(10) =< V_n-V_x_0

  with precondition: [B=3,0>=V_m,V_x_0>=0,V_n>=V_x_0+1] 

* Chain [[9],11]: 1*it(9)+1*s(3)+0
  Such that:it(9) =< V_n-V_x_0
aux(1) =< V_m
s(3) =< it(9)*aux(1)

  with precondition: [B=3,V_m>=1,V_x_0>=0,V_n>=V_x_0+1] 

* Chain [11]: 0
  with precondition: [B=3,V_x_0>=0,V_x_0>=V_n] 


#### Cost of chains of eval_speedNestedMultipleDep_bb0_in(V_n,V_m,B):
* Chain [14]: 0
  with precondition: [0>=V_n] 

* Chain [13]: 1*s(4)+0
  Such that:s(4) =< V_n

  with precondition: [0>=V_m,V_n>=1] 

* Chain [12]: 1*s(5)+1*s(7)+0
  Such that:s(5) =< V_n
s(6) =< V_m
s(7) =< s(5)*s(6)

  with precondition: [V_n>=1,V_m>=1] 


#### Cost of chains of eval_speedNestedMultipleDep_start(V_n,V_m,B):
* Chain [17]: 0
  with precondition: [0>=V_n] 

* Chain [16]: 1*s(8)+0
  Such that:s(8) =< V_n

  with precondition: [0>=V_m,V_n>=1] 

* Chain [15]: 1*s(9)+1*s(11)+0
  Such that:s(9) =< V_n
s(10) =< V_m
s(11) =< s(9)*s(10)

  with precondition: [V_n>=1,V_m>=1] 


Closed-form bounds of eval_speedNestedMultipleDep_start(V_n,V_m,B): 
-------------------------------------
* Chain [17] with precondition: [0>=V_n] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [16] with precondition: [0>=V_m,V_n>=1] 
    - Upper bound: V_n 
    - Complexity: n 
* Chain [15] with precondition: [V_n>=1,V_m>=1] 
    - Upper bound: V_m*V_n+V_n 
    - Complexity: n^2 

### Maximum cost of eval_speedNestedMultipleDep_start(V_n,V_m,B): nat(V_m)*nat(V_n)+nat(V_n) 
Asymptotic class: n^2 
* Total analysis performed in 54 ms.

