WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_realselect_4/4,eval_realselect_5/4,eval_realselect_6/4,eval_realselect_bb3_in/4,eval_realselect_bb4_in/4]
1. recursive  : [eval_realselect_bb1_in/3,eval_realselect_bb2_in/3,eval_realselect_bb3_in_loop_cont/5,eval_realselect_bb5_in/4]
2. non_recursive  : [eval_realselect_stop/1]
3. non_recursive  : [eval_realselect_bb6_in/1]
4. non_recursive  : [eval_realselect_bb1_in_loop_cont/2]
5. non_recursive  : [eval_realselect_bb0_in/2]
6. non_recursive  : [eval_realselect_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_realselect_bb3_in/4
1. SCC is partially evaluated into eval_realselect_bb1_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_realselect_bb0_in/2
6. SCC is partially evaluated into eval_realselect_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_realselect_bb3_in/4 
* CE 6 is refined into CE [7] 
* CE 5 is refined into CE [8] 


### Cost equations --> "Loop" of eval_realselect_bb3_in/4 
* CEs [8] --> Loop 7 
* CEs [7] --> Loop 8 

### Ranking functions of CR eval_realselect_bb3_in(V_array_size,V_j_0,B,C) 
* RF of phase [7]: [V_array_size-V_j_0]

#### Partial ranking functions of CR eval_realselect_bb3_in(V_array_size,V_j_0,B,C) 
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    V_array_size-V_j_0


### Specialization of cost equations eval_realselect_bb1_in/3 
* CE 4 is refined into CE [9] 
* CE 3 is refined into CE [10] 


### Cost equations --> "Loop" of eval_realselect_bb1_in/3 
* CEs [10] --> Loop 9 
* CEs [9] --> Loop 10 

### Ranking functions of CR eval_realselect_bb1_in(V_array_size,V_i_0,B) 
* RF of phase [9]: [V_array_size-V_i_0-1]

#### Partial ranking functions of CR eval_realselect_bb1_in(V_array_size,V_i_0,B) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V_array_size-V_i_0-1


### Specialization of cost equations eval_realselect_bb0_in/2 
* CE 2 is refined into CE [11,12] 


### Cost equations --> "Loop" of eval_realselect_bb0_in/2 
* CEs [12] --> Loop 11 
* CEs [11] --> Loop 12 

### Ranking functions of CR eval_realselect_bb0_in(V_array_size,B) 

#### Partial ranking functions of CR eval_realselect_bb0_in(V_array_size,B) 


### Specialization of cost equations eval_realselect_start/2 
* CE 1 is refined into CE [13,14] 


### Cost equations --> "Loop" of eval_realselect_start/2 
* CEs [14] --> Loop 13 
* CEs [13] --> Loop 14 

### Ranking functions of CR eval_realselect_start(V_array_size,B) 

#### Partial ranking functions of CR eval_realselect_start(V_array_size,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_realselect_bb3_in(V_array_size,V_j_0,B,C):
* Chain [[7],8]: 1*it(7)+0
  Such that:it(7) =< -V_j_0+C

  with precondition: [B=2,V_array_size=C,V_j_0>=1,V_array_size>=V_j_0+1] 


#### Cost of chains of eval_realselect_bb1_in(V_array_size,V_i_0,B):
* Chain [[9],10]: 1*it(9)+1*s(3)+0
  Such that:aux(3) =< V_array_size-V_i_0
it(9) =< aux(3)
s(3) =< it(9)*aux(3)

  with precondition: [B=3,V_i_0>=0,V_array_size>=V_i_0+2] 

* Chain [10]: 0
  with precondition: [B=3,V_i_0>=0,V_i_0+1>=V_array_size] 


#### Cost of chains of eval_realselect_bb0_in(V_array_size,B):
* Chain [12]: 0
  with precondition: [1>=V_array_size] 

* Chain [11]: 1*s(5)+1*s(6)+0
  Such that:s(4) =< V_array_size
s(5) =< s(4)
s(6) =< s(5)*s(4)

  with precondition: [V_array_size>=2] 


#### Cost of chains of eval_realselect_start(V_array_size,B):
* Chain [14]: 0
  with precondition: [1>=V_array_size] 

* Chain [13]: 1*s(8)+1*s(9)+0
  Such that:s(7) =< V_array_size
s(8) =< s(7)
s(9) =< s(8)*s(7)

  with precondition: [V_array_size>=2] 


Closed-form bounds of eval_realselect_start(V_array_size,B): 
-------------------------------------
* Chain [14] with precondition: [1>=V_array_size] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [13] with precondition: [V_array_size>=2] 
    - Upper bound: V_array_size*V_array_size+V_array_size 
    - Complexity: n^2 

### Maximum cost of eval_realselect_start(V_array_size,B): nat(V_array_size)*nat(V_array_size)+nat(V_array_size) 
Asymptotic class: n^2 
* Total analysis performed in 41 ms.

