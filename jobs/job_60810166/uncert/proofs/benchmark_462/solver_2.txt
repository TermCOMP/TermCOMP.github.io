WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_speedSimpleMultipleDep_bb1_in/5,eval_speedSimpleMultipleDep_bb2_in/5]
1. non_recursive  : [eval_speedSimpleMultipleDep_stop/1]
2. non_recursive  : [eval_speedSimpleMultipleDep_bb3_in/1]
3. non_recursive  : [eval_speedSimpleMultipleDep_bb1_in_loop_cont/2]
4. non_recursive  : [eval_speedSimpleMultipleDep_bb0_in/3]
5. non_recursive  : [eval_speedSimpleMultipleDep_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_speedSimpleMultipleDep_bb1_in/5
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_speedSimpleMultipleDep_bb0_in/3
5. SCC is partially evaluated into eval_speedSimpleMultipleDep_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_speedSimpleMultipleDep_bb1_in/5 
* CE 5 is refined into CE [6] 
* CE 4 is refined into CE [7] 
* CE 3 is refined into CE [8] 


### Cost equations --> "Loop" of eval_speedSimpleMultipleDep_bb1_in/5 
* CEs [7] --> Loop 6 
* CEs [8] --> Loop 7 
* CEs [6] --> Loop 8 

### Ranking functions of CR eval_speedSimpleMultipleDep_bb1_in(V_n,V_m,V_y_0,V_x_0,B) 

#### Partial ranking functions of CR eval_speedSimpleMultipleDep_bb1_in(V_n,V_m,V_y_0,V_x_0,B) 
* Partial RF of phase [6,7]:
  - RF of loop [6:1]:
    V_m-V_y_0 depends on loops [7:1] 
  - RF of loop [7:1]:
    V_n-V_x_0


### Specialization of cost equations eval_speedSimpleMultipleDep_bb0_in/3 
* CE 2 is refined into CE [9,10] 


### Cost equations --> "Loop" of eval_speedSimpleMultipleDep_bb0_in/3 
* CEs [10] --> Loop 9 
* CEs [9] --> Loop 10 

### Ranking functions of CR eval_speedSimpleMultipleDep_bb0_in(V_n,V_m,B) 

#### Partial ranking functions of CR eval_speedSimpleMultipleDep_bb0_in(V_n,V_m,B) 


### Specialization of cost equations eval_speedSimpleMultipleDep_start/3 
* CE 1 is refined into CE [11,12] 


### Cost equations --> "Loop" of eval_speedSimpleMultipleDep_start/3 
* CEs [12] --> Loop 11 
* CEs [11] --> Loop 12 

### Ranking functions of CR eval_speedSimpleMultipleDep_start(V_n,V_m,B) 

#### Partial ranking functions of CR eval_speedSimpleMultipleDep_start(V_n,V_m,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_speedSimpleMultipleDep_bb1_in(V_n,V_m,V_y_0,V_x_0,B):
* Chain [[6,7],8]: 1*it(6)+1*it(7)+0
  Such that:it(7) =< V_n-V_x_0
aux(7) =< V_m
aux(2) =< V_m-V_y_0
aux(1) =< it(7)*aux(7)
it(6) =< aux(1)+aux(2)

  with precondition: [B=2,V_y_0>=0,V_x_0>=0,V_n>=V_x_0+1] 

* Chain [8]: 0
  with precondition: [B=2,V_y_0>=0,V_x_0>=0,V_x_0>=V_n] 


#### Cost of chains of eval_speedSimpleMultipleDep_bb0_in(V_n,V_m,B):
* Chain [10]: 0
  with precondition: [0>=V_n] 

* Chain [9]: 1*s(1)+1*s(5)+0
  Such that:s(1) =< V_n
aux(14) =< V_m
s(4) =< s(1)*aux(14)
s(5) =< s(4)+aux(14)

  with precondition: [V_n>=1] 


#### Cost of chains of eval_speedSimpleMultipleDep_start(V_n,V_m,B):
* Chain [12]: 0
  with precondition: [0>=V_n] 

* Chain [11]: 1*s(6)+1*s(9)+0
  Such that:s(6) =< V_n
s(7) =< V_m
s(8) =< s(6)*s(7)
s(9) =< s(8)+s(7)

  with precondition: [V_n>=1] 


Closed-form bounds of eval_speedSimpleMultipleDep_start(V_n,V_m,B): 
-------------------------------------
* Chain [12] with precondition: [0>=V_n] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [11] with precondition: [V_n>=1] 
    - Upper bound: nat(V_m)*V_n+V_n+nat(V_m) 
    - Complexity: n^2 

### Maximum cost of eval_speedSimpleMultipleDep_start(V_n,V_m,B): nat(V_m)*nat(V_n)+nat(V_n)+nat(V_m) 
Asymptotic class: n^2 
* Total analysis performed in 50 ms.

