WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_s_SFD_process_8/5,eval_s_SFD_process_9/6,eval_s_SFD_process_bb5_in/4,eval_s_SFD_process_bb6_in/4]
1. recursive  : [eval_s_SFD_process_1/5,eval_s_SFD_process_2/6,eval_s_SFD_process_4/7,eval_s_SFD_process_5/8,eval_s_SFD_process_bb1_in/4,eval_s_SFD_process_bb2_in/4,eval_s_SFD_process_bb3_in/6,eval_s_SFD_process_bb4_in/6,eval_s_SFD_process_bb5_in_loop_cont/9,eval_s_SFD_process_bb7_in/8]
2. non_recursive  : [eval_s_SFD_process_stop/1]
3. non_recursive  : [eval_s_SFD_process_bb8_in/1]
4. non_recursive  : [eval_s_SFD_process_bb1_in_loop_cont/2]
5. non_recursive  : [eval_s_SFD_process_bb0_in/4]
6. non_recursive  : [eval_s_SFD_process_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_s_SFD_process_bb5_in/4
1. SCC is partially evaluated into eval_s_SFD_process_bb1_in/4
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_s_SFD_process_bb0_in/4
6. SCC is partially evaluated into eval_s_SFD_process_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_s_SFD_process_bb5_in/4 
* CE 9 is refined into CE [11] 
* CE 10 is refined into CE [12] 
* CE 8 is refined into CE [13] 


### Cost equations --> "Loop" of eval_s_SFD_process_bb5_in/4 
* CEs [13] --> Loop 11 
* CEs [11] --> Loop 12 
* CEs [12] --> Loop 13 

### Ranking functions of CR eval_s_SFD_process_bb5_in(V__2,B,C,D) 
* RF of phase [11]: [V__2]

#### Partial ranking functions of CR eval_s_SFD_process_bb5_in(V__2,B,C,D) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    V__2


### Specialization of cost equations eval_s_SFD_process_bb1_in/4 
* CE 7 is refined into CE [14] 
* CE 3 is refined into CE [15,16,17] 
* CE 4 is refined into CE [18] 
* CE 6 is refined into CE [19] 
* CE 5 is refined into CE [20] 


### Cost equations --> "Loop" of eval_s_SFD_process_bb1_in/4 
* CEs [17] --> Loop 14 
* CEs [18] --> Loop 15 
* CEs [19] --> Loop 16 
* CEs [16] --> Loop 17 
* CEs [15] --> Loop 18 
* CEs [20] --> Loop 19 
* CEs [14] --> Loop 20 

### Ranking functions of CR eval_s_SFD_process_bb1_in(V_rlimit,V__01,V__0,B) 

#### Partial ranking functions of CR eval_s_SFD_process_bb1_in(V_rlimit,V__01,V__0,B) 
* Partial RF of phase [14,15,16,17,18,19]:
  - RF of loop [14:1]:
    V__01/2-1/2 depends on loops [16:1,19:1] 
  - RF of loop [15:1,16:1,19:1]:
    V_rlimit-V__0
  - RF of loop [17:1,18:1]:
    V__01 depends on loops [16:1,19:1] 


### Specialization of cost equations eval_s_SFD_process_bb0_in/4 
* CE 2 is refined into CE [21,22] 


### Cost equations --> "Loop" of eval_s_SFD_process_bb0_in/4 
* CEs [21] --> Loop 21 
* CEs [22] --> Loop 22 

### Ranking functions of CR eval_s_SFD_process_bb0_in(V_p,V_rlimit,V_match,B) 

#### Partial ranking functions of CR eval_s_SFD_process_bb0_in(V_p,V_rlimit,V_match,B) 


### Specialization of cost equations eval_s_SFD_process_start/4 
* CE 1 is refined into CE [23,24] 


### Cost equations --> "Loop" of eval_s_SFD_process_start/4 
* CEs [24] --> Loop 23 
* CEs [23] --> Loop 24 

### Ranking functions of CR eval_s_SFD_process_start(V_p,V_rlimit,V_match,B) 

#### Partial ranking functions of CR eval_s_SFD_process_start(V_p,V_rlimit,V_match,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_s_SFD_process_bb5_in(V__2,B,C,D):
* Chain [[11],13]: 1*it(11)+0
  Such that:it(11) =< V__2

  with precondition: [B=2,C=0,D=0,V__2>=1] 

* Chain [[11],12]: 1*it(11)+0
  Such that:it(11) =< V__2-D

  with precondition: [B=2,C=D+1,C>=1,V__2>=C+1] 

* Chain [12]: 0
  with precondition: [B=2,V__2=C,V__2=D+1,V__2>=1] 


#### Cost of chains of eval_s_SFD_process_bb1_in(V_rlimit,V__01,V__0,B):
* Chain [[14,15,16,17,18,19],20]: 1*it(14)+3*it(15)+2*it(17)+1*s(5)+1*s(6)+0
  Such that:aux(13) =< V__01
aux(2) =< V__01/2
aux(14) =< V_rlimit-V__0
it(15) =< aux(14)
aux(5) =< max([aux(13),0])+it(15)
it(17) =< it(15)+aux(13)
s(5) =< it(15)+aux(13)
s(6) =< it(15)+aux(13)
it(14) =< aux(14)+it(15)*(1/2)+aux(2)
aux(9) =< aux(5)
s(5) =< it(14)*aux(5)
s(6) =< it(17)*aux(9)

  with precondition: [B=3,V_rlimit>=V__0+1] 

* Chain [20]: 0
  with precondition: [B=3,V__0>=V_rlimit] 


#### Cost of chains of eval_s_SFD_process_bb0_in(V_p,V_rlimit,V_match,B):
* Chain [22]: 3*s(10)+2*s(12)+1*s(13)+1*s(14)+1*s(15)+0
  Such that:s(9) =< -V_p+V_rlimit
s(7) =< V_match
s(8) =< V_match/2
s(10) =< s(9)
s(11) =< max([s(7),0])+s(10)
s(12) =< s(10)+s(7)
s(13) =< s(10)+s(7)
s(14) =< s(10)+s(7)
s(15) =< s(9)+s(10)*(1/2)+s(8)
s(16) =< s(11)
s(13) =< s(15)*s(11)
s(14) =< s(12)*s(16)

  with precondition: [V_rlimit>=V_p+1] 

* Chain [21]: 0
  with precondition: [V_p>=V_rlimit] 


#### Cost of chains of eval_s_SFD_process_start(V_p,V_rlimit,V_match,B):
* Chain [24]: 3*s(20)+2*s(22)+1*s(23)+1*s(24)+1*s(25)+0
  Such that:s(17) =< -V_p+V_rlimit
s(18) =< V_match
s(19) =< V_match/2
s(20) =< s(17)
s(21) =< max([s(18),0])+s(20)
s(22) =< s(20)+s(18)
s(23) =< s(20)+s(18)
s(24) =< s(20)+s(18)
s(25) =< s(17)+s(20)*(1/2)+s(19)
s(26) =< s(21)
s(23) =< s(25)*s(21)
s(24) =< s(22)*s(26)

  with precondition: [V_rlimit>=V_p+1] 

* Chain [23]: 0
  with precondition: [V_p>=V_rlimit] 


Closed-form bounds of eval_s_SFD_process_start(V_p,V_rlimit,V_match,B): 
-------------------------------------
* Chain [24] with precondition: [V_rlimit>=V_p+1] 
    - Upper bound: -17/2*V_p+17/2*V_rlimit+nat(V_match)*4+nat(V_match/2) 
    - Complexity: n 
* Chain [23] with precondition: [V_p>=V_rlimit] 
    - Upper bound: 0 
    - Complexity: constant 

### Maximum cost of eval_s_SFD_process_start(V_p,V_rlimit,V_match,B): 17/2*nat(-V_p+V_rlimit)+nat(V_match)*4+nat(V_match/2) 
Asymptotic class: n 
* Total analysis performed in 90 ms.

