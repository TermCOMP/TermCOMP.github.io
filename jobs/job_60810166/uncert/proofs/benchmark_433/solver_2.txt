WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_rank1_2/4,eval_rank1_3/5,eval_rank1_bb3_in/4,eval_rank1_bb4_in/4,eval_rank1_bb5_in/5]
1. recursive  : [eval_rank1_0/4,eval_rank1_1/5,eval_rank1__critedge_in/6,eval_rank1_bb1_in/4,eval_rank1_bb2_in/4,eval_rank1_bb3_in_loop_cont/7,eval_rank1_bb6_in/7]
2. non_recursive  : [eval_rank1_stop/1]
3. non_recursive  : [eval_rank1_bb7_in/1]
4. non_recursive  : [eval_rank1_bb1_in_loop_cont/2]
5. non_recursive  : [eval_rank1_bb0_in/2]
6. non_recursive  : [eval_rank1_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_rank1_bb3_in/4
1. SCC is partially evaluated into eval_rank1_bb1_in/4
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_rank1_bb0_in/2
6. SCC is partially evaluated into eval_rank1_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_rank1_bb3_in/4 
* CE 7 is refined into CE [10] 
* CE 9 is refined into CE [11] 
* CE 8 is refined into CE [12] 


### Cost equations --> "Loop" of eval_rank1_bb3_in/4 
* CEs [12] --> Loop 10 
* CEs [10] --> Loop 11 
* CEs [11] --> Loop 12 

### Ranking functions of CR eval_rank1_bb3_in(V_m,V_y_1,B,C) 
* RF of phase [10]: [V_m-V_y_1+1]

#### Partial ranking functions of CR eval_rank1_bb3_in(V_m,V_y_1,B,C) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    V_m-V_y_1+1


### Specialization of cost equations eval_rank1_bb1_in/4 
* CE 6 is refined into CE [13] 
* CE 5 is refined into CE [14] 
* CE 4 is refined into CE [15,16,17,18] 
* CE 3 is refined into CE [19] 


### Cost equations --> "Loop" of eval_rank1_bb1_in/4 
* CEs [18] --> Loop 13 
* CEs [16] --> Loop 14 
* CEs [17] --> Loop 15 
* CEs [19] --> Loop 16 
* CEs [15] --> Loop 17 
* CEs [13] --> Loop 18 
* CEs [14] --> Loop 19 

### Ranking functions of CR eval_rank1_bb1_in(V_m,V_x_0,V_y_0,B) 

#### Partial ranking functions of CR eval_rank1_bb1_in(V_m,V_x_0,V_y_0,B) 
* Partial RF of phase [13,14,15,16,17]:
  - RF of loop [13:1,14:1,15:1,17:1]:
    V_x_0+1
  - RF of loop [14:1]:
    -V_m+V_y_0 depends on loops [13:1,17:1] 
    V_y_0 depends on loops [13:1,17:1] 
  - RF of loop [15:1,16:1]:
    V_y_0+1 depends on loops [13:1,17:1] 


### Specialization of cost equations eval_rank1_bb0_in/2 
* CE 2 is refined into CE [20,21] 


### Cost equations --> "Loop" of eval_rank1_bb0_in/2 
* CEs [21] --> Loop 20 
* CEs [20] --> Loop 21 

### Ranking functions of CR eval_rank1_bb0_in(V_m,B) 

#### Partial ranking functions of CR eval_rank1_bb0_in(V_m,B) 


### Specialization of cost equations eval_rank1_start/2 
* CE 1 is refined into CE [22,23] 


### Cost equations --> "Loop" of eval_rank1_start/2 
* CEs [23] --> Loop 22 
* CEs [22] --> Loop 23 

### Ranking functions of CR eval_rank1_start(V_m,B) 

#### Partial ranking functions of CR eval_rank1_start(V_m,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_rank1_bb3_in(V_m,V_y_1,B,C):
* Chain [[10],12]: 1*it(10)+0
  Such that:it(10) =< -V_y_1+C

  with precondition: [B=2,V_m+1=C,V_y_1>=0,V_m>=V_y_1] 

* Chain [[10],11]: 1*it(10)+0
  Such that:it(10) =< -V_y_1+C

  with precondition: [B=2,V_y_1>=0,C>=V_y_1+1,V_m>=C] 

* Chain [12]: 0
  with precondition: [B=2,V_y_1=C,V_m>=0,V_y_1>=V_m+1] 

* Chain [11]: 0
  with precondition: [B=2,V_y_1=C,V_y_1>=0,V_m>=V_y_1] 


#### Cost of chains of eval_rank1_bb1_in(V_m,V_x_0,V_y_0,B):
* Chain [[13,14,15,16,17],19]: 2*it(13)+1*it(14)+1*it(15)+1*it(16)+1*s(5)+1*s(6)+0
  Such that:aux(9) =< -V_m+V_y_0
aux(40) =< V_m
aux(41) =< V_m+V_x_0+1
aux(29) =< V_m+V_x_0-V_y_0+1
aux(46) =< V_x_0+1
aux(47) =< V_y_0+1
it(13) =< aux(46)
it(14) =< aux(46)
it(15) =< aux(46)
aux(31) =< aux(40)+1
aux(15) =< aux(40)
aux(14) =< it(13)*aux(40)
it(14) =< aux(46)+aux(9)
s(5) =< it(13)*aux(40)
aux(16) =< it(13)*aux(15)
aux(10) =< aux(14)
aux(10) =< aux(16)
aux(33) =< it(13)*aux(31)
s(6) =< it(13)*aux(31)
it(15) =< aux(33)+aux(10)+aux(47)
it(16) =< aux(33)+aux(10)+aux(47)
it(14) =< aux(33)+aux(10)+aux(47)
s(6) =< it(16)+aux(41)
s(6) =< it(16)+aux(29)

  with precondition: [B=3,V_x_0>=0,V_y_0>=0,V_m>=V_x_0] 

* Chain [[13,14,15,16,17],18]: 2*it(13)+1*it(14)+1*it(15)+1*it(16)+1*s(5)+1*s(6)+0
  Such that:aux(9) =< -V_m+V_y_0
aux(40) =< V_m
aux(29) =< V_m+V_x_0-V_y_0+1
aux(41) =< V_m-V_y_0
aux(41) =< V_x_0-V_y_0
aux(48) =< V_x_0+1
aux(49) =< V_y_0+1
it(13) =< aux(48)
it(14) =< aux(48)
it(15) =< aux(48)
aux(31) =< aux(40)+1
aux(15) =< aux(40)
aux(14) =< it(13)*aux(40)
it(14) =< aux(48)+aux(9)
s(5) =< it(13)*aux(40)
aux(16) =< it(13)*aux(15)
aux(10) =< aux(14)
aux(10) =< aux(16)
aux(33) =< it(13)*aux(31)
s(6) =< it(13)*aux(31)
it(15) =< aux(33)+aux(10)+aux(49)
it(16) =< aux(33)+aux(10)+aux(49)
it(14) =< aux(33)+aux(10)+aux(49)
s(6) =< it(16)+aux(41)
s(6) =< it(16)+aux(29)

  with precondition: [B=3,V_x_0>=0,V_y_0>=0,V_m>=V_x_0] 

* Chain [19]: 0
  with precondition: [B=3,0>=V_x_0+1,V_y_0+1>=0,V_m>=V_x_0] 


#### Cost of chains of eval_rank1_bb0_in(V_m,B):
* Chain [21]: 0
  with precondition: [0>=V_m+1] 

* Chain [20]: 4*s(50)+2*s(51)+2*s(52)+2*s(56)+1*s(60)+2*s(61)+1*s(62)+0
  Such that:s(49) =< 1
s(48) =< V_m+1
aux(55) =< V_m
aux(56) =< 2*V_m+1
s(50) =< s(48)
s(51) =< s(48)
s(52) =< s(48)
s(53) =< aux(55)+1
s(54) =< aux(55)
s(55) =< s(50)*aux(55)
s(51) =< s(48)
s(56) =< s(50)*aux(55)
s(57) =< s(50)*s(54)
s(58) =< s(55)
s(58) =< s(57)
s(59) =< s(50)*s(53)
s(60) =< s(50)*s(53)
s(52) =< s(59)+s(58)+s(49)
s(61) =< s(59)+s(58)+s(49)
s(51) =< s(59)+s(58)+s(49)
s(60) =< s(61)+aux(55)
s(60) =< s(61)+aux(56)
s(62) =< s(50)*s(53)
s(62) =< s(61)+aux(56)

  with precondition: [V_m>=0] 


#### Cost of chains of eval_rank1_start(V_m,B):
* Chain [23]: 0
  with precondition: [0>=V_m+1] 

* Chain [22]: 4*s(67)+4*s(68)+2*s(73)+1*s(77)+2*s(78)+1*s(79)+0
  Such that:s(63) =< 1
s(65) =< V_m
s(64) =< V_m+1
s(66) =< 2*V_m+1
s(67) =< s(64)
s(68) =< s(64)
s(70) =< s(65)+1
s(71) =< s(65)
s(72) =< s(67)*s(65)
s(73) =< s(67)*s(65)
s(74) =< s(67)*s(71)
s(75) =< s(72)
s(75) =< s(74)
s(76) =< s(67)*s(70)
s(77) =< s(67)*s(70)
s(68) =< s(76)+s(75)+s(63)
s(78) =< s(76)+s(75)+s(63)
s(77) =< s(78)+s(65)
s(77) =< s(78)+s(66)
s(79) =< s(67)*s(70)
s(79) =< s(78)+s(66)

  with precondition: [V_m>=0] 


Closed-form bounds of eval_rank1_start(V_m,B): 
-------------------------------------
* Chain [23] with precondition: [0>=V_m+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [22] with precondition: [V_m>=0] 
    - Upper bound: (V_m+1)*(8*V_m)+2+(12*V_m+12) 
    - Complexity: n^2 

### Maximum cost of eval_rank1_start(V_m,B): nat(V_m)*8*nat(V_m+1)+2+nat(V_m+1)*12 
Asymptotic class: n^2 
* Total analysis performed in 156 ms.

