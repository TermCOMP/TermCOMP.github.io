WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_Loopus2015_original_bb3_in/8,eval_Loopus2015_original_bb4_in/8]
1. recursive  : [eval_Loopus2015_original_1/6,eval_Loopus2015_original_2/7,eval_Loopus2015_original_3/8,eval_Loopus2015_original_4/9,eval_Loopus2015_original_bb1_in/5,eval_Loopus2015_original_bb2_in/5,eval_Loopus2015_original_bb3_in_loop_cont/6]
2. non_recursive  : [eval_Loopus2015_original_stop/1]
3. non_recursive  : [eval_Loopus2015_original_bb5_in/1]
4. non_recursive  : [eval_Loopus2015_original_bb1_in_loop_cont/2]
5. non_recursive  : [eval_Loopus2015_original_bb0_in/2]
6. non_recursive  : [eval_Loopus2015_original_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_Loopus2015_original_bb3_in/8
1. SCC is partially evaluated into eval_Loopus2015_original_bb1_in/5
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_Loopus2015_original_bb0_in/2
6. SCC is partially evaluated into eval_Loopus2015_original_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_Loopus2015_original_bb3_in/8 
* CE 9 is refined into CE [10] 
* CE 8 is refined into CE [11] 


### Cost equations --> "Loop" of eval_Loopus2015_original_bb3_in/8 
* CEs [11] --> Loop 9 
* CEs [10] --> Loop 10 

### Ranking functions of CR eval_Loopus2015_original_bb3_in(V_i_0,V_end_0,V_beg_0,V_2,V_end_1,V_4,V_k_0,B) 
* RF of phase [9]: [V_end_1-V_k_0,V_i_0-V_k_0+1]

#### Partial ranking functions of CR eval_Loopus2015_original_bb3_in(V_i_0,V_end_0,V_beg_0,V_2,V_end_1,V_4,V_k_0,B) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V_end_1-V_k_0
    V_i_0-V_k_0+1


### Specialization of cost equations eval_Loopus2015_original_bb1_in/5 
* CE 7 is refined into CE [12] 
* CE 6 is refined into CE [13] 
* CE 3 is refined into CE [14] 
* CE 4 is refined into CE [15,16] 
* CE 5 is refined into CE [17] 


### Cost equations --> "Loop" of eval_Loopus2015_original_bb1_in/5 
* CEs [13] --> Loop 11 
* CEs [16] --> Loop 12 
* CEs [15] --> Loop 13 
* CEs [14] --> Loop 14 
* CEs [17] --> Loop 15 
* CEs [12] --> Loop 16 

### Ranking functions of CR eval_Loopus2015_original_bb1_in(V_len,V_i_0,V_end_0,V_beg_0,B) 
* RF of phase [11,12,13,14,15]: [V_len-V_i_0]

#### Partial ranking functions of CR eval_Loopus2015_original_bb1_in(V_len,V_i_0,V_end_0,V_beg_0,B) 
* Partial RF of phase [11,12,13,14,15]:
  - RF of loop [11:1,12:1,13:1,14:1,15:1]:
    V_len-V_i_0
  - RF of loop [12:1]:
    V_end_0-V_beg_0 depends on loops [15:1] 
    V_i_0-V_beg_0 depends on loops [11:1,15:1] 
    V_len/2-V_beg_0/2-1/2
  - RF of loop [12:1,13:1,14:1,15:1]:
    V_len-V_end_0
  - RF of loop [13:1,14:1]:
    V_len-V_beg_0


### Specialization of cost equations eval_Loopus2015_original_bb0_in/2 
* CE 2 is refined into CE [18,19] 


### Cost equations --> "Loop" of eval_Loopus2015_original_bb0_in/2 
* CEs [19] --> Loop 17 
* CEs [18] --> Loop 18 

### Ranking functions of CR eval_Loopus2015_original_bb0_in(V_len,B) 

#### Partial ranking functions of CR eval_Loopus2015_original_bb0_in(V_len,B) 


### Specialization of cost equations eval_Loopus2015_original_start/2 
* CE 1 is refined into CE [20,21] 


### Cost equations --> "Loop" of eval_Loopus2015_original_start/2 
* CEs [21] --> Loop 19 
* CEs [20] --> Loop 20 

### Ranking functions of CR eval_Loopus2015_original_start(V_len,B) 

#### Partial ranking functions of CR eval_Loopus2015_original_start(V_len,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_Loopus2015_original_bb3_in(V_i_0,V_end_0,V_beg_0,V_2,V_end_1,V_4,V_k_0,B):
* Chain [[9],10]: 1*it(9)+0
  Such that:it(9) =< V_end_1-V_k_0

  with precondition: [B=2,V_beg_0>=0,V_4>=1,V_i_0>=V_end_0,V_end_1>=V_end_0,V_end_0>=V_beg_0,V_k_0>=V_beg_0,V_i_0+1>=V_end_1,V_end_1>=V_k_0+1] 

* Chain [10]: 0
  with precondition: [B=2,V_k_0=V_end_1,V_beg_0>=0,V_4>=1,V_i_0>=V_end_0,V_k_0>=V_end_0,V_end_0>=V_beg_0,V_i_0+1>=V_k_0] 


#### Cost of chains of eval_Loopus2015_original_bb1_in(V_len,V_i_0,V_end_0,V_beg_0,B):
* Chain [[11,12,13,14,15],16]: 1*it(11)+1*it(12)+2*it(13)+1*it(15)+1*s(5)+1*s(6)+0
  Such that:aux(14) =< V_len
it(12) =< V_len/2-V_beg_0/2
aux(23) =< V_len-V_i_0
aux(24) =< V_len-V_end_0
aux(25) =< V_len-V_beg_0
aux(26) =< V_i_0-V_beg_0
aux(27) =< V_end_0-V_beg_0
aux(22) =< aux(25)
aux(6) =< aux(26)
aux(22) =< aux(26)
aux(6) =< aux(27)
aux(12) =< aux(14)
it(11) =< aux(23)
it(12) =< aux(23)
it(13) =< aux(23)
it(15) =< aux(23)
it(12) =< aux(24)
it(13) =< aux(24)
it(15) =< aux(24)
it(13) =< aux(25)
s(5) =< aux(25)
s(6) =< aux(25)
aux(12) =< aux(14)
aux(11) =< it(15)*aux(14)
aux(2) =< it(15)*aux(14)
s(5) =< it(15)+it(11)+aux(22)
s(5) =< it(15)+it(11)+aux(26)
it(12) =< it(15)+it(11)+aux(22)
it(12) =< it(15)+it(11)+aux(26)
aux(13) =< it(15)*aux(12)
aux(2) =< it(15)*aux(12)
aux(5) =< aux(11)
aux(5) =< aux(13)
it(12) =< aux(2)+aux(27)
it(12) =< aux(5)+aux(6)
s(5) =< it(12)*aux(25)

  with precondition: [B=3,V_beg_0>=0,V_len>=V_i_0+1,V_i_0>=V_end_0,V_end_0>=V_beg_0] 

* Chain [16]: 0
  with precondition: [B=3,V_beg_0>=0,V_i_0>=V_len,V_i_0>=V_end_0,V_end_0>=V_beg_0] 


#### Cost of chains of eval_Loopus2015_original_bb0_in(V_len,B):
* Chain [18]: 0
  with precondition: [0>=V_len] 

* Chain [17]: 1*s(8)+5*s(17)+1*s(20)+0
  Such that:s(8) =< V_len/2
aux(29) =< V_len
s(16) =< aux(29)
s(17) =< aux(29)
s(8) =< aux(29)
s(20) =< aux(29)
s(16) =< aux(29)
s(22) =< s(17)*aux(29)
s(23) =< s(17)*aux(29)
s(20) =< s(17)+s(17)
s(20) =< s(17)+s(17)
s(8) =< s(17)+s(17)
s(8) =< s(17)+s(17)
s(24) =< s(17)*s(16)
s(23) =< s(17)*s(16)
s(25) =< s(22)
s(25) =< s(24)
s(8) =< s(23)
s(8) =< s(25)
s(20) =< s(8)*aux(29)

  with precondition: [V_len>=1] 


#### Cost of chains of eval_Loopus2015_original_start(V_len,B):
* Chain [20]: 0
  with precondition: [0>=V_len] 

* Chain [19]: 1*s(26)+5*s(29)+1*s(30)+0
  Such that:s(27) =< V_len
s(26) =< V_len/2
s(28) =< s(27)
s(29) =< s(27)
s(26) =< s(27)
s(30) =< s(27)
s(28) =< s(27)
s(31) =< s(29)*s(27)
s(32) =< s(29)*s(27)
s(30) =< s(29)+s(29)
s(30) =< s(29)+s(29)
s(26) =< s(29)+s(29)
s(26) =< s(29)+s(29)
s(33) =< s(29)*s(28)
s(32) =< s(29)*s(28)
s(34) =< s(31)
s(34) =< s(33)
s(26) =< s(32)
s(26) =< s(34)
s(30) =< s(26)*s(27)

  with precondition: [V_len>=1] 


Closed-form bounds of eval_Loopus2015_original_start(V_len,B): 
-------------------------------------
* Chain [20] with precondition: [0>=V_len] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [19] with precondition: [V_len>=1] 
    - Upper bound: 13/2*V_len 
    - Complexity: n 

### Maximum cost of eval_Loopus2015_original_start(V_len,B): nat(V_len)*6+nat(V_len/2) 
Asymptotic class: n 
* Total analysis performed in 173 ms.

