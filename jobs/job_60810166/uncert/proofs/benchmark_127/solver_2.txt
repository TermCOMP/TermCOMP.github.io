MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_foo_bb1_in/2,eval_foo_bb2_in/2]
1. non_recursive  : [eval_foo_stop/1]
2. non_recursive  : [eval_foo_bb3_in/1]
3. non_recursive  : [eval_foo_bb1_in_loop_cont/2]
4. non_recursive  : [eval_foo_bb0_in/2]
5. non_recursive  : [eval_foo_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_foo_bb1_in/2
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_foo_bb0_in/2
5. SCC is partially evaluated into eval_foo_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_foo_bb1_in/2 
* CE 5 is refined into CE [7] 
* CE 6 is refined into CE [8] 
* CE 3 is refined into CE [9] 
* CE 4 is refined into CE [10] 


### Cost equations --> "Loop" of eval_foo_bb1_in/2 
* CEs [9] --> Loop 7 
* CEs [10] --> Loop 8 
* CEs [7] --> Loop 9 
* CEs [8] --> Loop 10 

### Ranking functions of CR eval_foo_bb1_in(V__0,B) 
* RF of phase [7]: [V__0-1]

#### Partial ranking functions of CR eval_foo_bb1_in(V__0,B) 
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    V__0-1


### Specialization of cost equations eval_foo_bb0_in/2 
* CE 2 is refined into CE [11,12,13,14,15] 


### Cost equations --> "Loop" of eval_foo_bb0_in/2 
* CEs [15] --> Loop 11 
* CEs [14] --> Loop 12 
* CEs [13] --> Loop 13 
* CEs [12] --> Loop 14 
* CEs [11] --> Loop 15 

### Ranking functions of CR eval_foo_bb0_in(V_i,B) 

#### Partial ranking functions of CR eval_foo_bb0_in(V_i,B) 


### Specialization of cost equations eval_foo_start/3 
* CE 1 is refined into CE [16,17,18,19,20] 


### Cost equations --> "Loop" of eval_foo_start/3 
* CEs [20] --> Loop 16 
* CEs [19] --> Loop 17 
* CEs [18] --> Loop 18 
* CEs [17] --> Loop 19 
* CEs [16] --> Loop 20 

### Ranking functions of CR eval_foo_start(V_i,V_b,B) 

#### Partial ranking functions of CR eval_foo_start(V_i,V_b,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_foo_bb1_in(V__0,B):
* Chain [[8]]...: 1*it(8)+0
  with precondition: [0>=V__0+1,B=2] 

* Chain [[7],10]: 1*it(7)+0
  Such that:it(7) =< V__0

  with precondition: [B=2,V__0>=2] 

* Chain [[7],9]: 1*it(7)+0
  Such that:it(7) =< V__0

  with precondition: [B=2,V__0>=3] 

* Chain [10]: 0
  with precondition: [V__0=0,B=2] 

* Chain [9]: 0
  with precondition: [V__0=1,B=2] 


#### Cost of chains of eval_foo_bb0_in(V_i,B):
* Chain [15]: 0
  with precondition: [V_i=0] 

* Chain [14]: 0
  with precondition: [V_i=1] 

* Chain [13]: 1*s(1)+0
  Such that:s(1) =< V_i

  with precondition: [V_i>=2] 

* Chain [12]: 1*s(2)+0
  Such that:s(2) =< V_i

  with precondition: [V_i>=3] 

* Chain [11]...: 1*s(3)+0
  with precondition: [0>=V_i+1] 


#### Cost of chains of eval_foo_start(V_i,V_b,B):
* Chain [20]: 0
  with precondition: [V_i=0] 

* Chain [19]: 0
  with precondition: [V_i=1] 

* Chain [18]: 1*s(4)+0
  Such that:s(4) =< V_i

  with precondition: [V_i>=2] 

* Chain [17]: 1*s(5)+0
  Such that:s(5) =< V_i

  with precondition: [V_i>=3] 

* Chain [16]...: 1*s(6)+0
  with precondition: [0>=V_i+1] 


Closed-form bounds of eval_foo_start(V_i,V_b,B): 
-------------------------------------
* Chain [20] with precondition: [V_i=0] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [19] with precondition: [V_i=1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [18] with precondition: [V_i>=2] 
    - Upper bound: V_i 
    - Complexity: n 
* Chain [17] with precondition: [V_i>=3] 
    - Upper bound: V_i 
    - Complexity: n 
* Chain [16]... with precondition: [0>=V_i+1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_foo_start(V_i,V_b,B): inf 
Asymptotic class: infinity 
* Total analysis performed in 22 ms.

