MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_foo_bb1_in/3,eval_foo_bb2_in/3]
1. non_recursive  : [eval_foo_stop/1]
2. non_recursive  : [eval_foo_bb3_in/1]
3. non_recursive  : [eval_foo_bb1_in_loop_cont/2]
4. non_recursive  : [eval_foo_bb0_in/3]
5. non_recursive  : [eval_foo_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_foo_bb1_in/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_foo_bb0_in/3
5. SCC is partially evaluated into eval_foo_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_foo_bb1_in/3 
* CE 5 is refined into CE [6] 
* CE 4 is refined into CE [7] 
* CE 3 is refined into CE [8] 


### Cost equations --> "Loop" of eval_foo_bb1_in/3 
* CEs [7] --> Loop 6 
* CEs [8] --> Loop 7 
* CEs [6] --> Loop 8 

### Ranking functions of CR eval_foo_bb1_in(V__01,V__0,B) 
* RF of phase [7]: [-V__01/2+V__0/2]

#### Partial ranking functions of CR eval_foo_bb1_in(V__01,V__0,B) 
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    -V__01/2+V__0/2


### Specialization of cost equations eval_foo_bb0_in/3 
* CE 2 is refined into CE [9,10,11,12] 


### Cost equations --> "Loop" of eval_foo_bb0_in/3 
* CEs [11] --> Loop 9 
* CEs [12] --> Loop 10 
* CEs [10] --> Loop 11 
* CEs [9] --> Loop 12 

### Ranking functions of CR eval_foo_bb0_in(V_i,V_j,B) 

#### Partial ranking functions of CR eval_foo_bb0_in(V_i,V_j,B) 


### Specialization of cost equations eval_foo_start/3 
* CE 1 is refined into CE [13,14,15,16] 


### Cost equations --> "Loop" of eval_foo_start/3 
* CEs [16] --> Loop 13 
* CEs [15] --> Loop 14 
* CEs [14] --> Loop 15 
* CEs [13] --> Loop 16 

### Ranking functions of CR eval_foo_start(V_i,V_j,B) 

#### Partial ranking functions of CR eval_foo_start(V_i,V_j,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_foo_bb1_in(V__01,V__0,B):
* Chain [[7],[6]]...: 1*it(6)+1*it(7)+0
  Such that:it(7) =< -V__01/2+V__0/2

  with precondition: [B=2,V__0>=V__01+1] 

* Chain [[7],8]: 1*it(7)+0
  Such that:it(7) =< -V__01/2+V__0/2

  with precondition: [B=2,V__0>=V__01+2] 

* Chain [[6]]...: 1*it(6)+0
  with precondition: [V__01>=V__0+1,B=2] 

* Chain [8]: 0
  with precondition: [B=2,V__0=V__01] 


#### Cost of chains of eval_foo_bb0_in(V_i,V_j,B):
* Chain [12]: 0
  with precondition: [V_j=V_i] 

* Chain [11]: 1*s(1)+0
  Such that:s(1) =< V_i/2-V_j/2

  with precondition: [V_i>=V_j+2] 

* Chain [10]...: 1*s(2)+0
  with precondition: [V_j>=V_i+1] 

* Chain [9]...: 1*s(3)+1*s(4)+0
  Such that:s(3) =< V_i/2-V_j/2

  with precondition: [V_i>=V_j+1] 


#### Cost of chains of eval_foo_start(V_i,V_j,B):
* Chain [16]: 0
  with precondition: [V_j=V_i] 

* Chain [15]: 1*s(5)+0
  Such that:s(5) =< V_i/2-V_j/2

  with precondition: [V_i>=V_j+2] 

* Chain [14]...: 1*s(6)+0
  with precondition: [V_j>=V_i+1] 

* Chain [13]...: 1*s(7)+1*s(8)+0
  Such that:s(7) =< V_i/2-V_j/2

  with precondition: [V_i>=V_j+1] 


Closed-form bounds of eval_foo_start(V_i,V_j,B): 
-------------------------------------
* Chain [16] with precondition: [V_j=V_i] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [15] with precondition: [V_i>=V_j+2] 
    - Upper bound: V_i/2-V_j/2 
    - Complexity: n 
* Chain [14]... with precondition: [V_j>=V_i+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [13]... with precondition: [V_i>=V_j+1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_foo_start(V_i,V_j,B): inf 
Asymptotic class: infinity 
* Total analysis performed in 31 ms.

