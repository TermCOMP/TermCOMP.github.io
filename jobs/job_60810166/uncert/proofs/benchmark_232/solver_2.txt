WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_foo_bb2_in/3,eval_foo_bb3_in/3]
1. recursive  : [eval_foo_bb1_in/3,eval_foo_bb2_in_loop_cont/5,eval_foo_bb4_in/4]
2. non_recursive  : [eval_foo_stop/1]
3. non_recursive  : [eval_foo_bb5_in/1]
4. non_recursive  : [eval_foo_bb1_in_loop_cont/2]
5. non_recursive  : [eval_foo_bb0_in/3]
6. non_recursive  : [eval_foo_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_foo_bb2_in/3
1. SCC is partially evaluated into eval_foo_bb1_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_foo_bb0_in/3
6. SCC is partially evaluated into eval_foo_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_foo_bb2_in/3 
* CE 6 is refined into CE [7] 
* CE 5 is refined into CE [8] 


### Cost equations --> "Loop" of eval_foo_bb2_in/3 
* CEs [8] --> Loop 7 
* CEs [7] --> Loop 8 

### Ranking functions of CR eval_foo_bb2_in(V__1,B,C) 
* RF of phase [7]: [V__1]

#### Partial ranking functions of CR eval_foo_bb2_in(V__1,B,C) 
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    V__1


### Specialization of cost equations eval_foo_bb1_in/3 
* CE 4 is refined into CE [9] 
* CE 3 is refined into CE [10,11] 


### Cost equations --> "Loop" of eval_foo_bb1_in/3 
* CEs [11] --> Loop 9 
* CEs [10] --> Loop 10 
* CEs [9] --> Loop 11 

### Ranking functions of CR eval_foo_bb1_in(V__01,V__0,B) 
* RF of phase [9]: [V__0]

#### Partial ranking functions of CR eval_foo_bb1_in(V__01,V__0,B) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V__0


### Specialization of cost equations eval_foo_bb0_in/3 
* CE 2 is refined into CE [12,13,14,15] 


### Cost equations --> "Loop" of eval_foo_bb0_in/3 
* CEs [15] --> Loop 12 
* CEs [13] --> Loop 13 
* CEs [14] --> Loop 14 
* CEs [12] --> Loop 15 

### Ranking functions of CR eval_foo_bb0_in(V_x,V_y,B) 

#### Partial ranking functions of CR eval_foo_bb0_in(V_x,V_y,B) 


### Specialization of cost equations eval_foo_start/3 
* CE 1 is refined into CE [16,17,18,19] 


### Cost equations --> "Loop" of eval_foo_start/3 
* CEs [19] --> Loop 16 
* CEs [18] --> Loop 17 
* CEs [17] --> Loop 18 
* CEs [16] --> Loop 19 

### Ranking functions of CR eval_foo_start(V_x,V_y,B) 

#### Partial ranking functions of CR eval_foo_start(V_x,V_y,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_foo_bb2_in(V__1,B,C):
* Chain [[7],8]: 1*it(7)+0
  Such that:it(7) =< V__1

  with precondition: [B=2,C=0,V__1>=1] 

* Chain [8]: 0
  with precondition: [B=2,V__1=C,0>=V__1] 


#### Cost of chains of eval_foo_bb1_in(V__01,V__0,B):
* Chain [[9],11]: 1*it(9)+0
  Such that:it(9) =< V__0

  with precondition: [B=3,0>=V__01,V__0>=1] 

* Chain [11]: 0
  with precondition: [B=3,0>=V__0] 

* Chain [10,[9],11]: 1*it(9)+1*s(1)+1
  Such that:s(1) =< V__01
it(9) =< V__0

  with precondition: [B=3,V__01>=1,V__0>=2] 

* Chain [10,11]: 1*s(1)+1
  Such that:s(1) =< V__01

  with precondition: [V__0=1,B=3,V__01>=1] 


#### Cost of chains of eval_foo_bb0_in(V_x,V_y,B):
* Chain [15]: 1*s(2)+1
  Such that:s(2) =< V_y

  with precondition: [V_x=1,V_y>=1] 

* Chain [14]: 0
  with precondition: [0>=V_x] 

* Chain [13]: 1*s(3)+0
  Such that:s(3) =< V_x

  with precondition: [0>=V_y,V_x>=1] 

* Chain [12]: 1*s(4)+1*s(5)+1
  Such that:s(5) =< V_x
s(4) =< V_y

  with precondition: [V_x>=2,V_y>=1] 


#### Cost of chains of eval_foo_start(V_x,V_y,B):
* Chain [19]: 1*s(6)+1
  Such that:s(6) =< V_y

  with precondition: [V_x=1,V_y>=1] 

* Chain [18]: 0
  with precondition: [0>=V_x] 

* Chain [17]: 1*s(7)+0
  Such that:s(7) =< V_x

  with precondition: [0>=V_y,V_x>=1] 

* Chain [16]: 1*s(8)+1*s(9)+1
  Such that:s(8) =< V_x
s(9) =< V_y

  with precondition: [V_x>=2,V_y>=1] 


Closed-form bounds of eval_foo_start(V_x,V_y,B): 
-------------------------------------
* Chain [19] with precondition: [V_x=1,V_y>=1] 
    - Upper bound: V_y+1 
    - Complexity: n 
* Chain [18] with precondition: [0>=V_x] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [17] with precondition: [0>=V_y,V_x>=1] 
    - Upper bound: V_x 
    - Complexity: n 
* Chain [16] with precondition: [V_x>=2,V_y>=1] 
    - Upper bound: V_x+V_y+1 
    - Complexity: n 

### Maximum cost of eval_foo_start(V_x,V_y,B): nat(V_y)+1+nat(V_x) 
Asymptotic class: n 
* Total analysis performed in 32 ms.

