MAYBE
WARNING: Excluded non-linear constraints:[C+1=<B*B]
WARNING: Excluded non-linear constraints:[C>=B*B]
WARNING: Excluded non-linear constraints:[F=C+A*A]
WARNING: Excluded non-linear constraints:[D>=E*E]

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_size06_bb1_in/5,eval_size06_bb2_in/5]
1. recursive  : [eval_size06_bb3_in/5,eval_size06_bb4_in/5]
2. recursive  : [eval_size06_bb5_in/2,eval_size06_bb6_in/2]
3. non_recursive  : [eval_size06_stop/1]
4. non_recursive  : [eval_size06_bb7_in/1]
5. non_recursive  : [eval_size06_bb5_in_loop_cont/2]
6. non_recursive  : [eval_size06_bb3_in_loop_cont/3]
7. non_recursive  : [eval_size06_bb1_in_loop_cont/5]
8. non_recursive  : [eval_size06_bb0_in/4]
9. non_recursive  : [eval_size06_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_size06_bb1_in/5
1. SCC is partially evaluated into eval_size06_bb3_in/5
2. SCC is partially evaluated into eval_size06_bb5_in/2
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_size06_bb3_in_loop_cont/3
7. SCC is partially evaluated into eval_size06_bb1_in_loop_cont/5
8. SCC is partially evaluated into eval_size06_bb0_in/4
9. SCC is partially evaluated into eval_size06_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_size06_bb1_in/5 
* CE 5 is refined into CE [12] 
* CE 4 is refined into CE [13] 


### Cost equations --> "Loop" of eval_size06_bb1_in/5 
* CEs [13] --> Loop 12 
* CEs [12] --> Loop 13 

### Ranking functions of CR eval_size06_bb1_in(V__02,V__0,B,C,D) 
* RF of phase [12]: [V__02]

#### Partial ranking functions of CR eval_size06_bb1_in(V__02,V__0,B,C,D) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V__02


### Specialization of cost equations eval_size06_bb3_in/5 
* CE 8 is refined into CE [14] 
* CE 7 is refined into CE [15] 


### Cost equations --> "Loop" of eval_size06_bb3_in/5 
* CEs [15] --> Loop 14 
* CEs [14] --> Loop 15 

### Ranking functions of CR eval_size06_bb3_in(V__13,V__01,V__1,B,C) 

#### Partial ranking functions of CR eval_size06_bb3_in(V__13,V__01,V__1,B,C) 


### Specialization of cost equations eval_size06_bb5_in/2 
* CE 11 is refined into CE [16] 
* CE 10 is refined into CE [17] 


### Cost equations --> "Loop" of eval_size06_bb5_in/2 
* CEs [17] --> Loop 16 
* CEs [16] --> Loop 17 

### Ranking functions of CR eval_size06_bb5_in(V__2,B) 
* RF of phase [16]: [V__2]

#### Partial ranking functions of CR eval_size06_bb5_in(V__2,B) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    V__2


### Specialization of cost equations eval_size06_bb3_in_loop_cont/3 
* CE 9 is refined into CE [18,19] 


### Cost equations --> "Loop" of eval_size06_bb3_in_loop_cont/3 
* CEs [19] --> Loop 18 
* CEs [18] --> Loop 19 

### Ranking functions of CR eval_size06_bb3_in_loop_cont(A,B,C) 

#### Partial ranking functions of CR eval_size06_bb3_in_loop_cont(A,B,C) 


### Specialization of cost equations eval_size06_bb1_in_loop_cont/5 
* CE 6 is refined into CE [20,21,22,23,24,25] 


### Cost equations --> "Loop" of eval_size06_bb1_in_loop_cont/5 
* CEs [24,25] --> Loop 20 
* CEs [23] --> Loop 21 
* CEs [22] --> Loop 22 
* CEs [20,21] --> Loop 23 

### Ranking functions of CR eval_size06_bb1_in_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR eval_size06_bb1_in_loop_cont(A,B,C,D,E) 


### Specialization of cost equations eval_size06_bb0_in/4 
* CE 3 is refined into CE [26,27,28,29,30,31,32] 
* CE 2 is refined into CE [33] 


### Cost equations --> "Loop" of eval_size06_bb0_in/4 
* CEs [26,27,28] --> Loop 24 
* CEs [30,31] --> Loop 25 
* CEs [33] --> Loop 26 
* CEs [29] --> Loop 27 
* CEs [32] --> Loop 28 

### Ranking functions of CR eval_size06_bb0_in(V_a,V_b,V_c,B) 

#### Partial ranking functions of CR eval_size06_bb0_in(V_a,V_b,V_c,B) 


### Specialization of cost equations eval_size06_start/4 
* CE 1 is refined into CE [34,35,36,37,38] 


### Cost equations --> "Loop" of eval_size06_start/4 
* CEs [38] --> Loop 29 
* CEs [37] --> Loop 30 
* CEs [36] --> Loop 31 
* CEs [35] --> Loop 32 
* CEs [34] --> Loop 33 

### Ranking functions of CR eval_size06_start(V_a,V_b,V_c,B) 

#### Partial ranking functions of CR eval_size06_start(V_a,V_b,V_c,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_size06_bb1_in(V__02,V__0,B,C,D):
* Chain [[12],13]: 1*it(12)+0
  Such that:it(12) =< V__02

  with precondition: [B=4,C=0,V__02>=1,V__0>=1] 

* Chain [13]: 0
  with precondition: [B=4,V__02=C,V__0=D,0>=V__02,V__0>=1] 


#### Cost of chains of eval_size06_bb3_in(V__13,V__01,V__1,B,C):
* Chain [[14]]...: 1*it(14)+0
  with precondition: [] 

* Chain [[14],15]: 1*it(14)+0
  with precondition: [B=3] 

* Chain [15]: 0
  with precondition: [B=3,C=V__1] 


#### Cost of chains of eval_size06_bb5_in(V__2,B):
* Chain [[16],17]: 1*it(16)+0
  Such that:it(16) =< V__2

  with precondition: [B=2,V__2>=1] 

* Chain [17]: 0
  with precondition: [B=2,0>=V__2] 


#### Cost of chains of eval_size06_bb3_in_loop_cont(A,B,C):
* Chain [19]: 0
  with precondition: [A=3,0>=B] 

* Chain [18]: 1*s(1)+0
  Such that:s(1) =< B

  with precondition: [A=3,B>=1] 


#### Cost of chains of eval_size06_bb1_in_loop_cont(A,B,C,D,E):
* Chain [23]: 1*aux(1)+0
  with precondition: [A=4] 

* Chain [22]: 0
  with precondition: [A=4,0>=D] 

* Chain [21]: 1*s(5)+0
  Such that:s(5) =< D

  with precondition: [A=4,D>=1] 

* Chain [20]...: 1*aux(2)+0
  with precondition: [A=4] 


#### Cost of chains of eval_size06_bb0_in(V_a,V_b,V_c,B):
* Chain [28]...: 1*s(9)+0
  with precondition: [0>=V_c,V_a>=1] 

* Chain [27]...: 1*s(10)+1*s(11)+0
  Such that:s(10) =< V_c

  with precondition: [V_a>=1,V_c>=1] 

* Chain [26]: 0
  with precondition: [0>=V_a] 

* Chain [25]: 1*s(12)+1*s(13)+0
  Such that:s(13) =< V_a

  with precondition: [0>=V_c,V_a>=1] 

* Chain [24]: 3*s(14)+2*s(15)+0
  Such that:aux(3) =< V_c
s(14) =< aux(3)

  with precondition: [V_a>=1,V_c>=1] 


#### Cost of chains of eval_size06_start(V_a,V_b,V_c,B):
* Chain [33]: 0
  with precondition: [0>=V_a] 

* Chain [32]: 1*s(19)+1*s(20)+0
  Such that:s(19) =< V_a

  with precondition: [0>=V_c,V_a>=1] 

* Chain [31]: 3*s(22)+2*s(23)+0
  Such that:s(21) =< V_c
s(22) =< s(21)

  with precondition: [V_a>=1,V_c>=1] 

* Chain [30]...: 1*s(24)+0
  with precondition: [0>=V_c,V_a>=1] 

* Chain [29]...: 1*s(25)+1*s(26)+0
  Such that:s(25) =< V_c

  with precondition: [V_a>=1,V_c>=1] 


Closed-form bounds of eval_size06_start(V_a,V_b,V_c,B): 
-------------------------------------
* Chain [33] with precondition: [0>=V_a] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [32] with precondition: [0>=V_c,V_a>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [31] with precondition: [V_a>=1,V_c>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [30]... with precondition: [0>=V_c,V_a>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [29]... with precondition: [V_a>=1,V_c>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_size06_start(V_a,V_b,V_c,B): inf 
Asymptotic class: infinity 
* Total analysis performed in 63 ms.

