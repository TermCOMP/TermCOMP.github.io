WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_ax_bb2_in/4,eval_ax_bb3_in/4]
1. recursive  : [eval_ax_bb1_in/3,eval_ax_bb2_in_loop_cont/5,eval_ax_bb4_in/4]
2. non_recursive  : [eval_ax_stop/1]
3. non_recursive  : [eval_ax__critedge_in/1]
4. non_recursive  : [eval_ax_bb1_in_loop_cont/2]
5. non_recursive  : [eval_ax_bb0_in/2]
6. non_recursive  : [eval_ax_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_ax_bb2_in/4
1. SCC is partially evaluated into eval_ax_bb1_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_ax_bb0_in/2
6. SCC is partially evaluated into eval_ax_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_ax_bb2_in/4 
* CE 7 is refined into CE [8] 
* CE 6 is refined into CE [9] 


### Cost equations --> "Loop" of eval_ax_bb2_in/4 
* CEs [9] --> Loop 8 
* CEs [8] --> Loop 9 

### Ranking functions of CR eval_ax_bb2_in(V_n,V__01,B,C) 
* RF of phase [8]: [V_n-V__01-1]

#### Partial ranking functions of CR eval_ax_bb2_in(V_n,V__01,B,C) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V_n-V__01-1


### Specialization of cost equations eval_ax_bb1_in/3 
* CE 5 is refined into CE [10] 
* CE 3 is refined into CE [11,12] 
* CE 4 is discarded (unfeasible) 


### Cost equations --> "Loop" of eval_ax_bb1_in/3 
* CEs [11] --> Loop 10 
* CEs [12] --> Loop 11 
* CEs [10] --> Loop 12 

### Ranking functions of CR eval_ax_bb1_in(V_n,V__0,B) 
* RF of phase [12]: [V_n-V__0-2]

#### Partial ranking functions of CR eval_ax_bb1_in(V_n,V__0,B) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V_n-V__0-2


### Specialization of cost equations eval_ax_bb0_in/2 
* CE 2 is refined into CE [13,14,15] 


### Cost equations --> "Loop" of eval_ax_bb0_in/2 
* CEs [15] --> Loop 13 
* CEs [13] --> Loop 14 
* CEs [14] --> Loop 15 

### Ranking functions of CR eval_ax_bb0_in(V_n,B) 

#### Partial ranking functions of CR eval_ax_bb0_in(V_n,B) 


### Specialization of cost equations eval_ax_start/4 
* CE 1 is refined into CE [16,17,18] 


### Cost equations --> "Loop" of eval_ax_start/4 
* CEs [18] --> Loop 16 
* CEs [17] --> Loop 17 
* CEs [16] --> Loop 18 

### Ranking functions of CR eval_ax_start(V_i,V_j,V_n,B) 

#### Partial ranking functions of CR eval_ax_start(V_i,V_j,V_n,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_ax_bb2_in(V_n,V__01,B,C):
* Chain [[8],9]: 1*it(8)+0
  Such that:it(8) =< -V__01+C

  with precondition: [B=2,V_n=C+1,V__01>=0,V_n>=V__01+2] 

* Chain [9]: 0
  with precondition: [B=2,V__01=C,V__01>=0,V__01+1>=V_n] 


#### Cost of chains of eval_ax_bb1_in(V_n,V__0,B):
* Chain [[12],10]: 1*it(12)+1*s(1)+1*s(4)+0
  Such that:it(12) =< V_n-V__0
aux(2) =< V_n
s(1) =< aux(2)
s(4) =< it(12)*aux(2)

  with precondition: [B=3,V__0>=0,V_n>=V__0+3] 

* Chain [11]: 0
  with precondition: [V__0=0,B=3,1>=V_n] 

* Chain [10]: 1*s(1)+0
  Such that:s(1) =< V_n

  with precondition: [B=3,V_n>=2,V__0+2>=V_n] 


#### Cost of chains of eval_ax_bb0_in(V_n,B):
* Chain [15]: 1*s(5)+0
  Such that:s(5) =< 2

  with precondition: [V_n=2] 

* Chain [14]: 0
  with precondition: [1>=V_n] 

* Chain [13]: 2*s(6)+1*s(9)+0
  Such that:aux(3) =< V_n
s(6) =< aux(3)
s(9) =< s(6)*aux(3)

  with precondition: [V_n>=3] 


#### Cost of chains of eval_ax_start(V_i,V_j,V_n,B):
* Chain [18]: 1*s(10)+0
  Such that:s(10) =< 2

  with precondition: [V_n=2] 

* Chain [17]: 0
  with precondition: [1>=V_n] 

* Chain [16]: 2*s(12)+1*s(13)+0
  Such that:s(11) =< V_n
s(12) =< s(11)
s(13) =< s(12)*s(11)

  with precondition: [V_n>=3] 


Closed-form bounds of eval_ax_start(V_i,V_j,V_n,B): 
-------------------------------------
* Chain [18] with precondition: [V_n=2] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [17] with precondition: [1>=V_n] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [16] with precondition: [V_n>=3] 
    - Upper bound: 2*V_n+V_n*V_n 
    - Complexity: n^2 

### Maximum cost of eval_ax_start(V_i,V_j,V_n,B): max([2,nat(V_n)*nat(V_n)+nat(V_n)*2]) 
Asymptotic class: n^2 
* Total analysis performed in 43 ms.

