WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_Loopus2014_ex2_5/6,eval_Loopus2014_ex2_6/7,eval_Loopus2014_ex2_bb3_in/6,eval_Loopus2014_ex2_bb4_in/6,eval_Loopus2014_ex2_bb5_in/7]
1. recursive  : [eval_Loopus2014_ex2_1/4,eval_Loopus2014_ex2_2/5,eval_Loopus2014_ex2__critedge_in/3,eval_Loopus2014_ex2_bb1_in/3,eval_Loopus2014_ex2_bb2_in/5,eval_Loopus2014_ex2_bb3_in_loop_cont/4]
2. non_recursive  : [eval_Loopus2014_ex2_stop/1]
3. non_recursive  : [eval_Loopus2014_ex2_bb6_in/1]
4. non_recursive  : [eval_Loopus2014_ex2__critedge_in_loop_cont/2]
5. non_recursive  : [eval_Loopus2014_ex2_bb0_in/2]
6. non_recursive  : [eval_Loopus2014_ex2_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_Loopus2014_ex2_bb3_in/6
1. SCC is partially evaluated into eval_Loopus2014_ex2__critedge_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_Loopus2014_ex2_bb0_in/2
6. SCC is partially evaluated into eval_Loopus2014_ex2_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_Loopus2014_ex2_bb3_in/6 
* CE 6 is refined into CE [9] 
* CE 8 is refined into CE [10] 
* CE 7 is refined into CE [11] 


### Cost equations --> "Loop" of eval_Loopus2014_ex2_bb3_in/6 
* CEs [11] --> Loop 9 
* CEs [9] --> Loop 10 
* CEs [10] --> Loop 11 

### Ranking functions of CR eval_Loopus2014_ex2_bb3_in(V_i_0,V_n_0,V_2,V_n_1,B,C) 
* RF of phase [9]: [V_n_1]

#### Partial ranking functions of CR eval_Loopus2014_ex2_bb3_in(V_i_0,V_n_0,V_2,V_n_1,B,C) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V_n_1


### Specialization of cost equations eval_Loopus2014_ex2__critedge_in/3 
* CE 5 is refined into CE [12] 
* CE 4 is refined into CE [13,14,15,16] 
* CE 3 is refined into CE [17] 


### Cost equations --> "Loop" of eval_Loopus2014_ex2__critedge_in/3 
* CEs [16] --> Loop 12 
* CEs [15] --> Loop 13 
* CEs [14] --> Loop 14 
* CEs [17] --> Loop 15 
* CEs [13] --> Loop 16 
* CEs [12] --> Loop 17 

### Ranking functions of CR eval_Loopus2014_ex2__critedge_in(V_i_0,V_n_0,B) 
* RF of phase [12,13,14,15,16]: [V_i_0]

#### Partial ranking functions of CR eval_Loopus2014_ex2__critedge_in(V_i_0,V_n_0,B) 
* Partial RF of phase [12,13,14,15,16]:
  - RF of loop [12:1]:
    V_n_0-1 depends on loops [15:1] 
  - RF of loop [12:1,13:1,14:1,15:1,16:1]:
    V_i_0
  - RF of loop [16:1]:
    V_n_0 depends on loops [15:1] 


### Specialization of cost equations eval_Loopus2014_ex2_bb0_in/2 
* CE 2 is refined into CE [18,19] 


### Cost equations --> "Loop" of eval_Loopus2014_ex2_bb0_in/2 
* CEs [19] --> Loop 18 
* CEs [18] --> Loop 19 

### Ranking functions of CR eval_Loopus2014_ex2_bb0_in(V_m,B) 

#### Partial ranking functions of CR eval_Loopus2014_ex2_bb0_in(V_m,B) 


### Specialization of cost equations eval_Loopus2014_ex2_start/2 
* CE 1 is refined into CE [20,21] 


### Cost equations --> "Loop" of eval_Loopus2014_ex2_start/2 
* CEs [21] --> Loop 20 
* CEs [20] --> Loop 21 

### Ranking functions of CR eval_Loopus2014_ex2_start(V_m,B) 

#### Partial ranking functions of CR eval_Loopus2014_ex2_start(V_m,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_Loopus2014_ex2_bb3_in(V_i_0,V_n_0,V_2,V_n_1,B,C):
* Chain [[9],11]: 1*it(9)+0
  Such that:it(9) =< V_n_1

  with precondition: [B=2,C=0,0>=V_2,V_i_0>=1,V_n_1>=1,V_n_0>=V_n_1] 

* Chain [[9],10]: 1*it(9)+0
  Such that:it(9) =< V_n_1-C

  with precondition: [B=2,0>=V_2,V_i_0>=1,C>=1,V_n_0>=V_n_1,V_n_1>=C+1] 

* Chain [11]: 0
  with precondition: [B=2,V_n_1=C,0>=V_2,0>=V_n_1,V_i_0>=1,V_n_0>=V_n_1] 

* Chain [10]: 0
  with precondition: [B=2,V_n_1=C,0>=V_2,V_i_0>=1,V_n_1>=1,V_n_0>=V_n_1] 


#### Cost of chains of eval_Loopus2014_ex2__critedge_in(V_i_0,V_n_0,B):
* Chain [[12,13,14,15,16],17]: 2*it(12)+3*it(13)+1*s(5)+1*s(6)+0
  Such that:aux(5) =< V_i_0+V_n_0
aux(15) =< V_i_0
aux(16) =< V_n_0
it(12) =< aux(15)
it(13) =< aux(15)
aux(10) =< aux(5)+1
s(6) =< it(13)+aux(16)
it(12) =< it(13)+aux(16)
s(5) =< it(13)+aux(16)
s(6) =< it(12)*aux(10)
s(5) =< it(12)*aux(5)

  with precondition: [B=3,V_i_0>=1,V_n_0>=0] 

* Chain [17]: 0
  with precondition: [B=3,0>=V_i_0,V_n_0>=0] 


#### Cost of chains of eval_Loopus2014_ex2_bb0_in(V_m,B):
* Chain [19]: 0
  with precondition: [0>=V_m] 

* Chain [18]: 2*s(10)+3*s(11)+1*s(13)+1*s(14)+0
  Such that:aux(17) =< V_m
s(10) =< aux(17)
s(11) =< aux(17)
s(12) =< aux(17)+1
s(13) =< s(11)
s(10) =< s(11)
s(14) =< s(11)
s(13) =< s(10)*s(12)
s(14) =< s(10)*aux(17)

  with precondition: [V_m>=1] 


#### Cost of chains of eval_Loopus2014_ex2_start(V_m,B):
* Chain [21]: 0
  with precondition: [0>=V_m] 

* Chain [20]: 2*s(16)+3*s(17)+1*s(19)+1*s(20)+0
  Such that:s(15) =< V_m
s(16) =< s(15)
s(17) =< s(15)
s(18) =< s(15)+1
s(19) =< s(17)
s(16) =< s(17)
s(20) =< s(17)
s(19) =< s(16)*s(18)
s(20) =< s(16)*s(15)

  with precondition: [V_m>=1] 


Closed-form bounds of eval_Loopus2014_ex2_start(V_m,B): 
-------------------------------------
* Chain [21] with precondition: [0>=V_m] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [20] with precondition: [V_m>=1] 
    - Upper bound: 7*V_m 
    - Complexity: n 

### Maximum cost of eval_Loopus2014_ex2_start(V_m,B): nat(V_m)*7 
Asymptotic class: n 
* Total analysis performed in 86 ms.

