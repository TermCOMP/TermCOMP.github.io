YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/k6Bf3.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) Strip Symbols Proof [SOUND, 0 ms]
(2) QTRS
(3) QTRS Reverse [EQUIVALENT, 0 ms]
(4) QTRS
(5) RFCMatchBoundsTRSProof [EQUIVALENT, 0 ms]
(6) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(b(a(b(a(b(a(a(b(a(b(a(x1)))))))))))) -> a(b(a(b(a(a(b(a(b(a(b(a(a(b(x1))))))))))))))

Q is empty.

----------------------------------------

(1) Strip Symbols Proof (SOUND)
We were given the following TRS:

   a(b(a(b(a(b(a(a(b(a(b(a(x1)))))))))))) -> a(b(a(b(a(a(b(a(b(a(b(a(a(b(x1))))))))))))))

By stripping symbols from the only rule of the system, we obtained the following TRS [ENDRULLIS]: 

   b(a(a(b(a(b(a(x1))))))) -> a(b(a(b(a(b(a(a(b(x1)))))))))

----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   b(a(a(b(a(b(a(x1))))))) -> a(b(a(b(a(b(a(a(b(x1)))))))))

Q is empty.

----------------------------------------

(3) QTRS Reverse (EQUIVALENT)
We applied the QTRS Reverse Processor [REVERSE].
----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(b(a(b(a(a(b(x1))))))) -> b(a(a(b(a(b(a(b(a(x1)))))))))

Q is empty.

----------------------------------------

(5) RFCMatchBoundsTRSProof (EQUIVALENT)
Termination of the TRS R could be shown with a Match Bound [MATCHBOUNDS1,MATCHBOUNDS2] of 1. This implies Q-termination of R.
The following rules were used to construct the certificate:

   a(b(a(b(a(a(b(x1))))))) -> b(a(a(b(a(b(a(b(a(x1)))))))))

The certificate found is represented by the following graph.
The certificate consists of the following enumerated nodes:
227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244

Node 227 is start node and node 228 is final node.

Those nodes are connected through the following edges:

* 227 to 229 labelled b_1(0)* 228 to 228 labelled #_1(0)* 229 to 230 labelled a_1(0)* 230 to 231 labelled a_1(0)* 231 to 232 labelled b_1(0)* 232 to 233 labelled a_1(0)* 232 to 237 labelled b_1(1)* 233 to 234 labelled b_1(0)* 234 to 235 labelled a_1(0)* 234 to 237 labelled b_1(1)* 235 to 236 labelled b_1(0)* 236 to 228 labelled a_1(0)* 236 to 237 labelled b_1(1)* 237 to 238 labelled a_1(1)* 238 to 239 labelled a_1(1)* 239 to 240 labelled b_1(1)* 240 to 241 labelled a_1(1)* 240 to 237 labelled b_1(1)* 241 to 242 labelled b_1(1)* 242 to 243 labelled a_1(1)* 242 to 237 labelled b_1(1)* 243 to 244 labelled b_1(1)* 244 to 228 labelled a_1(1)* 244 to 237 labelled b_1(1)


----------------------------------------

(6)
YES
