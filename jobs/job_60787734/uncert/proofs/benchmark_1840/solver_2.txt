YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/ksbsx.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRS Reverse [EQUIVALENT, 0 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 24 ms]
(4) QTRS
(5) Overlay + Local Confluence [EQUIVALENT, 0 ms]
(6) QTRS
(7) DependencyPairsProof [EQUIVALENT, 0 ms]
(8) QDP
(9) DependencyGraphProof [EQUIVALENT, 0 ms]
(10) QDP
(11) QDPOrderProof [EQUIVALENT, 7 ms]
(12) QDP
(13) PisEmptyProof [EQUIVALENT, 0 ms]
(14) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(s(x1)) -> s(s(f(p(s(x1)))))
   f(0(x1)) -> 0(x1)
   p(s(x1)) -> x1

Q is empty.

----------------------------------------

(1) QTRS Reverse (EQUIVALENT)
We applied the QTRS Reverse Processor [REVERSE].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   s(f(x1)) -> s(p(f(s(s(x1)))))
   0(f(x1)) -> 0(x1)
   s(p(x1)) -> x1

Q is empty.

----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(0(x_1)) = x_1
   POL(f(x_1)) = 1 + x_1
   POL(p(x_1)) = x_1
   POL(s(x_1)) = x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   0(f(x1)) -> 0(x1)




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   s(f(x1)) -> s(p(f(s(s(x1)))))
   s(p(x1)) -> x1

Q is empty.

----------------------------------------

(5) Overlay + Local Confluence (EQUIVALENT)
The TRS is overlay and locally confluent. By [NOC] we can switch to innermost.
----------------------------------------

(6)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   s(f(x1)) -> s(p(f(s(s(x1)))))
   s(p(x1)) -> x1

The set Q consists of the following terms:

   s(f(x0))
   s(p(x0))


----------------------------------------

(7) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   S(f(x1)) -> S(p(f(s(s(x1)))))
   S(f(x1)) -> S(s(x1))
   S(f(x1)) -> S(x1)

The TRS R consists of the following rules:

   s(f(x1)) -> s(p(f(s(s(x1)))))
   s(p(x1)) -> x1

The set Q consists of the following terms:

   s(f(x0))
   s(p(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   S(f(x1)) -> S(x1)
   S(f(x1)) -> S(s(x1))

The TRS R consists of the following rules:

   s(f(x1)) -> s(p(f(s(s(x1)))))
   s(p(x1)) -> x1

The set Q consists of the following terms:

   s(f(x0))
   s(p(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   S(f(x1)) -> S(x1)
   S(f(x1)) -> S(s(x1))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(S(x_1)) = x_1
   POL(f(x_1)) = 1 + x_1
   POL(p(x_1)) = x_1
   POL(s(x_1)) = x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   s(f(x1)) -> s(p(f(s(s(x1)))))
   s(p(x1)) -> x1


----------------------------------------

(12)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   s(f(x1)) -> s(p(f(s(s(x1)))))
   s(p(x1)) -> x1

The set Q consists of the following terms:

   s(f(x0))
   s(p(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(14)
YES
