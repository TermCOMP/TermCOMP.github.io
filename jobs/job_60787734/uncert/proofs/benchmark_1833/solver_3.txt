YES

Problem 1: 

(VAR vu95NonEmpty x1)
(RULES
A(A(A(A(x1)))) -> a(a(a(x1)))
A(A(A(b(x1)))) -> a(a(a(C(x1))))
A(C(x1)) -> b(x1)
A(a(x1)) -> x1
A(c(c(c(x1)))) -> b(C(C(C(x1))))
B(A(x1)) -> c(x1)
B(B(B(B(x1)))) -> b(b(b(x1)))
B(B(B(c(x1)))) -> b(b(b(A(x1))))
B(a(a(a(x1)))) -> c(A(A(A(x1))))
B(b(x1)) -> x1
C(B(x1)) -> a(x1)
C(C(C(C(x1)))) -> c(c(c(x1)))
C(C(C(a(x1)))) -> c(c(c(B(x1))))
C(b(b(b(x1)))) -> a(B(B(B(x1))))
C(c(x1)) -> x1
a(A(x1)) -> x1
a(a(a(a(x1)))) -> A(A(A(x1)))
a(b(x1)) -> C(x1)
b(B(x1)) -> x1
b(b(b(b(x1)))) -> B(B(B(x1)))
b(c(x1)) -> A(x1)
c(C(x1)) -> x1
c(a(x1)) -> B(x1)
c(c(c(c(x1)))) -> C(C(C(x1)))
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 ASharp(A(A(A(x1)))) -> aSharp(a(a(x1)))
 ASharp(A(A(A(x1)))) -> aSharp(a(x1))
 ASharp(A(A(A(x1)))) -> aSharp(x1)
 ASharp(A(A(b(x1)))) -> CSharp(x1)
 ASharp(A(A(b(x1)))) -> aSharp(C(x1))
 ASharp(A(A(b(x1)))) -> aSharp(a(C(x1)))
 ASharp(A(A(b(x1)))) -> aSharp(a(a(C(x1))))
 ASharp(C(x1)) -> bSharp(x1)
 ASharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 ASharp(c(c(c(x1)))) -> CSharp(C(x1))
 ASharp(c(c(c(x1)))) -> CSharp(x1)
 ASharp(c(c(c(x1)))) -> bSharp(C(C(C(x1))))
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> ASharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 BSharp(a(a(a(x1)))) -> ASharp(A(x1))
 BSharp(a(a(a(x1)))) -> ASharp(x1)
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 aSharp(a(a(a(x1)))) -> ASharp(A(x1))
 aSharp(a(a(a(x1)))) -> ASharp(x1)
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 bSharp(c(x1)) -> ASharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))

Problem 1: 

SCC Processor:
-> Pairs:
 ASharp(A(A(A(x1)))) -> aSharp(a(a(x1)))
 ASharp(A(A(A(x1)))) -> aSharp(a(x1))
 ASharp(A(A(A(x1)))) -> aSharp(x1)
 ASharp(A(A(b(x1)))) -> CSharp(x1)
 ASharp(A(A(b(x1)))) -> aSharp(C(x1))
 ASharp(A(A(b(x1)))) -> aSharp(a(C(x1)))
 ASharp(A(A(b(x1)))) -> aSharp(a(a(C(x1))))
 ASharp(C(x1)) -> bSharp(x1)
 ASharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 ASharp(c(c(c(x1)))) -> CSharp(C(x1))
 ASharp(c(c(c(x1)))) -> CSharp(x1)
 ASharp(c(c(c(x1)))) -> bSharp(C(C(C(x1))))
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> ASharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 BSharp(a(a(a(x1)))) -> ASharp(A(x1))
 BSharp(a(a(a(x1)))) -> ASharp(x1)
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 aSharp(a(a(a(x1)))) -> ASharp(A(x1))
 aSharp(a(a(a(x1)))) -> ASharp(x1)
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 bSharp(c(x1)) -> ASharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ASharp(A(A(A(x1)))) -> aSharp(a(a(x1)))
 ASharp(A(A(A(x1)))) -> aSharp(a(x1))
 ASharp(A(A(A(x1)))) -> aSharp(x1)
 ASharp(A(A(b(x1)))) -> CSharp(x1)
 ASharp(A(A(b(x1)))) -> aSharp(C(x1))
 ASharp(A(A(b(x1)))) -> aSharp(a(C(x1)))
 ASharp(A(A(b(x1)))) -> aSharp(a(a(C(x1))))
 ASharp(C(x1)) -> bSharp(x1)
 ASharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 ASharp(c(c(c(x1)))) -> CSharp(C(x1))
 ASharp(c(c(c(x1)))) -> CSharp(x1)
 ASharp(c(c(c(x1)))) -> bSharp(C(C(C(x1))))
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> ASharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 BSharp(a(a(a(x1)))) -> ASharp(A(x1))
 BSharp(a(a(a(x1)))) -> ASharp(x1)
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 aSharp(a(a(a(x1)))) -> ASharp(A(x1))
 aSharp(a(a(a(x1)))) -> ASharp(x1)
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 bSharp(c(x1)) -> ASharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
->->-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 ASharp(A(A(A(x1)))) -> aSharp(a(a(x1)))
 ASharp(A(A(A(x1)))) -> aSharp(a(x1))
 ASharp(A(A(A(x1)))) -> aSharp(x1)
 ASharp(A(A(b(x1)))) -> CSharp(x1)
 ASharp(A(A(b(x1)))) -> aSharp(C(x1))
 ASharp(A(A(b(x1)))) -> aSharp(a(C(x1)))
 ASharp(A(A(b(x1)))) -> aSharp(a(a(C(x1))))
 ASharp(C(x1)) -> bSharp(x1)
 ASharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 ASharp(c(c(c(x1)))) -> CSharp(C(x1))
 ASharp(c(c(c(x1)))) -> CSharp(x1)
 ASharp(c(c(c(x1)))) -> bSharp(C(C(C(x1))))
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> ASharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 BSharp(a(a(a(x1)))) -> ASharp(A(x1))
 BSharp(a(a(a(x1)))) -> ASharp(x1)
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 aSharp(a(a(a(x1)))) -> ASharp(A(x1))
 aSharp(a(a(a(x1)))) -> ASharp(x1)
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 bSharp(c(x1)) -> ASharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
-> Usable rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[A](X) = 2.X + 2
[B](X) = 2.X + 2
[C](X) = 2.X + 2
[a](X) = 2.X + 2
[b](X) = 2.X + 2
[c](X) = 2.X + 2
[fSNonEmpty] = 0
[ASharp](X) = 2.X + 2
[BSharp](X) = 2.X + 2
[CSharp](X) = 2.X + 2
[aSharp](X) = 2.X + 1
[bSharp](X) = 2.X + 2
[cSharp](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 ASharp(A(A(A(x1)))) -> aSharp(a(x1))
 ASharp(A(A(A(x1)))) -> aSharp(x1)
 ASharp(A(A(b(x1)))) -> CSharp(x1)
 ASharp(A(A(b(x1)))) -> aSharp(C(x1))
 ASharp(A(A(b(x1)))) -> aSharp(a(C(x1)))
 ASharp(A(A(b(x1)))) -> aSharp(a(a(C(x1))))
 ASharp(C(x1)) -> bSharp(x1)
 ASharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 ASharp(c(c(c(x1)))) -> CSharp(C(x1))
 ASharp(c(c(c(x1)))) -> CSharp(x1)
 ASharp(c(c(c(x1)))) -> bSharp(C(C(C(x1))))
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> ASharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 BSharp(a(a(a(x1)))) -> ASharp(A(x1))
 BSharp(a(a(a(x1)))) -> ASharp(x1)
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 aSharp(a(a(a(x1)))) -> ASharp(A(x1))
 aSharp(a(a(a(x1)))) -> ASharp(x1)
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 bSharp(c(x1)) -> ASharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ASharp(A(A(A(x1)))) -> aSharp(a(x1))
 ASharp(A(A(A(x1)))) -> aSharp(x1)
 ASharp(A(A(b(x1)))) -> CSharp(x1)
 ASharp(A(A(b(x1)))) -> aSharp(C(x1))
 ASharp(A(A(b(x1)))) -> aSharp(a(C(x1)))
 ASharp(A(A(b(x1)))) -> aSharp(a(a(C(x1))))
 ASharp(C(x1)) -> bSharp(x1)
 ASharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 ASharp(c(c(c(x1)))) -> CSharp(C(x1))
 ASharp(c(c(c(x1)))) -> CSharp(x1)
 ASharp(c(c(c(x1)))) -> bSharp(C(C(C(x1))))
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> ASharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 BSharp(a(a(a(x1)))) -> ASharp(A(x1))
 BSharp(a(a(a(x1)))) -> ASharp(x1)
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 aSharp(a(a(a(x1)))) -> ASharp(A(x1))
 aSharp(a(a(a(x1)))) -> ASharp(x1)
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 bSharp(c(x1)) -> ASharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
->->-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 ASharp(A(A(A(x1)))) -> aSharp(a(x1))
 ASharp(A(A(A(x1)))) -> aSharp(x1)
 ASharp(A(A(b(x1)))) -> CSharp(x1)
 ASharp(A(A(b(x1)))) -> aSharp(C(x1))
 ASharp(A(A(b(x1)))) -> aSharp(a(C(x1)))
 ASharp(A(A(b(x1)))) -> aSharp(a(a(C(x1))))
 ASharp(C(x1)) -> bSharp(x1)
 ASharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 ASharp(c(c(c(x1)))) -> CSharp(C(x1))
 ASharp(c(c(c(x1)))) -> CSharp(x1)
 ASharp(c(c(c(x1)))) -> bSharp(C(C(C(x1))))
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> ASharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 BSharp(a(a(a(x1)))) -> ASharp(A(x1))
 BSharp(a(a(a(x1)))) -> ASharp(x1)
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 aSharp(a(a(a(x1)))) -> ASharp(A(x1))
 aSharp(a(a(a(x1)))) -> ASharp(x1)
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 bSharp(c(x1)) -> ASharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
-> Usable rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[A](X) = 2.X + 2
[B](X) = 2.X + 2
[C](X) = 2.X + 2
[a](X) = 2.X + 2
[b](X) = 2.X + 2
[c](X) = 2.X + 2
[fSNonEmpty] = 0
[ASharp](X) = 2.X + 2
[BSharp](X) = 2.X + 2
[CSharp](X) = X + 2
[aSharp](X) = X + 2
[bSharp](X) = 2.X + 2
[cSharp](X) = X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 ASharp(A(A(A(x1)))) -> aSharp(x1)
 ASharp(A(A(b(x1)))) -> CSharp(x1)
 ASharp(A(A(b(x1)))) -> aSharp(C(x1))
 ASharp(A(A(b(x1)))) -> aSharp(a(C(x1)))
 ASharp(A(A(b(x1)))) -> aSharp(a(a(C(x1))))
 ASharp(C(x1)) -> bSharp(x1)
 ASharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 ASharp(c(c(c(x1)))) -> CSharp(C(x1))
 ASharp(c(c(c(x1)))) -> CSharp(x1)
 ASharp(c(c(c(x1)))) -> bSharp(C(C(C(x1))))
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> ASharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 BSharp(a(a(a(x1)))) -> ASharp(A(x1))
 BSharp(a(a(a(x1)))) -> ASharp(x1)
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 aSharp(a(a(a(x1)))) -> ASharp(A(x1))
 aSharp(a(a(a(x1)))) -> ASharp(x1)
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 bSharp(c(x1)) -> ASharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ASharp(A(A(A(x1)))) -> aSharp(x1)
 ASharp(A(A(b(x1)))) -> CSharp(x1)
 ASharp(A(A(b(x1)))) -> aSharp(C(x1))
 ASharp(A(A(b(x1)))) -> aSharp(a(C(x1)))
 ASharp(A(A(b(x1)))) -> aSharp(a(a(C(x1))))
 ASharp(C(x1)) -> bSharp(x1)
 ASharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 ASharp(c(c(c(x1)))) -> CSharp(C(x1))
 ASharp(c(c(c(x1)))) -> CSharp(x1)
 ASharp(c(c(c(x1)))) -> bSharp(C(C(C(x1))))
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> ASharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 BSharp(a(a(a(x1)))) -> ASharp(A(x1))
 BSharp(a(a(a(x1)))) -> ASharp(x1)
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 aSharp(a(a(a(x1)))) -> ASharp(A(x1))
 aSharp(a(a(a(x1)))) -> ASharp(x1)
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 bSharp(c(x1)) -> ASharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
->->-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 ASharp(A(A(A(x1)))) -> aSharp(x1)
 ASharp(A(A(b(x1)))) -> CSharp(x1)
 ASharp(A(A(b(x1)))) -> aSharp(C(x1))
 ASharp(A(A(b(x1)))) -> aSharp(a(C(x1)))
 ASharp(A(A(b(x1)))) -> aSharp(a(a(C(x1))))
 ASharp(C(x1)) -> bSharp(x1)
 ASharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 ASharp(c(c(c(x1)))) -> CSharp(C(x1))
 ASharp(c(c(c(x1)))) -> CSharp(x1)
 ASharp(c(c(c(x1)))) -> bSharp(C(C(C(x1))))
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> ASharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 BSharp(a(a(a(x1)))) -> ASharp(A(x1))
 BSharp(a(a(a(x1)))) -> ASharp(x1)
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 aSharp(a(a(a(x1)))) -> ASharp(A(x1))
 aSharp(a(a(a(x1)))) -> ASharp(x1)
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 bSharp(c(x1)) -> ASharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
-> Usable rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[A](X) = 2.X + 2
[B](X) = 2.X + 2
[C](X) = 2.X + 2
[a](X) = 2.X + 2
[b](X) = 2.X + 2
[c](X) = 2.X + 2
[fSNonEmpty] = 0
[ASharp](X) = 2.X
[BSharp](X) = 2.X + 2
[CSharp](X) = 2.X
[aSharp](X) = X + 1
[bSharp](X) = 2.X
[cSharp](X) = 2.X

Problem 1: 

SCC Processor:
-> Pairs:
 ASharp(A(A(b(x1)))) -> CSharp(x1)
 ASharp(A(A(b(x1)))) -> aSharp(C(x1))
 ASharp(A(A(b(x1)))) -> aSharp(a(C(x1)))
 ASharp(A(A(b(x1)))) -> aSharp(a(a(C(x1))))
 ASharp(C(x1)) -> bSharp(x1)
 ASharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 ASharp(c(c(c(x1)))) -> CSharp(C(x1))
 ASharp(c(c(c(x1)))) -> CSharp(x1)
 ASharp(c(c(c(x1)))) -> bSharp(C(C(C(x1))))
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> ASharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 BSharp(a(a(a(x1)))) -> ASharp(A(x1))
 BSharp(a(a(a(x1)))) -> ASharp(x1)
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 aSharp(a(a(a(x1)))) -> ASharp(A(x1))
 aSharp(a(a(a(x1)))) -> ASharp(x1)
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 bSharp(c(x1)) -> ASharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ASharp(A(A(b(x1)))) -> CSharp(x1)
 ASharp(A(A(b(x1)))) -> aSharp(C(x1))
 ASharp(A(A(b(x1)))) -> aSharp(a(C(x1)))
 ASharp(A(A(b(x1)))) -> aSharp(a(a(C(x1))))
 ASharp(C(x1)) -> bSharp(x1)
 ASharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 ASharp(c(c(c(x1)))) -> CSharp(C(x1))
 ASharp(c(c(c(x1)))) -> CSharp(x1)
 ASharp(c(c(c(x1)))) -> bSharp(C(C(C(x1))))
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> ASharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 BSharp(a(a(a(x1)))) -> ASharp(A(x1))
 BSharp(a(a(a(x1)))) -> ASharp(x1)
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 aSharp(a(a(a(x1)))) -> ASharp(A(x1))
 aSharp(a(a(a(x1)))) -> ASharp(x1)
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 bSharp(c(x1)) -> ASharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
->->-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 ASharp(A(A(b(x1)))) -> CSharp(x1)
 ASharp(A(A(b(x1)))) -> aSharp(C(x1))
 ASharp(A(A(b(x1)))) -> aSharp(a(C(x1)))
 ASharp(A(A(b(x1)))) -> aSharp(a(a(C(x1))))
 ASharp(C(x1)) -> bSharp(x1)
 ASharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 ASharp(c(c(c(x1)))) -> CSharp(C(x1))
 ASharp(c(c(c(x1)))) -> CSharp(x1)
 ASharp(c(c(c(x1)))) -> bSharp(C(C(C(x1))))
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> ASharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 BSharp(a(a(a(x1)))) -> ASharp(A(x1))
 BSharp(a(a(a(x1)))) -> ASharp(x1)
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 aSharp(a(a(a(x1)))) -> ASharp(A(x1))
 aSharp(a(a(a(x1)))) -> ASharp(x1)
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 bSharp(c(x1)) -> ASharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
-> Usable rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[A](X) = 2.X + 2
[B](X) = 2.X + 2
[C](X) = 2.X + 2
[a](X) = 2.X + 2
[b](X) = 2.X + 2
[c](X) = 2.X + 2
[fSNonEmpty] = 0
[ASharp](X) = 2.X + 2
[BSharp](X) = 2.X + 2
[CSharp](X) = 2.X + 2
[aSharp](X) = 2.X + 2
[bSharp](X) = X + 1
[cSharp](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 ASharp(A(A(b(x1)))) -> aSharp(C(x1))
 ASharp(A(A(b(x1)))) -> aSharp(a(C(x1)))
 ASharp(A(A(b(x1)))) -> aSharp(a(a(C(x1))))
 ASharp(C(x1)) -> bSharp(x1)
 ASharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 ASharp(c(c(c(x1)))) -> CSharp(C(x1))
 ASharp(c(c(c(x1)))) -> CSharp(x1)
 ASharp(c(c(c(x1)))) -> bSharp(C(C(C(x1))))
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> ASharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 BSharp(a(a(a(x1)))) -> ASharp(A(x1))
 BSharp(a(a(a(x1)))) -> ASharp(x1)
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 aSharp(a(a(a(x1)))) -> ASharp(A(x1))
 aSharp(a(a(a(x1)))) -> ASharp(x1)
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 bSharp(c(x1)) -> ASharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ASharp(A(A(b(x1)))) -> aSharp(C(x1))
 ASharp(A(A(b(x1)))) -> aSharp(a(C(x1)))
 ASharp(A(A(b(x1)))) -> aSharp(a(a(C(x1))))
 ASharp(C(x1)) -> bSharp(x1)
 ASharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 ASharp(c(c(c(x1)))) -> CSharp(C(x1))
 ASharp(c(c(c(x1)))) -> CSharp(x1)
 ASharp(c(c(c(x1)))) -> bSharp(C(C(C(x1))))
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> ASharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 BSharp(a(a(a(x1)))) -> ASharp(A(x1))
 BSharp(a(a(a(x1)))) -> ASharp(x1)
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 aSharp(a(a(a(x1)))) -> ASharp(A(x1))
 aSharp(a(a(a(x1)))) -> ASharp(x1)
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 bSharp(c(x1)) -> ASharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
->->-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 ASharp(A(A(b(x1)))) -> aSharp(C(x1))
 ASharp(A(A(b(x1)))) -> aSharp(a(C(x1)))
 ASharp(A(A(b(x1)))) -> aSharp(a(a(C(x1))))
 ASharp(C(x1)) -> bSharp(x1)
 ASharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 ASharp(c(c(c(x1)))) -> CSharp(C(x1))
 ASharp(c(c(c(x1)))) -> CSharp(x1)
 ASharp(c(c(c(x1)))) -> bSharp(C(C(C(x1))))
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> ASharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 BSharp(a(a(a(x1)))) -> ASharp(A(x1))
 BSharp(a(a(a(x1)))) -> ASharp(x1)
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 aSharp(a(a(a(x1)))) -> ASharp(A(x1))
 aSharp(a(a(a(x1)))) -> ASharp(x1)
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 bSharp(c(x1)) -> ASharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
-> Usable rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[A](X) = 2.X + 2
[B](X) = 2.X + 2
[C](X) = 2.X + 2
[a](X) = 2.X + 2
[b](X) = 2.X + 2
[c](X) = 2.X + 2
[fSNonEmpty] = 0
[ASharp](X) = 2.X + 2
[BSharp](X) = 2.X + 2
[CSharp](X) = 2.X
[aSharp](X) = X
[bSharp](X) = 2.X + 2
[cSharp](X) = 2.X

Problem 1: 

SCC Processor:
-> Pairs:
 ASharp(A(A(b(x1)))) -> aSharp(a(C(x1)))
 ASharp(A(A(b(x1)))) -> aSharp(a(a(C(x1))))
 ASharp(C(x1)) -> bSharp(x1)
 ASharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 ASharp(c(c(c(x1)))) -> CSharp(C(x1))
 ASharp(c(c(c(x1)))) -> CSharp(x1)
 ASharp(c(c(c(x1)))) -> bSharp(C(C(C(x1))))
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> ASharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 BSharp(a(a(a(x1)))) -> ASharp(A(x1))
 BSharp(a(a(a(x1)))) -> ASharp(x1)
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 aSharp(a(a(a(x1)))) -> ASharp(A(x1))
 aSharp(a(a(a(x1)))) -> ASharp(x1)
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 bSharp(c(x1)) -> ASharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ASharp(A(A(b(x1)))) -> aSharp(a(C(x1)))
 ASharp(A(A(b(x1)))) -> aSharp(a(a(C(x1))))
 ASharp(C(x1)) -> bSharp(x1)
 ASharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 ASharp(c(c(c(x1)))) -> CSharp(C(x1))
 ASharp(c(c(c(x1)))) -> CSharp(x1)
 ASharp(c(c(c(x1)))) -> bSharp(C(C(C(x1))))
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> ASharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 BSharp(a(a(a(x1)))) -> ASharp(A(x1))
 BSharp(a(a(a(x1)))) -> ASharp(x1)
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 aSharp(a(a(a(x1)))) -> ASharp(A(x1))
 aSharp(a(a(a(x1)))) -> ASharp(x1)
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 bSharp(c(x1)) -> ASharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
->->-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 ASharp(A(A(b(x1)))) -> aSharp(a(C(x1)))
 ASharp(A(A(b(x1)))) -> aSharp(a(a(C(x1))))
 ASharp(C(x1)) -> bSharp(x1)
 ASharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 ASharp(c(c(c(x1)))) -> CSharp(C(x1))
 ASharp(c(c(c(x1)))) -> CSharp(x1)
 ASharp(c(c(c(x1)))) -> bSharp(C(C(C(x1))))
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> ASharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 BSharp(a(a(a(x1)))) -> ASharp(A(x1))
 BSharp(a(a(a(x1)))) -> ASharp(x1)
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 aSharp(a(a(a(x1)))) -> ASharp(A(x1))
 aSharp(a(a(a(x1)))) -> ASharp(x1)
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 bSharp(c(x1)) -> ASharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
-> Usable rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[A](X) = 2.X + 2
[B](X) = 2.X + 2
[C](X) = 2.X + 2
[a](X) = 2.X + 2
[b](X) = 2.X + 2
[c](X) = 2.X + 2
[fSNonEmpty] = 0
[ASharp](X) = 2.X
[BSharp](X) = 2.X + 2
[CSharp](X) = 2.X + 2
[aSharp](X) = 2.X
[bSharp](X) = 2.X
[cSharp](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 ASharp(A(A(b(x1)))) -> aSharp(a(a(C(x1))))
 ASharp(C(x1)) -> bSharp(x1)
 ASharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 ASharp(c(c(c(x1)))) -> CSharp(C(x1))
 ASharp(c(c(c(x1)))) -> CSharp(x1)
 ASharp(c(c(c(x1)))) -> bSharp(C(C(C(x1))))
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> ASharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 BSharp(a(a(a(x1)))) -> ASharp(A(x1))
 BSharp(a(a(a(x1)))) -> ASharp(x1)
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 aSharp(a(a(a(x1)))) -> ASharp(A(x1))
 aSharp(a(a(a(x1)))) -> ASharp(x1)
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 bSharp(c(x1)) -> ASharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ASharp(A(A(b(x1)))) -> aSharp(a(a(C(x1))))
 ASharp(C(x1)) -> bSharp(x1)
 ASharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 ASharp(c(c(c(x1)))) -> CSharp(C(x1))
 ASharp(c(c(c(x1)))) -> CSharp(x1)
 ASharp(c(c(c(x1)))) -> bSharp(C(C(C(x1))))
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> ASharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 BSharp(a(a(a(x1)))) -> ASharp(A(x1))
 BSharp(a(a(a(x1)))) -> ASharp(x1)
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 aSharp(a(a(a(x1)))) -> ASharp(A(x1))
 aSharp(a(a(a(x1)))) -> ASharp(x1)
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 bSharp(c(x1)) -> ASharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
->->-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 ASharp(A(A(b(x1)))) -> aSharp(a(a(C(x1))))
 ASharp(C(x1)) -> bSharp(x1)
 ASharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 ASharp(c(c(c(x1)))) -> CSharp(C(x1))
 ASharp(c(c(c(x1)))) -> CSharp(x1)
 ASharp(c(c(c(x1)))) -> bSharp(C(C(C(x1))))
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> ASharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 BSharp(a(a(a(x1)))) -> ASharp(A(x1))
 BSharp(a(a(a(x1)))) -> ASharp(x1)
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 aSharp(a(a(a(x1)))) -> ASharp(A(x1))
 aSharp(a(a(a(x1)))) -> ASharp(x1)
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 bSharp(c(x1)) -> ASharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
-> Usable rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[A](X) = 2.X + 2
[B](X) = 2.X + 2
[C](X) = 2.X + 2
[a](X) = 2.X + 2
[b](X) = 2.X + 2
[c](X) = 2.X + 2
[fSNonEmpty] = 0
[ASharp](X) = 2.X + 2
[BSharp](X) = 2.X + 2
[CSharp](X) = 2.X + 2
[aSharp](X) = 2.X + 1
[bSharp](X) = 2.X + 2
[cSharp](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 ASharp(C(x1)) -> bSharp(x1)
 ASharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 ASharp(c(c(c(x1)))) -> CSharp(C(x1))
 ASharp(c(c(c(x1)))) -> CSharp(x1)
 ASharp(c(c(c(x1)))) -> bSharp(C(C(C(x1))))
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> ASharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 BSharp(a(a(a(x1)))) -> ASharp(A(x1))
 BSharp(a(a(a(x1)))) -> ASharp(x1)
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 aSharp(a(a(a(x1)))) -> ASharp(A(x1))
 aSharp(a(a(a(x1)))) -> ASharp(x1)
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 bSharp(c(x1)) -> ASharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ASharp(C(x1)) -> bSharp(x1)
 ASharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 ASharp(c(c(c(x1)))) -> CSharp(C(x1))
 ASharp(c(c(c(x1)))) -> CSharp(x1)
 ASharp(c(c(c(x1)))) -> bSharp(C(C(C(x1))))
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> ASharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 BSharp(a(a(a(x1)))) -> ASharp(A(x1))
 BSharp(a(a(a(x1)))) -> ASharp(x1)
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 aSharp(a(a(a(x1)))) -> ASharp(A(x1))
 aSharp(a(a(a(x1)))) -> ASharp(x1)
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 bSharp(c(x1)) -> ASharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
->->-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 ASharp(C(x1)) -> bSharp(x1)
 ASharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 ASharp(c(c(c(x1)))) -> CSharp(C(x1))
 ASharp(c(c(c(x1)))) -> CSharp(x1)
 ASharp(c(c(c(x1)))) -> bSharp(C(C(C(x1))))
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> ASharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 BSharp(a(a(a(x1)))) -> ASharp(A(x1))
 BSharp(a(a(a(x1)))) -> ASharp(x1)
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 aSharp(a(a(a(x1)))) -> ASharp(A(x1))
 aSharp(a(a(a(x1)))) -> ASharp(x1)
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 bSharp(c(x1)) -> ASharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
-> Usable rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[A](X) = 2.X + 2
[B](X) = 2.X + 2
[C](X) = 2.X + 2
[a](X) = 2.X + 2
[b](X) = 2.X + 2
[c](X) = 2.X + 2
[fSNonEmpty] = 0
[ASharp](X) = 2.X + 2
[BSharp](X) = 2.X + 2
[CSharp](X) = 2.X + 2
[aSharp](X) = 2.X + 2
[bSharp](X) = 2.X + 2
[cSharp](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 ASharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 ASharp(c(c(c(x1)))) -> CSharp(C(x1))
 ASharp(c(c(c(x1)))) -> CSharp(x1)
 ASharp(c(c(c(x1)))) -> bSharp(C(C(C(x1))))
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> ASharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 BSharp(a(a(a(x1)))) -> ASharp(A(x1))
 BSharp(a(a(a(x1)))) -> ASharp(x1)
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 aSharp(a(a(a(x1)))) -> ASharp(A(x1))
 aSharp(a(a(a(x1)))) -> ASharp(x1)
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 bSharp(c(x1)) -> ASharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ASharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 ASharp(c(c(c(x1)))) -> CSharp(C(x1))
 ASharp(c(c(c(x1)))) -> CSharp(x1)
 ASharp(c(c(c(x1)))) -> bSharp(C(C(C(x1))))
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> ASharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 BSharp(a(a(a(x1)))) -> ASharp(A(x1))
 BSharp(a(a(a(x1)))) -> ASharp(x1)
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 aSharp(a(a(a(x1)))) -> ASharp(A(x1))
 aSharp(a(a(a(x1)))) -> ASharp(x1)
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 bSharp(c(x1)) -> ASharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
->->-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 ASharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 ASharp(c(c(c(x1)))) -> CSharp(C(x1))
 ASharp(c(c(c(x1)))) -> CSharp(x1)
 ASharp(c(c(c(x1)))) -> bSharp(C(C(C(x1))))
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> ASharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 BSharp(a(a(a(x1)))) -> ASharp(A(x1))
 BSharp(a(a(a(x1)))) -> ASharp(x1)
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 aSharp(a(a(a(x1)))) -> ASharp(A(x1))
 aSharp(a(a(a(x1)))) -> ASharp(x1)
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 bSharp(c(x1)) -> ASharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
-> Usable rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[A](X) = 2.X + 2
[B](X) = 2.X + 2
[C](X) = 2.X + 2
[a](X) = 2.X + 2
[b](X) = 2.X + 2
[c](X) = 2.X + 2
[fSNonEmpty] = 0
[ASharp](X) = 2.X + 2
[BSharp](X) = 2.X + 2
[CSharp](X) = 2.X + 2
[aSharp](X) = 2.X + 1
[bSharp](X) = 2.X + 2
[cSharp](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 ASharp(c(c(c(x1)))) -> CSharp(C(x1))
 ASharp(c(c(c(x1)))) -> CSharp(x1)
 ASharp(c(c(c(x1)))) -> bSharp(C(C(C(x1))))
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> ASharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 BSharp(a(a(a(x1)))) -> ASharp(A(x1))
 BSharp(a(a(a(x1)))) -> ASharp(x1)
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 aSharp(a(a(a(x1)))) -> ASharp(A(x1))
 aSharp(a(a(a(x1)))) -> ASharp(x1)
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 bSharp(c(x1)) -> ASharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ASharp(c(c(c(x1)))) -> CSharp(C(x1))
 ASharp(c(c(c(x1)))) -> CSharp(x1)
 ASharp(c(c(c(x1)))) -> bSharp(C(C(C(x1))))
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> ASharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 BSharp(a(a(a(x1)))) -> ASharp(A(x1))
 BSharp(a(a(a(x1)))) -> ASharp(x1)
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 aSharp(a(a(a(x1)))) -> ASharp(A(x1))
 aSharp(a(a(a(x1)))) -> ASharp(x1)
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 bSharp(c(x1)) -> ASharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
->->-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 ASharp(c(c(c(x1)))) -> CSharp(C(x1))
 ASharp(c(c(c(x1)))) -> CSharp(x1)
 ASharp(c(c(c(x1)))) -> bSharp(C(C(C(x1))))
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> ASharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 BSharp(a(a(a(x1)))) -> ASharp(A(x1))
 BSharp(a(a(a(x1)))) -> ASharp(x1)
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 aSharp(a(a(a(x1)))) -> ASharp(A(x1))
 aSharp(a(a(a(x1)))) -> ASharp(x1)
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 bSharp(c(x1)) -> ASharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
-> Usable rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[A](X) = X + 2
[B](X) = X + 2
[C](X) = X + 2
[a](X) = X + 2
[b](X) = X + 2
[c](X) = X + 2
[fSNonEmpty] = 0
[ASharp](X) = 2.X + 2
[BSharp](X) = 2.X + 2
[CSharp](X) = 2.X + 2
[aSharp](X) = 2.X + 2
[bSharp](X) = 2.X + 1
[cSharp](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 ASharp(c(c(c(x1)))) -> CSharp(x1)
 ASharp(c(c(c(x1)))) -> bSharp(C(C(C(x1))))
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> ASharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 BSharp(a(a(a(x1)))) -> ASharp(A(x1))
 BSharp(a(a(a(x1)))) -> ASharp(x1)
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 aSharp(a(a(a(x1)))) -> ASharp(A(x1))
 aSharp(a(a(a(x1)))) -> ASharp(x1)
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 bSharp(c(x1)) -> ASharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ASharp(c(c(c(x1)))) -> CSharp(x1)
 ASharp(c(c(c(x1)))) -> bSharp(C(C(C(x1))))
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> ASharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 BSharp(a(a(a(x1)))) -> ASharp(A(x1))
 BSharp(a(a(a(x1)))) -> ASharp(x1)
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 aSharp(a(a(a(x1)))) -> ASharp(A(x1))
 aSharp(a(a(a(x1)))) -> ASharp(x1)
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 bSharp(c(x1)) -> ASharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
->->-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 ASharp(c(c(c(x1)))) -> CSharp(x1)
 ASharp(c(c(c(x1)))) -> bSharp(C(C(C(x1))))
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> ASharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 BSharp(a(a(a(x1)))) -> ASharp(A(x1))
 BSharp(a(a(a(x1)))) -> ASharp(x1)
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 aSharp(a(a(a(x1)))) -> ASharp(A(x1))
 aSharp(a(a(a(x1)))) -> ASharp(x1)
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 bSharp(c(x1)) -> ASharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
-> Usable rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[A](X) = 2.X + 2
[B](X) = 2.X + 2
[C](X) = 2.X + 2
[a](X) = 2.X + 2
[b](X) = 2.X + 2
[c](X) = 2.X + 2
[fSNonEmpty] = 0
[ASharp](X) = 2.X + 2
[BSharp](X) = 2.X + 2
[CSharp](X) = 2.X + 2
[aSharp](X) = X + 2
[bSharp](X) = 2.X + 2
[cSharp](X) = 2.X + 1

Problem 1: 

SCC Processor:
-> Pairs:
 ASharp(c(c(c(x1)))) -> bSharp(C(C(C(x1))))
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> ASharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 BSharp(a(a(a(x1)))) -> ASharp(A(x1))
 BSharp(a(a(a(x1)))) -> ASharp(x1)
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 aSharp(a(a(a(x1)))) -> ASharp(A(x1))
 aSharp(a(a(a(x1)))) -> ASharp(x1)
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 bSharp(c(x1)) -> ASharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ASharp(c(c(c(x1)))) -> bSharp(C(C(C(x1))))
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> ASharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 BSharp(a(a(a(x1)))) -> ASharp(A(x1))
 BSharp(a(a(a(x1)))) -> ASharp(x1)
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 aSharp(a(a(a(x1)))) -> ASharp(A(x1))
 aSharp(a(a(a(x1)))) -> ASharp(x1)
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 bSharp(c(x1)) -> ASharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
->->-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 ASharp(c(c(c(x1)))) -> bSharp(C(C(C(x1))))
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> ASharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 BSharp(a(a(a(x1)))) -> ASharp(A(x1))
 BSharp(a(a(a(x1)))) -> ASharp(x1)
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 aSharp(a(a(a(x1)))) -> ASharp(A(x1))
 aSharp(a(a(a(x1)))) -> ASharp(x1)
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 bSharp(c(x1)) -> ASharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
-> Usable rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[A](X) = 2.X + 2
[B](X) = 2.X + 2
[C](X) = 2.X + 2
[a](X) = 2.X + 2
[b](X) = 2.X + 2
[c](X) = 2.X + 2
[fSNonEmpty] = 0
[ASharp](X) = 2.X + 1
[BSharp](X) = 2.X
[CSharp](X) = 2.X + 2
[aSharp](X) = X
[bSharp](X) = 2.X
[cSharp](X) = 2.X

Problem 1: 

SCC Processor:
-> Pairs:
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> ASharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 BSharp(a(a(a(x1)))) -> ASharp(A(x1))
 BSharp(a(a(a(x1)))) -> ASharp(x1)
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(a(a(a(x1)))) -> ASharp(A(A(x1)))
 aSharp(a(a(a(x1)))) -> ASharp(A(x1))
 aSharp(a(a(a(x1)))) -> ASharp(x1)
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 bSharp(c(x1)) -> ASharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
->->-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 BSharp(A(x1)) -> cSharp(x1)
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
-> Usable rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[A](X) = X + 2
[B](X) = X + 2
[C](X) = X + 2
[a](X) = X + 2
[b](X) = X + 2
[c](X) = X + 2
[fSNonEmpty] = 0
[ASharp](X) = 0
[BSharp](X) = X + 1
[CSharp](X) = X + 2
[aSharp](X) = X + 2
[bSharp](X) = X
[cSharp](X) = X + 1

Problem 1: 

SCC Processor:
-> Pairs:
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
->->-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 BSharp(B(B(B(x1)))) -> bSharp(b(b(x1)))
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
-> Usable rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[A](X) = 2.X + 2
[B](X) = 2.X + 2
[C](X) = 2.X + 2
[a](X) = 2.X + 2
[b](X) = 2.X + 2
[c](X) = 2.X + 2
[fSNonEmpty] = 0
[ASharp](X) = 0
[BSharp](X) = 2.X + 2
[CSharp](X) = 2.X + 2
[aSharp](X) = 2.X + 2
[bSharp](X) = X
[cSharp](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
->->-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 BSharp(B(B(B(x1)))) -> bSharp(b(x1))
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
-> Usable rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[A](X) = 2.X + 2
[B](X) = 2.X + 2
[C](X) = 2.X + 2
[a](X) = 2.X + 2
[b](X) = 2.X + 2
[c](X) = 2.X + 2
[fSNonEmpty] = 0
[ASharp](X) = 0
[BSharp](X) = 2.X + 2
[CSharp](X) = 2.X + 2
[aSharp](X) = 2.X + 2
[bSharp](X) = X
[cSharp](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
->->-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 BSharp(B(B(B(x1)))) -> bSharp(x1)
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
-> Usable rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[A](X) = 2.X + 2
[B](X) = 2.X + 2
[C](X) = 2.X + 2
[a](X) = 2.X + 2
[b](X) = 2.X + 2
[c](X) = 2.X + 2
[fSNonEmpty] = 0
[ASharp](X) = 0
[BSharp](X) = 2.X + 1
[CSharp](X) = 2.X + 2
[aSharp](X) = 2.X + 2
[bSharp](X) = 2.X + 1
[cSharp](X) = 2.X + 1

Problem 1: 

SCC Processor:
-> Pairs:
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
->->-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 BSharp(B(B(c(x1)))) -> bSharp(A(x1))
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
-> Usable rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[A](X) = 2.X + 2
[B](X) = 2.X + 2
[C](X) = 2.X + 2
[a](X) = 2.X + 2
[b](X) = 2.X + 2
[c](X) = 2.X + 2
[fSNonEmpty] = 0
[ASharp](X) = 0
[BSharp](X) = 2.X + 2
[CSharp](X) = 2.X + 2
[aSharp](X) = 2.X + 2
[bSharp](X) = 2.X
[cSharp](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
->->-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 BSharp(B(B(c(x1)))) -> bSharp(b(A(x1)))
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
-> Usable rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[A](X) = 2.X + 2
[B](X) = 2.X + 2
[C](X) = 2.X + 2
[a](X) = 2.X + 2
[b](X) = 2.X + 2
[c](X) = 2.X + 2
[fSNonEmpty] = 0
[ASharp](X) = 0
[BSharp](X) = X + 2
[CSharp](X) = 2.X + 2
[aSharp](X) = 2.X + 2
[bSharp](X) = X + 1
[cSharp](X) = X + 1

Problem 1: 

SCC Processor:
-> Pairs:
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
->->-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 BSharp(B(B(c(x1)))) -> bSharp(b(b(A(x1))))
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
-> Usable rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[A](X) = 2.X + 2
[B](X) = 2.X + 2
[C](X) = 2.X + 2
[a](X) = 2.X + 2
[b](X) = 2.X + 2
[c](X) = 2.X + 2
[fSNonEmpty] = 0
[ASharp](X) = 0
[BSharp](X) = 2.X
[CSharp](X) = 2.X + 1
[aSharp](X) = 2.X + 1
[bSharp](X) = X + 2
[cSharp](X) = X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 bSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 bSharp(b(b(b(x1)))) -> BSharp(B(x1))
 bSharp(b(b(b(x1)))) -> BSharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
->->-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 BSharp(a(a(a(x1)))) -> cSharp(A(A(A(x1))))
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
-> Usable rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[A](X) = 2.X + 2
[B](X) = 2.X + 2
[C](X) = 2.X + 2
[a](X) = 2.X + 2
[b](X) = 2.X + 2
[c](X) = 2.X + 2
[fSNonEmpty] = 0
[ASharp](X) = 0
[BSharp](X) = 2.X
[CSharp](X) = 2.X + 2
[aSharp](X) = 2.X + 1
[bSharp](X) = 0
[cSharp](X) = X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> BSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> BSharp(B(B(x1)))
 CSharp(b(b(b(x1)))) -> BSharp(B(x1))
 CSharp(b(b(b(x1)))) -> BSharp(x1)
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 cSharp(a(x1)) -> BSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
->->-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 CSharp(B(x1)) -> aSharp(x1)
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
-> Usable rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[A](X) = X + 1
[B](X) = X + 1
[C](X) = X + 1
[a](X) = X + 1
[b](X) = X + 1
[c](X) = X + 1
[fSNonEmpty] = 0
[ASharp](X) = 0
[BSharp](X) = 0
[CSharp](X) = 2.X + 2
[aSharp](X) = 2.X + 2
[bSharp](X) = 0
[cSharp](X) = 2.X + 1

Problem 1: 

SCC Processor:
-> Pairs:
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
->->-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 CSharp(C(C(C(x1)))) -> cSharp(c(c(x1)))
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
-> Usable rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[A](X) = 2.X + 2
[B](X) = 2.X + 2
[C](X) = 2.X + 2
[a](X) = 2.X + 2
[b](X) = 2.X + 2
[c](X) = 2.X + 2
[fSNonEmpty] = 0
[ASharp](X) = 0
[BSharp](X) = 0
[CSharp](X) = 2.X + 2
[aSharp](X) = 2.X + 2
[bSharp](X) = 0
[cSharp](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
->->-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 CSharp(C(C(C(x1)))) -> cSharp(c(x1))
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
-> Usable rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[A](X) = 2.X + 2
[B](X) = 2.X + 2
[C](X) = 2.X + 2
[a](X) = 2.X + 2
[b](X) = 2.X + 2
[c](X) = 2.X + 2
[fSNonEmpty] = 0
[ASharp](X) = 0
[BSharp](X) = 0
[CSharp](X) = 2.X + 2
[aSharp](X) = X + 1
[bSharp](X) = 0
[cSharp](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
->->-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 CSharp(C(C(C(x1)))) -> cSharp(x1)
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
-> Usable rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[A](X) = 2.X + 2
[B](X) = 2.X + 2
[C](X) = 2.X + 2
[a](X) = 2.X + 2
[b](X) = 2.X + 2
[c](X) = 2.X + 2
[fSNonEmpty] = 0
[ASharp](X) = 0
[BSharp](X) = 0
[CSharp](X) = X + 2
[aSharp](X) = X + 2
[bSharp](X) = 0
[cSharp](X) = X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
->->-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 CSharp(C(C(a(x1)))) -> cSharp(B(x1))
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
-> Usable rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[A](X) = X + 2
[B](X) = X + 2
[C](X) = X + 2
[a](X) = X + 2
[b](X) = X + 2
[c](X) = X + 2
[fSNonEmpty] = 0
[ASharp](X) = 0
[BSharp](X) = 0
[CSharp](X) = 2.X + 2
[aSharp](X) = 2.X + 2
[bSharp](X) = 0
[cSharp](X) = 2.X + 1

Problem 1: 

SCC Processor:
-> Pairs:
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
->->-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 CSharp(C(C(a(x1)))) -> cSharp(c(B(x1)))
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
-> Usable rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[A](X) = 2.X + 2
[B](X) = 2.X + 2
[C](X) = 2.X + 2
[a](X) = 2.X + 2
[b](X) = 2.X + 2
[c](X) = 2.X + 2
[fSNonEmpty] = 0
[ASharp](X) = 0
[BSharp](X) = 0
[CSharp](X) = 2.X + 2
[aSharp](X) = 2.X
[bSharp](X) = 0
[cSharp](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
->->-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 CSharp(C(C(a(x1)))) -> cSharp(c(c(B(x1))))
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
-> Usable rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[A](X) = 2.X + 2
[B](X) = 2.X + 2
[C](X) = 2.X + 2
[a](X) = 2.X + 2
[b](X) = 2.X + 2
[c](X) = 2.X + 2
[fSNonEmpty] = 0
[ASharp](X) = 0
[BSharp](X) = 0
[CSharp](X) = 2.X + 2
[aSharp](X) = X
[bSharp](X) = 0
[cSharp](X) = X

Problem 1: 

SCC Processor:
-> Pairs:
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
 cSharp(c(c(c(x1)))) -> CSharp(C(C(x1)))
 cSharp(c(c(c(x1)))) -> CSharp(C(x1))
 cSharp(c(c(c(x1)))) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
->->-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 CSharp(b(b(b(x1)))) -> aSharp(B(B(B(x1))))
 aSharp(b(x1)) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
-> Usable rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[A](X) = 2.X + 1
[B](X) = 2.X + 1
[C](X) = 2.X + 1
[a](X) = 2.X + 1
[b](X) = 2.X + 1
[c](X) = 2.X + 1
[fSNonEmpty] = 0
[ASharp](X) = 0
[BSharp](X) = 0
[CSharp](X) = 2.X + 1
[aSharp](X) = 2.X
[bSharp](X) = 0
[cSharp](X) = 0

Problem 1: 

SCC Processor:
-> Pairs:
 aSharp(b(x1)) -> CSharp(x1)
-> Rules:
 A(A(A(A(x1)))) -> a(a(a(x1)))
 A(A(A(b(x1)))) -> a(a(a(C(x1))))
 A(C(x1)) -> b(x1)
 A(a(x1)) -> x1
 A(c(c(c(x1)))) -> b(C(C(C(x1))))
 B(A(x1)) -> c(x1)
 B(B(B(B(x1)))) -> b(b(b(x1)))
 B(B(B(c(x1)))) -> b(b(b(A(x1))))
 B(a(a(a(x1)))) -> c(A(A(A(x1))))
 B(b(x1)) -> x1
 C(B(x1)) -> a(x1)
 C(C(C(C(x1)))) -> c(c(c(x1)))
 C(C(C(a(x1)))) -> c(c(c(B(x1))))
 C(b(b(b(x1)))) -> a(B(B(B(x1))))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(a(a(a(x1)))) -> A(A(A(x1)))
 a(b(x1)) -> C(x1)
 b(B(x1)) -> x1
 b(b(b(b(x1)))) -> B(B(B(x1)))
 b(c(x1)) -> A(x1)
 c(C(x1)) -> x1
 c(a(x1)) -> B(x1)
 c(c(c(c(x1)))) -> C(C(C(x1)))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
