YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/fGWjW.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) Strip Symbols Proof [SOUND, 0 ms]
(2) QTRS
(3) QTRS Reverse [EQUIVALENT, 0 ms]
(4) QTRS
(5) RFCMatchBoundsTRSProof [EQUIVALENT, 0 ms]
(6) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(b(a(a(a(b(a(b(a(a(b(x1))))))))))) -> a(b(a(a(b(a(b(a(a(a(b(a(b(a(x1))))))))))))))

Q is empty.

----------------------------------------

(1) Strip Symbols Proof (SOUND)
We were given the following TRS:

   a(b(a(a(a(b(a(b(a(a(b(x1))))))))))) -> a(b(a(a(b(a(b(a(a(a(b(a(b(a(x1))))))))))))))

By stripping symbols from the only rule of the system, we obtained the following TRS [ENDRULLIS]: 

   a(b(a(b(a(a(b(x1))))))) -> b(a(b(a(a(a(b(a(b(a(x1))))))))))

----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(b(a(b(a(a(b(x1))))))) -> b(a(b(a(a(a(b(a(b(a(x1))))))))))

Q is empty.

----------------------------------------

(3) QTRS Reverse (EQUIVALENT)
We applied the QTRS Reverse Processor [REVERSE].
----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   b(a(a(b(a(b(a(x1))))))) -> a(b(a(b(a(a(a(b(a(b(x1))))))))))

Q is empty.

----------------------------------------

(5) RFCMatchBoundsTRSProof (EQUIVALENT)
Termination of the TRS R could be shown with a Match Bound [MATCHBOUNDS1,MATCHBOUNDS2] of 2. This implies Q-termination of R.
The following rules were used to construct the certificate:

   b(a(a(b(a(b(a(x1))))))) -> a(b(a(b(a(a(a(b(a(b(x1))))))))))

The certificate found is represented by the following graph.
The certificate consists of the following enumerated nodes:
219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256

Node 219 is start node and node 220 is final node.

Those nodes are connected through the following edges:

* 219 to 221 labelled a_1(0)* 220 to 220 labelled #_1(0)* 221 to 222 labelled b_1(0)* 222 to 223 labelled a_1(0)* 223 to 224 labelled b_1(0)* 224 to 225 labelled a_1(0)* 225 to 226 labelled a_1(0)* 226 to 227 labelled a_1(0)* 227 to 228 labelled b_1(0)* 227 to 239 labelled a_1(1)* 228 to 229 labelled a_1(0)* 229 to 220 labelled b_1(0)* 229 to 230 labelled a_1(1)* 230 to 231 labelled b_1(1)* 231 to 232 labelled a_1(1)* 232 to 233 labelled b_1(1)* 233 to 234 labelled a_1(1)* 234 to 235 labelled a_1(1)* 235 to 236 labelled a_1(1)* 236 to 237 labelled b_1(1)* 236 to 248 labelled a_1(2)* 237 to 238 labelled a_1(1)* 238 to 220 labelled b_1(1)* 238 to 230 labelled a_1(1)* 239 to 240 labelled b_1(1)* 240 to 241 labelled a_1(1)* 241 to 242 labelled b_1(1)* 242 to 243 labelled a_1(1)* 243 to 244 labelled a_1(1)* 244 to 245 labelled a_1(1)* 245 to 246 labelled b_1(1)* 245 to 248 labelled a_1(2)* 246 to 247 labelled a_1(1)* 247 to 234 labelled b_1(1)* 247 to 230 labelled a_1(1)* 248 to 249 labelled b_1(2)* 249 to 250 labelled a_1(2)* 250 to 251 labelled b_1(2)* 251 to 252 labelled a_1(2)* 252 to 253 labelled a_1(2)* 253 to 254 labelled a_1(2)* 254 to 255 labelled b_1(2)* 254 to 248 labelled a_1(2)* 255 to 256 labelled a_1(2)* 256 to 234 labelled b_1(2)* 256 to 230 labelled a_1(1)


----------------------------------------

(6)
YES
