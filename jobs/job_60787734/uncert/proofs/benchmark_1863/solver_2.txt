YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/Ao94v.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) AND
    (5) QDP
        (6) UsableRulesProof [EQUIVALENT, 0 ms]
        (7) QDP
        (8) MRRProof [EQUIVALENT, 4 ms]
        (9) QDP
        (10) PisEmptyProof [EQUIVALENT, 0 ms]
        (11) YES
    (12) QDP
        (13) UsableRulesProof [EQUIVALENT, 0 ms]
        (14) QDP
        (15) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (16) YES
    (17) QDP
        (18) UsableRulesProof [EQUIVALENT, 0 ms]
        (19) QDP
        (20) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (21) YES
    (22) QDP
        (23) QDPOrderProof [EQUIVALENT, 147 ms]
        (24) QDP
        (25) QDPOrderProof [EQUIVALENT, 4 ms]
        (26) QDP
        (27) PisEmptyProof [EQUIVALENT, 0 ms]
        (28) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   r1(a(x1)) -> a(a(a(r1(x1))))
   r2(a(x1)) -> a(a(a(r2(x1))))
   a(l1(x1)) -> l1(a(a(a(x1))))
   a(a(l2(x1))) -> l2(a(a(x1)))
   r1(b(x1)) -> l1(b(x1))
   r2(b(x1)) -> l2(a(b(x1)))
   b(l1(x1)) -> b(r2(x1))
   b(l2(x1)) -> b(r1(x1))
   a(a(x1)) -> x1

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   R1(a(x1)) -> A(a(a(r1(x1))))
   R1(a(x1)) -> A(a(r1(x1)))
   R1(a(x1)) -> A(r1(x1))
   R1(a(x1)) -> R1(x1)
   R2(a(x1)) -> A(a(a(r2(x1))))
   R2(a(x1)) -> A(a(r2(x1)))
   R2(a(x1)) -> A(r2(x1))
   R2(a(x1)) -> R2(x1)
   A(l1(x1)) -> A(a(a(x1)))
   A(l1(x1)) -> A(a(x1))
   A(l1(x1)) -> A(x1)
   A(a(l2(x1))) -> A(a(x1))
   A(a(l2(x1))) -> A(x1)
   R2(b(x1)) -> A(b(x1))
   B(l1(x1)) -> B(r2(x1))
   B(l1(x1)) -> R2(x1)
   B(l2(x1)) -> B(r1(x1))
   B(l2(x1)) -> R1(x1)

The TRS R consists of the following rules:

   r1(a(x1)) -> a(a(a(r1(x1))))
   r2(a(x1)) -> a(a(a(r2(x1))))
   a(l1(x1)) -> l1(a(a(a(x1))))
   a(a(l2(x1))) -> l2(a(a(x1)))
   r1(b(x1)) -> l1(b(x1))
   r2(b(x1)) -> l2(a(b(x1)))
   b(l1(x1)) -> b(r2(x1))
   b(l2(x1)) -> b(r1(x1))
   a(a(x1)) -> x1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 4 SCCs with 9 less nodes.
----------------------------------------

(4)
Complex Obligation (AND)

----------------------------------------

(5)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(l1(x1)) -> A(a(x1))
   A(l1(x1)) -> A(a(a(x1)))
   A(l1(x1)) -> A(x1)
   A(a(l2(x1))) -> A(a(x1))
   A(a(l2(x1))) -> A(x1)

The TRS R consists of the following rules:

   r1(a(x1)) -> a(a(a(r1(x1))))
   r2(a(x1)) -> a(a(a(r2(x1))))
   a(l1(x1)) -> l1(a(a(a(x1))))
   a(a(l2(x1))) -> l2(a(a(x1)))
   r1(b(x1)) -> l1(b(x1))
   r2(b(x1)) -> l2(a(b(x1)))
   b(l1(x1)) -> b(r2(x1))
   b(l2(x1)) -> b(r1(x1))
   a(a(x1)) -> x1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(6) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(l1(x1)) -> A(a(x1))
   A(l1(x1)) -> A(a(a(x1)))
   A(l1(x1)) -> A(x1)
   A(a(l2(x1))) -> A(a(x1))
   A(a(l2(x1))) -> A(x1)

The TRS R consists of the following rules:

   a(l1(x1)) -> l1(a(a(a(x1))))
   a(a(l2(x1))) -> l2(a(a(x1)))
   a(a(x1)) -> x1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.

Strictly oriented dependency pairs:

   A(l1(x1)) -> A(a(x1))
   A(l1(x1)) -> A(a(a(x1)))
   A(l1(x1)) -> A(x1)
   A(a(l2(x1))) -> A(a(x1))
   A(a(l2(x1))) -> A(x1)


Used ordering: Polynomial interpretation [POLO]:

   POL(A(x_1)) = x_1
   POL(a(x_1)) = x_1
   POL(l1(x_1)) = 3 + 2*x_1
   POL(l2(x_1)) = 2 + 2*x_1


----------------------------------------

(9)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   a(l1(x1)) -> l1(a(a(a(x1))))
   a(a(l2(x1))) -> l2(a(a(x1)))
   a(a(x1)) -> x1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(11)
YES

----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   R2(a(x1)) -> R2(x1)

The TRS R consists of the following rules:

   r1(a(x1)) -> a(a(a(r1(x1))))
   r2(a(x1)) -> a(a(a(r2(x1))))
   a(l1(x1)) -> l1(a(a(a(x1))))
   a(a(l2(x1))) -> l2(a(a(x1)))
   r1(b(x1)) -> l1(b(x1))
   r2(b(x1)) -> l2(a(b(x1)))
   b(l1(x1)) -> b(r2(x1))
   b(l2(x1)) -> b(r1(x1))
   a(a(x1)) -> x1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   R2(a(x1)) -> R2(x1)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*R2(a(x1)) -> R2(x1)
The graph contains the following edges 1 > 1


----------------------------------------

(16)
YES

----------------------------------------

(17)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   R1(a(x1)) -> R1(x1)

The TRS R consists of the following rules:

   r1(a(x1)) -> a(a(a(r1(x1))))
   r2(a(x1)) -> a(a(a(r2(x1))))
   a(l1(x1)) -> l1(a(a(a(x1))))
   a(a(l2(x1))) -> l2(a(a(x1)))
   r1(b(x1)) -> l1(b(x1))
   r2(b(x1)) -> l2(a(b(x1)))
   b(l1(x1)) -> b(r2(x1))
   b(l2(x1)) -> b(r1(x1))
   a(a(x1)) -> x1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(18) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(19)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   R1(a(x1)) -> R1(x1)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(20) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*R1(a(x1)) -> R1(x1)
The graph contains the following edges 1 > 1


----------------------------------------

(21)
YES

----------------------------------------

(22)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(l2(x1)) -> B(r1(x1))
   B(l1(x1)) -> B(r2(x1))

The TRS R consists of the following rules:

   r1(a(x1)) -> a(a(a(r1(x1))))
   r2(a(x1)) -> a(a(a(r2(x1))))
   a(l1(x1)) -> l1(a(a(a(x1))))
   a(a(l2(x1))) -> l2(a(a(x1)))
   r1(b(x1)) -> l1(b(x1))
   r2(b(x1)) -> l2(a(b(x1)))
   b(l1(x1)) -> b(r2(x1))
   b(l2(x1)) -> b(r1(x1))
   a(a(x1)) -> x1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(23) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   B(l1(x1)) -> B(r2(x1))
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(B(x_1)) =  	[[0A]] 	 +  	[[0A, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(l2(x_1)) =  	[[1A], [0A], [0A]] 	 +  	[[0A, 1A, 0A], [-I, 0A, -I], [-I, 0A, -I]] 	* 	x_1
>>>

   <<<
 POL(r1(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[0A, 1A, 0A], [1A, 0A, 0A], [0A, 0A, 1A]] 	* 	x_1
>>>

   <<<
 POL(l1(x_1)) =  	[[1A], [1A], [-I]] 	 +  	[[0A, 1A, 0A], [1A, 0A, 0A], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(r2(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[-I, 0A, -I], [0A, -I, -I], [0A, -I, 0A]] 	* 	x_1
>>>

   <<<
 POL(a(x_1)) =  	[[0A], [-I], [-I]] 	 +  	[[-I, 0A, -I], [0A, -I, -I], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(b(x_1)) =  	[[0A], [1A], [0A]] 	 +  	[[0A, -I, -I], [1A, 0A, 0A], [0A, -I, -I]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   r1(a(x1)) -> a(a(a(r1(x1))))
   r1(b(x1)) -> l1(b(x1))
   r2(a(x1)) -> a(a(a(r2(x1))))
   r2(b(x1)) -> l2(a(b(x1)))
   b(l2(x1)) -> b(r1(x1))
   b(l1(x1)) -> b(r2(x1))
   a(l1(x1)) -> l1(a(a(a(x1))))
   a(a(l2(x1))) -> l2(a(a(x1)))
   a(a(x1)) -> x1


----------------------------------------

(24)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(l2(x1)) -> B(r1(x1))

The TRS R consists of the following rules:

   r1(a(x1)) -> a(a(a(r1(x1))))
   r2(a(x1)) -> a(a(a(r2(x1))))
   a(l1(x1)) -> l1(a(a(a(x1))))
   a(a(l2(x1))) -> l2(a(a(x1)))
   r1(b(x1)) -> l1(b(x1))
   r2(b(x1)) -> l2(a(b(x1)))
   b(l1(x1)) -> b(r2(x1))
   b(l2(x1)) -> b(r1(x1))
   a(a(x1)) -> x1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(25) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   B(l2(x1)) -> B(r1(x1))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(B(x_1)) = x_1
   POL(a(x_1)) = x_1
   POL(b(x_1)) = 1 + x_1
   POL(l1(x_1)) = 0
   POL(l2(x_1)) = 1
   POL(r1(x_1)) = 0
   POL(r2(x_1)) = 1 + x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   r1(a(x1)) -> a(a(a(r1(x1))))
   r1(b(x1)) -> l1(b(x1))
   a(l1(x1)) -> l1(a(a(a(x1))))
   a(a(l2(x1))) -> l2(a(a(x1)))
   a(a(x1)) -> x1


----------------------------------------

(26)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   r1(a(x1)) -> a(a(a(r1(x1))))
   r2(a(x1)) -> a(a(a(r2(x1))))
   a(l1(x1)) -> l1(a(a(a(x1))))
   a(a(l2(x1))) -> l2(a(a(x1)))
   r1(b(x1)) -> l1(b(x1))
   r2(b(x1)) -> l2(a(b(x1)))
   b(l1(x1)) -> b(r2(x1))
   b(l2(x1)) -> b(r1(x1))
   a(a(x1)) -> x1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(27) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(28)
YES
