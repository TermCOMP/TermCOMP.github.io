YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/Q6Zds.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRS Reverse [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 8 ms]
(4) QDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) AND
    (7) QDP
        (8) UsableRulesProof [EQUIVALENT, 0 ms]
        (9) QDP
        (10) MRRProof [EQUIVALENT, 28 ms]
        (11) QDP
        (12) DependencyGraphProof [EQUIVALENT, 0 ms]
        (13) AND
            (14) QDP
                (15) QDPOrderProof [EQUIVALENT, 4 ms]
                (16) QDP
                (17) DependencyGraphProof [EQUIVALENT, 0 ms]
                (18) TRUE
            (19) QDP
                (20) QDPOrderProof [EQUIVALENT, 3 ms]
                (21) QDP
                (22) PisEmptyProof [EQUIVALENT, 0 ms]
                (23) YES
    (24) QDP
        (25) UsableRulesProof [EQUIVALENT, 0 ms]
        (26) QDP
        (27) QDPOrderProof [EQUIVALENT, 11 ms]
        (28) QDP
        (29) QDPOrderProof [EQUIVALENT, 11 ms]
        (30) QDP
        (31) PisEmptyProof [EQUIVALENT, 0 ms]
        (32) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(s(x1)) -> s(a(x1))
   b(a(b(s(x1)))) -> a(b(s(a(x1))))
   b(a(b(b(x1)))) -> c(s(x1))
   c(s(x1)) -> a(b(a(b(x1))))
   a(b(a(a(x1)))) -> b(a(b(a(x1))))

Q is empty.

----------------------------------------

(1) QTRS Reverse (EQUIVALENT)
We applied the QTRS Reverse Processor [REVERSE].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   s(a(x1)) -> a(s(x1))
   s(b(a(b(x1)))) -> a(s(b(a(x1))))
   b(b(a(b(x1)))) -> s(c(x1))
   s(c(x1)) -> b(a(b(a(x1))))
   a(a(b(a(x1)))) -> a(b(a(b(x1))))

Q is empty.

----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   S(a(x1)) -> A(s(x1))
   S(a(x1)) -> S(x1)
   S(b(a(b(x1)))) -> A(s(b(a(x1))))
   S(b(a(b(x1)))) -> S(b(a(x1)))
   S(b(a(b(x1)))) -> B(a(x1))
   S(b(a(b(x1)))) -> A(x1)
   B(b(a(b(x1)))) -> S(c(x1))
   S(c(x1)) -> B(a(b(a(x1))))
   S(c(x1)) -> A(b(a(x1)))
   S(c(x1)) -> B(a(x1))
   S(c(x1)) -> A(x1)
   A(a(b(a(x1)))) -> A(b(a(b(x1))))
   A(a(b(a(x1)))) -> B(a(b(x1)))
   A(a(b(a(x1)))) -> A(b(x1))
   A(a(b(a(x1)))) -> B(x1)

The TRS R consists of the following rules:

   s(a(x1)) -> a(s(x1))
   s(b(a(b(x1)))) -> a(s(b(a(x1))))
   b(b(a(b(x1)))) -> s(c(x1))
   s(c(x1)) -> b(a(b(a(x1))))
   a(a(b(a(x1)))) -> a(b(a(b(x1))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 4 less nodes.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   S(c(x1)) -> B(a(b(a(x1))))
   B(b(a(b(x1)))) -> S(c(x1))
   S(c(x1)) -> A(b(a(x1)))
   A(a(b(a(x1)))) -> A(b(a(b(x1))))
   A(a(b(a(x1)))) -> B(a(b(x1)))
   A(a(b(a(x1)))) -> A(b(x1))
   A(a(b(a(x1)))) -> B(x1)
   S(c(x1)) -> B(a(x1))
   S(c(x1)) -> A(x1)

The TRS R consists of the following rules:

   s(a(x1)) -> a(s(x1))
   s(b(a(b(x1)))) -> a(s(b(a(x1))))
   b(b(a(b(x1)))) -> s(c(x1))
   s(c(x1)) -> b(a(b(a(x1))))
   a(a(b(a(x1)))) -> a(b(a(b(x1))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   S(c(x1)) -> B(a(b(a(x1))))
   B(b(a(b(x1)))) -> S(c(x1))
   S(c(x1)) -> A(b(a(x1)))
   A(a(b(a(x1)))) -> A(b(a(b(x1))))
   A(a(b(a(x1)))) -> B(a(b(x1)))
   A(a(b(a(x1)))) -> A(b(x1))
   A(a(b(a(x1)))) -> B(x1)
   S(c(x1)) -> B(a(x1))
   S(c(x1)) -> A(x1)

The TRS R consists of the following rules:

   a(a(b(a(x1)))) -> a(b(a(b(x1))))
   s(c(x1)) -> b(a(b(a(x1))))
   b(b(a(b(x1)))) -> s(c(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.

Strictly oriented dependency pairs:

   S(c(x1)) -> A(b(a(x1)))
   A(a(b(a(x1)))) -> A(b(x1))
   A(a(b(a(x1)))) -> B(x1)
   S(c(x1)) -> B(a(x1))
   S(c(x1)) -> A(x1)


Used ordering: Polynomial interpretation [POLO]:

   POL(A(x_1)) = x_1
   POL(B(x_1)) = 1 + x_1
   POL(S(x_1)) = 2 + x_1
   POL(a(x_1)) = 1 + x_1
   POL(b(x_1)) = 1 + x_1
   POL(c(x_1)) = 2 + x_1
   POL(s(x_1)) = 2 + x_1


----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   S(c(x1)) -> B(a(b(a(x1))))
   B(b(a(b(x1)))) -> S(c(x1))
   A(a(b(a(x1)))) -> A(b(a(b(x1))))
   A(a(b(a(x1)))) -> B(a(b(x1)))

The TRS R consists of the following rules:

   a(a(b(a(x1)))) -> a(b(a(b(x1))))
   s(c(x1)) -> b(a(b(a(x1))))
   b(b(a(b(x1)))) -> s(c(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 1 less node.
----------------------------------------

(13)
Complex Obligation (AND)

----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(b(a(b(x1)))) -> S(c(x1))
   S(c(x1)) -> B(a(b(a(x1))))

The TRS R consists of the following rules:

   a(a(b(a(x1)))) -> a(b(a(b(x1))))
   s(c(x1)) -> b(a(b(a(x1))))
   b(b(a(b(x1)))) -> s(c(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   B(b(a(b(x1)))) -> S(c(x1))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(B(x_1)) = x_1
   POL(S(x_1)) = x_1
   POL(a(x_1)) = 0
   POL(b(x_1)) = 1
   POL(c(x_1)) = 0
   POL(s(x_1)) = 1 + x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   a(a(b(a(x1)))) -> a(b(a(b(x1))))


----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   S(c(x1)) -> B(a(b(a(x1))))

The TRS R consists of the following rules:

   a(a(b(a(x1)))) -> a(b(a(b(x1))))
   s(c(x1)) -> b(a(b(a(x1))))
   b(b(a(b(x1)))) -> s(c(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 1 less node.
----------------------------------------

(18)
TRUE

----------------------------------------

(19)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(a(b(a(x1)))) -> A(b(a(b(x1))))

The TRS R consists of the following rules:

   a(a(b(a(x1)))) -> a(b(a(b(x1))))
   s(c(x1)) -> b(a(b(a(x1))))
   b(b(a(b(x1)))) -> s(c(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(20) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   A(a(b(a(x1)))) -> A(b(a(b(x1))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(A(x_1)) = x_1
   POL(a(x_1)) = 1
   POL(b(x_1)) = 0
   POL(c(x_1)) = 0
   POL(s(x_1)) = x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   b(b(a(b(x1)))) -> s(c(x1))
   s(c(x1)) -> b(a(b(a(x1))))


----------------------------------------

(21)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   a(a(b(a(x1)))) -> a(b(a(b(x1))))
   s(c(x1)) -> b(a(b(a(x1))))
   b(b(a(b(x1)))) -> s(c(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(22) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(23)
YES

----------------------------------------

(24)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   S(b(a(b(x1)))) -> S(b(a(x1)))
   S(a(x1)) -> S(x1)

The TRS R consists of the following rules:

   s(a(x1)) -> a(s(x1))
   s(b(a(b(x1)))) -> a(s(b(a(x1))))
   b(b(a(b(x1)))) -> s(c(x1))
   s(c(x1)) -> b(a(b(a(x1))))
   a(a(b(a(x1)))) -> a(b(a(b(x1))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(25) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(26)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   S(b(a(b(x1)))) -> S(b(a(x1)))
   S(a(x1)) -> S(x1)

The TRS R consists of the following rules:

   a(a(b(a(x1)))) -> a(b(a(b(x1))))
   s(c(x1)) -> b(a(b(a(x1))))
   b(b(a(b(x1)))) -> s(c(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(27) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   S(a(x1)) -> S(x1)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(S(x_1)) = x_1
   POL(a(x_1)) = 1 + x_1
   POL(b(x_1)) = 1
   POL(c(x_1)) = 1
   POL(s(x_1)) = x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   b(b(a(b(x1)))) -> s(c(x1))
   s(c(x1)) -> b(a(b(a(x1))))


----------------------------------------

(28)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   S(b(a(b(x1)))) -> S(b(a(x1)))

The TRS R consists of the following rules:

   a(a(b(a(x1)))) -> a(b(a(b(x1))))
   s(c(x1)) -> b(a(b(a(x1))))
   b(b(a(b(x1)))) -> s(c(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(29) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   S(b(a(b(x1)))) -> S(b(a(x1)))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( S_1(x_1) ) = 2x_1 + 2
POL( b_1(x_1) ) = x_1 + 1
POL( a_1(x_1) ) = x_1 + 1
POL( s_1(x_1) ) = x_1 + 2
POL( c_1(x_1) ) = x_1 + 2

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   a(a(b(a(x1)))) -> a(b(a(b(x1))))
   b(b(a(b(x1)))) -> s(c(x1))
   s(c(x1)) -> b(a(b(a(x1))))


----------------------------------------

(30)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   a(a(b(a(x1)))) -> a(b(a(b(x1))))
   s(c(x1)) -> b(a(b(a(x1))))
   b(b(a(b(x1)))) -> s(c(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(31) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(32)
YES
