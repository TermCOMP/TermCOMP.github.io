YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/v0hPh.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 19 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 2 ms]
(4) QDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) AND
    (7) QDP
        (8) UsableRulesProof [EQUIVALENT, 0 ms]
        (9) QDP
        (10) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (11) YES
    (12) QDP
        (13) MNOCProof [EQUIVALENT, 0 ms]
        (14) QDP
        (15) UsableRulesProof [EQUIVALENT, 0 ms]
        (16) QDP
        (17) QReductionProof [EQUIVALENT, 0 ms]
        (18) QDP
        (19) QDPOrderProof [EQUIVALENT, 22 ms]
        (20) QDP
        (21) PisEmptyProof [EQUIVALENT, 0 ms]
        (22) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   q(0(x1)) -> p(p(s(s(0(s(s(s(s(x1)))))))))
   q(s(x1)) -> p(p(s(s(s(s(s(s(r(p(p(s(s(x1)))))))))))))
   r(0(x1)) -> p(s(p(s(0(p(p(p(s(s(s(x1)))))))))))
   r(s(x1)) -> p(s(p(s(s(q(p(s(p(s(x1))))))))))
   p(p(s(x1))) -> p(x1)
   p(s(x1)) -> x1
   p(0(x1)) -> 0(s(s(s(x1))))

Q is empty.

----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(0(x_1)) = x_1
   POL(p(x_1)) = x_1
   POL(q(x_1)) = 1 + x_1
   POL(r(x_1)) = 1 + x_1
   POL(s(x_1)) = x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   q(0(x1)) -> p(p(s(s(0(s(s(s(s(x1)))))))))
   r(0(x1)) -> p(s(p(s(0(p(p(p(s(s(s(x1)))))))))))




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   q(s(x1)) -> p(p(s(s(s(s(s(s(r(p(p(s(s(x1)))))))))))))
   r(s(x1)) -> p(s(p(s(s(q(p(s(p(s(x1))))))))))
   p(p(s(x1))) -> p(x1)
   p(s(x1)) -> x1
   p(0(x1)) -> 0(s(s(s(x1))))

Q is empty.

----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   Q(s(x1)) -> P(p(s(s(s(s(s(s(r(p(p(s(s(x1)))))))))))))
   Q(s(x1)) -> P(s(s(s(s(s(s(r(p(p(s(s(x1))))))))))))
   Q(s(x1)) -> R(p(p(s(s(x1)))))
   Q(s(x1)) -> P(p(s(s(x1))))
   Q(s(x1)) -> P(s(s(x1)))
   R(s(x1)) -> P(s(p(s(s(q(p(s(p(s(x1))))))))))
   R(s(x1)) -> P(s(s(q(p(s(p(s(x1))))))))
   R(s(x1)) -> Q(p(s(p(s(x1)))))
   R(s(x1)) -> P(s(p(s(x1))))
   R(s(x1)) -> P(s(x1))
   P(p(s(x1))) -> P(x1)

The TRS R consists of the following rules:

   q(s(x1)) -> p(p(s(s(s(s(s(s(r(p(p(s(s(x1)))))))))))))
   r(s(x1)) -> p(s(p(s(s(q(p(s(p(s(x1))))))))))
   p(p(s(x1))) -> p(x1)
   p(s(x1)) -> x1
   p(0(x1)) -> 0(s(s(s(x1))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 8 less nodes.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   P(p(s(x1))) -> P(x1)

The TRS R consists of the following rules:

   q(s(x1)) -> p(p(s(s(s(s(s(s(r(p(p(s(s(x1)))))))))))))
   r(s(x1)) -> p(s(p(s(s(q(p(s(p(s(x1))))))))))
   p(p(s(x1))) -> p(x1)
   p(s(x1)) -> x1
   p(0(x1)) -> 0(s(s(s(x1))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   P(p(s(x1))) -> P(x1)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*P(p(s(x1))) -> P(x1)
The graph contains the following edges 1 > 1


----------------------------------------

(11)
YES

----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   Q(s(x1)) -> R(p(p(s(s(x1)))))
   R(s(x1)) -> Q(p(s(p(s(x1)))))

The TRS R consists of the following rules:

   q(s(x1)) -> p(p(s(s(s(s(s(s(r(p(p(s(s(x1)))))))))))))
   r(s(x1)) -> p(s(p(s(s(q(p(s(p(s(x1))))))))))
   p(p(s(x1))) -> p(x1)
   p(s(x1)) -> x1
   p(0(x1)) -> 0(s(s(s(x1))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) MNOCProof (EQUIVALENT)
We use the modular non-overlap check [LPAR04] to enlarge Q to all left-hand sides of R.
----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   Q(s(x1)) -> R(p(p(s(s(x1)))))
   R(s(x1)) -> Q(p(s(p(s(x1)))))

The TRS R consists of the following rules:

   q(s(x1)) -> p(p(s(s(s(s(s(s(r(p(p(s(s(x1)))))))))))))
   r(s(x1)) -> p(s(p(s(s(q(p(s(p(s(x1))))))))))
   p(p(s(x1))) -> p(x1)
   p(s(x1)) -> x1
   p(0(x1)) -> 0(s(s(s(x1))))

The set Q consists of the following terms:

   q(s(x0))
   r(s(x0))
   p(s(x0))
   p(0(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   Q(s(x1)) -> R(p(p(s(s(x1)))))
   R(s(x1)) -> Q(p(s(p(s(x1)))))

The TRS R consists of the following rules:

   p(s(x1)) -> x1
   p(0(x1)) -> 0(s(s(s(x1))))

The set Q consists of the following terms:

   q(s(x0))
   r(s(x0))
   p(s(x0))
   p(0(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   q(s(x0))
   r(s(x0))


----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   Q(s(x1)) -> R(p(p(s(s(x1)))))
   R(s(x1)) -> Q(p(s(p(s(x1)))))

The TRS R consists of the following rules:

   p(s(x1)) -> x1
   p(0(x1)) -> 0(s(s(s(x1))))

The set Q consists of the following terms:

   p(s(x0))
   p(0(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   Q(s(x1)) -> R(p(p(s(s(x1)))))
   R(s(x1)) -> Q(p(s(p(s(x1)))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( Q_1(x_1) ) = max{0, 2x_1 - 2}
POL( R_1(x_1) ) = max{0, 2x_1 - 2}
POL( p_1(x_1) ) = max{0, x_1 - 2}
POL( s_1(x_1) ) = x_1 + 2
POL( 0_1(x_1) ) = max{0, -2}

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   p(s(x1)) -> x1
   p(0(x1)) -> 0(s(s(s(x1))))


----------------------------------------

(20)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   p(s(x1)) -> x1
   p(0(x1)) -> 0(s(s(s(x1))))

The set Q consists of the following terms:

   p(s(x0))
   p(0(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(22)
YES
