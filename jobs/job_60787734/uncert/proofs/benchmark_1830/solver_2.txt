YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/rIyFZ.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 14 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 2 ms]
(4) QTRS
(5) QTRSRRRProof [EQUIVALENT, 0 ms]
(6) QTRS
(7) DependencyPairsProof [EQUIVALENT, 4 ms]
(8) QDP
(9) MRRProof [EQUIVALENT, 54 ms]
(10) QDP
(11) DependencyGraphProof [EQUIVALENT, 0 ms]
(12) AND
    (13) QDP
        (14) QDPOrderProof [EQUIVALENT, 5 ms]
        (15) QDP
        (16) DependencyGraphProof [EQUIVALENT, 0 ms]
        (17) TRUE
    (18) QDP
        (19) QDPOrderProof [EQUIVALENT, 4 ms]
        (20) QDP
        (21) DependencyGraphProof [EQUIVALENT, 0 ms]
        (22) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(b(c(x1))) -> c(b(a(x1)))
   C(B(A(x1))) -> A(B(C(x1)))
   b(a(C(x1))) -> C(a(b(x1)))
   c(A(B(x1))) -> B(A(c(x1)))
   A(c(b(x1))) -> b(c(A(x1)))
   B(C(a(x1))) -> a(C(B(x1)))
   a(A(x1)) -> x1
   A(a(x1)) -> x1
   b(B(x1)) -> x1
   B(b(x1)) -> x1
   c(C(x1)) -> x1
   C(c(x1)) -> x1

Q is empty.

----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(A(x_1)) = 1 + x_1
   POL(B(x_1)) = x_1
   POL(C(x_1)) = x_1
   POL(a(x_1)) = x_1
   POL(b(x_1)) = x_1
   POL(c(x_1)) = x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   a(A(x1)) -> x1
   A(a(x1)) -> x1




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(b(c(x1))) -> c(b(a(x1)))
   C(B(A(x1))) -> A(B(C(x1)))
   b(a(C(x1))) -> C(a(b(x1)))
   c(A(B(x1))) -> B(A(c(x1)))
   A(c(b(x1))) -> b(c(A(x1)))
   B(C(a(x1))) -> a(C(B(x1)))
   b(B(x1)) -> x1
   B(b(x1)) -> x1
   c(C(x1)) -> x1
   C(c(x1)) -> x1

Q is empty.

----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(A(x_1)) = x_1
   POL(B(x_1)) = 1 + x_1
   POL(C(x_1)) = x_1
   POL(a(x_1)) = x_1
   POL(b(x_1)) = x_1
   POL(c(x_1)) = x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   b(B(x1)) -> x1
   B(b(x1)) -> x1




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(b(c(x1))) -> c(b(a(x1)))
   C(B(A(x1))) -> A(B(C(x1)))
   b(a(C(x1))) -> C(a(b(x1)))
   c(A(B(x1))) -> B(A(c(x1)))
   A(c(b(x1))) -> b(c(A(x1)))
   B(C(a(x1))) -> a(C(B(x1)))
   c(C(x1)) -> x1
   C(c(x1)) -> x1

Q is empty.

----------------------------------------

(5) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(A(x_1)) = x_1
   POL(B(x_1)) = x_1
   POL(C(x_1)) = 1 + x_1
   POL(a(x_1)) = x_1
   POL(b(x_1)) = x_1
   POL(c(x_1)) = x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   c(C(x1)) -> x1
   C(c(x1)) -> x1




----------------------------------------

(6)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(b(c(x1))) -> c(b(a(x1)))
   C(B(A(x1))) -> A(B(C(x1)))
   b(a(C(x1))) -> C(a(b(x1)))
   c(A(B(x1))) -> B(A(c(x1)))
   A(c(b(x1))) -> b(c(A(x1)))
   B(C(a(x1))) -> a(C(B(x1)))

Q is empty.

----------------------------------------

(7) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A^1(b(c(x1))) -> C^1(b(a(x1)))
   A^1(b(c(x1))) -> B^1(a(x1))
   A^1(b(c(x1))) -> A^1(x1)
   C^2(B(A(x1))) -> A^2(B(C(x1)))
   C^2(B(A(x1))) -> B^2(C(x1))
   C^2(B(A(x1))) -> C^2(x1)
   B^1(a(C(x1))) -> C^2(a(b(x1)))
   B^1(a(C(x1))) -> A^1(b(x1))
   B^1(a(C(x1))) -> B^1(x1)
   C^1(A(B(x1))) -> B^2(A(c(x1)))
   C^1(A(B(x1))) -> A^2(c(x1))
   C^1(A(B(x1))) -> C^1(x1)
   A^2(c(b(x1))) -> B^1(c(A(x1)))
   A^2(c(b(x1))) -> C^1(A(x1))
   A^2(c(b(x1))) -> A^2(x1)
   B^2(C(a(x1))) -> A^1(C(B(x1)))
   B^2(C(a(x1))) -> C^2(B(x1))
   B^2(C(a(x1))) -> B^2(x1)

The TRS R consists of the following rules:

   a(b(c(x1))) -> c(b(a(x1)))
   C(B(A(x1))) -> A(B(C(x1)))
   b(a(C(x1))) -> C(a(b(x1)))
   c(A(B(x1))) -> B(A(c(x1)))
   A(c(b(x1))) -> b(c(A(x1)))
   B(C(a(x1))) -> a(C(B(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.

Strictly oriented dependency pairs:

   A^1(b(c(x1))) -> B^1(a(x1))
   A^1(b(c(x1))) -> A^1(x1)
   C^2(B(A(x1))) -> B^2(C(x1))
   C^2(B(A(x1))) -> C^2(x1)
   B^1(a(C(x1))) -> A^1(b(x1))
   B^1(a(C(x1))) -> B^1(x1)
   C^1(A(B(x1))) -> A^2(c(x1))
   C^1(A(B(x1))) -> C^1(x1)
   A^2(c(b(x1))) -> C^1(A(x1))
   A^2(c(b(x1))) -> A^2(x1)
   B^2(C(a(x1))) -> C^2(B(x1))
   B^2(C(a(x1))) -> B^2(x1)


Used ordering: Polynomial interpretation [POLO]:

   POL(A(x_1)) = 1 + x_1
   POL(A^1(x_1)) = 1 + 2*x_1
   POL(A^2(x_1)) = 2*x_1
   POL(B(x_1)) = 2*x_1
   POL(B^1(x_1)) = 2*x_1
   POL(B^2(x_1)) = 1 + 2*x_1
   POL(C(x_1)) = 1 + x_1
   POL(C^1(x_1)) = 1 + 2*x_1
   POL(C^2(x_1)) = 2*x_1
   POL(a(x_1)) = 2*x_1
   POL(b(x_1)) = 1 + x_1
   POL(c(x_1)) = 2*x_1


----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A^1(b(c(x1))) -> C^1(b(a(x1)))
   C^2(B(A(x1))) -> A^2(B(C(x1)))
   B^1(a(C(x1))) -> C^2(a(b(x1)))
   C^1(A(B(x1))) -> B^2(A(c(x1)))
   A^2(c(b(x1))) -> B^1(c(A(x1)))
   B^2(C(a(x1))) -> A^1(C(B(x1)))

The TRS R consists of the following rules:

   a(b(c(x1))) -> c(b(a(x1)))
   C(B(A(x1))) -> A(B(C(x1)))
   b(a(C(x1))) -> C(a(b(x1)))
   c(A(B(x1))) -> B(A(c(x1)))
   A(c(b(x1))) -> b(c(A(x1)))
   B(C(a(x1))) -> a(C(B(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs.
----------------------------------------

(12)
Complex Obligation (AND)

----------------------------------------

(13)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A^2(c(b(x1))) -> B^1(c(A(x1)))
   B^1(a(C(x1))) -> C^2(a(b(x1)))
   C^2(B(A(x1))) -> A^2(B(C(x1)))

The TRS R consists of the following rules:

   a(b(c(x1))) -> c(b(a(x1)))
   C(B(A(x1))) -> A(B(C(x1)))
   b(a(C(x1))) -> C(a(b(x1)))
   c(A(B(x1))) -> B(A(c(x1)))
   A(c(b(x1))) -> b(c(A(x1)))
   B(C(a(x1))) -> a(C(B(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(14) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   B^1(a(C(x1))) -> C^2(a(b(x1)))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(A(x_1)) = 1
   POL(A^2(x_1)) = 1
   POL(B(x_1)) = 1
   POL(B^1(x_1)) = 1
   POL(C(x_1)) = x_1
   POL(C^2(x_1)) = x_1
   POL(a(x_1)) = 0
   POL(b(x_1)) = 0
   POL(c(x_1)) = x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   A(c(b(x1))) -> b(c(A(x1)))
   b(a(C(x1))) -> C(a(b(x1)))
   C(B(A(x1))) -> A(B(C(x1)))
   c(A(B(x1))) -> B(A(c(x1)))
   B(C(a(x1))) -> a(C(B(x1)))
   a(b(c(x1))) -> c(b(a(x1)))


----------------------------------------

(15)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A^2(c(b(x1))) -> B^1(c(A(x1)))
   C^2(B(A(x1))) -> A^2(B(C(x1)))

The TRS R consists of the following rules:

   a(b(c(x1))) -> c(b(a(x1)))
   C(B(A(x1))) -> A(B(C(x1)))
   b(a(C(x1))) -> C(a(b(x1)))
   c(A(B(x1))) -> B(A(c(x1)))
   A(c(b(x1))) -> b(c(A(x1)))
   B(C(a(x1))) -> a(C(B(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(16) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 2 less nodes.
----------------------------------------

(17)
TRUE

----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C^1(A(B(x1))) -> B^2(A(c(x1)))
   B^2(C(a(x1))) -> A^1(C(B(x1)))
   A^1(b(c(x1))) -> C^1(b(a(x1)))

The TRS R consists of the following rules:

   a(b(c(x1))) -> c(b(a(x1)))
   C(B(A(x1))) -> A(B(C(x1)))
   b(a(C(x1))) -> C(a(b(x1)))
   c(A(B(x1))) -> B(A(c(x1)))
   A(c(b(x1))) -> b(c(A(x1)))
   B(C(a(x1))) -> a(C(B(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   B^2(C(a(x1))) -> A^1(C(B(x1)))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(A(x_1)) = x_1
   POL(A^1(x_1)) = x_1
   POL(B(x_1)) = 0
   POL(B^2(x_1)) = 1
   POL(C(x_1)) = 0
   POL(C^1(x_1)) = 1
   POL(a(x_1)) = x_1
   POL(b(x_1)) = 1
   POL(c(x_1)) = 1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   c(A(B(x1))) -> B(A(c(x1)))
   B(C(a(x1))) -> a(C(B(x1)))
   a(b(c(x1))) -> c(b(a(x1)))
   A(c(b(x1))) -> b(c(A(x1)))
   b(a(C(x1))) -> C(a(b(x1)))
   C(B(A(x1))) -> A(B(C(x1)))


----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C^1(A(B(x1))) -> B^2(A(c(x1)))
   A^1(b(c(x1))) -> C^1(b(a(x1)))

The TRS R consists of the following rules:

   a(b(c(x1))) -> c(b(a(x1)))
   C(B(A(x1))) -> A(B(C(x1)))
   b(a(C(x1))) -> C(a(b(x1)))
   c(A(B(x1))) -> B(A(c(x1)))
   A(c(b(x1))) -> b(c(A(x1)))
   B(C(a(x1))) -> a(C(B(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 2 less nodes.
----------------------------------------

(22)
TRUE
