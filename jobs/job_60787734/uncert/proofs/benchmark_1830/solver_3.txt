YES

Problem 1: 

(VAR vu95NonEmpty x1)
(RULES
A(a(x1)) -> x1
A(c(b(x1))) -> b(c(A(x1)))
B(C(a(x1))) -> a(C(B(x1)))
B(b(x1)) -> x1
C(B(A(x1))) -> A(B(C(x1)))
C(c(x1)) -> x1
a(A(x1)) -> x1
a(b(c(x1))) -> c(b(a(x1)))
b(B(x1)) -> x1
b(a(C(x1))) -> C(a(b(x1)))
c(A(B(x1))) -> B(A(c(x1)))
c(C(x1)) -> x1
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 ASharp(c(b(x1))) -> ASharp(x1)
 ASharp(c(b(x1))) -> bSharp(c(A(x1)))
 ASharp(c(b(x1))) -> cSharp(A(x1))
 BSharp(C(a(x1))) -> BSharp(x1)
 BSharp(C(a(x1))) -> CSharp(B(x1))
 BSharp(C(a(x1))) -> aSharp(C(B(x1)))
 CSharp(B(A(x1))) -> ASharp(B(C(x1)))
 CSharp(B(A(x1))) -> BSharp(C(x1))
 CSharp(B(A(x1))) -> CSharp(x1)
 aSharp(b(c(x1))) -> aSharp(x1)
 aSharp(b(c(x1))) -> bSharp(a(x1))
 aSharp(b(c(x1))) -> cSharp(b(a(x1)))
 bSharp(a(C(x1))) -> CSharp(a(b(x1)))
 bSharp(a(C(x1))) -> aSharp(b(x1))
 bSharp(a(C(x1))) -> bSharp(x1)
 cSharp(A(B(x1))) -> ASharp(c(x1))
 cSharp(A(B(x1))) -> BSharp(A(c(x1)))
 cSharp(A(B(x1))) -> cSharp(x1)
-> Rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1

Problem 1: 

SCC Processor:
-> Pairs:
 ASharp(c(b(x1))) -> ASharp(x1)
 ASharp(c(b(x1))) -> bSharp(c(A(x1)))
 ASharp(c(b(x1))) -> cSharp(A(x1))
 BSharp(C(a(x1))) -> BSharp(x1)
 BSharp(C(a(x1))) -> CSharp(B(x1))
 BSharp(C(a(x1))) -> aSharp(C(B(x1)))
 CSharp(B(A(x1))) -> ASharp(B(C(x1)))
 CSharp(B(A(x1))) -> BSharp(C(x1))
 CSharp(B(A(x1))) -> CSharp(x1)
 aSharp(b(c(x1))) -> aSharp(x1)
 aSharp(b(c(x1))) -> bSharp(a(x1))
 aSharp(b(c(x1))) -> cSharp(b(a(x1)))
 bSharp(a(C(x1))) -> CSharp(a(b(x1)))
 bSharp(a(C(x1))) -> aSharp(b(x1))
 bSharp(a(C(x1))) -> bSharp(x1)
 cSharp(A(B(x1))) -> ASharp(c(x1))
 cSharp(A(B(x1))) -> BSharp(A(c(x1)))
 cSharp(A(B(x1))) -> cSharp(x1)
-> Rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ASharp(c(b(x1))) -> ASharp(x1)
 ASharp(c(b(x1))) -> bSharp(c(A(x1)))
 ASharp(c(b(x1))) -> cSharp(A(x1))
 BSharp(C(a(x1))) -> BSharp(x1)
 BSharp(C(a(x1))) -> CSharp(B(x1))
 BSharp(C(a(x1))) -> aSharp(C(B(x1)))
 CSharp(B(A(x1))) -> ASharp(B(C(x1)))
 CSharp(B(A(x1))) -> BSharp(C(x1))
 CSharp(B(A(x1))) -> CSharp(x1)
 aSharp(b(c(x1))) -> aSharp(x1)
 aSharp(b(c(x1))) -> bSharp(a(x1))
 aSharp(b(c(x1))) -> cSharp(b(a(x1)))
 bSharp(a(C(x1))) -> CSharp(a(b(x1)))
 bSharp(a(C(x1))) -> aSharp(b(x1))
 bSharp(a(C(x1))) -> bSharp(x1)
 cSharp(A(B(x1))) -> ASharp(c(x1))
 cSharp(A(B(x1))) -> BSharp(A(c(x1)))
 cSharp(A(B(x1))) -> cSharp(x1)
->->-> Rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 ASharp(c(b(x1))) -> ASharp(x1)
 ASharp(c(b(x1))) -> bSharp(c(A(x1)))
 ASharp(c(b(x1))) -> cSharp(A(x1))
 BSharp(C(a(x1))) -> BSharp(x1)
 BSharp(C(a(x1))) -> CSharp(B(x1))
 BSharp(C(a(x1))) -> aSharp(C(B(x1)))
 CSharp(B(A(x1))) -> ASharp(B(C(x1)))
 CSharp(B(A(x1))) -> BSharp(C(x1))
 CSharp(B(A(x1))) -> CSharp(x1)
 aSharp(b(c(x1))) -> aSharp(x1)
 aSharp(b(c(x1))) -> bSharp(a(x1))
 aSharp(b(c(x1))) -> cSharp(b(a(x1)))
 bSharp(a(C(x1))) -> CSharp(a(b(x1)))
 bSharp(a(C(x1))) -> aSharp(b(x1))
 bSharp(a(C(x1))) -> bSharp(x1)
 cSharp(A(B(x1))) -> ASharp(c(x1))
 cSharp(A(B(x1))) -> BSharp(A(c(x1)))
 cSharp(A(B(x1))) -> cSharp(x1)
-> Rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1
-> Usable rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[A](X) = 2.X + 2
[B](X) = 2.X + 1
[C](X) = 2.X + 2
[a](X) = 2.X + 1
[b](X) = 2.X + 2
[c](X) = 2.X + 1
[fSNonEmpty] = 0
[ASharp](X) = 2.X + 2
[BSharp](X) = 2.X + 2
[CSharp](X) = 2.X + 2
[aSharp](X) = 2.X + 2
[bSharp](X) = 2.X + 2
[cSharp](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 ASharp(c(b(x1))) -> bSharp(c(A(x1)))
 ASharp(c(b(x1))) -> cSharp(A(x1))
 BSharp(C(a(x1))) -> BSharp(x1)
 BSharp(C(a(x1))) -> CSharp(B(x1))
 BSharp(C(a(x1))) -> aSharp(C(B(x1)))
 CSharp(B(A(x1))) -> ASharp(B(C(x1)))
 CSharp(B(A(x1))) -> BSharp(C(x1))
 CSharp(B(A(x1))) -> CSharp(x1)
 aSharp(b(c(x1))) -> aSharp(x1)
 aSharp(b(c(x1))) -> bSharp(a(x1))
 aSharp(b(c(x1))) -> cSharp(b(a(x1)))
 bSharp(a(C(x1))) -> CSharp(a(b(x1)))
 bSharp(a(C(x1))) -> aSharp(b(x1))
 bSharp(a(C(x1))) -> bSharp(x1)
 cSharp(A(B(x1))) -> ASharp(c(x1))
 cSharp(A(B(x1))) -> BSharp(A(c(x1)))
 cSharp(A(B(x1))) -> cSharp(x1)
-> Rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ASharp(c(b(x1))) -> bSharp(c(A(x1)))
 ASharp(c(b(x1))) -> cSharp(A(x1))
 BSharp(C(a(x1))) -> BSharp(x1)
 BSharp(C(a(x1))) -> CSharp(B(x1))
 BSharp(C(a(x1))) -> aSharp(C(B(x1)))
 CSharp(B(A(x1))) -> ASharp(B(C(x1)))
 CSharp(B(A(x1))) -> BSharp(C(x1))
 CSharp(B(A(x1))) -> CSharp(x1)
 aSharp(b(c(x1))) -> aSharp(x1)
 aSharp(b(c(x1))) -> bSharp(a(x1))
 aSharp(b(c(x1))) -> cSharp(b(a(x1)))
 bSharp(a(C(x1))) -> CSharp(a(b(x1)))
 bSharp(a(C(x1))) -> aSharp(b(x1))
 bSharp(a(C(x1))) -> bSharp(x1)
 cSharp(A(B(x1))) -> ASharp(c(x1))
 cSharp(A(B(x1))) -> BSharp(A(c(x1)))
 cSharp(A(B(x1))) -> cSharp(x1)
->->-> Rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 ASharp(c(b(x1))) -> bSharp(c(A(x1)))
 ASharp(c(b(x1))) -> cSharp(A(x1))
 BSharp(C(a(x1))) -> BSharp(x1)
 BSharp(C(a(x1))) -> CSharp(B(x1))
 BSharp(C(a(x1))) -> aSharp(C(B(x1)))
 CSharp(B(A(x1))) -> ASharp(B(C(x1)))
 CSharp(B(A(x1))) -> BSharp(C(x1))
 CSharp(B(A(x1))) -> CSharp(x1)
 aSharp(b(c(x1))) -> aSharp(x1)
 aSharp(b(c(x1))) -> bSharp(a(x1))
 aSharp(b(c(x1))) -> cSharp(b(a(x1)))
 bSharp(a(C(x1))) -> CSharp(a(b(x1)))
 bSharp(a(C(x1))) -> aSharp(b(x1))
 bSharp(a(C(x1))) -> bSharp(x1)
 cSharp(A(B(x1))) -> ASharp(c(x1))
 cSharp(A(B(x1))) -> BSharp(A(c(x1)))
 cSharp(A(B(x1))) -> cSharp(x1)
-> Rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1
-> Usable rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[A](X) = X
[B](X) = 2.X + 2
[C](X) = 2.X + 2
[a](X) = X
[b](X) = 2.X + 1
[c](X) = 2.X + 1
[fSNonEmpty] = 0
[ASharp](X) = X
[BSharp](X) = 2.X + 2
[CSharp](X) = 2.X + 2
[aSharp](X) = X
[bSharp](X) = 2.X
[cSharp](X) = 2.X

Problem 1: 

SCC Processor:
-> Pairs:
 ASharp(c(b(x1))) -> cSharp(A(x1))
 BSharp(C(a(x1))) -> BSharp(x1)
 BSharp(C(a(x1))) -> CSharp(B(x1))
 BSharp(C(a(x1))) -> aSharp(C(B(x1)))
 CSharp(B(A(x1))) -> ASharp(B(C(x1)))
 CSharp(B(A(x1))) -> BSharp(C(x1))
 CSharp(B(A(x1))) -> CSharp(x1)
 aSharp(b(c(x1))) -> aSharp(x1)
 aSharp(b(c(x1))) -> bSharp(a(x1))
 aSharp(b(c(x1))) -> cSharp(b(a(x1)))
 bSharp(a(C(x1))) -> CSharp(a(b(x1)))
 bSharp(a(C(x1))) -> aSharp(b(x1))
 bSharp(a(C(x1))) -> bSharp(x1)
 cSharp(A(B(x1))) -> ASharp(c(x1))
 cSharp(A(B(x1))) -> BSharp(A(c(x1)))
 cSharp(A(B(x1))) -> cSharp(x1)
-> Rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ASharp(c(b(x1))) -> cSharp(A(x1))
 BSharp(C(a(x1))) -> BSharp(x1)
 BSharp(C(a(x1))) -> CSharp(B(x1))
 BSharp(C(a(x1))) -> aSharp(C(B(x1)))
 CSharp(B(A(x1))) -> ASharp(B(C(x1)))
 CSharp(B(A(x1))) -> BSharp(C(x1))
 CSharp(B(A(x1))) -> CSharp(x1)
 aSharp(b(c(x1))) -> aSharp(x1)
 aSharp(b(c(x1))) -> bSharp(a(x1))
 aSharp(b(c(x1))) -> cSharp(b(a(x1)))
 bSharp(a(C(x1))) -> CSharp(a(b(x1)))
 bSharp(a(C(x1))) -> aSharp(b(x1))
 bSharp(a(C(x1))) -> bSharp(x1)
 cSharp(A(B(x1))) -> ASharp(c(x1))
 cSharp(A(B(x1))) -> BSharp(A(c(x1)))
 cSharp(A(B(x1))) -> cSharp(x1)
->->-> Rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 ASharp(c(b(x1))) -> cSharp(A(x1))
 BSharp(C(a(x1))) -> BSharp(x1)
 BSharp(C(a(x1))) -> CSharp(B(x1))
 BSharp(C(a(x1))) -> aSharp(C(B(x1)))
 CSharp(B(A(x1))) -> ASharp(B(C(x1)))
 CSharp(B(A(x1))) -> BSharp(C(x1))
 CSharp(B(A(x1))) -> CSharp(x1)
 aSharp(b(c(x1))) -> aSharp(x1)
 aSharp(b(c(x1))) -> bSharp(a(x1))
 aSharp(b(c(x1))) -> cSharp(b(a(x1)))
 bSharp(a(C(x1))) -> CSharp(a(b(x1)))
 bSharp(a(C(x1))) -> aSharp(b(x1))
 bSharp(a(C(x1))) -> bSharp(x1)
 cSharp(A(B(x1))) -> ASharp(c(x1))
 cSharp(A(B(x1))) -> BSharp(A(c(x1)))
 cSharp(A(B(x1))) -> cSharp(x1)
-> Rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1
-> Usable rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[A](X) = 2.X + 2
[B](X) = 2.X + 2
[C](X) = 2.X + 2
[a](X) = 2.X + 2
[b](X) = 2.X + 2
[c](X) = 2.X + 2
[fSNonEmpty] = 0
[ASharp](X) = X + 2
[BSharp](X) = 2.X + 2
[CSharp](X) = 2.X + 2
[aSharp](X) = 2.X + 2
[bSharp](X) = 2.X + 2
[cSharp](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 BSharp(C(a(x1))) -> BSharp(x1)
 BSharp(C(a(x1))) -> CSharp(B(x1))
 BSharp(C(a(x1))) -> aSharp(C(B(x1)))
 CSharp(B(A(x1))) -> ASharp(B(C(x1)))
 CSharp(B(A(x1))) -> BSharp(C(x1))
 CSharp(B(A(x1))) -> CSharp(x1)
 aSharp(b(c(x1))) -> aSharp(x1)
 aSharp(b(c(x1))) -> bSharp(a(x1))
 aSharp(b(c(x1))) -> cSharp(b(a(x1)))
 bSharp(a(C(x1))) -> CSharp(a(b(x1)))
 bSharp(a(C(x1))) -> aSharp(b(x1))
 bSharp(a(C(x1))) -> bSharp(x1)
 cSharp(A(B(x1))) -> ASharp(c(x1))
 cSharp(A(B(x1))) -> BSharp(A(c(x1)))
 cSharp(A(B(x1))) -> cSharp(x1)
-> Rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 BSharp(C(a(x1))) -> BSharp(x1)
 BSharp(C(a(x1))) -> CSharp(B(x1))
 BSharp(C(a(x1))) -> aSharp(C(B(x1)))
 CSharp(B(A(x1))) -> BSharp(C(x1))
 CSharp(B(A(x1))) -> CSharp(x1)
 aSharp(b(c(x1))) -> aSharp(x1)
 aSharp(b(c(x1))) -> bSharp(a(x1))
 aSharp(b(c(x1))) -> cSharp(b(a(x1)))
 bSharp(a(C(x1))) -> CSharp(a(b(x1)))
 bSharp(a(C(x1))) -> aSharp(b(x1))
 bSharp(a(C(x1))) -> bSharp(x1)
 cSharp(A(B(x1))) -> BSharp(A(c(x1)))
 cSharp(A(B(x1))) -> cSharp(x1)
->->-> Rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 BSharp(C(a(x1))) -> BSharp(x1)
 BSharp(C(a(x1))) -> CSharp(B(x1))
 BSharp(C(a(x1))) -> aSharp(C(B(x1)))
 CSharp(B(A(x1))) -> BSharp(C(x1))
 CSharp(B(A(x1))) -> CSharp(x1)
 aSharp(b(c(x1))) -> aSharp(x1)
 aSharp(b(c(x1))) -> bSharp(a(x1))
 aSharp(b(c(x1))) -> cSharp(b(a(x1)))
 bSharp(a(C(x1))) -> CSharp(a(b(x1)))
 bSharp(a(C(x1))) -> aSharp(b(x1))
 bSharp(a(C(x1))) -> bSharp(x1)
 cSharp(A(B(x1))) -> BSharp(A(c(x1)))
 cSharp(A(B(x1))) -> cSharp(x1)
-> Rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1
-> Usable rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[A](X) = 2.X + 2
[B](X) = 2.X + 2
[C](X) = 2.X + 2
[a](X) = 2.X + 2
[b](X) = X
[c](X) = X
[fSNonEmpty] = 0
[ASharp](X) = 0
[BSharp](X) = 2.X + 2
[CSharp](X) = 2.X + 2
[aSharp](X) = 2.X + 2
[bSharp](X) = X
[cSharp](X) = X

Problem 1: 

SCC Processor:
-> Pairs:
 BSharp(C(a(x1))) -> CSharp(B(x1))
 BSharp(C(a(x1))) -> aSharp(C(B(x1)))
 CSharp(B(A(x1))) -> BSharp(C(x1))
 CSharp(B(A(x1))) -> CSharp(x1)
 aSharp(b(c(x1))) -> aSharp(x1)
 aSharp(b(c(x1))) -> bSharp(a(x1))
 aSharp(b(c(x1))) -> cSharp(b(a(x1)))
 bSharp(a(C(x1))) -> CSharp(a(b(x1)))
 bSharp(a(C(x1))) -> aSharp(b(x1))
 bSharp(a(C(x1))) -> bSharp(x1)
 cSharp(A(B(x1))) -> BSharp(A(c(x1)))
 cSharp(A(B(x1))) -> cSharp(x1)
-> Rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 BSharp(C(a(x1))) -> CSharp(B(x1))
 BSharp(C(a(x1))) -> aSharp(C(B(x1)))
 CSharp(B(A(x1))) -> BSharp(C(x1))
 CSharp(B(A(x1))) -> CSharp(x1)
 aSharp(b(c(x1))) -> aSharp(x1)
 aSharp(b(c(x1))) -> bSharp(a(x1))
 aSharp(b(c(x1))) -> cSharp(b(a(x1)))
 bSharp(a(C(x1))) -> CSharp(a(b(x1)))
 bSharp(a(C(x1))) -> aSharp(b(x1))
 bSharp(a(C(x1))) -> bSharp(x1)
 cSharp(A(B(x1))) -> BSharp(A(c(x1)))
 cSharp(A(B(x1))) -> cSharp(x1)
->->-> Rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 BSharp(C(a(x1))) -> CSharp(B(x1))
 BSharp(C(a(x1))) -> aSharp(C(B(x1)))
 CSharp(B(A(x1))) -> BSharp(C(x1))
 CSharp(B(A(x1))) -> CSharp(x1)
 aSharp(b(c(x1))) -> aSharp(x1)
 aSharp(b(c(x1))) -> bSharp(a(x1))
 aSharp(b(c(x1))) -> cSharp(b(a(x1)))
 bSharp(a(C(x1))) -> CSharp(a(b(x1)))
 bSharp(a(C(x1))) -> aSharp(b(x1))
 bSharp(a(C(x1))) -> bSharp(x1)
 cSharp(A(B(x1))) -> BSharp(A(c(x1)))
 cSharp(A(B(x1))) -> cSharp(x1)
-> Rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1
-> Usable rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[A](X) = 2.X + 2
[B](X) = X
[C](X) = 2.X + 2
[a](X) = 2.X + 2
[b](X) = 2.X + 2
[c](X) = X
[fSNonEmpty] = 0
[ASharp](X) = 0
[BSharp](X) = X
[CSharp](X) = 2.X
[aSharp](X) = 2.X + 2
[bSharp](X) = 2.X
[cSharp](X) = X

Problem 1: 

SCC Processor:
-> Pairs:
 BSharp(C(a(x1))) -> aSharp(C(B(x1)))
 CSharp(B(A(x1))) -> BSharp(C(x1))
 CSharp(B(A(x1))) -> CSharp(x1)
 aSharp(b(c(x1))) -> aSharp(x1)
 aSharp(b(c(x1))) -> bSharp(a(x1))
 aSharp(b(c(x1))) -> cSharp(b(a(x1)))
 bSharp(a(C(x1))) -> CSharp(a(b(x1)))
 bSharp(a(C(x1))) -> aSharp(b(x1))
 bSharp(a(C(x1))) -> bSharp(x1)
 cSharp(A(B(x1))) -> BSharp(A(c(x1)))
 cSharp(A(B(x1))) -> cSharp(x1)
-> Rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 BSharp(C(a(x1))) -> aSharp(C(B(x1)))
 CSharp(B(A(x1))) -> BSharp(C(x1))
 CSharp(B(A(x1))) -> CSharp(x1)
 aSharp(b(c(x1))) -> aSharp(x1)
 aSharp(b(c(x1))) -> bSharp(a(x1))
 aSharp(b(c(x1))) -> cSharp(b(a(x1)))
 bSharp(a(C(x1))) -> CSharp(a(b(x1)))
 bSharp(a(C(x1))) -> aSharp(b(x1))
 bSharp(a(C(x1))) -> bSharp(x1)
 cSharp(A(B(x1))) -> BSharp(A(c(x1)))
 cSharp(A(B(x1))) -> cSharp(x1)
->->-> Rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 BSharp(C(a(x1))) -> aSharp(C(B(x1)))
 CSharp(B(A(x1))) -> BSharp(C(x1))
 CSharp(B(A(x1))) -> CSharp(x1)
 aSharp(b(c(x1))) -> aSharp(x1)
 aSharp(b(c(x1))) -> bSharp(a(x1))
 aSharp(b(c(x1))) -> cSharp(b(a(x1)))
 bSharp(a(C(x1))) -> CSharp(a(b(x1)))
 bSharp(a(C(x1))) -> aSharp(b(x1))
 bSharp(a(C(x1))) -> bSharp(x1)
 cSharp(A(B(x1))) -> BSharp(A(c(x1)))
 cSharp(A(B(x1))) -> cSharp(x1)
-> Rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1
-> Usable rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[A](X) = 2.X + 2
[B](X) = 2.X + 2
[C](X) = X
[a](X) = X + 2
[b](X) = X + 2
[c](X) = X
[fSNonEmpty] = 0
[ASharp](X) = 0
[BSharp](X) = 2.X + 2
[CSharp](X) = X
[aSharp](X) = X + 2
[bSharp](X) = X + 2
[cSharp](X) = X

Problem 1: 

SCC Processor:
-> Pairs:
 CSharp(B(A(x1))) -> BSharp(C(x1))
 CSharp(B(A(x1))) -> CSharp(x1)
 aSharp(b(c(x1))) -> aSharp(x1)
 aSharp(b(c(x1))) -> bSharp(a(x1))
 aSharp(b(c(x1))) -> cSharp(b(a(x1)))
 bSharp(a(C(x1))) -> CSharp(a(b(x1)))
 bSharp(a(C(x1))) -> aSharp(b(x1))
 bSharp(a(C(x1))) -> bSharp(x1)
 cSharp(A(B(x1))) -> BSharp(A(c(x1)))
 cSharp(A(B(x1))) -> cSharp(x1)
-> Rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 cSharp(A(B(x1))) -> cSharp(x1)
->->-> Rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1
->->Cycle:
->->-> Pairs:
 CSharp(B(A(x1))) -> CSharp(x1)
->->-> Rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1
->->Cycle:
->->-> Pairs:
 aSharp(b(c(x1))) -> aSharp(x1)
 aSharp(b(c(x1))) -> bSharp(a(x1))
 bSharp(a(C(x1))) -> aSharp(b(x1))
 bSharp(a(C(x1))) -> bSharp(x1)
->->-> Rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1


The problem is decomposed in 3 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 cSharp(A(B(x1))) -> cSharp(x1)
-> Rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1
->Projection:
 pi(cSharp) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 CSharp(B(A(x1))) -> CSharp(x1)
-> Rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1
->Projection:
 pi(CSharp) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Reduction Pair Processor:
-> Pairs:
 aSharp(b(c(x1))) -> aSharp(x1)
 aSharp(b(c(x1))) -> bSharp(a(x1))
 bSharp(a(C(x1))) -> aSharp(b(x1))
 bSharp(a(C(x1))) -> bSharp(x1)
-> Rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1
-> Usable rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[A](X) = X + 2
[B](X) = X + 2
[C](X) = X + 1
[a](X) = X + 2
[b](X) = X + 2
[c](X) = X
[fSNonEmpty] = 0
[ASharp](X) = 0
[BSharp](X) = 0
[CSharp](X) = 0
[aSharp](X) = 2.X + 2
[bSharp](X) = 2.X + 2
[cSharp](X) = 0

Problem 1.3: 

SCC Processor:
-> Pairs:
 aSharp(b(c(x1))) -> bSharp(a(x1))
 bSharp(a(C(x1))) -> aSharp(b(x1))
 bSharp(a(C(x1))) -> bSharp(x1)
-> Rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 aSharp(b(c(x1))) -> bSharp(a(x1))
 bSharp(a(C(x1))) -> aSharp(b(x1))
 bSharp(a(C(x1))) -> bSharp(x1)
->->-> Rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1

Problem 1.3: 

Reduction Pair Processor:
-> Pairs:
 aSharp(b(c(x1))) -> bSharp(a(x1))
 bSharp(a(C(x1))) -> aSharp(b(x1))
 bSharp(a(C(x1))) -> bSharp(x1)
-> Rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1
-> Usable rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[A](X) = 2.X + 2
[B](X) = 2.X + 2
[C](X) = 2.X + 2
[a](X) = 2.X + 2
[b](X) = 2.X + 2
[c](X) = 2.X + 2
[fSNonEmpty] = 0
[ASharp](X) = 0
[BSharp](X) = 0
[CSharp](X) = 0
[aSharp](X) = 2.X + 1
[bSharp](X) = 2.X + 2
[cSharp](X) = 0

Problem 1.3: 

SCC Processor:
-> Pairs:
 bSharp(a(C(x1))) -> aSharp(b(x1))
 bSharp(a(C(x1))) -> bSharp(x1)
-> Rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 bSharp(a(C(x1))) -> bSharp(x1)
->->-> Rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1

Problem 1.3: 

Subterm Processor:
-> Pairs:
 bSharp(a(C(x1))) -> bSharp(x1)
-> Rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1
->Projection:
 pi(bSharp) = 1

Problem 1.3: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 A(a(x1)) -> x1
 A(c(b(x1))) -> b(c(A(x1)))
 B(C(a(x1))) -> a(C(B(x1)))
 B(b(x1)) -> x1
 C(B(A(x1))) -> A(B(C(x1)))
 C(c(x1)) -> x1
 a(A(x1)) -> x1
 a(b(c(x1))) -> c(b(a(x1)))
 b(B(x1)) -> x1
 b(a(C(x1))) -> C(a(b(x1)))
 c(A(B(x1))) -> B(A(c(x1)))
 c(C(x1)) -> x1
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
