YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/oAtyp.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRS Reverse [EQUIVALENT, 0 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 9 ms]
(4) QTRS
(5) DependencyPairsProof [EQUIVALENT, 0 ms]
(6) QDP
(7) DependencyGraphProof [EQUIVALENT, 0 ms]
(8) QDP
(9) MRRProof [EQUIVALENT, 19 ms]
(10) QDP
(11) QDPOrderProof [EQUIVALENT, 28 ms]
(12) QDP
(13) DependencyGraphProof [EQUIVALENT, 0 ms]
(14) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(a(x1)) -> b(b(b(x1)))
   a(x1) -> d(c(d(x1)))
   b(b(b(x1))) -> a(f(x1))
   b(b(x1)) -> c(c(c(x1)))
   c(c(x1)) -> d(d(d(x1)))
   c(d(d(x1))) -> f(x1)
   f(f(x1)) -> f(a(x1))

Q is empty.

----------------------------------------

(1) QTRS Reverse (EQUIVALENT)
We applied the QTRS Reverse Processor [REVERSE].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(a(x1)) -> b(b(b(x1)))
   a(x1) -> d(c(d(x1)))
   b(b(b(x1))) -> f(a(x1))
   b(b(x1)) -> c(c(c(x1)))
   c(c(x1)) -> d(d(d(x1)))
   d(d(c(x1))) -> f(x1)
   f(f(x1)) -> a(f(x1))

Q is empty.

----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(a(x_1)) = 39 + x_1
   POL(b(x_1)) = 26 + x_1
   POL(c(x_1)) = 17 + x_1
   POL(d(x_1)) = 11 + x_1
   POL(f(x_1)) = 39 + x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   b(b(x1)) -> c(c(c(x1)))
   c(c(x1)) -> d(d(d(x1)))




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(a(x1)) -> b(b(b(x1)))
   a(x1) -> d(c(d(x1)))
   b(b(b(x1))) -> f(a(x1))
   d(d(c(x1))) -> f(x1)
   f(f(x1)) -> a(f(x1))

Q is empty.

----------------------------------------

(5) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(a(x1)) -> B(b(b(x1)))
   A(a(x1)) -> B(b(x1))
   A(a(x1)) -> B(x1)
   A(x1) -> D(c(d(x1)))
   A(x1) -> D(x1)
   B(b(b(x1))) -> F(a(x1))
   B(b(b(x1))) -> A(x1)
   D(d(c(x1))) -> F(x1)
   F(f(x1)) -> A(f(x1))

The TRS R consists of the following rules:

   a(a(x1)) -> b(b(b(x1)))
   a(x1) -> d(c(d(x1)))
   b(b(b(x1))) -> f(a(x1))
   d(d(c(x1))) -> f(x1)
   f(f(x1)) -> a(f(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(b(b(x1))) -> F(a(x1))
   F(f(x1)) -> A(f(x1))
   A(a(x1)) -> B(b(b(x1)))
   B(b(b(x1))) -> A(x1)
   A(a(x1)) -> B(b(x1))
   A(a(x1)) -> B(x1)
   A(x1) -> D(x1)
   D(d(c(x1))) -> F(x1)

The TRS R consists of the following rules:

   a(a(x1)) -> b(b(b(x1)))
   a(x1) -> d(c(d(x1)))
   b(b(b(x1))) -> f(a(x1))
   d(d(c(x1))) -> f(x1)
   f(f(x1)) -> a(f(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.

Strictly oriented dependency pairs:

   B(b(b(x1))) -> A(x1)
   A(a(x1)) -> B(b(x1))
   A(a(x1)) -> B(x1)
   A(x1) -> D(x1)
   D(d(c(x1))) -> F(x1)


Used ordering: Polynomial interpretation [POLO]:

   POL(A(x_1)) = 1 + x_1
   POL(B(x_1)) = x_1
   POL(D(x_1)) = x_1
   POL(F(x_1)) = 1 + x_1
   POL(a(x_1)) = 3 + x_1
   POL(b(x_1)) = 2 + x_1
   POL(c(x_1)) = 3 + x_1
   POL(d(x_1)) = x_1
   POL(f(x_1)) = 3 + x_1


----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(b(b(x1))) -> F(a(x1))
   F(f(x1)) -> A(f(x1))
   A(a(x1)) -> B(b(b(x1)))

The TRS R consists of the following rules:

   a(a(x1)) -> b(b(b(x1)))
   a(x1) -> d(c(d(x1)))
   b(b(b(x1))) -> f(a(x1))
   d(d(c(x1))) -> f(x1)
   f(f(x1)) -> a(f(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   B(b(b(x1))) -> F(a(x1))
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(B(x_1)) =  	[[1A]] 	 +  	[[0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(b(x_1)) =  	[[0A], [-I], [0A]] 	 +  	[[-I, 1A, 0A], [0A, 0A, -I], [0A, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(F(x_1)) =  	[[0A]] 	 +  	[[-I, 0A, -I]] 	* 	x_1
>>>

   <<<
 POL(a(x_1)) =  	[[1A], [-I], [0A]] 	 +  	[[1A, 1A, 0A], [0A, 0A, -I], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(f(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[-I, 1A, 0A], [-I, 1A, 0A], [-I, 0A, -I]] 	* 	x_1
>>>

   <<<
 POL(A(x_1)) =  	[[0A]] 	 +  	[[0A, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(d(x_1)) =  	[[0A], [-I], [0A]] 	 +  	[[0A, 0A, 0A], [-I, -I, 0A], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(c(x_1)) =  	[[0A], [0A], [-I]] 	 +  	[[-I, -I, -I], [-I, -I, -I], [-I, -I, -I]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   b(b(b(x1))) -> f(a(x1))
   f(f(x1)) -> a(f(x1))
   a(a(x1)) -> b(b(b(x1)))
   a(x1) -> d(c(d(x1)))


----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(f(x1)) -> A(f(x1))
   A(a(x1)) -> B(b(b(x1)))

The TRS R consists of the following rules:

   a(a(x1)) -> b(b(b(x1)))
   a(x1) -> d(c(d(x1)))
   b(b(b(x1))) -> f(a(x1))
   d(d(c(x1))) -> f(x1)
   f(f(x1)) -> a(f(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 2 less nodes.
----------------------------------------

(14)
TRUE
