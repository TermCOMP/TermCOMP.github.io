YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/EgzhI.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 13 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) MRRProof [EQUIVALENT, 46 ms]
(6) QDP
(7) QDPOrderProof [EQUIVALENT, 4 ms]
(8) QDP
(9) DependencyGraphProof [EQUIVALENT, 0 ms]
(10) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   0(0(*(*(x1)))) -> *(*(1(1(x1))))
   1(1(*(*(x1)))) -> 0(0(#(#(x1))))
   #(#(0(0(x1)))) -> 0(0(#(#(x1))))
   #(#(1(1(x1)))) -> 1(1(#(#(x1))))
   #(#($($(x1)))) -> *(*($($(x1))))
   #(#(#(#(x1)))) -> #(#(x1))
   #(#(*(*(x1)))) -> *(*(x1))

Q is empty.

----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(#(x_1)) = 1 + x_1
   POL($(x_1)) = x_1
   POL(*(x_1)) = 1 + x_1
   POL(0(x_1)) = x_1
   POL(1(x_1)) = x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   #(#(#(#(x1)))) -> #(#(x1))
   #(#(*(*(x1)))) -> *(*(x1))




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   0(0(*(*(x1)))) -> *(*(1(1(x1))))
   1(1(*(*(x1)))) -> 0(0(#(#(x1))))
   #(#(0(0(x1)))) -> 0(0(#(#(x1))))
   #(#(1(1(x1)))) -> 1(1(#(#(x1))))
   #(#($($(x1)))) -> *(*($($(x1))))

Q is empty.

----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   0^1(0(*(*(x1)))) -> 1^1(1(x1))
   0^1(0(*(*(x1)))) -> 1^1(x1)
   1^1(1(*(*(x1)))) -> 0^1(0(#(#(x1))))
   1^1(1(*(*(x1)))) -> 0^1(#(#(x1)))
   1^1(1(*(*(x1)))) -> #^1(#(x1))
   1^1(1(*(*(x1)))) -> #^1(x1)
   #^1(#(0(0(x1)))) -> 0^1(0(#(#(x1))))
   #^1(#(0(0(x1)))) -> 0^1(#(#(x1)))
   #^1(#(0(0(x1)))) -> #^1(#(x1))
   #^1(#(0(0(x1)))) -> #^1(x1)
   #^1(#(1(1(x1)))) -> 1^1(1(#(#(x1))))
   #^1(#(1(1(x1)))) -> 1^1(#(#(x1)))
   #^1(#(1(1(x1)))) -> #^1(#(x1))
   #^1(#(1(1(x1)))) -> #^1(x1)

The TRS R consists of the following rules:

   0(0(*(*(x1)))) -> *(*(1(1(x1))))
   1(1(*(*(x1)))) -> 0(0(#(#(x1))))
   #(#(0(0(x1)))) -> 0(0(#(#(x1))))
   #(#(1(1(x1)))) -> 1(1(#(#(x1))))
   #(#($($(x1)))) -> *(*($($(x1))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.

Strictly oriented dependency pairs:

   0^1(0(*(*(x1)))) -> 1^1(x1)
   1^1(1(*(*(x1)))) -> 0^1(#(#(x1)))
   1^1(1(*(*(x1)))) -> #^1(#(x1))
   1^1(1(*(*(x1)))) -> #^1(x1)
   #^1(#(0(0(x1)))) -> 0^1(0(#(#(x1))))
   #^1(#(0(0(x1)))) -> 0^1(#(#(x1)))
   #^1(#(0(0(x1)))) -> #^1(#(x1))
   #^1(#(0(0(x1)))) -> #^1(x1)
   #^1(#(1(1(x1)))) -> 1^1(1(#(#(x1))))
   #^1(#(1(1(x1)))) -> 1^1(#(#(x1)))
   #^1(#(1(1(x1)))) -> #^1(#(x1))
   #^1(#(1(1(x1)))) -> #^1(x1)


Used ordering: Polynomial interpretation [POLO]:

   POL(#(x_1)) = x_1
   POL(#^1(x_1)) = 3 + 2*x_1
   POL($(x_1)) = x_1
   POL(*(x_1)) = x_1
   POL(0(x_1)) = 2 + x_1
   POL(0^1(x_1)) = 2*x_1
   POL(1(x_1)) = 2 + x_1
   POL(1^1(x_1)) = 2*x_1


----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   0^1(0(*(*(x1)))) -> 1^1(1(x1))
   1^1(1(*(*(x1)))) -> 0^1(0(#(#(x1))))

The TRS R consists of the following rules:

   0(0(*(*(x1)))) -> *(*(1(1(x1))))
   1(1(*(*(x1)))) -> 0(0(#(#(x1))))
   #(#(0(0(x1)))) -> 0(0(#(#(x1))))
   #(#(1(1(x1)))) -> 1(1(#(#(x1))))
   #(#($($(x1)))) -> *(*($($(x1))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   0^1(0(*(*(x1)))) -> 1^1(1(x1))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(#(x_1)) = 1 + x_1
   POL($(x_1)) = x_1
   POL(*(x_1)) = 1 + x_1
   POL(0(x_1)) = 1 + x_1
   POL(0^1(x_1)) = 1 + x_1
   POL(1(x_1)) = 1 + x_1
   POL(1^1(x_1)) = 1 + x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   1(1(*(*(x1)))) -> 0(0(#(#(x1))))
   #(#(0(0(x1)))) -> 0(0(#(#(x1))))
   #(#(1(1(x1)))) -> 1(1(#(#(x1))))
   #(#($($(x1)))) -> *(*($($(x1))))
   0(0(*(*(x1)))) -> *(*(1(1(x1))))


----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   1^1(1(*(*(x1)))) -> 0^1(0(#(#(x1))))

The TRS R consists of the following rules:

   0(0(*(*(x1)))) -> *(*(1(1(x1))))
   1(1(*(*(x1)))) -> 0(0(#(#(x1))))
   #(#(0(0(x1)))) -> 0(0(#(#(x1))))
   #(#(1(1(x1)))) -> 1(1(#(#(x1))))
   #(#($($(x1)))) -> *(*($($(x1))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 1 less node.
----------------------------------------

(10)
TRUE
