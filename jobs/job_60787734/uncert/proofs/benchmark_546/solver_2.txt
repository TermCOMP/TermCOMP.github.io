YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/7cWsI.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 90 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) QDP
(5) QDPOrderProof [EQUIVALENT, 1931 ms]
(6) QDP
(7) QDPOrderProof [EQUIVALENT, 1683 ms]
(8) QDP
(9) QDPOrderProof [EQUIVALENT, 1698 ms]
(10) QDP
(11) DependencyGraphProof [EQUIVALENT, 0 ms]
(12) QDP
(13) QDPOrderProof [EQUIVALENT, 2056 ms]
(14) QDP
(15) QDPOrderProof [EQUIVALENT, 2135 ms]
(16) QDP
(17) QDPOrderProof [EQUIVALENT, 1543 ms]
(18) QDP
(19) QDPOrderProof [EQUIVALENT, 1575 ms]
(20) QDP
(21) QDPOrderProof [EQUIVALENT, 1592 ms]
(22) QDP
(23) DependencyGraphProof [EQUIVALENT, 0 ms]
(24) QDP
(25) UsableRulesProof [EQUIVALENT, 0 ms]
(26) QDP
(27) QDPSizeChangeProof [EQUIVALENT, 0 ms]
(28) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   0(1(2(x1))) -> 0(3(1(2(x1))))
   0(1(2(x1))) -> 1(0(2(1(x1))))
   0(1(2(x1))) -> 2(1(4(0(x1))))
   0(1(2(x1))) -> 0(2(1(3(3(x1)))))
   0(1(2(x1))) -> 0(2(4(1(3(x1)))))
   0(1(2(x1))) -> 1(0(2(5(4(x1)))))
   0(1(2(x1))) -> 2(1(1(0(3(x1)))))
   0(1(2(x1))) -> 2(1(3(4(0(x1)))))
   0(1(2(x1))) -> 2(1(4(3(0(x1)))))
   0(1(2(x1))) -> 4(0(3(1(2(x1)))))
   0(1(2(x1))) -> 4(1(0(3(2(x1)))))
   0(1(2(x1))) -> 4(4(2(1(0(x1)))))
   0(1(2(x1))) -> 0(0(4(1(2(5(x1))))))
   0(1(2(x1))) -> 0(4(5(1(2(5(x1))))))
   0(1(2(x1))) -> 0(5(2(3(1(4(x1))))))
   0(1(2(x1))) -> 1(0(2(2(3(4(x1))))))
   0(1(2(x1))) -> 1(1(4(0(3(2(x1))))))
   0(1(2(x1))) -> 2(0(0(3(3(1(x1))))))
   0(1(2(x1))) -> 2(0(3(4(1(5(x1))))))
   0(1(2(x1))) -> 2(3(2(0(4(1(x1))))))
   0(1(2(x1))) -> 2(5(3(0(3(1(x1))))))
   0(1(2(x1))) -> 3(2(5(3(1(0(x1))))))
   0(1(2(x1))) -> 3(4(0(5(1(2(x1))))))
   0(1(2(x1))) -> 5(5(4(2(1(0(x1))))))
   0(0(1(2(x1)))) -> 0(0(2(4(1(x1)))))
   0(0(1(2(x1)))) -> 0(2(1(5(0(4(x1))))))
   0(0(1(2(x1)))) -> 1(0(2(3(5(0(x1))))))
   0(0(1(2(x1)))) -> 5(1(2(0(4(0(x1))))))
   0(0(5(2(x1)))) -> 5(3(0(3(0(2(x1))))))
   0(1(2(0(x1)))) -> 1(2(4(0(0(x1)))))
   0(1(2(0(x1)))) -> 0(4(1(0(0(2(x1))))))
   0(1(2(2(x1)))) -> 3(3(0(2(1(2(x1))))))
   0(1(5(2(x1)))) -> 2(5(1(0(3(x1)))))
   0(1(5(2(x1)))) -> 0(5(5(3(1(2(x1))))))
   0(1(5(2(x1)))) -> 1(3(5(0(2(2(x1))))))
   0(5(2(2(x1)))) -> 3(0(2(1(5(2(x1))))))
   1(0(1(2(x1)))) -> 0(4(1(2(1(x1)))))
   1(0(1(2(x1)))) -> 1(2(1(3(0(x1)))))
   1(0(1(2(x1)))) -> 0(3(1(4(1(2(x1))))))
   1(0(1(2(x1)))) -> 4(1(4(1(0(2(x1))))))
   5(0(1(2(x1)))) -> 0(2(1(3(5(x1)))))
   5(0(1(2(x1)))) -> 2(0(3(1(5(x1)))))
   5(0(1(2(x1)))) -> 5(3(1(0(3(2(x1))))))
   5(0(1(2(x1)))) -> 5(5(1(0(2(4(x1))))))
   0(1(0(2(2(x1))))) -> 3(0(2(1(0(2(x1))))))
   0(1(2(5(2(x1))))) -> 3(5(1(2(2(0(x1))))))
   0(1(3(0(0(x1))))) -> 0(0(4(1(3(0(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(1(5(2(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(2(1(1(x1))))))
   1(3(0(1(2(x1))))) -> 1(3(4(1(0(2(x1))))))

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   0^1(1(2(x1))) -> 0^1(3(1(2(x1))))
   0^1(1(2(x1))) -> 1^1(0(2(1(x1))))
   0^1(1(2(x1))) -> 0^1(2(1(x1)))
   0^1(1(2(x1))) -> 1^1(x1)
   0^1(1(2(x1))) -> 1^1(4(0(x1)))
   0^1(1(2(x1))) -> 0^1(x1)
   0^1(1(2(x1))) -> 0^1(2(1(3(3(x1)))))
   0^1(1(2(x1))) -> 1^1(3(3(x1)))
   0^1(1(2(x1))) -> 0^1(2(4(1(3(x1)))))
   0^1(1(2(x1))) -> 1^1(3(x1))
   0^1(1(2(x1))) -> 1^1(0(2(5(4(x1)))))
   0^1(1(2(x1))) -> 0^1(2(5(4(x1))))
   0^1(1(2(x1))) -> 5^1(4(x1))
   0^1(1(2(x1))) -> 1^1(1(0(3(x1))))
   0^1(1(2(x1))) -> 1^1(0(3(x1)))
   0^1(1(2(x1))) -> 0^1(3(x1))
   0^1(1(2(x1))) -> 1^1(3(4(0(x1))))
   0^1(1(2(x1))) -> 1^1(4(3(0(x1))))
   0^1(1(2(x1))) -> 1^1(0(3(2(x1))))
   0^1(1(2(x1))) -> 0^1(3(2(x1)))
   0^1(1(2(x1))) -> 1^1(0(x1))
   0^1(1(2(x1))) -> 0^1(0(4(1(2(5(x1))))))
   0^1(1(2(x1))) -> 0^1(4(1(2(5(x1)))))
   0^1(1(2(x1))) -> 1^1(2(5(x1)))
   0^1(1(2(x1))) -> 5^1(x1)
   0^1(1(2(x1))) -> 0^1(4(5(1(2(5(x1))))))
   0^1(1(2(x1))) -> 5^1(1(2(5(x1))))
   0^1(1(2(x1))) -> 0^1(5(2(3(1(4(x1))))))
   0^1(1(2(x1))) -> 5^1(2(3(1(4(x1)))))
   0^1(1(2(x1))) -> 1^1(4(x1))
   0^1(1(2(x1))) -> 1^1(0(2(2(3(4(x1))))))
   0^1(1(2(x1))) -> 0^1(2(2(3(4(x1)))))
   0^1(1(2(x1))) -> 1^1(1(4(0(3(2(x1))))))
   0^1(1(2(x1))) -> 1^1(4(0(3(2(x1)))))
   0^1(1(2(x1))) -> 0^1(0(3(3(1(x1)))))
   0^1(1(2(x1))) -> 0^1(3(3(1(x1))))
   0^1(1(2(x1))) -> 0^1(3(4(1(5(x1)))))
   0^1(1(2(x1))) -> 1^1(5(x1))
   0^1(1(2(x1))) -> 0^1(4(1(x1)))
   0^1(1(2(x1))) -> 5^1(3(0(3(1(x1)))))
   0^1(1(2(x1))) -> 0^1(3(1(x1)))
   0^1(1(2(x1))) -> 5^1(3(1(0(x1))))
   0^1(1(2(x1))) -> 0^1(5(1(2(x1))))
   0^1(1(2(x1))) -> 5^1(1(2(x1)))
   0^1(1(2(x1))) -> 5^1(5(4(2(1(0(x1))))))
   0^1(1(2(x1))) -> 5^1(4(2(1(0(x1)))))
   0^1(0(1(2(x1)))) -> 0^1(0(2(4(1(x1)))))
   0^1(0(1(2(x1)))) -> 0^1(2(4(1(x1))))
   0^1(0(1(2(x1)))) -> 1^1(x1)
   0^1(0(1(2(x1)))) -> 0^1(2(1(5(0(4(x1))))))
   0^1(0(1(2(x1)))) -> 1^1(5(0(4(x1))))
   0^1(0(1(2(x1)))) -> 5^1(0(4(x1)))
   0^1(0(1(2(x1)))) -> 0^1(4(x1))
   0^1(0(1(2(x1)))) -> 1^1(0(2(3(5(0(x1))))))
   0^1(0(1(2(x1)))) -> 0^1(2(3(5(0(x1)))))
   0^1(0(1(2(x1)))) -> 5^1(0(x1))
   0^1(0(1(2(x1)))) -> 0^1(x1)
   0^1(0(1(2(x1)))) -> 5^1(1(2(0(4(0(x1))))))
   0^1(0(1(2(x1)))) -> 1^1(2(0(4(0(x1)))))
   0^1(0(1(2(x1)))) -> 0^1(4(0(x1)))
   0^1(0(5(2(x1)))) -> 5^1(3(0(3(0(2(x1))))))
   0^1(0(5(2(x1)))) -> 0^1(3(0(2(x1))))
   0^1(0(5(2(x1)))) -> 0^1(2(x1))
   0^1(1(2(0(x1)))) -> 1^1(2(4(0(0(x1)))))
   0^1(1(2(0(x1)))) -> 0^1(0(x1))
   0^1(1(2(0(x1)))) -> 0^1(4(1(0(0(2(x1))))))
   0^1(1(2(0(x1)))) -> 1^1(0(0(2(x1))))
   0^1(1(2(0(x1)))) -> 0^1(0(2(x1)))
   0^1(1(2(0(x1)))) -> 0^1(2(x1))
   0^1(1(2(2(x1)))) -> 0^1(2(1(2(x1))))
   0^1(1(2(2(x1)))) -> 1^1(2(x1))
   0^1(1(5(2(x1)))) -> 5^1(1(0(3(x1))))
   0^1(1(5(2(x1)))) -> 1^1(0(3(x1)))
   0^1(1(5(2(x1)))) -> 0^1(3(x1))
   0^1(1(5(2(x1)))) -> 0^1(5(5(3(1(2(x1))))))
   0^1(1(5(2(x1)))) -> 5^1(5(3(1(2(x1)))))
   0^1(1(5(2(x1)))) -> 5^1(3(1(2(x1))))
   0^1(1(5(2(x1)))) -> 1^1(2(x1))
   0^1(1(5(2(x1)))) -> 1^1(3(5(0(2(2(x1))))))
   0^1(1(5(2(x1)))) -> 5^1(0(2(2(x1))))
   0^1(1(5(2(x1)))) -> 0^1(2(2(x1)))
   0^1(5(2(2(x1)))) -> 0^1(2(1(5(2(x1)))))
   0^1(5(2(2(x1)))) -> 1^1(5(2(x1)))
   0^1(5(2(2(x1)))) -> 5^1(2(x1))
   1^1(0(1(2(x1)))) -> 0^1(4(1(2(1(x1)))))
   1^1(0(1(2(x1)))) -> 1^1(2(1(x1)))
   1^1(0(1(2(x1)))) -> 1^1(x1)
   1^1(0(1(2(x1)))) -> 1^1(2(1(3(0(x1)))))
   1^1(0(1(2(x1)))) -> 1^1(3(0(x1)))
   1^1(0(1(2(x1)))) -> 0^1(x1)
   1^1(0(1(2(x1)))) -> 0^1(3(1(4(1(2(x1))))))
   1^1(0(1(2(x1)))) -> 1^1(4(1(2(x1))))
   1^1(0(1(2(x1)))) -> 1^1(4(1(0(2(x1)))))
   1^1(0(1(2(x1)))) -> 1^1(0(2(x1)))
   1^1(0(1(2(x1)))) -> 0^1(2(x1))
   5^1(0(1(2(x1)))) -> 0^1(2(1(3(5(x1)))))
   5^1(0(1(2(x1)))) -> 1^1(3(5(x1)))
   5^1(0(1(2(x1)))) -> 5^1(x1)
   5^1(0(1(2(x1)))) -> 0^1(3(1(5(x1))))
   5^1(0(1(2(x1)))) -> 1^1(5(x1))
   5^1(0(1(2(x1)))) -> 5^1(3(1(0(3(2(x1))))))
   5^1(0(1(2(x1)))) -> 1^1(0(3(2(x1))))
   5^1(0(1(2(x1)))) -> 0^1(3(2(x1)))
   5^1(0(1(2(x1)))) -> 5^1(5(1(0(2(4(x1))))))
   5^1(0(1(2(x1)))) -> 5^1(1(0(2(4(x1)))))
   5^1(0(1(2(x1)))) -> 1^1(0(2(4(x1))))
   5^1(0(1(2(x1)))) -> 0^1(2(4(x1)))
   0^1(1(0(2(2(x1))))) -> 0^1(2(1(0(2(x1)))))
   0^1(1(0(2(2(x1))))) -> 1^1(0(2(x1)))
   0^1(1(0(2(2(x1))))) -> 0^1(2(x1))
   0^1(1(2(5(2(x1))))) -> 5^1(1(2(2(0(x1)))))
   0^1(1(2(5(2(x1))))) -> 1^1(2(2(0(x1))))
   0^1(1(2(5(2(x1))))) -> 0^1(x1)
   0^1(1(3(0(0(x1))))) -> 0^1(0(4(1(3(0(x1))))))
   0^1(1(3(0(0(x1))))) -> 0^1(4(1(3(0(x1)))))
   0^1(1(3(0(0(x1))))) -> 1^1(3(0(x1)))
   0^1(1(4(2(2(x1))))) -> 0^1(2(4(1(5(2(x1))))))
   0^1(1(4(2(2(x1))))) -> 1^1(5(2(x1)))
   0^1(1(4(2(2(x1))))) -> 5^1(2(x1))
   0^1(1(4(2(2(x1))))) -> 0^1(2(4(2(1(1(x1))))))
   0^1(1(4(2(2(x1))))) -> 1^1(1(x1))
   0^1(1(4(2(2(x1))))) -> 1^1(x1)
   1^1(3(0(1(2(x1))))) -> 1^1(3(4(1(0(2(x1))))))
   1^1(3(0(1(2(x1))))) -> 1^1(0(2(x1)))
   1^1(3(0(1(2(x1))))) -> 0^1(2(x1))

The TRS R consists of the following rules:

   0(1(2(x1))) -> 0(3(1(2(x1))))
   0(1(2(x1))) -> 1(0(2(1(x1))))
   0(1(2(x1))) -> 2(1(4(0(x1))))
   0(1(2(x1))) -> 0(2(1(3(3(x1)))))
   0(1(2(x1))) -> 0(2(4(1(3(x1)))))
   0(1(2(x1))) -> 1(0(2(5(4(x1)))))
   0(1(2(x1))) -> 2(1(1(0(3(x1)))))
   0(1(2(x1))) -> 2(1(3(4(0(x1)))))
   0(1(2(x1))) -> 2(1(4(3(0(x1)))))
   0(1(2(x1))) -> 4(0(3(1(2(x1)))))
   0(1(2(x1))) -> 4(1(0(3(2(x1)))))
   0(1(2(x1))) -> 4(4(2(1(0(x1)))))
   0(1(2(x1))) -> 0(0(4(1(2(5(x1))))))
   0(1(2(x1))) -> 0(4(5(1(2(5(x1))))))
   0(1(2(x1))) -> 0(5(2(3(1(4(x1))))))
   0(1(2(x1))) -> 1(0(2(2(3(4(x1))))))
   0(1(2(x1))) -> 1(1(4(0(3(2(x1))))))
   0(1(2(x1))) -> 2(0(0(3(3(1(x1))))))
   0(1(2(x1))) -> 2(0(3(4(1(5(x1))))))
   0(1(2(x1))) -> 2(3(2(0(4(1(x1))))))
   0(1(2(x1))) -> 2(5(3(0(3(1(x1))))))
   0(1(2(x1))) -> 3(2(5(3(1(0(x1))))))
   0(1(2(x1))) -> 3(4(0(5(1(2(x1))))))
   0(1(2(x1))) -> 5(5(4(2(1(0(x1))))))
   0(0(1(2(x1)))) -> 0(0(2(4(1(x1)))))
   0(0(1(2(x1)))) -> 0(2(1(5(0(4(x1))))))
   0(0(1(2(x1)))) -> 1(0(2(3(5(0(x1))))))
   0(0(1(2(x1)))) -> 5(1(2(0(4(0(x1))))))
   0(0(5(2(x1)))) -> 5(3(0(3(0(2(x1))))))
   0(1(2(0(x1)))) -> 1(2(4(0(0(x1)))))
   0(1(2(0(x1)))) -> 0(4(1(0(0(2(x1))))))
   0(1(2(2(x1)))) -> 3(3(0(2(1(2(x1))))))
   0(1(5(2(x1)))) -> 2(5(1(0(3(x1)))))
   0(1(5(2(x1)))) -> 0(5(5(3(1(2(x1))))))
   0(1(5(2(x1)))) -> 1(3(5(0(2(2(x1))))))
   0(5(2(2(x1)))) -> 3(0(2(1(5(2(x1))))))
   1(0(1(2(x1)))) -> 0(4(1(2(1(x1)))))
   1(0(1(2(x1)))) -> 1(2(1(3(0(x1)))))
   1(0(1(2(x1)))) -> 0(3(1(4(1(2(x1))))))
   1(0(1(2(x1)))) -> 4(1(4(1(0(2(x1))))))
   5(0(1(2(x1)))) -> 0(2(1(3(5(x1)))))
   5(0(1(2(x1)))) -> 2(0(3(1(5(x1)))))
   5(0(1(2(x1)))) -> 5(3(1(0(3(2(x1))))))
   5(0(1(2(x1)))) -> 5(5(1(0(2(4(x1))))))
   0(1(0(2(2(x1))))) -> 3(0(2(1(0(2(x1))))))
   0(1(2(5(2(x1))))) -> 3(5(1(2(2(0(x1))))))
   0(1(3(0(0(x1))))) -> 0(0(4(1(3(0(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(1(5(2(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(2(1(1(x1))))))
   1(3(0(1(2(x1))))) -> 1(3(4(1(0(2(x1))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 109 less nodes.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   0^1(1(2(x1))) -> 1^1(x1)
   1^1(0(1(2(x1)))) -> 1^1(x1)
   1^1(0(1(2(x1)))) -> 0^1(x1)
   0^1(1(2(x1))) -> 0^1(x1)
   0^1(1(2(x1))) -> 1^1(0(x1))
   0^1(1(2(x1))) -> 5^1(x1)
   5^1(0(1(2(x1)))) -> 5^1(x1)
   5^1(0(1(2(x1)))) -> 1^1(5(x1))
   0^1(1(2(x1))) -> 1^1(5(x1))
   0^1(0(1(2(x1)))) -> 1^1(x1)
   0^1(0(1(2(x1)))) -> 5^1(0(x1))
   0^1(0(1(2(x1)))) -> 0^1(x1)
   0^1(1(2(0(x1)))) -> 0^1(0(x1))
   0^1(1(2(5(2(x1))))) -> 0^1(x1)
   0^1(1(4(2(2(x1))))) -> 1^1(1(x1))
   0^1(1(4(2(2(x1))))) -> 1^1(x1)

The TRS R consists of the following rules:

   0(1(2(x1))) -> 0(3(1(2(x1))))
   0(1(2(x1))) -> 1(0(2(1(x1))))
   0(1(2(x1))) -> 2(1(4(0(x1))))
   0(1(2(x1))) -> 0(2(1(3(3(x1)))))
   0(1(2(x1))) -> 0(2(4(1(3(x1)))))
   0(1(2(x1))) -> 1(0(2(5(4(x1)))))
   0(1(2(x1))) -> 2(1(1(0(3(x1)))))
   0(1(2(x1))) -> 2(1(3(4(0(x1)))))
   0(1(2(x1))) -> 2(1(4(3(0(x1)))))
   0(1(2(x1))) -> 4(0(3(1(2(x1)))))
   0(1(2(x1))) -> 4(1(0(3(2(x1)))))
   0(1(2(x1))) -> 4(4(2(1(0(x1)))))
   0(1(2(x1))) -> 0(0(4(1(2(5(x1))))))
   0(1(2(x1))) -> 0(4(5(1(2(5(x1))))))
   0(1(2(x1))) -> 0(5(2(3(1(4(x1))))))
   0(1(2(x1))) -> 1(0(2(2(3(4(x1))))))
   0(1(2(x1))) -> 1(1(4(0(3(2(x1))))))
   0(1(2(x1))) -> 2(0(0(3(3(1(x1))))))
   0(1(2(x1))) -> 2(0(3(4(1(5(x1))))))
   0(1(2(x1))) -> 2(3(2(0(4(1(x1))))))
   0(1(2(x1))) -> 2(5(3(0(3(1(x1))))))
   0(1(2(x1))) -> 3(2(5(3(1(0(x1))))))
   0(1(2(x1))) -> 3(4(0(5(1(2(x1))))))
   0(1(2(x1))) -> 5(5(4(2(1(0(x1))))))
   0(0(1(2(x1)))) -> 0(0(2(4(1(x1)))))
   0(0(1(2(x1)))) -> 0(2(1(5(0(4(x1))))))
   0(0(1(2(x1)))) -> 1(0(2(3(5(0(x1))))))
   0(0(1(2(x1)))) -> 5(1(2(0(4(0(x1))))))
   0(0(5(2(x1)))) -> 5(3(0(3(0(2(x1))))))
   0(1(2(0(x1)))) -> 1(2(4(0(0(x1)))))
   0(1(2(0(x1)))) -> 0(4(1(0(0(2(x1))))))
   0(1(2(2(x1)))) -> 3(3(0(2(1(2(x1))))))
   0(1(5(2(x1)))) -> 2(5(1(0(3(x1)))))
   0(1(5(2(x1)))) -> 0(5(5(3(1(2(x1))))))
   0(1(5(2(x1)))) -> 1(3(5(0(2(2(x1))))))
   0(5(2(2(x1)))) -> 3(0(2(1(5(2(x1))))))
   1(0(1(2(x1)))) -> 0(4(1(2(1(x1)))))
   1(0(1(2(x1)))) -> 1(2(1(3(0(x1)))))
   1(0(1(2(x1)))) -> 0(3(1(4(1(2(x1))))))
   1(0(1(2(x1)))) -> 4(1(4(1(0(2(x1))))))
   5(0(1(2(x1)))) -> 0(2(1(3(5(x1)))))
   5(0(1(2(x1)))) -> 2(0(3(1(5(x1)))))
   5(0(1(2(x1)))) -> 5(3(1(0(3(2(x1))))))
   5(0(1(2(x1)))) -> 5(5(1(0(2(4(x1))))))
   0(1(0(2(2(x1))))) -> 3(0(2(1(0(2(x1))))))
   0(1(2(5(2(x1))))) -> 3(5(1(2(2(0(x1))))))
   0(1(3(0(0(x1))))) -> 0(0(4(1(3(0(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(1(5(2(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(2(1(1(x1))))))
   1(3(0(1(2(x1))))) -> 1(3(4(1(0(2(x1))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   0^1(1(2(5(2(x1))))) -> 0^1(x1)
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(0^1(x_1)) =  	[[0A]] 	 +  	[[0A, 0A, -I]] 	* 	x_1
>>>

   <<<
 POL(1(x_1)) =  	[[-I], [-I], [-I]] 	 +  	[[0A, -I, 0A], [-I, 0A, 1A], [0A, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(2(x_1)) =  	[[-I], [0A], [-I]] 	 +  	[[0A, -I, -I], [0A, 0A, -I], [1A, 0A, 1A]] 	* 	x_1
>>>

   <<<
 POL(1^1(x_1)) =  	[[0A]] 	 +  	[[0A, -I, 0A]] 	* 	x_1
>>>

   <<<
 POL(0(x_1)) =  	[[-I], [-I], [-I]] 	 +  	[[0A, -I, -I], [-I, 0A, -I], [0A, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(5^1(x_1)) =  	[[0A]] 	 +  	[[0A, -I, 0A]] 	* 	x_1
>>>

   <<<
 POL(5(x_1)) =  	[[-I], [-I], [-I]] 	 +  	[[0A, -I, 0A], [-I, 0A, 0A], [0A, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(4(x_1)) =  	[[-I], [-I], [-I]] 	 +  	[[0A, -I, 0A], [0A, -I, 0A], [0A, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(3(x_1)) =  	[[-I], [-I], [-I]] 	 +  	[[0A, -I, -I], [0A, -I, 0A], [-I, -I, -I]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   0(1(2(x1))) -> 0(3(1(2(x1))))
   0(1(2(x1))) -> 1(0(2(1(x1))))
   0(1(2(x1))) -> 2(1(4(0(x1))))
   0(1(2(x1))) -> 0(2(1(3(3(x1)))))
   0(1(2(x1))) -> 0(2(4(1(3(x1)))))
   0(1(2(x1))) -> 1(0(2(5(4(x1)))))
   0(1(2(x1))) -> 2(1(1(0(3(x1)))))
   0(1(2(x1))) -> 2(1(3(4(0(x1)))))
   0(1(2(x1))) -> 2(1(4(3(0(x1)))))
   0(1(2(x1))) -> 4(0(3(1(2(x1)))))
   0(1(2(x1))) -> 4(1(0(3(2(x1)))))
   0(1(2(x1))) -> 4(4(2(1(0(x1)))))
   0(1(2(x1))) -> 0(0(4(1(2(5(x1))))))
   0(1(2(x1))) -> 0(4(5(1(2(5(x1))))))
   0(1(2(x1))) -> 0(5(2(3(1(4(x1))))))
   0(1(2(x1))) -> 1(0(2(2(3(4(x1))))))
   0(1(2(x1))) -> 1(1(4(0(3(2(x1))))))
   0(1(2(x1))) -> 2(0(0(3(3(1(x1))))))
   0(1(2(x1))) -> 2(0(3(4(1(5(x1))))))
   0(1(2(x1))) -> 2(3(2(0(4(1(x1))))))
   0(1(2(x1))) -> 2(5(3(0(3(1(x1))))))
   0(1(2(x1))) -> 3(2(5(3(1(0(x1))))))
   0(1(2(x1))) -> 3(4(0(5(1(2(x1))))))
   0(1(2(x1))) -> 5(5(4(2(1(0(x1))))))
   0(0(1(2(x1)))) -> 0(0(2(4(1(x1)))))
   0(0(1(2(x1)))) -> 0(2(1(5(0(4(x1))))))
   0(0(1(2(x1)))) -> 1(0(2(3(5(0(x1))))))
   0(0(1(2(x1)))) -> 5(1(2(0(4(0(x1))))))
   0(0(5(2(x1)))) -> 5(3(0(3(0(2(x1))))))
   0(1(2(0(x1)))) -> 1(2(4(0(0(x1)))))
   0(1(2(0(x1)))) -> 0(4(1(0(0(2(x1))))))
   0(1(2(2(x1)))) -> 3(3(0(2(1(2(x1))))))
   0(1(5(2(x1)))) -> 2(5(1(0(3(x1)))))
   0(1(5(2(x1)))) -> 0(5(5(3(1(2(x1))))))
   0(1(5(2(x1)))) -> 1(3(5(0(2(2(x1))))))
   0(5(2(2(x1)))) -> 3(0(2(1(5(2(x1))))))
   0(1(0(2(2(x1))))) -> 3(0(2(1(0(2(x1))))))
   0(1(2(5(2(x1))))) -> 3(5(1(2(2(0(x1))))))
   0(1(3(0(0(x1))))) -> 0(0(4(1(3(0(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(1(5(2(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(2(1(1(x1))))))
   5(0(1(2(x1)))) -> 0(2(1(3(5(x1)))))
   5(0(1(2(x1)))) -> 2(0(3(1(5(x1)))))
   5(0(1(2(x1)))) -> 5(3(1(0(3(2(x1))))))
   5(0(1(2(x1)))) -> 5(5(1(0(2(4(x1))))))
   1(0(1(2(x1)))) -> 0(4(1(2(1(x1)))))
   1(0(1(2(x1)))) -> 1(2(1(3(0(x1)))))
   1(0(1(2(x1)))) -> 0(3(1(4(1(2(x1))))))
   1(0(1(2(x1)))) -> 4(1(4(1(0(2(x1))))))
   1(3(0(1(2(x1))))) -> 1(3(4(1(0(2(x1))))))


----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   0^1(1(2(x1))) -> 1^1(x1)
   1^1(0(1(2(x1)))) -> 1^1(x1)
   1^1(0(1(2(x1)))) -> 0^1(x1)
   0^1(1(2(x1))) -> 0^1(x1)
   0^1(1(2(x1))) -> 1^1(0(x1))
   0^1(1(2(x1))) -> 5^1(x1)
   5^1(0(1(2(x1)))) -> 5^1(x1)
   5^1(0(1(2(x1)))) -> 1^1(5(x1))
   0^1(1(2(x1))) -> 1^1(5(x1))
   0^1(0(1(2(x1)))) -> 1^1(x1)
   0^1(0(1(2(x1)))) -> 5^1(0(x1))
   0^1(0(1(2(x1)))) -> 0^1(x1)
   0^1(1(2(0(x1)))) -> 0^1(0(x1))
   0^1(1(4(2(2(x1))))) -> 1^1(1(x1))
   0^1(1(4(2(2(x1))))) -> 1^1(x1)

The TRS R consists of the following rules:

   0(1(2(x1))) -> 0(3(1(2(x1))))
   0(1(2(x1))) -> 1(0(2(1(x1))))
   0(1(2(x1))) -> 2(1(4(0(x1))))
   0(1(2(x1))) -> 0(2(1(3(3(x1)))))
   0(1(2(x1))) -> 0(2(4(1(3(x1)))))
   0(1(2(x1))) -> 1(0(2(5(4(x1)))))
   0(1(2(x1))) -> 2(1(1(0(3(x1)))))
   0(1(2(x1))) -> 2(1(3(4(0(x1)))))
   0(1(2(x1))) -> 2(1(4(3(0(x1)))))
   0(1(2(x1))) -> 4(0(3(1(2(x1)))))
   0(1(2(x1))) -> 4(1(0(3(2(x1)))))
   0(1(2(x1))) -> 4(4(2(1(0(x1)))))
   0(1(2(x1))) -> 0(0(4(1(2(5(x1))))))
   0(1(2(x1))) -> 0(4(5(1(2(5(x1))))))
   0(1(2(x1))) -> 0(5(2(3(1(4(x1))))))
   0(1(2(x1))) -> 1(0(2(2(3(4(x1))))))
   0(1(2(x1))) -> 1(1(4(0(3(2(x1))))))
   0(1(2(x1))) -> 2(0(0(3(3(1(x1))))))
   0(1(2(x1))) -> 2(0(3(4(1(5(x1))))))
   0(1(2(x1))) -> 2(3(2(0(4(1(x1))))))
   0(1(2(x1))) -> 2(5(3(0(3(1(x1))))))
   0(1(2(x1))) -> 3(2(5(3(1(0(x1))))))
   0(1(2(x1))) -> 3(4(0(5(1(2(x1))))))
   0(1(2(x1))) -> 5(5(4(2(1(0(x1))))))
   0(0(1(2(x1)))) -> 0(0(2(4(1(x1)))))
   0(0(1(2(x1)))) -> 0(2(1(5(0(4(x1))))))
   0(0(1(2(x1)))) -> 1(0(2(3(5(0(x1))))))
   0(0(1(2(x1)))) -> 5(1(2(0(4(0(x1))))))
   0(0(5(2(x1)))) -> 5(3(0(3(0(2(x1))))))
   0(1(2(0(x1)))) -> 1(2(4(0(0(x1)))))
   0(1(2(0(x1)))) -> 0(4(1(0(0(2(x1))))))
   0(1(2(2(x1)))) -> 3(3(0(2(1(2(x1))))))
   0(1(5(2(x1)))) -> 2(5(1(0(3(x1)))))
   0(1(5(2(x1)))) -> 0(5(5(3(1(2(x1))))))
   0(1(5(2(x1)))) -> 1(3(5(0(2(2(x1))))))
   0(5(2(2(x1)))) -> 3(0(2(1(5(2(x1))))))
   1(0(1(2(x1)))) -> 0(4(1(2(1(x1)))))
   1(0(1(2(x1)))) -> 1(2(1(3(0(x1)))))
   1(0(1(2(x1)))) -> 0(3(1(4(1(2(x1))))))
   1(0(1(2(x1)))) -> 4(1(4(1(0(2(x1))))))
   5(0(1(2(x1)))) -> 0(2(1(3(5(x1)))))
   5(0(1(2(x1)))) -> 2(0(3(1(5(x1)))))
   5(0(1(2(x1)))) -> 5(3(1(0(3(2(x1))))))
   5(0(1(2(x1)))) -> 5(5(1(0(2(4(x1))))))
   0(1(0(2(2(x1))))) -> 3(0(2(1(0(2(x1))))))
   0(1(2(5(2(x1))))) -> 3(5(1(2(2(0(x1))))))
   0(1(3(0(0(x1))))) -> 0(0(4(1(3(0(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(1(5(2(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(2(1(1(x1))))))
   1(3(0(1(2(x1))))) -> 1(3(4(1(0(2(x1))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   0^1(0(1(2(x1)))) -> 5^1(0(x1))
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(0^1(x_1)) =  	[[0A]] 	 +  	[[-I, 0A, -I]] 	* 	x_1
>>>

   <<<
 POL(1(x_1)) =  	[[1A], [0A], [-I]] 	 +  	[[0A, 0A, 0A], [0A, 0A, 0A], [-I, 0A, -I]] 	* 	x_1
>>>

   <<<
 POL(2(x_1)) =  	[[0A], [-I], [-I]] 	 +  	[[-I, 0A, 0A], [0A, 0A, 0A], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(1^1(x_1)) =  	[[-I]] 	 +  	[[0A, -I, 0A]] 	* 	x_1
>>>

   <<<
 POL(0(x_1)) =  	[[-I], [0A], [-I]] 	 +  	[[0A, -I, -I], [0A, 0A, 0A], [0A, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(5^1(x_1)) =  	[[0A]] 	 +  	[[-I, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(5(x_1)) =  	[[0A], [-I], [0A]] 	 +  	[[-I, -I, -I], [-I, -I, 0A], [-I, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(4(x_1)) =  	[[1A], [0A], [0A]] 	 +  	[[0A, 0A, 0A], [0A, 0A, 0A], [-I, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(3(x_1)) =  	[[0A], [-I], [-I]] 	 +  	[[-I, -I, -I], [-I, -I, -I], [-I, -I, -I]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   0(1(2(x1))) -> 0(3(1(2(x1))))
   0(1(2(x1))) -> 1(0(2(1(x1))))
   0(1(2(x1))) -> 2(1(4(0(x1))))
   0(1(2(x1))) -> 0(2(1(3(3(x1)))))
   0(1(2(x1))) -> 0(2(4(1(3(x1)))))
   0(1(2(x1))) -> 1(0(2(5(4(x1)))))
   0(1(2(x1))) -> 2(1(1(0(3(x1)))))
   0(1(2(x1))) -> 2(1(3(4(0(x1)))))
   0(1(2(x1))) -> 2(1(4(3(0(x1)))))
   0(1(2(x1))) -> 4(0(3(1(2(x1)))))
   0(1(2(x1))) -> 4(1(0(3(2(x1)))))
   0(1(2(x1))) -> 4(4(2(1(0(x1)))))
   0(1(2(x1))) -> 0(0(4(1(2(5(x1))))))
   0(1(2(x1))) -> 0(4(5(1(2(5(x1))))))
   0(1(2(x1))) -> 0(5(2(3(1(4(x1))))))
   0(1(2(x1))) -> 1(0(2(2(3(4(x1))))))
   0(1(2(x1))) -> 1(1(4(0(3(2(x1))))))
   0(1(2(x1))) -> 2(0(0(3(3(1(x1))))))
   0(1(2(x1))) -> 2(0(3(4(1(5(x1))))))
   0(1(2(x1))) -> 2(3(2(0(4(1(x1))))))
   0(1(2(x1))) -> 2(5(3(0(3(1(x1))))))
   0(1(2(x1))) -> 3(2(5(3(1(0(x1))))))
   0(1(2(x1))) -> 3(4(0(5(1(2(x1))))))
   0(1(2(x1))) -> 5(5(4(2(1(0(x1))))))
   0(0(1(2(x1)))) -> 0(0(2(4(1(x1)))))
   0(0(1(2(x1)))) -> 0(2(1(5(0(4(x1))))))
   0(0(1(2(x1)))) -> 1(0(2(3(5(0(x1))))))
   0(0(1(2(x1)))) -> 5(1(2(0(4(0(x1))))))
   0(0(5(2(x1)))) -> 5(3(0(3(0(2(x1))))))
   0(1(2(0(x1)))) -> 1(2(4(0(0(x1)))))
   0(1(2(0(x1)))) -> 0(4(1(0(0(2(x1))))))
   0(1(2(2(x1)))) -> 3(3(0(2(1(2(x1))))))
   0(1(5(2(x1)))) -> 2(5(1(0(3(x1)))))
   0(1(5(2(x1)))) -> 0(5(5(3(1(2(x1))))))
   0(1(5(2(x1)))) -> 1(3(5(0(2(2(x1))))))
   0(5(2(2(x1)))) -> 3(0(2(1(5(2(x1))))))
   0(1(0(2(2(x1))))) -> 3(0(2(1(0(2(x1))))))
   0(1(2(5(2(x1))))) -> 3(5(1(2(2(0(x1))))))
   0(1(3(0(0(x1))))) -> 0(0(4(1(3(0(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(1(5(2(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(2(1(1(x1))))))
   5(0(1(2(x1)))) -> 0(2(1(3(5(x1)))))
   5(0(1(2(x1)))) -> 2(0(3(1(5(x1)))))
   5(0(1(2(x1)))) -> 5(3(1(0(3(2(x1))))))
   5(0(1(2(x1)))) -> 5(5(1(0(2(4(x1))))))
   1(0(1(2(x1)))) -> 0(4(1(2(1(x1)))))
   1(0(1(2(x1)))) -> 1(2(1(3(0(x1)))))
   1(0(1(2(x1)))) -> 0(3(1(4(1(2(x1))))))
   1(0(1(2(x1)))) -> 4(1(4(1(0(2(x1))))))
   1(3(0(1(2(x1))))) -> 1(3(4(1(0(2(x1))))))


----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   0^1(1(2(x1))) -> 1^1(x1)
   1^1(0(1(2(x1)))) -> 1^1(x1)
   1^1(0(1(2(x1)))) -> 0^1(x1)
   0^1(1(2(x1))) -> 0^1(x1)
   0^1(1(2(x1))) -> 1^1(0(x1))
   0^1(1(2(x1))) -> 5^1(x1)
   5^1(0(1(2(x1)))) -> 5^1(x1)
   5^1(0(1(2(x1)))) -> 1^1(5(x1))
   0^1(1(2(x1))) -> 1^1(5(x1))
   0^1(0(1(2(x1)))) -> 1^1(x1)
   0^1(0(1(2(x1)))) -> 0^1(x1)
   0^1(1(2(0(x1)))) -> 0^1(0(x1))
   0^1(1(4(2(2(x1))))) -> 1^1(1(x1))
   0^1(1(4(2(2(x1))))) -> 1^1(x1)

The TRS R consists of the following rules:

   0(1(2(x1))) -> 0(3(1(2(x1))))
   0(1(2(x1))) -> 1(0(2(1(x1))))
   0(1(2(x1))) -> 2(1(4(0(x1))))
   0(1(2(x1))) -> 0(2(1(3(3(x1)))))
   0(1(2(x1))) -> 0(2(4(1(3(x1)))))
   0(1(2(x1))) -> 1(0(2(5(4(x1)))))
   0(1(2(x1))) -> 2(1(1(0(3(x1)))))
   0(1(2(x1))) -> 2(1(3(4(0(x1)))))
   0(1(2(x1))) -> 2(1(4(3(0(x1)))))
   0(1(2(x1))) -> 4(0(3(1(2(x1)))))
   0(1(2(x1))) -> 4(1(0(3(2(x1)))))
   0(1(2(x1))) -> 4(4(2(1(0(x1)))))
   0(1(2(x1))) -> 0(0(4(1(2(5(x1))))))
   0(1(2(x1))) -> 0(4(5(1(2(5(x1))))))
   0(1(2(x1))) -> 0(5(2(3(1(4(x1))))))
   0(1(2(x1))) -> 1(0(2(2(3(4(x1))))))
   0(1(2(x1))) -> 1(1(4(0(3(2(x1))))))
   0(1(2(x1))) -> 2(0(0(3(3(1(x1))))))
   0(1(2(x1))) -> 2(0(3(4(1(5(x1))))))
   0(1(2(x1))) -> 2(3(2(0(4(1(x1))))))
   0(1(2(x1))) -> 2(5(3(0(3(1(x1))))))
   0(1(2(x1))) -> 3(2(5(3(1(0(x1))))))
   0(1(2(x1))) -> 3(4(0(5(1(2(x1))))))
   0(1(2(x1))) -> 5(5(4(2(1(0(x1))))))
   0(0(1(2(x1)))) -> 0(0(2(4(1(x1)))))
   0(0(1(2(x1)))) -> 0(2(1(5(0(4(x1))))))
   0(0(1(2(x1)))) -> 1(0(2(3(5(0(x1))))))
   0(0(1(2(x1)))) -> 5(1(2(0(4(0(x1))))))
   0(0(5(2(x1)))) -> 5(3(0(3(0(2(x1))))))
   0(1(2(0(x1)))) -> 1(2(4(0(0(x1)))))
   0(1(2(0(x1)))) -> 0(4(1(0(0(2(x1))))))
   0(1(2(2(x1)))) -> 3(3(0(2(1(2(x1))))))
   0(1(5(2(x1)))) -> 2(5(1(0(3(x1)))))
   0(1(5(2(x1)))) -> 0(5(5(3(1(2(x1))))))
   0(1(5(2(x1)))) -> 1(3(5(0(2(2(x1))))))
   0(5(2(2(x1)))) -> 3(0(2(1(5(2(x1))))))
   1(0(1(2(x1)))) -> 0(4(1(2(1(x1)))))
   1(0(1(2(x1)))) -> 1(2(1(3(0(x1)))))
   1(0(1(2(x1)))) -> 0(3(1(4(1(2(x1))))))
   1(0(1(2(x1)))) -> 4(1(4(1(0(2(x1))))))
   5(0(1(2(x1)))) -> 0(2(1(3(5(x1)))))
   5(0(1(2(x1)))) -> 2(0(3(1(5(x1)))))
   5(0(1(2(x1)))) -> 5(3(1(0(3(2(x1))))))
   5(0(1(2(x1)))) -> 5(5(1(0(2(4(x1))))))
   0(1(0(2(2(x1))))) -> 3(0(2(1(0(2(x1))))))
   0(1(2(5(2(x1))))) -> 3(5(1(2(2(0(x1))))))
   0(1(3(0(0(x1))))) -> 0(0(4(1(3(0(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(1(5(2(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(2(1(1(x1))))))
   1(3(0(1(2(x1))))) -> 1(3(4(1(0(2(x1))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   5^1(0(1(2(x1)))) -> 5^1(x1)
   5^1(0(1(2(x1)))) -> 1^1(5(x1))
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(0^1(x_1)) =  	[[0A]] 	 +  	[[-I, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(1(x_1)) =  	[[0A], [0A], [1A]] 	 +  	[[-I, 0A, -I], [-I, -I, -I], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(2(x_1)) =  	[[0A], [-I], [-I]] 	 +  	[[0A, 0A, 0A], [-I, 0A, -I], [-I, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(1^1(x_1)) =  	[[1A]] 	 +  	[[-I, 0A, -I]] 	* 	x_1
>>>

   <<<
 POL(0(x_1)) =  	[[0A], [-I], [-I]] 	 +  	[[0A, 0A, 1A], [-I, 0A, 0A], [-I, -I, 0A]] 	* 	x_1
>>>

   <<<
 POL(5^1(x_1)) =  	[[1A]] 	 +  	[[0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(5(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[-I, -I, 0A], [0A, 0A, 0A], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(4(x_1)) =  	[[0A], [-I], [-I]] 	 +  	[[-I, -I, -I], [-I, 0A, -I], [-I, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(3(x_1)) =  	[[0A], [-I], [-I]] 	 +  	[[0A, -I, -I], [-I, -I, -I], [-I, -I, -I]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   0(1(2(x1))) -> 0(3(1(2(x1))))
   0(1(2(x1))) -> 1(0(2(1(x1))))
   0(1(2(x1))) -> 2(1(4(0(x1))))
   0(1(2(x1))) -> 0(2(1(3(3(x1)))))
   0(1(2(x1))) -> 0(2(4(1(3(x1)))))
   0(1(2(x1))) -> 1(0(2(5(4(x1)))))
   0(1(2(x1))) -> 2(1(1(0(3(x1)))))
   0(1(2(x1))) -> 2(1(3(4(0(x1)))))
   0(1(2(x1))) -> 2(1(4(3(0(x1)))))
   0(1(2(x1))) -> 4(0(3(1(2(x1)))))
   0(1(2(x1))) -> 4(1(0(3(2(x1)))))
   0(1(2(x1))) -> 4(4(2(1(0(x1)))))
   0(1(2(x1))) -> 0(0(4(1(2(5(x1))))))
   0(1(2(x1))) -> 0(4(5(1(2(5(x1))))))
   0(1(2(x1))) -> 0(5(2(3(1(4(x1))))))
   0(1(2(x1))) -> 1(0(2(2(3(4(x1))))))
   0(1(2(x1))) -> 1(1(4(0(3(2(x1))))))
   0(1(2(x1))) -> 2(0(0(3(3(1(x1))))))
   0(1(2(x1))) -> 2(0(3(4(1(5(x1))))))
   0(1(2(x1))) -> 2(3(2(0(4(1(x1))))))
   0(1(2(x1))) -> 2(5(3(0(3(1(x1))))))
   0(1(2(x1))) -> 3(2(5(3(1(0(x1))))))
   0(1(2(x1))) -> 3(4(0(5(1(2(x1))))))
   0(1(2(x1))) -> 5(5(4(2(1(0(x1))))))
   0(0(1(2(x1)))) -> 0(0(2(4(1(x1)))))
   0(0(1(2(x1)))) -> 0(2(1(5(0(4(x1))))))
   0(0(1(2(x1)))) -> 1(0(2(3(5(0(x1))))))
   0(0(1(2(x1)))) -> 5(1(2(0(4(0(x1))))))
   0(0(5(2(x1)))) -> 5(3(0(3(0(2(x1))))))
   0(1(2(0(x1)))) -> 1(2(4(0(0(x1)))))
   0(1(2(0(x1)))) -> 0(4(1(0(0(2(x1))))))
   0(1(2(2(x1)))) -> 3(3(0(2(1(2(x1))))))
   0(1(5(2(x1)))) -> 2(5(1(0(3(x1)))))
   0(1(5(2(x1)))) -> 0(5(5(3(1(2(x1))))))
   0(1(5(2(x1)))) -> 1(3(5(0(2(2(x1))))))
   0(5(2(2(x1)))) -> 3(0(2(1(5(2(x1))))))
   0(1(0(2(2(x1))))) -> 3(0(2(1(0(2(x1))))))
   0(1(2(5(2(x1))))) -> 3(5(1(2(2(0(x1))))))
   0(1(3(0(0(x1))))) -> 0(0(4(1(3(0(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(1(5(2(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(2(1(1(x1))))))
   5(0(1(2(x1)))) -> 0(2(1(3(5(x1)))))
   5(0(1(2(x1)))) -> 2(0(3(1(5(x1)))))
   5(0(1(2(x1)))) -> 5(3(1(0(3(2(x1))))))
   5(0(1(2(x1)))) -> 5(5(1(0(2(4(x1))))))
   1(0(1(2(x1)))) -> 0(4(1(2(1(x1)))))
   1(0(1(2(x1)))) -> 1(2(1(3(0(x1)))))
   1(0(1(2(x1)))) -> 0(3(1(4(1(2(x1))))))
   1(0(1(2(x1)))) -> 4(1(4(1(0(2(x1))))))
   1(3(0(1(2(x1))))) -> 1(3(4(1(0(2(x1))))))


----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   0^1(1(2(x1))) -> 1^1(x1)
   1^1(0(1(2(x1)))) -> 1^1(x1)
   1^1(0(1(2(x1)))) -> 0^1(x1)
   0^1(1(2(x1))) -> 0^1(x1)
   0^1(1(2(x1))) -> 1^1(0(x1))
   0^1(1(2(x1))) -> 5^1(x1)
   0^1(1(2(x1))) -> 1^1(5(x1))
   0^1(0(1(2(x1)))) -> 1^1(x1)
   0^1(0(1(2(x1)))) -> 0^1(x1)
   0^1(1(2(0(x1)))) -> 0^1(0(x1))
   0^1(1(4(2(2(x1))))) -> 1^1(1(x1))
   0^1(1(4(2(2(x1))))) -> 1^1(x1)

The TRS R consists of the following rules:

   0(1(2(x1))) -> 0(3(1(2(x1))))
   0(1(2(x1))) -> 1(0(2(1(x1))))
   0(1(2(x1))) -> 2(1(4(0(x1))))
   0(1(2(x1))) -> 0(2(1(3(3(x1)))))
   0(1(2(x1))) -> 0(2(4(1(3(x1)))))
   0(1(2(x1))) -> 1(0(2(5(4(x1)))))
   0(1(2(x1))) -> 2(1(1(0(3(x1)))))
   0(1(2(x1))) -> 2(1(3(4(0(x1)))))
   0(1(2(x1))) -> 2(1(4(3(0(x1)))))
   0(1(2(x1))) -> 4(0(3(1(2(x1)))))
   0(1(2(x1))) -> 4(1(0(3(2(x1)))))
   0(1(2(x1))) -> 4(4(2(1(0(x1)))))
   0(1(2(x1))) -> 0(0(4(1(2(5(x1))))))
   0(1(2(x1))) -> 0(4(5(1(2(5(x1))))))
   0(1(2(x1))) -> 0(5(2(3(1(4(x1))))))
   0(1(2(x1))) -> 1(0(2(2(3(4(x1))))))
   0(1(2(x1))) -> 1(1(4(0(3(2(x1))))))
   0(1(2(x1))) -> 2(0(0(3(3(1(x1))))))
   0(1(2(x1))) -> 2(0(3(4(1(5(x1))))))
   0(1(2(x1))) -> 2(3(2(0(4(1(x1))))))
   0(1(2(x1))) -> 2(5(3(0(3(1(x1))))))
   0(1(2(x1))) -> 3(2(5(3(1(0(x1))))))
   0(1(2(x1))) -> 3(4(0(5(1(2(x1))))))
   0(1(2(x1))) -> 5(5(4(2(1(0(x1))))))
   0(0(1(2(x1)))) -> 0(0(2(4(1(x1)))))
   0(0(1(2(x1)))) -> 0(2(1(5(0(4(x1))))))
   0(0(1(2(x1)))) -> 1(0(2(3(5(0(x1))))))
   0(0(1(2(x1)))) -> 5(1(2(0(4(0(x1))))))
   0(0(5(2(x1)))) -> 5(3(0(3(0(2(x1))))))
   0(1(2(0(x1)))) -> 1(2(4(0(0(x1)))))
   0(1(2(0(x1)))) -> 0(4(1(0(0(2(x1))))))
   0(1(2(2(x1)))) -> 3(3(0(2(1(2(x1))))))
   0(1(5(2(x1)))) -> 2(5(1(0(3(x1)))))
   0(1(5(2(x1)))) -> 0(5(5(3(1(2(x1))))))
   0(1(5(2(x1)))) -> 1(3(5(0(2(2(x1))))))
   0(5(2(2(x1)))) -> 3(0(2(1(5(2(x1))))))
   1(0(1(2(x1)))) -> 0(4(1(2(1(x1)))))
   1(0(1(2(x1)))) -> 1(2(1(3(0(x1)))))
   1(0(1(2(x1)))) -> 0(3(1(4(1(2(x1))))))
   1(0(1(2(x1)))) -> 4(1(4(1(0(2(x1))))))
   5(0(1(2(x1)))) -> 0(2(1(3(5(x1)))))
   5(0(1(2(x1)))) -> 2(0(3(1(5(x1)))))
   5(0(1(2(x1)))) -> 5(3(1(0(3(2(x1))))))
   5(0(1(2(x1)))) -> 5(5(1(0(2(4(x1))))))
   0(1(0(2(2(x1))))) -> 3(0(2(1(0(2(x1))))))
   0(1(2(5(2(x1))))) -> 3(5(1(2(2(0(x1))))))
   0(1(3(0(0(x1))))) -> 0(0(4(1(3(0(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(1(5(2(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(2(1(1(x1))))))
   1(3(0(1(2(x1))))) -> 1(3(4(1(0(2(x1))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   1^1(0(1(2(x1)))) -> 1^1(x1)
   1^1(0(1(2(x1)))) -> 0^1(x1)
   0^1(1(2(x1))) -> 1^1(x1)
   0^1(1(2(x1))) -> 0^1(x1)
   0^1(1(2(x1))) -> 1^1(0(x1))
   0^1(1(2(x1))) -> 1^1(5(x1))
   0^1(0(1(2(x1)))) -> 1^1(x1)
   0^1(0(1(2(x1)))) -> 0^1(x1)
   0^1(1(2(0(x1)))) -> 0^1(0(x1))
   0^1(1(4(2(2(x1))))) -> 1^1(1(x1))
   0^1(1(4(2(2(x1))))) -> 1^1(x1)

The TRS R consists of the following rules:

   0(1(2(x1))) -> 0(3(1(2(x1))))
   0(1(2(x1))) -> 1(0(2(1(x1))))
   0(1(2(x1))) -> 2(1(4(0(x1))))
   0(1(2(x1))) -> 0(2(1(3(3(x1)))))
   0(1(2(x1))) -> 0(2(4(1(3(x1)))))
   0(1(2(x1))) -> 1(0(2(5(4(x1)))))
   0(1(2(x1))) -> 2(1(1(0(3(x1)))))
   0(1(2(x1))) -> 2(1(3(4(0(x1)))))
   0(1(2(x1))) -> 2(1(4(3(0(x1)))))
   0(1(2(x1))) -> 4(0(3(1(2(x1)))))
   0(1(2(x1))) -> 4(1(0(3(2(x1)))))
   0(1(2(x1))) -> 4(4(2(1(0(x1)))))
   0(1(2(x1))) -> 0(0(4(1(2(5(x1))))))
   0(1(2(x1))) -> 0(4(5(1(2(5(x1))))))
   0(1(2(x1))) -> 0(5(2(3(1(4(x1))))))
   0(1(2(x1))) -> 1(0(2(2(3(4(x1))))))
   0(1(2(x1))) -> 1(1(4(0(3(2(x1))))))
   0(1(2(x1))) -> 2(0(0(3(3(1(x1))))))
   0(1(2(x1))) -> 2(0(3(4(1(5(x1))))))
   0(1(2(x1))) -> 2(3(2(0(4(1(x1))))))
   0(1(2(x1))) -> 2(5(3(0(3(1(x1))))))
   0(1(2(x1))) -> 3(2(5(3(1(0(x1))))))
   0(1(2(x1))) -> 3(4(0(5(1(2(x1))))))
   0(1(2(x1))) -> 5(5(4(2(1(0(x1))))))
   0(0(1(2(x1)))) -> 0(0(2(4(1(x1)))))
   0(0(1(2(x1)))) -> 0(2(1(5(0(4(x1))))))
   0(0(1(2(x1)))) -> 1(0(2(3(5(0(x1))))))
   0(0(1(2(x1)))) -> 5(1(2(0(4(0(x1))))))
   0(0(5(2(x1)))) -> 5(3(0(3(0(2(x1))))))
   0(1(2(0(x1)))) -> 1(2(4(0(0(x1)))))
   0(1(2(0(x1)))) -> 0(4(1(0(0(2(x1))))))
   0(1(2(2(x1)))) -> 3(3(0(2(1(2(x1))))))
   0(1(5(2(x1)))) -> 2(5(1(0(3(x1)))))
   0(1(5(2(x1)))) -> 0(5(5(3(1(2(x1))))))
   0(1(5(2(x1)))) -> 1(3(5(0(2(2(x1))))))
   0(5(2(2(x1)))) -> 3(0(2(1(5(2(x1))))))
   1(0(1(2(x1)))) -> 0(4(1(2(1(x1)))))
   1(0(1(2(x1)))) -> 1(2(1(3(0(x1)))))
   1(0(1(2(x1)))) -> 0(3(1(4(1(2(x1))))))
   1(0(1(2(x1)))) -> 4(1(4(1(0(2(x1))))))
   5(0(1(2(x1)))) -> 0(2(1(3(5(x1)))))
   5(0(1(2(x1)))) -> 2(0(3(1(5(x1)))))
   5(0(1(2(x1)))) -> 5(3(1(0(3(2(x1))))))
   5(0(1(2(x1)))) -> 5(5(1(0(2(4(x1))))))
   0(1(0(2(2(x1))))) -> 3(0(2(1(0(2(x1))))))
   0(1(2(5(2(x1))))) -> 3(5(1(2(2(0(x1))))))
   0(1(3(0(0(x1))))) -> 0(0(4(1(3(0(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(1(5(2(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(2(1(1(x1))))))
   1(3(0(1(2(x1))))) -> 1(3(4(1(0(2(x1))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   0^1(0(1(2(x1)))) -> 1^1(x1)
   0^1(0(1(2(x1)))) -> 0^1(x1)
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(1^1(x_1)) =  	[[1A]] 	 +  	[[0A, -I, 0A]] 	* 	x_1
>>>

   <<<
 POL(0(x_1)) =  	[[0A], [0A], [-I]] 	 +  	[[0A, 0A, -I], [1A, 0A, 0A], [-I, 0A, -I]] 	* 	x_1
>>>

   <<<
 POL(1(x_1)) =  	[[1A], [1A], [0A]] 	 +  	[[0A, -I, 0A], [0A, -I, 0A], [0A, -I, 0A]] 	* 	x_1
>>>

   <<<
 POL(2(x_1)) =  	[[0A], [1A], [0A]] 	 +  	[[0A, 0A, 0A], [0A, 0A, 0A], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(0^1(x_1)) =  	[[0A]] 	 +  	[[0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(5(x_1)) =  	[[1A], [0A], [1A]] 	 +  	[[-I, -I, -I], [0A, 0A, -I], [-I, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(4(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[-I, -I, -I], [-I, -I, -I], [-I, -I, 0A]] 	* 	x_1
>>>

   <<<
 POL(3(x_1)) =  	[[0A], [-I], [0A]] 	 +  	[[-I, -I, -I], [-I, -I, -I], [-I, -I, 0A]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   0(1(2(x1))) -> 0(3(1(2(x1))))
   0(1(2(x1))) -> 1(0(2(1(x1))))
   0(1(2(x1))) -> 2(1(4(0(x1))))
   0(1(2(x1))) -> 0(2(1(3(3(x1)))))
   0(1(2(x1))) -> 0(2(4(1(3(x1)))))
   0(1(2(x1))) -> 1(0(2(5(4(x1)))))
   0(1(2(x1))) -> 2(1(1(0(3(x1)))))
   0(1(2(x1))) -> 2(1(3(4(0(x1)))))
   0(1(2(x1))) -> 2(1(4(3(0(x1)))))
   0(1(2(x1))) -> 4(0(3(1(2(x1)))))
   0(1(2(x1))) -> 4(1(0(3(2(x1)))))
   0(1(2(x1))) -> 4(4(2(1(0(x1)))))
   0(1(2(x1))) -> 0(0(4(1(2(5(x1))))))
   0(1(2(x1))) -> 0(4(5(1(2(5(x1))))))
   0(1(2(x1))) -> 0(5(2(3(1(4(x1))))))
   0(1(2(x1))) -> 1(0(2(2(3(4(x1))))))
   0(1(2(x1))) -> 1(1(4(0(3(2(x1))))))
   0(1(2(x1))) -> 2(0(0(3(3(1(x1))))))
   0(1(2(x1))) -> 2(0(3(4(1(5(x1))))))
   0(1(2(x1))) -> 2(3(2(0(4(1(x1))))))
   0(1(2(x1))) -> 2(5(3(0(3(1(x1))))))
   0(1(2(x1))) -> 3(2(5(3(1(0(x1))))))
   0(1(2(x1))) -> 3(4(0(5(1(2(x1))))))
   0(1(2(x1))) -> 5(5(4(2(1(0(x1))))))
   0(0(1(2(x1)))) -> 0(0(2(4(1(x1)))))
   0(0(1(2(x1)))) -> 0(2(1(5(0(4(x1))))))
   0(0(1(2(x1)))) -> 1(0(2(3(5(0(x1))))))
   0(0(1(2(x1)))) -> 5(1(2(0(4(0(x1))))))
   0(0(5(2(x1)))) -> 5(3(0(3(0(2(x1))))))
   0(1(2(0(x1)))) -> 1(2(4(0(0(x1)))))
   0(1(2(0(x1)))) -> 0(4(1(0(0(2(x1))))))
   0(1(2(2(x1)))) -> 3(3(0(2(1(2(x1))))))
   0(1(5(2(x1)))) -> 2(5(1(0(3(x1)))))
   0(1(5(2(x1)))) -> 0(5(5(3(1(2(x1))))))
   0(1(5(2(x1)))) -> 1(3(5(0(2(2(x1))))))
   0(5(2(2(x1)))) -> 3(0(2(1(5(2(x1))))))
   0(1(0(2(2(x1))))) -> 3(0(2(1(0(2(x1))))))
   0(1(2(5(2(x1))))) -> 3(5(1(2(2(0(x1))))))
   0(1(3(0(0(x1))))) -> 0(0(4(1(3(0(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(1(5(2(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(2(1(1(x1))))))
   5(0(1(2(x1)))) -> 0(2(1(3(5(x1)))))
   5(0(1(2(x1)))) -> 2(0(3(1(5(x1)))))
   5(0(1(2(x1)))) -> 5(3(1(0(3(2(x1))))))
   5(0(1(2(x1)))) -> 5(5(1(0(2(4(x1))))))
   1(0(1(2(x1)))) -> 0(4(1(2(1(x1)))))
   1(0(1(2(x1)))) -> 1(2(1(3(0(x1)))))
   1(0(1(2(x1)))) -> 0(3(1(4(1(2(x1))))))
   1(0(1(2(x1)))) -> 4(1(4(1(0(2(x1))))))
   1(3(0(1(2(x1))))) -> 1(3(4(1(0(2(x1))))))


----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   1^1(0(1(2(x1)))) -> 1^1(x1)
   1^1(0(1(2(x1)))) -> 0^1(x1)
   0^1(1(2(x1))) -> 1^1(x1)
   0^1(1(2(x1))) -> 0^1(x1)
   0^1(1(2(x1))) -> 1^1(0(x1))
   0^1(1(2(x1))) -> 1^1(5(x1))
   0^1(1(2(0(x1)))) -> 0^1(0(x1))
   0^1(1(4(2(2(x1))))) -> 1^1(1(x1))
   0^1(1(4(2(2(x1))))) -> 1^1(x1)

The TRS R consists of the following rules:

   0(1(2(x1))) -> 0(3(1(2(x1))))
   0(1(2(x1))) -> 1(0(2(1(x1))))
   0(1(2(x1))) -> 2(1(4(0(x1))))
   0(1(2(x1))) -> 0(2(1(3(3(x1)))))
   0(1(2(x1))) -> 0(2(4(1(3(x1)))))
   0(1(2(x1))) -> 1(0(2(5(4(x1)))))
   0(1(2(x1))) -> 2(1(1(0(3(x1)))))
   0(1(2(x1))) -> 2(1(3(4(0(x1)))))
   0(1(2(x1))) -> 2(1(4(3(0(x1)))))
   0(1(2(x1))) -> 4(0(3(1(2(x1)))))
   0(1(2(x1))) -> 4(1(0(3(2(x1)))))
   0(1(2(x1))) -> 4(4(2(1(0(x1)))))
   0(1(2(x1))) -> 0(0(4(1(2(5(x1))))))
   0(1(2(x1))) -> 0(4(5(1(2(5(x1))))))
   0(1(2(x1))) -> 0(5(2(3(1(4(x1))))))
   0(1(2(x1))) -> 1(0(2(2(3(4(x1))))))
   0(1(2(x1))) -> 1(1(4(0(3(2(x1))))))
   0(1(2(x1))) -> 2(0(0(3(3(1(x1))))))
   0(1(2(x1))) -> 2(0(3(4(1(5(x1))))))
   0(1(2(x1))) -> 2(3(2(0(4(1(x1))))))
   0(1(2(x1))) -> 2(5(3(0(3(1(x1))))))
   0(1(2(x1))) -> 3(2(5(3(1(0(x1))))))
   0(1(2(x1))) -> 3(4(0(5(1(2(x1))))))
   0(1(2(x1))) -> 5(5(4(2(1(0(x1))))))
   0(0(1(2(x1)))) -> 0(0(2(4(1(x1)))))
   0(0(1(2(x1)))) -> 0(2(1(5(0(4(x1))))))
   0(0(1(2(x1)))) -> 1(0(2(3(5(0(x1))))))
   0(0(1(2(x1)))) -> 5(1(2(0(4(0(x1))))))
   0(0(5(2(x1)))) -> 5(3(0(3(0(2(x1))))))
   0(1(2(0(x1)))) -> 1(2(4(0(0(x1)))))
   0(1(2(0(x1)))) -> 0(4(1(0(0(2(x1))))))
   0(1(2(2(x1)))) -> 3(3(0(2(1(2(x1))))))
   0(1(5(2(x1)))) -> 2(5(1(0(3(x1)))))
   0(1(5(2(x1)))) -> 0(5(5(3(1(2(x1))))))
   0(1(5(2(x1)))) -> 1(3(5(0(2(2(x1))))))
   0(5(2(2(x1)))) -> 3(0(2(1(5(2(x1))))))
   1(0(1(2(x1)))) -> 0(4(1(2(1(x1)))))
   1(0(1(2(x1)))) -> 1(2(1(3(0(x1)))))
   1(0(1(2(x1)))) -> 0(3(1(4(1(2(x1))))))
   1(0(1(2(x1)))) -> 4(1(4(1(0(2(x1))))))
   5(0(1(2(x1)))) -> 0(2(1(3(5(x1)))))
   5(0(1(2(x1)))) -> 2(0(3(1(5(x1)))))
   5(0(1(2(x1)))) -> 5(3(1(0(3(2(x1))))))
   5(0(1(2(x1)))) -> 5(5(1(0(2(4(x1))))))
   0(1(0(2(2(x1))))) -> 3(0(2(1(0(2(x1))))))
   0(1(2(5(2(x1))))) -> 3(5(1(2(2(0(x1))))))
   0(1(3(0(0(x1))))) -> 0(0(4(1(3(0(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(1(5(2(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(2(1(1(x1))))))
   1(3(0(1(2(x1))))) -> 1(3(4(1(0(2(x1))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   1^1(0(1(2(x1)))) -> 1^1(x1)
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(1^1(x_1)) =  	[[1A]] 	 +  	[[0A, 0A, -I]] 	* 	x_1
>>>

   <<<
 POL(0(x_1)) =  	[[-I], [-I], [0A]] 	 +  	[[0A, 1A, 0A], [-I, -I, 0A], [-I, -I, 0A]] 	* 	x_1
>>>

   <<<
 POL(1(x_1)) =  	[[0A], [1A], [1A]] 	 +  	[[0A, 0A, 0A], [-I, 0A, 0A], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(2(x_1)) =  	[[0A], [-I], [0A]] 	 +  	[[0A, 0A, 0A], [-I, -I, -I], [0A, 0A, -I]] 	* 	x_1
>>>

   <<<
 POL(0^1(x_1)) =  	[[1A]] 	 +  	[[1A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(5(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[0A, 0A, -I], [-I, 0A, -I], [-I, 0A, -I]] 	* 	x_1
>>>

   <<<
 POL(4(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[-I, 0A, 0A], [-I, -I, -I], [-I, 0A, -I]] 	* 	x_1
>>>

   <<<
 POL(3(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[-I, 0A, 0A], [-I, -I, -I], [-I, -I, -I]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   0(1(2(x1))) -> 0(3(1(2(x1))))
   0(1(2(x1))) -> 1(0(2(1(x1))))
   0(1(2(x1))) -> 2(1(4(0(x1))))
   0(1(2(x1))) -> 0(2(1(3(3(x1)))))
   0(1(2(x1))) -> 0(2(4(1(3(x1)))))
   0(1(2(x1))) -> 1(0(2(5(4(x1)))))
   0(1(2(x1))) -> 2(1(1(0(3(x1)))))
   0(1(2(x1))) -> 2(1(3(4(0(x1)))))
   0(1(2(x1))) -> 2(1(4(3(0(x1)))))
   0(1(2(x1))) -> 4(0(3(1(2(x1)))))
   0(1(2(x1))) -> 4(1(0(3(2(x1)))))
   0(1(2(x1))) -> 4(4(2(1(0(x1)))))
   0(1(2(x1))) -> 0(0(4(1(2(5(x1))))))
   0(1(2(x1))) -> 0(4(5(1(2(5(x1))))))
   0(1(2(x1))) -> 0(5(2(3(1(4(x1))))))
   0(1(2(x1))) -> 1(0(2(2(3(4(x1))))))
   0(1(2(x1))) -> 1(1(4(0(3(2(x1))))))
   0(1(2(x1))) -> 2(0(0(3(3(1(x1))))))
   0(1(2(x1))) -> 2(0(3(4(1(5(x1))))))
   0(1(2(x1))) -> 2(3(2(0(4(1(x1))))))
   0(1(2(x1))) -> 2(5(3(0(3(1(x1))))))
   0(1(2(x1))) -> 3(2(5(3(1(0(x1))))))
   0(1(2(x1))) -> 3(4(0(5(1(2(x1))))))
   0(1(2(x1))) -> 5(5(4(2(1(0(x1))))))
   0(0(1(2(x1)))) -> 0(0(2(4(1(x1)))))
   0(0(1(2(x1)))) -> 0(2(1(5(0(4(x1))))))
   0(0(1(2(x1)))) -> 1(0(2(3(5(0(x1))))))
   0(0(1(2(x1)))) -> 5(1(2(0(4(0(x1))))))
   0(0(5(2(x1)))) -> 5(3(0(3(0(2(x1))))))
   0(1(2(0(x1)))) -> 1(2(4(0(0(x1)))))
   0(1(2(0(x1)))) -> 0(4(1(0(0(2(x1))))))
   0(1(2(2(x1)))) -> 3(3(0(2(1(2(x1))))))
   0(1(5(2(x1)))) -> 2(5(1(0(3(x1)))))
   0(1(5(2(x1)))) -> 0(5(5(3(1(2(x1))))))
   0(1(5(2(x1)))) -> 1(3(5(0(2(2(x1))))))
   0(5(2(2(x1)))) -> 3(0(2(1(5(2(x1))))))
   0(1(0(2(2(x1))))) -> 3(0(2(1(0(2(x1))))))
   0(1(2(5(2(x1))))) -> 3(5(1(2(2(0(x1))))))
   0(1(3(0(0(x1))))) -> 0(0(4(1(3(0(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(1(5(2(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(2(1(1(x1))))))
   5(0(1(2(x1)))) -> 0(2(1(3(5(x1)))))
   5(0(1(2(x1)))) -> 2(0(3(1(5(x1)))))
   5(0(1(2(x1)))) -> 5(3(1(0(3(2(x1))))))
   5(0(1(2(x1)))) -> 5(5(1(0(2(4(x1))))))
   1(0(1(2(x1)))) -> 0(4(1(2(1(x1)))))
   1(0(1(2(x1)))) -> 1(2(1(3(0(x1)))))
   1(0(1(2(x1)))) -> 0(3(1(4(1(2(x1))))))
   1(0(1(2(x1)))) -> 4(1(4(1(0(2(x1))))))
   1(3(0(1(2(x1))))) -> 1(3(4(1(0(2(x1))))))


----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   1^1(0(1(2(x1)))) -> 0^1(x1)
   0^1(1(2(x1))) -> 1^1(x1)
   0^1(1(2(x1))) -> 0^1(x1)
   0^1(1(2(x1))) -> 1^1(0(x1))
   0^1(1(2(x1))) -> 1^1(5(x1))
   0^1(1(2(0(x1)))) -> 0^1(0(x1))
   0^1(1(4(2(2(x1))))) -> 1^1(1(x1))
   0^1(1(4(2(2(x1))))) -> 1^1(x1)

The TRS R consists of the following rules:

   0(1(2(x1))) -> 0(3(1(2(x1))))
   0(1(2(x1))) -> 1(0(2(1(x1))))
   0(1(2(x1))) -> 2(1(4(0(x1))))
   0(1(2(x1))) -> 0(2(1(3(3(x1)))))
   0(1(2(x1))) -> 0(2(4(1(3(x1)))))
   0(1(2(x1))) -> 1(0(2(5(4(x1)))))
   0(1(2(x1))) -> 2(1(1(0(3(x1)))))
   0(1(2(x1))) -> 2(1(3(4(0(x1)))))
   0(1(2(x1))) -> 2(1(4(3(0(x1)))))
   0(1(2(x1))) -> 4(0(3(1(2(x1)))))
   0(1(2(x1))) -> 4(1(0(3(2(x1)))))
   0(1(2(x1))) -> 4(4(2(1(0(x1)))))
   0(1(2(x1))) -> 0(0(4(1(2(5(x1))))))
   0(1(2(x1))) -> 0(4(5(1(2(5(x1))))))
   0(1(2(x1))) -> 0(5(2(3(1(4(x1))))))
   0(1(2(x1))) -> 1(0(2(2(3(4(x1))))))
   0(1(2(x1))) -> 1(1(4(0(3(2(x1))))))
   0(1(2(x1))) -> 2(0(0(3(3(1(x1))))))
   0(1(2(x1))) -> 2(0(3(4(1(5(x1))))))
   0(1(2(x1))) -> 2(3(2(0(4(1(x1))))))
   0(1(2(x1))) -> 2(5(3(0(3(1(x1))))))
   0(1(2(x1))) -> 3(2(5(3(1(0(x1))))))
   0(1(2(x1))) -> 3(4(0(5(1(2(x1))))))
   0(1(2(x1))) -> 5(5(4(2(1(0(x1))))))
   0(0(1(2(x1)))) -> 0(0(2(4(1(x1)))))
   0(0(1(2(x1)))) -> 0(2(1(5(0(4(x1))))))
   0(0(1(2(x1)))) -> 1(0(2(3(5(0(x1))))))
   0(0(1(2(x1)))) -> 5(1(2(0(4(0(x1))))))
   0(0(5(2(x1)))) -> 5(3(0(3(0(2(x1))))))
   0(1(2(0(x1)))) -> 1(2(4(0(0(x1)))))
   0(1(2(0(x1)))) -> 0(4(1(0(0(2(x1))))))
   0(1(2(2(x1)))) -> 3(3(0(2(1(2(x1))))))
   0(1(5(2(x1)))) -> 2(5(1(0(3(x1)))))
   0(1(5(2(x1)))) -> 0(5(5(3(1(2(x1))))))
   0(1(5(2(x1)))) -> 1(3(5(0(2(2(x1))))))
   0(5(2(2(x1)))) -> 3(0(2(1(5(2(x1))))))
   1(0(1(2(x1)))) -> 0(4(1(2(1(x1)))))
   1(0(1(2(x1)))) -> 1(2(1(3(0(x1)))))
   1(0(1(2(x1)))) -> 0(3(1(4(1(2(x1))))))
   1(0(1(2(x1)))) -> 4(1(4(1(0(2(x1))))))
   5(0(1(2(x1)))) -> 0(2(1(3(5(x1)))))
   5(0(1(2(x1)))) -> 2(0(3(1(5(x1)))))
   5(0(1(2(x1)))) -> 5(3(1(0(3(2(x1))))))
   5(0(1(2(x1)))) -> 5(5(1(0(2(4(x1))))))
   0(1(0(2(2(x1))))) -> 3(0(2(1(0(2(x1))))))
   0(1(2(5(2(x1))))) -> 3(5(1(2(2(0(x1))))))
   0(1(3(0(0(x1))))) -> 0(0(4(1(3(0(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(1(5(2(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(2(1(1(x1))))))
   1(3(0(1(2(x1))))) -> 1(3(4(1(0(2(x1))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   0^1(1(2(0(x1)))) -> 0^1(0(x1))
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(1^1(x_1)) =  	[[0A]] 	 +  	[[0A, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(0(x_1)) =  	[[-I], [0A], [0A]] 	 +  	[[0A, -I, -I], [0A, -I, -I], [0A, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(1(x_1)) =  	[[-I], [0A], [0A]] 	 +  	[[0A, -I, 0A], [0A, -I, 0A], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(2(x_1)) =  	[[0A], [-I], [1A]] 	 +  	[[0A, -I, 0A], [-I, -I, -I], [0A, 1A, -I]] 	* 	x_1
>>>

   <<<
 POL(0^1(x_1)) =  	[[0A]] 	 +  	[[0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(5(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[0A, -I, 0A], [0A, -I, 0A], [0A, -I, 0A]] 	* 	x_1
>>>

   <<<
 POL(4(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[-I, -I, -I], [-I, -I, 0A], [-I, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(3(x_1)) =  	[[0A], [-I], [-I]] 	 +  	[[-I, -I, -I], [-I, -I, -I], [-I, -I, -I]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   0(1(2(x1))) -> 0(3(1(2(x1))))
   0(1(2(x1))) -> 1(0(2(1(x1))))
   0(1(2(x1))) -> 2(1(4(0(x1))))
   0(1(2(x1))) -> 0(2(1(3(3(x1)))))
   0(1(2(x1))) -> 0(2(4(1(3(x1)))))
   0(1(2(x1))) -> 1(0(2(5(4(x1)))))
   0(1(2(x1))) -> 2(1(1(0(3(x1)))))
   0(1(2(x1))) -> 2(1(3(4(0(x1)))))
   0(1(2(x1))) -> 2(1(4(3(0(x1)))))
   0(1(2(x1))) -> 4(0(3(1(2(x1)))))
   0(1(2(x1))) -> 4(1(0(3(2(x1)))))
   0(1(2(x1))) -> 4(4(2(1(0(x1)))))
   0(1(2(x1))) -> 0(0(4(1(2(5(x1))))))
   0(1(2(x1))) -> 0(4(5(1(2(5(x1))))))
   0(1(2(x1))) -> 0(5(2(3(1(4(x1))))))
   0(1(2(x1))) -> 1(0(2(2(3(4(x1))))))
   0(1(2(x1))) -> 1(1(4(0(3(2(x1))))))
   0(1(2(x1))) -> 2(0(0(3(3(1(x1))))))
   0(1(2(x1))) -> 2(0(3(4(1(5(x1))))))
   0(1(2(x1))) -> 2(3(2(0(4(1(x1))))))
   0(1(2(x1))) -> 2(5(3(0(3(1(x1))))))
   0(1(2(x1))) -> 3(2(5(3(1(0(x1))))))
   0(1(2(x1))) -> 3(4(0(5(1(2(x1))))))
   0(1(2(x1))) -> 5(5(4(2(1(0(x1))))))
   0(0(1(2(x1)))) -> 0(0(2(4(1(x1)))))
   0(0(1(2(x1)))) -> 0(2(1(5(0(4(x1))))))
   0(0(1(2(x1)))) -> 1(0(2(3(5(0(x1))))))
   0(0(1(2(x1)))) -> 5(1(2(0(4(0(x1))))))
   0(0(5(2(x1)))) -> 5(3(0(3(0(2(x1))))))
   0(1(2(0(x1)))) -> 1(2(4(0(0(x1)))))
   0(1(2(0(x1)))) -> 0(4(1(0(0(2(x1))))))
   0(1(2(2(x1)))) -> 3(3(0(2(1(2(x1))))))
   0(1(5(2(x1)))) -> 2(5(1(0(3(x1)))))
   0(1(5(2(x1)))) -> 0(5(5(3(1(2(x1))))))
   0(1(5(2(x1)))) -> 1(3(5(0(2(2(x1))))))
   0(5(2(2(x1)))) -> 3(0(2(1(5(2(x1))))))
   0(1(0(2(2(x1))))) -> 3(0(2(1(0(2(x1))))))
   0(1(2(5(2(x1))))) -> 3(5(1(2(2(0(x1))))))
   0(1(3(0(0(x1))))) -> 0(0(4(1(3(0(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(1(5(2(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(2(1(1(x1))))))
   5(0(1(2(x1)))) -> 0(2(1(3(5(x1)))))
   5(0(1(2(x1)))) -> 2(0(3(1(5(x1)))))
   5(0(1(2(x1)))) -> 5(3(1(0(3(2(x1))))))
   5(0(1(2(x1)))) -> 5(5(1(0(2(4(x1))))))
   1(0(1(2(x1)))) -> 0(4(1(2(1(x1)))))
   1(0(1(2(x1)))) -> 1(2(1(3(0(x1)))))
   1(0(1(2(x1)))) -> 0(3(1(4(1(2(x1))))))
   1(0(1(2(x1)))) -> 4(1(4(1(0(2(x1))))))
   1(3(0(1(2(x1))))) -> 1(3(4(1(0(2(x1))))))


----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   1^1(0(1(2(x1)))) -> 0^1(x1)
   0^1(1(2(x1))) -> 1^1(x1)
   0^1(1(2(x1))) -> 0^1(x1)
   0^1(1(2(x1))) -> 1^1(0(x1))
   0^1(1(2(x1))) -> 1^1(5(x1))
   0^1(1(4(2(2(x1))))) -> 1^1(1(x1))
   0^1(1(4(2(2(x1))))) -> 1^1(x1)

The TRS R consists of the following rules:

   0(1(2(x1))) -> 0(3(1(2(x1))))
   0(1(2(x1))) -> 1(0(2(1(x1))))
   0(1(2(x1))) -> 2(1(4(0(x1))))
   0(1(2(x1))) -> 0(2(1(3(3(x1)))))
   0(1(2(x1))) -> 0(2(4(1(3(x1)))))
   0(1(2(x1))) -> 1(0(2(5(4(x1)))))
   0(1(2(x1))) -> 2(1(1(0(3(x1)))))
   0(1(2(x1))) -> 2(1(3(4(0(x1)))))
   0(1(2(x1))) -> 2(1(4(3(0(x1)))))
   0(1(2(x1))) -> 4(0(3(1(2(x1)))))
   0(1(2(x1))) -> 4(1(0(3(2(x1)))))
   0(1(2(x1))) -> 4(4(2(1(0(x1)))))
   0(1(2(x1))) -> 0(0(4(1(2(5(x1))))))
   0(1(2(x1))) -> 0(4(5(1(2(5(x1))))))
   0(1(2(x1))) -> 0(5(2(3(1(4(x1))))))
   0(1(2(x1))) -> 1(0(2(2(3(4(x1))))))
   0(1(2(x1))) -> 1(1(4(0(3(2(x1))))))
   0(1(2(x1))) -> 2(0(0(3(3(1(x1))))))
   0(1(2(x1))) -> 2(0(3(4(1(5(x1))))))
   0(1(2(x1))) -> 2(3(2(0(4(1(x1))))))
   0(1(2(x1))) -> 2(5(3(0(3(1(x1))))))
   0(1(2(x1))) -> 3(2(5(3(1(0(x1))))))
   0(1(2(x1))) -> 3(4(0(5(1(2(x1))))))
   0(1(2(x1))) -> 5(5(4(2(1(0(x1))))))
   0(0(1(2(x1)))) -> 0(0(2(4(1(x1)))))
   0(0(1(2(x1)))) -> 0(2(1(5(0(4(x1))))))
   0(0(1(2(x1)))) -> 1(0(2(3(5(0(x1))))))
   0(0(1(2(x1)))) -> 5(1(2(0(4(0(x1))))))
   0(0(5(2(x1)))) -> 5(3(0(3(0(2(x1))))))
   0(1(2(0(x1)))) -> 1(2(4(0(0(x1)))))
   0(1(2(0(x1)))) -> 0(4(1(0(0(2(x1))))))
   0(1(2(2(x1)))) -> 3(3(0(2(1(2(x1))))))
   0(1(5(2(x1)))) -> 2(5(1(0(3(x1)))))
   0(1(5(2(x1)))) -> 0(5(5(3(1(2(x1))))))
   0(1(5(2(x1)))) -> 1(3(5(0(2(2(x1))))))
   0(5(2(2(x1)))) -> 3(0(2(1(5(2(x1))))))
   1(0(1(2(x1)))) -> 0(4(1(2(1(x1)))))
   1(0(1(2(x1)))) -> 1(2(1(3(0(x1)))))
   1(0(1(2(x1)))) -> 0(3(1(4(1(2(x1))))))
   1(0(1(2(x1)))) -> 4(1(4(1(0(2(x1))))))
   5(0(1(2(x1)))) -> 0(2(1(3(5(x1)))))
   5(0(1(2(x1)))) -> 2(0(3(1(5(x1)))))
   5(0(1(2(x1)))) -> 5(3(1(0(3(2(x1))))))
   5(0(1(2(x1)))) -> 5(5(1(0(2(4(x1))))))
   0(1(0(2(2(x1))))) -> 3(0(2(1(0(2(x1))))))
   0(1(2(5(2(x1))))) -> 3(5(1(2(2(0(x1))))))
   0(1(3(0(0(x1))))) -> 0(0(4(1(3(0(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(1(5(2(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(2(1(1(x1))))))
   1(3(0(1(2(x1))))) -> 1(3(4(1(0(2(x1))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   0^1(1(4(2(2(x1))))) -> 1^1(1(x1))
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(1^1(x_1)) =  	[[0A]] 	 +  	[[0A, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(0(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[-I, 0A, -I], [0A, 0A, 0A], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(1(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[-I, -I, -I], [0A, 0A, 0A], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(2(x_1)) =  	[[-I], [1A], [0A]] 	 +  	[[0A, 0A, 0A], [-I, 0A, 0A], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(0^1(x_1)) =  	[[0A]] 	 +  	[[0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(5(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[0A, 0A, 0A], [0A, 0A, 0A], [-I, -I, 0A]] 	* 	x_1
>>>

   <<<
 POL(4(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[0A, -I, -I], [0A, -I, -I], [-I, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(3(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[0A, 0A, 0A], [0A, 0A, 0A], [0A, 0A, 0A]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   0(1(2(x1))) -> 0(3(1(2(x1))))
   0(1(2(x1))) -> 1(0(2(1(x1))))
   0(1(2(x1))) -> 2(1(4(0(x1))))
   0(1(2(x1))) -> 0(2(1(3(3(x1)))))
   0(1(2(x1))) -> 0(2(4(1(3(x1)))))
   0(1(2(x1))) -> 1(0(2(5(4(x1)))))
   0(1(2(x1))) -> 2(1(1(0(3(x1)))))
   0(1(2(x1))) -> 2(1(3(4(0(x1)))))
   0(1(2(x1))) -> 2(1(4(3(0(x1)))))
   0(1(2(x1))) -> 4(0(3(1(2(x1)))))
   0(1(2(x1))) -> 4(1(0(3(2(x1)))))
   0(1(2(x1))) -> 4(4(2(1(0(x1)))))
   0(1(2(x1))) -> 0(0(4(1(2(5(x1))))))
   0(1(2(x1))) -> 0(4(5(1(2(5(x1))))))
   0(1(2(x1))) -> 0(5(2(3(1(4(x1))))))
   0(1(2(x1))) -> 1(0(2(2(3(4(x1))))))
   0(1(2(x1))) -> 1(1(4(0(3(2(x1))))))
   0(1(2(x1))) -> 2(0(0(3(3(1(x1))))))
   0(1(2(x1))) -> 2(0(3(4(1(5(x1))))))
   0(1(2(x1))) -> 2(3(2(0(4(1(x1))))))
   0(1(2(x1))) -> 2(5(3(0(3(1(x1))))))
   0(1(2(x1))) -> 3(2(5(3(1(0(x1))))))
   0(1(2(x1))) -> 3(4(0(5(1(2(x1))))))
   0(1(2(x1))) -> 5(5(4(2(1(0(x1))))))
   0(0(1(2(x1)))) -> 0(0(2(4(1(x1)))))
   0(0(1(2(x1)))) -> 0(2(1(5(0(4(x1))))))
   0(0(1(2(x1)))) -> 1(0(2(3(5(0(x1))))))
   0(0(1(2(x1)))) -> 5(1(2(0(4(0(x1))))))
   0(0(5(2(x1)))) -> 5(3(0(3(0(2(x1))))))
   0(1(2(0(x1)))) -> 1(2(4(0(0(x1)))))
   0(1(2(0(x1)))) -> 0(4(1(0(0(2(x1))))))
   0(1(2(2(x1)))) -> 3(3(0(2(1(2(x1))))))
   0(1(5(2(x1)))) -> 2(5(1(0(3(x1)))))
   0(1(5(2(x1)))) -> 0(5(5(3(1(2(x1))))))
   0(1(5(2(x1)))) -> 1(3(5(0(2(2(x1))))))
   0(5(2(2(x1)))) -> 3(0(2(1(5(2(x1))))))
   0(1(0(2(2(x1))))) -> 3(0(2(1(0(2(x1))))))
   0(1(2(5(2(x1))))) -> 3(5(1(2(2(0(x1))))))
   0(1(3(0(0(x1))))) -> 0(0(4(1(3(0(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(1(5(2(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(2(1(1(x1))))))
   5(0(1(2(x1)))) -> 0(2(1(3(5(x1)))))
   5(0(1(2(x1)))) -> 2(0(3(1(5(x1)))))
   5(0(1(2(x1)))) -> 5(3(1(0(3(2(x1))))))
   5(0(1(2(x1)))) -> 5(5(1(0(2(4(x1))))))
   1(0(1(2(x1)))) -> 0(4(1(2(1(x1)))))
   1(0(1(2(x1)))) -> 1(2(1(3(0(x1)))))
   1(0(1(2(x1)))) -> 0(3(1(4(1(2(x1))))))
   1(0(1(2(x1)))) -> 4(1(4(1(0(2(x1))))))
   1(3(0(1(2(x1))))) -> 1(3(4(1(0(2(x1))))))


----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   1^1(0(1(2(x1)))) -> 0^1(x1)
   0^1(1(2(x1))) -> 1^1(x1)
   0^1(1(2(x1))) -> 0^1(x1)
   0^1(1(2(x1))) -> 1^1(0(x1))
   0^1(1(2(x1))) -> 1^1(5(x1))
   0^1(1(4(2(2(x1))))) -> 1^1(x1)

The TRS R consists of the following rules:

   0(1(2(x1))) -> 0(3(1(2(x1))))
   0(1(2(x1))) -> 1(0(2(1(x1))))
   0(1(2(x1))) -> 2(1(4(0(x1))))
   0(1(2(x1))) -> 0(2(1(3(3(x1)))))
   0(1(2(x1))) -> 0(2(4(1(3(x1)))))
   0(1(2(x1))) -> 1(0(2(5(4(x1)))))
   0(1(2(x1))) -> 2(1(1(0(3(x1)))))
   0(1(2(x1))) -> 2(1(3(4(0(x1)))))
   0(1(2(x1))) -> 2(1(4(3(0(x1)))))
   0(1(2(x1))) -> 4(0(3(1(2(x1)))))
   0(1(2(x1))) -> 4(1(0(3(2(x1)))))
   0(1(2(x1))) -> 4(4(2(1(0(x1)))))
   0(1(2(x1))) -> 0(0(4(1(2(5(x1))))))
   0(1(2(x1))) -> 0(4(5(1(2(5(x1))))))
   0(1(2(x1))) -> 0(5(2(3(1(4(x1))))))
   0(1(2(x1))) -> 1(0(2(2(3(4(x1))))))
   0(1(2(x1))) -> 1(1(4(0(3(2(x1))))))
   0(1(2(x1))) -> 2(0(0(3(3(1(x1))))))
   0(1(2(x1))) -> 2(0(3(4(1(5(x1))))))
   0(1(2(x1))) -> 2(3(2(0(4(1(x1))))))
   0(1(2(x1))) -> 2(5(3(0(3(1(x1))))))
   0(1(2(x1))) -> 3(2(5(3(1(0(x1))))))
   0(1(2(x1))) -> 3(4(0(5(1(2(x1))))))
   0(1(2(x1))) -> 5(5(4(2(1(0(x1))))))
   0(0(1(2(x1)))) -> 0(0(2(4(1(x1)))))
   0(0(1(2(x1)))) -> 0(2(1(5(0(4(x1))))))
   0(0(1(2(x1)))) -> 1(0(2(3(5(0(x1))))))
   0(0(1(2(x1)))) -> 5(1(2(0(4(0(x1))))))
   0(0(5(2(x1)))) -> 5(3(0(3(0(2(x1))))))
   0(1(2(0(x1)))) -> 1(2(4(0(0(x1)))))
   0(1(2(0(x1)))) -> 0(4(1(0(0(2(x1))))))
   0(1(2(2(x1)))) -> 3(3(0(2(1(2(x1))))))
   0(1(5(2(x1)))) -> 2(5(1(0(3(x1)))))
   0(1(5(2(x1)))) -> 0(5(5(3(1(2(x1))))))
   0(1(5(2(x1)))) -> 1(3(5(0(2(2(x1))))))
   0(5(2(2(x1)))) -> 3(0(2(1(5(2(x1))))))
   1(0(1(2(x1)))) -> 0(4(1(2(1(x1)))))
   1(0(1(2(x1)))) -> 1(2(1(3(0(x1)))))
   1(0(1(2(x1)))) -> 0(3(1(4(1(2(x1))))))
   1(0(1(2(x1)))) -> 4(1(4(1(0(2(x1))))))
   5(0(1(2(x1)))) -> 0(2(1(3(5(x1)))))
   5(0(1(2(x1)))) -> 2(0(3(1(5(x1)))))
   5(0(1(2(x1)))) -> 5(3(1(0(3(2(x1))))))
   5(0(1(2(x1)))) -> 5(5(1(0(2(4(x1))))))
   0(1(0(2(2(x1))))) -> 3(0(2(1(0(2(x1))))))
   0(1(2(5(2(x1))))) -> 3(5(1(2(2(0(x1))))))
   0(1(3(0(0(x1))))) -> 0(0(4(1(3(0(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(1(5(2(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(2(1(1(x1))))))
   1(3(0(1(2(x1))))) -> 1(3(4(1(0(2(x1))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   1^1(0(1(2(x1)))) -> 0^1(x1)
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(1^1(x_1)) =  	[[-I]] 	 +  	[[0A, -I, 0A]] 	* 	x_1
>>>

   <<<
 POL(0(x_1)) =  	[[-I], [-I], [-I]] 	 +  	[[0A, 0A, -I], [-I, 1A, 0A], [0A, 1A, -I]] 	* 	x_1
>>>

   <<<
 POL(1(x_1)) =  	[[-I], [-I], [-I]] 	 +  	[[0A, -I, -I], [-I, -I, 0A], [0A, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(2(x_1)) =  	[[-I], [-I], [-I]] 	 +  	[[0A, -I, 0A], [-I, -I, 0A], [0A, 1A, -I]] 	* 	x_1
>>>

   <<<
 POL(0^1(x_1)) =  	[[-I]] 	 +  	[[0A, 0A, -I]] 	* 	x_1
>>>

   <<<
 POL(5(x_1)) =  	[[-I], [-I], [-I]] 	 +  	[[0A, -I, -I], [-I, 0A, 0A], [-I, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(4(x_1)) =  	[[-I], [-I], [-I]] 	 +  	[[0A, -I, -I], [-I, -I, -I], [-I, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(3(x_1)) =  	[[-I], [-I], [-I]] 	 +  	[[0A, -I, -I], [-I, -I, -I], [-I, -I, -I]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   0(1(2(x1))) -> 0(3(1(2(x1))))
   0(1(2(x1))) -> 1(0(2(1(x1))))
   0(1(2(x1))) -> 2(1(4(0(x1))))
   0(1(2(x1))) -> 0(2(1(3(3(x1)))))
   0(1(2(x1))) -> 0(2(4(1(3(x1)))))
   0(1(2(x1))) -> 1(0(2(5(4(x1)))))
   0(1(2(x1))) -> 2(1(1(0(3(x1)))))
   0(1(2(x1))) -> 2(1(3(4(0(x1)))))
   0(1(2(x1))) -> 2(1(4(3(0(x1)))))
   0(1(2(x1))) -> 4(0(3(1(2(x1)))))
   0(1(2(x1))) -> 4(1(0(3(2(x1)))))
   0(1(2(x1))) -> 4(4(2(1(0(x1)))))
   0(1(2(x1))) -> 0(0(4(1(2(5(x1))))))
   0(1(2(x1))) -> 0(4(5(1(2(5(x1))))))
   0(1(2(x1))) -> 0(5(2(3(1(4(x1))))))
   0(1(2(x1))) -> 1(0(2(2(3(4(x1))))))
   0(1(2(x1))) -> 1(1(4(0(3(2(x1))))))
   0(1(2(x1))) -> 2(0(0(3(3(1(x1))))))
   0(1(2(x1))) -> 2(0(3(4(1(5(x1))))))
   0(1(2(x1))) -> 2(3(2(0(4(1(x1))))))
   0(1(2(x1))) -> 2(5(3(0(3(1(x1))))))
   0(1(2(x1))) -> 3(2(5(3(1(0(x1))))))
   0(1(2(x1))) -> 3(4(0(5(1(2(x1))))))
   0(1(2(x1))) -> 5(5(4(2(1(0(x1))))))
   0(0(1(2(x1)))) -> 0(0(2(4(1(x1)))))
   0(0(1(2(x1)))) -> 0(2(1(5(0(4(x1))))))
   0(0(1(2(x1)))) -> 1(0(2(3(5(0(x1))))))
   0(0(1(2(x1)))) -> 5(1(2(0(4(0(x1))))))
   0(0(5(2(x1)))) -> 5(3(0(3(0(2(x1))))))
   0(1(2(0(x1)))) -> 1(2(4(0(0(x1)))))
   0(1(2(0(x1)))) -> 0(4(1(0(0(2(x1))))))
   0(1(2(2(x1)))) -> 3(3(0(2(1(2(x1))))))
   0(1(5(2(x1)))) -> 2(5(1(0(3(x1)))))
   0(1(5(2(x1)))) -> 0(5(5(3(1(2(x1))))))
   0(1(5(2(x1)))) -> 1(3(5(0(2(2(x1))))))
   0(5(2(2(x1)))) -> 3(0(2(1(5(2(x1))))))
   0(1(0(2(2(x1))))) -> 3(0(2(1(0(2(x1))))))
   0(1(2(5(2(x1))))) -> 3(5(1(2(2(0(x1))))))
   0(1(3(0(0(x1))))) -> 0(0(4(1(3(0(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(1(5(2(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(2(1(1(x1))))))
   5(0(1(2(x1)))) -> 0(2(1(3(5(x1)))))
   5(0(1(2(x1)))) -> 2(0(3(1(5(x1)))))
   5(0(1(2(x1)))) -> 5(3(1(0(3(2(x1))))))
   5(0(1(2(x1)))) -> 5(5(1(0(2(4(x1))))))
   1(0(1(2(x1)))) -> 0(4(1(2(1(x1)))))
   1(0(1(2(x1)))) -> 1(2(1(3(0(x1)))))
   1(0(1(2(x1)))) -> 0(3(1(4(1(2(x1))))))
   1(0(1(2(x1)))) -> 4(1(4(1(0(2(x1))))))
   1(3(0(1(2(x1))))) -> 1(3(4(1(0(2(x1))))))


----------------------------------------

(22)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   0^1(1(2(x1))) -> 1^1(x1)
   0^1(1(2(x1))) -> 0^1(x1)
   0^1(1(2(x1))) -> 1^1(0(x1))
   0^1(1(2(x1))) -> 1^1(5(x1))
   0^1(1(4(2(2(x1))))) -> 1^1(x1)

The TRS R consists of the following rules:

   0(1(2(x1))) -> 0(3(1(2(x1))))
   0(1(2(x1))) -> 1(0(2(1(x1))))
   0(1(2(x1))) -> 2(1(4(0(x1))))
   0(1(2(x1))) -> 0(2(1(3(3(x1)))))
   0(1(2(x1))) -> 0(2(4(1(3(x1)))))
   0(1(2(x1))) -> 1(0(2(5(4(x1)))))
   0(1(2(x1))) -> 2(1(1(0(3(x1)))))
   0(1(2(x1))) -> 2(1(3(4(0(x1)))))
   0(1(2(x1))) -> 2(1(4(3(0(x1)))))
   0(1(2(x1))) -> 4(0(3(1(2(x1)))))
   0(1(2(x1))) -> 4(1(0(3(2(x1)))))
   0(1(2(x1))) -> 4(4(2(1(0(x1)))))
   0(1(2(x1))) -> 0(0(4(1(2(5(x1))))))
   0(1(2(x1))) -> 0(4(5(1(2(5(x1))))))
   0(1(2(x1))) -> 0(5(2(3(1(4(x1))))))
   0(1(2(x1))) -> 1(0(2(2(3(4(x1))))))
   0(1(2(x1))) -> 1(1(4(0(3(2(x1))))))
   0(1(2(x1))) -> 2(0(0(3(3(1(x1))))))
   0(1(2(x1))) -> 2(0(3(4(1(5(x1))))))
   0(1(2(x1))) -> 2(3(2(0(4(1(x1))))))
   0(1(2(x1))) -> 2(5(3(0(3(1(x1))))))
   0(1(2(x1))) -> 3(2(5(3(1(0(x1))))))
   0(1(2(x1))) -> 3(4(0(5(1(2(x1))))))
   0(1(2(x1))) -> 5(5(4(2(1(0(x1))))))
   0(0(1(2(x1)))) -> 0(0(2(4(1(x1)))))
   0(0(1(2(x1)))) -> 0(2(1(5(0(4(x1))))))
   0(0(1(2(x1)))) -> 1(0(2(3(5(0(x1))))))
   0(0(1(2(x1)))) -> 5(1(2(0(4(0(x1))))))
   0(0(5(2(x1)))) -> 5(3(0(3(0(2(x1))))))
   0(1(2(0(x1)))) -> 1(2(4(0(0(x1)))))
   0(1(2(0(x1)))) -> 0(4(1(0(0(2(x1))))))
   0(1(2(2(x1)))) -> 3(3(0(2(1(2(x1))))))
   0(1(5(2(x1)))) -> 2(5(1(0(3(x1)))))
   0(1(5(2(x1)))) -> 0(5(5(3(1(2(x1))))))
   0(1(5(2(x1)))) -> 1(3(5(0(2(2(x1))))))
   0(5(2(2(x1)))) -> 3(0(2(1(5(2(x1))))))
   1(0(1(2(x1)))) -> 0(4(1(2(1(x1)))))
   1(0(1(2(x1)))) -> 1(2(1(3(0(x1)))))
   1(0(1(2(x1)))) -> 0(3(1(4(1(2(x1))))))
   1(0(1(2(x1)))) -> 4(1(4(1(0(2(x1))))))
   5(0(1(2(x1)))) -> 0(2(1(3(5(x1)))))
   5(0(1(2(x1)))) -> 2(0(3(1(5(x1)))))
   5(0(1(2(x1)))) -> 5(3(1(0(3(2(x1))))))
   5(0(1(2(x1)))) -> 5(5(1(0(2(4(x1))))))
   0(1(0(2(2(x1))))) -> 3(0(2(1(0(2(x1))))))
   0(1(2(5(2(x1))))) -> 3(5(1(2(2(0(x1))))))
   0(1(3(0(0(x1))))) -> 0(0(4(1(3(0(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(1(5(2(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(2(1(1(x1))))))
   1(3(0(1(2(x1))))) -> 1(3(4(1(0(2(x1))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(23) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 4 less nodes.
----------------------------------------

(24)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   0^1(1(2(x1))) -> 0^1(x1)

The TRS R consists of the following rules:

   0(1(2(x1))) -> 0(3(1(2(x1))))
   0(1(2(x1))) -> 1(0(2(1(x1))))
   0(1(2(x1))) -> 2(1(4(0(x1))))
   0(1(2(x1))) -> 0(2(1(3(3(x1)))))
   0(1(2(x1))) -> 0(2(4(1(3(x1)))))
   0(1(2(x1))) -> 1(0(2(5(4(x1)))))
   0(1(2(x1))) -> 2(1(1(0(3(x1)))))
   0(1(2(x1))) -> 2(1(3(4(0(x1)))))
   0(1(2(x1))) -> 2(1(4(3(0(x1)))))
   0(1(2(x1))) -> 4(0(3(1(2(x1)))))
   0(1(2(x1))) -> 4(1(0(3(2(x1)))))
   0(1(2(x1))) -> 4(4(2(1(0(x1)))))
   0(1(2(x1))) -> 0(0(4(1(2(5(x1))))))
   0(1(2(x1))) -> 0(4(5(1(2(5(x1))))))
   0(1(2(x1))) -> 0(5(2(3(1(4(x1))))))
   0(1(2(x1))) -> 1(0(2(2(3(4(x1))))))
   0(1(2(x1))) -> 1(1(4(0(3(2(x1))))))
   0(1(2(x1))) -> 2(0(0(3(3(1(x1))))))
   0(1(2(x1))) -> 2(0(3(4(1(5(x1))))))
   0(1(2(x1))) -> 2(3(2(0(4(1(x1))))))
   0(1(2(x1))) -> 2(5(3(0(3(1(x1))))))
   0(1(2(x1))) -> 3(2(5(3(1(0(x1))))))
   0(1(2(x1))) -> 3(4(0(5(1(2(x1))))))
   0(1(2(x1))) -> 5(5(4(2(1(0(x1))))))
   0(0(1(2(x1)))) -> 0(0(2(4(1(x1)))))
   0(0(1(2(x1)))) -> 0(2(1(5(0(4(x1))))))
   0(0(1(2(x1)))) -> 1(0(2(3(5(0(x1))))))
   0(0(1(2(x1)))) -> 5(1(2(0(4(0(x1))))))
   0(0(5(2(x1)))) -> 5(3(0(3(0(2(x1))))))
   0(1(2(0(x1)))) -> 1(2(4(0(0(x1)))))
   0(1(2(0(x1)))) -> 0(4(1(0(0(2(x1))))))
   0(1(2(2(x1)))) -> 3(3(0(2(1(2(x1))))))
   0(1(5(2(x1)))) -> 2(5(1(0(3(x1)))))
   0(1(5(2(x1)))) -> 0(5(5(3(1(2(x1))))))
   0(1(5(2(x1)))) -> 1(3(5(0(2(2(x1))))))
   0(5(2(2(x1)))) -> 3(0(2(1(5(2(x1))))))
   1(0(1(2(x1)))) -> 0(4(1(2(1(x1)))))
   1(0(1(2(x1)))) -> 1(2(1(3(0(x1)))))
   1(0(1(2(x1)))) -> 0(3(1(4(1(2(x1))))))
   1(0(1(2(x1)))) -> 4(1(4(1(0(2(x1))))))
   5(0(1(2(x1)))) -> 0(2(1(3(5(x1)))))
   5(0(1(2(x1)))) -> 2(0(3(1(5(x1)))))
   5(0(1(2(x1)))) -> 5(3(1(0(3(2(x1))))))
   5(0(1(2(x1)))) -> 5(5(1(0(2(4(x1))))))
   0(1(0(2(2(x1))))) -> 3(0(2(1(0(2(x1))))))
   0(1(2(5(2(x1))))) -> 3(5(1(2(2(0(x1))))))
   0(1(3(0(0(x1))))) -> 0(0(4(1(3(0(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(1(5(2(x1))))))
   0(1(4(2(2(x1))))) -> 0(2(4(2(1(1(x1))))))
   1(3(0(1(2(x1))))) -> 1(3(4(1(0(2(x1))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(25) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(26)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   0^1(1(2(x1))) -> 0^1(x1)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(27) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*0^1(1(2(x1))) -> 0^1(x1)
The graph contains the following edges 1 > 1


----------------------------------------

(28)
YES
