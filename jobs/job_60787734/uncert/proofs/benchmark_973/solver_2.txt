YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/0ynEp.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRS Reverse [EQUIVALENT, 0 ms]
(2) QTRS
(3) FlatCCProof [EQUIVALENT, 0 ms]
(4) QTRS
(5) RootLabelingProof [EQUIVALENT, 0 ms]
(6) QTRS
(7) QTRSRRRProof [EQUIVALENT, 25 ms]
(8) QTRS
(9) DependencyPairsProof [EQUIVALENT, 28 ms]
(10) QDP
(11) DependencyGraphProof [EQUIVALENT, 0 ms]
(12) QDP
(13) QDPOrderProof [EQUIVALENT, 199 ms]
(14) QDP
(15) DependencyGraphProof [EQUIVALENT, 0 ms]
(16) AND
    (17) QDP
        (18) UsableRulesProof [EQUIVALENT, 0 ms]
        (19) QDP
        (20) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (21) YES
    (22) QDP
        (23) QDPOrderProof [EQUIVALENT, 15 ms]
        (24) QDP
        (25) QDPOrderProof [EQUIVALENT, 170 ms]
        (26) QDP
        (27) QDPOrderProof [EQUIVALENT, 2461 ms]
        (28) QDP
        (29) QDPOrderProof [EQUIVALENT, 19 ms]
        (30) QDP
        (31) QDPOrderProof [EQUIVALENT, 23 ms]
        (32) QDP
        (33) PisEmptyProof [EQUIVALENT, 0 ms]
        (34) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(c(x1)) -> a(x1)
   d(a(x1)) -> a(c(b(c(d(x1)))))
   a(c(b(c(x1)))) -> c(b(c(c(x1))))
   c(x1) -> b(a(a(x1)))
   d(c(x1)) -> a(c(d(a(x1))))

Q is empty.

----------------------------------------

(1) QTRS Reverse (EQUIVALENT)
We applied the QTRS Reverse Processor [REVERSE].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   c(a(x1)) -> a(x1)
   a(d(x1)) -> d(c(b(c(a(x1)))))
   c(b(c(a(x1)))) -> c(c(b(c(x1))))
   c(x1) -> a(a(b(x1)))
   c(d(x1)) -> a(d(c(a(x1))))

Q is empty.

----------------------------------------

(3) FlatCCProof (EQUIVALENT)
We used flat context closure [ROOTLAB]
As Q is empty the flat context closure was sound AND complete.

----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   c(b(c(a(x1)))) -> c(c(b(c(x1))))
   c(c(a(x1))) -> c(a(x1))
   a(c(a(x1))) -> a(a(x1))
   d(c(a(x1))) -> d(a(x1))
   b(c(a(x1))) -> b(a(x1))
   c(a(d(x1))) -> c(d(c(b(c(a(x1))))))
   a(a(d(x1))) -> a(d(c(b(c(a(x1))))))
   d(a(d(x1))) -> d(d(c(b(c(a(x1))))))
   b(a(d(x1))) -> b(d(c(b(c(a(x1))))))
   c(c(x1)) -> c(a(a(b(x1))))
   a(c(x1)) -> a(a(a(b(x1))))
   d(c(x1)) -> d(a(a(b(x1))))
   b(c(x1)) -> b(a(a(b(x1))))
   c(c(d(x1))) -> c(a(d(c(a(x1)))))
   a(c(d(x1))) -> a(a(d(c(a(x1)))))
   d(c(d(x1))) -> d(a(d(c(a(x1)))))
   b(c(d(x1))) -> b(a(d(c(a(x1)))))

Q is empty.

----------------------------------------

(5) RootLabelingProof (EQUIVALENT)
We used plain root labeling [ROOTLAB] with the following heuristic:
LabelAll: All function symbols get labeled

As Q is empty the root labeling was sound AND complete.

----------------------------------------

(6)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{c_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{b_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{d_1}(x1))))
   c_{c_1}(c_{a_1}(a_{c_1}(x1))) -> c_{a_1}(a_{c_1}(x1))
   c_{c_1}(c_{a_1}(a_{b_1}(x1))) -> c_{a_1}(a_{b_1}(x1))
   c_{c_1}(c_{a_1}(a_{a_1}(x1))) -> c_{a_1}(a_{a_1}(x1))
   c_{c_1}(c_{a_1}(a_{d_1}(x1))) -> c_{a_1}(a_{d_1}(x1))
   a_{c_1}(c_{a_1}(a_{c_1}(x1))) -> a_{a_1}(a_{c_1}(x1))
   a_{c_1}(c_{a_1}(a_{b_1}(x1))) -> a_{a_1}(a_{b_1}(x1))
   a_{c_1}(c_{a_1}(a_{a_1}(x1))) -> a_{a_1}(a_{a_1}(x1))
   a_{c_1}(c_{a_1}(a_{d_1}(x1))) -> a_{a_1}(a_{d_1}(x1))
   d_{c_1}(c_{a_1}(a_{c_1}(x1))) -> d_{a_1}(a_{c_1}(x1))
   d_{c_1}(c_{a_1}(a_{b_1}(x1))) -> d_{a_1}(a_{b_1}(x1))
   d_{c_1}(c_{a_1}(a_{a_1}(x1))) -> d_{a_1}(a_{a_1}(x1))
   d_{c_1}(c_{a_1}(a_{d_1}(x1))) -> d_{a_1}(a_{d_1}(x1))
   b_{c_1}(c_{a_1}(a_{c_1}(x1))) -> b_{a_1}(a_{c_1}(x1))
   b_{c_1}(c_{a_1}(a_{b_1}(x1))) -> b_{a_1}(a_{b_1}(x1))
   b_{c_1}(c_{a_1}(a_{a_1}(x1))) -> b_{a_1}(a_{a_1}(x1))
   b_{c_1}(c_{a_1}(a_{d_1}(x1))) -> b_{a_1}(a_{d_1}(x1))
   c_{a_1}(a_{d_1}(d_{c_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{b_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{a_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{d_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{c_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{b_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{a_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{d_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{c_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{b_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{a_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{d_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   b_{a_1}(a_{d_1}(d_{c_1}(x1))) -> b_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   b_{a_1}(a_{d_1}(d_{b_1}(x1))) -> b_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1))))))
   b_{a_1}(a_{d_1}(d_{a_1}(x1))) -> b_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   b_{a_1}(a_{d_1}(d_{d_1}(x1))) -> b_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   c_{c_1}(c_{c_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   c_{c_1}(c_{b_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   c_{c_1}(c_{a_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   c_{c_1}(c_{d_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{d_1}(x1))))
   a_{c_1}(c_{c_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   a_{c_1}(c_{b_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   a_{c_1}(c_{a_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   a_{c_1}(c_{d_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{d_1}(x1))))
   d_{c_1}(c_{c_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   d_{c_1}(c_{b_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   d_{c_1}(c_{a_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   d_{c_1}(c_{d_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{d_1}(x1))))
   b_{c_1}(c_{c_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   b_{c_1}(c_{b_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   b_{c_1}(c_{a_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   b_{c_1}(c_{d_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{d_1}(x1))))
   c_{c_1}(c_{d_1}(d_{c_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   c_{c_1}(c_{d_1}(d_{b_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{b_1}(x1)))))
   c_{c_1}(c_{d_1}(d_{a_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   c_{c_1}(c_{d_1}(d_{d_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{c_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{b_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{b_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{a_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{d_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{c_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{b_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{b_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{a_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{d_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{c_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{b_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{b_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{a_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{d_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))

Q is empty.

----------------------------------------

(7) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(a_{a_1}(x_1)) = x_1
   POL(a_{b_1}(x_1)) = x_1
   POL(a_{c_1}(x_1)) = x_1
   POL(a_{d_1}(x_1)) = 1 + x_1
   POL(b_{a_1}(x_1)) = x_1
   POL(b_{b_1}(x_1)) = x_1
   POL(b_{c_1}(x_1)) = x_1
   POL(b_{d_1}(x_1)) = x_1
   POL(c_{a_1}(x_1)) = x_1
   POL(c_{b_1}(x_1)) = x_1
   POL(c_{c_1}(x_1)) = x_1
   POL(c_{d_1}(x_1)) = 1 + x_1
   POL(d_{a_1}(x_1)) = x_1
   POL(d_{b_1}(x_1)) = 1 + x_1
   POL(d_{c_1}(x_1)) = x_1
   POL(d_{d_1}(x_1)) = 1 + x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   c_{a_1}(a_{d_1}(d_{b_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{b_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{b_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1))))))
   b_{a_1}(a_{d_1}(d_{c_1}(x1))) -> b_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   b_{a_1}(a_{d_1}(d_{b_1}(x1))) -> b_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1))))))
   b_{a_1}(a_{d_1}(d_{a_1}(x1))) -> b_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   b_{a_1}(a_{d_1}(d_{d_1}(x1))) -> b_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   c_{c_1}(c_{d_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{d_1}(x1))))
   a_{c_1}(c_{d_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{d_1}(x1))))
   d_{c_1}(c_{d_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{d_1}(x1))))
   b_{c_1}(c_{d_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{d_1}(x1))))
   c_{c_1}(c_{d_1}(d_{b_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{b_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{b_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{b_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{b_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{b_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{b_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{b_1}(x1)))))




----------------------------------------

(8)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{c_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{b_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{d_1}(x1))))
   c_{c_1}(c_{a_1}(a_{c_1}(x1))) -> c_{a_1}(a_{c_1}(x1))
   c_{c_1}(c_{a_1}(a_{b_1}(x1))) -> c_{a_1}(a_{b_1}(x1))
   c_{c_1}(c_{a_1}(a_{a_1}(x1))) -> c_{a_1}(a_{a_1}(x1))
   c_{c_1}(c_{a_1}(a_{d_1}(x1))) -> c_{a_1}(a_{d_1}(x1))
   a_{c_1}(c_{a_1}(a_{c_1}(x1))) -> a_{a_1}(a_{c_1}(x1))
   a_{c_1}(c_{a_1}(a_{b_1}(x1))) -> a_{a_1}(a_{b_1}(x1))
   a_{c_1}(c_{a_1}(a_{a_1}(x1))) -> a_{a_1}(a_{a_1}(x1))
   a_{c_1}(c_{a_1}(a_{d_1}(x1))) -> a_{a_1}(a_{d_1}(x1))
   d_{c_1}(c_{a_1}(a_{c_1}(x1))) -> d_{a_1}(a_{c_1}(x1))
   d_{c_1}(c_{a_1}(a_{b_1}(x1))) -> d_{a_1}(a_{b_1}(x1))
   d_{c_1}(c_{a_1}(a_{a_1}(x1))) -> d_{a_1}(a_{a_1}(x1))
   d_{c_1}(c_{a_1}(a_{d_1}(x1))) -> d_{a_1}(a_{d_1}(x1))
   b_{c_1}(c_{a_1}(a_{c_1}(x1))) -> b_{a_1}(a_{c_1}(x1))
   b_{c_1}(c_{a_1}(a_{b_1}(x1))) -> b_{a_1}(a_{b_1}(x1))
   b_{c_1}(c_{a_1}(a_{a_1}(x1))) -> b_{a_1}(a_{a_1}(x1))
   b_{c_1}(c_{a_1}(a_{d_1}(x1))) -> b_{a_1}(a_{d_1}(x1))
   c_{a_1}(a_{d_1}(d_{c_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{a_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{d_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{c_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{a_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{d_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{c_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{a_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{d_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   c_{c_1}(c_{c_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   c_{c_1}(c_{b_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   c_{c_1}(c_{a_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   a_{c_1}(c_{c_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   a_{c_1}(c_{b_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   a_{c_1}(c_{a_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   d_{c_1}(c_{c_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   d_{c_1}(c_{b_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   d_{c_1}(c_{a_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   b_{c_1}(c_{c_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   b_{c_1}(c_{b_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   b_{c_1}(c_{a_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   c_{c_1}(c_{d_1}(d_{c_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   c_{c_1}(c_{d_1}(d_{a_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   c_{c_1}(c_{d_1}(d_{d_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{c_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{a_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{d_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{c_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{a_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{d_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{c_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{a_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{d_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))

Q is empty.

----------------------------------------

(9) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C_{B_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))) -> C_{C_1}(c_{b_1}(b_{c_1}(c_{c_1}(x1))))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))) -> C_{B_1}(b_{c_1}(c_{c_1}(x1)))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))) -> B_{C_1}(c_{c_1}(x1))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))) -> C_{C_1}(x1)
   C_{B_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> C_{C_1}(c_{b_1}(b_{c_1}(c_{b_1}(x1))))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> C_{B_1}(b_{c_1}(c_{b_1}(x1)))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> B_{C_1}(c_{b_1}(x1))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> C_{B_1}(x1)
   C_{B_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))) -> C_{C_1}(c_{b_1}(b_{c_1}(c_{a_1}(x1))))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))) -> C_{B_1}(b_{c_1}(c_{a_1}(x1)))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))) -> B_{C_1}(c_{a_1}(x1))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))) -> C_{A_1}(x1)
   C_{B_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))) -> C_{C_1}(c_{b_1}(b_{c_1}(c_{d_1}(x1))))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))) -> C_{B_1}(b_{c_1}(c_{d_1}(x1)))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))) -> B_{C_1}(c_{d_1}(x1))
   A_{C_1}(c_{a_1}(a_{c_1}(x1))) -> A_{A_1}(a_{c_1}(x1))
   A_{C_1}(c_{a_1}(a_{b_1}(x1))) -> A_{A_1}(a_{b_1}(x1))
   A_{C_1}(c_{a_1}(a_{a_1}(x1))) -> A_{A_1}(a_{a_1}(x1))
   A_{C_1}(c_{a_1}(a_{d_1}(x1))) -> A_{A_1}(a_{d_1}(x1))
   D_{C_1}(c_{a_1}(a_{c_1}(x1))) -> D_{A_1}(a_{c_1}(x1))
   D_{C_1}(c_{a_1}(a_{b_1}(x1))) -> D_{A_1}(a_{b_1}(x1))
   D_{C_1}(c_{a_1}(a_{a_1}(x1))) -> D_{A_1}(a_{a_1}(x1))
   D_{C_1}(c_{a_1}(a_{d_1}(x1))) -> D_{A_1}(a_{d_1}(x1))
   C_{A_1}(a_{d_1}(d_{c_1}(x1))) -> D_{C_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   C_{A_1}(a_{d_1}(d_{c_1}(x1))) -> C_{B_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))
   C_{A_1}(a_{d_1}(d_{c_1}(x1))) -> B_{C_1}(c_{a_1}(a_{c_1}(x1)))
   C_{A_1}(a_{d_1}(d_{c_1}(x1))) -> C_{A_1}(a_{c_1}(x1))
   C_{A_1}(a_{d_1}(d_{c_1}(x1))) -> A_{C_1}(x1)
   C_{A_1}(a_{d_1}(d_{a_1}(x1))) -> D_{C_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   C_{A_1}(a_{d_1}(d_{a_1}(x1))) -> C_{B_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))
   C_{A_1}(a_{d_1}(d_{a_1}(x1))) -> B_{C_1}(c_{a_1}(a_{a_1}(x1)))
   C_{A_1}(a_{d_1}(d_{a_1}(x1))) -> C_{A_1}(a_{a_1}(x1))
   C_{A_1}(a_{d_1}(d_{a_1}(x1))) -> A_{A_1}(x1)
   C_{A_1}(a_{d_1}(d_{d_1}(x1))) -> D_{C_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   C_{A_1}(a_{d_1}(d_{d_1}(x1))) -> C_{B_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))
   C_{A_1}(a_{d_1}(d_{d_1}(x1))) -> B_{C_1}(c_{a_1}(a_{d_1}(x1)))
   C_{A_1}(a_{d_1}(d_{d_1}(x1))) -> C_{A_1}(a_{d_1}(x1))
   A_{A_1}(a_{d_1}(d_{c_1}(x1))) -> D_{C_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   A_{A_1}(a_{d_1}(d_{c_1}(x1))) -> C_{B_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))
   A_{A_1}(a_{d_1}(d_{c_1}(x1))) -> B_{C_1}(c_{a_1}(a_{c_1}(x1)))
   A_{A_1}(a_{d_1}(d_{c_1}(x1))) -> C_{A_1}(a_{c_1}(x1))
   A_{A_1}(a_{d_1}(d_{c_1}(x1))) -> A_{C_1}(x1)
   A_{A_1}(a_{d_1}(d_{a_1}(x1))) -> D_{C_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   A_{A_1}(a_{d_1}(d_{a_1}(x1))) -> C_{B_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))
   A_{A_1}(a_{d_1}(d_{a_1}(x1))) -> B_{C_1}(c_{a_1}(a_{a_1}(x1)))
   A_{A_1}(a_{d_1}(d_{a_1}(x1))) -> C_{A_1}(a_{a_1}(x1))
   A_{A_1}(a_{d_1}(d_{a_1}(x1))) -> A_{A_1}(x1)
   A_{A_1}(a_{d_1}(d_{d_1}(x1))) -> D_{C_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   A_{A_1}(a_{d_1}(d_{d_1}(x1))) -> C_{B_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))
   A_{A_1}(a_{d_1}(d_{d_1}(x1))) -> B_{C_1}(c_{a_1}(a_{d_1}(x1)))
   A_{A_1}(a_{d_1}(d_{d_1}(x1))) -> C_{A_1}(a_{d_1}(x1))
   D_{A_1}(a_{d_1}(d_{c_1}(x1))) -> D_{C_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   D_{A_1}(a_{d_1}(d_{c_1}(x1))) -> C_{B_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))
   D_{A_1}(a_{d_1}(d_{c_1}(x1))) -> B_{C_1}(c_{a_1}(a_{c_1}(x1)))
   D_{A_1}(a_{d_1}(d_{c_1}(x1))) -> C_{A_1}(a_{c_1}(x1))
   D_{A_1}(a_{d_1}(d_{c_1}(x1))) -> A_{C_1}(x1)
   D_{A_1}(a_{d_1}(d_{a_1}(x1))) -> D_{C_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   D_{A_1}(a_{d_1}(d_{a_1}(x1))) -> C_{B_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))
   D_{A_1}(a_{d_1}(d_{a_1}(x1))) -> B_{C_1}(c_{a_1}(a_{a_1}(x1)))
   D_{A_1}(a_{d_1}(d_{a_1}(x1))) -> C_{A_1}(a_{a_1}(x1))
   D_{A_1}(a_{d_1}(d_{a_1}(x1))) -> A_{A_1}(x1)
   D_{A_1}(a_{d_1}(d_{d_1}(x1))) -> D_{C_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   D_{A_1}(a_{d_1}(d_{d_1}(x1))) -> C_{B_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))
   D_{A_1}(a_{d_1}(d_{d_1}(x1))) -> B_{C_1}(c_{a_1}(a_{d_1}(x1)))
   D_{A_1}(a_{d_1}(d_{d_1}(x1))) -> C_{A_1}(a_{d_1}(x1))
   C_{C_1}(c_{c_1}(x1)) -> C_{A_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   C_{C_1}(c_{c_1}(x1)) -> A_{A_1}(a_{b_1}(b_{c_1}(x1)))
   C_{C_1}(c_{c_1}(x1)) -> B_{C_1}(x1)
   C_{C_1}(c_{b_1}(x1)) -> C_{A_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   C_{C_1}(c_{b_1}(x1)) -> A_{A_1}(a_{b_1}(b_{b_1}(x1)))
   C_{C_1}(c_{a_1}(x1)) -> C_{A_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   C_{C_1}(c_{a_1}(x1)) -> A_{A_1}(a_{b_1}(b_{a_1}(x1)))
   A_{C_1}(c_{c_1}(x1)) -> A_{A_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   A_{C_1}(c_{c_1}(x1)) -> A_{A_1}(a_{b_1}(b_{c_1}(x1)))
   A_{C_1}(c_{c_1}(x1)) -> B_{C_1}(x1)
   A_{C_1}(c_{b_1}(x1)) -> A_{A_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   A_{C_1}(c_{b_1}(x1)) -> A_{A_1}(a_{b_1}(b_{b_1}(x1)))
   A_{C_1}(c_{a_1}(x1)) -> A_{A_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   A_{C_1}(c_{a_1}(x1)) -> A_{A_1}(a_{b_1}(b_{a_1}(x1)))
   D_{C_1}(c_{c_1}(x1)) -> D_{A_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   D_{C_1}(c_{c_1}(x1)) -> A_{A_1}(a_{b_1}(b_{c_1}(x1)))
   D_{C_1}(c_{c_1}(x1)) -> B_{C_1}(x1)
   D_{C_1}(c_{b_1}(x1)) -> D_{A_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   D_{C_1}(c_{b_1}(x1)) -> A_{A_1}(a_{b_1}(b_{b_1}(x1)))
   D_{C_1}(c_{a_1}(x1)) -> D_{A_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   D_{C_1}(c_{a_1}(x1)) -> A_{A_1}(a_{b_1}(b_{a_1}(x1)))
   B_{C_1}(c_{c_1}(x1)) -> A_{A_1}(a_{b_1}(b_{c_1}(x1)))
   B_{C_1}(c_{c_1}(x1)) -> B_{C_1}(x1)
   B_{C_1}(c_{b_1}(x1)) -> A_{A_1}(a_{b_1}(b_{b_1}(x1)))
   B_{C_1}(c_{a_1}(x1)) -> A_{A_1}(a_{b_1}(b_{a_1}(x1)))
   C_{C_1}(c_{d_1}(d_{c_1}(x1))) -> C_{A_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   C_{C_1}(c_{d_1}(d_{c_1}(x1))) -> D_{C_1}(c_{a_1}(a_{c_1}(x1)))
   C_{C_1}(c_{d_1}(d_{c_1}(x1))) -> C_{A_1}(a_{c_1}(x1))
   C_{C_1}(c_{d_1}(d_{c_1}(x1))) -> A_{C_1}(x1)
   C_{C_1}(c_{d_1}(d_{a_1}(x1))) -> C_{A_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   C_{C_1}(c_{d_1}(d_{a_1}(x1))) -> D_{C_1}(c_{a_1}(a_{a_1}(x1)))
   C_{C_1}(c_{d_1}(d_{a_1}(x1))) -> C_{A_1}(a_{a_1}(x1))
   C_{C_1}(c_{d_1}(d_{a_1}(x1))) -> A_{A_1}(x1)
   C_{C_1}(c_{d_1}(d_{d_1}(x1))) -> C_{A_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   C_{C_1}(c_{d_1}(d_{d_1}(x1))) -> D_{C_1}(c_{a_1}(a_{d_1}(x1)))
   C_{C_1}(c_{d_1}(d_{d_1}(x1))) -> C_{A_1}(a_{d_1}(x1))
   A_{C_1}(c_{d_1}(d_{c_1}(x1))) -> A_{A_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   A_{C_1}(c_{d_1}(d_{c_1}(x1))) -> D_{C_1}(c_{a_1}(a_{c_1}(x1)))
   A_{C_1}(c_{d_1}(d_{c_1}(x1))) -> C_{A_1}(a_{c_1}(x1))
   A_{C_1}(c_{d_1}(d_{c_1}(x1))) -> A_{C_1}(x1)
   A_{C_1}(c_{d_1}(d_{a_1}(x1))) -> A_{A_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   A_{C_1}(c_{d_1}(d_{a_1}(x1))) -> D_{C_1}(c_{a_1}(a_{a_1}(x1)))
   A_{C_1}(c_{d_1}(d_{a_1}(x1))) -> C_{A_1}(a_{a_1}(x1))
   A_{C_1}(c_{d_1}(d_{a_1}(x1))) -> A_{A_1}(x1)
   A_{C_1}(c_{d_1}(d_{d_1}(x1))) -> A_{A_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   A_{C_1}(c_{d_1}(d_{d_1}(x1))) -> D_{C_1}(c_{a_1}(a_{d_1}(x1)))
   A_{C_1}(c_{d_1}(d_{d_1}(x1))) -> C_{A_1}(a_{d_1}(x1))
   D_{C_1}(c_{d_1}(d_{c_1}(x1))) -> D_{A_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   D_{C_1}(c_{d_1}(d_{c_1}(x1))) -> D_{C_1}(c_{a_1}(a_{c_1}(x1)))
   D_{C_1}(c_{d_1}(d_{c_1}(x1))) -> C_{A_1}(a_{c_1}(x1))
   D_{C_1}(c_{d_1}(d_{c_1}(x1))) -> A_{C_1}(x1)
   D_{C_1}(c_{d_1}(d_{a_1}(x1))) -> D_{A_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   D_{C_1}(c_{d_1}(d_{a_1}(x1))) -> D_{C_1}(c_{a_1}(a_{a_1}(x1)))
   D_{C_1}(c_{d_1}(d_{a_1}(x1))) -> C_{A_1}(a_{a_1}(x1))
   D_{C_1}(c_{d_1}(d_{a_1}(x1))) -> A_{A_1}(x1)
   D_{C_1}(c_{d_1}(d_{d_1}(x1))) -> D_{A_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   D_{C_1}(c_{d_1}(d_{d_1}(x1))) -> D_{C_1}(c_{a_1}(a_{d_1}(x1)))
   D_{C_1}(c_{d_1}(d_{d_1}(x1))) -> C_{A_1}(a_{d_1}(x1))
   B_{C_1}(c_{d_1}(d_{c_1}(x1))) -> D_{C_1}(c_{a_1}(a_{c_1}(x1)))
   B_{C_1}(c_{d_1}(d_{c_1}(x1))) -> C_{A_1}(a_{c_1}(x1))
   B_{C_1}(c_{d_1}(d_{c_1}(x1))) -> A_{C_1}(x1)
   B_{C_1}(c_{d_1}(d_{a_1}(x1))) -> D_{C_1}(c_{a_1}(a_{a_1}(x1)))
   B_{C_1}(c_{d_1}(d_{a_1}(x1))) -> C_{A_1}(a_{a_1}(x1))
   B_{C_1}(c_{d_1}(d_{a_1}(x1))) -> A_{A_1}(x1)
   B_{C_1}(c_{d_1}(d_{d_1}(x1))) -> D_{C_1}(c_{a_1}(a_{d_1}(x1)))
   B_{C_1}(c_{d_1}(d_{d_1}(x1))) -> C_{A_1}(a_{d_1}(x1))

The TRS R consists of the following rules:

   c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{c_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{b_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{d_1}(x1))))
   c_{c_1}(c_{a_1}(a_{c_1}(x1))) -> c_{a_1}(a_{c_1}(x1))
   c_{c_1}(c_{a_1}(a_{b_1}(x1))) -> c_{a_1}(a_{b_1}(x1))
   c_{c_1}(c_{a_1}(a_{a_1}(x1))) -> c_{a_1}(a_{a_1}(x1))
   c_{c_1}(c_{a_1}(a_{d_1}(x1))) -> c_{a_1}(a_{d_1}(x1))
   a_{c_1}(c_{a_1}(a_{c_1}(x1))) -> a_{a_1}(a_{c_1}(x1))
   a_{c_1}(c_{a_1}(a_{b_1}(x1))) -> a_{a_1}(a_{b_1}(x1))
   a_{c_1}(c_{a_1}(a_{a_1}(x1))) -> a_{a_1}(a_{a_1}(x1))
   a_{c_1}(c_{a_1}(a_{d_1}(x1))) -> a_{a_1}(a_{d_1}(x1))
   d_{c_1}(c_{a_1}(a_{c_1}(x1))) -> d_{a_1}(a_{c_1}(x1))
   d_{c_1}(c_{a_1}(a_{b_1}(x1))) -> d_{a_1}(a_{b_1}(x1))
   d_{c_1}(c_{a_1}(a_{a_1}(x1))) -> d_{a_1}(a_{a_1}(x1))
   d_{c_1}(c_{a_1}(a_{d_1}(x1))) -> d_{a_1}(a_{d_1}(x1))
   b_{c_1}(c_{a_1}(a_{c_1}(x1))) -> b_{a_1}(a_{c_1}(x1))
   b_{c_1}(c_{a_1}(a_{b_1}(x1))) -> b_{a_1}(a_{b_1}(x1))
   b_{c_1}(c_{a_1}(a_{a_1}(x1))) -> b_{a_1}(a_{a_1}(x1))
   b_{c_1}(c_{a_1}(a_{d_1}(x1))) -> b_{a_1}(a_{d_1}(x1))
   c_{a_1}(a_{d_1}(d_{c_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{a_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{d_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{c_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{a_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{d_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{c_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{a_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{d_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   c_{c_1}(c_{c_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   c_{c_1}(c_{b_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   c_{c_1}(c_{a_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   a_{c_1}(c_{c_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   a_{c_1}(c_{b_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   a_{c_1}(c_{a_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   d_{c_1}(c_{c_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   d_{c_1}(c_{b_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   d_{c_1}(c_{a_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   b_{c_1}(c_{c_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   b_{c_1}(c_{b_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   b_{c_1}(c_{a_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   c_{c_1}(c_{d_1}(d_{c_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   c_{c_1}(c_{d_1}(d_{a_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   c_{c_1}(c_{d_1}(d_{d_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{c_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{a_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{d_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{c_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{a_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{d_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{c_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{a_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{d_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 23 less nodes.
----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C_{C_1}(c_{c_1}(x1)) -> B_{C_1}(x1)
   B_{C_1}(c_{c_1}(x1)) -> B_{C_1}(x1)
   B_{C_1}(c_{d_1}(d_{c_1}(x1))) -> D_{C_1}(c_{a_1}(a_{c_1}(x1)))
   D_{C_1}(c_{a_1}(a_{c_1}(x1))) -> D_{A_1}(a_{c_1}(x1))
   D_{A_1}(a_{d_1}(d_{c_1}(x1))) -> D_{C_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   D_{C_1}(c_{a_1}(a_{a_1}(x1))) -> D_{A_1}(a_{a_1}(x1))
   D_{A_1}(a_{d_1}(d_{c_1}(x1))) -> C_{B_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))) -> C_{C_1}(c_{b_1}(b_{c_1}(c_{c_1}(x1))))
   C_{C_1}(c_{d_1}(d_{c_1}(x1))) -> C_{A_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   C_{A_1}(a_{d_1}(d_{c_1}(x1))) -> D_{C_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   D_{C_1}(c_{a_1}(a_{d_1}(x1))) -> D_{A_1}(a_{d_1}(x1))
   D_{A_1}(a_{d_1}(d_{c_1}(x1))) -> B_{C_1}(c_{a_1}(a_{c_1}(x1)))
   B_{C_1}(c_{d_1}(d_{c_1}(x1))) -> C_{A_1}(a_{c_1}(x1))
   C_{A_1}(a_{d_1}(d_{c_1}(x1))) -> C_{B_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))) -> C_{B_1}(b_{c_1}(c_{c_1}(x1)))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))) -> B_{C_1}(c_{c_1}(x1))
   B_{C_1}(c_{d_1}(d_{c_1}(x1))) -> A_{C_1}(x1)
   A_{C_1}(c_{a_1}(a_{c_1}(x1))) -> A_{A_1}(a_{c_1}(x1))
   A_{A_1}(a_{d_1}(d_{c_1}(x1))) -> D_{C_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   D_{C_1}(c_{c_1}(x1)) -> B_{C_1}(x1)
   B_{C_1}(c_{d_1}(d_{a_1}(x1))) -> D_{C_1}(c_{a_1}(a_{a_1}(x1)))
   D_{C_1}(c_{d_1}(d_{c_1}(x1))) -> D_{A_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   D_{A_1}(a_{d_1}(d_{c_1}(x1))) -> C_{A_1}(a_{c_1}(x1))
   C_{A_1}(a_{d_1}(d_{c_1}(x1))) -> B_{C_1}(c_{a_1}(a_{c_1}(x1)))
   B_{C_1}(c_{d_1}(d_{a_1}(x1))) -> C_{A_1}(a_{a_1}(x1))
   C_{A_1}(a_{d_1}(d_{c_1}(x1))) -> C_{A_1}(a_{c_1}(x1))
   C_{A_1}(a_{d_1}(d_{c_1}(x1))) -> A_{C_1}(x1)
   A_{C_1}(c_{a_1}(a_{a_1}(x1))) -> A_{A_1}(a_{a_1}(x1))
   A_{A_1}(a_{d_1}(d_{c_1}(x1))) -> C_{B_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))) -> C_{C_1}(x1)
   C_{C_1}(c_{d_1}(d_{c_1}(x1))) -> D_{C_1}(c_{a_1}(a_{c_1}(x1)))
   D_{C_1}(c_{d_1}(d_{c_1}(x1))) -> D_{C_1}(c_{a_1}(a_{c_1}(x1)))
   D_{C_1}(c_{d_1}(d_{c_1}(x1))) -> C_{A_1}(a_{c_1}(x1))
   C_{A_1}(a_{d_1}(d_{a_1}(x1))) -> D_{C_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   D_{C_1}(c_{d_1}(d_{c_1}(x1))) -> A_{C_1}(x1)
   A_{C_1}(c_{a_1}(a_{d_1}(x1))) -> A_{A_1}(a_{d_1}(x1))
   A_{A_1}(a_{d_1}(d_{c_1}(x1))) -> B_{C_1}(c_{a_1}(a_{c_1}(x1)))
   B_{C_1}(c_{d_1}(d_{a_1}(x1))) -> A_{A_1}(x1)
   A_{A_1}(a_{d_1}(d_{c_1}(x1))) -> C_{A_1}(a_{c_1}(x1))
   C_{A_1}(a_{d_1}(d_{a_1}(x1))) -> C_{B_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> C_{C_1}(c_{b_1}(b_{c_1}(c_{b_1}(x1))))
   C_{C_1}(c_{d_1}(d_{c_1}(x1))) -> C_{A_1}(a_{c_1}(x1))
   C_{A_1}(a_{d_1}(d_{a_1}(x1))) -> B_{C_1}(c_{a_1}(a_{a_1}(x1)))
   B_{C_1}(c_{d_1}(d_{d_1}(x1))) -> D_{C_1}(c_{a_1}(a_{d_1}(x1)))
   D_{C_1}(c_{d_1}(d_{a_1}(x1))) -> D_{A_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   D_{A_1}(a_{d_1}(d_{c_1}(x1))) -> A_{C_1}(x1)
   A_{C_1}(c_{c_1}(x1)) -> B_{C_1}(x1)
   B_{C_1}(c_{d_1}(d_{d_1}(x1))) -> C_{A_1}(a_{d_1}(x1))
   C_{A_1}(a_{d_1}(d_{a_1}(x1))) -> C_{A_1}(a_{a_1}(x1))
   C_{A_1}(a_{d_1}(d_{a_1}(x1))) -> A_{A_1}(x1)
   A_{A_1}(a_{d_1}(d_{c_1}(x1))) -> A_{C_1}(x1)
   A_{C_1}(c_{d_1}(d_{c_1}(x1))) -> A_{A_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   A_{A_1}(a_{d_1}(d_{a_1}(x1))) -> D_{C_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   D_{C_1}(c_{d_1}(d_{a_1}(x1))) -> D_{C_1}(c_{a_1}(a_{a_1}(x1)))
   D_{C_1}(c_{d_1}(d_{a_1}(x1))) -> C_{A_1}(a_{a_1}(x1))
   C_{A_1}(a_{d_1}(d_{d_1}(x1))) -> D_{C_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   D_{C_1}(c_{d_1}(d_{a_1}(x1))) -> A_{A_1}(x1)
   A_{A_1}(a_{d_1}(d_{a_1}(x1))) -> C_{B_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> C_{B_1}(b_{c_1}(c_{b_1}(x1)))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> B_{C_1}(c_{b_1}(x1))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> C_{B_1}(x1)
   C_{B_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))) -> C_{C_1}(c_{b_1}(b_{c_1}(c_{a_1}(x1))))
   C_{C_1}(c_{d_1}(d_{c_1}(x1))) -> A_{C_1}(x1)
   A_{C_1}(c_{d_1}(d_{c_1}(x1))) -> D_{C_1}(c_{a_1}(a_{c_1}(x1)))
   D_{C_1}(c_{d_1}(d_{d_1}(x1))) -> D_{A_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   D_{A_1}(a_{d_1}(d_{a_1}(x1))) -> D_{C_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   D_{C_1}(c_{d_1}(d_{d_1}(x1))) -> D_{C_1}(c_{a_1}(a_{d_1}(x1)))
   D_{C_1}(c_{d_1}(d_{d_1}(x1))) -> C_{A_1}(a_{d_1}(x1))
   C_{A_1}(a_{d_1}(d_{d_1}(x1))) -> C_{B_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))) -> C_{B_1}(b_{c_1}(c_{a_1}(x1)))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))) -> B_{C_1}(c_{a_1}(x1))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))) -> C_{A_1}(x1)
   C_{A_1}(a_{d_1}(d_{d_1}(x1))) -> B_{C_1}(c_{a_1}(a_{d_1}(x1)))
   C_{A_1}(a_{d_1}(d_{d_1}(x1))) -> C_{A_1}(a_{d_1}(x1))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))) -> C_{C_1}(c_{b_1}(b_{c_1}(c_{d_1}(x1))))
   C_{C_1}(c_{d_1}(d_{a_1}(x1))) -> C_{A_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   C_{C_1}(c_{d_1}(d_{a_1}(x1))) -> D_{C_1}(c_{a_1}(a_{a_1}(x1)))
   C_{C_1}(c_{d_1}(d_{a_1}(x1))) -> C_{A_1}(a_{a_1}(x1))
   C_{C_1}(c_{d_1}(d_{a_1}(x1))) -> A_{A_1}(x1)
   A_{A_1}(a_{d_1}(d_{a_1}(x1))) -> B_{C_1}(c_{a_1}(a_{a_1}(x1)))
   A_{A_1}(a_{d_1}(d_{a_1}(x1))) -> C_{A_1}(a_{a_1}(x1))
   A_{A_1}(a_{d_1}(d_{a_1}(x1))) -> A_{A_1}(x1)
   A_{A_1}(a_{d_1}(d_{d_1}(x1))) -> D_{C_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   A_{A_1}(a_{d_1}(d_{d_1}(x1))) -> C_{B_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))) -> C_{B_1}(b_{c_1}(c_{d_1}(x1)))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))) -> B_{C_1}(c_{d_1}(x1))
   A_{A_1}(a_{d_1}(d_{d_1}(x1))) -> B_{C_1}(c_{a_1}(a_{d_1}(x1)))
   A_{A_1}(a_{d_1}(d_{d_1}(x1))) -> C_{A_1}(a_{d_1}(x1))
   C_{C_1}(c_{d_1}(d_{d_1}(x1))) -> C_{A_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   C_{C_1}(c_{d_1}(d_{d_1}(x1))) -> D_{C_1}(c_{a_1}(a_{d_1}(x1)))
   C_{C_1}(c_{d_1}(d_{d_1}(x1))) -> C_{A_1}(a_{d_1}(x1))
   D_{A_1}(a_{d_1}(d_{a_1}(x1))) -> C_{B_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))
   D_{A_1}(a_{d_1}(d_{a_1}(x1))) -> B_{C_1}(c_{a_1}(a_{a_1}(x1)))
   D_{A_1}(a_{d_1}(d_{a_1}(x1))) -> C_{A_1}(a_{a_1}(x1))
   D_{A_1}(a_{d_1}(d_{a_1}(x1))) -> A_{A_1}(x1)
   D_{A_1}(a_{d_1}(d_{d_1}(x1))) -> D_{C_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   D_{A_1}(a_{d_1}(d_{d_1}(x1))) -> C_{B_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))
   D_{A_1}(a_{d_1}(d_{d_1}(x1))) -> B_{C_1}(c_{a_1}(a_{d_1}(x1)))
   D_{A_1}(a_{d_1}(d_{d_1}(x1))) -> C_{A_1}(a_{d_1}(x1))
   A_{C_1}(c_{d_1}(d_{c_1}(x1))) -> C_{A_1}(a_{c_1}(x1))
   A_{C_1}(c_{d_1}(d_{c_1}(x1))) -> A_{C_1}(x1)
   A_{C_1}(c_{d_1}(d_{a_1}(x1))) -> A_{A_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   A_{C_1}(c_{d_1}(d_{a_1}(x1))) -> D_{C_1}(c_{a_1}(a_{a_1}(x1)))
   A_{C_1}(c_{d_1}(d_{a_1}(x1))) -> C_{A_1}(a_{a_1}(x1))
   A_{C_1}(c_{d_1}(d_{a_1}(x1))) -> A_{A_1}(x1)
   A_{C_1}(c_{d_1}(d_{d_1}(x1))) -> A_{A_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   A_{C_1}(c_{d_1}(d_{d_1}(x1))) -> D_{C_1}(c_{a_1}(a_{d_1}(x1)))
   A_{C_1}(c_{d_1}(d_{d_1}(x1))) -> C_{A_1}(a_{d_1}(x1))

The TRS R consists of the following rules:

   c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{c_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{b_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{d_1}(x1))))
   c_{c_1}(c_{a_1}(a_{c_1}(x1))) -> c_{a_1}(a_{c_1}(x1))
   c_{c_1}(c_{a_1}(a_{b_1}(x1))) -> c_{a_1}(a_{b_1}(x1))
   c_{c_1}(c_{a_1}(a_{a_1}(x1))) -> c_{a_1}(a_{a_1}(x1))
   c_{c_1}(c_{a_1}(a_{d_1}(x1))) -> c_{a_1}(a_{d_1}(x1))
   a_{c_1}(c_{a_1}(a_{c_1}(x1))) -> a_{a_1}(a_{c_1}(x1))
   a_{c_1}(c_{a_1}(a_{b_1}(x1))) -> a_{a_1}(a_{b_1}(x1))
   a_{c_1}(c_{a_1}(a_{a_1}(x1))) -> a_{a_1}(a_{a_1}(x1))
   a_{c_1}(c_{a_1}(a_{d_1}(x1))) -> a_{a_1}(a_{d_1}(x1))
   d_{c_1}(c_{a_1}(a_{c_1}(x1))) -> d_{a_1}(a_{c_1}(x1))
   d_{c_1}(c_{a_1}(a_{b_1}(x1))) -> d_{a_1}(a_{b_1}(x1))
   d_{c_1}(c_{a_1}(a_{a_1}(x1))) -> d_{a_1}(a_{a_1}(x1))
   d_{c_1}(c_{a_1}(a_{d_1}(x1))) -> d_{a_1}(a_{d_1}(x1))
   b_{c_1}(c_{a_1}(a_{c_1}(x1))) -> b_{a_1}(a_{c_1}(x1))
   b_{c_1}(c_{a_1}(a_{b_1}(x1))) -> b_{a_1}(a_{b_1}(x1))
   b_{c_1}(c_{a_1}(a_{a_1}(x1))) -> b_{a_1}(a_{a_1}(x1))
   b_{c_1}(c_{a_1}(a_{d_1}(x1))) -> b_{a_1}(a_{d_1}(x1))
   c_{a_1}(a_{d_1}(d_{c_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{a_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{d_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{c_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{a_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{d_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{c_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{a_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{d_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   c_{c_1}(c_{c_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   c_{c_1}(c_{b_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   c_{c_1}(c_{a_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   a_{c_1}(c_{c_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   a_{c_1}(c_{b_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   a_{c_1}(c_{a_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   d_{c_1}(c_{c_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   d_{c_1}(c_{b_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   d_{c_1}(c_{a_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   b_{c_1}(c_{c_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   b_{c_1}(c_{b_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   b_{c_1}(c_{a_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   c_{c_1}(c_{d_1}(d_{c_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   c_{c_1}(c_{d_1}(d_{a_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   c_{c_1}(c_{d_1}(d_{d_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{c_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{a_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{d_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{c_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{a_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{d_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{c_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{a_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{d_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   B_{C_1}(c_{d_1}(d_{c_1}(x1))) -> D_{C_1}(c_{a_1}(a_{c_1}(x1)))
   D_{A_1}(a_{d_1}(d_{c_1}(x1))) -> D_{C_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   D_{A_1}(a_{d_1}(d_{c_1}(x1))) -> C_{B_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))
   C_{A_1}(a_{d_1}(d_{c_1}(x1))) -> D_{C_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   D_{A_1}(a_{d_1}(d_{c_1}(x1))) -> B_{C_1}(c_{a_1}(a_{c_1}(x1)))
   B_{C_1}(c_{d_1}(d_{c_1}(x1))) -> C_{A_1}(a_{c_1}(x1))
   C_{A_1}(a_{d_1}(d_{c_1}(x1))) -> C_{B_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))
   B_{C_1}(c_{d_1}(d_{c_1}(x1))) -> A_{C_1}(x1)
   A_{A_1}(a_{d_1}(d_{c_1}(x1))) -> D_{C_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   B_{C_1}(c_{d_1}(d_{a_1}(x1))) -> D_{C_1}(c_{a_1}(a_{a_1}(x1)))
   D_{A_1}(a_{d_1}(d_{c_1}(x1))) -> C_{A_1}(a_{c_1}(x1))
   C_{A_1}(a_{d_1}(d_{c_1}(x1))) -> B_{C_1}(c_{a_1}(a_{c_1}(x1)))
   B_{C_1}(c_{d_1}(d_{a_1}(x1))) -> C_{A_1}(a_{a_1}(x1))
   C_{A_1}(a_{d_1}(d_{c_1}(x1))) -> C_{A_1}(a_{c_1}(x1))
   C_{A_1}(a_{d_1}(d_{c_1}(x1))) -> A_{C_1}(x1)
   A_{A_1}(a_{d_1}(d_{c_1}(x1))) -> C_{B_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))
   C_{C_1}(c_{d_1}(d_{c_1}(x1))) -> D_{C_1}(c_{a_1}(a_{c_1}(x1)))
   D_{C_1}(c_{d_1}(d_{c_1}(x1))) -> D_{C_1}(c_{a_1}(a_{c_1}(x1)))
   D_{C_1}(c_{d_1}(d_{c_1}(x1))) -> C_{A_1}(a_{c_1}(x1))
   C_{A_1}(a_{d_1}(d_{a_1}(x1))) -> D_{C_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   D_{C_1}(c_{d_1}(d_{c_1}(x1))) -> A_{C_1}(x1)
   A_{A_1}(a_{d_1}(d_{c_1}(x1))) -> B_{C_1}(c_{a_1}(a_{c_1}(x1)))
   B_{C_1}(c_{d_1}(d_{a_1}(x1))) -> A_{A_1}(x1)
   A_{A_1}(a_{d_1}(d_{c_1}(x1))) -> C_{A_1}(a_{c_1}(x1))
   C_{A_1}(a_{d_1}(d_{a_1}(x1))) -> C_{B_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))
   C_{C_1}(c_{d_1}(d_{c_1}(x1))) -> C_{A_1}(a_{c_1}(x1))
   C_{A_1}(a_{d_1}(d_{a_1}(x1))) -> B_{C_1}(c_{a_1}(a_{a_1}(x1)))
   B_{C_1}(c_{d_1}(d_{d_1}(x1))) -> D_{C_1}(c_{a_1}(a_{d_1}(x1)))
   D_{A_1}(a_{d_1}(d_{c_1}(x1))) -> A_{C_1}(x1)
   B_{C_1}(c_{d_1}(d_{d_1}(x1))) -> C_{A_1}(a_{d_1}(x1))
   C_{A_1}(a_{d_1}(d_{a_1}(x1))) -> C_{A_1}(a_{a_1}(x1))
   C_{A_1}(a_{d_1}(d_{a_1}(x1))) -> A_{A_1}(x1)
   A_{A_1}(a_{d_1}(d_{c_1}(x1))) -> A_{C_1}(x1)
   A_{A_1}(a_{d_1}(d_{a_1}(x1))) -> D_{C_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   D_{C_1}(c_{d_1}(d_{a_1}(x1))) -> D_{C_1}(c_{a_1}(a_{a_1}(x1)))
   D_{C_1}(c_{d_1}(d_{a_1}(x1))) -> C_{A_1}(a_{a_1}(x1))
   C_{A_1}(a_{d_1}(d_{d_1}(x1))) -> D_{C_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   D_{C_1}(c_{d_1}(d_{a_1}(x1))) -> A_{A_1}(x1)
   A_{A_1}(a_{d_1}(d_{a_1}(x1))) -> C_{B_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))
   C_{C_1}(c_{d_1}(d_{c_1}(x1))) -> A_{C_1}(x1)
   A_{C_1}(c_{d_1}(d_{c_1}(x1))) -> D_{C_1}(c_{a_1}(a_{c_1}(x1)))
   D_{A_1}(a_{d_1}(d_{a_1}(x1))) -> D_{C_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   D_{C_1}(c_{d_1}(d_{d_1}(x1))) -> D_{C_1}(c_{a_1}(a_{d_1}(x1)))
   D_{C_1}(c_{d_1}(d_{d_1}(x1))) -> C_{A_1}(a_{d_1}(x1))
   C_{A_1}(a_{d_1}(d_{d_1}(x1))) -> C_{B_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))
   C_{A_1}(a_{d_1}(d_{d_1}(x1))) -> B_{C_1}(c_{a_1}(a_{d_1}(x1)))
   C_{A_1}(a_{d_1}(d_{d_1}(x1))) -> C_{A_1}(a_{d_1}(x1))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))) -> C_{C_1}(c_{b_1}(b_{c_1}(c_{d_1}(x1))))
   C_{C_1}(c_{d_1}(d_{a_1}(x1))) -> D_{C_1}(c_{a_1}(a_{a_1}(x1)))
   C_{C_1}(c_{d_1}(d_{a_1}(x1))) -> C_{A_1}(a_{a_1}(x1))
   C_{C_1}(c_{d_1}(d_{a_1}(x1))) -> A_{A_1}(x1)
   A_{A_1}(a_{d_1}(d_{a_1}(x1))) -> B_{C_1}(c_{a_1}(a_{a_1}(x1)))
   A_{A_1}(a_{d_1}(d_{a_1}(x1))) -> C_{A_1}(a_{a_1}(x1))
   A_{A_1}(a_{d_1}(d_{a_1}(x1))) -> A_{A_1}(x1)
   A_{A_1}(a_{d_1}(d_{d_1}(x1))) -> D_{C_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   A_{A_1}(a_{d_1}(d_{d_1}(x1))) -> C_{B_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))
   A_{A_1}(a_{d_1}(d_{d_1}(x1))) -> B_{C_1}(c_{a_1}(a_{d_1}(x1)))
   A_{A_1}(a_{d_1}(d_{d_1}(x1))) -> C_{A_1}(a_{d_1}(x1))
   C_{C_1}(c_{d_1}(d_{d_1}(x1))) -> D_{C_1}(c_{a_1}(a_{d_1}(x1)))
   C_{C_1}(c_{d_1}(d_{d_1}(x1))) -> C_{A_1}(a_{d_1}(x1))
   D_{A_1}(a_{d_1}(d_{a_1}(x1))) -> C_{B_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))
   D_{A_1}(a_{d_1}(d_{a_1}(x1))) -> B_{C_1}(c_{a_1}(a_{a_1}(x1)))
   D_{A_1}(a_{d_1}(d_{a_1}(x1))) -> C_{A_1}(a_{a_1}(x1))
   D_{A_1}(a_{d_1}(d_{a_1}(x1))) -> A_{A_1}(x1)
   D_{A_1}(a_{d_1}(d_{d_1}(x1))) -> D_{C_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   D_{A_1}(a_{d_1}(d_{d_1}(x1))) -> C_{B_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))
   D_{A_1}(a_{d_1}(d_{d_1}(x1))) -> B_{C_1}(c_{a_1}(a_{d_1}(x1)))
   D_{A_1}(a_{d_1}(d_{d_1}(x1))) -> C_{A_1}(a_{d_1}(x1))
   A_{C_1}(c_{d_1}(d_{c_1}(x1))) -> C_{A_1}(a_{c_1}(x1))
   A_{C_1}(c_{d_1}(d_{c_1}(x1))) -> A_{C_1}(x1)
   A_{C_1}(c_{d_1}(d_{a_1}(x1))) -> D_{C_1}(c_{a_1}(a_{a_1}(x1)))
   A_{C_1}(c_{d_1}(d_{a_1}(x1))) -> C_{A_1}(a_{a_1}(x1))
   A_{C_1}(c_{d_1}(d_{a_1}(x1))) -> A_{A_1}(x1)
   A_{C_1}(c_{d_1}(d_{d_1}(x1))) -> D_{C_1}(c_{a_1}(a_{d_1}(x1)))
   A_{C_1}(c_{d_1}(d_{d_1}(x1))) -> C_{A_1}(a_{d_1}(x1))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(A_{A_1}(x_1)) = x_1
   POL(A_{C_1}(x_1)) = x_1
   POL(B_{C_1}(x_1)) = x_1
   POL(C_{A_1}(x_1)) = x_1
   POL(C_{B_1}(x_1)) = x_1
   POL(C_{C_1}(x_1)) = x_1
   POL(D_{A_1}(x_1)) = x_1
   POL(D_{C_1}(x_1)) = x_1
   POL(a_{a_1}(x_1)) = x_1
   POL(a_{b_1}(x_1)) = x_1
   POL(a_{c_1}(x_1)) = x_1
   POL(a_{d_1}(x_1)) = 1 + x_1
   POL(b_{a_1}(x_1)) = 0
   POL(b_{b_1}(x_1)) = 0
   POL(b_{c_1}(x_1)) = x_1
   POL(c_{a_1}(x_1)) = x_1
   POL(c_{b_1}(x_1)) = 0
   POL(c_{c_1}(x_1)) = x_1
   POL(c_{d_1}(x_1)) = 1 + x_1
   POL(d_{a_1}(x_1)) = x_1
   POL(d_{c_1}(x_1)) = x_1
   POL(d_{d_1}(x_1)) = 1 + x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   a_{c_1}(c_{a_1}(a_{c_1}(x1))) -> a_{a_1}(a_{c_1}(x1))
   a_{c_1}(c_{a_1}(a_{b_1}(x1))) -> a_{a_1}(a_{b_1}(x1))
   a_{c_1}(c_{a_1}(a_{a_1}(x1))) -> a_{a_1}(a_{a_1}(x1))
   a_{c_1}(c_{a_1}(a_{d_1}(x1))) -> a_{a_1}(a_{d_1}(x1))
   a_{c_1}(c_{c_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   a_{c_1}(c_{b_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   a_{c_1}(c_{a_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   a_{c_1}(c_{d_1}(d_{c_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{a_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{d_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   c_{a_1}(a_{d_1}(d_{c_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{a_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{d_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   b_{c_1}(c_{a_1}(a_{c_1}(x1))) -> b_{a_1}(a_{c_1}(x1))
   b_{c_1}(c_{a_1}(a_{b_1}(x1))) -> b_{a_1}(a_{b_1}(x1))
   b_{c_1}(c_{a_1}(a_{a_1}(x1))) -> b_{a_1}(a_{a_1}(x1))
   b_{c_1}(c_{a_1}(a_{d_1}(x1))) -> b_{a_1}(a_{d_1}(x1))
   b_{c_1}(c_{c_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   b_{c_1}(c_{b_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   b_{c_1}(c_{a_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   b_{c_1}(c_{d_1}(d_{c_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{a_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{d_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{c_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{b_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{d_1}(x1))))
   a_{a_1}(a_{d_1}(d_{c_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{a_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{d_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   c_{c_1}(c_{a_1}(a_{c_1}(x1))) -> c_{a_1}(a_{c_1}(x1))
   c_{c_1}(c_{a_1}(a_{b_1}(x1))) -> c_{a_1}(a_{b_1}(x1))
   c_{c_1}(c_{a_1}(a_{a_1}(x1))) -> c_{a_1}(a_{a_1}(x1))
   c_{c_1}(c_{a_1}(a_{d_1}(x1))) -> c_{a_1}(a_{d_1}(x1))
   c_{c_1}(c_{c_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   c_{c_1}(c_{b_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   c_{c_1}(c_{a_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   c_{c_1}(c_{d_1}(d_{c_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   c_{c_1}(c_{d_1}(d_{a_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   c_{c_1}(c_{d_1}(d_{d_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   d_{c_1}(c_{a_1}(a_{c_1}(x1))) -> d_{a_1}(a_{c_1}(x1))
   d_{c_1}(c_{a_1}(a_{b_1}(x1))) -> d_{a_1}(a_{b_1}(x1))
   d_{c_1}(c_{a_1}(a_{a_1}(x1))) -> d_{a_1}(a_{a_1}(x1))
   d_{c_1}(c_{a_1}(a_{d_1}(x1))) -> d_{a_1}(a_{d_1}(x1))
   d_{c_1}(c_{c_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   d_{c_1}(c_{b_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   d_{c_1}(c_{a_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   d_{c_1}(c_{d_1}(d_{c_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{a_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{d_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   d_{a_1}(a_{d_1}(d_{c_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{a_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{d_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))


----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C_{C_1}(c_{c_1}(x1)) -> B_{C_1}(x1)
   B_{C_1}(c_{c_1}(x1)) -> B_{C_1}(x1)
   D_{C_1}(c_{a_1}(a_{c_1}(x1))) -> D_{A_1}(a_{c_1}(x1))
   D_{C_1}(c_{a_1}(a_{a_1}(x1))) -> D_{A_1}(a_{a_1}(x1))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))) -> C_{C_1}(c_{b_1}(b_{c_1}(c_{c_1}(x1))))
   C_{C_1}(c_{d_1}(d_{c_1}(x1))) -> C_{A_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   D_{C_1}(c_{a_1}(a_{d_1}(x1))) -> D_{A_1}(a_{d_1}(x1))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))) -> C_{B_1}(b_{c_1}(c_{c_1}(x1)))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))) -> B_{C_1}(c_{c_1}(x1))
   A_{C_1}(c_{a_1}(a_{c_1}(x1))) -> A_{A_1}(a_{c_1}(x1))
   D_{C_1}(c_{c_1}(x1)) -> B_{C_1}(x1)
   D_{C_1}(c_{d_1}(d_{c_1}(x1))) -> D_{A_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   A_{C_1}(c_{a_1}(a_{a_1}(x1))) -> A_{A_1}(a_{a_1}(x1))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))) -> C_{C_1}(x1)
   A_{C_1}(c_{a_1}(a_{d_1}(x1))) -> A_{A_1}(a_{d_1}(x1))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> C_{C_1}(c_{b_1}(b_{c_1}(c_{b_1}(x1))))
   D_{C_1}(c_{d_1}(d_{a_1}(x1))) -> D_{A_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   A_{C_1}(c_{c_1}(x1)) -> B_{C_1}(x1)
   A_{C_1}(c_{d_1}(d_{c_1}(x1))) -> A_{A_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> C_{B_1}(b_{c_1}(c_{b_1}(x1)))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> B_{C_1}(c_{b_1}(x1))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> C_{B_1}(x1)
   C_{B_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))) -> C_{C_1}(c_{b_1}(b_{c_1}(c_{a_1}(x1))))
   D_{C_1}(c_{d_1}(d_{d_1}(x1))) -> D_{A_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))) -> C_{B_1}(b_{c_1}(c_{a_1}(x1)))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))) -> B_{C_1}(c_{a_1}(x1))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))) -> C_{A_1}(x1)
   C_{C_1}(c_{d_1}(d_{a_1}(x1))) -> C_{A_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))) -> C_{B_1}(b_{c_1}(c_{d_1}(x1)))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))) -> B_{C_1}(c_{d_1}(x1))
   C_{C_1}(c_{d_1}(d_{d_1}(x1))) -> C_{A_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   A_{C_1}(c_{d_1}(d_{a_1}(x1))) -> A_{A_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   A_{C_1}(c_{d_1}(d_{d_1}(x1))) -> A_{A_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))

The TRS R consists of the following rules:

   c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{c_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{b_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{d_1}(x1))))
   c_{c_1}(c_{a_1}(a_{c_1}(x1))) -> c_{a_1}(a_{c_1}(x1))
   c_{c_1}(c_{a_1}(a_{b_1}(x1))) -> c_{a_1}(a_{b_1}(x1))
   c_{c_1}(c_{a_1}(a_{a_1}(x1))) -> c_{a_1}(a_{a_1}(x1))
   c_{c_1}(c_{a_1}(a_{d_1}(x1))) -> c_{a_1}(a_{d_1}(x1))
   a_{c_1}(c_{a_1}(a_{c_1}(x1))) -> a_{a_1}(a_{c_1}(x1))
   a_{c_1}(c_{a_1}(a_{b_1}(x1))) -> a_{a_1}(a_{b_1}(x1))
   a_{c_1}(c_{a_1}(a_{a_1}(x1))) -> a_{a_1}(a_{a_1}(x1))
   a_{c_1}(c_{a_1}(a_{d_1}(x1))) -> a_{a_1}(a_{d_1}(x1))
   d_{c_1}(c_{a_1}(a_{c_1}(x1))) -> d_{a_1}(a_{c_1}(x1))
   d_{c_1}(c_{a_1}(a_{b_1}(x1))) -> d_{a_1}(a_{b_1}(x1))
   d_{c_1}(c_{a_1}(a_{a_1}(x1))) -> d_{a_1}(a_{a_1}(x1))
   d_{c_1}(c_{a_1}(a_{d_1}(x1))) -> d_{a_1}(a_{d_1}(x1))
   b_{c_1}(c_{a_1}(a_{c_1}(x1))) -> b_{a_1}(a_{c_1}(x1))
   b_{c_1}(c_{a_1}(a_{b_1}(x1))) -> b_{a_1}(a_{b_1}(x1))
   b_{c_1}(c_{a_1}(a_{a_1}(x1))) -> b_{a_1}(a_{a_1}(x1))
   b_{c_1}(c_{a_1}(a_{d_1}(x1))) -> b_{a_1}(a_{d_1}(x1))
   c_{a_1}(a_{d_1}(d_{c_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{a_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{d_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{c_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{a_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{d_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{c_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{a_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{d_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   c_{c_1}(c_{c_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   c_{c_1}(c_{b_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   c_{c_1}(c_{a_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   a_{c_1}(c_{c_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   a_{c_1}(c_{b_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   a_{c_1}(c_{a_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   d_{c_1}(c_{c_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   d_{c_1}(c_{b_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   d_{c_1}(c_{a_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   b_{c_1}(c_{c_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   b_{c_1}(c_{b_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   b_{c_1}(c_{a_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   c_{c_1}(c_{d_1}(d_{c_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   c_{c_1}(c_{d_1}(d_{a_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   c_{c_1}(c_{d_1}(d_{d_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{c_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{a_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{d_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{c_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{a_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{d_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{c_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{a_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{d_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 27 less nodes.
----------------------------------------

(16)
Complex Obligation (AND)

----------------------------------------

(17)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B_{C_1}(c_{c_1}(x1)) -> B_{C_1}(x1)

The TRS R consists of the following rules:

   c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{c_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{b_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{d_1}(x1))))
   c_{c_1}(c_{a_1}(a_{c_1}(x1))) -> c_{a_1}(a_{c_1}(x1))
   c_{c_1}(c_{a_1}(a_{b_1}(x1))) -> c_{a_1}(a_{b_1}(x1))
   c_{c_1}(c_{a_1}(a_{a_1}(x1))) -> c_{a_1}(a_{a_1}(x1))
   c_{c_1}(c_{a_1}(a_{d_1}(x1))) -> c_{a_1}(a_{d_1}(x1))
   a_{c_1}(c_{a_1}(a_{c_1}(x1))) -> a_{a_1}(a_{c_1}(x1))
   a_{c_1}(c_{a_1}(a_{b_1}(x1))) -> a_{a_1}(a_{b_1}(x1))
   a_{c_1}(c_{a_1}(a_{a_1}(x1))) -> a_{a_1}(a_{a_1}(x1))
   a_{c_1}(c_{a_1}(a_{d_1}(x1))) -> a_{a_1}(a_{d_1}(x1))
   d_{c_1}(c_{a_1}(a_{c_1}(x1))) -> d_{a_1}(a_{c_1}(x1))
   d_{c_1}(c_{a_1}(a_{b_1}(x1))) -> d_{a_1}(a_{b_1}(x1))
   d_{c_1}(c_{a_1}(a_{a_1}(x1))) -> d_{a_1}(a_{a_1}(x1))
   d_{c_1}(c_{a_1}(a_{d_1}(x1))) -> d_{a_1}(a_{d_1}(x1))
   b_{c_1}(c_{a_1}(a_{c_1}(x1))) -> b_{a_1}(a_{c_1}(x1))
   b_{c_1}(c_{a_1}(a_{b_1}(x1))) -> b_{a_1}(a_{b_1}(x1))
   b_{c_1}(c_{a_1}(a_{a_1}(x1))) -> b_{a_1}(a_{a_1}(x1))
   b_{c_1}(c_{a_1}(a_{d_1}(x1))) -> b_{a_1}(a_{d_1}(x1))
   c_{a_1}(a_{d_1}(d_{c_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{a_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{d_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{c_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{a_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{d_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{c_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{a_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{d_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   c_{c_1}(c_{c_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   c_{c_1}(c_{b_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   c_{c_1}(c_{a_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   a_{c_1}(c_{c_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   a_{c_1}(c_{b_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   a_{c_1}(c_{a_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   d_{c_1}(c_{c_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   d_{c_1}(c_{b_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   d_{c_1}(c_{a_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   b_{c_1}(c_{c_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   b_{c_1}(c_{b_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   b_{c_1}(c_{a_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   c_{c_1}(c_{d_1}(d_{c_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   c_{c_1}(c_{d_1}(d_{a_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   c_{c_1}(c_{d_1}(d_{d_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{c_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{a_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{d_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{c_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{a_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{d_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{c_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{a_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{d_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(18) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(19)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B_{C_1}(c_{c_1}(x1)) -> B_{C_1}(x1)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(20) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*B_{C_1}(c_{c_1}(x1)) -> B_{C_1}(x1)
The graph contains the following edges 1 > 1


----------------------------------------

(21)
YES

----------------------------------------

(22)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C_{B_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> C_{B_1}(b_{c_1}(c_{b_1}(x1)))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))) -> C_{B_1}(b_{c_1}(c_{c_1}(x1)))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> C_{B_1}(x1)
   C_{B_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))) -> C_{B_1}(b_{c_1}(c_{a_1}(x1)))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))) -> C_{B_1}(b_{c_1}(c_{d_1}(x1)))

The TRS R consists of the following rules:

   c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{c_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{b_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{d_1}(x1))))
   c_{c_1}(c_{a_1}(a_{c_1}(x1))) -> c_{a_1}(a_{c_1}(x1))
   c_{c_1}(c_{a_1}(a_{b_1}(x1))) -> c_{a_1}(a_{b_1}(x1))
   c_{c_1}(c_{a_1}(a_{a_1}(x1))) -> c_{a_1}(a_{a_1}(x1))
   c_{c_1}(c_{a_1}(a_{d_1}(x1))) -> c_{a_1}(a_{d_1}(x1))
   a_{c_1}(c_{a_1}(a_{c_1}(x1))) -> a_{a_1}(a_{c_1}(x1))
   a_{c_1}(c_{a_1}(a_{b_1}(x1))) -> a_{a_1}(a_{b_1}(x1))
   a_{c_1}(c_{a_1}(a_{a_1}(x1))) -> a_{a_1}(a_{a_1}(x1))
   a_{c_1}(c_{a_1}(a_{d_1}(x1))) -> a_{a_1}(a_{d_1}(x1))
   d_{c_1}(c_{a_1}(a_{c_1}(x1))) -> d_{a_1}(a_{c_1}(x1))
   d_{c_1}(c_{a_1}(a_{b_1}(x1))) -> d_{a_1}(a_{b_1}(x1))
   d_{c_1}(c_{a_1}(a_{a_1}(x1))) -> d_{a_1}(a_{a_1}(x1))
   d_{c_1}(c_{a_1}(a_{d_1}(x1))) -> d_{a_1}(a_{d_1}(x1))
   b_{c_1}(c_{a_1}(a_{c_1}(x1))) -> b_{a_1}(a_{c_1}(x1))
   b_{c_1}(c_{a_1}(a_{b_1}(x1))) -> b_{a_1}(a_{b_1}(x1))
   b_{c_1}(c_{a_1}(a_{a_1}(x1))) -> b_{a_1}(a_{a_1}(x1))
   b_{c_1}(c_{a_1}(a_{d_1}(x1))) -> b_{a_1}(a_{d_1}(x1))
   c_{a_1}(a_{d_1}(d_{c_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{a_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{d_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{c_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{a_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{d_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{c_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{a_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{d_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   c_{c_1}(c_{c_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   c_{c_1}(c_{b_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   c_{c_1}(c_{a_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   a_{c_1}(c_{c_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   a_{c_1}(c_{b_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   a_{c_1}(c_{a_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   d_{c_1}(c_{c_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   d_{c_1}(c_{b_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   d_{c_1}(c_{a_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   b_{c_1}(c_{c_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   b_{c_1}(c_{b_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   b_{c_1}(c_{a_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   c_{c_1}(c_{d_1}(d_{c_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   c_{c_1}(c_{d_1}(d_{a_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   c_{c_1}(c_{d_1}(d_{d_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{c_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{a_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{d_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{c_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{a_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{d_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{c_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{a_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{d_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(23) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   C_{B_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))) -> C_{B_1}(b_{c_1}(c_{c_1}(x1)))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(C_{B_1}(x_1)) = x_1
   POL(a_{a_1}(x_1)) = x_1
   POL(a_{b_1}(x_1)) = x_1
   POL(a_{c_1}(x_1)) = 1 + x_1
   POL(a_{d_1}(x_1)) = 0
   POL(b_{a_1}(x_1)) = 0
   POL(b_{b_1}(x_1)) = 0
   POL(b_{c_1}(x_1)) = x_1
   POL(c_{a_1}(x_1)) = x_1
   POL(c_{b_1}(x_1)) = 0
   POL(c_{c_1}(x_1)) = x_1
   POL(c_{d_1}(x_1)) = 0
   POL(d_{a_1}(x_1)) = 0
   POL(d_{c_1}(x_1)) = 0
   POL(d_{d_1}(x_1)) = 0

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{c_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{b_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{d_1}(x1))))
   b_{c_1}(c_{a_1}(a_{c_1}(x1))) -> b_{a_1}(a_{c_1}(x1))
   b_{c_1}(c_{a_1}(a_{b_1}(x1))) -> b_{a_1}(a_{b_1}(x1))
   b_{c_1}(c_{a_1}(a_{a_1}(x1))) -> b_{a_1}(a_{a_1}(x1))
   b_{c_1}(c_{a_1}(a_{d_1}(x1))) -> b_{a_1}(a_{d_1}(x1))
   b_{c_1}(c_{c_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   b_{c_1}(c_{b_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   b_{c_1}(c_{a_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   b_{c_1}(c_{d_1}(d_{c_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{a_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{d_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   c_{c_1}(c_{a_1}(a_{c_1}(x1))) -> c_{a_1}(a_{c_1}(x1))
   c_{c_1}(c_{a_1}(a_{b_1}(x1))) -> c_{a_1}(a_{b_1}(x1))
   c_{c_1}(c_{a_1}(a_{a_1}(x1))) -> c_{a_1}(a_{a_1}(x1))
   c_{c_1}(c_{a_1}(a_{d_1}(x1))) -> c_{a_1}(a_{d_1}(x1))
   c_{c_1}(c_{c_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   c_{c_1}(c_{b_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   c_{c_1}(c_{a_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   c_{c_1}(c_{d_1}(d_{c_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   c_{c_1}(c_{d_1}(d_{a_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   c_{c_1}(c_{d_1}(d_{d_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   c_{a_1}(a_{d_1}(d_{c_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{a_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{d_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   a_{c_1}(c_{a_1}(a_{c_1}(x1))) -> a_{a_1}(a_{c_1}(x1))
   a_{c_1}(c_{a_1}(a_{a_1}(x1))) -> a_{a_1}(a_{a_1}(x1))
   a_{c_1}(c_{a_1}(a_{d_1}(x1))) -> a_{a_1}(a_{d_1}(x1))
   a_{c_1}(c_{c_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   a_{c_1}(c_{d_1}(d_{c_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{a_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{d_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   a_{a_1}(a_{d_1}(d_{c_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{a_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{d_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   a_{c_1}(c_{a_1}(a_{b_1}(x1))) -> a_{a_1}(a_{b_1}(x1))
   a_{c_1}(c_{b_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   a_{c_1}(c_{a_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))


----------------------------------------

(24)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C_{B_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> C_{B_1}(b_{c_1}(c_{b_1}(x1)))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> C_{B_1}(x1)
   C_{B_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))) -> C_{B_1}(b_{c_1}(c_{a_1}(x1)))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))) -> C_{B_1}(b_{c_1}(c_{d_1}(x1)))

The TRS R consists of the following rules:

   c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{c_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{b_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{d_1}(x1))))
   c_{c_1}(c_{a_1}(a_{c_1}(x1))) -> c_{a_1}(a_{c_1}(x1))
   c_{c_1}(c_{a_1}(a_{b_1}(x1))) -> c_{a_1}(a_{b_1}(x1))
   c_{c_1}(c_{a_1}(a_{a_1}(x1))) -> c_{a_1}(a_{a_1}(x1))
   c_{c_1}(c_{a_1}(a_{d_1}(x1))) -> c_{a_1}(a_{d_1}(x1))
   a_{c_1}(c_{a_1}(a_{c_1}(x1))) -> a_{a_1}(a_{c_1}(x1))
   a_{c_1}(c_{a_1}(a_{b_1}(x1))) -> a_{a_1}(a_{b_1}(x1))
   a_{c_1}(c_{a_1}(a_{a_1}(x1))) -> a_{a_1}(a_{a_1}(x1))
   a_{c_1}(c_{a_1}(a_{d_1}(x1))) -> a_{a_1}(a_{d_1}(x1))
   d_{c_1}(c_{a_1}(a_{c_1}(x1))) -> d_{a_1}(a_{c_1}(x1))
   d_{c_1}(c_{a_1}(a_{b_1}(x1))) -> d_{a_1}(a_{b_1}(x1))
   d_{c_1}(c_{a_1}(a_{a_1}(x1))) -> d_{a_1}(a_{a_1}(x1))
   d_{c_1}(c_{a_1}(a_{d_1}(x1))) -> d_{a_1}(a_{d_1}(x1))
   b_{c_1}(c_{a_1}(a_{c_1}(x1))) -> b_{a_1}(a_{c_1}(x1))
   b_{c_1}(c_{a_1}(a_{b_1}(x1))) -> b_{a_1}(a_{b_1}(x1))
   b_{c_1}(c_{a_1}(a_{a_1}(x1))) -> b_{a_1}(a_{a_1}(x1))
   b_{c_1}(c_{a_1}(a_{d_1}(x1))) -> b_{a_1}(a_{d_1}(x1))
   c_{a_1}(a_{d_1}(d_{c_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{a_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{d_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{c_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{a_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{d_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{c_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{a_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{d_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   c_{c_1}(c_{c_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   c_{c_1}(c_{b_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   c_{c_1}(c_{a_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   a_{c_1}(c_{c_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   a_{c_1}(c_{b_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   a_{c_1}(c_{a_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   d_{c_1}(c_{c_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   d_{c_1}(c_{b_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   d_{c_1}(c_{a_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   b_{c_1}(c_{c_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   b_{c_1}(c_{b_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   b_{c_1}(c_{a_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   c_{c_1}(c_{d_1}(d_{c_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   c_{c_1}(c_{d_1}(d_{a_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   c_{c_1}(c_{d_1}(d_{d_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{c_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{a_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{d_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{c_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{a_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{d_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{c_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{a_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{d_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(25) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   C_{B_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))) -> C_{B_1}(b_{c_1}(c_{d_1}(x1)))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( C_{B_1}_1(x_1) ) = 2x_1
POL( b_{c_1}_1(x_1) ) = x_1
POL( a_{d_1}_1(x_1) ) = 1
POL( b_{a_1}_1(x_1) ) = max{0, -2}
POL( d_{c_1}_1(x_1) ) = max{0, -2}
POL( c_{b_1}_1(x_1) ) = 0
POL( c_{a_1}_1(x_1) ) = 2x_1
POL( a_{c_1}_1(x_1) ) = 2x_1
POL( c_{c_1}_1(x_1) ) = 2x_1
POL( a_{b_1}_1(x_1) ) = x_1
POL( a_{a_1}_1(x_1) ) = 2x_1
POL( c_{d_1}_1(x_1) ) = 1
POL( b_{b_1}_1(x_1) ) = 0
POL( d_{a_1}_1(x_1) ) = max{0, x_1 - 2}
POL( d_{d_1}_1(x_1) ) = max{0, x_1 - 2}

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{c_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{b_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{d_1}(x1))))
   b_{c_1}(c_{a_1}(a_{c_1}(x1))) -> b_{a_1}(a_{c_1}(x1))
   b_{c_1}(c_{a_1}(a_{b_1}(x1))) -> b_{a_1}(a_{b_1}(x1))
   b_{c_1}(c_{a_1}(a_{a_1}(x1))) -> b_{a_1}(a_{a_1}(x1))
   b_{c_1}(c_{a_1}(a_{d_1}(x1))) -> b_{a_1}(a_{d_1}(x1))
   b_{c_1}(c_{c_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   b_{c_1}(c_{b_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   b_{c_1}(c_{a_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   b_{c_1}(c_{d_1}(d_{c_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{a_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{d_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   c_{a_1}(a_{d_1}(d_{c_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{a_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{d_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   a_{c_1}(c_{a_1}(a_{c_1}(x1))) -> a_{a_1}(a_{c_1}(x1))
   a_{c_1}(c_{a_1}(a_{a_1}(x1))) -> a_{a_1}(a_{a_1}(x1))
   a_{c_1}(c_{a_1}(a_{d_1}(x1))) -> a_{a_1}(a_{d_1}(x1))
   a_{c_1}(c_{c_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   a_{c_1}(c_{d_1}(d_{c_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{a_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{d_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   a_{a_1}(a_{d_1}(d_{c_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{a_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{d_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   c_{c_1}(c_{a_1}(a_{c_1}(x1))) -> c_{a_1}(a_{c_1}(x1))
   c_{c_1}(c_{a_1}(a_{a_1}(x1))) -> c_{a_1}(a_{a_1}(x1))
   c_{c_1}(c_{a_1}(a_{d_1}(x1))) -> c_{a_1}(a_{d_1}(x1))
   c_{c_1}(c_{c_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   c_{c_1}(c_{d_1}(d_{c_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   c_{c_1}(c_{d_1}(d_{a_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   c_{c_1}(c_{d_1}(d_{d_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   a_{c_1}(c_{a_1}(a_{b_1}(x1))) -> a_{a_1}(a_{b_1}(x1))
   a_{c_1}(c_{b_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   a_{c_1}(c_{a_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   c_{c_1}(c_{a_1}(a_{b_1}(x1))) -> c_{a_1}(a_{b_1}(x1))
   c_{c_1}(c_{b_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   c_{c_1}(c_{a_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))


----------------------------------------

(26)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C_{B_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> C_{B_1}(b_{c_1}(c_{b_1}(x1)))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> C_{B_1}(x1)
   C_{B_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))) -> C_{B_1}(b_{c_1}(c_{a_1}(x1)))

The TRS R consists of the following rules:

   c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{c_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{b_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{d_1}(x1))))
   c_{c_1}(c_{a_1}(a_{c_1}(x1))) -> c_{a_1}(a_{c_1}(x1))
   c_{c_1}(c_{a_1}(a_{b_1}(x1))) -> c_{a_1}(a_{b_1}(x1))
   c_{c_1}(c_{a_1}(a_{a_1}(x1))) -> c_{a_1}(a_{a_1}(x1))
   c_{c_1}(c_{a_1}(a_{d_1}(x1))) -> c_{a_1}(a_{d_1}(x1))
   a_{c_1}(c_{a_1}(a_{c_1}(x1))) -> a_{a_1}(a_{c_1}(x1))
   a_{c_1}(c_{a_1}(a_{b_1}(x1))) -> a_{a_1}(a_{b_1}(x1))
   a_{c_1}(c_{a_1}(a_{a_1}(x1))) -> a_{a_1}(a_{a_1}(x1))
   a_{c_1}(c_{a_1}(a_{d_1}(x1))) -> a_{a_1}(a_{d_1}(x1))
   d_{c_1}(c_{a_1}(a_{c_1}(x1))) -> d_{a_1}(a_{c_1}(x1))
   d_{c_1}(c_{a_1}(a_{b_1}(x1))) -> d_{a_1}(a_{b_1}(x1))
   d_{c_1}(c_{a_1}(a_{a_1}(x1))) -> d_{a_1}(a_{a_1}(x1))
   d_{c_1}(c_{a_1}(a_{d_1}(x1))) -> d_{a_1}(a_{d_1}(x1))
   b_{c_1}(c_{a_1}(a_{c_1}(x1))) -> b_{a_1}(a_{c_1}(x1))
   b_{c_1}(c_{a_1}(a_{b_1}(x1))) -> b_{a_1}(a_{b_1}(x1))
   b_{c_1}(c_{a_1}(a_{a_1}(x1))) -> b_{a_1}(a_{a_1}(x1))
   b_{c_1}(c_{a_1}(a_{d_1}(x1))) -> b_{a_1}(a_{d_1}(x1))
   c_{a_1}(a_{d_1}(d_{c_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{a_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{d_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{c_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{a_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{d_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{c_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{a_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{d_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   c_{c_1}(c_{c_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   c_{c_1}(c_{b_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   c_{c_1}(c_{a_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   a_{c_1}(c_{c_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   a_{c_1}(c_{b_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   a_{c_1}(c_{a_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   d_{c_1}(c_{c_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   d_{c_1}(c_{b_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   d_{c_1}(c_{a_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   b_{c_1}(c_{c_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   b_{c_1}(c_{b_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   b_{c_1}(c_{a_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   c_{c_1}(c_{d_1}(d_{c_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   c_{c_1}(c_{d_1}(d_{a_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   c_{c_1}(c_{d_1}(d_{d_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{c_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{a_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{d_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{c_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{a_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{d_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{c_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{a_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{d_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(27) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   C_{B_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))) -> C_{B_1}(b_{c_1}(c_{a_1}(x1)))
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(C_{B_1}(x_1)) =  	[[0A]] 	 +  	[[0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(b_{c_1}(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[0A, -I, -I], [-I, 0A, -I], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(c_{a_1}(x_1)) =  	[[0A], [1A], [1A]] 	 +  	[[0A, 0A, 0A], [-I, 0A, 0A], [1A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(a_{b_1}(x_1)) =  	[[0A], [-I], [1A]] 	 +  	[[0A, -I, -I], [1A, 0A, 0A], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(c_{b_1}(x_1)) =  	[[0A], [1A], [1A]] 	 +  	[[0A, -I, -I], [0A, 0A, 0A], [1A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(a_{a_1}(x_1)) =  	[[1A], [-I], [0A]] 	 +  	[[1A, 0A, 0A], [-I, 0A, 0A], [-I, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(a_{c_1}(x_1)) =  	[[0A], [1A], [0A]] 	 +  	[[0A, -I, 1A], [0A, 1A, 1A], [1A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(c_{c_1}(x_1)) =  	[[0A], [1A], [1A]] 	 +  	[[0A, 0A, -I], [1A, 0A, 0A], [1A, 1A, 0A]] 	* 	x_1
>>>

   <<<
 POL(a_{d_1}(x_1)) =  	[[0A], [0A], [1A]] 	 +  	[[-I, -I, -I], [-I, -I, -I], [-I, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(c_{d_1}(x_1)) =  	[[0A], [1A], [1A]] 	 +  	[[-I, -I, -I], [-I, -I, -I], [-I, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(b_{a_1}(x_1)) =  	[[0A], [0A], [-I]] 	 +  	[[-I, -I, -I], [-I, -I, -I], [-I, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(b_{b_1}(x_1)) =  	[[0A], [-I], [-I]] 	 +  	[[-I, -I, -I], [0A, -I, 0A], [0A, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(d_{c_1}(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[0A, 0A, 0A], [0A, 0A, 0A], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(d_{a_1}(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[0A, 0A, 1A], [0A, 1A, 0A], [0A, 1A, -I]] 	* 	x_1
>>>

   <<<
 POL(d_{d_1}(x_1)) =  	[[0A], [0A], [-I]] 	 +  	[[-I, -I, 0A], [-I, 0A, 0A], [-I, -I, -I]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{c_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{b_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{d_1}(x1))))
   b_{c_1}(c_{a_1}(a_{c_1}(x1))) -> b_{a_1}(a_{c_1}(x1))
   b_{c_1}(c_{a_1}(a_{b_1}(x1))) -> b_{a_1}(a_{b_1}(x1))
   b_{c_1}(c_{a_1}(a_{a_1}(x1))) -> b_{a_1}(a_{a_1}(x1))
   b_{c_1}(c_{a_1}(a_{d_1}(x1))) -> b_{a_1}(a_{d_1}(x1))
   b_{c_1}(c_{c_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   b_{c_1}(c_{b_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   b_{c_1}(c_{a_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   b_{c_1}(c_{d_1}(d_{c_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{a_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{d_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   c_{a_1}(a_{d_1}(d_{c_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{a_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{d_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   a_{c_1}(c_{a_1}(a_{c_1}(x1))) -> a_{a_1}(a_{c_1}(x1))
   a_{c_1}(c_{a_1}(a_{a_1}(x1))) -> a_{a_1}(a_{a_1}(x1))
   a_{c_1}(c_{a_1}(a_{d_1}(x1))) -> a_{a_1}(a_{d_1}(x1))
   a_{c_1}(c_{c_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   a_{c_1}(c_{d_1}(d_{c_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{a_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{d_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   a_{a_1}(a_{d_1}(d_{c_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{a_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{d_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   c_{c_1}(c_{a_1}(a_{c_1}(x1))) -> c_{a_1}(a_{c_1}(x1))
   c_{c_1}(c_{a_1}(a_{a_1}(x1))) -> c_{a_1}(a_{a_1}(x1))
   c_{c_1}(c_{a_1}(a_{d_1}(x1))) -> c_{a_1}(a_{d_1}(x1))
   c_{c_1}(c_{c_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   c_{c_1}(c_{d_1}(d_{c_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   c_{c_1}(c_{d_1}(d_{a_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   c_{c_1}(c_{d_1}(d_{d_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   a_{c_1}(c_{a_1}(a_{b_1}(x1))) -> a_{a_1}(a_{b_1}(x1))
   a_{c_1}(c_{b_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   a_{c_1}(c_{a_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   c_{c_1}(c_{a_1}(a_{b_1}(x1))) -> c_{a_1}(a_{b_1}(x1))
   c_{c_1}(c_{b_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   c_{c_1}(c_{a_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))


----------------------------------------

(28)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C_{B_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> C_{B_1}(b_{c_1}(c_{b_1}(x1)))
   C_{B_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> C_{B_1}(x1)

The TRS R consists of the following rules:

   c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{c_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{b_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{d_1}(x1))))
   c_{c_1}(c_{a_1}(a_{c_1}(x1))) -> c_{a_1}(a_{c_1}(x1))
   c_{c_1}(c_{a_1}(a_{b_1}(x1))) -> c_{a_1}(a_{b_1}(x1))
   c_{c_1}(c_{a_1}(a_{a_1}(x1))) -> c_{a_1}(a_{a_1}(x1))
   c_{c_1}(c_{a_1}(a_{d_1}(x1))) -> c_{a_1}(a_{d_1}(x1))
   a_{c_1}(c_{a_1}(a_{c_1}(x1))) -> a_{a_1}(a_{c_1}(x1))
   a_{c_1}(c_{a_1}(a_{b_1}(x1))) -> a_{a_1}(a_{b_1}(x1))
   a_{c_1}(c_{a_1}(a_{a_1}(x1))) -> a_{a_1}(a_{a_1}(x1))
   a_{c_1}(c_{a_1}(a_{d_1}(x1))) -> a_{a_1}(a_{d_1}(x1))
   d_{c_1}(c_{a_1}(a_{c_1}(x1))) -> d_{a_1}(a_{c_1}(x1))
   d_{c_1}(c_{a_1}(a_{b_1}(x1))) -> d_{a_1}(a_{b_1}(x1))
   d_{c_1}(c_{a_1}(a_{a_1}(x1))) -> d_{a_1}(a_{a_1}(x1))
   d_{c_1}(c_{a_1}(a_{d_1}(x1))) -> d_{a_1}(a_{d_1}(x1))
   b_{c_1}(c_{a_1}(a_{c_1}(x1))) -> b_{a_1}(a_{c_1}(x1))
   b_{c_1}(c_{a_1}(a_{b_1}(x1))) -> b_{a_1}(a_{b_1}(x1))
   b_{c_1}(c_{a_1}(a_{a_1}(x1))) -> b_{a_1}(a_{a_1}(x1))
   b_{c_1}(c_{a_1}(a_{d_1}(x1))) -> b_{a_1}(a_{d_1}(x1))
   c_{a_1}(a_{d_1}(d_{c_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{a_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{d_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{c_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{a_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{d_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{c_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{a_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{d_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   c_{c_1}(c_{c_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   c_{c_1}(c_{b_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   c_{c_1}(c_{a_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   a_{c_1}(c_{c_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   a_{c_1}(c_{b_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   a_{c_1}(c_{a_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   d_{c_1}(c_{c_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   d_{c_1}(c_{b_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   d_{c_1}(c_{a_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   b_{c_1}(c_{c_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   b_{c_1}(c_{b_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   b_{c_1}(c_{a_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   c_{c_1}(c_{d_1}(d_{c_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   c_{c_1}(c_{d_1}(d_{a_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   c_{c_1}(c_{d_1}(d_{d_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{c_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{a_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{d_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{c_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{a_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{d_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{c_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{a_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{d_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(29) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   C_{B_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> C_{B_1}(x1)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(C_{B_1}(x_1)) = x_1
   POL(a_{a_1}(x_1)) = 0
   POL(a_{b_1}(x_1)) = x_1
   POL(a_{c_1}(x_1)) = 0
   POL(a_{d_1}(x_1)) = 0
   POL(b_{a_1}(x_1)) = 0
   POL(b_{b_1}(x_1)) = x_1
   POL(b_{c_1}(x_1)) = 1 + x_1
   POL(c_{a_1}(x_1)) = x_1
   POL(c_{b_1}(x_1)) = 0
   POL(c_{c_1}(x_1)) = x_1
   POL(c_{d_1}(x_1)) = 0
   POL(d_{a_1}(x_1)) = 0
   POL(d_{c_1}(x_1)) = 0
   POL(d_{d_1}(x_1)) = 0

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{c_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{b_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{d_1}(x1))))
   b_{c_1}(c_{a_1}(a_{c_1}(x1))) -> b_{a_1}(a_{c_1}(x1))
   b_{c_1}(c_{a_1}(a_{b_1}(x1))) -> b_{a_1}(a_{b_1}(x1))
   b_{c_1}(c_{a_1}(a_{a_1}(x1))) -> b_{a_1}(a_{a_1}(x1))
   b_{c_1}(c_{a_1}(a_{d_1}(x1))) -> b_{a_1}(a_{d_1}(x1))
   b_{c_1}(c_{c_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   b_{c_1}(c_{b_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   b_{c_1}(c_{a_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   b_{c_1}(c_{d_1}(d_{c_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{a_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{d_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   a_{c_1}(c_{a_1}(a_{c_1}(x1))) -> a_{a_1}(a_{c_1}(x1))
   a_{c_1}(c_{a_1}(a_{a_1}(x1))) -> a_{a_1}(a_{a_1}(x1))
   a_{c_1}(c_{a_1}(a_{d_1}(x1))) -> a_{a_1}(a_{d_1}(x1))
   a_{c_1}(c_{c_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   a_{c_1}(c_{d_1}(d_{c_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{a_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{d_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   a_{a_1}(a_{d_1}(d_{c_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{a_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{d_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{c_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{a_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{d_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   c_{c_1}(c_{a_1}(a_{c_1}(x1))) -> c_{a_1}(a_{c_1}(x1))
   c_{c_1}(c_{a_1}(a_{a_1}(x1))) -> c_{a_1}(a_{a_1}(x1))
   c_{c_1}(c_{a_1}(a_{d_1}(x1))) -> c_{a_1}(a_{d_1}(x1))
   c_{c_1}(c_{c_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   c_{c_1}(c_{d_1}(d_{c_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   c_{c_1}(c_{d_1}(d_{a_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   c_{c_1}(c_{d_1}(d_{d_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   a_{c_1}(c_{a_1}(a_{b_1}(x1))) -> a_{a_1}(a_{b_1}(x1))
   a_{c_1}(c_{b_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   a_{c_1}(c_{a_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   c_{c_1}(c_{a_1}(a_{b_1}(x1))) -> c_{a_1}(a_{b_1}(x1))
   c_{c_1}(c_{b_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   c_{c_1}(c_{a_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))


----------------------------------------

(30)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C_{B_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> C_{B_1}(b_{c_1}(c_{b_1}(x1)))

The TRS R consists of the following rules:

   c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{c_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{b_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{d_1}(x1))))
   c_{c_1}(c_{a_1}(a_{c_1}(x1))) -> c_{a_1}(a_{c_1}(x1))
   c_{c_1}(c_{a_1}(a_{b_1}(x1))) -> c_{a_1}(a_{b_1}(x1))
   c_{c_1}(c_{a_1}(a_{a_1}(x1))) -> c_{a_1}(a_{a_1}(x1))
   c_{c_1}(c_{a_1}(a_{d_1}(x1))) -> c_{a_1}(a_{d_1}(x1))
   a_{c_1}(c_{a_1}(a_{c_1}(x1))) -> a_{a_1}(a_{c_1}(x1))
   a_{c_1}(c_{a_1}(a_{b_1}(x1))) -> a_{a_1}(a_{b_1}(x1))
   a_{c_1}(c_{a_1}(a_{a_1}(x1))) -> a_{a_1}(a_{a_1}(x1))
   a_{c_1}(c_{a_1}(a_{d_1}(x1))) -> a_{a_1}(a_{d_1}(x1))
   d_{c_1}(c_{a_1}(a_{c_1}(x1))) -> d_{a_1}(a_{c_1}(x1))
   d_{c_1}(c_{a_1}(a_{b_1}(x1))) -> d_{a_1}(a_{b_1}(x1))
   d_{c_1}(c_{a_1}(a_{a_1}(x1))) -> d_{a_1}(a_{a_1}(x1))
   d_{c_1}(c_{a_1}(a_{d_1}(x1))) -> d_{a_1}(a_{d_1}(x1))
   b_{c_1}(c_{a_1}(a_{c_1}(x1))) -> b_{a_1}(a_{c_1}(x1))
   b_{c_1}(c_{a_1}(a_{b_1}(x1))) -> b_{a_1}(a_{b_1}(x1))
   b_{c_1}(c_{a_1}(a_{a_1}(x1))) -> b_{a_1}(a_{a_1}(x1))
   b_{c_1}(c_{a_1}(a_{d_1}(x1))) -> b_{a_1}(a_{d_1}(x1))
   c_{a_1}(a_{d_1}(d_{c_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{a_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{d_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{c_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{a_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{d_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{c_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{a_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{d_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   c_{c_1}(c_{c_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   c_{c_1}(c_{b_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   c_{c_1}(c_{a_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   a_{c_1}(c_{c_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   a_{c_1}(c_{b_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   a_{c_1}(c_{a_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   d_{c_1}(c_{c_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   d_{c_1}(c_{b_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   d_{c_1}(c_{a_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   b_{c_1}(c_{c_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   b_{c_1}(c_{b_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   b_{c_1}(c_{a_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   c_{c_1}(c_{d_1}(d_{c_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   c_{c_1}(c_{d_1}(d_{a_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   c_{c_1}(c_{d_1}(d_{d_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{c_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{a_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{d_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{c_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{a_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{d_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{c_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{a_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{d_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(31) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   C_{B_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> C_{B_1}(b_{c_1}(c_{b_1}(x1)))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(C_{B_1}(x_1)) = x_1
   POL(a_{a_1}(x_1)) = 0
   POL(a_{b_1}(x_1)) = 1
   POL(a_{c_1}(x_1)) = 0
   POL(a_{d_1}(x_1)) = 0
   POL(b_{a_1}(x_1)) = 0
   POL(b_{b_1}(x_1)) = x_1
   POL(b_{c_1}(x_1)) = x_1
   POL(c_{a_1}(x_1)) = x_1
   POL(c_{b_1}(x_1)) = 0
   POL(c_{c_1}(x_1)) = x_1
   POL(c_{d_1}(x_1)) = 0
   POL(d_{a_1}(x_1)) = 0
   POL(d_{c_1}(x_1)) = 0
   POL(d_{d_1}(x_1)) = 0

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{c_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{b_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{d_1}(x1))))
   b_{c_1}(c_{a_1}(a_{c_1}(x1))) -> b_{a_1}(a_{c_1}(x1))
   b_{c_1}(c_{a_1}(a_{b_1}(x1))) -> b_{a_1}(a_{b_1}(x1))
   b_{c_1}(c_{a_1}(a_{a_1}(x1))) -> b_{a_1}(a_{a_1}(x1))
   b_{c_1}(c_{a_1}(a_{d_1}(x1))) -> b_{a_1}(a_{d_1}(x1))
   b_{c_1}(c_{c_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   b_{c_1}(c_{b_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   b_{c_1}(c_{a_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   b_{c_1}(c_{d_1}(d_{c_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{a_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{d_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   a_{c_1}(c_{a_1}(a_{c_1}(x1))) -> a_{a_1}(a_{c_1}(x1))
   a_{c_1}(c_{a_1}(a_{a_1}(x1))) -> a_{a_1}(a_{a_1}(x1))
   a_{c_1}(c_{a_1}(a_{d_1}(x1))) -> a_{a_1}(a_{d_1}(x1))
   a_{c_1}(c_{c_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   a_{c_1}(c_{d_1}(d_{c_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{a_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{d_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   a_{a_1}(a_{d_1}(d_{c_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{a_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{d_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{c_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{a_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{d_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   c_{c_1}(c_{a_1}(a_{c_1}(x1))) -> c_{a_1}(a_{c_1}(x1))
   c_{c_1}(c_{a_1}(a_{a_1}(x1))) -> c_{a_1}(a_{a_1}(x1))
   c_{c_1}(c_{a_1}(a_{d_1}(x1))) -> c_{a_1}(a_{d_1}(x1))
   c_{c_1}(c_{c_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   c_{c_1}(c_{d_1}(d_{c_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   c_{c_1}(c_{d_1}(d_{a_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   c_{c_1}(c_{d_1}(d_{d_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   a_{c_1}(c_{a_1}(a_{b_1}(x1))) -> a_{a_1}(a_{b_1}(x1))
   a_{c_1}(c_{b_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   a_{c_1}(c_{a_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   c_{c_1}(c_{a_1}(a_{b_1}(x1))) -> c_{a_1}(a_{b_1}(x1))
   c_{c_1}(c_{b_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   c_{c_1}(c_{a_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))


----------------------------------------

(32)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{c_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{b_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{b_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(x1))))
   c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1)))) -> c_{c_1}(c_{b_1}(b_{c_1}(c_{d_1}(x1))))
   c_{c_1}(c_{a_1}(a_{c_1}(x1))) -> c_{a_1}(a_{c_1}(x1))
   c_{c_1}(c_{a_1}(a_{b_1}(x1))) -> c_{a_1}(a_{b_1}(x1))
   c_{c_1}(c_{a_1}(a_{a_1}(x1))) -> c_{a_1}(a_{a_1}(x1))
   c_{c_1}(c_{a_1}(a_{d_1}(x1))) -> c_{a_1}(a_{d_1}(x1))
   a_{c_1}(c_{a_1}(a_{c_1}(x1))) -> a_{a_1}(a_{c_1}(x1))
   a_{c_1}(c_{a_1}(a_{b_1}(x1))) -> a_{a_1}(a_{b_1}(x1))
   a_{c_1}(c_{a_1}(a_{a_1}(x1))) -> a_{a_1}(a_{a_1}(x1))
   a_{c_1}(c_{a_1}(a_{d_1}(x1))) -> a_{a_1}(a_{d_1}(x1))
   d_{c_1}(c_{a_1}(a_{c_1}(x1))) -> d_{a_1}(a_{c_1}(x1))
   d_{c_1}(c_{a_1}(a_{b_1}(x1))) -> d_{a_1}(a_{b_1}(x1))
   d_{c_1}(c_{a_1}(a_{a_1}(x1))) -> d_{a_1}(a_{a_1}(x1))
   d_{c_1}(c_{a_1}(a_{d_1}(x1))) -> d_{a_1}(a_{d_1}(x1))
   b_{c_1}(c_{a_1}(a_{c_1}(x1))) -> b_{a_1}(a_{c_1}(x1))
   b_{c_1}(c_{a_1}(a_{b_1}(x1))) -> b_{a_1}(a_{b_1}(x1))
   b_{c_1}(c_{a_1}(a_{a_1}(x1))) -> b_{a_1}(a_{a_1}(x1))
   b_{c_1}(c_{a_1}(a_{d_1}(x1))) -> b_{a_1}(a_{d_1}(x1))
   c_{a_1}(a_{d_1}(d_{c_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{a_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   c_{a_1}(a_{d_1}(d_{d_1}(x1))) -> c_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{c_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{a_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   a_{a_1}(a_{d_1}(d_{d_1}(x1))) -> a_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{c_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{c_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{a_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{a_1}(x1))))))
   d_{a_1}(a_{d_1}(d_{d_1}(x1))) -> d_{d_1}(d_{c_1}(c_{b_1}(b_{c_1}(c_{a_1}(a_{d_1}(x1))))))
   c_{c_1}(c_{c_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   c_{c_1}(c_{b_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   c_{c_1}(c_{a_1}(x1)) -> c_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   a_{c_1}(c_{c_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   a_{c_1}(c_{b_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   a_{c_1}(c_{a_1}(x1)) -> a_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   d_{c_1}(c_{c_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   d_{c_1}(c_{b_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   d_{c_1}(c_{a_1}(x1)) -> d_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   b_{c_1}(c_{c_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{c_1}(x1))))
   b_{c_1}(c_{b_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{b_1}(x1))))
   b_{c_1}(c_{a_1}(x1)) -> b_{a_1}(a_{a_1}(a_{b_1}(b_{a_1}(x1))))
   c_{c_1}(c_{d_1}(d_{c_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   c_{c_1}(c_{d_1}(d_{a_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   c_{c_1}(c_{d_1}(d_{d_1}(x1))) -> c_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{c_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{a_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   a_{c_1}(c_{d_1}(d_{d_1}(x1))) -> a_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{c_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{a_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   d_{c_1}(c_{d_1}(d_{d_1}(x1))) -> d_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{c_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{c_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{a_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{a_1}(x1)))))
   b_{c_1}(c_{d_1}(d_{d_1}(x1))) -> b_{a_1}(a_{d_1}(d_{c_1}(c_{a_1}(a_{d_1}(x1)))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(33) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(34)
YES
