YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/QWFPB.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) QDP
(5) QDPOrderProof [EQUIVALENT, 21 ms]
(6) QDP
(7) QDPOrderProof [EQUIVALENT, 60 ms]
(8) QDP
(9) PisEmptyProof [EQUIVALENT, 0 ms]
(10) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(b(x1)) -> x1
   a(c(x1)) -> c(b(b(c(a(a(x1))))))
   b(c(x1)) -> x1

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(c(x1)) -> B(b(c(a(a(x1)))))
   A(c(x1)) -> B(c(a(a(x1))))
   A(c(x1)) -> A(a(x1))
   A(c(x1)) -> A(x1)

The TRS R consists of the following rules:

   a(b(x1)) -> x1
   a(c(x1)) -> c(b(b(c(a(a(x1))))))
   b(c(x1)) -> x1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 2 less nodes.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(c(x1)) -> A(x1)
   A(c(x1)) -> A(a(x1))

The TRS R consists of the following rules:

   a(b(x1)) -> x1
   a(c(x1)) -> c(b(b(c(a(a(x1))))))
   b(c(x1)) -> x1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   A(c(x1)) -> A(x1)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( A_1(x_1) ) = 2x_1
POL( a_1(x_1) ) = x_1 + 2
POL( b_1(x_1) ) = max{0, x_1 - 2}
POL( c_1(x_1) ) = x_1 + 2

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   a(b(x1)) -> x1
   a(c(x1)) -> c(b(b(c(a(a(x1))))))
   b(c(x1)) -> x1


----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(c(x1)) -> A(a(x1))

The TRS R consists of the following rules:

   a(b(x1)) -> x1
   a(c(x1)) -> c(b(b(c(a(a(x1))))))
   b(c(x1)) -> x1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   A(c(x1)) -> A(a(x1))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO,RATPOLO]:

   POL(A(x_1)) = [4]x_1
   POL(a(x_1)) = [4]x_1
   POL(b(x_1)) = [1/4]x_1
   POL(c(x_1)) = [1/4] + [4]x_1
The value of delta used in the strict ordering is 1.
The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   a(b(x1)) -> x1
   a(c(x1)) -> c(b(b(c(a(a(x1))))))
   b(c(x1)) -> x1


----------------------------------------

(8)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   a(b(x1)) -> x1
   a(c(x1)) -> c(b(b(c(a(a(x1))))))
   b(c(x1)) -> x1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(10)
YES
