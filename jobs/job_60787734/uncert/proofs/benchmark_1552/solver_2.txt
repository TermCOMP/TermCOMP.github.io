YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/SP73K.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) Strip Symbols Proof [SOUND, 0 ms]
(2) QTRS
(3) QTRS Reverse [EQUIVALENT, 0 ms]
(4) QTRS
(5) RFCMatchBoundsTRSProof [EQUIVALENT, 0 ms]
(6) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(a(b(a(a(b(a(a(a(a(a(x1))))))))))) -> a(a(a(a(a(a(a(b(a(a(b(a(a(b(x1))))))))))))))

Q is empty.

----------------------------------------

(1) Strip Symbols Proof (SOUND)
We were given the following TRS:

   a(a(b(a(a(b(a(a(a(a(a(x1))))))))))) -> a(a(a(a(a(a(a(b(a(a(b(a(a(b(x1))))))))))))))

By stripping symbols from the only rule of the system, we obtained the following TRS [ENDRULLIS]: 

   b(a(a(b(a(a(a(a(a(x1))))))))) -> a(a(a(a(a(b(a(a(b(a(a(b(x1))))))))))))

----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   b(a(a(b(a(a(a(a(a(x1))))))))) -> a(a(a(a(a(b(a(a(b(a(a(b(x1))))))))))))

Q is empty.

----------------------------------------

(3) QTRS Reverse (EQUIVALENT)
We applied the QTRS Reverse Processor [REVERSE].
----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(a(a(a(a(b(a(a(b(x1))))))))) -> b(a(a(b(a(a(b(a(a(a(a(a(x1))))))))))))

Q is empty.

----------------------------------------

(5) RFCMatchBoundsTRSProof (EQUIVALENT)
Termination of the TRS R could be shown with a Match Bound [MATCHBOUNDS1,MATCHBOUNDS2] of 1. This implies Q-termination of R.
The following rules were used to construct the certificate:

   a(a(a(a(a(b(a(a(b(x1))))))))) -> b(a(a(b(a(a(b(a(a(a(a(a(x1))))))))))))

The certificate found is represented by the following graph.
The certificate consists of the following enumerated nodes:
2, 4, 5, 7, 9, 10, 12, 14, 16, 18, 20, 22, 24, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48

Node 2 is start node and node 4 is final node.

Those nodes are connected through the following edges:

* 2 to 5 labelled b_1(0)* 4 to 4 labelled #_1(0)* 5 to 7 labelled a_1(0)* 7 to 9 labelled a_1(0)* 9 to 10 labelled b_1(0)* 10 to 12 labelled a_1(0)* 12 to 14 labelled a_1(0)* 14 to 16 labelled b_1(0)* 16 to 18 labelled a_1(0)* 16 to 38 labelled b_1(1)* 18 to 20 labelled a_1(0)* 18 to 38 labelled b_1(1)* 20 to 22 labelled a_1(0)* 20 to 38 labelled b_1(1)* 22 to 24 labelled a_1(0)* 22 to 38 labelled b_1(1)* 24 to 4 labelled a_1(0)* 24 to 38 labelled b_1(1)* 38 to 39 labelled a_1(1)* 39 to 40 labelled a_1(1)* 40 to 41 labelled b_1(1)* 41 to 42 labelled a_1(1)* 42 to 43 labelled a_1(1)* 43 to 44 labelled b_1(1)* 44 to 45 labelled a_1(1)* 44 to 38 labelled b_1(1)* 45 to 46 labelled a_1(1)* 45 to 38 labelled b_1(1)* 46 to 47 labelled a_1(1)* 46 to 38 labelled b_1(1)* 47 to 48 labelled a_1(1)* 47 to 38 labelled b_1(1)* 48 to 4 labelled a_1(1)* 48 to 38 labelled b_1(1)


----------------------------------------

(6)
YES
