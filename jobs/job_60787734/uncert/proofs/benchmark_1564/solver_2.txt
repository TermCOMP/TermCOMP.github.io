YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/bjRND.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) Strip Symbols Proof [SOUND, 0 ms]
(2) QTRS
(3) QTRS Reverse [EQUIVALENT, 0 ms]
(4) QTRS
(5) RFCMatchBoundsTRSProof [EQUIVALENT, 0 ms]
(6) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(a(b(b(a(a(a(a(b(a(a(x1))))))))))) -> a(a(b(a(a(a(a(b(b(a(a(a(a(b(x1))))))))))))))

Q is empty.

----------------------------------------

(1) Strip Symbols Proof (SOUND)
We were given the following TRS:

   a(a(b(b(a(a(a(a(b(a(a(x1))))))))))) -> a(a(b(a(a(a(a(b(b(a(a(a(a(b(x1))))))))))))))

By stripping symbols from the only rule of the system, we obtained the following TRS [ENDRULLIS]: 

   b(a(a(a(a(b(a(a(x1)))))))) -> a(a(a(a(b(b(a(a(a(a(b(x1)))))))))))

----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   b(a(a(a(a(b(a(a(x1)))))))) -> a(a(a(a(b(b(a(a(a(a(b(x1)))))))))))

Q is empty.

----------------------------------------

(3) QTRS Reverse (EQUIVALENT)
We applied the QTRS Reverse Processor [REVERSE].
----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(a(b(a(a(a(a(b(x1)))))))) -> b(a(a(a(a(b(b(a(a(a(a(x1)))))))))))

Q is empty.

----------------------------------------

(5) RFCMatchBoundsTRSProof (EQUIVALENT)
Termination of the TRS R could be shown with a Match Bound [MATCHBOUNDS1,MATCHBOUNDS2] of 2. This implies Q-termination of R.
The following rules were used to construct the certificate:

   a(a(b(a(a(a(a(b(x1)))))))) -> b(a(a(a(a(b(b(a(a(a(a(x1)))))))))))

The certificate found is represented by the following graph.
The certificate consists of the following enumerated nodes:
113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244

Node 113 is start node and node 114 is final node.

Those nodes are connected through the following edges:

* 113 to 115 labelled b_1(0)* 114 to 114 labelled #_1(0)* 115 to 116 labelled a_1(0)* 116 to 117 labelled a_1(0)* 117 to 118 labelled a_1(0)* 118 to 119 labelled a_1(0)* 119 to 120 labelled b_1(0)* 120 to 121 labelled b_1(0)* 121 to 122 labelled a_1(0)* 121 to 225 labelled b_1(1)* 122 to 123 labelled a_1(0)* 122 to 225 labelled b_1(1)* 123 to 124 labelled a_1(0)* 123 to 125 labelled b_1(1)* 124 to 114 labelled a_1(0)* 124 to 125 labelled b_1(1)* 125 to 126 labelled a_1(1)* 126 to 127 labelled a_1(1)* 127 to 128 labelled a_1(1)* 128 to 129 labelled a_1(1)* 129 to 130 labelled b_1(1)* 130 to 131 labelled b_1(1)* 131 to 132 labelled a_1(1)* 131 to 235 labelled b_1(2)* 132 to 133 labelled a_1(1)* 132 to 235 labelled b_1(2)* 133 to 134 labelled a_1(1)* 133 to 125 labelled b_1(1)* 134 to 114 labelled a_1(1)* 134 to 125 labelled b_1(1)* 225 to 226 labelled a_1(1)* 226 to 227 labelled a_1(1)* 227 to 228 labelled a_1(1)* 228 to 229 labelled a_1(1)* 229 to 230 labelled b_1(1)* 230 to 231 labelled b_1(1)* 231 to 232 labelled a_1(1)* 231 to 235 labelled b_1(2)* 232 to 233 labelled a_1(1)* 233 to 234 labelled a_1(1)* 233 to 125 labelled b_1(1)* 234 to 130 labelled a_1(1)* 235 to 236 labelled a_1(2)* 236 to 237 labelled a_1(2)* 237 to 238 labelled a_1(2)* 238 to 239 labelled a_1(2)* 239 to 240 labelled b_1(2)* 240 to 241 labelled b_1(2)* 241 to 242 labelled a_1(2)* 241 to 235 labelled b_1(2)* 242 to 243 labelled a_1(2)* 243 to 244 labelled a_1(2)* 243 to 125 labelled b_1(1)* 244 to 130 labelled a_1(2)


----------------------------------------

(6)
YES
