YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/FVyQj.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRS Reverse [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 11 ms]
(4) QDP
(5) QDPOrderProof [EQUIVALENT, 40 ms]
(6) QDP
(7) DependencyGraphProof [EQUIVALENT, 0 ms]
(8) AND
    (9) QDP
        (10) QDPOrderProof [EQUIVALENT, 3 ms]
        (11) QDP
        (12) PisEmptyProof [EQUIVALENT, 0 ms]
        (13) YES
    (14) QDP
        (15) MRRProof [EQUIVALENT, 23 ms]
        (16) QDP
        (17) QDPOrderProof [EQUIVALENT, 103 ms]
        (18) QDP
        (19) DependencyGraphProof [EQUIVALENT, 0 ms]
        (20) AND
            (21) QDP
                (22) QDPOrderProof [EQUIVALENT, 26 ms]
                (23) QDP
                (24) PisEmptyProof [EQUIVALENT, 0 ms]
                (25) YES
            (26) QDP
                (27) QDPOrderProof [EQUIVALENT, 9 ms]
                (28) QDP
                (29) PisEmptyProof [EQUIVALENT, 0 ms]
                (30) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(c(x1)) -> c(b(c(c(a(x1)))))
   b(b(b(x1))) -> c(b(x1))
   d(d(x1)) -> d(b(d(b(d(x1)))))
   a(a(x1)) -> a(d(a(x1)))
   a(b(x1)) -> c(c(a(x1)))
   c(c(x1)) -> c(b(c(b(c(x1)))))
   c(c(c(x1))) -> c(b(b(x1)))

Q is empty.

----------------------------------------

(1) QTRS Reverse (EQUIVALENT)
We applied the QTRS Reverse Processor [REVERSE].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   c(a(x1)) -> a(c(c(b(c(x1)))))
   b(b(b(x1))) -> b(c(x1))
   d(d(x1)) -> d(b(d(b(d(x1)))))
   a(a(x1)) -> a(d(a(x1)))
   b(a(x1)) -> a(c(c(x1)))
   c(c(x1)) -> c(b(c(b(c(x1)))))
   c(c(c(x1))) -> b(b(c(x1)))

Q is empty.

----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(a(x1)) -> A(c(c(b(c(x1)))))
   C(a(x1)) -> C(c(b(c(x1))))
   C(a(x1)) -> C(b(c(x1)))
   C(a(x1)) -> B(c(x1))
   C(a(x1)) -> C(x1)
   B(b(b(x1))) -> B(c(x1))
   B(b(b(x1))) -> C(x1)
   D(d(x1)) -> D(b(d(b(d(x1)))))
   D(d(x1)) -> B(d(b(d(x1))))
   D(d(x1)) -> D(b(d(x1)))
   D(d(x1)) -> B(d(x1))
   A(a(x1)) -> A(d(a(x1)))
   A(a(x1)) -> D(a(x1))
   B(a(x1)) -> A(c(c(x1)))
   B(a(x1)) -> C(c(x1))
   B(a(x1)) -> C(x1)
   C(c(x1)) -> C(b(c(b(c(x1)))))
   C(c(x1)) -> B(c(b(c(x1))))
   C(c(x1)) -> C(b(c(x1)))
   C(c(x1)) -> B(c(x1))
   C(c(c(x1))) -> B(b(c(x1)))
   C(c(c(x1))) -> B(c(x1))

The TRS R consists of the following rules:

   c(a(x1)) -> a(c(c(b(c(x1)))))
   b(b(b(x1))) -> b(c(x1))
   d(d(x1)) -> d(b(d(b(d(x1)))))
   a(a(x1)) -> a(d(a(x1)))
   b(a(x1)) -> a(c(c(x1)))
   c(c(x1)) -> c(b(c(b(c(x1)))))
   c(c(c(x1))) -> b(b(c(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   D(d(x1)) -> D(b(d(b(d(x1)))))
   D(d(x1)) -> B(d(b(d(x1))))
   D(d(x1)) -> D(b(d(x1)))
   D(d(x1)) -> B(d(x1))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(A(x_1)) = 0
   POL(B(x_1)) = 0
   POL(C(x_1)) = 0
   POL(D(x_1)) = x_1
   POL(a(x_1)) = 0
   POL(b(x_1)) = 0
   POL(c(x_1)) = 0
   POL(d(x_1)) = 1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   b(b(b(x1))) -> b(c(x1))
   b(a(x1)) -> a(c(c(x1)))
   a(a(x1)) -> a(d(a(x1)))


----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(a(x1)) -> A(c(c(b(c(x1)))))
   C(a(x1)) -> C(c(b(c(x1))))
   C(a(x1)) -> C(b(c(x1)))
   C(a(x1)) -> B(c(x1))
   C(a(x1)) -> C(x1)
   B(b(b(x1))) -> B(c(x1))
   B(b(b(x1))) -> C(x1)
   A(a(x1)) -> A(d(a(x1)))
   A(a(x1)) -> D(a(x1))
   B(a(x1)) -> A(c(c(x1)))
   B(a(x1)) -> C(c(x1))
   B(a(x1)) -> C(x1)
   C(c(x1)) -> C(b(c(b(c(x1)))))
   C(c(x1)) -> B(c(b(c(x1))))
   C(c(x1)) -> C(b(c(x1)))
   C(c(x1)) -> B(c(x1))
   C(c(c(x1))) -> B(b(c(x1)))
   C(c(c(x1))) -> B(c(x1))

The TRS R consists of the following rules:

   c(a(x1)) -> a(c(c(b(c(x1)))))
   b(b(b(x1))) -> b(c(x1))
   d(d(x1)) -> d(b(d(b(d(x1)))))
   a(a(x1)) -> a(d(a(x1)))
   b(a(x1)) -> a(c(c(x1)))
   c(c(x1)) -> c(b(c(b(c(x1)))))
   c(c(c(x1))) -> b(b(c(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 3 less nodes.
----------------------------------------

(8)
Complex Obligation (AND)

----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(a(x1)) -> A(d(a(x1)))

The TRS R consists of the following rules:

   c(a(x1)) -> a(c(c(b(c(x1)))))
   b(b(b(x1))) -> b(c(x1))
   d(d(x1)) -> d(b(d(b(d(x1)))))
   a(a(x1)) -> a(d(a(x1)))
   b(a(x1)) -> a(c(c(x1)))
   c(c(x1)) -> c(b(c(b(c(x1)))))
   c(c(c(x1))) -> b(b(c(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   A(a(x1)) -> A(d(a(x1)))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(A(x_1)) = x_1
   POL(a(x_1)) = 1
   POL(b(x_1)) = 0
   POL(c(x_1)) = 0
   POL(d(x_1)) = 0

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   d(d(x1)) -> d(b(d(b(d(x1)))))


----------------------------------------

(11)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   c(a(x1)) -> a(c(c(b(c(x1)))))
   b(b(b(x1))) -> b(c(x1))
   d(d(x1)) -> d(b(d(b(d(x1)))))
   a(a(x1)) -> a(d(a(x1)))
   b(a(x1)) -> a(c(c(x1)))
   c(c(x1)) -> c(b(c(b(c(x1)))))
   c(c(c(x1))) -> b(b(c(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(a(x1)) -> C(b(c(x1)))
   C(a(x1)) -> C(c(b(c(x1))))
   C(a(x1)) -> B(c(x1))
   B(b(b(x1))) -> B(c(x1))
   B(b(b(x1))) -> C(x1)
   C(a(x1)) -> C(x1)
   C(c(x1)) -> C(b(c(b(c(x1)))))
   C(c(x1)) -> B(c(b(c(x1))))
   B(a(x1)) -> C(c(x1))
   C(c(x1)) -> C(b(c(x1)))
   C(c(x1)) -> B(c(x1))
   B(a(x1)) -> C(x1)
   C(c(c(x1))) -> B(b(c(x1)))
   C(c(c(x1))) -> B(c(x1))

The TRS R consists of the following rules:

   c(a(x1)) -> a(c(c(b(c(x1)))))
   b(b(b(x1))) -> b(c(x1))
   d(d(x1)) -> d(b(d(b(d(x1)))))
   a(a(x1)) -> a(d(a(x1)))
   b(a(x1)) -> a(c(c(x1)))
   c(c(x1)) -> c(b(c(b(c(x1)))))
   c(c(c(x1))) -> b(b(c(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.

Strictly oriented dependency pairs:

   C(a(x1)) -> C(b(c(x1)))
   C(a(x1)) -> C(c(b(c(x1))))
   C(a(x1)) -> B(c(x1))
   C(a(x1)) -> C(x1)
   B(a(x1)) -> C(c(x1))
   B(a(x1)) -> C(x1)


Used ordering: Polynomial interpretation [POLO]:

   POL(B(x_1)) = 1 + x_1
   POL(C(x_1)) = 1 + x_1
   POL(a(x_1)) = 3 + x_1
   POL(b(x_1)) = x_1
   POL(c(x_1)) = x_1
   POL(d(x_1)) = x_1


----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(b(b(x1))) -> B(c(x1))
   B(b(b(x1))) -> C(x1)
   C(c(x1)) -> C(b(c(b(c(x1)))))
   C(c(x1)) -> B(c(b(c(x1))))
   C(c(x1)) -> C(b(c(x1)))
   C(c(x1)) -> B(c(x1))
   C(c(c(x1))) -> B(b(c(x1)))
   C(c(c(x1))) -> B(c(x1))

The TRS R consists of the following rules:

   c(a(x1)) -> a(c(c(b(c(x1)))))
   b(b(b(x1))) -> b(c(x1))
   d(d(x1)) -> d(b(d(b(d(x1)))))
   a(a(x1)) -> a(d(a(x1)))
   b(a(x1)) -> a(c(c(x1)))
   c(c(x1)) -> c(b(c(b(c(x1)))))
   c(c(c(x1))) -> b(b(c(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   B(b(b(x1))) -> C(x1)
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(B(x_1)) =  	[[0A]] 	 +  	[[-I, 0A, -I]] 	* 	x_1
>>>

   <<<
 POL(b(x_1)) =  	[[0A], [0A], [1A]] 	 +  	[[-I, 0A, -I], [-I, 0A, 0A], [0A, 1A, 0A]] 	* 	x_1
>>>

   <<<
 POL(c(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[1A, 0A, 0A], [0A, 0A, -I], [0A, 0A, -I]] 	* 	x_1
>>>

   <<<
 POL(C(x_1)) =  	[[0A]] 	 +  	[[-I, 0A, -I]] 	* 	x_1
>>>

   <<<
 POL(a(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[-I, -I, -I], [-I, -I, -I], [-I, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(d(x_1)) =  	[[-I], [-I], [-I]] 	 +  	[[0A, -I, -I], [0A, -I, 0A], [0A, 0A, 0A]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   c(a(x1)) -> a(c(c(b(c(x1)))))
   c(c(x1)) -> c(b(c(b(c(x1)))))
   c(c(c(x1))) -> b(b(c(x1)))
   b(b(b(x1))) -> b(c(x1))
   b(a(x1)) -> a(c(c(x1)))
   a(a(x1)) -> a(d(a(x1)))


----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(b(b(x1))) -> B(c(x1))
   C(c(x1)) -> C(b(c(b(c(x1)))))
   C(c(x1)) -> B(c(b(c(x1))))
   C(c(x1)) -> C(b(c(x1)))
   C(c(x1)) -> B(c(x1))
   C(c(c(x1))) -> B(b(c(x1)))
   C(c(c(x1))) -> B(c(x1))

The TRS R consists of the following rules:

   c(a(x1)) -> a(c(c(b(c(x1)))))
   b(b(b(x1))) -> b(c(x1))
   d(d(x1)) -> d(b(d(b(d(x1)))))
   a(a(x1)) -> a(d(a(x1)))
   b(a(x1)) -> a(c(c(x1)))
   c(c(x1)) -> c(b(c(b(c(x1)))))
   c(c(c(x1))) -> b(b(c(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 4 less nodes.
----------------------------------------

(20)
Complex Obligation (AND)

----------------------------------------

(21)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(b(b(x1))) -> B(c(x1))

The TRS R consists of the following rules:

   c(a(x1)) -> a(c(c(b(c(x1)))))
   b(b(b(x1))) -> b(c(x1))
   d(d(x1)) -> d(b(d(b(d(x1)))))
   a(a(x1)) -> a(d(a(x1)))
   b(a(x1)) -> a(c(c(x1)))
   c(c(x1)) -> c(b(c(b(c(x1)))))
   c(c(c(x1))) -> b(b(c(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(22) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   B(b(b(x1))) -> B(c(x1))
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(B(x_1)) =  	[[-I]] 	 +  	[[0A, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(b(x_1)) =  	[[0A], [-I], [1A]] 	 +  	[[-I, -I, 0A], [-I, -I, 0A], [0A, 1A, 0A]] 	* 	x_1
>>>

   <<<
 POL(c(x_1)) =  	[[0A], [0A], [-I]] 	 +  	[[-I, 0A, -I], [0A, 1A, -I], [0A, 0A, -I]] 	* 	x_1
>>>

   <<<
 POL(a(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[-I, -I, -I], [-I, -I, -I], [-I, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(d(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[0A, 0A, 0A], [0A, 1A, 1A], [0A, 0A, 0A]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   c(a(x1)) -> a(c(c(b(c(x1)))))
   c(c(x1)) -> c(b(c(b(c(x1)))))
   c(c(c(x1))) -> b(b(c(x1)))
   b(b(b(x1))) -> b(c(x1))
   b(a(x1)) -> a(c(c(x1)))
   a(a(x1)) -> a(d(a(x1)))


----------------------------------------

(23)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   c(a(x1)) -> a(c(c(b(c(x1)))))
   b(b(b(x1))) -> b(c(x1))
   d(d(x1)) -> d(b(d(b(d(x1)))))
   a(a(x1)) -> a(d(a(x1)))
   b(a(x1)) -> a(c(c(x1)))
   c(c(x1)) -> c(b(c(b(c(x1)))))
   c(c(c(x1))) -> b(b(c(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(24) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(25)
YES

----------------------------------------

(26)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(c(x1)) -> C(b(c(x1)))
   C(c(x1)) -> C(b(c(b(c(x1)))))

The TRS R consists of the following rules:

   c(a(x1)) -> a(c(c(b(c(x1)))))
   b(b(b(x1))) -> b(c(x1))
   d(d(x1)) -> d(b(d(b(d(x1)))))
   a(a(x1)) -> a(d(a(x1)))
   b(a(x1)) -> a(c(c(x1)))
   c(c(x1)) -> c(b(c(b(c(x1)))))
   c(c(c(x1))) -> b(b(c(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(27) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   C(c(x1)) -> C(b(c(x1)))
   C(c(x1)) -> C(b(c(b(c(x1)))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( C_1(x_1) ) = x_1
POL( a_1(x_1) ) = max{0, -2}
POL( b_1(x_1) ) = 1
POL( c_1(x_1) ) = x_1 + 2
POL( d_1(x_1) ) = 2

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   b(b(b(x1))) -> b(c(x1))
   b(a(x1)) -> a(c(c(x1)))
   a(a(x1)) -> a(d(a(x1)))


----------------------------------------

(28)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   c(a(x1)) -> a(c(c(b(c(x1)))))
   b(b(b(x1))) -> b(c(x1))
   d(d(x1)) -> d(b(d(b(d(x1)))))
   a(a(x1)) -> a(d(a(x1)))
   b(a(x1)) -> a(c(c(x1)))
   c(c(x1)) -> c(b(c(b(c(x1)))))
   c(c(c(x1))) -> b(b(c(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(29) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(30)
YES
