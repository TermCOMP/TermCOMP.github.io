YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/gY1bL.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRS Reverse [EQUIVALENT, 0 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 45 ms]
(4) QTRS
(5) AAECC Innermost [EQUIVALENT, 0 ms]
(6) QTRS
(7) DependencyPairsProof [EQUIVALENT, 0 ms]
(8) QDP
(9) DependencyGraphProof [EQUIVALENT, 0 ms]
(10) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   0(x1) -> 1(x1)
   0(0(x1)) -> 0(x1)
   3(4(5(x1))) -> 4(3(5(x1)))
   2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(x1))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -> 0(0(0(1(1(0(1(1(0(0(0(1(0(1(0(1(0(1(1(1(1(0(1(1(0(0(0(1(0(1(1(0(0(1(1(1(0(1(1(1(1(0(0(1(1(0(0(0(0(0(1(1(1(1(0(1(1(1(1(1(0(0(1(1(0(0(1(0(1(0(0(1(0(0(1(1(1(1(0(0(1(1(1(0(1(1(1(0(1(0(0(0(1(0(1(1(0(0(1(0(1(0(1(0(1(1(1(1(0(0(0(0(1(0(0(0(0(0(0(1(1(1(1(0(0(0(0(1(0(1(0(1(0(0(1(1(0(1(1(1(1(1(0(1(0(1(0(0(0(1(0(1(0(1(0(0(1(1(1(0(1(0(0(1(0(0(1(0(1(1(0(0(0(1(1(0(0(1(0(0(1(0(1(1(0(1(0(0(0(0(0(1(x1))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
   1(1(0(0(1(0(0(1(1(1(1(0(1(1(0(0(1(1(0(0(0(0(1(0(1(0(1(1(1(1(0(0(1(1(0(1(0(0(0(0(0(1(0(1(0(0(1(1(1(1(1(0(1(1(0(1(0(1(1(1(1(0(0(1(0(0(1(1(0(0(1(0(0(0(1(0(0(1(1(0(0(0(1(1(0(0(1(0(1(1(0(0(0(0(0(1(1(0(1(0(0(0(1(1(0(1(0(1(0(0(1(1(1(0(0(1(0(1(0(0(1(0(0(1(0(1(0(1(1(1(0(1(0(1(0(1(1(1(1(0(1(0(0(0(0(0(1(0(1(1(0(0(0(0(1(0(1(0(1(1(1(1(1(1(0(1(0(1(0(1(0(1(0(0(0(0(0(1(1(1(1(0(0(1(1(1(1(1(1(1(0(0(0(0(0(1(x1)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -> 2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(x1)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

Q is empty.

----------------------------------------

(1) QTRS Reverse (EQUIVALENT)
We applied the QTRS Reverse Processor [REVERSE].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   0(x1) -> 1(x1)
   0(0(x1)) -> 0(x1)
   5(4(3(x1))) -> 5(3(4(x1)))
   2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(x1))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -> 1(0(0(0(0(0(1(0(1(1(0(1(0(0(1(0(0(1(1(0(0(0(1(1(0(1(0(0(1(0(0(1(0(1(1(1(0(0(1(0(1(0(1(0(0(0(1(0(1(0(1(1(1(1(1(0(1(1(0(0(1(0(1(0(1(0(0(0(0(1(1(1(1(0(0(0(0(0(0(1(0(0(0(0(1(1(1(1(0(1(0(1(0(1(0(0(1(1(0(1(0(0(0(1(0(1(1(1(0(1(1(1(0(0(1(1(1(1(0(0(1(0(0(1(0(1(0(0(1(1(0(0(1(1(1(1(1(0(1(1(1(1(0(0(0(0(0(1(1(0(0(1(1(1(1(0(1(1(1(0(0(1(1(0(1(0(0(0(1(1(0(1(1(1(1(0(1(0(1(0(1(0(0(0(1(1(0(1(1(0(0(0(x1))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
   1(0(0(0(0(0(1(1(1(1(1(1(1(0(0(1(1(1(1(0(0(0(0(0(1(0(1(0(1(0(1(0(1(1(1(1(1(1(0(1(0(1(0(0(0(0(1(1(0(1(0(0(0(0(0(1(0(1(1(1(1(0(1(0(1(0(1(1(1(0(1(0(1(0(0(1(0(0(1(0(1(0(0(1(1(1(0(0(1(0(1(0(1(1(0(0(0(1(0(1(1(0(0(0(0(0(1(1(0(1(0(0(1(1(0(0(0(1(1(0(0(1(0(0(0(1(0(0(1(1(0(0(1(0(0(1(1(1(1(0(1(0(1(1(0(1(1(1(1(1(0(0(1(0(1(0(0(0(0(0(1(0(1(1(0(0(1(1(1(1(0(1(0(1(0(0(0(0(1(1(0(0(1(1(0(1(1(1(1(0(0(1(0(0(1(1(x1)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -> 2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(x1)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

Q is empty.

----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(0(x_1)) = 11 + x_1
   POL(1(x_1)) = x_1
   POL(2(x_1)) = 6 + x_1
   POL(3(x_1)) = x_1
   POL(4(x_1)) = x_1
   POL(5(x_1)) = x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   0(x1) -> 1(x1)
   0(0(x1)) -> 0(x1)
   2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(x1))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -> 1(0(0(0(0(0(1(0(1(1(0(1(0(0(1(0(0(1(1(0(0(0(1(1(0(1(0(0(1(0(0(1(0(1(1(1(0(0(1(0(1(0(1(0(0(0(1(0(1(0(1(1(1(1(1(0(1(1(0(0(1(0(1(0(1(0(0(0(0(1(1(1(1(0(0(0(0(0(0(1(0(0(0(0(1(1(1(1(0(1(0(1(0(1(0(0(1(1(0(1(0(0(0(1(0(1(1(1(0(1(1(1(0(0(1(1(1(1(0(0(1(0(0(1(0(1(0(0(1(1(0(0(1(1(1(1(1(0(1(1(1(1(0(0(0(0(0(1(1(0(0(1(1(1(1(0(1(1(1(0(0(1(1(0(1(0(0(0(1(1(0(1(1(1(1(0(1(0(1(0(1(0(0(0(1(1(0(1(1(0(0(0(x1))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
   1(0(0(0(0(0(1(1(1(1(1(1(1(0(0(1(1(1(1(0(0(0(0(0(1(0(1(0(1(0(1(0(1(1(1(1(1(1(0(1(0(1(0(0(0(0(1(1(0(1(0(0(0(0(0(1(0(1(1(1(1(0(1(0(1(0(1(1(1(0(1(0(1(0(0(1(0(0(1(0(1(0(0(1(1(1(0(0(1(0(1(0(1(1(0(0(0(1(0(1(1(0(0(0(0(0(1(1(0(1(0(0(1(1(0(0(0(1(1(0(0(1(0(0(0(1(0(0(1(1(0(0(1(0(0(1(1(1(1(0(1(0(1(1(0(1(1(1(1(1(0(0(1(0(1(0(0(0(0(0(1(0(1(1(0(0(1(1(1(1(0(1(0(1(0(0(0(0(1(1(0(0(1(1(0(1(1(1(1(0(0(1(0(0(1(1(x1)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -> 2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(2(x1)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   5(4(3(x1))) -> 5(3(4(x1)))

Q is empty.

----------------------------------------

(5) AAECC Innermost (EQUIVALENT)
We have applied [NOC,AAECCNOC] to switch to innermost. The TRS R 1 is none

The TRS R 2 is 
   5(4(3(x1))) -> 5(3(4(x1)))

The signature Sigma is {5_1}
----------------------------------------

(6)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   5(4(3(x1))) -> 5(3(4(x1)))

The set Q consists of the following terms:

   5(4(3(x0)))


----------------------------------------

(7) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   5^1(4(3(x1))) -> 5^1(3(4(x1)))

The TRS R consists of the following rules:

   5(4(3(x1))) -> 5(3(4(x1)))

The set Q consists of the following terms:

   5(4(3(x0)))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 1 less node.
----------------------------------------

(10)
TRUE
