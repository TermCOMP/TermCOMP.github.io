YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/9gIJa.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRS Reverse [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) QDP
(7) QDPSizeChangeProof [EQUIVALENT, 0 ms]
(8) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(x1) -> x1
   a(a(x1)) -> a(b(c(x1)))
   c(b(x1)) -> a(c(a(x1)))

Q is empty.

----------------------------------------

(1) QTRS Reverse (EQUIVALENT)
We applied the QTRS Reverse Processor [REVERSE].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(x1) -> x1
   a(a(x1)) -> c(b(a(x1)))
   b(c(x1)) -> a(c(a(x1)))

Q is empty.

----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(a(x1)) -> B(a(x1))
   B(c(x1)) -> A(c(a(x1)))
   B(c(x1)) -> A(x1)

The TRS R consists of the following rules:

   a(x1) -> x1
   a(a(x1)) -> c(b(a(x1)))
   b(c(x1)) -> a(c(a(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(c(x1)) -> A(x1)
   A(a(x1)) -> B(a(x1))

The TRS R consists of the following rules:

   a(x1) -> x1
   a(a(x1)) -> c(b(a(x1)))
   b(c(x1)) -> a(c(a(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*A(a(x1)) -> B(a(x1))
The graph contains the following edges 1 >= 1


*B(c(x1)) -> A(x1)
The graph contains the following edges 1 > 1


----------------------------------------

(8)
YES
