YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/mLM4i.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRS Reverse [EQUIVALENT, 0 ms]
(2) QTRS
(3) FlatCCProof [EQUIVALENT, 0 ms]
(4) QTRS
(5) RootLabelingProof [EQUIVALENT, 0 ms]
(6) QTRS
(7) QTRSRRRProof [EQUIVALENT, 96 ms]
(8) QTRS
(9) QTRSRRRProof [EQUIVALENT, 28 ms]
(10) QTRS
(11) DependencyPairsProof [EQUIVALENT, 186 ms]
(12) QDP
(13) DependencyGraphProof [EQUIVALENT, 0 ms]
(14) AND
    (15) QDP
        (16) QDPOrderProof [EQUIVALENT, 95 ms]
        (17) QDP
        (18) PisEmptyProof [EQUIVALENT, 0 ms]
        (19) YES
    (20) QDP
        (21) QDPOrderProof [EQUIVALENT, 109 ms]
        (22) QDP
        (23) DependencyGraphProof [EQUIVALENT, 0 ms]
        (24) TRUE
    (25) QDP
        (26) UsableRulesProof [EQUIVALENT, 0 ms]
        (27) QDP
        (28) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (29) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   0(0(0(1(2(1(1(1(0(0(1(0(1(x1))))))))))))) -> 0(0(1(0(1(1(0(2(0(0(2(0(1(0(1(0(1(x1)))))))))))))))))
   0(0(1(0(0(1(1(1(0(1(2(0(1(x1))))))))))))) -> 0(1(1(0(0(1(0(1(1(1(1(0(2(0(1(1(1(x1)))))))))))))))))
   0(0(1(0(1(0(1(0(0(1(0(2(0(x1))))))))))))) -> 0(1(1(1(0(1(1(2(1(2(0(1(1(1(0(1(1(x1)))))))))))))))))
   0(0(1(1(1(1(1(2(1(1(2(1(1(x1))))))))))))) -> 0(1(2(0(1(0(0(1(2(1(0(0(1(0(1(1(1(x1)))))))))))))))))
   0(1(0(2(0(2(1(0(0(1(0(1(1(x1))))))))))))) -> 0(0(0(1(1(1(1(1(0(2(2(0(1(1(1(0(1(x1)))))))))))))))))
   0(1(0(2(2(1(1(2(1(2(2(0(1(x1))))))))))))) -> 0(1(2(2(0(0(1(0(1(0(2(1(0(2(2(0(1(x1)))))))))))))))))
   0(1(1(0(1(1(0(1(0(2(1(0(0(x1))))))))))))) -> 0(1(2(0(1(1(0(1(1(1(1(1(0(0(1(0(0(x1)))))))))))))))))
   0(1(1(1(2(1(2(0(1(2(1(0(1(x1))))))))))))) -> 0(1(0(1(0(1(1(0(0(1(0(2(0(1(0(0(1(x1)))))))))))))))))
   0(2(0(0(1(1(2(0(1(0(1(0(2(x1))))))))))))) -> 0(0(1(2(0(0(1(0(1(0(1(1(0(0(1(1(1(x1)))))))))))))))))
   1(0(2(0(0(2(0(1(2(0(1(0(1(x1))))))))))))) -> 1(1(0(0(1(0(2(1(2(0(1(1(1(0(1(1(1(x1)))))))))))))))))
   1(0(2(0(2(1(0(2(0(1(1(2(0(x1))))))))))))) -> 1(2(0(2(0(0(1(0(1(0(0(0(1(2(0(1(0(x1)))))))))))))))))
   1(1(0(0(2(2(2(0(1(2(0(1(1(x1))))))))))))) -> 1(0(1(1(1(0(0(1(2(0(1(2(0(0(0(0(1(x1)))))))))))))))))
   1(2(0(1(0(2(0(1(0(1(2(1(0(x1))))))))))))) -> 1(0(1(1(2(0(1(0(0(1(0(0(1(0(1(2(0(x1)))))))))))))))))
   1(2(1(2(0(0(0(1(1(1(0(0(1(x1))))))))))))) -> 1(1(1(1(0(2(0(1(1(0(1(1(2(2(0(0(1(x1)))))))))))))))))
   2(0(0(0(2(2(0(2(2(0(1(0(1(x1))))))))))))) -> 2(0(0(1(1(2(1(1(2(0(0(1(2(1(2(0(1(x1)))))))))))))))))
   2(0(2(1(0(0(1(0(0(0(1(1(1(x1))))))))))))) -> 0(2(1(2(1(0(1(1(1(0(1(0(1(0(0(1(1(x1)))))))))))))))))
   2(0(2(1(1(1(1(0(2(0(1(0(1(x1))))))))))))) -> 2(1(2(0(2(0(1(0(1(2(0(1(0(1(1(1(1(x1)))))))))))))))))
   2(1(2(2(1(1(2(2(0(1(1(0(1(x1))))))))))))) -> 2(1(1(1(2(0(1(2(2(0(0(0(1(1(1(0(1(x1)))))))))))))))))
   2(2(1(1(1(1(0(1(1(2(0(1(0(x1))))))))))))) -> 0(1(0(1(1(1(1(1(2(2(0(1(2(1(1(1(0(x1)))))))))))))))))

Q is empty.

----------------------------------------

(1) QTRS Reverse (EQUIVALENT)
We applied the QTRS Reverse Processor [REVERSE].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   1(0(1(0(0(1(1(1(2(1(0(0(0(x1))))))))))))) -> 1(0(1(0(1(0(2(0(0(2(0(1(1(0(1(0(0(x1)))))))))))))))))
   1(0(2(1(0(1(1(1(0(0(1(0(0(x1))))))))))))) -> 1(1(1(0(2(0(1(1(1(1(0(1(0(0(1(1(0(x1)))))))))))))))))
   0(2(0(1(0(0(1(0(1(0(1(0(0(x1))))))))))))) -> 1(1(0(1(1(1(0(2(1(2(1(1(0(1(1(1(0(x1)))))))))))))))))
   1(1(2(1(1(2(1(1(1(1(1(0(0(x1))))))))))))) -> 1(1(1(0(1(0(0(1(2(1(0(0(1(0(2(1(0(x1)))))))))))))))))
   1(1(0(1(0(0(1(2(0(2(0(1(0(x1))))))))))))) -> 1(0(1(1(1(0(2(2(0(1(1(1(1(1(0(0(0(x1)))))))))))))))))
   1(0(2(2(1(2(1(1(2(2(0(1(0(x1))))))))))))) -> 1(0(2(2(0(1(2(0(1(0(1(0(0(2(2(1(0(x1)))))))))))))))))
   0(0(1(2(0(1(0(1(1(0(1(1(0(x1))))))))))))) -> 0(0(1(0(0(1(1(1(1(1(0(1(1(0(2(1(0(x1)))))))))))))))))
   1(0(1(2(1(0(2(1(2(1(1(1(0(x1))))))))))))) -> 1(0(0(1(0(2(0(1(0(0(1(1(0(1(0(1(0(x1)))))))))))))))))
   2(0(1(0(1(0(2(1(1(0(0(2(0(x1))))))))))))) -> 1(1(1(0(0(1(1(0(1(0(1(0(0(2(1(0(0(x1)))))))))))))))))
   1(0(1(0(2(1(0(2(0(0(2(0(1(x1))))))))))))) -> 1(1(1(0(1(1(1(0(2(1(2(0(1(0(0(1(1(x1)))))))))))))))))
   0(2(1(1(0(2(0(1(2(0(2(0(1(x1))))))))))))) -> 0(1(0(2(1(0(0(0(1(0(1(0(0(2(0(2(1(x1)))))))))))))))))
   1(1(0(2(1(0(2(2(2(0(0(1(1(x1))))))))))))) -> 1(0(0(0(0(2(1(0(2(1(0(0(1(1(1(0(1(x1)))))))))))))))))
   0(1(2(1(0(1(0(2(0(1(0(2(1(x1))))))))))))) -> 0(2(1(0(1(0(0(1(0(0(1(0(2(1(1(0(1(x1)))))))))))))))))
   1(0(0(1(1(1(0(0(0(2(1(2(1(x1))))))))))))) -> 1(0(0(2(2(1(1(0(1(1(0(2(0(1(1(1(1(x1)))))))))))))))))
   1(0(1(0(2(2(0(2(2(0(0(0(2(x1))))))))))))) -> 1(0(2(1(2(1(0(0(2(1(1(2(1(1(0(0(2(x1)))))))))))))))))
   1(1(1(0(0(0(1(0(0(1(2(0(2(x1))))))))))))) -> 1(1(0(0(1(0(1(0(1(1(1(0(1(2(1(2(0(x1)))))))))))))))))
   1(0(1(0(2(0(1(1(1(1(2(0(2(x1))))))))))))) -> 1(1(1(1(0(1(0(2(1(0(1(0(2(0(2(1(2(x1)))))))))))))))))
   1(0(1(1(0(2(2(1(1(2(2(1(2(x1))))))))))))) -> 1(0(1(1(1(0(0(0(2(2(1(0(2(1(1(1(2(x1)))))))))))))))))
   0(1(0(2(1(1(0(1(1(1(1(2(2(x1))))))))))))) -> 0(1(1(1(2(1(0(2(2(1(1(1(1(1(0(1(0(x1)))))))))))))))))

Q is empty.

----------------------------------------

(3) FlatCCProof (EQUIVALENT)
We used flat context closure [ROOTLAB]
As Q is empty the flat context closure was sound AND complete.

----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   1(0(1(0(0(1(1(1(2(1(0(0(0(x1))))))))))))) -> 1(0(1(0(1(0(2(0(0(2(0(1(1(0(1(0(0(x1)))))))))))))))))
   1(0(2(1(0(1(1(1(0(0(1(0(0(x1))))))))))))) -> 1(1(1(0(2(0(1(1(1(1(0(1(0(0(1(1(0(x1)))))))))))))))))
   1(1(2(1(1(2(1(1(1(1(1(0(0(x1))))))))))))) -> 1(1(1(0(1(0(0(1(2(1(0(0(1(0(2(1(0(x1)))))))))))))))))
   1(1(0(1(0(0(1(2(0(2(0(1(0(x1))))))))))))) -> 1(0(1(1(1(0(2(2(0(1(1(1(1(1(0(0(0(x1)))))))))))))))))
   1(0(2(2(1(2(1(1(2(2(0(1(0(x1))))))))))))) -> 1(0(2(2(0(1(2(0(1(0(1(0(0(2(2(1(0(x1)))))))))))))))))
   0(0(1(2(0(1(0(1(1(0(1(1(0(x1))))))))))))) -> 0(0(1(0(0(1(1(1(1(1(0(1(1(0(2(1(0(x1)))))))))))))))))
   1(0(1(2(1(0(2(1(2(1(1(1(0(x1))))))))))))) -> 1(0(0(1(0(2(0(1(0(0(1(1(0(1(0(1(0(x1)))))))))))))))))
   1(0(1(0(2(1(0(2(0(0(2(0(1(x1))))))))))))) -> 1(1(1(0(1(1(1(0(2(1(2(0(1(0(0(1(1(x1)))))))))))))))))
   0(2(1(1(0(2(0(1(2(0(2(0(1(x1))))))))))))) -> 0(1(0(2(1(0(0(0(1(0(1(0(0(2(0(2(1(x1)))))))))))))))))
   1(1(0(2(1(0(2(2(2(0(0(1(1(x1))))))))))))) -> 1(0(0(0(0(2(1(0(2(1(0(0(1(1(1(0(1(x1)))))))))))))))))
   0(1(2(1(0(1(0(2(0(1(0(2(1(x1))))))))))))) -> 0(2(1(0(1(0(0(1(0(0(1(0(2(1(1(0(1(x1)))))))))))))))))
   1(0(0(1(1(1(0(0(0(2(1(2(1(x1))))))))))))) -> 1(0(0(2(2(1(1(0(1(1(0(2(0(1(1(1(1(x1)))))))))))))))))
   1(0(1(0(2(2(0(2(2(0(0(0(2(x1))))))))))))) -> 1(0(2(1(2(1(0(0(2(1(1(2(1(1(0(0(2(x1)))))))))))))))))
   1(1(1(0(0(0(1(0(0(1(2(0(2(x1))))))))))))) -> 1(1(0(0(1(0(1(0(1(1(1(0(1(2(1(2(0(x1)))))))))))))))))
   1(0(1(0(2(0(1(1(1(1(2(0(2(x1))))))))))))) -> 1(1(1(1(0(1(0(2(1(0(1(0(2(0(2(1(2(x1)))))))))))))))))
   1(0(1(1(0(2(2(1(1(2(2(1(2(x1))))))))))))) -> 1(0(1(1(1(0(0(0(2(2(1(0(2(1(1(1(2(x1)))))))))))))))))
   0(1(0(2(1(1(0(1(1(1(1(2(2(x1))))))))))))) -> 0(1(1(1(2(1(0(2(2(1(1(1(1(1(0(1(0(x1)))))))))))))))))
   1(0(2(0(1(0(0(1(0(1(0(1(0(0(x1)))))))))))))) -> 1(1(1(0(1(1(1(0(2(1(2(1(1(0(1(1(1(0(x1))))))))))))))))))
   0(0(2(0(1(0(0(1(0(1(0(1(0(0(x1)))))))))))))) -> 0(1(1(0(1(1(1(0(2(1(2(1(1(0(1(1(1(0(x1))))))))))))))))))
   2(0(2(0(1(0(0(1(0(1(0(1(0(0(x1)))))))))))))) -> 2(1(1(0(1(1(1(0(2(1(2(1(1(0(1(1(1(0(x1))))))))))))))))))
   1(2(0(1(0(1(0(2(1(1(0(0(2(0(x1)))))))))))))) -> 1(1(1(1(0(0(1(1(0(1(0(1(0(0(2(1(0(0(x1))))))))))))))))))
   0(2(0(1(0(1(0(2(1(1(0(0(2(0(x1)))))))))))))) -> 0(1(1(1(0(0(1(1(0(1(0(1(0(0(2(1(0(0(x1))))))))))))))))))
   2(2(0(1(0(1(0(2(1(1(0(0(2(0(x1)))))))))))))) -> 2(1(1(1(0(0(1(1(0(1(0(1(0(0(2(1(0(0(x1))))))))))))))))))

Q is empty.

----------------------------------------

(5) RootLabelingProof (EQUIVALENT)
We used plain root labeling [ROOTLAB] with the following heuristic:
LabelAll: All function symbols get labeled

As Q is empty the root labeling was sound AND complete.

----------------------------------------

(6)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))))))))))
   0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))) -> 0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))) -> 0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))) -> 0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{2_1}(x1)))))))))))))))))
   0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(x1))))))))))))) -> 0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(x1)))))))))))))))))
   0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(x1))))))))))))) -> 0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(x1)))))))))))))))))
   0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(x1))))))))))))) -> 0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(x1)))))))))))))))))
   1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{2_1}(2_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(x1))))))))))))) -> 1_{0_1}(0_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(x1)))))))))))))))))
   1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{2_1}(2_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(x1))))))))))))) -> 1_{0_1}(0_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(x1)))))))))))))))))
   1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{2_1}(2_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{2_1}(x1))))))))))))) -> 1_{0_1}(0_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(x1)))))))))))))))))
   0_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(x1))))))))))))) -> 0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(x1)))))))))))))))))
   0_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(x1))))))))))))) -> 0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(x1)))))))))))))))))
   0_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(x1))))))))))))) -> 0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(x1))))))))))))) -> 1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(x1))))))))))))) -> 1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(x1))))))))))))) -> 1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(x1)))))))))))))))))
   1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{2_1}(x1))))))))))))) -> 1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{2_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{2_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(x1)))))))))))))))))
   0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{1_1}(x1))))))))))))) -> 0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(x1))))))))))))) -> 0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{2_1}(x1))))))))))))) -> 0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))))))))
   1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))))))))
   1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))))))))
   0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))) -> 0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))))))))
   0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))) -> 0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))))))))
   0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))) -> 0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))))))))
   2_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))) -> 2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))))))))
   2_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))) -> 2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))))))))
   2_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))) -> 2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))))))))
   1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(x1)))))))))))))) -> 1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))))))))
   1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(x1)))))))))))))) -> 1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))))))))
   1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(x1)))))))))))))) -> 1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))))))))
   0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(x1)))))))))))))) -> 0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))))))))
   0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(x1)))))))))))))) -> 0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))))))))
   0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(x1)))))))))))))) -> 0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))))))))
   2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(x1)))))))))))))) -> 2_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))))))))
   2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(x1)))))))))))))) -> 2_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))))))))
   2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(x1)))))))))))))) -> 2_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))))))))

Q is empty.

----------------------------------------

(7) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(0_{0_1}(x_1)) = 1 + x_1
   POL(0_{1_1}(x_1)) = x_1
   POL(0_{2_1}(x_1)) = 1 + x_1
   POL(1_{0_1}(x_1)) = x_1
   POL(1_{1_1}(x_1)) = x_1
   POL(1_{2_1}(x_1)) = 3 + x_1
   POL(2_{0_1}(x_1)) = 1 + x_1
   POL(2_{1_1}(x_1)) = x_1
   POL(2_{2_1}(x_1)) = 3 + x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   1_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))))))))))
   0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))) -> 0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))) -> 0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))) -> 0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))))))))))
   0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(x1))))))))))))) -> 0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(x1)))))))))))))))))
   0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(x1))))))))))))) -> 0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(x1)))))))))))))))))
   0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(x1))))))))))))) -> 0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(x1)))))))))))))))))
   1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{2_1}(2_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(x1))))))))))))) -> 1_{0_1}(0_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(x1)))))))))))))))))
   1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{2_1}(2_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(x1))))))))))))) -> 1_{0_1}(0_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(x1)))))))))))))))))
   1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{2_1}(2_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{2_1}(x1))))))))))))) -> 1_{0_1}(0_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(x1)))))))))))))))))
   0_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(x1))))))))))))) -> 0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(x1)))))))))))))))))
   0_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(x1))))))))))))) -> 0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(x1)))))))))))))))))
   0_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(x1))))))))))))) -> 0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(x1)))))))))))))))))
   1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{2_1}(x1))))))))))))) -> 1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{2_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(x1)))))))))))))))))
   0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{2_1}(x1))))))))))))) -> 0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))))))))))
   0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))) -> 0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))))))))
   0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))) -> 0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))))))))
   0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))) -> 0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))))))))
   2_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))) -> 2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))))))))
   2_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))) -> 2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))))))))
   2_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))) -> 2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))))))))
   1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(x1)))))))))))))) -> 1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))))))))
   1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(x1)))))))))))))) -> 1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))))))))
   1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(x1)))))))))))))) -> 1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))))))))
   0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(x1)))))))))))))) -> 0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))))))))
   0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(x1)))))))))))))) -> 0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))))))))
   0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(x1)))))))))))))) -> 0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))))))))
   2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(x1)))))))))))))) -> 2_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))))))))
   2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(x1)))))))))))))) -> 2_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))))))))
   2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(x1)))))))))))))) -> 2_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))))))))




----------------------------------------

(8)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(x1))))))))))))) -> 1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(x1))))))))))))) -> 1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(x1))))))))))))) -> 1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(x1)))))))))))))))))
   1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{2_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{2_1}(x1)))))))))))))))))
   0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{1_1}(x1))))))))))))) -> 0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(x1))))))))))))) -> 0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))))))))
   1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))))))))
   1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))))))))

Q is empty.

----------------------------------------

(9) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(0_{0_1}(x_1)) = 1 + x_1
   POL(0_{1_1}(x_1)) = x_1
   POL(0_{2_1}(x_1)) = x_1
   POL(1_{0_1}(x_1)) = x_1
   POL(1_{1_1}(x_1)) = x_1
   POL(1_{2_1}(x_1)) = 2 + x_1
   POL(2_{0_1}(x_1)) = 2 + x_1
   POL(2_{1_1}(x_1)) = 1 + x_1
   POL(2_{2_1}(x_1)) = x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(x1))))))))))))) -> 1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(x1))))))))))))) -> 1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(x1))))))))))))) -> 1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(x1)))))))))))))))))




----------------------------------------

(10)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{2_1}(x1)))))))))))))))))
   1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{2_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{2_1}(x1)))))))))))))))))
   0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{1_1}(x1))))))))))))) -> 0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(x1))))))))))))) -> 0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))))))))
   1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))))))))
   1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))))))))

Q is empty.

----------------------------------------

(11) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 0_{1_1}^1(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 0_{1_1}^1(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}^1(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 0_{1_1}^1(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 0_{1_1}^1(1_{0_1}(0_{0_1}(0_{1_1}(x1))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}^1(0_{0_1}(0_{1_1}(x1)))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 0_{1_1}^1(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 0_{1_1}^1(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{0_1}^1(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 0_{1_1}^1(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 0_{1_1}^1(1_{0_1}(0_{0_1}(0_{0_1}(x1))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{0_1}^1(0_{0_1}(0_{0_1}(x1)))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 0_{1_1}^1(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 0_{1_1}^1(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}^1(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 0_{1_1}^1(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 0_{1_1}^1(1_{0_1}(0_{0_1}(0_{2_1}(x1))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}^1(0_{0_1}(0_{2_1}(x1)))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))))))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 0_{1_1}^1(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1))))))))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 0_{1_1}^1(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1)))))))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}^1(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1))))))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 0_{1_1}^1(1_{1_1}(1_{0_1}(0_{1_1}(x1))))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{1_1}(x1)))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}^1(0_{1_1}(x1))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))))))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 0_{1_1}^1(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1))))))))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 0_{1_1}^1(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1)))))))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{0_1}^1(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1))))))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 0_{1_1}^1(1_{1_1}(1_{0_1}(0_{0_1}(x1))))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{0_1}(x1)))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{0_1}^1(0_{0_1}(x1))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))))))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))))))))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 0_{1_1}^1(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1))))))))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 0_{1_1}^1(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1)))))))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}^1(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1))))))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 0_{1_1}^1(1_{1_1}(1_{0_1}(0_{2_1}(x1))))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{2_1}(x1)))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}^1(0_{2_1}(x1))
   1_{0_1}^1(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}^1(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{0_1}^1(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))) -> 0_{1_1}^1(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))
   1_{0_1}^1(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))) -> 0_{1_1}^1(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))
   1_{0_1}^1(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))
   1_{0_1}^1(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))) -> 0_{1_1}^1(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(x1))))))))
   1_{0_1}^1(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}^1(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(x1)))))))
   1_{0_1}^1(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{0_1}^1(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}^1(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))) -> 0_{1_1}^1(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))
   1_{0_1}^1(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))) -> 0_{1_1}^1(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))
   1_{0_1}^1(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))
   1_{0_1}^1(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))) -> 0_{1_1}^1(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(x1))))))))
   1_{0_1}^1(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{0_1}^1(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(x1)))))))
   1_{0_1}^1(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}^1(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}^1(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))) -> 0_{1_1}^1(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))))))
   1_{0_1}^1(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))) -> 0_{1_1}^1(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))
   1_{0_1}^1(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))
   1_{0_1}^1(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))) -> 0_{1_1}^1(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(x1))))))))
   1_{0_1}^1(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}^1(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(x1)))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(x1))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(x1)))))))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(x1))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(x1))))))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(x1))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(x1)))))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(x1))))))))))))) -> 0_{1_1}^1(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(x1))))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(x1))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(x1)))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(x1))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(x1))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(x1))))))))))))) -> 1_{0_1}^1(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(x1)))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(x1))))))))))))) -> 0_{1_1}^1(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(x1))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(x1))))))))))))) -> 1_{0_1}^1(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(x1)))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(x1))))))))))))) -> 0_{1_1}^1(1_{1_1}(1_{1_1}(x1)))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(x1))))))))))))) -> 1_{1_1}^1(1_{1_1}(x1))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(x1))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(x1)))))))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(x1))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(x1))))))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(x1))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(x1)))))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(x1))))))))))))) -> 0_{1_1}^1(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(x1))))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(x1))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(x1)))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(x1))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(x1))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(x1))))))))))))) -> 1_{0_1}^1(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(x1)))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(x1))))))))))))) -> 0_{1_1}^1(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(x1))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(x1))))))))))))) -> 1_{0_1}^1(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(x1)))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(x1))))))))))))) -> 0_{1_1}^1(1_{1_1}(1_{0_1}(x1)))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(x1))))))))))))) -> 1_{1_1}^1(1_{0_1}(x1))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(x1))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{2_1}(x1)))))))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(x1))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{2_1}(x1))))))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(x1))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{2_1}(x1)))))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(x1))))))))))))) -> 0_{1_1}^1(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{2_1}(x1))))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(x1))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{2_1}(x1)))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(x1))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{2_1}(x1))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(x1))))))))))))) -> 1_{0_1}^1(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{2_1}(x1)))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(x1))))))))))))) -> 0_{1_1}^1(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{2_1}(x1))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(x1))))))))))))) -> 1_{0_1}^1(0_{0_1}(0_{1_1}(1_{1_1}(1_{2_1}(x1)))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(x1))))))))))))) -> 0_{1_1}^1(1_{1_1}(1_{2_1}(x1)))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(x1))))))))))))) -> 1_{1_1}^1(1_{2_1}(x1))
   1_{1_1}^1(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{1_1}^1(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{0_1}^1(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(x1))))))))))))))))
   1_{1_1}^1(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 0_{1_1}^1(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(x1))))))))))))))
   1_{1_1}^1(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(x1)))))))))))))
   1_{1_1}^1(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 0_{1_1}^1(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(x1))))))))))))
   1_{1_1}^1(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(x1)))))))))))
   1_{1_1}^1(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 0_{1_1}^1(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(x1))))))))))
   1_{1_1}^1(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(x1)))))))))
   1_{1_1}^1(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(x1))))))))
   1_{1_1}^1(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(x1)))))))
   1_{1_1}^1(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 0_{1_1}^1(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(x1))))))
   1_{1_1}^1(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 0_{1_1}^1(x1)
   1_{1_1}^1(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{1_1}^1(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{0_1}^1(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{0_1}(x1))))))))))))))))
   1_{1_1}^1(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 0_{1_1}^1(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{0_1}(x1))))))))))))))
   1_{1_1}^1(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{0_1}(x1)))))))))))))
   1_{1_1}^1(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 0_{1_1}^1(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{0_1}(x1))))))))))))
   1_{1_1}^1(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{0_1}(x1)))))))))))
   1_{1_1}^1(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 0_{1_1}^1(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{0_1}(x1))))))))))
   1_{1_1}^1(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{0_1}(x1)))))))))
   1_{1_1}^1(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{0_1}(x1))))))))
   1_{1_1}^1(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{0_1}(x1)))))))
   1_{1_1}^1(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 0_{1_1}^1(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{0_1}(x1))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(x1)))))))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(x1))))))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(x1)))))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(x1))))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 0_{1_1}^1(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(x1)))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(x1))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(x1)))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 0_{1_1}^1(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(x1))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{0_1}^1(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(x1)))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(x1)))))))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(x1))))))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(x1)))))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(x1))))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 0_{1_1}^1(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(x1)))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(x1))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(x1)))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 0_{1_1}^1(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(x1))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{0_1}^1(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(x1)))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{2_1}(x1))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{2_1}(x1)))))))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{2_1}(x1))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{2_1}(x1))))))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{2_1}(x1))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{2_1}(x1)))))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{2_1}(x1))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{2_1}(x1))))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{2_1}(x1))))))))))))) -> 0_{1_1}^1(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{2_1}(x1)))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{2_1}(x1))))))))))))) -> 1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{2_1}(x1))))))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{2_1}(x1))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{2_1}(x1)))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{2_1}(x1))))))))))))) -> 0_{1_1}^1(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{2_1}(x1))))))))
   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{2_1}(x1))))))))))))) -> 1_{0_1}^1(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{2_1}(x1)))))))
   0_{1_1}^1(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{1_1}(x1))))))))))))) -> 0_{1_1}^1(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   0_{1_1}^1(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))))))
   0_{1_1}^1(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{1_1}^1(1_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))
   0_{1_1}^1(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{0_1}^1(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))
   0_{1_1}^1(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1))))))))
   0_{1_1}^1(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1)))))))
   0_{1_1}^1(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1))))))
   0_{1_1}^1(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1)))))
   0_{1_1}^1(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{0_1}(0_{1_1}(x1))))
   0_{1_1}^1(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{1_1}(x1))))))))))))) -> 0_{1_1}^1(1_{0_1}(0_{1_1}(x1)))
   0_{1_1}^1(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{0_1}^1(0_{1_1}(x1))
   0_{1_1}^1(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{1_1}(x1))))))))))))) -> 0_{1_1}^1(x1)
   0_{1_1}^1(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(x1))))))))))))) -> 0_{1_1}^1(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   0_{1_1}^1(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))))))
   0_{1_1}^1(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{1_1}^1(1_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))
   0_{1_1}^1(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{0_1}^1(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))
   0_{1_1}^1(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1))))))))
   0_{1_1}^1(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1)))))))
   0_{1_1}^1(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1))))))
   0_{1_1}^1(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1)))))
   0_{1_1}^1(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(x1))))
   0_{1_1}^1(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(x1))))))))))))) -> 0_{1_1}^1(1_{0_1}(0_{0_1}(x1)))
   0_{1_1}^1(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{0_1}^1(0_{0_1}(x1))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))))))))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))))))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))) -> 0_{1_1}^1(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))) -> 1_{0_1}^1(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1)))))))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1))))))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))) -> 0_{1_1}^1(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1)))))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{0_1}(0_{1_1}(x1))))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{1_1}(x1)))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))) -> 1_{0_1}^1(0_{1_1}(x1))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))))))))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))))))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))) -> 0_{1_1}^1(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))) -> 1_{0_1}^1(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1)))))))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1))))))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))) -> 0_{1_1}^1(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1)))))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{0_1}(0_{0_1}(x1))))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{0_1}(x1)))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))) -> 1_{0_1}^1(0_{0_1}(x1))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))))))))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))))))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))) -> 0_{1_1}^1(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))))))))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))))))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))) -> 1_{0_1}^1(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1)))))))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1))))))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))) -> 0_{1_1}^1(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1)))))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))) -> 1_{1_1}^1(1_{1_1}(1_{0_1}(0_{2_1}(x1))))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))) -> 1_{1_1}^1(1_{0_1}(0_{2_1}(x1)))
   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))) -> 1_{0_1}^1(0_{2_1}(x1))

The TRS R consists of the following rules:

   1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{2_1}(x1)))))))))))))))))
   1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{2_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{2_1}(x1)))))))))))))))))
   0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{1_1}(x1))))))))))))) -> 0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(x1))))))))))))) -> 0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))))))))
   1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))))))))
   1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 3 SCCs with 225 less nodes.
----------------------------------------

(14)
Complex Obligation (AND)

----------------------------------------

(15)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))

The TRS R consists of the following rules:

   1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{2_1}(x1)))))))))))))))))
   1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{2_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{2_1}(x1)))))))))))))))))
   0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{1_1}(x1))))))))))))) -> 0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(x1))))))))))))) -> 0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))))))))
   1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))))))))
   1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(16) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}^1(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(0_{0_1}(x_1)) = x_1
   POL(0_{1_1}(x_1)) = x_1
   POL(0_{2_1}(x_1)) = 0
   POL(1_{0_1}(x_1)) = 1 + x_1
   POL(1_{0_1}^1(x_1)) = x_1
   POL(1_{1_1}(x_1)) = x_1
   POL(1_{2_1}(x_1)) = x_1
   POL(2_{0_1}(x_1)) = 0
   POL(2_{1_1}(x_1)) = x_1
   POL(2_{2_1}(x_1)) = 0

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{1_1}(x1))))))))))))) -> 0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(x1))))))))))))) -> 0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))


----------------------------------------

(17)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{2_1}(x1)))))))))))))))))
   1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{2_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{2_1}(x1)))))))))))))))))
   0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{1_1}(x1))))))))))))) -> 0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(x1))))))))))))) -> 0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))))))))
   1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))))))))
   1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(18) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(19)
YES

----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(x1))))))))))))) -> 1_{1_1}^1(1_{1_1}(x1))
   1_{1_1}^1(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 0_{1_1}^1(x1)
   0_{1_1}^1(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{0_1}^1(0_{1_1}(x1))
   0_{1_1}^1(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{1_1}(x1))))))))))))) -> 0_{1_1}^1(x1)

The TRS R consists of the following rules:

   1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{2_1}(x1)))))))))))))))))
   1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{2_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{2_1}(x1)))))))))))))))))
   0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{1_1}(x1))))))))))))) -> 0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(x1))))))))))))) -> 0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))))))))
   1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))))))))
   1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   0_{1_1}^1(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{0_1}^1(0_{1_1}(x1))
   0_{1_1}^1(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{1_1}(x1))))))))))))) -> 0_{1_1}^1(x1)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(0_{0_1}(x_1)) = x_1
   POL(0_{1_1}(x_1)) = x_1
   POL(0_{1_1}^1(x_1)) = x_1
   POL(0_{2_1}(x_1)) = x_1
   POL(1_{0_1}(x_1)) = x_1
   POL(1_{0_1}^1(x_1)) = x_1
   POL(1_{1_1}(x_1)) = x_1
   POL(1_{1_1}^1(x_1)) = x_1
   POL(1_{2_1}(x_1)) = x_1
   POL(2_{0_1}(x_1)) = x_1
   POL(2_{1_1}(x_1)) = x_1
   POL(2_{2_1}(x_1)) = 1 + x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{0_1}(x1)))))))))))))))))
   0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{1_1}(x1))))))))))))) -> 0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(x1))))))))))))) -> 0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))))))))
   1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))))))))
   1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{2_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{2_1}(x1)))))))))))))))))


----------------------------------------

(22)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   1_{0_1}^1(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(x1))))))))))))) -> 1_{1_1}^1(1_{1_1}(x1))
   1_{1_1}^1(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 0_{1_1}^1(x1)

The TRS R consists of the following rules:

   1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{2_1}(x1)))))))))))))))))
   1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{2_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{2_1}(x1)))))))))))))))))
   0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{1_1}(x1))))))))))))) -> 0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(x1))))))))))))) -> 0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))))))))
   1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))))))))
   1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(23) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 2 less nodes.
----------------------------------------

(24)
TRUE

----------------------------------------

(25)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))) -> 1_{0_1}^1(0_{2_1}(x1))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}^1(0_{2_1}(x1))

The TRS R consists of the following rules:

   1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}(0_{2_1}(2_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{2_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{1_1}(1_{2_1}(x1)))))))))))))))))
   1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{1_1}(x1)))))))))))))))))
   1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{0_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{0_1}(0_{2_1}(2_{2_1}(x1))))))))))))) -> 1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{2_1}(2_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{2_1}(x1)))))))))))))))))
   0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{1_1}(x1))))))))))))) -> 0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(x1)))))))))))))))))
   0_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{2_1}(2_{0_1}(x1))))))))))))) -> 0_{1_1}(1_{1_1}(1_{1_1}(1_{2_1}(2_{1_1}(1_{0_1}(0_{2_1}(2_{2_1}(2_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(x1)))))))))))))))))
   1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(x1)))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(x1))))))))))))))))))
   1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{0_1}(x1)))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(x1))))))))))))))))))
   1_{0_1}(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))) -> 1_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(2_{1_1}(1_{2_1}(2_{1_1}(1_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{2_1}(x1))))))))))))))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(26) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(27)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))) -> 1_{0_1}^1(0_{2_1}(x1))
   1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}^1(0_{2_1}(x1))

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(28) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*1_{0_1}^1(0_{2_1}(2_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1)))))))))))))) -> 1_{0_1}^1(0_{2_1}(x1))
The graph contains the following edges 1 > 1


*1_{0_1}^1(0_{2_1}(2_{1_1}(1_{0_1}(0_{1_1}(1_{1_1}(1_{1_1}(1_{0_1}(0_{0_1}(0_{1_1}(1_{0_1}(0_{0_1}(0_{2_1}(x1))))))))))))) -> 1_{0_1}^1(0_{2_1}(x1))
The graph contains the following edges 1 > 1


----------------------------------------

(29)
YES
