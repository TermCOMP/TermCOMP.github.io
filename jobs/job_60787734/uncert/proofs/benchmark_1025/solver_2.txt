YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/Da6O7.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) Strip Symbols Proof [SOUND, 0 ms]
(2) QTRS
(3) QTRS Reverse [EQUIVALENT, 0 ms]
(4) QTRS
(5) RFCMatchBoundsTRSProof [EQUIVALENT, 0 ms]
(6) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   b(b(b(a(b(a(b(b(a(b(x1)))))))))) -> b(b(a(b(a(b(b(b(a(b(a(b(b(x1)))))))))))))

Q is empty.

----------------------------------------

(1) Strip Symbols Proof (SOUND)
We were given the following TRS:

   b(b(b(a(b(a(b(b(a(b(x1)))))))))) -> b(b(a(b(a(b(b(b(a(b(a(b(b(x1)))))))))))))

By stripping symbols from the only rule of the system, we obtained the following TRS [ENDRULLIS]: 

   b(a(b(a(b(b(a(b(x1)))))))) -> a(b(a(b(b(b(a(b(a(b(b(x1)))))))))))

----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   b(a(b(a(b(b(a(b(x1)))))))) -> a(b(a(b(b(b(a(b(a(b(b(x1)))))))))))

Q is empty.

----------------------------------------

(3) QTRS Reverse (EQUIVALENT)
We applied the QTRS Reverse Processor [REVERSE].
----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   b(a(b(b(a(b(a(b(x1)))))))) -> b(b(a(b(a(b(b(b(a(b(a(x1)))))))))))

Q is empty.

----------------------------------------

(5) RFCMatchBoundsTRSProof (EQUIVALENT)
Termination of the TRS R could be shown with a Match Bound [MATCHBOUNDS1,MATCHBOUNDS2] of 2. This implies Q-termination of R.
The following rules were used to construct the certificate:

   b(a(b(b(a(b(a(b(x1)))))))) -> b(b(a(b(a(b(b(b(a(b(a(x1)))))))))))

The certificate found is represented by the following graph.
The certificate consists of the following enumerated nodes:
2, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134

Node 2 is start node and node 4 is final node.

Those nodes are connected through the following edges:

* 2 to 15 labelled b_1(0)* 4 to 4 labelled #_1(0)* 15 to 16 labelled b_1(0)* 16 to 17 labelled a_1(0)* 17 to 18 labelled b_1(0)* 18 to 19 labelled a_1(0)* 19 to 20 labelled b_1(0)* 20 to 21 labelled b_1(0)* 21 to 22 labelled b_1(0)* 21 to 115 labelled b_1(1)* 22 to 23 labelled a_1(0)* 23 to 24 labelled b_1(0)* 23 to 105 labelled b_1(1)* 24 to 4 labelled a_1(0)* 105 to 106 labelled b_1(1)* 106 to 107 labelled a_1(1)* 107 to 108 labelled b_1(1)* 108 to 109 labelled a_1(1)* 109 to 110 labelled b_1(1)* 110 to 111 labelled b_1(1)* 111 to 112 labelled b_1(1)* 111 to 125 labelled b_1(2)* 112 to 113 labelled a_1(1)* 113 to 114 labelled b_1(1)* 113 to 105 labelled b_1(1)* 114 to 4 labelled a_1(1)* 115 to 116 labelled b_1(1)* 116 to 117 labelled a_1(1)* 117 to 118 labelled b_1(1)* 118 to 119 labelled a_1(1)* 119 to 120 labelled b_1(1)* 120 to 121 labelled b_1(1)* 121 to 122 labelled b_1(1)* 121 to 125 labelled b_1(2)* 122 to 123 labelled a_1(1)* 123 to 124 labelled b_1(1)* 123 to 105 labelled b_1(1)* 124 to 110 labelled a_1(1)* 125 to 126 labelled b_1(2)* 126 to 127 labelled a_1(2)* 127 to 128 labelled b_1(2)* 128 to 129 labelled a_1(2)* 129 to 130 labelled b_1(2)* 130 to 131 labelled b_1(2)* 131 to 132 labelled b_1(2)* 131 to 125 labelled b_1(2)* 132 to 133 labelled a_1(2)* 133 to 134 labelled b_1(2)* 133 to 105 labelled b_1(1)* 134 to 110 labelled a_1(2)


----------------------------------------

(6)
YES
