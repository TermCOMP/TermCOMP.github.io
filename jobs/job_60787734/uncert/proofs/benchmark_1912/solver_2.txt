YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/ABZ4m.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRS Reverse [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) AND
    (7) QDP
        (8) UsableRulesProof [EQUIVALENT, 0 ms]
        (9) QDP
        (10) QDPOrderProof [EQUIVALENT, 17 ms]
        (11) QDP
        (12) DependencyGraphProof [EQUIVALENT, 0 ms]
        (13) TRUE
    (14) QDP
        (15) MNOCProof [EQUIVALENT, 0 ms]
        (16) QDP
        (17) UsableRulesProof [EQUIVALENT, 0 ms]
        (18) QDP
        (19) QReductionProof [EQUIVALENT, 0 ms]
        (20) QDP
        (21) QDPOrderProof [EQUIVALENT, 81 ms]
        (22) QDP
        (23) PisEmptyProof [EQUIVALENT, 0 ms]
        (24) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   b(a(a(x1))) -> a(b(c(x1)))
   c(a(x1)) -> a(c(x1))
   c(b(x1)) -> b(a(x1))
   L(a(a(x1))) -> L(a(b(c(x1))))
   c(R(x1)) -> b(a(R(x1)))

Q is empty.

----------------------------------------

(1) QTRS Reverse (EQUIVALENT)
We applied the QTRS Reverse Processor [REVERSE].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(a(b(x1))) -> c(b(a(x1)))
   a(c(x1)) -> c(a(x1))
   b(c(x1)) -> a(b(x1))
   a(a(L(x1))) -> c(b(a(L(x1))))
   R(c(x1)) -> R(a(b(x1)))

Q is empty.

----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(a(b(x1))) -> B(a(x1))
   A(a(b(x1))) -> A(x1)
   A(c(x1)) -> A(x1)
   B(c(x1)) -> A(b(x1))
   B(c(x1)) -> B(x1)
   A(a(L(x1))) -> B(a(L(x1)))
   R^1(c(x1)) -> R^1(a(b(x1)))
   R^1(c(x1)) -> A(b(x1))
   R^1(c(x1)) -> B(x1)

The TRS R consists of the following rules:

   a(a(b(x1))) -> c(b(a(x1)))
   a(c(x1)) -> c(a(x1))
   b(c(x1)) -> a(b(x1))
   a(a(L(x1))) -> c(b(a(L(x1))))
   R(c(x1)) -> R(a(b(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 3 less nodes.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(c(x1)) -> A(b(x1))
   A(a(b(x1))) -> B(a(x1))
   B(c(x1)) -> B(x1)
   A(a(b(x1))) -> A(x1)
   A(c(x1)) -> A(x1)

The TRS R consists of the following rules:

   a(a(b(x1))) -> c(b(a(x1)))
   a(c(x1)) -> c(a(x1))
   b(c(x1)) -> a(b(x1))
   a(a(L(x1))) -> c(b(a(L(x1))))
   R(c(x1)) -> R(a(b(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(c(x1)) -> A(b(x1))
   A(a(b(x1))) -> B(a(x1))
   B(c(x1)) -> B(x1)
   A(a(b(x1))) -> A(x1)
   A(c(x1)) -> A(x1)

The TRS R consists of the following rules:

   a(a(b(x1))) -> c(b(a(x1)))
   a(c(x1)) -> c(a(x1))
   a(a(L(x1))) -> c(b(a(L(x1))))
   b(c(x1)) -> a(b(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   A(a(b(x1))) -> B(a(x1))
   B(c(x1)) -> B(x1)
   A(a(b(x1))) -> A(x1)
   A(c(x1)) -> A(x1)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(A(x_1)) = 1 + x_1
   POL(B(x_1)) = x_1
   POL(L(x_1)) = x_1
   POL(a(x_1)) = 1 + x_1
   POL(b(x_1)) = x_1
   POL(c(x_1)) = 1 + x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   b(c(x1)) -> a(b(x1))
   a(a(b(x1))) -> c(b(a(x1)))
   a(c(x1)) -> c(a(x1))
   a(a(L(x1))) -> c(b(a(L(x1))))


----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(c(x1)) -> A(b(x1))

The TRS R consists of the following rules:

   a(a(b(x1))) -> c(b(a(x1)))
   a(c(x1)) -> c(a(x1))
   a(a(L(x1))) -> c(b(a(L(x1))))
   b(c(x1)) -> a(b(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 1 less node.
----------------------------------------

(13)
TRUE

----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   R^1(c(x1)) -> R^1(a(b(x1)))

The TRS R consists of the following rules:

   a(a(b(x1))) -> c(b(a(x1)))
   a(c(x1)) -> c(a(x1))
   b(c(x1)) -> a(b(x1))
   a(a(L(x1))) -> c(b(a(L(x1))))
   R(c(x1)) -> R(a(b(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) MNOCProof (EQUIVALENT)
We use the modular non-overlap check [LPAR04] to enlarge Q to all left-hand sides of R.
----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   R^1(c(x1)) -> R^1(a(b(x1)))

The TRS R consists of the following rules:

   a(a(b(x1))) -> c(b(a(x1)))
   a(c(x1)) -> c(a(x1))
   b(c(x1)) -> a(b(x1))
   a(a(L(x1))) -> c(b(a(L(x1))))
   R(c(x1)) -> R(a(b(x1)))

The set Q consists of the following terms:

   a(a(b(x0)))
   a(c(x0))
   b(c(x0))
   a(a(L(x0)))
   R(c(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   R^1(c(x1)) -> R^1(a(b(x1)))

The TRS R consists of the following rules:

   b(c(x1)) -> a(b(x1))
   a(a(b(x1))) -> c(b(a(x1)))
   a(c(x1)) -> c(a(x1))
   a(a(L(x1))) -> c(b(a(L(x1))))

The set Q consists of the following terms:

   a(a(b(x0)))
   a(c(x0))
   b(c(x0))
   a(a(L(x0)))
   R(c(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   R(c(x0))


----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   R^1(c(x1)) -> R^1(a(b(x1)))

The TRS R consists of the following rules:

   b(c(x1)) -> a(b(x1))
   a(a(b(x1))) -> c(b(a(x1)))
   a(c(x1)) -> c(a(x1))
   a(a(L(x1))) -> c(b(a(L(x1))))

The set Q consists of the following terms:

   a(a(b(x0)))
   a(c(x0))
   b(c(x0))
   a(a(L(x0)))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   R^1(c(x1)) -> R^1(a(b(x1)))
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(R^1(x_1)) =  	[[1A]] 	 +  	[[-I, 0A, 1A]] 	* 	x_1
>>>

   <<<
 POL(c(x_1)) =  	[[0A], [1A], [1A]] 	 +  	[[-I, -I, 0A], [0A, 1A, -I], [-I, 0A, 1A]] 	* 	x_1
>>>

   <<<
 POL(a(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[-I, -I, 0A], [0A, 1A, -I], [-I, 0A, -I]] 	* 	x_1
>>>

   <<<
 POL(b(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[-I, 0A, 0A], [-I, -I, 0A], [0A, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(L(x_1)) =  	[[0A], [0A], [-I]] 	 +  	[[-I, 0A, 0A], [1A, 0A, 0A], [0A, -I, 0A]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   b(c(x1)) -> a(b(x1))
   a(a(b(x1))) -> c(b(a(x1)))
   a(c(x1)) -> c(a(x1))
   a(a(L(x1))) -> c(b(a(L(x1))))


----------------------------------------

(22)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   b(c(x1)) -> a(b(x1))
   a(a(b(x1))) -> c(b(a(x1)))
   a(c(x1)) -> c(a(x1))
   a(a(L(x1))) -> c(b(a(L(x1))))

The set Q consists of the following terms:

   a(a(b(x0)))
   a(c(x0))
   b(c(x0))
   a(a(L(x0)))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(23) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(24)
YES
