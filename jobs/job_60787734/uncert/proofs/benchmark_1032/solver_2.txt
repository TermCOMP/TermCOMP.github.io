YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/hzKez.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 15 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) AND
    (5) QDP
        (6) UsableRulesProof [EQUIVALENT, 0 ms]
        (7) QDP
        (8) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (9) YES
    (10) QDP
        (11) QDPOrderProof [EQUIVALENT, 23 ms]
        (12) QDP
        (13) QDPOrderProof [EQUIVALENT, 85 ms]
        (14) QDP
        (15) DependencyGraphProof [EQUIVALENT, 0 ms]
        (16) QDP
        (17) QDPOrderProof [EQUIVALENT, 112 ms]
        (18) QDP
        (19) QDPOrderProof [EQUIVALENT, 131 ms]
        (20) QDP
        (21) DependencyGraphProof [EQUIVALENT, 0 ms]
        (22) QDP
        (23) QDPOrderProof [EQUIVALENT, 95 ms]
        (24) QDP
        (25) DependencyGraphProof [EQUIVALENT, 0 ms]
        (26) QDP
        (27) QDPOrderProof [EQUIVALENT, 76 ms]
        (28) QDP
        (29) QDPOrderProof [EQUIVALENT, 5 ms]
        (30) QDP
        (31) DependencyGraphProof [EQUIVALENT, 0 ms]
        (32) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   2(7(x1)) -> 1(8(x1))
   2(8(1(x1))) -> 8(x1)
   2(8(x1)) -> 4(x1)
   5(9(x1)) -> 0(x1)
   4(x1) -> 5(2(3(x1)))
   5(3(x1)) -> 6(0(x1))
   2(8(x1)) -> 7(x1)
   4(7(x1)) -> 1(3(x1))
   5(2(6(x1))) -> 6(2(4(x1)))
   9(7(x1)) -> 7(5(x1))
   7(2(x1)) -> 4(x1)
   7(0(x1)) -> 9(3(x1))
   6(9(x1)) -> 9(x1)
   9(5(9(x1))) -> 5(7(x1))
   4(x1) -> 9(6(6(x1)))
   9(x1) -> 6(7(x1))
   6(2(x1)) -> 7(7(x1))
   2(4(x1)) -> 0(7(x1))
   6(6(x1)) -> 3(x1)
   0(3(x1)) -> 5(3(x1))

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   2^1(8(x1)) -> 4^1(x1)
   5^1(9(x1)) -> 0^1(x1)
   4^1(x1) -> 5^1(2(3(x1)))
   4^1(x1) -> 2^1(3(x1))
   5^1(3(x1)) -> 6^1(0(x1))
   5^1(3(x1)) -> 0^1(x1)
   2^1(8(x1)) -> 7^1(x1)
   5^1(2(6(x1))) -> 6^1(2(4(x1)))
   5^1(2(6(x1))) -> 2^1(4(x1))
   5^1(2(6(x1))) -> 4^1(x1)
   9^1(7(x1)) -> 7^1(5(x1))
   9^1(7(x1)) -> 5^1(x1)
   7^1(2(x1)) -> 4^1(x1)
   7^1(0(x1)) -> 9^1(3(x1))
   9^1(5(9(x1))) -> 5^1(7(x1))
   9^1(5(9(x1))) -> 7^1(x1)
   4^1(x1) -> 9^1(6(6(x1)))
   4^1(x1) -> 6^1(6(x1))
   4^1(x1) -> 6^1(x1)
   9^1(x1) -> 6^1(7(x1))
   9^1(x1) -> 7^1(x1)
   6^1(2(x1)) -> 7^1(7(x1))
   6^1(2(x1)) -> 7^1(x1)
   2^1(4(x1)) -> 0^1(7(x1))
   2^1(4(x1)) -> 7^1(x1)
   0^1(3(x1)) -> 5^1(3(x1))

The TRS R consists of the following rules:

   2(7(x1)) -> 1(8(x1))
   2(8(1(x1))) -> 8(x1)
   2(8(x1)) -> 4(x1)
   5(9(x1)) -> 0(x1)
   4(x1) -> 5(2(3(x1)))
   5(3(x1)) -> 6(0(x1))
   2(8(x1)) -> 7(x1)
   4(7(x1)) -> 1(3(x1))
   5(2(6(x1))) -> 6(2(4(x1)))
   9(7(x1)) -> 7(5(x1))
   7(2(x1)) -> 4(x1)
   7(0(x1)) -> 9(3(x1))
   6(9(x1)) -> 9(x1)
   9(5(9(x1))) -> 5(7(x1))
   4(x1) -> 9(6(6(x1)))
   9(x1) -> 6(7(x1))
   6(2(x1)) -> 7(7(x1))
   2(4(x1)) -> 0(7(x1))
   6(6(x1)) -> 3(x1)
   0(3(x1)) -> 5(3(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 8 less nodes.
----------------------------------------

(4)
Complex Obligation (AND)

----------------------------------------

(5)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   5^1(3(x1)) -> 0^1(x1)
   0^1(3(x1)) -> 5^1(3(x1))

The TRS R consists of the following rules:

   2(7(x1)) -> 1(8(x1))
   2(8(1(x1))) -> 8(x1)
   2(8(x1)) -> 4(x1)
   5(9(x1)) -> 0(x1)
   4(x1) -> 5(2(3(x1)))
   5(3(x1)) -> 6(0(x1))
   2(8(x1)) -> 7(x1)
   4(7(x1)) -> 1(3(x1))
   5(2(6(x1))) -> 6(2(4(x1)))
   9(7(x1)) -> 7(5(x1))
   7(2(x1)) -> 4(x1)
   7(0(x1)) -> 9(3(x1))
   6(9(x1)) -> 9(x1)
   9(5(9(x1))) -> 5(7(x1))
   4(x1) -> 9(6(6(x1)))
   9(x1) -> 6(7(x1))
   6(2(x1)) -> 7(7(x1))
   2(4(x1)) -> 0(7(x1))
   6(6(x1)) -> 3(x1)
   0(3(x1)) -> 5(3(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(6) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   5^1(3(x1)) -> 0^1(x1)
   0^1(3(x1)) -> 5^1(3(x1))

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*0^1(3(x1)) -> 5^1(3(x1))
The graph contains the following edges 1 >= 1


*5^1(3(x1)) -> 0^1(x1)
The graph contains the following edges 1 > 1


----------------------------------------

(9)
YES

----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   4^1(x1) -> 9^1(6(6(x1)))
   9^1(7(x1)) -> 7^1(5(x1))
   7^1(0(x1)) -> 9^1(3(x1))
   9^1(x1) -> 7^1(x1)
   7^1(2(x1)) -> 4^1(x1)
   4^1(x1) -> 6^1(x1)
   6^1(2(x1)) -> 7^1(7(x1))
   6^1(2(x1)) -> 7^1(x1)
   9^1(7(x1)) -> 5^1(x1)
   5^1(2(6(x1))) -> 6^1(2(4(x1)))
   5^1(2(6(x1))) -> 2^1(4(x1))
   2^1(8(x1)) -> 4^1(x1)
   2^1(8(x1)) -> 7^1(x1)
   2^1(4(x1)) -> 7^1(x1)
   5^1(2(6(x1))) -> 4^1(x1)
   9^1(5(9(x1))) -> 7^1(x1)

The TRS R consists of the following rules:

   2(7(x1)) -> 1(8(x1))
   2(8(1(x1))) -> 8(x1)
   2(8(x1)) -> 4(x1)
   5(9(x1)) -> 0(x1)
   4(x1) -> 5(2(3(x1)))
   5(3(x1)) -> 6(0(x1))
   2(8(x1)) -> 7(x1)
   4(7(x1)) -> 1(3(x1))
   5(2(6(x1))) -> 6(2(4(x1)))
   9(7(x1)) -> 7(5(x1))
   7(2(x1)) -> 4(x1)
   7(0(x1)) -> 9(3(x1))
   6(9(x1)) -> 9(x1)
   9(5(9(x1))) -> 5(7(x1))
   4(x1) -> 9(6(6(x1)))
   9(x1) -> 6(7(x1))
   6(2(x1)) -> 7(7(x1))
   2(4(x1)) -> 0(7(x1))
   6(6(x1)) -> 3(x1)
   0(3(x1)) -> 5(3(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   2^1(8(x1)) -> 4^1(x1)
   2^1(8(x1)) -> 7^1(x1)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(0(x_1)) = 0
   POL(1(x_1)) = 0
   POL(2(x_1)) = 0
   POL(2^1(x_1)) = x_1
   POL(3(x_1)) = 0
   POL(4(x_1)) = 0
   POL(4^1(x_1)) = 0
   POL(5(x_1)) = 0
   POL(5^1(x_1)) = 0
   POL(6(x_1)) = 0
   POL(6^1(x_1)) = 0
   POL(7(x_1)) = 0
   POL(7^1(x_1)) = 0
   POL(8(x_1)) = 1
   POL(9(x_1)) = 0
   POL(9^1(x_1)) = 0

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   0(3(x1)) -> 5(3(x1))
   5(3(x1)) -> 6(0(x1))
   6(9(x1)) -> 9(x1)
   9(7(x1)) -> 7(5(x1))
   7(2(x1)) -> 4(x1)
   4(x1) -> 9(6(6(x1)))
   9(5(9(x1))) -> 5(7(x1))
   5(9(x1)) -> 0(x1)
   5(2(6(x1))) -> 6(2(4(x1)))
   6(2(x1)) -> 7(7(x1))
   7(0(x1)) -> 9(3(x1))
   9(x1) -> 6(7(x1))
   6(6(x1)) -> 3(x1)
   4(x1) -> 5(2(3(x1)))
   4(7(x1)) -> 1(3(x1))


----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   4^1(x1) -> 9^1(6(6(x1)))
   9^1(7(x1)) -> 7^1(5(x1))
   7^1(0(x1)) -> 9^1(3(x1))
   9^1(x1) -> 7^1(x1)
   7^1(2(x1)) -> 4^1(x1)
   4^1(x1) -> 6^1(x1)
   6^1(2(x1)) -> 7^1(7(x1))
   6^1(2(x1)) -> 7^1(x1)
   9^1(7(x1)) -> 5^1(x1)
   5^1(2(6(x1))) -> 6^1(2(4(x1)))
   5^1(2(6(x1))) -> 2^1(4(x1))
   2^1(4(x1)) -> 7^1(x1)
   5^1(2(6(x1))) -> 4^1(x1)
   9^1(5(9(x1))) -> 7^1(x1)

The TRS R consists of the following rules:

   2(7(x1)) -> 1(8(x1))
   2(8(1(x1))) -> 8(x1)
   2(8(x1)) -> 4(x1)
   5(9(x1)) -> 0(x1)
   4(x1) -> 5(2(3(x1)))
   5(3(x1)) -> 6(0(x1))
   2(8(x1)) -> 7(x1)
   4(7(x1)) -> 1(3(x1))
   5(2(6(x1))) -> 6(2(4(x1)))
   9(7(x1)) -> 7(5(x1))
   7(2(x1)) -> 4(x1)
   7(0(x1)) -> 9(3(x1))
   6(9(x1)) -> 9(x1)
   9(5(9(x1))) -> 5(7(x1))
   4(x1) -> 9(6(6(x1)))
   9(x1) -> 6(7(x1))
   6(2(x1)) -> 7(7(x1))
   2(4(x1)) -> 0(7(x1))
   6(6(x1)) -> 3(x1)
   0(3(x1)) -> 5(3(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   9^1(7(x1)) -> 5^1(x1)
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(4^1(x_1)) =  	[[1A]] 	 +  	[[1A, 1A, 1A]] 	* 	x_1
>>>

   <<<
 POL(9^1(x_1)) =  	[[1A]] 	 +  	[[0A, 1A, -I]] 	* 	x_1
>>>

   <<<
 POL(6(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[0A, 0A, 0A], [0A, 0A, 0A], [0A, -I, 0A]] 	* 	x_1
>>>

   <<<
 POL(7(x_1)) =  	[[-I], [-I], [0A]] 	 +  	[[0A, -I, 0A], [0A, 0A, 0A], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(7^1(x_1)) =  	[[1A]] 	 +  	[[0A, 1A, -I]] 	* 	x_1
>>>

   <<<
 POL(5(x_1)) =  	[[0A], [-I], [-I]] 	 +  	[[0A, 0A, 0A], [0A, 0A, 0A], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(0(x_1)) =  	[[0A], [-I], [-I]] 	 +  	[[0A, 0A, 0A], [0A, -I, 0A], [0A, -I, 0A]] 	* 	x_1
>>>

   <<<
 POL(3(x_1)) =  	[[0A], [-I], [0A]] 	 +  	[[0A, -I, -I], [-I, -I, -I], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(2(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[0A, 0A, 0A], [0A, 1A, 0A], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(6^1(x_1)) =  	[[0A]] 	 +  	[[0A, 0A, 1A]] 	* 	x_1
>>>

   <<<
 POL(5^1(x_1)) =  	[[0A]] 	 +  	[[0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(4(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[0A, 0A, 0A], [0A, 0A, 0A], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(2^1(x_1)) =  	[[1A]] 	 +  	[[-I, 1A, -I]] 	* 	x_1
>>>

   <<<
 POL(9(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[0A, 0A, 0A], [0A, 0A, 0A], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(1(x_1)) =  	[[0A], [0A], [-I]] 	 +  	[[-I, 0A, 0A], [-I, -I, -I], [0A, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(8(x_1)) =  	[[0A], [-I], [-I]] 	 +  	[[-I, -I, -I], [-I, -I, -I], [0A, 0A, 0A]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   0(3(x1)) -> 5(3(x1))
   5(3(x1)) -> 6(0(x1))
   6(9(x1)) -> 9(x1)
   9(7(x1)) -> 7(5(x1))
   7(2(x1)) -> 4(x1)
   4(x1) -> 9(6(6(x1)))
   9(5(9(x1))) -> 5(7(x1))
   5(9(x1)) -> 0(x1)
   5(2(6(x1))) -> 6(2(4(x1)))
   6(2(x1)) -> 7(7(x1))
   7(0(x1)) -> 9(3(x1))
   9(x1) -> 6(7(x1))
   6(6(x1)) -> 3(x1)
   4(x1) -> 5(2(3(x1)))
   4(7(x1)) -> 1(3(x1))
   2(7(x1)) -> 1(8(x1))
   2(8(1(x1))) -> 8(x1)
   2(8(x1)) -> 4(x1)
   2(8(x1)) -> 7(x1)
   2(4(x1)) -> 0(7(x1))


----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   4^1(x1) -> 9^1(6(6(x1)))
   9^1(7(x1)) -> 7^1(5(x1))
   7^1(0(x1)) -> 9^1(3(x1))
   9^1(x1) -> 7^1(x1)
   7^1(2(x1)) -> 4^1(x1)
   4^1(x1) -> 6^1(x1)
   6^1(2(x1)) -> 7^1(7(x1))
   6^1(2(x1)) -> 7^1(x1)
   5^1(2(6(x1))) -> 6^1(2(4(x1)))
   5^1(2(6(x1))) -> 2^1(4(x1))
   2^1(4(x1)) -> 7^1(x1)
   5^1(2(6(x1))) -> 4^1(x1)
   9^1(5(9(x1))) -> 7^1(x1)

The TRS R consists of the following rules:

   2(7(x1)) -> 1(8(x1))
   2(8(1(x1))) -> 8(x1)
   2(8(x1)) -> 4(x1)
   5(9(x1)) -> 0(x1)
   4(x1) -> 5(2(3(x1)))
   5(3(x1)) -> 6(0(x1))
   2(8(x1)) -> 7(x1)
   4(7(x1)) -> 1(3(x1))
   5(2(6(x1))) -> 6(2(4(x1)))
   9(7(x1)) -> 7(5(x1))
   7(2(x1)) -> 4(x1)
   7(0(x1)) -> 9(3(x1))
   6(9(x1)) -> 9(x1)
   9(5(9(x1))) -> 5(7(x1))
   4(x1) -> 9(6(6(x1)))
   9(x1) -> 6(7(x1))
   6(2(x1)) -> 7(7(x1))
   2(4(x1)) -> 0(7(x1))
   6(6(x1)) -> 3(x1)
   0(3(x1)) -> 5(3(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 4 less nodes.
----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   9^1(7(x1)) -> 7^1(5(x1))
   7^1(0(x1)) -> 9^1(3(x1))
   9^1(x1) -> 7^1(x1)
   7^1(2(x1)) -> 4^1(x1)
   4^1(x1) -> 9^1(6(6(x1)))
   9^1(5(9(x1))) -> 7^1(x1)
   4^1(x1) -> 6^1(x1)
   6^1(2(x1)) -> 7^1(7(x1))
   6^1(2(x1)) -> 7^1(x1)

The TRS R consists of the following rules:

   2(7(x1)) -> 1(8(x1))
   2(8(1(x1))) -> 8(x1)
   2(8(x1)) -> 4(x1)
   5(9(x1)) -> 0(x1)
   4(x1) -> 5(2(3(x1)))
   5(3(x1)) -> 6(0(x1))
   2(8(x1)) -> 7(x1)
   4(7(x1)) -> 1(3(x1))
   5(2(6(x1))) -> 6(2(4(x1)))
   9(7(x1)) -> 7(5(x1))
   7(2(x1)) -> 4(x1)
   7(0(x1)) -> 9(3(x1))
   6(9(x1)) -> 9(x1)
   9(5(9(x1))) -> 5(7(x1))
   4(x1) -> 9(6(6(x1)))
   9(x1) -> 6(7(x1))
   6(2(x1)) -> 7(7(x1))
   2(4(x1)) -> 0(7(x1))
   6(6(x1)) -> 3(x1)
   0(3(x1)) -> 5(3(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   6^1(2(x1)) -> 7^1(7(x1))
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(9^1(x_1)) =  	[[0A]] 	 +  	[[0A, 0A, -I]] 	* 	x_1
>>>

   <<<
 POL(7(x_1)) =  	[[0A], [-I], [-I]] 	 +  	[[-I, -I, 0A], [0A, 0A, 0A], [-I, -I, 0A]] 	* 	x_1
>>>

   <<<
 POL(7^1(x_1)) =  	[[0A]] 	 +  	[[0A, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(5(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[-I, -I, 0A], [-I, -I, 0A], [-I, -I, 0A]] 	* 	x_1
>>>

   <<<
 POL(0(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[-I, -I, -I], [-I, -I, -I], [-I, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(3(x_1)) =  	[[0A], [-I], [-I]] 	 +  	[[-I, -I, -I], [-I, -I, -I], [-I, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(2(x_1)) =  	[[0A], [1A], [0A]] 	 +  	[[0A, 0A, 0A], [0A, 0A, 0A], [0A, 1A, 1A]] 	* 	x_1
>>>

   <<<
 POL(4^1(x_1)) =  	[[0A]] 	 +  	[[0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(6(x_1)) =  	[[0A], [0A], [-I]] 	 +  	[[0A, 0A, -I], [0A, -I, 0A], [-I, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(9(x_1)) =  	[[0A], [0A], [-I]] 	 +  	[[0A, 0A, 0A], [-I, -I, 0A], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(6^1(x_1)) =  	[[0A]] 	 +  	[[0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(4(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[0A, 0A, 1A], [0A, 0A, 0A], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(8(x_1)) =  	[[0A], [-I], [0A]] 	 +  	[[1A, 1A, 1A], [0A, 0A, 0A], [0A, -I, 0A]] 	* 	x_1
>>>

   <<<
 POL(1(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[-I, 0A, -I], [-I, 0A, 0A], [0A, -I, -I]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   0(3(x1)) -> 5(3(x1))
   5(3(x1)) -> 6(0(x1))
   6(9(x1)) -> 9(x1)
   9(7(x1)) -> 7(5(x1))
   7(2(x1)) -> 4(x1)
   4(x1) -> 9(6(6(x1)))
   9(5(9(x1))) -> 5(7(x1))
   5(9(x1)) -> 0(x1)
   5(2(6(x1))) -> 6(2(4(x1)))
   6(2(x1)) -> 7(7(x1))
   7(0(x1)) -> 9(3(x1))
   9(x1) -> 6(7(x1))
   6(6(x1)) -> 3(x1)
   2(8(x1)) -> 4(x1)
   2(8(x1)) -> 7(x1)
   2(4(x1)) -> 0(7(x1))
   4(x1) -> 5(2(3(x1)))
   4(7(x1)) -> 1(3(x1))
   2(7(x1)) -> 1(8(x1))
   2(8(1(x1))) -> 8(x1)


----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   9^1(7(x1)) -> 7^1(5(x1))
   7^1(0(x1)) -> 9^1(3(x1))
   9^1(x1) -> 7^1(x1)
   7^1(2(x1)) -> 4^1(x1)
   4^1(x1) -> 9^1(6(6(x1)))
   9^1(5(9(x1))) -> 7^1(x1)
   4^1(x1) -> 6^1(x1)
   6^1(2(x1)) -> 7^1(x1)

The TRS R consists of the following rules:

   2(7(x1)) -> 1(8(x1))
   2(8(1(x1))) -> 8(x1)
   2(8(x1)) -> 4(x1)
   5(9(x1)) -> 0(x1)
   4(x1) -> 5(2(3(x1)))
   5(3(x1)) -> 6(0(x1))
   2(8(x1)) -> 7(x1)
   4(7(x1)) -> 1(3(x1))
   5(2(6(x1))) -> 6(2(4(x1)))
   9(7(x1)) -> 7(5(x1))
   7(2(x1)) -> 4(x1)
   7(0(x1)) -> 9(3(x1))
   6(9(x1)) -> 9(x1)
   9(5(9(x1))) -> 5(7(x1))
   4(x1) -> 9(6(6(x1)))
   9(x1) -> 6(7(x1))
   6(2(x1)) -> 7(7(x1))
   2(4(x1)) -> 0(7(x1))
   6(6(x1)) -> 3(x1)
   0(3(x1)) -> 5(3(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   6^1(2(x1)) -> 7^1(x1)
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(9^1(x_1)) =  	[[0A]] 	 +  	[[0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(7(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[0A, -I, -I], [0A, -I, 0A], [0A, 0A, -I]] 	* 	x_1
>>>

   <<<
 POL(7^1(x_1)) =  	[[0A]] 	 +  	[[0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(5(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[0A, -I, 0A], [0A, 0A, 0A], [0A, -I, 0A]] 	* 	x_1
>>>

   <<<
 POL(0(x_1)) =  	[[0A], [0A], [-I]] 	 +  	[[0A, 0A, -I], [0A, 0A, -I], [0A, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(3(x_1)) =  	[[0A], [-I], [-I]] 	 +  	[[0A, 0A, -I], [-I, -I, -I], [-I, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(2(x_1)) =  	[[-I], [0A], [-I]] 	 +  	[[0A, 0A, 0A], [0A, 0A, 0A], [0A, 1A, 1A]] 	* 	x_1
>>>

   <<<
 POL(4^1(x_1)) =  	[[0A]] 	 +  	[[0A, 1A, 1A]] 	* 	x_1
>>>

   <<<
 POL(6(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[0A, 0A, 0A], [0A, -I, 0A], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(9(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[0A, 0A, 0A], [0A, 0A, -I], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(6^1(x_1)) =  	[[0A]] 	 +  	[[0A, 1A, 0A]] 	* 	x_1
>>>

   <<<
 POL(4(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[0A, 0A, 0A], [0A, 0A, 0A], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(8(x_1)) =  	[[0A], [-I], [-I]] 	 +  	[[0A, 0A, 0A], [0A, 0A, 0A], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(1(x_1)) =  	[[0A], [-I], [0A]] 	 +  	[[0A, -I, -I], [-I, 0A, 0A], [0A, 0A, 0A]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   0(3(x1)) -> 5(3(x1))
   5(3(x1)) -> 6(0(x1))
   6(9(x1)) -> 9(x1)
   9(7(x1)) -> 7(5(x1))
   7(2(x1)) -> 4(x1)
   4(x1) -> 9(6(6(x1)))
   9(5(9(x1))) -> 5(7(x1))
   5(9(x1)) -> 0(x1)
   5(2(6(x1))) -> 6(2(4(x1)))
   6(2(x1)) -> 7(7(x1))
   7(0(x1)) -> 9(3(x1))
   9(x1) -> 6(7(x1))
   6(6(x1)) -> 3(x1)
   2(8(x1)) -> 4(x1)
   2(8(x1)) -> 7(x1)
   2(4(x1)) -> 0(7(x1))
   4(x1) -> 5(2(3(x1)))
   4(7(x1)) -> 1(3(x1))
   2(7(x1)) -> 1(8(x1))
   2(8(1(x1))) -> 8(x1)


----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   9^1(7(x1)) -> 7^1(5(x1))
   7^1(0(x1)) -> 9^1(3(x1))
   9^1(x1) -> 7^1(x1)
   7^1(2(x1)) -> 4^1(x1)
   4^1(x1) -> 9^1(6(6(x1)))
   9^1(5(9(x1))) -> 7^1(x1)
   4^1(x1) -> 6^1(x1)

The TRS R consists of the following rules:

   2(7(x1)) -> 1(8(x1))
   2(8(1(x1))) -> 8(x1)
   2(8(x1)) -> 4(x1)
   5(9(x1)) -> 0(x1)
   4(x1) -> 5(2(3(x1)))
   5(3(x1)) -> 6(0(x1))
   2(8(x1)) -> 7(x1)
   4(7(x1)) -> 1(3(x1))
   5(2(6(x1))) -> 6(2(4(x1)))
   9(7(x1)) -> 7(5(x1))
   7(2(x1)) -> 4(x1)
   7(0(x1)) -> 9(3(x1))
   6(9(x1)) -> 9(x1)
   9(5(9(x1))) -> 5(7(x1))
   4(x1) -> 9(6(6(x1)))
   9(x1) -> 6(7(x1))
   6(2(x1)) -> 7(7(x1))
   2(4(x1)) -> 0(7(x1))
   6(6(x1)) -> 3(x1)
   0(3(x1)) -> 5(3(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(22)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   7^1(0(x1)) -> 9^1(3(x1))
   9^1(x1) -> 7^1(x1)
   7^1(2(x1)) -> 4^1(x1)
   4^1(x1) -> 9^1(6(6(x1)))
   9^1(7(x1)) -> 7^1(5(x1))
   9^1(5(9(x1))) -> 7^1(x1)

The TRS R consists of the following rules:

   2(7(x1)) -> 1(8(x1))
   2(8(1(x1))) -> 8(x1)
   2(8(x1)) -> 4(x1)
   5(9(x1)) -> 0(x1)
   4(x1) -> 5(2(3(x1)))
   5(3(x1)) -> 6(0(x1))
   2(8(x1)) -> 7(x1)
   4(7(x1)) -> 1(3(x1))
   5(2(6(x1))) -> 6(2(4(x1)))
   9(7(x1)) -> 7(5(x1))
   7(2(x1)) -> 4(x1)
   7(0(x1)) -> 9(3(x1))
   6(9(x1)) -> 9(x1)
   9(5(9(x1))) -> 5(7(x1))
   4(x1) -> 9(6(6(x1)))
   9(x1) -> 6(7(x1))
   6(2(x1)) -> 7(7(x1))
   2(4(x1)) -> 0(7(x1))
   6(6(x1)) -> 3(x1)
   0(3(x1)) -> 5(3(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(23) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   7^1(0(x1)) -> 9^1(3(x1))
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(7^1(x_1)) =  	[[0A]] 	 +  	[[0A, -I, 0A]] 	* 	x_1
>>>

   <<<
 POL(0(x_1)) =  	[[1A], [1A], [0A]] 	 +  	[[-I, -I, -I], [-I, -I, -I], [0A, 0A, -I]] 	* 	x_1
>>>

   <<<
 POL(9^1(x_1)) =  	[[0A]] 	 +  	[[0A, -I, 0A]] 	* 	x_1
>>>

   <<<
 POL(3(x_1)) =  	[[0A], [1A], [0A]] 	 +  	[[-I, -I, -I], [0A, 0A, -I], [-I, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(2(x_1)) =  	[[0A], [1A], [1A]] 	 +  	[[0A, 0A, -I], [0A, 0A, -I], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(4^1(x_1)) =  	[[1A]] 	 +  	[[0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(6(x_1)) =  	[[0A], [1A], [0A]] 	 +  	[[0A, 0A, -I], [0A, -I, -I], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(7(x_1)) =  	[[1A], [1A], [0A]] 	 +  	[[-I, -I, -I], [-I, -I, -I], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(5(x_1)) =  	[[1A], [1A], [0A]] 	 +  	[[-I, -I, -I], [-I, -I, -I], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(9(x_1)) =  	[[1A], [1A], [1A]] 	 +  	[[-I, -I, -I], [-I, -I, -I], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(4(x_1)) =  	[[1A], [1A], [1A]] 	 +  	[[-I, -I, -I], [-I, -I, -I], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(8(x_1)) =  	[[1A], [0A], [0A]] 	 +  	[[0A, 0A, 0A], [0A, 0A, 0A], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(1(x_1)) =  	[[1A], [-I], [-I]] 	 +  	[[-I, -I, -I], [-I, -I, -I], [0A, 0A, 0A]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   0(3(x1)) -> 5(3(x1))
   5(3(x1)) -> 6(0(x1))
   6(9(x1)) -> 9(x1)
   9(7(x1)) -> 7(5(x1))
   7(2(x1)) -> 4(x1)
   4(x1) -> 9(6(6(x1)))
   9(5(9(x1))) -> 5(7(x1))
   5(9(x1)) -> 0(x1)
   5(2(6(x1))) -> 6(2(4(x1)))
   6(2(x1)) -> 7(7(x1))
   7(0(x1)) -> 9(3(x1))
   9(x1) -> 6(7(x1))
   6(6(x1)) -> 3(x1)
   2(8(x1)) -> 4(x1)
   2(8(x1)) -> 7(x1)
   2(4(x1)) -> 0(7(x1))
   4(x1) -> 5(2(3(x1)))
   4(7(x1)) -> 1(3(x1))
   2(7(x1)) -> 1(8(x1))
   2(8(1(x1))) -> 8(x1)


----------------------------------------

(24)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   9^1(x1) -> 7^1(x1)
   7^1(2(x1)) -> 4^1(x1)
   4^1(x1) -> 9^1(6(6(x1)))
   9^1(7(x1)) -> 7^1(5(x1))
   9^1(5(9(x1))) -> 7^1(x1)

The TRS R consists of the following rules:

   2(7(x1)) -> 1(8(x1))
   2(8(1(x1))) -> 8(x1)
   2(8(x1)) -> 4(x1)
   5(9(x1)) -> 0(x1)
   4(x1) -> 5(2(3(x1)))
   5(3(x1)) -> 6(0(x1))
   2(8(x1)) -> 7(x1)
   4(7(x1)) -> 1(3(x1))
   5(2(6(x1))) -> 6(2(4(x1)))
   9(7(x1)) -> 7(5(x1))
   7(2(x1)) -> 4(x1)
   7(0(x1)) -> 9(3(x1))
   6(9(x1)) -> 9(x1)
   9(5(9(x1))) -> 5(7(x1))
   4(x1) -> 9(6(6(x1)))
   9(x1) -> 6(7(x1))
   6(2(x1)) -> 7(7(x1))
   2(4(x1)) -> 0(7(x1))
   6(6(x1)) -> 3(x1)
   0(3(x1)) -> 5(3(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(25) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(26)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   7^1(2(x1)) -> 4^1(x1)
   4^1(x1) -> 9^1(6(6(x1)))
   9^1(5(9(x1))) -> 7^1(x1)
   9^1(x1) -> 7^1(x1)

The TRS R consists of the following rules:

   2(7(x1)) -> 1(8(x1))
   2(8(1(x1))) -> 8(x1)
   2(8(x1)) -> 4(x1)
   5(9(x1)) -> 0(x1)
   4(x1) -> 5(2(3(x1)))
   5(3(x1)) -> 6(0(x1))
   2(8(x1)) -> 7(x1)
   4(7(x1)) -> 1(3(x1))
   5(2(6(x1))) -> 6(2(4(x1)))
   9(7(x1)) -> 7(5(x1))
   7(2(x1)) -> 4(x1)
   7(0(x1)) -> 9(3(x1))
   6(9(x1)) -> 9(x1)
   9(5(9(x1))) -> 5(7(x1))
   4(x1) -> 9(6(6(x1)))
   9(x1) -> 6(7(x1))
   6(2(x1)) -> 7(7(x1))
   2(4(x1)) -> 0(7(x1))
   6(6(x1)) -> 3(x1)
   0(3(x1)) -> 5(3(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(27) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   9^1(5(9(x1))) -> 7^1(x1)
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(7^1(x_1)) =  	[[0A]] 	 +  	[[-I, 0A, -I]] 	* 	x_1
>>>

   <<<
 POL(2(x_1)) =  	[[0A], [-I], [-I]] 	 +  	[[0A, 0A, 1A], [1A, 1A, 1A], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(4^1(x_1)) =  	[[0A]] 	 +  	[[1A, 1A, 1A]] 	* 	x_1
>>>

   <<<
 POL(9^1(x_1)) =  	[[0A]] 	 +  	[[-I, 1A, -I]] 	* 	x_1
>>>

   <<<
 POL(6(x_1)) =  	[[-I], [-I], [0A]] 	 +  	[[0A, -I, 0A], [0A, 0A, -I], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(5(x_1)) =  	[[-I], [0A], [-I]] 	 +  	[[0A, -I, -I], [0A, -I, 0A], [0A, -I, 0A]] 	* 	x_1
>>>

   <<<
 POL(9(x_1)) =  	[[-I], [0A], [0A]] 	 +  	[[0A, 0A, 0A], [0A, -I, 0A], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(0(x_1)) =  	[[-I], [0A], [0A]] 	 +  	[[0A, 0A, -I], [0A, 0A, -I], [-I, 0A, -I]] 	* 	x_1
>>>

   <<<
 POL(3(x_1)) =  	[[0A], [-I], [-I]] 	 +  	[[0A, 0A, -I], [0A, 0A, -I], [-I, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(7(x_1)) =  	[[-I], [0A], [-I]] 	 +  	[[0A, -I, 0A], [0A, -I, 0A], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(4(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[0A, 0A, 0A], [0A, 0A, 0A], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(8(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[0A, 0A, 0A], [0A, 0A, 0A], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(1(x_1)) =  	[[0A], [-I], [0A]] 	 +  	[[0A, 0A, 0A], [0A, 0A, 0A], [0A, 0A, -I]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   0(3(x1)) -> 5(3(x1))
   5(3(x1)) -> 6(0(x1))
   6(9(x1)) -> 9(x1)
   9(7(x1)) -> 7(5(x1))
   7(2(x1)) -> 4(x1)
   4(x1) -> 9(6(6(x1)))
   9(5(9(x1))) -> 5(7(x1))
   5(9(x1)) -> 0(x1)
   5(2(6(x1))) -> 6(2(4(x1)))
   6(2(x1)) -> 7(7(x1))
   7(0(x1)) -> 9(3(x1))
   9(x1) -> 6(7(x1))
   6(6(x1)) -> 3(x1)
   2(8(x1)) -> 4(x1)
   2(8(x1)) -> 7(x1)
   2(4(x1)) -> 0(7(x1))
   4(x1) -> 5(2(3(x1)))
   4(7(x1)) -> 1(3(x1))
   2(7(x1)) -> 1(8(x1))
   2(8(1(x1))) -> 8(x1)


----------------------------------------

(28)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   7^1(2(x1)) -> 4^1(x1)
   4^1(x1) -> 9^1(6(6(x1)))
   9^1(x1) -> 7^1(x1)

The TRS R consists of the following rules:

   2(7(x1)) -> 1(8(x1))
   2(8(1(x1))) -> 8(x1)
   2(8(x1)) -> 4(x1)
   5(9(x1)) -> 0(x1)
   4(x1) -> 5(2(3(x1)))
   5(3(x1)) -> 6(0(x1))
   2(8(x1)) -> 7(x1)
   4(7(x1)) -> 1(3(x1))
   5(2(6(x1))) -> 6(2(4(x1)))
   9(7(x1)) -> 7(5(x1))
   7(2(x1)) -> 4(x1)
   7(0(x1)) -> 9(3(x1))
   6(9(x1)) -> 9(x1)
   9(5(9(x1))) -> 5(7(x1))
   4(x1) -> 9(6(6(x1)))
   9(x1) -> 6(7(x1))
   6(2(x1)) -> 7(7(x1))
   2(4(x1)) -> 0(7(x1))
   6(6(x1)) -> 3(x1)
   0(3(x1)) -> 5(3(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(29) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   7^1(2(x1)) -> 4^1(x1)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(0(x_1)) = 0
   POL(1(x_1)) = x_1
   POL(2(x_1)) = 1 + x_1
   POL(3(x_1)) = 0
   POL(4(x_1)) = 0
   POL(4^1(x_1)) = 1
   POL(5(x_1)) = 0
   POL(6(x_1)) = 0
   POL(7(x_1)) = 0
   POL(7^1(x_1)) = 1 + x_1
   POL(8(x_1)) = 1
   POL(9(x_1)) = 0
   POL(9^1(x_1)) = 1 + x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   0(3(x1)) -> 5(3(x1))
   5(3(x1)) -> 6(0(x1))
   6(9(x1)) -> 9(x1)
   9(7(x1)) -> 7(5(x1))
   7(2(x1)) -> 4(x1)
   4(x1) -> 9(6(6(x1)))
   9(5(9(x1))) -> 5(7(x1))
   5(9(x1)) -> 0(x1)
   5(2(6(x1))) -> 6(2(4(x1)))
   6(2(x1)) -> 7(7(x1))
   7(0(x1)) -> 9(3(x1))
   9(x1) -> 6(7(x1))
   6(6(x1)) -> 3(x1)
   4(x1) -> 5(2(3(x1)))
   4(7(x1)) -> 1(3(x1))


----------------------------------------

(30)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   4^1(x1) -> 9^1(6(6(x1)))
   9^1(x1) -> 7^1(x1)

The TRS R consists of the following rules:

   2(7(x1)) -> 1(8(x1))
   2(8(1(x1))) -> 8(x1)
   2(8(x1)) -> 4(x1)
   5(9(x1)) -> 0(x1)
   4(x1) -> 5(2(3(x1)))
   5(3(x1)) -> 6(0(x1))
   2(8(x1)) -> 7(x1)
   4(7(x1)) -> 1(3(x1))
   5(2(6(x1))) -> 6(2(4(x1)))
   9(7(x1)) -> 7(5(x1))
   7(2(x1)) -> 4(x1)
   7(0(x1)) -> 9(3(x1))
   6(9(x1)) -> 9(x1)
   9(5(9(x1))) -> 5(7(x1))
   4(x1) -> 9(6(6(x1)))
   9(x1) -> 6(7(x1))
   6(2(x1)) -> 7(7(x1))
   2(4(x1)) -> 0(7(x1))
   6(6(x1)) -> 3(x1)
   0(3(x1)) -> 5(3(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(31) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 2 less nodes.
----------------------------------------

(32)
TRUE
