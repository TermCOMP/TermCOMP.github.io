YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/V6uH5.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 4 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) AND
    (5) QDP
        (6) UsableRulesProof [EQUIVALENT, 0 ms]
        (7) QDP
        (8) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (9) YES
    (10) QDP
        (11) MNOCProof [EQUIVALENT, 0 ms]
        (12) QDP
        (13) UsableRulesProof [EQUIVALENT, 0 ms]
        (14) QDP
        (15) QDPOrderProof [EQUIVALENT, 113 ms]
        (16) QDP
        (17) DependencyGraphProof [EQUIVALENT, 0 ms]
        (18) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   foo(0(x1)) -> 0(s(p(p(p(s(s(s(p(s(x1))))))))))
   foo(s(x1)) -> p(s(p(p(p(s(s(p(s(s(p(s(foo(p(p(s(s(p(s(bar(p(p(s(s(p(s(x1))))))))))))))))))))))))))
   bar(0(x1)) -> 0(p(s(s(s(x1)))))
   bar(s(x1)) -> p(s(p(p(s(s(foo(s(p(p(s(s(x1))))))))))))
   p(p(s(x1))) -> p(x1)
   p(s(x1)) -> x1
   p(0(x1)) -> 0(s(s(s(s(x1)))))

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   FOO(0(x1)) -> P(p(p(s(s(s(p(s(x1))))))))
   FOO(0(x1)) -> P(p(s(s(s(p(s(x1)))))))
   FOO(0(x1)) -> P(s(s(s(p(s(x1))))))
   FOO(0(x1)) -> P(s(x1))
   FOO(s(x1)) -> P(s(p(p(p(s(s(p(s(s(p(s(foo(p(p(s(s(p(s(bar(p(p(s(s(p(s(x1))))))))))))))))))))))))))
   FOO(s(x1)) -> P(p(p(s(s(p(s(s(p(s(foo(p(p(s(s(p(s(bar(p(p(s(s(p(s(x1))))))))))))))))))))))))
   FOO(s(x1)) -> P(p(s(s(p(s(s(p(s(foo(p(p(s(s(p(s(bar(p(p(s(s(p(s(x1)))))))))))))))))))))))
   FOO(s(x1)) -> P(s(s(p(s(s(p(s(foo(p(p(s(s(p(s(bar(p(p(s(s(p(s(x1))))))))))))))))))))))
   FOO(s(x1)) -> P(s(s(p(s(foo(p(p(s(s(p(s(bar(p(p(s(s(p(s(x1)))))))))))))))))))
   FOO(s(x1)) -> P(s(foo(p(p(s(s(p(s(bar(p(p(s(s(p(s(x1))))))))))))))))
   FOO(s(x1)) -> FOO(p(p(s(s(p(s(bar(p(p(s(s(p(s(x1))))))))))))))
   FOO(s(x1)) -> P(p(s(s(p(s(bar(p(p(s(s(p(s(x1)))))))))))))
   FOO(s(x1)) -> P(s(s(p(s(bar(p(p(s(s(p(s(x1))))))))))))
   FOO(s(x1)) -> P(s(bar(p(p(s(s(p(s(x1)))))))))
   FOO(s(x1)) -> BAR(p(p(s(s(p(s(x1)))))))
   FOO(s(x1)) -> P(p(s(s(p(s(x1))))))
   FOO(s(x1)) -> P(s(s(p(s(x1)))))
   FOO(s(x1)) -> P(s(x1))
   BAR(0(x1)) -> P(s(s(s(x1))))
   BAR(s(x1)) -> P(s(p(p(s(s(foo(s(p(p(s(s(x1))))))))))))
   BAR(s(x1)) -> P(p(s(s(foo(s(p(p(s(s(x1))))))))))
   BAR(s(x1)) -> P(s(s(foo(s(p(p(s(s(x1)))))))))
   BAR(s(x1)) -> FOO(s(p(p(s(s(x1))))))
   BAR(s(x1)) -> P(p(s(s(x1))))
   BAR(s(x1)) -> P(s(s(x1)))
   P(p(s(x1))) -> P(x1)

The TRS R consists of the following rules:

   foo(0(x1)) -> 0(s(p(p(p(s(s(s(p(s(x1))))))))))
   foo(s(x1)) -> p(s(p(p(p(s(s(p(s(s(p(s(foo(p(p(s(s(p(s(bar(p(p(s(s(p(s(x1))))))))))))))))))))))))))
   bar(0(x1)) -> 0(p(s(s(s(x1)))))
   bar(s(x1)) -> p(s(p(p(s(s(foo(s(p(p(s(s(x1))))))))))))
   p(p(s(x1))) -> p(x1)
   p(s(x1)) -> x1
   p(0(x1)) -> 0(s(s(s(s(x1)))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 22 less nodes.
----------------------------------------

(4)
Complex Obligation (AND)

----------------------------------------

(5)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   P(p(s(x1))) -> P(x1)

The TRS R consists of the following rules:

   foo(0(x1)) -> 0(s(p(p(p(s(s(s(p(s(x1))))))))))
   foo(s(x1)) -> p(s(p(p(p(s(s(p(s(s(p(s(foo(p(p(s(s(p(s(bar(p(p(s(s(p(s(x1))))))))))))))))))))))))))
   bar(0(x1)) -> 0(p(s(s(s(x1)))))
   bar(s(x1)) -> p(s(p(p(s(s(foo(s(p(p(s(s(x1))))))))))))
   p(p(s(x1))) -> p(x1)
   p(s(x1)) -> x1
   p(0(x1)) -> 0(s(s(s(s(x1)))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(6) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   P(p(s(x1))) -> P(x1)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*P(p(s(x1))) -> P(x1)
The graph contains the following edges 1 > 1


----------------------------------------

(9)
YES

----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   FOO(s(x1)) -> BAR(p(p(s(s(p(s(x1)))))))
   BAR(s(x1)) -> FOO(s(p(p(s(s(x1))))))
   FOO(s(x1)) -> FOO(p(p(s(s(p(s(bar(p(p(s(s(p(s(x1))))))))))))))

The TRS R consists of the following rules:

   foo(0(x1)) -> 0(s(p(p(p(s(s(s(p(s(x1))))))))))
   foo(s(x1)) -> p(s(p(p(p(s(s(p(s(s(p(s(foo(p(p(s(s(p(s(bar(p(p(s(s(p(s(x1))))))))))))))))))))))))))
   bar(0(x1)) -> 0(p(s(s(s(x1)))))
   bar(s(x1)) -> p(s(p(p(s(s(foo(s(p(p(s(s(x1))))))))))))
   p(p(s(x1))) -> p(x1)
   p(s(x1)) -> x1
   p(0(x1)) -> 0(s(s(s(s(x1)))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) MNOCProof (EQUIVALENT)
We use the modular non-overlap check [LPAR04] to enlarge Q to all left-hand sides of R.
----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   FOO(s(x1)) -> BAR(p(p(s(s(p(s(x1)))))))
   BAR(s(x1)) -> FOO(s(p(p(s(s(x1))))))
   FOO(s(x1)) -> FOO(p(p(s(s(p(s(bar(p(p(s(s(p(s(x1))))))))))))))

The TRS R consists of the following rules:

   foo(0(x1)) -> 0(s(p(p(p(s(s(s(p(s(x1))))))))))
   foo(s(x1)) -> p(s(p(p(p(s(s(p(s(s(p(s(foo(p(p(s(s(p(s(bar(p(p(s(s(p(s(x1))))))))))))))))))))))))))
   bar(0(x1)) -> 0(p(s(s(s(x1)))))
   bar(s(x1)) -> p(s(p(p(s(s(foo(s(p(p(s(s(x1))))))))))))
   p(p(s(x1))) -> p(x1)
   p(s(x1)) -> x1
   p(0(x1)) -> 0(s(s(s(s(x1)))))

The set Q consists of the following terms:

   foo(0(x0))
   foo(s(x0))
   bar(0(x0))
   bar(s(x0))
   p(s(x0))
   p(0(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   FOO(s(x1)) -> BAR(p(p(s(s(p(s(x1)))))))
   BAR(s(x1)) -> FOO(s(p(p(s(s(x1))))))
   FOO(s(x1)) -> FOO(p(p(s(s(p(s(bar(p(p(s(s(p(s(x1))))))))))))))

The TRS R consists of the following rules:

   p(s(x1)) -> x1
   p(0(x1)) -> 0(s(s(s(s(x1)))))
   bar(0(x1)) -> 0(p(s(s(s(x1)))))
   bar(s(x1)) -> p(s(p(p(s(s(foo(s(p(p(s(s(x1))))))))))))
   foo(s(x1)) -> p(s(p(p(p(s(s(p(s(s(p(s(foo(p(p(s(s(p(s(bar(p(p(s(s(p(s(x1))))))))))))))))))))))))))
   foo(0(x1)) -> 0(s(p(p(p(s(s(s(p(s(x1))))))))))

The set Q consists of the following terms:

   foo(0(x0))
   foo(s(x0))
   bar(0(x0))
   bar(s(x0))
   p(s(x0))
   p(0(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   FOO(s(x1)) -> BAR(p(p(s(s(p(s(x1)))))))
   FOO(s(x1)) -> FOO(p(p(s(s(p(s(bar(p(p(s(s(p(s(x1))))))))))))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( BAR_1(x_1) ) = x_1 + 2
POL( FOO_1(x_1) ) = x_1 + 2
POL( p_1(x_1) ) = max{0, x_1 - 2}
POL( s_1(x_1) ) = x_1 + 2
POL( 0_1(x_1) ) = max{0, -2}
POL( bar_1(x_1) ) = x_1 + 1
POL( foo_1(x_1) ) = 2

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   p(s(x1)) -> x1
   p(0(x1)) -> 0(s(s(s(s(x1)))))
   bar(0(x1)) -> 0(p(s(s(s(x1)))))
   bar(s(x1)) -> p(s(p(p(s(s(foo(s(p(p(s(s(x1))))))))))))
   foo(s(x1)) -> p(s(p(p(p(s(s(p(s(s(p(s(foo(p(p(s(s(p(s(bar(p(p(s(s(p(s(x1))))))))))))))))))))))))))
   foo(0(x1)) -> 0(s(p(p(p(s(s(s(p(s(x1))))))))))


----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   BAR(s(x1)) -> FOO(s(p(p(s(s(x1))))))

The TRS R consists of the following rules:

   p(s(x1)) -> x1
   p(0(x1)) -> 0(s(s(s(s(x1)))))
   bar(0(x1)) -> 0(p(s(s(s(x1)))))
   bar(s(x1)) -> p(s(p(p(s(s(foo(s(p(p(s(s(x1))))))))))))
   foo(s(x1)) -> p(s(p(p(p(s(s(p(s(s(p(s(foo(p(p(s(s(p(s(bar(p(p(s(s(p(s(x1))))))))))))))))))))))))))
   foo(0(x1)) -> 0(s(p(p(p(s(s(s(p(s(x1))))))))))

The set Q consists of the following terms:

   foo(0(x0))
   foo(s(x0))
   bar(0(x0))
   bar(s(x0))
   p(s(x0))
   p(0(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 1 less node.
----------------------------------------

(18)
TRUE
