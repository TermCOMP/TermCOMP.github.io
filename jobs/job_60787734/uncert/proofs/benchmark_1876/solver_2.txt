YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/gVUwH.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRS Reverse [EQUIVALENT, 0 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 9 ms]
(4) QTRS
(5) DependencyPairsProof [EQUIVALENT, 0 ms]
(6) QDP
(7) DependencyGraphProof [EQUIVALENT, 0 ms]
(8) AND
    (9) QDP
        (10) UsableRulesProof [EQUIVALENT, 0 ms]
        (11) QDP
        (12) QDPOrderProof [EQUIVALENT, 2 ms]
        (13) QDP
        (14) DependencyGraphProof [EQUIVALENT, 0 ms]
        (15) TRUE
    (16) QDP
        (17) UsableRulesProof [EQUIVALENT, 0 ms]
        (18) QDP
        (19) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (20) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   1(1(x1)) -> 4(3(x1))
   1(2(x1)) -> 2(1(x1))
   2(2(x1)) -> 1(1(1(x1)))
   3(3(x1)) -> 5(6(x1))
   3(4(x1)) -> 1(1(x1))
   4(4(x1)) -> 3(x1)
   5(5(x1)) -> 6(2(x1))
   5(6(x1)) -> 1(2(x1))
   6(6(x1)) -> 2(1(x1))

Q is empty.

----------------------------------------

(1) QTRS Reverse (EQUIVALENT)
We applied the QTRS Reverse Processor [REVERSE].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   1(1(x1)) -> 3(4(x1))
   2(1(x1)) -> 1(2(x1))
   2(2(x1)) -> 1(1(1(x1)))
   3(3(x1)) -> 6(5(x1))
   4(3(x1)) -> 1(1(x1))
   4(4(x1)) -> 3(x1)
   5(5(x1)) -> 2(6(x1))
   6(5(x1)) -> 2(1(x1))
   6(6(x1)) -> 1(2(x1))

Q is empty.

----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(1(x_1)) = 85 + x_1
   POL(2(x_1)) = 128 + x_1
   POL(3(x_1)) = 113 + x_1
   POL(4(x_1)) = 57 + x_1
   POL(5(x_1)) = 118 + x_1
   POL(6(x_1)) = 107 + x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   2(2(x1)) -> 1(1(1(x1)))
   3(3(x1)) -> 6(5(x1))
   4(4(x1)) -> 3(x1)
   5(5(x1)) -> 2(6(x1))
   6(5(x1)) -> 2(1(x1))
   6(6(x1)) -> 1(2(x1))




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   1(1(x1)) -> 3(4(x1))
   2(1(x1)) -> 1(2(x1))
   4(3(x1)) -> 1(1(x1))

Q is empty.

----------------------------------------

(5) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   1^1(1(x1)) -> 4^1(x1)
   2^1(1(x1)) -> 1^1(2(x1))
   2^1(1(x1)) -> 2^1(x1)
   4^1(3(x1)) -> 1^1(1(x1))
   4^1(3(x1)) -> 1^1(x1)

The TRS R consists of the following rules:

   1(1(x1)) -> 3(4(x1))
   2(1(x1)) -> 1(2(x1))
   4(3(x1)) -> 1(1(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 1 less node.
----------------------------------------

(8)
Complex Obligation (AND)

----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   4^1(3(x1)) -> 1^1(1(x1))
   1^1(1(x1)) -> 4^1(x1)
   4^1(3(x1)) -> 1^1(x1)

The TRS R consists of the following rules:

   1(1(x1)) -> 3(4(x1))
   2(1(x1)) -> 1(2(x1))
   4(3(x1)) -> 1(1(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   4^1(3(x1)) -> 1^1(1(x1))
   1^1(1(x1)) -> 4^1(x1)
   4^1(3(x1)) -> 1^1(x1)

The TRS R consists of the following rules:

   1(1(x1)) -> 3(4(x1))
   4(3(x1)) -> 1(1(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   1^1(1(x1)) -> 4^1(x1)
   4^1(3(x1)) -> 1^1(x1)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(1(x_1)) = 1 + x_1
   POL(1^1(x_1)) = x_1
   POL(3(x_1)) = 1 + x_1
   POL(4(x_1)) = 1 + x_1
   POL(4^1(x_1)) = x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   1(1(x1)) -> 3(4(x1))
   4(3(x1)) -> 1(1(x1))


----------------------------------------

(13)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   4^1(3(x1)) -> 1^1(1(x1))

The TRS R consists of the following rules:

   1(1(x1)) -> 3(4(x1))
   4(3(x1)) -> 1(1(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(14) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 1 less node.
----------------------------------------

(15)
TRUE

----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   2^1(1(x1)) -> 2^1(x1)

The TRS R consists of the following rules:

   1(1(x1)) -> 3(4(x1))
   2(1(x1)) -> 1(2(x1))
   4(3(x1)) -> 1(1(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   2^1(1(x1)) -> 2^1(x1)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*2^1(1(x1)) -> 2^1(x1)
The graph contains the following edges 1 > 1


----------------------------------------

(20)
YES
