YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/wtMs9.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRS Reverse [EQUIVALENT, 0 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 13 ms]
(4) QTRS
(5) QTRSRRRProof [EQUIVALENT, 0 ms]
(6) QTRS
(7) DependencyPairsProof [EQUIVALENT, 1 ms]
(8) QDP
(9) DependencyGraphProof [EQUIVALENT, 0 ms]
(10) AND
    (11) QDP
        (12) UsableRulesProof [EQUIVALENT, 0 ms]
        (13) QDP
        (14) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (15) YES
    (16) QDP
        (17) QDPOrderProof [EQUIVALENT, 9 ms]
        (18) QDP
        (19) QDPOrderProof [EQUIVALENT, 85 ms]
        (20) QDP
        (21) PisEmptyProof [EQUIVALENT, 0 ms]
        (22) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   C(x1) -> c(x1)
   c(c(x1)) -> x1
   b(b(x1)) -> B(x1)
   B(B(x1)) -> b(x1)
   c(B(c(b(c(x1))))) -> B(c(b(c(B(c(b(x1)))))))
   b(B(x1)) -> x1
   B(b(x1)) -> x1
   c(C(x1)) -> x1
   C(c(x1)) -> x1

Q is empty.

----------------------------------------

(1) QTRS Reverse (EQUIVALENT)
We applied the QTRS Reverse Processor [REVERSE].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   C(x1) -> c(x1)
   c(c(x1)) -> x1
   b(b(x1)) -> B(x1)
   B(B(x1)) -> b(x1)
   c(b(c(B(c(x1))))) -> b(c(B(c(b(c(B(x1)))))))
   B(b(x1)) -> x1
   b(B(x1)) -> x1
   C(c(x1)) -> x1
   c(C(x1)) -> x1

Q is empty.

----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(B(x_1)) = x_1
   POL(C(x_1)) = 1 + x_1
   POL(b(x_1)) = x_1
   POL(c(x_1)) = x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   C(x1) -> c(x1)
   C(c(x1)) -> x1
   c(C(x1)) -> x1




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   c(c(x1)) -> x1
   b(b(x1)) -> B(x1)
   B(B(x1)) -> b(x1)
   c(b(c(B(c(x1))))) -> b(c(B(c(b(c(B(x1)))))))
   B(b(x1)) -> x1
   b(B(x1)) -> x1

Q is empty.

----------------------------------------

(5) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(B(x_1)) = x_1
   POL(b(x_1)) = x_1
   POL(c(x_1)) = 1 + x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   c(c(x1)) -> x1




----------------------------------------

(6)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   b(b(x1)) -> B(x1)
   B(B(x1)) -> b(x1)
   c(b(c(B(c(x1))))) -> b(c(B(c(b(c(B(x1)))))))
   B(b(x1)) -> x1
   b(B(x1)) -> x1

Q is empty.

----------------------------------------

(7) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B^1(b(x1)) -> B^2(x1)
   B^2(B(x1)) -> B^1(x1)
   C(b(c(B(c(x1))))) -> B^1(c(B(c(b(c(B(x1)))))))
   C(b(c(B(c(x1))))) -> C(B(c(b(c(B(x1))))))
   C(b(c(B(c(x1))))) -> B^2(c(b(c(B(x1)))))
   C(b(c(B(c(x1))))) -> C(b(c(B(x1))))
   C(b(c(B(c(x1))))) -> B^1(c(B(x1)))
   C(b(c(B(c(x1))))) -> C(B(x1))
   C(b(c(B(c(x1))))) -> B^2(x1)

The TRS R consists of the following rules:

   b(b(x1)) -> B(x1)
   B(B(x1)) -> b(x1)
   c(b(c(B(c(x1))))) -> b(c(B(c(b(c(B(x1)))))))
   B(b(x1)) -> x1
   b(B(x1)) -> x1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 4 less nodes.
----------------------------------------

(10)
Complex Obligation (AND)

----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B^2(B(x1)) -> B^1(x1)
   B^1(b(x1)) -> B^2(x1)

The TRS R consists of the following rules:

   b(b(x1)) -> B(x1)
   B(B(x1)) -> b(x1)
   c(b(c(B(c(x1))))) -> b(c(B(c(b(c(B(x1)))))))
   B(b(x1)) -> x1
   b(B(x1)) -> x1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(13)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B^2(B(x1)) -> B^1(x1)
   B^1(b(x1)) -> B^2(x1)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(14) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*B^1(b(x1)) -> B^2(x1)
The graph contains the following edges 1 > 1


*B^2(B(x1)) -> B^1(x1)
The graph contains the following edges 1 > 1


----------------------------------------

(15)
YES

----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(b(c(B(c(x1))))) -> C(b(c(B(x1))))
   C(b(c(B(c(x1))))) -> C(B(c(b(c(B(x1))))))
   C(b(c(B(c(x1))))) -> C(B(x1))

The TRS R consists of the following rules:

   b(b(x1)) -> B(x1)
   B(B(x1)) -> b(x1)
   c(b(c(B(c(x1))))) -> b(c(B(c(b(c(B(x1)))))))
   B(b(x1)) -> x1
   b(B(x1)) -> x1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   C(b(c(B(c(x1))))) -> C(b(c(B(x1))))
   C(b(c(B(c(x1))))) -> C(B(x1))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(B(x_1)) = x_1
   POL(C(x_1)) = x_1
   POL(b(x_1)) = x_1
   POL(c(x_1)) = 1 + x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   B(B(x1)) -> b(x1)
   b(b(x1)) -> B(x1)
   B(b(x1)) -> x1
   c(b(c(B(c(x1))))) -> b(c(B(c(b(c(B(x1)))))))
   b(B(x1)) -> x1


----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(b(c(B(c(x1))))) -> C(B(c(b(c(B(x1))))))

The TRS R consists of the following rules:

   b(b(x1)) -> B(x1)
   B(B(x1)) -> b(x1)
   c(b(c(B(c(x1))))) -> b(c(B(c(b(c(B(x1)))))))
   B(b(x1)) -> x1
   b(B(x1)) -> x1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   C(b(c(B(c(x1))))) -> C(B(c(b(c(B(x1))))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(C(x_1)) =  	[[0A]] 	 +  	[[0A, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(b(x_1)) =  	[[1A], [0A], [0A]] 	 +  	[[-I, 0A, -I], [0A, 0A, -I], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(c(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[0A, -I, -I], [-I, -I, -I], [0A, 0A, -I]] 	* 	x_1
>>>

   <<<
 POL(B(x_1)) =  	[[0A], [1A], [0A]] 	 +  	[[-I, 0A, -I], [0A, 0A, -I], [0A, 0A, 0A]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   B(B(x1)) -> b(x1)
   b(b(x1)) -> B(x1)
   B(b(x1)) -> x1
   c(b(c(B(c(x1))))) -> b(c(B(c(b(c(B(x1)))))))
   b(B(x1)) -> x1


----------------------------------------

(20)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   b(b(x1)) -> B(x1)
   B(B(x1)) -> b(x1)
   c(b(c(B(c(x1))))) -> b(c(B(c(b(c(B(x1)))))))
   B(b(x1)) -> x1
   b(B(x1)) -> x1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(22)
YES
