YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/jRCuj.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRS Reverse [EQUIVALENT, 0 ms]
(2) QTRS
(3) RFCMatchBoundsTRSProof [EQUIVALENT, 0 ms]
(4) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   0(x1) -> 1(x1)
   4(5(4(5(x1)))) -> 4(4(5(5(x1))))
   5(5(5(5(5(5(4(4(4(4(4(4(x1)))))))))))) -> 2(x1)

Q is empty.

----------------------------------------

(1) QTRS Reverse (EQUIVALENT)
We applied the QTRS Reverse Processor [REVERSE].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   0(x1) -> 1(x1)
   5(4(5(4(x1)))) -> 5(5(4(4(x1))))
   4(4(4(4(4(4(5(5(5(5(5(5(x1)))))))))))) -> 2(x1)

Q is empty.

----------------------------------------

(3) RFCMatchBoundsTRSProof (EQUIVALENT)
Termination of the TRS R could be shown with a Match Bound [MATCHBOUNDS1,MATCHBOUNDS2] of 1. This implies Q-termination of R.
The following rules were used to construct the certificate:

   0(x1) -> 1(x1)
   5(4(5(4(x1)))) -> 5(5(4(4(x1))))
   4(4(4(4(4(4(5(5(5(5(5(5(x1)))))))))))) -> 2(x1)

The certificate found is represented by the following graph.
The certificate consists of the following enumerated nodes:
3, 4, 5, 6, 7

Node 3 is start node and node 4 is final node.

Those nodes are connected through the following edges:

* 3 to 4 labelled 1_1(0), 2_1(0)* 3 to 5 labelled 5_1(0)* 4 to 4 labelled #_1(0)* 5 to 6 labelled 5_1(0)* 6 to 7 labelled 4_1(0)* 6 to 4 labelled 2_1(1)* 7 to 4 labelled 4_1(0), 2_1(1)


----------------------------------------

(4)
YES
