YES

Problem 1: 

(VAR vu95NonEmpty x1)
(RULES
a(b(b(x1))) -> c(x1)
a(x1) -> b(x1)
c(c(x1)) -> a(b(c(a(x1))))
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 A(b(b(x1))) -> C(x1)
 C(c(x1)) -> A(b(c(a(x1))))
 C(c(x1)) -> A(x1)
 C(c(x1)) -> C(a(x1))
-> Rules:
 a(b(b(x1))) -> c(x1)
 a(x1) -> b(x1)
 c(c(x1)) -> a(b(c(a(x1))))

Problem 1: 

SCC Processor:
-> Pairs:
 A(b(b(x1))) -> C(x1)
 C(c(x1)) -> A(b(c(a(x1))))
 C(c(x1)) -> A(x1)
 C(c(x1)) -> C(a(x1))
-> Rules:
 a(b(b(x1))) -> c(x1)
 a(x1) -> b(x1)
 c(c(x1)) -> a(b(c(a(x1))))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 A(b(b(x1))) -> C(x1)
 C(c(x1)) -> A(b(c(a(x1))))
 C(c(x1)) -> A(x1)
 C(c(x1)) -> C(a(x1))
->->-> Rules:
 a(b(b(x1))) -> c(x1)
 a(x1) -> b(x1)
 c(c(x1)) -> a(b(c(a(x1))))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 A(b(b(x1))) -> C(x1)
 C(c(x1)) -> A(b(c(a(x1))))
 C(c(x1)) -> A(x1)
 C(c(x1)) -> C(a(x1))
-> Rules:
 a(b(b(x1))) -> c(x1)
 a(x1) -> b(x1)
 c(c(x1)) -> a(b(c(a(x1))))
-> Usable rules:
 a(b(b(x1))) -> c(x1)
 a(x1) -> b(x1)
 c(c(x1)) -> a(b(c(a(x1))))
->Interpretation type:
 Linear
->Coefficients:
 All rationals
->Dimension:
 1
->Bound:
 4
->Interpretation:
 
[a](X) = X + 2/3
[c](X) = X + 2
[b](X) = X + 2/3
[fSNonEmpty] = 0
[A](X) = 1/4.X + 1
[C](X) = 1/4.X + 4/3

Problem 1: 

SCC Processor:
-> Pairs:
 A(b(b(x1))) -> C(x1)
 C(c(x1)) -> A(b(c(a(x1))))
 C(c(x1)) -> C(a(x1))
-> Rules:
 a(b(b(x1))) -> c(x1)
 a(x1) -> b(x1)
 c(c(x1)) -> a(b(c(a(x1))))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 A(b(b(x1))) -> C(x1)
 C(c(x1)) -> A(b(c(a(x1))))
 C(c(x1)) -> C(a(x1))
->->-> Rules:
 a(b(b(x1))) -> c(x1)
 a(x1) -> b(x1)
 c(c(x1)) -> a(b(c(a(x1))))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 A(b(b(x1))) -> C(x1)
 C(c(x1)) -> A(b(c(a(x1))))
 C(c(x1)) -> C(a(x1))
-> Rules:
 a(b(b(x1))) -> c(x1)
 a(x1) -> b(x1)
 c(c(x1)) -> a(b(c(a(x1))))
-> Usable rules:
 a(b(b(x1))) -> c(x1)
 a(x1) -> b(x1)
 c(c(x1)) -> a(b(c(a(x1))))
->Interpretation type:
 Linear
->Coefficients:
 All rationals
->Dimension:
 1
->Bound:
 4
->Interpretation:
 
[a](X) = X + 2/3
[c](X) = X + 2
[b](X) = X + 2/3
[fSNonEmpty] = 0
[A](X) = 3/4.X + 1
[C](X) = 3/4.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 A(b(b(x1))) -> C(x1)
 C(c(x1)) -> A(b(c(a(x1))))
-> Rules:
 a(b(b(x1))) -> c(x1)
 a(x1) -> b(x1)
 c(c(x1)) -> a(b(c(a(x1))))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 A(b(b(x1))) -> C(x1)
 C(c(x1)) -> A(b(c(a(x1))))
->->-> Rules:
 a(b(b(x1))) -> c(x1)
 a(x1) -> b(x1)
 c(c(x1)) -> a(b(c(a(x1))))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 A(b(b(x1))) -> C(x1)
 C(c(x1)) -> A(b(c(a(x1))))
-> Rules:
 a(b(b(x1))) -> c(x1)
 a(x1) -> b(x1)
 c(c(x1)) -> a(b(c(a(x1))))
-> Usable rules:
 a(b(b(x1))) -> c(x1)
 a(x1) -> b(x1)
 c(c(x1)) -> a(b(c(a(x1))))
->Mace4 Output:
 ============================== Mace4 =================================
Mace4 (64) version 2009-11A, November 2009.
Process 351 was started by ff862203 on r23m0027.hpc.itc.rwth-aachen.de,
Wed Sep  3 13:24:02 2025
The command was "./mace4 -c -f /tmp/mace421-67.in".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file /tmp/mace421-67.in

assign(max_seconds,20).

formulas(assumptions).
gtrsim_s0(x,y) & sqsupset_s0(y,z) -> sqsupset_s0(x,z) # label(compatibility).
succeq_s0(x,y) & sqsupset_s0(y,z) -> sqsupset_s0(x,z) # label(compatibility).
gtrsim_s0(x,y) & succeq_s0(y,z) -> gtrsim_s0(x,z) # label(compatibility).
arrow_s0(x1,y) -> arrow_s0(f2(x1),f2(y)) # label(congruence).
arrow_s0(x1,y) -> arrow_s0(f3(x1),f3(y)) # label(congruence).
arrow_s0(x1,y) -> arrow_s0(f4(x1),f4(y)) # label(congruence).
arrow_s0(x1,y) -> arrow_s0(f7(x1),f7(y)) # label(congruence).
arrow_s0(x1,y) -> arrow_s0(f8(x1),f8(y)) # label(congruence).
arrow_s0(f2(f4(f4(x1))),f3(x1)) # label(replacement).
arrow_s0(f2(x1),f4(x1)) # label(replacement).
arrow_s0(f3(f3(x1)),f2(f4(f3(f2(x1))))) # label(replacement).
arrow_s0(x,y) -> gtrsim_s0(x,y) # label(inclusion).
sqsupset_s0(f8(f3(x1)),f7(f4(f3(f2(x1))))) # label(replacement).
succeq_s0(f7(f4(f4(x1))),f8(x1)) # label(replacement).
sqsupset_s0(x,y) -> sqsupsetStar_s0(x,y) # label(inclusion).
sqsupset_s0(x,y) & sqsupsetStar_s0(y,z) -> sqsupsetStar_s0(x,z) # label(compatibility).
end_of_list.

formulas(goals).
(exists x sqsupsetStar_s0(x,x)) # label(wellfoundedness).
end_of_list.

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 gtrsim_s0(x,y) & sqsupset_s0(y,z) -> sqsupset_s0(x,z) # label(compatibility) # label(non_clause).  [assumption].
2 succeq_s0(x,y) & sqsupset_s0(y,z) -> sqsupset_s0(x,z) # label(compatibility) # label(non_clause).  [assumption].
3 gtrsim_s0(x,y) & succeq_s0(y,z) -> gtrsim_s0(x,z) # label(compatibility) # label(non_clause).  [assumption].
4 arrow_s0(x1,y) -> arrow_s0(f2(x1),f2(y)) # label(congruence) # label(non_clause).  [assumption].
5 arrow_s0(x1,y) -> arrow_s0(f3(x1),f3(y)) # label(congruence) # label(non_clause).  [assumption].
6 arrow_s0(x1,y) -> arrow_s0(f4(x1),f4(y)) # label(congruence) # label(non_clause).  [assumption].
7 arrow_s0(x1,y) -> arrow_s0(f7(x1),f7(y)) # label(congruence) # label(non_clause).  [assumption].
8 arrow_s0(x1,y) -> arrow_s0(f8(x1),f8(y)) # label(congruence) # label(non_clause).  [assumption].
9 arrow_s0(x,y) -> gtrsim_s0(x,y) # label(inclusion) # label(non_clause).  [assumption].
10 sqsupset_s0(x,y) -> sqsupsetStar_s0(x,y) # label(inclusion) # label(non_clause).  [assumption].
11 sqsupset_s0(x,y) & sqsupsetStar_s0(y,z) -> sqsupsetStar_s0(x,z) # label(compatibility) # label(non_clause).  [assumption].
12 (exists x sqsupsetStar_s0(x,x)) # label(wellfoundedness) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
-gtrsim_s0(x,y) | -sqsupset_s0(y,z) | sqsupset_s0(x,z) # label(compatibility).
-succeq_s0(x,y) | -sqsupset_s0(y,z) | sqsupset_s0(x,z) # label(compatibility).
-gtrsim_s0(x,y) | -succeq_s0(y,z) | gtrsim_s0(x,z) # label(compatibility).
-arrow_s0(x,y) | arrow_s0(f2(x),f2(y)) # label(congruence).
-arrow_s0(x,y) | arrow_s0(f3(x),f3(y)) # label(congruence).
-arrow_s0(x,y) | arrow_s0(f4(x),f4(y)) # label(congruence).
-arrow_s0(x,y) | arrow_s0(f7(x),f7(y)) # label(congruence).
-arrow_s0(x,y) | arrow_s0(f8(x),f8(y)) # label(congruence).
arrow_s0(f2(f4(f4(x))),f3(x)) # label(replacement).
arrow_s0(f2(x),f4(x)) # label(replacement).
arrow_s0(f3(f3(x)),f2(f4(f3(f2(x))))) # label(replacement).
-arrow_s0(x,y) | gtrsim_s0(x,y) # label(inclusion).
sqsupset_s0(f8(f3(x)),f7(f4(f3(f2(x))))) # label(replacement).
succeq_s0(f7(f4(f4(x))),f8(x)) # label(replacement).
-sqsupset_s0(x,y) | sqsupsetStar_s0(x,y) # label(inclusion).
-sqsupset_s0(x,y) | -sqsupsetStar_s0(y,z) | sqsupsetStar_s0(x,z) # label(compatibility).
-sqsupsetStar_s0(x,x) # label(wellfoundedness).
end_of_list.

============================== end of clauses for search =============

% There are no natural numbers in the input.

============================== DOMAIN SIZE 2 =========================

============================== STATISTICS ============================

For domain size 2.

Current CPU time: 0.00 seconds (total CPU time: 0.00 seconds).
Ground clauses: seen=72, kept=72.
Selections=588, assignments=1176, propagations=1767, current_models=0.
Rewrite_terms=12971, rewrite_bools=7844, indexes=2698.
Rules_from_neg_clauses=395, cross_offs=395.

============================== end of statistics =====================

============================== DOMAIN SIZE 3 =========================

============================== MODEL =================================

interpretation( 3, [number=1, seconds=0], [

        function(f2(_), [ 0, 0, 1 ]),

        function(f3(_), [ 1, 1, 1 ]),

        function(f4(_), [ 0, 2, 1 ]),

        function(f7(_), [ 0, 0, 1 ]),

        function(f8(_), [ 0, 0, 1 ]),

        relation(arrow_s0(_,_), [
			   1, 1, 1,
			   0, 1, 0,
			   0, 0, 1 ]),

        relation(gtrsim_s0(_,_), [
			   1, 1, 1,
			   0, 1, 0,
			   0, 0, 1 ]),

        relation(sqsupsetStar_s0(_,_), [
			   0, 1, 0,
			   0, 0, 0,
			   0, 0, 0 ]),

        relation(sqsupset_s0(_,_), [
			   0, 1, 0,
			   0, 0, 0,
			   0, 0, 0 ]),

        relation(succeq_s0(_,_), [
			   1, 0, 0,
			   0, 1, 0,
			   0, 0, 0 ])
]).

============================== end of model ==========================

============================== STATISTICS ============================

For domain size 3.

Current CPU time: 0.00 seconds (total CPU time: 0.00 seconds).
Ground clauses: seen=189, kept=189.
Selections=317, assignments=884, propagations=1363, current_models=1.
Rewrite_terms=7418, rewrite_bools=7944, indexes=1461.
Rules_from_neg_clauses=167, cross_offs=609.

============================== end of statistics =====================

User_CPU=0.00, System_CPU=0.00, Wall_clock=0.

Exiting with 1 model.

Process 351 exit (max_models) Wed Sep  3 13:24:02 2025
The process finished Wed Sep  3 13:24:02 2025


Mace4 cooked interpretation:

% number = 1
% seconds = 0

% Interpretation of size 3

f2(0) = 0.
f2(1) = 0.
f2(2) = 1.

f3(0) = 1.
f3(1) = 1.
f3(2) = 1.

f4(0) = 0.
f4(1) = 2.
f4(2) = 1.

f7(0) = 0.
f7(1) = 0.
f7(2) = 1.

f8(0) = 0.
f8(1) = 0.
f8(2) = 1.

  arrow_s0(0,0).
  arrow_s0(0,1).
  arrow_s0(0,2).
- arrow_s0(1,0).
  arrow_s0(1,1).
- arrow_s0(1,2).
- arrow_s0(2,0).
- arrow_s0(2,1).
  arrow_s0(2,2).

  gtrsim_s0(0,0).
  gtrsim_s0(0,1).
  gtrsim_s0(0,2).
- gtrsim_s0(1,0).
  gtrsim_s0(1,1).
- gtrsim_s0(1,2).
- gtrsim_s0(2,0).
- gtrsim_s0(2,1).
  gtrsim_s0(2,2).

- sqsupsetStar_s0(0,0).
  sqsupsetStar_s0(0,1).
- sqsupsetStar_s0(0,2).
- sqsupsetStar_s0(1,0).
- sqsupsetStar_s0(1,1).
- sqsupsetStar_s0(1,2).
- sqsupsetStar_s0(2,0).
- sqsupsetStar_s0(2,1).
- sqsupsetStar_s0(2,2).

- sqsupset_s0(0,0).
  sqsupset_s0(0,1).
- sqsupset_s0(0,2).
- sqsupset_s0(1,0).
- sqsupset_s0(1,1).
- sqsupset_s0(1,2).
- sqsupset_s0(2,0).
- sqsupset_s0(2,1).
- sqsupset_s0(2,2).

  succeq_s0(0,0).
- succeq_s0(0,1).
- succeq_s0(0,2).
- succeq_s0(1,0).
  succeq_s0(1,1).
- succeq_s0(1,2).
- succeq_s0(2,0).
- succeq_s0(2,1).
- succeq_s0(2,2).


Problem 1: 

SCC Processor:
-> Pairs:
 A(b(b(x1))) -> C(x1)
-> Rules:
 a(b(b(x1))) -> c(x1)
 a(x1) -> b(x1)
 c(c(x1)) -> a(b(c(a(x1))))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
