YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/ED5vf.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) AND
    (5) QDP
        (6) UsableRulesProof [EQUIVALENT, 0 ms]
        (7) QDP
        (8) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (9) YES
    (10) QDP
        (11) UsableRulesProof [EQUIVALENT, 0 ms]
        (12) QDP
        (13) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (14) YES
    (15) QDP
        (16) UsableRulesProof [EQUIVALENT, 0 ms]
        (17) QDP
        (18) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (19) YES
    (20) QDP
        (21) UsableRulesProof [EQUIVALENT, 0 ms]
        (22) QDP
        (23) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (24) YES
    (25) QDP
        (26) UsableRulesProof [EQUIVALENT, 0 ms]
        (27) QDP
        (28) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (29) YES
    (30) QDP
        (31) QDPOrderProof [EQUIVALENT, 16 ms]
        (32) QDP
        (33) QDPOrderProof [EQUIVALENT, 4 ms]
        (34) QDP
        (35) PisEmptyProof [EQUIVALENT, 0 ms]
        (36) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   r0(0(x1)) -> 0(r0(x1))
   r0(1(x1)) -> 1(r0(x1))
   r0(m(x1)) -> m(r0(x1))
   r1(0(x1)) -> 0(r1(x1))
   r1(1(x1)) -> 1(r1(x1))
   r1(m(x1)) -> m(r1(x1))
   r0(b(x1)) -> qr(0(b(x1)))
   r1(b(x1)) -> qr(1(b(x1)))
   0(qr(x1)) -> qr(0(x1))
   1(qr(x1)) -> qr(1(x1))
   m(qr(x1)) -> ql(m(x1))
   0(ql(x1)) -> ql(0(x1))
   1(ql(x1)) -> ql(1(x1))
   b(ql(0(x1))) -> 0(b(r0(x1)))
   b(ql(1(x1))) -> 1(b(r1(x1)))

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   R0(0(x1)) -> 0^1(r0(x1))
   R0(0(x1)) -> R0(x1)
   R0(1(x1)) -> 1^1(r0(x1))
   R0(1(x1)) -> R0(x1)
   R0(m(x1)) -> M(r0(x1))
   R0(m(x1)) -> R0(x1)
   R1(0(x1)) -> 0^1(r1(x1))
   R1(0(x1)) -> R1(x1)
   R1(1(x1)) -> 1^1(r1(x1))
   R1(1(x1)) -> R1(x1)
   R1(m(x1)) -> M(r1(x1))
   R1(m(x1)) -> R1(x1)
   R0(b(x1)) -> 0^1(b(x1))
   R1(b(x1)) -> 1^1(b(x1))
   0^1(qr(x1)) -> 0^1(x1)
   1^1(qr(x1)) -> 1^1(x1)
   M(qr(x1)) -> M(x1)
   0^1(ql(x1)) -> 0^1(x1)
   1^1(ql(x1)) -> 1^1(x1)
   B(ql(0(x1))) -> 0^1(b(r0(x1)))
   B(ql(0(x1))) -> B(r0(x1))
   B(ql(0(x1))) -> R0(x1)
   B(ql(1(x1))) -> 1^1(b(r1(x1)))
   B(ql(1(x1))) -> B(r1(x1))
   B(ql(1(x1))) -> R1(x1)

The TRS R consists of the following rules:

   r0(0(x1)) -> 0(r0(x1))
   r0(1(x1)) -> 1(r0(x1))
   r0(m(x1)) -> m(r0(x1))
   r1(0(x1)) -> 0(r1(x1))
   r1(1(x1)) -> 1(r1(x1))
   r1(m(x1)) -> m(r1(x1))
   r0(b(x1)) -> qr(0(b(x1)))
   r1(b(x1)) -> qr(1(b(x1)))
   0(qr(x1)) -> qr(0(x1))
   1(qr(x1)) -> qr(1(x1))
   m(qr(x1)) -> ql(m(x1))
   0(ql(x1)) -> ql(0(x1))
   1(ql(x1)) -> ql(1(x1))
   b(ql(0(x1))) -> 0(b(r0(x1)))
   b(ql(1(x1))) -> 1(b(r1(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 6 SCCs with 12 less nodes.
----------------------------------------

(4)
Complex Obligation (AND)

----------------------------------------

(5)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   M(qr(x1)) -> M(x1)

The TRS R consists of the following rules:

   r0(0(x1)) -> 0(r0(x1))
   r0(1(x1)) -> 1(r0(x1))
   r0(m(x1)) -> m(r0(x1))
   r1(0(x1)) -> 0(r1(x1))
   r1(1(x1)) -> 1(r1(x1))
   r1(m(x1)) -> m(r1(x1))
   r0(b(x1)) -> qr(0(b(x1)))
   r1(b(x1)) -> qr(1(b(x1)))
   0(qr(x1)) -> qr(0(x1))
   1(qr(x1)) -> qr(1(x1))
   m(qr(x1)) -> ql(m(x1))
   0(ql(x1)) -> ql(0(x1))
   1(ql(x1)) -> ql(1(x1))
   b(ql(0(x1))) -> 0(b(r0(x1)))
   b(ql(1(x1))) -> 1(b(r1(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(6) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   M(qr(x1)) -> M(x1)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*M(qr(x1)) -> M(x1)
The graph contains the following edges 1 > 1


----------------------------------------

(9)
YES

----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   1^1(ql(x1)) -> 1^1(x1)
   1^1(qr(x1)) -> 1^1(x1)

The TRS R consists of the following rules:

   r0(0(x1)) -> 0(r0(x1))
   r0(1(x1)) -> 1(r0(x1))
   r0(m(x1)) -> m(r0(x1))
   r1(0(x1)) -> 0(r1(x1))
   r1(1(x1)) -> 1(r1(x1))
   r1(m(x1)) -> m(r1(x1))
   r0(b(x1)) -> qr(0(b(x1)))
   r1(b(x1)) -> qr(1(b(x1)))
   0(qr(x1)) -> qr(0(x1))
   1(qr(x1)) -> qr(1(x1))
   m(qr(x1)) -> ql(m(x1))
   0(ql(x1)) -> ql(0(x1))
   1(ql(x1)) -> ql(1(x1))
   b(ql(0(x1))) -> 0(b(r0(x1)))
   b(ql(1(x1))) -> 1(b(r1(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   1^1(ql(x1)) -> 1^1(x1)
   1^1(qr(x1)) -> 1^1(x1)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*1^1(ql(x1)) -> 1^1(x1)
The graph contains the following edges 1 > 1


*1^1(qr(x1)) -> 1^1(x1)
The graph contains the following edges 1 > 1


----------------------------------------

(14)
YES

----------------------------------------

(15)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   0^1(ql(x1)) -> 0^1(x1)
   0^1(qr(x1)) -> 0^1(x1)

The TRS R consists of the following rules:

   r0(0(x1)) -> 0(r0(x1))
   r0(1(x1)) -> 1(r0(x1))
   r0(m(x1)) -> m(r0(x1))
   r1(0(x1)) -> 0(r1(x1))
   r1(1(x1)) -> 1(r1(x1))
   r1(m(x1)) -> m(r1(x1))
   r0(b(x1)) -> qr(0(b(x1)))
   r1(b(x1)) -> qr(1(b(x1)))
   0(qr(x1)) -> qr(0(x1))
   1(qr(x1)) -> qr(1(x1))
   m(qr(x1)) -> ql(m(x1))
   0(ql(x1)) -> ql(0(x1))
   1(ql(x1)) -> ql(1(x1))
   b(ql(0(x1))) -> 0(b(r0(x1)))
   b(ql(1(x1))) -> 1(b(r1(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(16) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(17)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   0^1(ql(x1)) -> 0^1(x1)
   0^1(qr(x1)) -> 0^1(x1)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(18) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*0^1(ql(x1)) -> 0^1(x1)
The graph contains the following edges 1 > 1


*0^1(qr(x1)) -> 0^1(x1)
The graph contains the following edges 1 > 1


----------------------------------------

(19)
YES

----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   R1(1(x1)) -> R1(x1)
   R1(0(x1)) -> R1(x1)
   R1(m(x1)) -> R1(x1)

The TRS R consists of the following rules:

   r0(0(x1)) -> 0(r0(x1))
   r0(1(x1)) -> 1(r0(x1))
   r0(m(x1)) -> m(r0(x1))
   r1(0(x1)) -> 0(r1(x1))
   r1(1(x1)) -> 1(r1(x1))
   r1(m(x1)) -> m(r1(x1))
   r0(b(x1)) -> qr(0(b(x1)))
   r1(b(x1)) -> qr(1(b(x1)))
   0(qr(x1)) -> qr(0(x1))
   1(qr(x1)) -> qr(1(x1))
   m(qr(x1)) -> ql(m(x1))
   0(ql(x1)) -> ql(0(x1))
   1(ql(x1)) -> ql(1(x1))
   b(ql(0(x1))) -> 0(b(r0(x1)))
   b(ql(1(x1))) -> 1(b(r1(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(22)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   R1(1(x1)) -> R1(x1)
   R1(0(x1)) -> R1(x1)
   R1(m(x1)) -> R1(x1)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(23) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*R1(1(x1)) -> R1(x1)
The graph contains the following edges 1 > 1


*R1(0(x1)) -> R1(x1)
The graph contains the following edges 1 > 1


*R1(m(x1)) -> R1(x1)
The graph contains the following edges 1 > 1


----------------------------------------

(24)
YES

----------------------------------------

(25)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   R0(1(x1)) -> R0(x1)
   R0(0(x1)) -> R0(x1)
   R0(m(x1)) -> R0(x1)

The TRS R consists of the following rules:

   r0(0(x1)) -> 0(r0(x1))
   r0(1(x1)) -> 1(r0(x1))
   r0(m(x1)) -> m(r0(x1))
   r1(0(x1)) -> 0(r1(x1))
   r1(1(x1)) -> 1(r1(x1))
   r1(m(x1)) -> m(r1(x1))
   r0(b(x1)) -> qr(0(b(x1)))
   r1(b(x1)) -> qr(1(b(x1)))
   0(qr(x1)) -> qr(0(x1))
   1(qr(x1)) -> qr(1(x1))
   m(qr(x1)) -> ql(m(x1))
   0(ql(x1)) -> ql(0(x1))
   1(ql(x1)) -> ql(1(x1))
   b(ql(0(x1))) -> 0(b(r0(x1)))
   b(ql(1(x1))) -> 1(b(r1(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(26) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(27)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   R0(1(x1)) -> R0(x1)
   R0(0(x1)) -> R0(x1)
   R0(m(x1)) -> R0(x1)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(28) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*R0(1(x1)) -> R0(x1)
The graph contains the following edges 1 > 1


*R0(0(x1)) -> R0(x1)
The graph contains the following edges 1 > 1


*R0(m(x1)) -> R0(x1)
The graph contains the following edges 1 > 1


----------------------------------------

(29)
YES

----------------------------------------

(30)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(ql(1(x1))) -> B(r1(x1))
   B(ql(0(x1))) -> B(r0(x1))

The TRS R consists of the following rules:

   r0(0(x1)) -> 0(r0(x1))
   r0(1(x1)) -> 1(r0(x1))
   r0(m(x1)) -> m(r0(x1))
   r1(0(x1)) -> 0(r1(x1))
   r1(1(x1)) -> 1(r1(x1))
   r1(m(x1)) -> m(r1(x1))
   r0(b(x1)) -> qr(0(b(x1)))
   r1(b(x1)) -> qr(1(b(x1)))
   0(qr(x1)) -> qr(0(x1))
   1(qr(x1)) -> qr(1(x1))
   m(qr(x1)) -> ql(m(x1))
   0(ql(x1)) -> ql(0(x1))
   1(ql(x1)) -> ql(1(x1))
   b(ql(0(x1))) -> 0(b(r0(x1)))
   b(ql(1(x1))) -> 1(b(r1(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(31) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   B(ql(1(x1))) -> B(r1(x1))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(0(x_1)) = x_1
   POL(1(x_1)) = 1 + x_1
   POL(B(x_1)) = x_1
   POL(b(x_1)) = 0
   POL(m(x_1)) = 1
   POL(ql(x_1)) = x_1
   POL(qr(x_1)) = 0
   POL(r0(x_1)) = x_1
   POL(r1(x_1)) = x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   r1(0(x1)) -> 0(r1(x1))
   r1(1(x1)) -> 1(r1(x1))
   r1(m(x1)) -> m(r1(x1))
   r1(b(x1)) -> qr(1(b(x1)))
   r0(0(x1)) -> 0(r0(x1))
   r0(1(x1)) -> 1(r0(x1))
   r0(m(x1)) -> m(r0(x1))
   r0(b(x1)) -> qr(0(b(x1)))
   1(qr(x1)) -> qr(1(x1))
   1(ql(x1)) -> ql(1(x1))
   0(qr(x1)) -> qr(0(x1))
   0(ql(x1)) -> ql(0(x1))
   m(qr(x1)) -> ql(m(x1))


----------------------------------------

(32)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(ql(0(x1))) -> B(r0(x1))

The TRS R consists of the following rules:

   r0(0(x1)) -> 0(r0(x1))
   r0(1(x1)) -> 1(r0(x1))
   r0(m(x1)) -> m(r0(x1))
   r1(0(x1)) -> 0(r1(x1))
   r1(1(x1)) -> 1(r1(x1))
   r1(m(x1)) -> m(r1(x1))
   r0(b(x1)) -> qr(0(b(x1)))
   r1(b(x1)) -> qr(1(b(x1)))
   0(qr(x1)) -> qr(0(x1))
   1(qr(x1)) -> qr(1(x1))
   m(qr(x1)) -> ql(m(x1))
   0(ql(x1)) -> ql(0(x1))
   1(ql(x1)) -> ql(1(x1))
   b(ql(0(x1))) -> 0(b(r0(x1)))
   b(ql(1(x1))) -> 1(b(r1(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(33) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   B(ql(0(x1))) -> B(r0(x1))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(0(x_1)) = 1 + x_1
   POL(1(x_1)) = 0
   POL(B(x_1)) = x_1
   POL(b(x_1)) = 0
   POL(m(x_1)) = 1
   POL(ql(x_1)) = x_1
   POL(qr(x_1)) = 0
   POL(r0(x_1)) = x_1
   POL(r1(x_1)) = 0

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   r0(0(x1)) -> 0(r0(x1))
   r0(1(x1)) -> 1(r0(x1))
   r0(m(x1)) -> m(r0(x1))
   r0(b(x1)) -> qr(0(b(x1)))
   1(qr(x1)) -> qr(1(x1))
   1(ql(x1)) -> ql(1(x1))
   0(qr(x1)) -> qr(0(x1))
   0(ql(x1)) -> ql(0(x1))
   m(qr(x1)) -> ql(m(x1))


----------------------------------------

(34)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   r0(0(x1)) -> 0(r0(x1))
   r0(1(x1)) -> 1(r0(x1))
   r0(m(x1)) -> m(r0(x1))
   r1(0(x1)) -> 0(r1(x1))
   r1(1(x1)) -> 1(r1(x1))
   r1(m(x1)) -> m(r1(x1))
   r0(b(x1)) -> qr(0(b(x1)))
   r1(b(x1)) -> qr(1(b(x1)))
   0(qr(x1)) -> qr(0(x1))
   1(qr(x1)) -> qr(1(x1))
   m(qr(x1)) -> ql(m(x1))
   0(ql(x1)) -> ql(0(x1))
   1(ql(x1)) -> ql(1(x1))
   b(ql(0(x1))) -> 0(b(r0(x1)))
   b(ql(1(x1))) -> 1(b(r1(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(35) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(36)
YES
