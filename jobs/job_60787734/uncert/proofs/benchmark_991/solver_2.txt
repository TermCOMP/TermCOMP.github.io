YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/kq6vE.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 11 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) MRRProof [EQUIVALENT, 17 ms]
(6) QDP
(7) QDPOrderProof [EQUIVALENT, 35 ms]
(8) QDP
(9) DependencyGraphProof [EQUIVALENT, 0 ms]
(10) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(b(c(x1))) -> b(x1)
   c(b(b(x1))) -> a(x1)
   c(x1) -> b(x1)
   a(a(x1)) -> c(b(a(c(x1))))

Q is empty.

----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(a(x_1)) = 3 + x_1
   POL(b(x_1)) = 1 + x_1
   POL(c(x_1)) = 1 + x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   a(b(c(x1))) -> b(x1)




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   c(b(b(x1))) -> a(x1)
   c(x1) -> b(x1)
   a(a(x1)) -> c(b(a(c(x1))))

Q is empty.

----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(b(b(x1))) -> A(x1)
   A(a(x1)) -> C(b(a(c(x1))))
   A(a(x1)) -> A(c(x1))
   A(a(x1)) -> C(x1)

The TRS R consists of the following rules:

   c(b(b(x1))) -> a(x1)
   c(x1) -> b(x1)
   a(a(x1)) -> c(b(a(c(x1))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.

Strictly oriented dependency pairs:

   A(a(x1)) -> A(c(x1))
   A(a(x1)) -> C(x1)


Used ordering: Polynomial interpretation [POLO]:

   POL(A(x_1)) = 2 + x_1
   POL(C(x_1)) = x_1
   POL(a(x_1)) = 3 + x_1
   POL(b(x_1)) = 1 + x_1
   POL(c(x_1)) = 1 + x_1


----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(b(b(x1))) -> A(x1)
   A(a(x1)) -> C(b(a(c(x1))))

The TRS R consists of the following rules:

   c(b(b(x1))) -> a(x1)
   c(x1) -> b(x1)
   a(a(x1)) -> c(b(a(c(x1))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   A(a(x1)) -> C(b(a(c(x1))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(C(x_1)) =  	[[-I]] 	 +  	[[0A, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(b(x_1)) =  	[[0A], [-I], [0A]] 	 +  	[[-I, 0A, -I], [0A, -I, -I], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(A(x_1)) =  	[[0A]] 	 +  	[[0A, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(a(x_1)) =  	[[1A], [0A], [0A]] 	 +  	[[0A, 0A, 0A], [-I, -I, -I], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(c(x_1)) =  	[[1A], [0A], [0A]] 	 +  	[[0A, 0A, 0A], [0A, -I, -I], [0A, 0A, 0A]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   a(a(x1)) -> c(b(a(c(x1))))
   c(b(b(x1))) -> a(x1)
   c(x1) -> b(x1)


----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(b(b(x1))) -> A(x1)

The TRS R consists of the following rules:

   c(b(b(x1))) -> a(x1)
   c(x1) -> b(x1)
   a(a(x1)) -> c(b(a(c(x1))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 1 less node.
----------------------------------------

(10)
TRUE
