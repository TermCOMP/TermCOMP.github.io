YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/jaTcO.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 9 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) AND
    (7) QDP
        (8) UsableRulesProof [EQUIVALENT, 0 ms]
        (9) QDP
        (10) MNOCProof [EQUIVALENT, 0 ms]
        (11) QDP
        (12) MRRProof [EQUIVALENT, 6 ms]
        (13) QDP
        (14) MRRProof [EQUIVALENT, 2 ms]
        (15) QDP
        (16) PisEmptyProof [EQUIVALENT, 0 ms]
        (17) YES
    (18) QDP
        (19) UsableRulesProof [EQUIVALENT, 0 ms]
        (20) QDP
        (21) MNOCProof [EQUIVALENT, 0 ms]
        (22) QDP
        (23) UsableRulesProof [EQUIVALENT, 0 ms]
        (24) QDP
        (25) MRRProof [EQUIVALENT, 4 ms]
        (26) QDP
        (27) PisEmptyProof [EQUIVALENT, 0 ms]
        (28) YES
    (29) QDP
        (30) UsableRulesProof [EQUIVALENT, 0 ms]
        (31) QDP
        (32) QDPOrderProof [EQUIVALENT, 133 ms]
        (33) QDP
        (34) QDPOrderProof [EQUIVALENT, 36 ms]
        (35) QDP
        (36) QDPOrderProof [EQUIVALENT, 4 ms]
        (37) QDP
        (38) UsableRulesProof [EQUIVALENT, 0 ms]
        (39) QDP
        (40) MRRProof [EQUIVALENT, 2 ms]
        (41) QDP
        (42) UsableRulesProof [EQUIVALENT, 0 ms]
        (43) QDP
        (44) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (45) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(b(x1)) -> b(c(a(x1)))
   b(c(x1)) -> c(b(b(x1)))
   a(c(x1)) -> c(a(b(x1)))
   a(a(x1)) -> a(d(d(d(x1))))
   d(a(x1)) -> d(d(c(x1)))
   a(d(d(c(x1)))) -> a(a(a(d(x1))))
   e(e(f(f(x1)))) -> f(f(f(e(e(x1)))))
   e(x1) -> a(x1)
   b(d(x1)) -> d(d(x1))

Q is empty.

----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(a(x_1)) = x_1
   POL(b(x_1)) = x_1
   POL(c(x_1)) = x_1
   POL(d(x_1)) = x_1
   POL(e(x_1)) = 1 + x_1
   POL(f(x_1)) = x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   e(x1) -> a(x1)




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(b(x1)) -> b(c(a(x1)))
   b(c(x1)) -> c(b(b(x1)))
   a(c(x1)) -> c(a(b(x1)))
   a(a(x1)) -> a(d(d(d(x1))))
   d(a(x1)) -> d(d(c(x1)))
   a(d(d(c(x1)))) -> a(a(a(d(x1))))
   e(e(f(f(x1)))) -> f(f(f(e(e(x1)))))
   b(d(x1)) -> d(d(x1))

Q is empty.

----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(b(x1)) -> B(c(a(x1)))
   A(b(x1)) -> A(x1)
   B(c(x1)) -> B(b(x1))
   B(c(x1)) -> B(x1)
   A(c(x1)) -> A(b(x1))
   A(c(x1)) -> B(x1)
   A(a(x1)) -> A(d(d(d(x1))))
   A(a(x1)) -> D(d(d(x1)))
   A(a(x1)) -> D(d(x1))
   A(a(x1)) -> D(x1)
   D(a(x1)) -> D(d(c(x1)))
   D(a(x1)) -> D(c(x1))
   A(d(d(c(x1)))) -> A(a(a(d(x1))))
   A(d(d(c(x1)))) -> A(a(d(x1)))
   A(d(d(c(x1)))) -> A(d(x1))
   A(d(d(c(x1)))) -> D(x1)
   E(e(f(f(x1)))) -> E(e(x1))
   E(e(f(f(x1)))) -> E(x1)
   B(d(x1)) -> D(d(x1))

The TRS R consists of the following rules:

   a(b(x1)) -> b(c(a(x1)))
   b(c(x1)) -> c(b(b(x1)))
   a(c(x1)) -> c(a(b(x1)))
   a(a(x1)) -> a(d(d(d(x1))))
   d(a(x1)) -> d(d(c(x1)))
   a(d(d(c(x1)))) -> a(a(a(d(x1))))
   e(e(f(f(x1)))) -> f(f(f(e(e(x1)))))
   b(d(x1)) -> d(d(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 3 SCCs with 9 less nodes.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   E(e(f(f(x1)))) -> E(x1)
   E(e(f(f(x1)))) -> E(e(x1))

The TRS R consists of the following rules:

   a(b(x1)) -> b(c(a(x1)))
   b(c(x1)) -> c(b(b(x1)))
   a(c(x1)) -> c(a(b(x1)))
   a(a(x1)) -> a(d(d(d(x1))))
   d(a(x1)) -> d(d(c(x1)))
   a(d(d(c(x1)))) -> a(a(a(d(x1))))
   e(e(f(f(x1)))) -> f(f(f(e(e(x1)))))
   b(d(x1)) -> d(d(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   E(e(f(f(x1)))) -> E(x1)
   E(e(f(f(x1)))) -> E(e(x1))

The TRS R consists of the following rules:

   e(e(f(f(x1)))) -> f(f(f(e(e(x1)))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) MNOCProof (EQUIVALENT)
We use the modular non-overlap check [LPAR04] to enlarge Q to all left-hand sides of R.
----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   E(e(f(f(x1)))) -> E(x1)
   E(e(f(f(x1)))) -> E(e(x1))

The TRS R consists of the following rules:

   e(e(f(f(x1)))) -> f(f(f(e(e(x1)))))

The set Q consists of the following terms:

   e(e(f(f(x0))))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.

Strictly oriented dependency pairs:

   E(e(f(f(x1)))) -> E(x1)


Used ordering: Polynomial interpretation [POLO]:

   POL(E(x_1)) = 2*x_1
   POL(e(x_1)) = 1 + x_1
   POL(f(x_1)) = x_1


----------------------------------------

(13)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   E(e(f(f(x1)))) -> E(e(x1))

The TRS R consists of the following rules:

   e(e(f(f(x1)))) -> f(f(f(e(e(x1)))))

The set Q consists of the following terms:

   e(e(f(f(x0))))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(14) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.

Strictly oriented dependency pairs:

   E(e(f(f(x1)))) -> E(e(x1))

Strictly oriented rules of the TRS R:

   e(e(f(f(x1)))) -> f(f(f(e(e(x1)))))

Used ordering: Polynomial interpretation [POLO]:

   POL(E(x_1)) = 2*x_1
   POL(e(x_1)) = 3*x_1
   POL(f(x_1)) = 3 + x_1


----------------------------------------

(15)
Obligation:
Q DP problem:
P is empty.
R is empty.
The set Q consists of the following terms:

   e(e(f(f(x0))))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(16) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(17)
YES

----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(c(x1)) -> B(x1)
   B(c(x1)) -> B(b(x1))

The TRS R consists of the following rules:

   a(b(x1)) -> b(c(a(x1)))
   b(c(x1)) -> c(b(b(x1)))
   a(c(x1)) -> c(a(b(x1)))
   a(a(x1)) -> a(d(d(d(x1))))
   d(a(x1)) -> d(d(c(x1)))
   a(d(d(c(x1)))) -> a(a(a(d(x1))))
   e(e(f(f(x1)))) -> f(f(f(e(e(x1)))))
   b(d(x1)) -> d(d(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(c(x1)) -> B(x1)
   B(c(x1)) -> B(b(x1))

The TRS R consists of the following rules:

   b(c(x1)) -> c(b(b(x1)))
   b(d(x1)) -> d(d(x1))
   d(a(x1)) -> d(d(c(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) MNOCProof (EQUIVALENT)
We use the modular non-overlap check [LPAR04] to enlarge Q to all left-hand sides of R.
----------------------------------------

(22)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(c(x1)) -> B(x1)
   B(c(x1)) -> B(b(x1))

The TRS R consists of the following rules:

   b(c(x1)) -> c(b(b(x1)))
   b(d(x1)) -> d(d(x1))
   d(a(x1)) -> d(d(c(x1)))

The set Q consists of the following terms:

   b(c(x0))
   b(d(x0))
   d(a(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(23) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(24)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(c(x1)) -> B(x1)
   B(c(x1)) -> B(b(x1))

The TRS R consists of the following rules:

   b(c(x1)) -> c(b(b(x1)))
   b(d(x1)) -> d(d(x1))

The set Q consists of the following terms:

   b(c(x0))
   b(d(x0))
   d(a(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(25) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.

Strictly oriented dependency pairs:

   B(c(x1)) -> B(x1)
   B(c(x1)) -> B(b(x1))


Used ordering: Polynomial interpretation [POLO]:

   POL(B(x_1)) = 3*x_1
   POL(b(x_1)) = x_1
   POL(c(x_1)) = 1 + x_1
   POL(d(x_1)) = x_1


----------------------------------------

(26)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   b(c(x1)) -> c(b(b(x1)))
   b(d(x1)) -> d(d(x1))

The set Q consists of the following terms:

   b(c(x0))
   b(d(x0))
   d(a(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(27) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(28)
YES

----------------------------------------

(29)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(c(x1)) -> A(b(x1))
   A(b(x1)) -> A(x1)
   A(a(x1)) -> A(d(d(d(x1))))
   A(d(d(c(x1)))) -> A(a(a(d(x1))))
   A(d(d(c(x1)))) -> A(a(d(x1)))
   A(d(d(c(x1)))) -> A(d(x1))

The TRS R consists of the following rules:

   a(b(x1)) -> b(c(a(x1)))
   b(c(x1)) -> c(b(b(x1)))
   a(c(x1)) -> c(a(b(x1)))
   a(a(x1)) -> a(d(d(d(x1))))
   d(a(x1)) -> d(d(c(x1)))
   a(d(d(c(x1)))) -> a(a(a(d(x1))))
   e(e(f(f(x1)))) -> f(f(f(e(e(x1)))))
   b(d(x1)) -> d(d(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(30) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(31)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(c(x1)) -> A(b(x1))
   A(b(x1)) -> A(x1)
   A(a(x1)) -> A(d(d(d(x1))))
   A(d(d(c(x1)))) -> A(a(a(d(x1))))
   A(d(d(c(x1)))) -> A(a(d(x1)))
   A(d(d(c(x1)))) -> A(d(x1))

The TRS R consists of the following rules:

   d(a(x1)) -> d(d(c(x1)))
   a(b(x1)) -> b(c(a(x1)))
   a(c(x1)) -> c(a(b(x1)))
   a(d(d(c(x1)))) -> a(a(a(d(x1))))
   a(a(x1)) -> a(d(d(d(x1))))
   b(c(x1)) -> c(b(b(x1)))
   b(d(x1)) -> d(d(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(32) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   A(d(d(c(x1)))) -> A(a(d(x1)))
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(A(x_1)) =  	[[0A]] 	 +  	[[0A, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(c(x_1)) =  	[[1A], [0A], [1A]] 	 +  	[[0A, 0A, 0A], [0A, 0A, 0A], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(b(x_1)) =  	[[1A], [0A], [1A]] 	 +  	[[0A, 0A, 0A], [0A, -I, 0A], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(a(x_1)) =  	[[0A], [1A], [-I]] 	 +  	[[-I, -I, 0A], [0A, 0A, 0A], [0A, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(d(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[-I, 0A, 0A], [-I, -I, 0A], [-I, -I, -I]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   b(c(x1)) -> c(b(b(x1)))
   b(d(x1)) -> d(d(x1))
   d(a(x1)) -> d(d(c(x1)))
   a(b(x1)) -> b(c(a(x1)))
   a(c(x1)) -> c(a(b(x1)))
   a(a(x1)) -> a(d(d(d(x1))))
   a(d(d(c(x1)))) -> a(a(a(d(x1))))


----------------------------------------

(33)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(c(x1)) -> A(b(x1))
   A(b(x1)) -> A(x1)
   A(a(x1)) -> A(d(d(d(x1))))
   A(d(d(c(x1)))) -> A(a(a(d(x1))))
   A(d(d(c(x1)))) -> A(d(x1))

The TRS R consists of the following rules:

   d(a(x1)) -> d(d(c(x1)))
   a(b(x1)) -> b(c(a(x1)))
   a(c(x1)) -> c(a(b(x1)))
   a(d(d(c(x1)))) -> a(a(a(d(x1))))
   a(a(x1)) -> a(d(d(d(x1))))
   b(c(x1)) -> c(b(b(x1)))
   b(d(x1)) -> d(d(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(34) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   A(a(x1)) -> A(d(d(d(x1))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(A(x_1)) =  	[[0A]] 	 +  	[[0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(c(x_1)) =  	[[1A], [0A], [1A]] 	 +  	[[0A, 1A, -I], [-I, 0A, -I], [-I, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(b(x_1)) =  	[[-I], [0A], [-I]] 	 +  	[[0A, 0A, -I], [-I, 0A, -I], [0A, 1A, 0A]] 	* 	x_1
>>>

   <<<
 POL(a(x_1)) =  	[[1A], [0A], [1A]] 	 +  	[[-I, 0A, -I], [-I, -I, -I], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(d(x_1)) =  	[[0A], [-I], [-I]] 	 +  	[[-I, 0A, 0A], [-I, -I, 0A], [-I, -I, -I]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   b(c(x1)) -> c(b(b(x1)))
   b(d(x1)) -> d(d(x1))
   d(a(x1)) -> d(d(c(x1)))
   a(b(x1)) -> b(c(a(x1)))
   a(c(x1)) -> c(a(b(x1)))
   a(a(x1)) -> a(d(d(d(x1))))
   a(d(d(c(x1)))) -> a(a(a(d(x1))))


----------------------------------------

(35)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(c(x1)) -> A(b(x1))
   A(b(x1)) -> A(x1)
   A(d(d(c(x1)))) -> A(a(a(d(x1))))
   A(d(d(c(x1)))) -> A(d(x1))

The TRS R consists of the following rules:

   d(a(x1)) -> d(d(c(x1)))
   a(b(x1)) -> b(c(a(x1)))
   a(c(x1)) -> c(a(b(x1)))
   a(d(d(c(x1)))) -> a(a(a(d(x1))))
   a(a(x1)) -> a(d(d(d(x1))))
   b(c(x1)) -> c(b(b(x1)))
   b(d(x1)) -> d(d(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(36) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   A(d(d(c(x1)))) -> A(a(a(d(x1))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(A(x_1)) = x_1
   POL(a(x_1)) = 0
   POL(b(x_1)) = x_1
   POL(c(x_1)) = x_1
   POL(d(x_1)) = 1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   b(c(x1)) -> c(b(b(x1)))
   b(d(x1)) -> d(d(x1))
   d(a(x1)) -> d(d(c(x1)))
   a(b(x1)) -> b(c(a(x1)))
   a(c(x1)) -> c(a(b(x1)))
   a(a(x1)) -> a(d(d(d(x1))))
   a(d(d(c(x1)))) -> a(a(a(d(x1))))


----------------------------------------

(37)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(c(x1)) -> A(b(x1))
   A(b(x1)) -> A(x1)
   A(d(d(c(x1)))) -> A(d(x1))

The TRS R consists of the following rules:

   d(a(x1)) -> d(d(c(x1)))
   a(b(x1)) -> b(c(a(x1)))
   a(c(x1)) -> c(a(b(x1)))
   a(d(d(c(x1)))) -> a(a(a(d(x1))))
   a(a(x1)) -> a(d(d(d(x1))))
   b(c(x1)) -> c(b(b(x1)))
   b(d(x1)) -> d(d(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(38) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(39)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(c(x1)) -> A(b(x1))
   A(b(x1)) -> A(x1)
   A(d(d(c(x1)))) -> A(d(x1))

The TRS R consists of the following rules:

   d(a(x1)) -> d(d(c(x1)))
   b(c(x1)) -> c(b(b(x1)))
   b(d(x1)) -> d(d(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(40) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.

Strictly oriented dependency pairs:

   A(c(x1)) -> A(b(x1))
   A(d(d(c(x1)))) -> A(d(x1))


Used ordering: Polynomial interpretation [POLO]:

   POL(A(x_1)) = 3*x_1
   POL(a(x_1)) = 1 + 3*x_1
   POL(b(x_1)) = x_1
   POL(c(x_1)) = 1 + 2*x_1
   POL(d(x_1)) = x_1


----------------------------------------

(41)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(b(x1)) -> A(x1)

The TRS R consists of the following rules:

   d(a(x1)) -> d(d(c(x1)))
   b(c(x1)) -> c(b(b(x1)))
   b(d(x1)) -> d(d(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(42) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(43)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(b(x1)) -> A(x1)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(44) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*A(b(x1)) -> A(x1)
The graph contains the following edges 1 > 1


----------------------------------------

(45)
YES
