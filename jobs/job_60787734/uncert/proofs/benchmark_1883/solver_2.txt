YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/OxfrU.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRS Reverse [EQUIVALENT, 0 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 22 ms]
(4) QTRS
(5) DependencyPairsProof [EQUIVALENT, 2 ms]
(6) QDP
(7) DependencyGraphProof [EQUIVALENT, 0 ms]
(8) QDP
(9) MRRProof [EQUIVALENT, 14 ms]
(10) QDP
(11) DependencyGraphProof [EQUIVALENT, 0 ms]
(12) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   c(c(c(a(x1)))) -> d(d(x1))
   d(b(x1)) -> c(c(x1))
   b(c(x1)) -> b(a(c(x1)))
   c(x1) -> a(a(x1))
   d(x1) -> b(c(x1))

Q is empty.

----------------------------------------

(1) QTRS Reverse (EQUIVALENT)
We applied the QTRS Reverse Processor [REVERSE].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(c(c(c(x1)))) -> d(d(x1))
   b(d(x1)) -> c(c(x1))
   c(b(x1)) -> c(a(b(x1)))
   c(x1) -> a(a(x1))
   d(x1) -> c(b(x1))

Q is empty.

----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(a(x_1)) = x_1
   POL(b(x_1)) = 1 + x_1
   POL(c(x_1)) = 2 + x_1
   POL(d(x_1)) = 3 + x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   c(x1) -> a(a(x1))




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(c(c(c(x1)))) -> d(d(x1))
   b(d(x1)) -> c(c(x1))
   c(b(x1)) -> c(a(b(x1)))
   d(x1) -> c(b(x1))

Q is empty.

----------------------------------------

(5) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(c(c(c(x1)))) -> D(d(x1))
   A(c(c(c(x1)))) -> D(x1)
   B(d(x1)) -> C(c(x1))
   B(d(x1)) -> C(x1)
   C(b(x1)) -> C(a(b(x1)))
   C(b(x1)) -> A(b(x1))
   D(x1) -> C(b(x1))
   D(x1) -> B(x1)

The TRS R consists of the following rules:

   a(c(c(c(x1)))) -> d(d(x1))
   b(d(x1)) -> c(c(x1))
   c(b(x1)) -> c(a(b(x1)))
   d(x1) -> c(b(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 2 less nodes.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   D(x1) -> C(b(x1))
   C(b(x1)) -> A(b(x1))
   A(c(c(c(x1)))) -> D(d(x1))
   D(x1) -> B(x1)
   B(d(x1)) -> C(x1)
   A(c(c(c(x1)))) -> D(x1)

The TRS R consists of the following rules:

   a(c(c(c(x1)))) -> d(d(x1))
   b(d(x1)) -> c(c(x1))
   c(b(x1)) -> c(a(b(x1)))
   d(x1) -> c(b(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.

Strictly oriented dependency pairs:

   A(c(c(c(x1)))) -> D(d(x1))
   D(x1) -> B(x1)
   B(d(x1)) -> C(x1)
   A(c(c(c(x1)))) -> D(x1)


Used ordering: Polynomial interpretation [POLO]:

   POL(A(x_1)) = 2 + x_1
   POL(B(x_1)) = 1 + x_1
   POL(C(x_1)) = 2 + x_1
   POL(D(x_1)) = 3 + x_1
   POL(a(x_1)) = x_1
   POL(b(x_1)) = 1 + x_1
   POL(c(x_1)) = 2 + x_1
   POL(d(x_1)) = 3 + x_1


----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   D(x1) -> C(b(x1))
   C(b(x1)) -> A(b(x1))

The TRS R consists of the following rules:

   a(c(c(c(x1)))) -> d(d(x1))
   b(d(x1)) -> c(c(x1))
   c(b(x1)) -> c(a(b(x1)))
   d(x1) -> c(b(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 2 less nodes.
----------------------------------------

(12)
TRUE
