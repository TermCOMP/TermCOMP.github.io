YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/vXkia.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 19 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 2 ms]
(4) QDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) QDP
(7) UsableRulesProof [EQUIVALENT, 0 ms]
(8) QDP
(9) QDPOrderProof [EQUIVALENT, 5 ms]
(10) QDP
(11) QDPOrderProof [EQUIVALENT, 16 ms]
(12) QDP
(13) PisEmptyProof [EQUIVALENT, 0 ms]
(14) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   b(d(b(x1))) -> c(d(b(x1)))
   b(a(c(x1))) -> b(c(x1))
   a(d(x1)) -> d(c(x1))
   b(b(b(x1))) -> a(b(c(x1)))
   d(c(x1)) -> b(d(x1))
   d(c(x1)) -> d(b(d(x1)))
   d(a(c(x1))) -> b(b(x1))

Q is empty.

----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(a(x_1)) = 1 + x_1
   POL(b(x_1)) = 1 + x_1
   POL(c(x_1)) = 1 + x_1
   POL(d(x_1)) = x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   b(a(c(x1))) -> b(c(x1))




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   b(d(b(x1))) -> c(d(b(x1)))
   a(d(x1)) -> d(c(x1))
   b(b(b(x1))) -> a(b(c(x1)))
   d(c(x1)) -> b(d(x1))
   d(c(x1)) -> d(b(d(x1)))
   d(a(c(x1))) -> b(b(x1))

Q is empty.

----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(d(x1)) -> D(c(x1))
   B(b(b(x1))) -> A(b(c(x1)))
   B(b(b(x1))) -> B(c(x1))
   D(c(x1)) -> B(d(x1))
   D(c(x1)) -> D(x1)
   D(c(x1)) -> D(b(d(x1)))
   D(a(c(x1))) -> B(b(x1))
   D(a(c(x1))) -> B(x1)

The TRS R consists of the following rules:

   b(d(b(x1))) -> c(d(b(x1)))
   a(d(x1)) -> d(c(x1))
   b(b(b(x1))) -> a(b(c(x1)))
   d(c(x1)) -> b(d(x1))
   d(c(x1)) -> d(b(d(x1)))
   d(a(c(x1))) -> b(b(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 6 less nodes.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   D(c(x1)) -> D(b(d(x1)))
   D(c(x1)) -> D(x1)

The TRS R consists of the following rules:

   b(d(b(x1))) -> c(d(b(x1)))
   a(d(x1)) -> d(c(x1))
   b(b(b(x1))) -> a(b(c(x1)))
   d(c(x1)) -> b(d(x1))
   d(c(x1)) -> d(b(d(x1)))
   d(a(c(x1))) -> b(b(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   D(c(x1)) -> D(b(d(x1)))
   D(c(x1)) -> D(x1)

The TRS R consists of the following rules:

   d(c(x1)) -> b(d(x1))
   d(c(x1)) -> d(b(d(x1)))
   d(a(c(x1))) -> b(b(x1))
   b(d(b(x1))) -> c(d(b(x1)))
   b(b(b(x1))) -> a(b(c(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   D(c(x1)) -> D(x1)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(D(x_1)) = x_1
   POL(a(x_1)) = 1 + x_1
   POL(b(x_1)) = 1 + x_1
   POL(c(x_1)) = 1 + x_1
   POL(d(x_1)) = x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   d(c(x1)) -> b(d(x1))
   d(c(x1)) -> d(b(d(x1)))
   d(a(c(x1))) -> b(b(x1))
   b(d(b(x1))) -> c(d(b(x1)))
   b(b(b(x1))) -> a(b(c(x1)))


----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   D(c(x1)) -> D(b(d(x1)))

The TRS R consists of the following rules:

   d(c(x1)) -> b(d(x1))
   d(c(x1)) -> d(b(d(x1)))
   d(a(c(x1))) -> b(b(x1))
   b(d(b(x1))) -> c(d(b(x1)))
   b(b(b(x1))) -> a(b(c(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   D(c(x1)) -> D(b(d(x1)))
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(D(x_1)) =  	[[0A]] 	 +  	[[-I, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(c(x_1)) =  	[[0A], [-I], [1A]] 	 +  	[[0A, 0A, 0A], [-I, -I, -I], [1A, 0A, 1A]] 	* 	x_1
>>>

   <<<
 POL(b(x_1)) =  	[[1A], [-I], [-I]] 	 +  	[[0A, 1A, 0A], [-I, 0A, -I], [-I, 0A, -I]] 	* 	x_1
>>>

   <<<
 POL(d(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[-I, 0A, 0A], [0A, -I, 0A], [-I, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(a(x_1)) =  	[[1A], [-I], [-I]] 	 +  	[[-I, 0A, 0A], [-I, 0A, 1A], [-I, 0A, 0A]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   d(c(x1)) -> b(d(x1))
   d(c(x1)) -> d(b(d(x1)))
   d(a(c(x1))) -> b(b(x1))
   b(d(b(x1))) -> c(d(b(x1)))
   b(b(b(x1))) -> a(b(c(x1)))


----------------------------------------

(12)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   d(c(x1)) -> b(d(x1))
   d(c(x1)) -> d(b(d(x1)))
   d(a(c(x1))) -> b(b(x1))
   b(d(b(x1))) -> c(d(b(x1)))
   b(b(b(x1))) -> a(b(c(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(14)
YES
