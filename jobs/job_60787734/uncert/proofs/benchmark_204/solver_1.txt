YES
**************************************************
summary
**************************************************
SRS with 16 rules on 11 letters       mirror
SRS with 16 rules on 11 letters       DP
SRS with 11 strict rules and 16 weak rules on 15 letters       weights
SRS with 8 strict rules and 16 weak rules on 14 letters       EDG
SRS with 8 strict rules and 16 weak rules on 14 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 4 strict rules and 16 weak rules on 14 letters       weights
SRS with 3 strict rules and 16 weak rules on 13 letters       EDG
SRS with 3 strict rules and 16 weak rules on 13 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 16 weak rules on 13 letters       EDG
SRS with 2 strict rules and 16 weak rules on 13 letters       Usable
SRS with 2 rules on 3 letters       weights
SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [B, a] -> [BA] {- Input 0 -}
  [B, b] -> [B, B] {- Input 1 -}
  [BA, a] -> [BAA] {- Input 2 -}
  [BA, b] -> [BA, B] {- Input 3 -}
  [BAA, a] -> [BAA, A] {- Input 4 -}
  [BAA, b] -> [BAAB] {- Input 5 -}
  [BAAB, a] -> [BAABA] {- Input 6 -}
  [BAAB, b] -> [BAAB, B] {- Input 7 -}
  [BAABA, a] -> [BAABAA] {- Input 8 -}
  [BAABA, b] -> [BAABA, B] {- Input 9 -}
  [BAABAA] -> [a, b, a] {- Input 10 -}
  [A, a] -> [A, A] {- Input 11 -}
  [A, b] -> [AB] {- Input 12 -}
  [AB, a] -> [ABA] {- Input 13 -}
  [AB, b] -> [AB, B] {- Input 14 -}
  [ABA] -> [b, a, a, b, a, a] {- Input 15 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, B] -> [BA] {- Mirror (Input 0) -}
  [b, B] -> [B, B] {- Mirror (Input 1) -}
  [a, BA] -> [BAA] {- Mirror (Input 2) -}
  [b, BA] -> [B, BA] {- Mirror (Input 3) -}
  [a, BAA] -> [A, BAA] {- Mirror (Input 4) -}
  [b, BAA] -> [BAAB] {- Mirror (Input 5) -}
  [a, BAAB] -> [BAABA] {- Mirror (Input 6) -}
  [b, BAAB] -> [B, BAAB] {- Mirror (Input 7) -}
  [a, BAABA] -> [BAABAA] {- Mirror (Input 8) -}
  [b, BAABA] -> [B, BAABA] {- Mirror (Input 9) -}
  [BAABAA] -> [a, b, a] {- Mirror (Input 10) -}
  [a, A] -> [A, A] {- Mirror (Input 11) -}
  [b, A] -> [AB] {- Mirror (Input 12) -}
  [a, AB] -> [ABA] {- Mirror (Input 13) -}
  [b, AB] -> [B, AB] {- Mirror (Input 14) -}
  [ABA] -> [a, a, b, a, a, b] {- Mirror (Input 15) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, B] ->= [BA] {- DP Nontop (Mirror (Input 0)) -}
  [b, B] ->= [B, B] {- DP Nontop (Mirror (Input 1)) -}
  [a, BA] ->= [BAA] {- DP Nontop (Mirror (Input 2)) -}
  [b, BA] ->= [B, BA] {- DP Nontop (Mirror (Input 3)) -}
  [a, BAA] ->= [A, BAA] {- DP Nontop (Mirror (Input 4)) -}
  [b, BAA] ->= [BAAB] {- DP Nontop (Mirror (Input 5)) -}
  [a, BAAB] ->= [BAABA] {- DP Nontop (Mirror (Input 6)) -}
  [b, BAAB] ->= [B, BAAB] {- DP Nontop (Mirror (Input 7)) -}
  [a, BAABA] ->= [BAABAA] {- DP Nontop (Mirror (Input 8)) -}
  [b, BAABA] ->= [B, BAABA] {- DP Nontop (Mirror (Input 9)) -}
  [BAABAA] ->= [a, b, a] {- DP Nontop (Mirror (Input 10)) -}
  [a, A] ->= [A, A] {- DP Nontop (Mirror (Input 11)) -}
  [b, A] ->= [AB] {- DP Nontop (Mirror (Input 12)) -}
  [a, AB] ->= [ABA] {- DP Nontop (Mirror (Input 13)) -}
  [b, AB] ->= [B, AB] {- DP Nontop (Mirror (Input 14)) -}
  [ABA] ->= [a, a, b, a, a, b] {- DP Nontop (Mirror (Input 15)) -}
  [BAABAA#] |-> [a#] {- DP (Top 2) (Mirror (Input 10)) -}
  [BAABAA#] |-> [a#, b, a] {- DP (Top 0) (Mirror (Input 10)) -}
  [BAABAA#] |-> [b#, a] {- DP (Top 1) (Mirror (Input 10)) -}
  [a#, BAABA] |-> [BAABAA#] {- DP (Top 0) (Mirror (Input 8)) -}
  [a#, AB] |-> [ABA#] {- DP (Top 0) (Mirror (Input 13)) -}
  [ABA#] |-> [a#, a, b] {- DP (Top 3) (Mirror (Input 15)) -}
  [ABA#] |-> [a#, a, b, a, a, b] {- DP (Top 0) (Mirror (Input 15)) -}
  [ABA#] |-> [a#, b] {- DP (Top 4) (Mirror (Input 15)) -}
  [ABA#] |-> [a#, b, a, a, b] {- DP (Top 1) (Mirror (Input 15)) -}
  [ABA#] |-> [b#] {- DP (Top 5) (Mirror (Input 15)) -}
  [ABA#] |-> [b#, a, a, b] {- DP (Top 2) (Mirror (Input 15)) -}
reason
  (BAAB, 0/1)
  (BAABAA, 0/1)
  (BAABA, 0/1)
  (a, 0/1)
  (B, 0/1)
  (b, 0/1)
  (ABA, 0/1)
  (BA, 0/1)
  (AB, 0/1)
  (BAA, 0/1)
  (A, 0/1)
  (BAABAA#, 1/1)
  (a#, 1/1)
  (b#, 0/1)
  (ABA#, 1/1)
   property Termination
has value Just True
for SRS
  [a, B] ->= [BA] {- DP Nontop (Mirror (Input 0)) -}
  [b, B] ->= [B, B] {- DP Nontop (Mirror (Input 1)) -}
  [a, BA] ->= [BAA] {- DP Nontop (Mirror (Input 2)) -}
  [b, BA] ->= [B, BA] {- DP Nontop (Mirror (Input 3)) -}
  [a, BAA] ->= [A, BAA] {- DP Nontop (Mirror (Input 4)) -}
  [b, BAA] ->= [BAAB] {- DP Nontop (Mirror (Input 5)) -}
  [a, BAAB] ->= [BAABA] {- DP Nontop (Mirror (Input 6)) -}
  [b, BAAB] ->= [B, BAAB] {- DP Nontop (Mirror (Input 7)) -}
  [a, BAABA] ->= [BAABAA] {- DP Nontop (Mirror (Input 8)) -}
  [b, BAABA] ->= [B, BAABA] {- DP Nontop (Mirror (Input 9)) -}
  [BAABAA] ->= [a, b, a] {- DP Nontop (Mirror (Input 10)) -}
  [a, A] ->= [A, A] {- DP Nontop (Mirror (Input 11)) -}
  [b, A] ->= [AB] {- DP Nontop (Mirror (Input 12)) -}
  [a, AB] ->= [ABA] {- DP Nontop (Mirror (Input 13)) -}
  [b, AB] ->= [B, AB] {- DP Nontop (Mirror (Input 14)) -}
  [ABA] ->= [a, a, b, a, a, b] {- DP Nontop (Mirror (Input 15)) -}
  [BAABAA#] |-> [a#] {- DP (Top 2) (Mirror (Input 10)) -}
  [BAABAA#] |-> [a#, b, a] {- DP (Top 0) (Mirror (Input 10)) -}
  [a#, BAABA] |-> [BAABAA#] {- DP (Top 0) (Mirror (Input 8)) -}
  [a#, AB] |-> [ABA#] {- DP (Top 0) (Mirror (Input 13)) -}
  [ABA#] |-> [a#, a, b] {- DP (Top 3) (Mirror (Input 15)) -}
  [ABA#] |-> [a#, a, b, a, a, b] {- DP (Top 0) (Mirror (Input 15)) -}
  [ABA#] |-> [a#, b] {- DP (Top 4) (Mirror (Input 15)) -}
  [ABA#] |-> [a#, b, a, a, b] {- DP (Top 1) (Mirror (Input 15)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [BAABAA#] |-> [a#] {- DP (Top 2) (Mirror (Input 10)) -}
  [a#, BAABA] |-> [BAABAA#] {- DP (Top 0) (Mirror (Input 8)) -}
  [BAABAA#] |-> [a#, b, a] {- DP (Top 0) (Mirror (Input 10)) -}
  [a#, AB] |-> [ABA#] {- DP (Top 0) (Mirror (Input 13)) -}
  [ABA#] |-> [a#, a, b] {- DP (Top 3) (Mirror (Input 15)) -}
  [ABA#] |-> [a#, a, b, a, a, b] {- DP (Top 0) (Mirror (Input 15)) -}
  [ABA#] |-> [a#, b] {- DP (Top 4) (Mirror (Input 15)) -}
  [ABA#] |-> [a#, b, a, a, b] {- DP (Top 1) (Mirror (Input 15)) -}
  [a, B] ->= [BA] {- DP Nontop (Mirror (Input 0)) -}
  [b, B] ->= [B, B] {- DP Nontop (Mirror (Input 1)) -}
  [a, BA] ->= [BAA] {- DP Nontop (Mirror (Input 2)) -}
  [b, BA] ->= [B, BA] {- DP Nontop (Mirror (Input 3)) -}
  [a, BAA] ->= [A, BAA] {- DP Nontop (Mirror (Input 4)) -}
  [b, BAA] ->= [BAAB] {- DP Nontop (Mirror (Input 5)) -}
  [a, BAAB] ->= [BAABA] {- DP Nontop (Mirror (Input 6)) -}
  [b, BAAB] ->= [B, BAAB] {- DP Nontop (Mirror (Input 7)) -}
  [a, BAABA] ->= [BAABAA] {- DP Nontop (Mirror (Input 8)) -}
  [b, BAABA] ->= [B, BAABA] {- DP Nontop (Mirror (Input 9)) -}
  [BAABAA] ->= [a, b, a] {- DP Nontop (Mirror (Input 10)) -}
  [a, A] ->= [A, A] {- DP Nontop (Mirror (Input 11)) -}
  [b, A] ->= [AB] {- DP Nontop (Mirror (Input 12)) -}
  [a, AB] ->= [ABA] {- DP Nontop (Mirror (Input 13)) -}
  [b, AB] ->= [B, AB] {- DP Nontop (Mirror (Input 14)) -}
  [ABA] ->= [a, a, b, a, a, b] {- DP Nontop (Mirror (Input 15)) -}
reason
  ( BAAB
  , Wk  / 0A 2A  2A \
        | -  -2A -  |
        \ -  -   0A / )
  ( BAABAA
  , Wk  / 0A  2A 2A \
        | -1A 0A 0A |
        \ -   -  0A / )
  ( BAABA
  , Wk  / 0A  2A  2A \
        | -2A -2A -  |
        \ -   -   0A / )
  ( a
  , Wk  / 0A  -  -  \
        | -2A 1A -  |
        \ -   -  0A / )
  ( B
  , Wk  / 0A 2A 2A \
        | -  -  -  |
        \ -  -  0A / )
  ( b
  , Wk  / 0A 1A  -  \
        | -  -2A -  |
        \ -  -   0A / )
  ( ABA
  , Wk  / 2A 1A 2A \
        | 0A 0A 0A |
        \ -  -  0A / )
  ( BA
  , Wk  / 0A  2A 2A \
        | -2A 0A 0A |
        \ -   -  0A / )
  ( AB
  , Wk  / 2A  2A 2A \
        | -1A -  -  |
        \ -   -  0A / )
  ( BAA
  , Wk  / -   -  0A \
        | -1A 1A 1A |
        \ -   -  0A / )
  ( A
  , Wk  / -  -  0A \
        | 1A 1A 1A |
        \ -  -  0A / )
  ( BAABAA#
  , Wk  / 0A 2A 2A \
        | -  -  -  |
        \ -  -  0A / )
  ( a#
  , Wk  / 0A 0A -2A \
        | -  -  -   |
        \ -  -  0A  / )
  ( ABA#
  , Wk  / 2A 2A 2A \
        | -  -  -  |
        \ -  -  0A / )
   property Termination
has value Just True
for SRS
  [BAABAA#] |-> [a#] {- DP (Top 2) (Mirror (Input 10)) -}
  [a#, BAABA] |-> [BAABAA#] {- DP (Top 0) (Mirror (Input 8)) -}
  [BAABAA#] |-> [a#, b, a] {- DP (Top 0) (Mirror (Input 10)) -}
  [a#, AB] |-> [ABA#] {- DP (Top 0) (Mirror (Input 13)) -}
  [a, B] ->= [BA] {- DP Nontop (Mirror (Input 0)) -}
  [b, B] ->= [B, B] {- DP Nontop (Mirror (Input 1)) -}
  [a, BA] ->= [BAA] {- DP Nontop (Mirror (Input 2)) -}
  [b, BA] ->= [B, BA] {- DP Nontop (Mirror (Input 3)) -}
  [a, BAA] ->= [A, BAA] {- DP Nontop (Mirror (Input 4)) -}
  [b, BAA] ->= [BAAB] {- DP Nontop (Mirror (Input 5)) -}
  [a, BAAB] ->= [BAABA] {- DP Nontop (Mirror (Input 6)) -}
  [b, BAAB] ->= [B, BAAB] {- DP Nontop (Mirror (Input 7)) -}
  [a, BAABA] ->= [BAABAA] {- DP Nontop (Mirror (Input 8)) -}
  [b, BAABA] ->= [B, BAABA] {- DP Nontop (Mirror (Input 9)) -}
  [BAABAA] ->= [a, b, a] {- DP Nontop (Mirror (Input 10)) -}
  [a, A] ->= [A, A] {- DP Nontop (Mirror (Input 11)) -}
  [b, A] ->= [AB] {- DP Nontop (Mirror (Input 12)) -}
  [a, AB] ->= [ABA] {- DP Nontop (Mirror (Input 13)) -}
  [b, AB] ->= [B, AB] {- DP Nontop (Mirror (Input 14)) -}
  [ABA] ->= [a, a, b, a, a, b] {- DP Nontop (Mirror (Input 15)) -}
reason
  (BAAB, 0/1)
  (BAABAA, 0/1)
  (BAABA, 0/1)
  (a, 0/1)
  (B, 0/1)
  (b, 0/1)
  (ABA, 0/1)
  (BA, 0/1)
  (AB, 0/1)
  (BAA, 0/1)
  (A, 0/1)
  (BAABAA#, 1/1)
  (a#, 1/1)
  (ABA#, 0/1)
   property Termination
has value Just True
for SRS
  [BAABAA#] |-> [a#] {- DP (Top 2) (Mirror (Input 10)) -}
  [a#, BAABA] |-> [BAABAA#] {- DP (Top 0) (Mirror (Input 8)) -}
  [BAABAA#] |-> [a#, b, a] {- DP (Top 0) (Mirror (Input 10)) -}
  [a, B] ->= [BA] {- DP Nontop (Mirror (Input 0)) -}
  [b, B] ->= [B, B] {- DP Nontop (Mirror (Input 1)) -}
  [a, BA] ->= [BAA] {- DP Nontop (Mirror (Input 2)) -}
  [b, BA] ->= [B, BA] {- DP Nontop (Mirror (Input 3)) -}
  [a, BAA] ->= [A, BAA] {- DP Nontop (Mirror (Input 4)) -}
  [b, BAA] ->= [BAAB] {- DP Nontop (Mirror (Input 5)) -}
  [a, BAAB] ->= [BAABA] {- DP Nontop (Mirror (Input 6)) -}
  [b, BAAB] ->= [B, BAAB] {- DP Nontop (Mirror (Input 7)) -}
  [a, BAABA] ->= [BAABAA] {- DP Nontop (Mirror (Input 8)) -}
  [b, BAABA] ->= [B, BAABA] {- DP Nontop (Mirror (Input 9)) -}
  [BAABAA] ->= [a, b, a] {- DP Nontop (Mirror (Input 10)) -}
  [a, A] ->= [A, A] {- DP Nontop (Mirror (Input 11)) -}
  [b, A] ->= [AB] {- DP Nontop (Mirror (Input 12)) -}
  [a, AB] ->= [ABA] {- DP Nontop (Mirror (Input 13)) -}
  [b, AB] ->= [B, AB] {- DP Nontop (Mirror (Input 14)) -}
  [ABA] ->= [a, a, b, a, a, b] {- DP Nontop (Mirror (Input 15)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [BAABAA#] |-> [a#] {- DP (Top 2) (Mirror (Input 10)) -}
  [a#, BAABA] |-> [BAABAA#] {- DP (Top 0) (Mirror (Input 8)) -}
  [BAABAA#] |-> [a#, b, a] {- DP (Top 0) (Mirror (Input 10)) -}
  [a, B] ->= [BA] {- DP Nontop (Mirror (Input 0)) -}
  [b, B] ->= [B, B] {- DP Nontop (Mirror (Input 1)) -}
  [a, BA] ->= [BAA] {- DP Nontop (Mirror (Input 2)) -}
  [b, BA] ->= [B, BA] {- DP Nontop (Mirror (Input 3)) -}
  [a, BAA] ->= [A, BAA] {- DP Nontop (Mirror (Input 4)) -}
  [b, BAA] ->= [BAAB] {- DP Nontop (Mirror (Input 5)) -}
  [a, BAAB] ->= [BAABA] {- DP Nontop (Mirror (Input 6)) -}
  [b, BAAB] ->= [B, BAAB] {- DP Nontop (Mirror (Input 7)) -}
  [a, BAABA] ->= [BAABAA] {- DP Nontop (Mirror (Input 8)) -}
  [b, BAABA] ->= [B, BAABA] {- DP Nontop (Mirror (Input 9)) -}
  [BAABAA] ->= [a, b, a] {- DP Nontop (Mirror (Input 10)) -}
  [a, A] ->= [A, A] {- DP Nontop (Mirror (Input 11)) -}
  [b, A] ->= [AB] {- DP Nontop (Mirror (Input 12)) -}
  [a, AB] ->= [ABA] {- DP Nontop (Mirror (Input 13)) -}
  [b, AB] ->= [B, AB] {- DP Nontop (Mirror (Input 14)) -}
  [ABA] ->= [a, a, b, a, a, b] {- DP Nontop (Mirror (Input 15)) -}
reason
  ( BAAB
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( BAABAA
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( BAABA
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( a
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( B
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( b
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( ABA
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( BA
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( AB
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( BAA
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( A
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( BAABAA#
  , Wk  / 12A 12A 12A - \
        | 12A 12A 12A - |
        | 12A 12A 12A - |
        \ -   -   -   - / )
  ( a#
  , Wk  / 10A 12A 12A - \
        | 10A 12A 12A - |
        | 10A 12A 12A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [BAABAA#] |-> [a#] {- DP (Top 2) (Mirror (Input 10)) -}
  [a#, BAABA] |-> [BAABAA#] {- DP (Top 0) (Mirror (Input 8)) -}
  [a, B] ->= [BA] {- DP Nontop (Mirror (Input 0)) -}
  [b, B] ->= [B, B] {- DP Nontop (Mirror (Input 1)) -}
  [a, BA] ->= [BAA] {- DP Nontop (Mirror (Input 2)) -}
  [b, BA] ->= [B, BA] {- DP Nontop (Mirror (Input 3)) -}
  [a, BAA] ->= [A, BAA] {- DP Nontop (Mirror (Input 4)) -}
  [b, BAA] ->= [BAAB] {- DP Nontop (Mirror (Input 5)) -}
  [a, BAAB] ->= [BAABA] {- DP Nontop (Mirror (Input 6)) -}
  [b, BAAB] ->= [B, BAAB] {- DP Nontop (Mirror (Input 7)) -}
  [a, BAABA] ->= [BAABAA] {- DP Nontop (Mirror (Input 8)) -}
  [b, BAABA] ->= [B, BAABA] {- DP Nontop (Mirror (Input 9)) -}
  [BAABAA] ->= [a, b, a] {- DP Nontop (Mirror (Input 10)) -}
  [a, A] ->= [A, A] {- DP Nontop (Mirror (Input 11)) -}
  [b, A] ->= [AB] {- DP Nontop (Mirror (Input 12)) -}
  [a, AB] ->= [ABA] {- DP Nontop (Mirror (Input 13)) -}
  [b, AB] ->= [B, AB] {- DP Nontop (Mirror (Input 14)) -}
  [ABA] ->= [a, a, b, a, a, b] {- DP Nontop (Mirror (Input 15)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [BAABAA#] |-> [a#] {- DP (Top 2) (Mirror (Input 10)) -}
  [a#, BAABA] |-> [BAABAA#] {- DP (Top 0) (Mirror (Input 8)) -}
  [a, B] ->= [BA] {- DP Nontop (Mirror (Input 0)) -}
  [b, B] ->= [B, B] {- DP Nontop (Mirror (Input 1)) -}
  [a, BA] ->= [BAA] {- DP Nontop (Mirror (Input 2)) -}
  [b, BA] ->= [B, BA] {- DP Nontop (Mirror (Input 3)) -}
  [a, BAA] ->= [A, BAA] {- DP Nontop (Mirror (Input 4)) -}
  [b, BAA] ->= [BAAB] {- DP Nontop (Mirror (Input 5)) -}
  [a, BAAB] ->= [BAABA] {- DP Nontop (Mirror (Input 6)) -}
  [b, BAAB] ->= [B, BAAB] {- DP Nontop (Mirror (Input 7)) -}
  [a, BAABA] ->= [BAABAA] {- DP Nontop (Mirror (Input 8)) -}
  [b, BAABA] ->= [B, BAABA] {- DP Nontop (Mirror (Input 9)) -}
  [BAABAA] ->= [a, b, a] {- DP Nontop (Mirror (Input 10)) -}
  [a, A] ->= [A, A] {- DP Nontop (Mirror (Input 11)) -}
  [b, A] ->= [AB] {- DP Nontop (Mirror (Input 12)) -}
  [a, AB] ->= [ABA] {- DP Nontop (Mirror (Input 13)) -}
  [b, AB] ->= [B, AB] {- DP Nontop (Mirror (Input 14)) -}
  [ABA] ->= [a, a, b, a, a, b] {- DP Nontop (Mirror (Input 15)) -}
reason
  remove un-usable
    SRS
      [a, B] ->= [BA] {- DP Nontop (Mirror (Input 0)) -}
      [b, B] ->= [B, B] {- DP Nontop (Mirror (Input 1)) -}
      [a, BA] ->= [BAA] {- DP Nontop (Mirror (Input 2)) -}
      [b, BA] ->= [B, BA] {- DP Nontop (Mirror (Input 3)) -}
      [a, BAA] ->= [A, BAA] {- DP Nontop (Mirror (Input 4)) -}
      [b, BAA] ->= [BAAB] {- DP Nontop (Mirror (Input 5)) -}
      [a, BAAB] ->= [BAABA] {- DP Nontop (Mirror (Input 6)) -}
      [b, BAAB] ->= [B, BAAB] {- DP Nontop (Mirror (Input 7)) -}
      [a, BAABA] ->= [BAABAA] {- DP Nontop (Mirror (Input 8)) -}
      [b, BAABA] ->= [B, BAABA] {- DP Nontop (Mirror (Input 9)) -}
      [BAABAA] ->= [a, b, a] {- DP Nontop (Mirror (Input 10)) -}
      [a, A] ->= [A, A] {- DP Nontop (Mirror (Input 11)) -}
      [b, A] ->= [AB] {- DP Nontop (Mirror (Input 12)) -}
      [a, AB] ->= [ABA] {- DP Nontop (Mirror (Input 13)) -}
      [b, AB] ->= [B, AB] {- DP Nontop (Mirror (Input 14)) -}
      [ABA] ->= [a, a, b, a, a, b] {- DP Nontop (Mirror (Input 15)) -}
   property Termination
has value Just True
for SRS
  [BAABAA#] |-> [a#] {- DP (Top 2) (Mirror (Input 10)) -}
  [a#, BAABA] |-> [BAABAA#] {- DP (Top 0) (Mirror (Input 8)) -}
reason
  (BAABA, 2/1)
  (BAABAA#, 1/1)
  (a#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: \Mirror(16,11)\Deepee(11/16,15)\Weight\EDG(8/16,14)\Matrix{\ArcticBZ}{3}(4/16,14)\Weight\EDG(3/16,13)\Matrix{\Arctic}{3}\EDG(2/16,13)\Usable(2,3)\Weight(0,0)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))
