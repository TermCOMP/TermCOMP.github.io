YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/ivK5W.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRS Reverse [EQUIVALENT, 0 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 29 ms]
(4) QTRS
(5) DependencyPairsProof [EQUIVALENT, 4 ms]
(6) QDP
(7) MRRProof [EQUIVALENT, 61 ms]
(8) QDP
(9) DependencyGraphProof [EQUIVALENT, 3 ms]
(10) QDP
(11) QDPOrderProof [EQUIVALENT, 432 ms]
(12) QDP
(13) DependencyGraphProof [EQUIVALENT, 0 ms]
(14) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   r(e(x1)) -> w(r(x1))
   i(t(x1)) -> e(r(x1))
   e(w(x1)) -> r(i(x1))
   t(e(x1)) -> r(e(x1))
   w(r(x1)) -> i(t(x1))
   e(r(x1)) -> e(w(x1))
   r(i(t(e(r(x1))))) -> e(w(r(i(t(e(x1))))))

Q is empty.

----------------------------------------

(1) QTRS Reverse (EQUIVALENT)
We applied the QTRS Reverse Processor [REVERSE].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   e(r(x1)) -> r(w(x1))
   t(i(x1)) -> r(e(x1))
   w(e(x1)) -> i(r(x1))
   e(t(x1)) -> e(r(x1))
   r(w(x1)) -> t(i(x1))
   r(e(x1)) -> w(e(x1))
   r(e(t(i(r(x1))))) -> e(t(i(r(w(e(x1))))))

Q is empty.

----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(e(x_1)) = 1 + x_1
   POL(i(x_1)) = x_1
   POL(r(x_1)) = 2 + x_1
   POL(t(x_1)) = 3 + x_1
   POL(w(x_1)) = 1 + x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   e(t(x1)) -> e(r(x1))
   r(e(x1)) -> w(e(x1))




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   e(r(x1)) -> r(w(x1))
   t(i(x1)) -> r(e(x1))
   w(e(x1)) -> i(r(x1))
   r(w(x1)) -> t(i(x1))
   r(e(t(i(r(x1))))) -> e(t(i(r(w(e(x1))))))

Q is empty.

----------------------------------------

(5) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   E(r(x1)) -> R(w(x1))
   E(r(x1)) -> W(x1)
   T(i(x1)) -> R(e(x1))
   T(i(x1)) -> E(x1)
   W(e(x1)) -> R(x1)
   R(w(x1)) -> T(i(x1))
   R(e(t(i(r(x1))))) -> E(t(i(r(w(e(x1))))))
   R(e(t(i(r(x1))))) -> T(i(r(w(e(x1)))))
   R(e(t(i(r(x1))))) -> R(w(e(x1)))
   R(e(t(i(r(x1))))) -> W(e(x1))
   R(e(t(i(r(x1))))) -> E(x1)

The TRS R consists of the following rules:

   e(r(x1)) -> r(w(x1))
   t(i(x1)) -> r(e(x1))
   w(e(x1)) -> i(r(x1))
   r(w(x1)) -> t(i(x1))
   r(e(t(i(r(x1))))) -> e(t(i(r(w(e(x1))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.

Strictly oriented dependency pairs:

   E(r(x1)) -> W(x1)
   T(i(x1)) -> E(x1)
   R(e(t(i(r(x1))))) -> T(i(r(w(e(x1)))))
   R(e(t(i(r(x1))))) -> R(w(e(x1)))
   R(e(t(i(r(x1))))) -> W(e(x1))
   R(e(t(i(r(x1))))) -> E(x1)


Used ordering: Polynomial interpretation [POLO]:

   POL(E(x_1)) = 1 + x_1
   POL(R(x_1)) = 2 + x_1
   POL(T(x_1)) = 3 + x_1
   POL(W(x_1)) = 1 + x_1
   POL(e(x_1)) = 1 + x_1
   POL(i(x_1)) = x_1
   POL(r(x_1)) = 2 + x_1
   POL(t(x_1)) = 3 + x_1
   POL(w(x_1)) = 1 + x_1


----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   E(r(x1)) -> R(w(x1))
   T(i(x1)) -> R(e(x1))
   W(e(x1)) -> R(x1)
   R(w(x1)) -> T(i(x1))
   R(e(t(i(r(x1))))) -> E(t(i(r(w(e(x1))))))

The TRS R consists of the following rules:

   e(r(x1)) -> r(w(x1))
   t(i(x1)) -> r(e(x1))
   w(e(x1)) -> i(r(x1))
   r(w(x1)) -> t(i(x1))
   r(e(t(i(r(x1))))) -> e(t(i(r(w(e(x1))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   R(w(x1)) -> T(i(x1))
   T(i(x1)) -> R(e(x1))
   R(e(t(i(r(x1))))) -> E(t(i(r(w(e(x1))))))
   E(r(x1)) -> R(w(x1))

The TRS R consists of the following rules:

   e(r(x1)) -> r(w(x1))
   t(i(x1)) -> r(e(x1))
   w(e(x1)) -> i(r(x1))
   r(w(x1)) -> t(i(x1))
   r(e(t(i(r(x1))))) -> e(t(i(r(w(e(x1))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   E(r(x1)) -> R(w(x1))
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(R(x_1)) =  	[[0A]] 	 +  	[[-I, 0A, -I]] 	* 	x_1
>>>

   <<<
 POL(w(x_1)) =  	[[0A], [0A], [-I]] 	 +  	[[0A, 1A, 0A], [-I, 0A, -I], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(T(x_1)) =  	[[-I]] 	 +  	[[0A, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(i(x_1)) =  	[[0A], [-I], [0A]] 	 +  	[[-I, 0A, -I], [0A, -I, -I], [0A, -I, 0A]] 	* 	x_1
>>>

   <<<
 POL(e(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[0A, 0A, 0A], [-I, 0A, -I], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(t(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[0A, -I, -I], [1A, 0A, 0A], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(r(x_1)) =  	[[0A], [1A], [0A]] 	 +  	[[-I, 0A, -I], [0A, 1A, 0A], [-I, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(E(x_1)) =  	[[-I]] 	 +  	[[0A, 0A, -I]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   r(w(x1)) -> t(i(x1))
   t(i(x1)) -> r(e(x1))
   r(e(t(i(r(x1))))) -> e(t(i(r(w(e(x1))))))
   e(r(x1)) -> r(w(x1))
   w(e(x1)) -> i(r(x1))


----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   R(w(x1)) -> T(i(x1))
   T(i(x1)) -> R(e(x1))
   R(e(t(i(r(x1))))) -> E(t(i(r(w(e(x1))))))

The TRS R consists of the following rules:

   e(r(x1)) -> r(w(x1))
   t(i(x1)) -> r(e(x1))
   w(e(x1)) -> i(r(x1))
   r(w(x1)) -> t(i(x1))
   r(e(t(i(r(x1))))) -> e(t(i(r(w(e(x1))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 3 less nodes.
----------------------------------------

(14)
TRUE
