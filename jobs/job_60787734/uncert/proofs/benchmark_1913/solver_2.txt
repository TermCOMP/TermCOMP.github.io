YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/cXfYG.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) AND
    (5) QDP
        (6) UsableRulesProof [EQUIVALENT, 0 ms]
        (7) QDP
        (8) MRRProof [EQUIVALENT, 19 ms]
        (9) QDP
        (10) DependencyGraphProof [EQUIVALENT, 0 ms]
        (11) QDP
        (12) QDPOrderProof [EQUIVALENT, 5 ms]
        (13) QDP
        (14) DependencyGraphProof [EQUIVALENT, 0 ms]
        (15) TRUE
    (16) QDP
        (17) UsableRulesProof [EQUIVALENT, 0 ms]
        (18) QDP
        (19) QDPOrderProof [EQUIVALENT, 41 ms]
        (20) QDP
        (21) PisEmptyProof [EQUIVALENT, 0 ms]
        (22) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   b(a(a(x1))) -> a(b(c(x1)))
   c(a(x1)) -> a(c(x1))
   b(c(a(x1))) -> a(b(c(x1)))
   c(b(x1)) -> d(x1)
   a(d(x1)) -> d(a(x1))
   d(x1) -> b(a(x1))
   L(a(a(x1))) -> L(a(b(c(x1))))
   c(R(x1)) -> c(b(R(x1)))

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(a(a(x1))) -> A(b(c(x1)))
   B(a(a(x1))) -> B(c(x1))
   B(a(a(x1))) -> C(x1)
   C(a(x1)) -> A(c(x1))
   C(a(x1)) -> C(x1)
   B(c(a(x1))) -> A(b(c(x1)))
   B(c(a(x1))) -> B(c(x1))
   B(c(a(x1))) -> C(x1)
   C(b(x1)) -> D(x1)
   A(d(x1)) -> D(a(x1))
   A(d(x1)) -> A(x1)
   D(x1) -> B(a(x1))
   D(x1) -> A(x1)
   L^1(a(a(x1))) -> L^1(a(b(c(x1))))
   L^1(a(a(x1))) -> A(b(c(x1)))
   L^1(a(a(x1))) -> B(c(x1))
   L^1(a(a(x1))) -> C(x1)
   C(R(x1)) -> C(b(R(x1)))
   C(R(x1)) -> B(R(x1))

The TRS R consists of the following rules:

   b(a(a(x1))) -> a(b(c(x1)))
   c(a(x1)) -> a(c(x1))
   b(c(a(x1))) -> a(b(c(x1)))
   c(b(x1)) -> d(x1)
   a(d(x1)) -> d(a(x1))
   d(x1) -> b(a(x1))
   L(a(a(x1))) -> L(a(b(c(x1))))
   c(R(x1)) -> c(b(R(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 4 less nodes.
----------------------------------------

(4)
Complex Obligation (AND)

----------------------------------------

(5)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(d(x1)) -> D(a(x1))
   D(x1) -> B(a(x1))
   B(a(a(x1))) -> A(b(c(x1)))
   A(d(x1)) -> A(x1)
   B(a(a(x1))) -> B(c(x1))
   B(a(a(x1))) -> C(x1)
   C(a(x1)) -> A(c(x1))
   C(a(x1)) -> C(x1)
   C(b(x1)) -> D(x1)
   D(x1) -> A(x1)
   C(R(x1)) -> C(b(R(x1)))
   B(c(a(x1))) -> A(b(c(x1)))
   B(c(a(x1))) -> B(c(x1))
   B(c(a(x1))) -> C(x1)

The TRS R consists of the following rules:

   b(a(a(x1))) -> a(b(c(x1)))
   c(a(x1)) -> a(c(x1))
   b(c(a(x1))) -> a(b(c(x1)))
   c(b(x1)) -> d(x1)
   a(d(x1)) -> d(a(x1))
   d(x1) -> b(a(x1))
   L(a(a(x1))) -> L(a(b(c(x1))))
   c(R(x1)) -> c(b(R(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(6) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(d(x1)) -> D(a(x1))
   D(x1) -> B(a(x1))
   B(a(a(x1))) -> A(b(c(x1)))
   A(d(x1)) -> A(x1)
   B(a(a(x1))) -> B(c(x1))
   B(a(a(x1))) -> C(x1)
   C(a(x1)) -> A(c(x1))
   C(a(x1)) -> C(x1)
   C(b(x1)) -> D(x1)
   D(x1) -> A(x1)
   C(R(x1)) -> C(b(R(x1)))
   B(c(a(x1))) -> A(b(c(x1)))
   B(c(a(x1))) -> B(c(x1))
   B(c(a(x1))) -> C(x1)

The TRS R consists of the following rules:

   c(a(x1)) -> a(c(x1))
   c(b(x1)) -> d(x1)
   c(R(x1)) -> c(b(R(x1)))
   a(d(x1)) -> d(a(x1))
   d(x1) -> b(a(x1))
   b(a(a(x1))) -> a(b(c(x1)))
   b(c(a(x1))) -> a(b(c(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.

Strictly oriented dependency pairs:

   A(d(x1)) -> A(x1)
   B(a(a(x1))) -> B(c(x1))
   B(a(a(x1))) -> C(x1)
   C(a(x1)) -> A(c(x1))
   C(a(x1)) -> C(x1)
   C(b(x1)) -> D(x1)
   B(c(a(x1))) -> B(c(x1))
   B(c(a(x1))) -> C(x1)


Used ordering: Polynomial interpretation [POLO]:

   POL(A(x_1)) = 1 + 2*x_1
   POL(B(x_1)) = x_1
   POL(C(x_1)) = 2 + 2*x_1
   POL(D(x_1)) = 1 + 2*x_1
   POL(R(x_1)) = 2*x_1
   POL(a(x_1)) = 1 + 2*x_1
   POL(b(x_1)) = x_1
   POL(c(x_1)) = 1 + 2*x_1
   POL(d(x_1)) = 1 + 2*x_1


----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(d(x1)) -> D(a(x1))
   D(x1) -> B(a(x1))
   B(a(a(x1))) -> A(b(c(x1)))
   D(x1) -> A(x1)
   C(R(x1)) -> C(b(R(x1)))
   B(c(a(x1))) -> A(b(c(x1)))

The TRS R consists of the following rules:

   c(a(x1)) -> a(c(x1))
   c(b(x1)) -> d(x1)
   c(R(x1)) -> c(b(R(x1)))
   a(d(x1)) -> d(a(x1))
   d(x1) -> b(a(x1))
   b(a(a(x1))) -> a(b(c(x1)))
   b(c(a(x1))) -> a(b(c(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   D(x1) -> B(a(x1))
   B(a(a(x1))) -> A(b(c(x1)))
   A(d(x1)) -> D(a(x1))
   D(x1) -> A(x1)
   B(c(a(x1))) -> A(b(c(x1)))

The TRS R consists of the following rules:

   c(a(x1)) -> a(c(x1))
   c(b(x1)) -> d(x1)
   c(R(x1)) -> c(b(R(x1)))
   a(d(x1)) -> d(a(x1))
   d(x1) -> b(a(x1))
   b(a(a(x1))) -> a(b(c(x1)))
   b(c(a(x1))) -> a(b(c(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   A(d(x1)) -> D(a(x1))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(A(x_1)) = x_1
   POL(B(x_1)) = 0
   POL(D(x_1)) = x_1
   POL(R(x_1)) = 1 + x_1
   POL(a(x_1)) = x_1
   POL(b(x_1)) = 0
   POL(c(x_1)) = 0
   POL(d(x_1)) = 1 + x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   d(x1) -> b(a(x1))
   b(a(a(x1))) -> a(b(c(x1)))
   a(d(x1)) -> d(a(x1))
   b(c(a(x1))) -> a(b(c(x1)))


----------------------------------------

(13)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   D(x1) -> B(a(x1))
   B(a(a(x1))) -> A(b(c(x1)))
   D(x1) -> A(x1)
   B(c(a(x1))) -> A(b(c(x1)))

The TRS R consists of the following rules:

   c(a(x1)) -> a(c(x1))
   c(b(x1)) -> d(x1)
   c(R(x1)) -> c(b(R(x1)))
   a(d(x1)) -> d(a(x1))
   d(x1) -> b(a(x1))
   b(a(a(x1))) -> a(b(c(x1)))
   b(c(a(x1))) -> a(b(c(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(14) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 4 less nodes.
----------------------------------------

(15)
TRUE

----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   L^1(a(a(x1))) -> L^1(a(b(c(x1))))

The TRS R consists of the following rules:

   b(a(a(x1))) -> a(b(c(x1)))
   c(a(x1)) -> a(c(x1))
   b(c(a(x1))) -> a(b(c(x1)))
   c(b(x1)) -> d(x1)
   a(d(x1)) -> d(a(x1))
   d(x1) -> b(a(x1))
   L(a(a(x1))) -> L(a(b(c(x1))))
   c(R(x1)) -> c(b(R(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   L^1(a(a(x1))) -> L^1(a(b(c(x1))))

The TRS R consists of the following rules:

   c(a(x1)) -> a(c(x1))
   c(b(x1)) -> d(x1)
   c(R(x1)) -> c(b(R(x1)))
   a(d(x1)) -> d(a(x1))
   d(x1) -> b(a(x1))
   b(a(a(x1))) -> a(b(c(x1)))
   b(c(a(x1))) -> a(b(c(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   L^1(a(a(x1))) -> L^1(a(b(c(x1))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( L^1_1(x_1) ) = max{0, x_1 - 2}
POL( a_1(x_1) ) = x_1 + 2
POL( b_1(x_1) ) = max{0, x_1 - 2}
POL( c_1(x_1) ) = x_1 + 2
POL( d_1(x_1) ) = x_1
POL( R_1(x_1) ) = 0

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   c(a(x1)) -> a(c(x1))
   c(b(x1)) -> d(x1)
   c(R(x1)) -> c(b(R(x1)))
   d(x1) -> b(a(x1))
   b(a(a(x1))) -> a(b(c(x1)))
   a(d(x1)) -> d(a(x1))
   b(c(a(x1))) -> a(b(c(x1)))


----------------------------------------

(20)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   c(a(x1)) -> a(c(x1))
   c(b(x1)) -> d(x1)
   c(R(x1)) -> c(b(R(x1)))
   a(d(x1)) -> d(a(x1))
   d(x1) -> b(a(x1))
   b(a(a(x1))) -> a(b(c(x1)))
   b(c(a(x1))) -> a(b(c(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(22)
YES
