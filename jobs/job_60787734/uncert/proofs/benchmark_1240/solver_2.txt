YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/bLzJ9.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) QDP
(5) QDPOrderProof [EQUIVALENT, 37 ms]
(6) QDP
(7) UsableRulesProof [EQUIVALENT, 0 ms]
(8) QDP
(9) MNOCProof [EQUIVALENT, 0 ms]
(10) QDP
(11) MRRProof [EQUIVALENT, 2 ms]
(12) QDP
(13) PisEmptyProof [EQUIVALENT, 0 ms]
(14) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(x1) -> b(x1)
   a(a(b(x1))) -> a(b(a(a(c(x1)))))
   c(b(x1)) -> x1

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(a(b(x1))) -> A(b(a(a(c(x1)))))
   A(a(b(x1))) -> A(a(c(x1)))
   A(a(b(x1))) -> A(c(x1))
   A(a(b(x1))) -> C(x1)

The TRS R consists of the following rules:

   a(x1) -> b(x1)
   a(a(b(x1))) -> a(b(a(a(c(x1)))))
   c(b(x1)) -> x1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 2 less nodes.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(a(b(x1))) -> A(c(x1))
   A(a(b(x1))) -> A(a(c(x1)))

The TRS R consists of the following rules:

   a(x1) -> b(x1)
   a(a(b(x1))) -> a(b(a(a(c(x1)))))
   c(b(x1)) -> x1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   A(a(b(x1))) -> A(a(c(x1)))
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(A(x_1)) =  	[[0A]] 	 +  	[[-I, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(a(x_1)) =  	[[1A], [0A], [0A]] 	 +  	[[1A, 0A, 1A], [0A, -I, 0A], [0A, -I, 0A]] 	* 	x_1
>>>

   <<<
 POL(b(x_1)) =  	[[1A], [0A], [-I]] 	 +  	[[-I, 0A, 1A], [0A, -I, 0A], [0A, -I, 0A]] 	* 	x_1
>>>

   <<<
 POL(c(x_1)) =  	[[0A], [1A], [0A]] 	 +  	[[-I, -I, 0A], [0A, 0A, 1A], [-I, -I, 0A]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   c(b(x1)) -> x1
   a(x1) -> b(x1)
   a(a(b(x1))) -> a(b(a(a(c(x1)))))


----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(a(b(x1))) -> A(c(x1))

The TRS R consists of the following rules:

   a(x1) -> b(x1)
   a(a(b(x1))) -> a(b(a(a(c(x1)))))
   c(b(x1)) -> x1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(a(b(x1))) -> A(c(x1))

The TRS R consists of the following rules:

   c(b(x1)) -> x1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) MNOCProof (EQUIVALENT)
We use the modular non-overlap check [LPAR04] to enlarge Q to all left-hand sides of R.
----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(a(b(x1))) -> A(c(x1))

The TRS R consists of the following rules:

   c(b(x1)) -> x1

The set Q consists of the following terms:

   c(b(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.

Strictly oriented dependency pairs:

   A(a(b(x1))) -> A(c(x1))

Strictly oriented rules of the TRS R:

   c(b(x1)) -> x1

Used ordering: Polynomial interpretation [POLO]:

   POL(A(x_1)) = 3*x_1
   POL(a(x_1)) = 3 + x_1
   POL(b(x_1)) = 2 + 3*x_1
   POL(c(x_1)) = x_1


----------------------------------------

(12)
Obligation:
Q DP problem:
P is empty.
R is empty.
The set Q consists of the following terms:

   c(b(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(14)
YES
