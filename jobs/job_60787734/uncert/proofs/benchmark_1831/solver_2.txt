YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/LXe3i.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 12 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 0 ms]
(4) QTRS
(5) DependencyPairsProof [EQUIVALENT, 0 ms]
(6) QDP
(7) MRRProof [EQUIVALENT, 35 ms]
(8) QDP
(9) DependencyGraphProof [EQUIVALENT, 2 ms]
(10) AND
    (11) QDP
        (12) UsableRulesProof [EQUIVALENT, 0 ms]
        (13) QDP
        (14) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (15) YES
    (16) QDP
        (17) QDPOrderProof [EQUIVALENT, 4 ms]
        (18) QDP
        (19) PisEmptyProof [EQUIVALENT, 0 ms]
        (20) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   P(x1) -> Q(Q(p(x1)))
   p(p(x1)) -> q(q(x1))
   p(Q(Q(x1))) -> Q(Q(p(x1)))
   Q(p(q(x1))) -> q(p(Q(x1)))
   q(q(p(x1))) -> p(q(q(x1)))
   q(Q(x1)) -> x1
   Q(q(x1)) -> x1
   p(P(x1)) -> x1
   P(p(x1)) -> x1

Q is empty.

----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(P(x_1)) = 2 + x_1
   POL(Q(x_1)) = 1 + x_1
   POL(p(x_1)) = x_1
   POL(q(x_1)) = x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   q(Q(x1)) -> x1
   Q(q(x1)) -> x1
   p(P(x1)) -> x1
   P(p(x1)) -> x1




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   P(x1) -> Q(Q(p(x1)))
   p(p(x1)) -> q(q(x1))
   p(Q(Q(x1))) -> Q(Q(p(x1)))
   Q(p(q(x1))) -> q(p(Q(x1)))
   q(q(p(x1))) -> p(q(q(x1)))

Q is empty.

----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(P(x_1)) = 2 + x_1
   POL(Q(x_1)) = x_1
   POL(p(x_1)) = 1 + x_1
   POL(q(x_1)) = x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   P(x1) -> Q(Q(p(x1)))
   p(p(x1)) -> q(q(x1))




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   p(Q(Q(x1))) -> Q(Q(p(x1)))
   Q(p(q(x1))) -> q(p(Q(x1)))
   q(q(p(x1))) -> p(q(q(x1)))

Q is empty.

----------------------------------------

(5) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   P(Q(Q(x1))) -> Q^1(Q(p(x1)))
   P(Q(Q(x1))) -> Q^1(p(x1))
   P(Q(Q(x1))) -> P(x1)
   Q^1(p(q(x1))) -> Q^2(p(Q(x1)))
   Q^1(p(q(x1))) -> P(Q(x1))
   Q^1(p(q(x1))) -> Q^1(x1)
   Q^2(q(p(x1))) -> P(q(q(x1)))
   Q^2(q(p(x1))) -> Q^2(q(x1))
   Q^2(q(p(x1))) -> Q^2(x1)

The TRS R consists of the following rules:

   p(Q(Q(x1))) -> Q(Q(p(x1)))
   Q(p(q(x1))) -> q(p(Q(x1)))
   q(q(p(x1))) -> p(q(q(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.

Strictly oriented dependency pairs:

   Q^1(p(q(x1))) -> Q^2(p(Q(x1)))
   Q^1(p(q(x1))) -> P(Q(x1))
   Q^1(p(q(x1))) -> Q^1(x1)
   Q^2(q(p(x1))) -> Q^2(x1)

Strictly oriented rules of the TRS R:

   Q(p(q(x1))) -> q(p(Q(x1)))

Used ordering: Polynomial interpretation [POLO]:

   POL(P(x_1)) = x_1
   POL(Q(x_1)) = 2*x_1
   POL(Q^1(x_1)) = 2*x_1
   POL(Q^2(x_1)) = 1 + 2*x_1
   POL(p(x_1)) = x_1
   POL(q(x_1)) = 1 + 2*x_1


----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   P(Q(Q(x1))) -> Q^1(Q(p(x1)))
   P(Q(Q(x1))) -> Q^1(p(x1))
   P(Q(Q(x1))) -> P(x1)
   Q^2(q(p(x1))) -> P(q(q(x1)))
   Q^2(q(p(x1))) -> Q^2(q(x1))

The TRS R consists of the following rules:

   p(Q(Q(x1))) -> Q(Q(p(x1)))
   q(q(p(x1))) -> p(q(q(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 3 less nodes.
----------------------------------------

(10)
Complex Obligation (AND)

----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   P(Q(Q(x1))) -> P(x1)

The TRS R consists of the following rules:

   p(Q(Q(x1))) -> Q(Q(p(x1)))
   q(q(p(x1))) -> p(q(q(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(13)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   P(Q(Q(x1))) -> P(x1)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(14) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*P(Q(Q(x1))) -> P(x1)
The graph contains the following edges 1 > 1


----------------------------------------

(15)
YES

----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   Q^2(q(p(x1))) -> Q^2(q(x1))

The TRS R consists of the following rules:

   p(Q(Q(x1))) -> Q(Q(p(x1)))
   q(q(p(x1))) -> p(q(q(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   Q^2(q(p(x1))) -> Q^2(q(x1))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(Q(x_1)) = x_1
   POL(Q^2(x_1)) = x_1
   POL(p(x_1)) = 1 + x_1
   POL(q(x_1)) = x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   q(q(p(x1))) -> p(q(q(x1)))
   p(Q(Q(x1))) -> Q(Q(p(x1)))


----------------------------------------

(18)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   p(Q(Q(x1))) -> Q(Q(p(x1)))
   q(q(p(x1))) -> p(q(q(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(20)
YES
