YES

Problem 1: 

(VAR vu95NonEmpty x1)
(RULES
num0(num2(num0(x1))) -> num1(num0(num1(x1)))
num0(num2(num1(x1))) -> num1(num0(num2(x1)))
num0(num2(R(x1))) -> num1(num0(num1(R(x1))))
num1(num2(num0(x1))) -> num2(num0(num1(x1)))
num1(num2(num1(x1))) -> num2(num0(num2(x1)))
num1(num2(R(x1))) -> num2(num0(num1(R(x1))))
L(num2(num0(x1))) -> L(num1(num0(num1(x1))))
L(num2(num1(x1))) -> L(num1(num0(num2(x1))))
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 NUM0(num2(num0(x1))) -> NUM0(num1(x1))
 NUM0(num2(num0(x1))) -> NUM1(num0(num1(x1)))
 NUM0(num2(num0(x1))) -> NUM1(x1)
 NUM0(num2(num1(x1))) -> NUM0(num2(x1))
 NUM0(num2(num1(x1))) -> NUM1(num0(num2(x1)))
 NUM1(num2(num0(x1))) -> NUM0(num1(x1))
 NUM1(num2(num0(x1))) -> NUM1(x1)
 NUM1(num2(num1(x1))) -> NUM0(num2(x1))
 LSharp(num2(num0(x1))) -> NUM0(num1(x1))
 LSharp(num2(num0(x1))) -> NUM1(num0(num1(x1)))
 LSharp(num2(num0(x1))) -> NUM1(x1)
 LSharp(num2(num0(x1))) -> LSharp(num1(num0(num1(x1))))
 LSharp(num2(num1(x1))) -> NUM0(num2(x1))
 LSharp(num2(num1(x1))) -> NUM1(num0(num2(x1)))
 LSharp(num2(num1(x1))) -> LSharp(num1(num0(num2(x1))))
-> Rules:
 num0(num2(num0(x1))) -> num1(num0(num1(x1)))
 num0(num2(num1(x1))) -> num1(num0(num2(x1)))
 num0(num2(R(x1))) -> num1(num0(num1(R(x1))))
 num1(num2(num0(x1))) -> num2(num0(num1(x1)))
 num1(num2(num1(x1))) -> num2(num0(num2(x1)))
 num1(num2(R(x1))) -> num2(num0(num1(R(x1))))
 L(num2(num0(x1))) -> L(num1(num0(num1(x1))))
 L(num2(num1(x1))) -> L(num1(num0(num2(x1))))

Problem 1: 

SCC Processor:
-> Pairs:
 NUM0(num2(num0(x1))) -> NUM0(num1(x1))
 NUM0(num2(num0(x1))) -> NUM1(num0(num1(x1)))
 NUM0(num2(num0(x1))) -> NUM1(x1)
 NUM0(num2(num1(x1))) -> NUM0(num2(x1))
 NUM0(num2(num1(x1))) -> NUM1(num0(num2(x1)))
 NUM1(num2(num0(x1))) -> NUM0(num1(x1))
 NUM1(num2(num0(x1))) -> NUM1(x1)
 NUM1(num2(num1(x1))) -> NUM0(num2(x1))
 LSharp(num2(num0(x1))) -> NUM0(num1(x1))
 LSharp(num2(num0(x1))) -> NUM1(num0(num1(x1)))
 LSharp(num2(num0(x1))) -> NUM1(x1)
 LSharp(num2(num0(x1))) -> LSharp(num1(num0(num1(x1))))
 LSharp(num2(num1(x1))) -> NUM0(num2(x1))
 LSharp(num2(num1(x1))) -> NUM1(num0(num2(x1)))
 LSharp(num2(num1(x1))) -> LSharp(num1(num0(num2(x1))))
-> Rules:
 num0(num2(num0(x1))) -> num1(num0(num1(x1)))
 num0(num2(num1(x1))) -> num1(num0(num2(x1)))
 num0(num2(R(x1))) -> num1(num0(num1(R(x1))))
 num1(num2(num0(x1))) -> num2(num0(num1(x1)))
 num1(num2(num1(x1))) -> num2(num0(num2(x1)))
 num1(num2(R(x1))) -> num2(num0(num1(R(x1))))
 L(num2(num0(x1))) -> L(num1(num0(num1(x1))))
 L(num2(num1(x1))) -> L(num1(num0(num2(x1))))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 NUM0(num2(num0(x1))) -> NUM0(num1(x1))
 NUM0(num2(num0(x1))) -> NUM1(num0(num1(x1)))
 NUM0(num2(num0(x1))) -> NUM1(x1)
 NUM0(num2(num1(x1))) -> NUM0(num2(x1))
 NUM0(num2(num1(x1))) -> NUM1(num0(num2(x1)))
 NUM1(num2(num0(x1))) -> NUM0(num1(x1))
 NUM1(num2(num0(x1))) -> NUM1(x1)
 NUM1(num2(num1(x1))) -> NUM0(num2(x1))
->->-> Rules:
 num0(num2(num0(x1))) -> num1(num0(num1(x1)))
 num0(num2(num1(x1))) -> num1(num0(num2(x1)))
 num0(num2(R(x1))) -> num1(num0(num1(R(x1))))
 num1(num2(num0(x1))) -> num2(num0(num1(x1)))
 num1(num2(num1(x1))) -> num2(num0(num2(x1)))
 num1(num2(R(x1))) -> num2(num0(num1(R(x1))))
 L(num2(num0(x1))) -> L(num1(num0(num1(x1))))
 L(num2(num1(x1))) -> L(num1(num0(num2(x1))))
->->Cycle:
->->-> Pairs:
 LSharp(num2(num0(x1))) -> LSharp(num1(num0(num1(x1))))
 LSharp(num2(num1(x1))) -> LSharp(num1(num0(num2(x1))))
->->-> Rules:
 num0(num2(num0(x1))) -> num1(num0(num1(x1)))
 num0(num2(num1(x1))) -> num1(num0(num2(x1)))
 num0(num2(R(x1))) -> num1(num0(num1(R(x1))))
 num1(num2(num0(x1))) -> num2(num0(num1(x1)))
 num1(num2(num1(x1))) -> num2(num0(num2(x1)))
 num1(num2(R(x1))) -> num2(num0(num1(R(x1))))
 L(num2(num0(x1))) -> L(num1(num0(num1(x1))))
 L(num2(num1(x1))) -> L(num1(num0(num2(x1))))


The problem is decomposed in 2 subproblems.

Problem 1.1: 

Reduction Pair Processor:
-> Pairs:
 NUM0(num2(num0(x1))) -> NUM0(num1(x1))
 NUM0(num2(num0(x1))) -> NUM1(num0(num1(x1)))
 NUM0(num2(num0(x1))) -> NUM1(x1)
 NUM0(num2(num1(x1))) -> NUM0(num2(x1))
 NUM0(num2(num1(x1))) -> NUM1(num0(num2(x1)))
 NUM1(num2(num0(x1))) -> NUM0(num1(x1))
 NUM1(num2(num0(x1))) -> NUM1(x1)
 NUM1(num2(num1(x1))) -> NUM0(num2(x1))
-> Rules:
 num0(num2(num0(x1))) -> num1(num0(num1(x1)))
 num0(num2(num1(x1))) -> num1(num0(num2(x1)))
 num0(num2(R(x1))) -> num1(num0(num1(R(x1))))
 num1(num2(num0(x1))) -> num2(num0(num1(x1)))
 num1(num2(num1(x1))) -> num2(num0(num2(x1)))
 num1(num2(R(x1))) -> num2(num0(num1(R(x1))))
 L(num2(num0(x1))) -> L(num1(num0(num1(x1))))
 L(num2(num1(x1))) -> L(num1(num0(num2(x1))))
-> Usable rules:
 num0(num2(num0(x1))) -> num1(num0(num1(x1)))
 num0(num2(num1(x1))) -> num1(num0(num2(x1)))
 num0(num2(R(x1))) -> num1(num0(num1(R(x1))))
 num1(num2(num0(x1))) -> num2(num0(num1(x1)))
 num1(num2(num1(x1))) -> num2(num0(num2(x1)))
 num1(num2(R(x1))) -> num2(num0(num1(R(x1))))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[num0](X) = X
[num1](X) = X + 1
[L](X) = 0
[num2](X) = X + 2
[R](X) = 2.X + 1
[fSNonEmpty] = 0
[NUM0](X) = 2.X + 2
[NUM1](X) = 2.X + 2
[LSharp](X) = 0

Problem 1.1: 

SCC Processor:
-> Pairs:
 NUM0(num2(num0(x1))) -> NUM1(num0(num1(x1)))
 NUM0(num2(num0(x1))) -> NUM1(x1)
 NUM0(num2(num1(x1))) -> NUM0(num2(x1))
 NUM0(num2(num1(x1))) -> NUM1(num0(num2(x1)))
 NUM1(num2(num0(x1))) -> NUM0(num1(x1))
 NUM1(num2(num0(x1))) -> NUM1(x1)
 NUM1(num2(num1(x1))) -> NUM0(num2(x1))
-> Rules:
 num0(num2(num0(x1))) -> num1(num0(num1(x1)))
 num0(num2(num1(x1))) -> num1(num0(num2(x1)))
 num0(num2(R(x1))) -> num1(num0(num1(R(x1))))
 num1(num2(num0(x1))) -> num2(num0(num1(x1)))
 num1(num2(num1(x1))) -> num2(num0(num2(x1)))
 num1(num2(R(x1))) -> num2(num0(num1(R(x1))))
 L(num2(num0(x1))) -> L(num1(num0(num1(x1))))
 L(num2(num1(x1))) -> L(num1(num0(num2(x1))))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 NUM0(num2(num0(x1))) -> NUM1(num0(num1(x1)))
 NUM0(num2(num0(x1))) -> NUM1(x1)
 NUM0(num2(num1(x1))) -> NUM0(num2(x1))
 NUM0(num2(num1(x1))) -> NUM1(num0(num2(x1)))
 NUM1(num2(num0(x1))) -> NUM0(num1(x1))
 NUM1(num2(num0(x1))) -> NUM1(x1)
 NUM1(num2(num1(x1))) -> NUM0(num2(x1))
->->-> Rules:
 num0(num2(num0(x1))) -> num1(num0(num1(x1)))
 num0(num2(num1(x1))) -> num1(num0(num2(x1)))
 num0(num2(R(x1))) -> num1(num0(num1(R(x1))))
 num1(num2(num0(x1))) -> num2(num0(num1(x1)))
 num1(num2(num1(x1))) -> num2(num0(num2(x1)))
 num1(num2(R(x1))) -> num2(num0(num1(R(x1))))
 L(num2(num0(x1))) -> L(num1(num0(num1(x1))))
 L(num2(num1(x1))) -> L(num1(num0(num2(x1))))

Problem 1.1: 

Reduction Pair Processor:
-> Pairs:
 NUM0(num2(num0(x1))) -> NUM1(num0(num1(x1)))
 NUM0(num2(num0(x1))) -> NUM1(x1)
 NUM0(num2(num1(x1))) -> NUM0(num2(x1))
 NUM0(num2(num1(x1))) -> NUM1(num0(num2(x1)))
 NUM1(num2(num0(x1))) -> NUM0(num1(x1))
 NUM1(num2(num0(x1))) -> NUM1(x1)
 NUM1(num2(num1(x1))) -> NUM0(num2(x1))
-> Rules:
 num0(num2(num0(x1))) -> num1(num0(num1(x1)))
 num0(num2(num1(x1))) -> num1(num0(num2(x1)))
 num0(num2(R(x1))) -> num1(num0(num1(R(x1))))
 num1(num2(num0(x1))) -> num2(num0(num1(x1)))
 num1(num2(num1(x1))) -> num2(num0(num2(x1)))
 num1(num2(R(x1))) -> num2(num0(num1(R(x1))))
 L(num2(num0(x1))) -> L(num1(num0(num1(x1))))
 L(num2(num1(x1))) -> L(num1(num0(num2(x1))))
-> Usable rules:
 num0(num2(num0(x1))) -> num1(num0(num1(x1)))
 num0(num2(num1(x1))) -> num1(num0(num2(x1)))
 num0(num2(R(x1))) -> num1(num0(num1(R(x1))))
 num1(num2(num0(x1))) -> num2(num0(num1(x1)))
 num1(num2(num1(x1))) -> num2(num0(num2(x1)))
 num1(num2(R(x1))) -> num2(num0(num1(R(x1))))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[num0](X) = X
[num1](X) = X + 1
[L](X) = 0
[num2](X) = X + 2
[R](X) = 2.X + 1
[fSNonEmpty] = 0
[NUM0](X) = 2.X + 2
[NUM1](X) = 2.X + 2
[LSharp](X) = 0

Problem 1.1: 

SCC Processor:
-> Pairs:
 NUM0(num2(num0(x1))) -> NUM1(x1)
 NUM0(num2(num1(x1))) -> NUM0(num2(x1))
 NUM0(num2(num1(x1))) -> NUM1(num0(num2(x1)))
 NUM1(num2(num0(x1))) -> NUM0(num1(x1))
 NUM1(num2(num0(x1))) -> NUM1(x1)
 NUM1(num2(num1(x1))) -> NUM0(num2(x1))
-> Rules:
 num0(num2(num0(x1))) -> num1(num0(num1(x1)))
 num0(num2(num1(x1))) -> num1(num0(num2(x1)))
 num0(num2(R(x1))) -> num1(num0(num1(R(x1))))
 num1(num2(num0(x1))) -> num2(num0(num1(x1)))
 num1(num2(num1(x1))) -> num2(num0(num2(x1)))
 num1(num2(R(x1))) -> num2(num0(num1(R(x1))))
 L(num2(num0(x1))) -> L(num1(num0(num1(x1))))
 L(num2(num1(x1))) -> L(num1(num0(num2(x1))))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 NUM0(num2(num0(x1))) -> NUM1(x1)
 NUM0(num2(num1(x1))) -> NUM0(num2(x1))
 NUM0(num2(num1(x1))) -> NUM1(num0(num2(x1)))
 NUM1(num2(num0(x1))) -> NUM0(num1(x1))
 NUM1(num2(num0(x1))) -> NUM1(x1)
 NUM1(num2(num1(x1))) -> NUM0(num2(x1))
->->-> Rules:
 num0(num2(num0(x1))) -> num1(num0(num1(x1)))
 num0(num2(num1(x1))) -> num1(num0(num2(x1)))
 num0(num2(R(x1))) -> num1(num0(num1(R(x1))))
 num1(num2(num0(x1))) -> num2(num0(num1(x1)))
 num1(num2(num1(x1))) -> num2(num0(num2(x1)))
 num1(num2(R(x1))) -> num2(num0(num1(R(x1))))
 L(num2(num0(x1))) -> L(num1(num0(num1(x1))))
 L(num2(num1(x1))) -> L(num1(num0(num2(x1))))

Problem 1.1: 

Reduction Pair Processor:
-> Pairs:
 NUM0(num2(num0(x1))) -> NUM1(x1)
 NUM0(num2(num1(x1))) -> NUM0(num2(x1))
 NUM0(num2(num1(x1))) -> NUM1(num0(num2(x1)))
 NUM1(num2(num0(x1))) -> NUM0(num1(x1))
 NUM1(num2(num0(x1))) -> NUM1(x1)
 NUM1(num2(num1(x1))) -> NUM0(num2(x1))
-> Rules:
 num0(num2(num0(x1))) -> num1(num0(num1(x1)))
 num0(num2(num1(x1))) -> num1(num0(num2(x1)))
 num0(num2(R(x1))) -> num1(num0(num1(R(x1))))
 num1(num2(num0(x1))) -> num2(num0(num1(x1)))
 num1(num2(num1(x1))) -> num2(num0(num2(x1)))
 num1(num2(R(x1))) -> num2(num0(num1(R(x1))))
 L(num2(num0(x1))) -> L(num1(num0(num1(x1))))
 L(num2(num1(x1))) -> L(num1(num0(num2(x1))))
-> Usable rules:
 num0(num2(num0(x1))) -> num1(num0(num1(x1)))
 num0(num2(num1(x1))) -> num1(num0(num2(x1)))
 num0(num2(R(x1))) -> num1(num0(num1(R(x1))))
 num1(num2(num0(x1))) -> num2(num0(num1(x1)))
 num1(num2(num1(x1))) -> num2(num0(num2(x1)))
 num1(num2(R(x1))) -> num2(num0(num1(R(x1))))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[num0](X) = X
[num1](X) = X + 1
[L](X) = 0
[num2](X) = X + 2
[R](X) = 2.X + 1
[fSNonEmpty] = 0
[NUM0](X) = X
[NUM1](X) = X
[LSharp](X) = 0

Problem 1.1: 

SCC Processor:
-> Pairs:
 NUM0(num2(num1(x1))) -> NUM0(num2(x1))
 NUM0(num2(num1(x1))) -> NUM1(num0(num2(x1)))
 NUM1(num2(num0(x1))) -> NUM0(num1(x1))
 NUM1(num2(num0(x1))) -> NUM1(x1)
 NUM1(num2(num1(x1))) -> NUM0(num2(x1))
-> Rules:
 num0(num2(num0(x1))) -> num1(num0(num1(x1)))
 num0(num2(num1(x1))) -> num1(num0(num2(x1)))
 num0(num2(R(x1))) -> num1(num0(num1(R(x1))))
 num1(num2(num0(x1))) -> num2(num0(num1(x1)))
 num1(num2(num1(x1))) -> num2(num0(num2(x1)))
 num1(num2(R(x1))) -> num2(num0(num1(R(x1))))
 L(num2(num0(x1))) -> L(num1(num0(num1(x1))))
 L(num2(num1(x1))) -> L(num1(num0(num2(x1))))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 NUM0(num2(num1(x1))) -> NUM0(num2(x1))
 NUM0(num2(num1(x1))) -> NUM1(num0(num2(x1)))
 NUM1(num2(num0(x1))) -> NUM0(num1(x1))
 NUM1(num2(num0(x1))) -> NUM1(x1)
 NUM1(num2(num1(x1))) -> NUM0(num2(x1))
->->-> Rules:
 num0(num2(num0(x1))) -> num1(num0(num1(x1)))
 num0(num2(num1(x1))) -> num1(num0(num2(x1)))
 num0(num2(R(x1))) -> num1(num0(num1(R(x1))))
 num1(num2(num0(x1))) -> num2(num0(num1(x1)))
 num1(num2(num1(x1))) -> num2(num0(num2(x1)))
 num1(num2(R(x1))) -> num2(num0(num1(R(x1))))
 L(num2(num0(x1))) -> L(num1(num0(num1(x1))))
 L(num2(num1(x1))) -> L(num1(num0(num2(x1))))

Problem 1.1: 

Reduction Pair Processor:
-> Pairs:
 NUM0(num2(num1(x1))) -> NUM0(num2(x1))
 NUM0(num2(num1(x1))) -> NUM1(num0(num2(x1)))
 NUM1(num2(num0(x1))) -> NUM0(num1(x1))
 NUM1(num2(num0(x1))) -> NUM1(x1)
 NUM1(num2(num1(x1))) -> NUM0(num2(x1))
-> Rules:
 num0(num2(num0(x1))) -> num1(num0(num1(x1)))
 num0(num2(num1(x1))) -> num1(num0(num2(x1)))
 num0(num2(R(x1))) -> num1(num0(num1(R(x1))))
 num1(num2(num0(x1))) -> num2(num0(num1(x1)))
 num1(num2(num1(x1))) -> num2(num0(num2(x1)))
 num1(num2(R(x1))) -> num2(num0(num1(R(x1))))
 L(num2(num0(x1))) -> L(num1(num0(num1(x1))))
 L(num2(num1(x1))) -> L(num1(num0(num2(x1))))
-> Usable rules:
 num0(num2(num0(x1))) -> num1(num0(num1(x1)))
 num0(num2(num1(x1))) -> num1(num0(num2(x1)))
 num0(num2(R(x1))) -> num1(num0(num1(R(x1))))
 num1(num2(num0(x1))) -> num2(num0(num1(x1)))
 num1(num2(num1(x1))) -> num2(num0(num2(x1)))
 num1(num2(R(x1))) -> num2(num0(num1(R(x1))))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[num0](X) = X
[num1](X) = X + 1
[L](X) = 0
[num2](X) = X + 2
[R](X) = 2.X + 2
[fSNonEmpty] = 0
[NUM0](X) = 2.X + 2
[NUM1](X) = 2.X + 1
[LSharp](X) = 0

Problem 1.1: 

SCC Processor:
-> Pairs:
 NUM0(num2(num1(x1))) -> NUM1(num0(num2(x1)))
 NUM1(num2(num0(x1))) -> NUM0(num1(x1))
 NUM1(num2(num0(x1))) -> NUM1(x1)
 NUM1(num2(num1(x1))) -> NUM0(num2(x1))
-> Rules:
 num0(num2(num0(x1))) -> num1(num0(num1(x1)))
 num0(num2(num1(x1))) -> num1(num0(num2(x1)))
 num0(num2(R(x1))) -> num1(num0(num1(R(x1))))
 num1(num2(num0(x1))) -> num2(num0(num1(x1)))
 num1(num2(num1(x1))) -> num2(num0(num2(x1)))
 num1(num2(R(x1))) -> num2(num0(num1(R(x1))))
 L(num2(num0(x1))) -> L(num1(num0(num1(x1))))
 L(num2(num1(x1))) -> L(num1(num0(num2(x1))))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 NUM0(num2(num1(x1))) -> NUM1(num0(num2(x1)))
 NUM1(num2(num0(x1))) -> NUM0(num1(x1))
 NUM1(num2(num0(x1))) -> NUM1(x1)
 NUM1(num2(num1(x1))) -> NUM0(num2(x1))
->->-> Rules:
 num0(num2(num0(x1))) -> num1(num0(num1(x1)))
 num0(num2(num1(x1))) -> num1(num0(num2(x1)))
 num0(num2(R(x1))) -> num1(num0(num1(R(x1))))
 num1(num2(num0(x1))) -> num2(num0(num1(x1)))
 num1(num2(num1(x1))) -> num2(num0(num2(x1)))
 num1(num2(R(x1))) -> num2(num0(num1(R(x1))))
 L(num2(num0(x1))) -> L(num1(num0(num1(x1))))
 L(num2(num1(x1))) -> L(num1(num0(num2(x1))))

Problem 1.1: 

Reduction Pair Processor:
-> Pairs:
 NUM0(num2(num1(x1))) -> NUM1(num0(num2(x1)))
 NUM1(num2(num0(x1))) -> NUM0(num1(x1))
 NUM1(num2(num0(x1))) -> NUM1(x1)
 NUM1(num2(num1(x1))) -> NUM0(num2(x1))
-> Rules:
 num0(num2(num0(x1))) -> num1(num0(num1(x1)))
 num0(num2(num1(x1))) -> num1(num0(num2(x1)))
 num0(num2(R(x1))) -> num1(num0(num1(R(x1))))
 num1(num2(num0(x1))) -> num2(num0(num1(x1)))
 num1(num2(num1(x1))) -> num2(num0(num2(x1)))
 num1(num2(R(x1))) -> num2(num0(num1(R(x1))))
 L(num2(num0(x1))) -> L(num1(num0(num1(x1))))
 L(num2(num1(x1))) -> L(num1(num0(num2(x1))))
-> Usable rules:
 num0(num2(num0(x1))) -> num1(num0(num1(x1)))
 num0(num2(num1(x1))) -> num1(num0(num2(x1)))
 num0(num2(R(x1))) -> num1(num0(num1(R(x1))))
 num1(num2(num0(x1))) -> num2(num0(num1(x1)))
 num1(num2(num1(x1))) -> num2(num0(num2(x1)))
 num1(num2(R(x1))) -> num2(num0(num1(R(x1))))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[num0](X) = X
[num1](X) = X + 1
[L](X) = 0
[num2](X) = X + 2
[R](X) = 2.X + 1
[fSNonEmpty] = 0
[NUM0](X) = 2.X + 2
[NUM1](X) = 2.X + 1
[LSharp](X) = 0

Problem 1.1: 

SCC Processor:
-> Pairs:
 NUM1(num2(num0(x1))) -> NUM0(num1(x1))
 NUM1(num2(num0(x1))) -> NUM1(x1)
 NUM1(num2(num1(x1))) -> NUM0(num2(x1))
-> Rules:
 num0(num2(num0(x1))) -> num1(num0(num1(x1)))
 num0(num2(num1(x1))) -> num1(num0(num2(x1)))
 num0(num2(R(x1))) -> num1(num0(num1(R(x1))))
 num1(num2(num0(x1))) -> num2(num0(num1(x1)))
 num1(num2(num1(x1))) -> num2(num0(num2(x1)))
 num1(num2(R(x1))) -> num2(num0(num1(R(x1))))
 L(num2(num0(x1))) -> L(num1(num0(num1(x1))))
 L(num2(num1(x1))) -> L(num1(num0(num2(x1))))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 NUM1(num2(num0(x1))) -> NUM1(x1)
->->-> Rules:
 num0(num2(num0(x1))) -> num1(num0(num1(x1)))
 num0(num2(num1(x1))) -> num1(num0(num2(x1)))
 num0(num2(R(x1))) -> num1(num0(num1(R(x1))))
 num1(num2(num0(x1))) -> num2(num0(num1(x1)))
 num1(num2(num1(x1))) -> num2(num0(num2(x1)))
 num1(num2(R(x1))) -> num2(num0(num1(R(x1))))
 L(num2(num0(x1))) -> L(num1(num0(num1(x1))))
 L(num2(num1(x1))) -> L(num1(num0(num2(x1))))

Problem 1.1: 

Subterm Processor:
-> Pairs:
 NUM1(num2(num0(x1))) -> NUM1(x1)
-> Rules:
 num0(num2(num0(x1))) -> num1(num0(num1(x1)))
 num0(num2(num1(x1))) -> num1(num0(num2(x1)))
 num0(num2(R(x1))) -> num1(num0(num1(R(x1))))
 num1(num2(num0(x1))) -> num2(num0(num1(x1)))
 num1(num2(num1(x1))) -> num2(num0(num2(x1)))
 num1(num2(R(x1))) -> num2(num0(num1(R(x1))))
 L(num2(num0(x1))) -> L(num1(num0(num1(x1))))
 L(num2(num1(x1))) -> L(num1(num0(num2(x1))))
->Projection:
 pi(NUM1) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 num0(num2(num0(x1))) -> num1(num0(num1(x1)))
 num0(num2(num1(x1))) -> num1(num0(num2(x1)))
 num0(num2(R(x1))) -> num1(num0(num1(R(x1))))
 num1(num2(num0(x1))) -> num2(num0(num1(x1)))
 num1(num2(num1(x1))) -> num2(num0(num2(x1)))
 num1(num2(R(x1))) -> num2(num0(num1(R(x1))))
 L(num2(num0(x1))) -> L(num1(num0(num1(x1))))
 L(num2(num1(x1))) -> L(num1(num0(num2(x1))))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Reduction Pair Processor:
-> Pairs:
 LSharp(num2(num0(x1))) -> LSharp(num1(num0(num1(x1))))
 LSharp(num2(num1(x1))) -> LSharp(num1(num0(num2(x1))))
-> Rules:
 num0(num2(num0(x1))) -> num1(num0(num1(x1)))
 num0(num2(num1(x1))) -> num1(num0(num2(x1)))
 num0(num2(R(x1))) -> num1(num0(num1(R(x1))))
 num1(num2(num0(x1))) -> num2(num0(num1(x1)))
 num1(num2(num1(x1))) -> num2(num0(num2(x1)))
 num1(num2(R(x1))) -> num2(num0(num1(R(x1))))
 L(num2(num0(x1))) -> L(num1(num0(num1(x1))))
 L(num2(num1(x1))) -> L(num1(num0(num2(x1))))
-> Usable rules:
 num0(num2(num0(x1))) -> num1(num0(num1(x1)))
 num0(num2(num1(x1))) -> num1(num0(num2(x1)))
 num0(num2(R(x1))) -> num1(num0(num1(R(x1))))
 num1(num2(num0(x1))) -> num2(num0(num1(x1)))
 num1(num2(num1(x1))) -> num2(num0(num2(x1)))
 num1(num2(R(x1))) -> num2(num0(num1(R(x1))))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[num0](X) = 0
[num1](X) = 2.X
[L](X) = 0
[num2](X) = 2.X + 2
[R](X) = 2
[fSNonEmpty] = 0
[NUM0](X) = 0
[NUM1](X) = 0
[LSharp](X) = 2.X

Problem 1.2: 

SCC Processor:
-> Pairs:
 LSharp(num2(num1(x1))) -> LSharp(num1(num0(num2(x1))))
-> Rules:
 num0(num2(num0(x1))) -> num1(num0(num1(x1)))
 num0(num2(num1(x1))) -> num1(num0(num2(x1)))
 num0(num2(R(x1))) -> num1(num0(num1(R(x1))))
 num1(num2(num0(x1))) -> num2(num0(num1(x1)))
 num1(num2(num1(x1))) -> num2(num0(num2(x1)))
 num1(num2(R(x1))) -> num2(num0(num1(R(x1))))
 L(num2(num0(x1))) -> L(num1(num0(num1(x1))))
 L(num2(num1(x1))) -> L(num1(num0(num2(x1))))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 LSharp(num2(num1(x1))) -> LSharp(num1(num0(num2(x1))))
->->-> Rules:
 num0(num2(num0(x1))) -> num1(num0(num1(x1)))
 num0(num2(num1(x1))) -> num1(num0(num2(x1)))
 num0(num2(R(x1))) -> num1(num0(num1(R(x1))))
 num1(num2(num0(x1))) -> num2(num0(num1(x1)))
 num1(num2(num1(x1))) -> num2(num0(num2(x1)))
 num1(num2(R(x1))) -> num2(num0(num1(R(x1))))
 L(num2(num0(x1))) -> L(num1(num0(num1(x1))))
 L(num2(num1(x1))) -> L(num1(num0(num2(x1))))

Problem 1.2: 

Reduction Pair Processor:
-> Pairs:
 LSharp(num2(num1(x1))) -> LSharp(num1(num0(num2(x1))))
-> Rules:
 num0(num2(num0(x1))) -> num1(num0(num1(x1)))
 num0(num2(num1(x1))) -> num1(num0(num2(x1)))
 num0(num2(R(x1))) -> num1(num0(num1(R(x1))))
 num1(num2(num0(x1))) -> num2(num0(num1(x1)))
 num1(num2(num1(x1))) -> num2(num0(num2(x1)))
 num1(num2(R(x1))) -> num2(num0(num1(R(x1))))
 L(num2(num0(x1))) -> L(num1(num0(num1(x1))))
 L(num2(num1(x1))) -> L(num1(num0(num2(x1))))
-> Usable rules:
 num0(num2(num0(x1))) -> num1(num0(num1(x1)))
 num0(num2(num1(x1))) -> num1(num0(num2(x1)))
 num0(num2(R(x1))) -> num1(num0(num1(R(x1))))
 num1(num2(num0(x1))) -> num2(num0(num1(x1)))
 num1(num2(num1(x1))) -> num2(num0(num2(x1)))
 num1(num2(R(x1))) -> num2(num0(num1(R(x1))))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[num0](X) = 1
[num1](X) = X
[L](X) = 0
[num2](X) = 2
[R](X) = 0
[fSNonEmpty] = 0
[NUM0](X) = 0
[NUM1](X) = 0
[LSharp](X) = 2.X

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 num0(num2(num0(x1))) -> num1(num0(num1(x1)))
 num0(num2(num1(x1))) -> num1(num0(num2(x1)))
 num0(num2(R(x1))) -> num1(num0(num1(R(x1))))
 num1(num2(num0(x1))) -> num2(num0(num1(x1)))
 num1(num2(num1(x1))) -> num2(num0(num2(x1)))
 num1(num2(R(x1))) -> num2(num0(num1(R(x1))))
 L(num2(num0(x1))) -> L(num1(num0(num1(x1))))
 L(num2(num1(x1))) -> L(num1(num0(num2(x1))))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
