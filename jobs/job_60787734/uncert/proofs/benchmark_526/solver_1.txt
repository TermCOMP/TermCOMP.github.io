YES
**************************************************
summary
**************************************************
SRS with 180 rules on 6 letters       weights
SRS with 1 rules on 6 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 36 rules on 22 letters       weights
SRS with 0 rules on 0 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [0, 0, 0, 1, 2, 3, 2, 2, 2, 2, 0, 0, 3, 4, 5, 5] -> [ 0 , 0 , 5 , 4 , 2 , 2 , 4 , 0 , 2 , 5 , 1 , 0 , 2 , 1 , 0 , 2 ] {- Input 0 -}
  [0, 0, 0, 1, 2, 3, 2, 2, 2, 2, 0, 0, 3, 4, 5, 5] -> [ 0 , 1 , 3 , 5 , 5 , 5 , 2 , 3 , 4 , 0 , 3 , 4 , 4 , 4 , 2 , 2 ] {- Input 1 -}
  [0, 0, 0, 1, 2, 3, 2, 2, 2, 2, 0, 0, 3, 4, 5, 5] -> [ 0 , 2 , 4 , 3 , 4 , 1 , 3 , 5 , 5 , 5 , 5 , 4 , 1 , 4 , 0 , 4 ] {- Input 2 -}
  [0, 0, 0, 1, 2, 3, 2, 2, 2, 2, 0, 0, 3, 4, 5, 5] -> [ 0 , 2 , 5 , 5 , 5 , 3 , 0 , 4 , 4 , 2 , 2 , 5 , 0 , 5 , 0 , 2 ] {- Input 3 -}
  [0, 0, 0, 1, 2, 3, 2, 2, 2, 2, 0, 0, 3, 4, 5, 5] -> [ 0 , 4 , 4 , 1 , 5 , 5 , 5 , 4 , 1 , 3 , 2 , 0 , 4 , 3 , 5 , 4 ] {- Input 4 -}
  [0, 0, 0, 1, 2, 3, 2, 2, 2, 2, 0, 0, 3, 4, 5, 5] -> [ 3 , 0 , 1 , 0 , 4 , 3 , 0 , 5 , 1 , 0 , 4 , 2 , 4 , 5 , 2 , 5 ] {- Input 5 -}
  [0, 0, 4, 0, 5, 1, 3, 5, 1, 2, 4, 0, 3, 4, 3, 3] -> [ 0 , 4 , 4 , 1 , 5 , 5 , 5 , 4 , 1 , 3 , 2 , 0 , 4 , 3 , 5 , 4 ] {- Input 6 -}
  [0, 0, 5, 4, 2, 2, 4, 0, 2, 5, 1, 0, 2, 1, 0, 2] -> [ 0 , 2 , 5 , 5 , 5 , 3 , 0 , 4 , 4 , 2 , 2 , 5 , 0 , 5 , 0 , 2 ] {- Input 7 -}
  [0, 1, 2, 3, 0, 4, 0, 3, 3, 3, 2, 3, 0, 0, 1, 4] -> [ 0 , 0 , 0 , 1 , 2 , 3 , 2 , 2 , 2 , 2 , 0 , 0 , 3 , 4 , 5 , 5 ] {- Input 8 -}
  [0, 1, 2, 3, 0, 4, 0, 3, 3, 3, 2, 3, 0, 0, 1, 4] -> [ 0 , 0 , 4 , 0 , 5 , 1 , 3 , 5 , 1 , 2 , 4 , 0 , 3 , 4 , 3 , 3 ] {- Input 9 -}
  [0, 1, 2, 3, 0, 4, 0, 3, 3, 3, 2, 3, 0, 0, 1, 4] -> [ 0 , 0 , 5 , 4 , 2 , 2 , 4 , 0 , 2 , 5 , 1 , 0 , 2 , 1 , 0 , 2 ] {- Input 10 -}
  [0, 1, 2, 3, 0, 4, 0, 3, 3, 3, 2, 3, 0, 0, 1, 4] -> [ 0 , 1 , 3 , 5 , 5 , 5 , 2 , 3 , 4 , 0 , 3 , 4 , 4 , 4 , 2 , 2 ] {- Input 11 -}
  [0, 1, 2, 3, 0, 4, 0, 3, 3, 3, 2, 3, 0, 0, 1, 4] -> [ 0 , 2 , 1 , 4 , 0 , 4 , 0 , 0 , 3 , 0 , 2 , 5 , 1 , 2 , 5 , 3 ] {- Input 12 -}
  [0, 1, 2, 3, 0, 4, 0, 3, 3, 3, 2, 3, 0, 0, 1, 4] -> [ 0 , 2 , 4 , 3 , 4 , 1 , 3 , 5 , 5 , 5 , 5 , 4 , 1 , 4 , 0 , 4 ] {- Input 13 -}
  [0, 1, 2, 3, 0, 4, 0, 3, 3, 3, 2, 3, 0, 0, 1, 4] -> [ 0 , 2 , 5 , 5 , 5 , 3 , 0 , 4 , 4 , 2 , 2 , 5 , 0 , 5 , 0 , 2 ] {- Input 14 -}
  [0, 1, 2, 3, 0, 4, 0, 3, 3, 3, 2, 3, 0, 0, 1, 4] -> [ 0 , 3 , 5 , 0 , 5 , 0 , 3 , 2 , 1 , 5 , 1 , 2 , 0 , 5 , 5 , 4 ] {- Input 15 -}
  [0, 1, 2, 3, 0, 4, 0, 3, 3, 3, 2, 3, 0, 0, 1, 4] -> [ 0 , 4 , 2 , 4 , 3 , 4 , 2 , 4 , 5 , 1 , 3 , 3 , 5 , 5 , 1 , 4 ] {- Input 16 -}
  [0, 1, 2, 3, 0, 4, 0, 3, 3, 3, 2, 3, 0, 0, 1, 4] -> [ 0 , 4 , 3 , 0 , 2 , 3 , 4 , 5 , 4 , 3 , 4 , 0 , 3 , 2 , 1 , 0 ] {- Input 17 -}
  [0, 1, 2, 3, 0, 4, 0, 3, 3, 3, 2, 3, 0, 0, 1, 4] -> [ 0 , 4 , 4 , 1 , 5 , 5 , 5 , 4 , 1 , 3 , 2 , 0 , 4 , 3 , 5 , 4 ] {- Input 18 -}
  [0, 1, 2, 3, 0, 4, 0, 3, 3, 3, 2, 3, 0, 0, 1, 4] -> [ 0 , 4 , 4 , 5 , 5 , 5 , 2 , 5 , 3 , 5 , 4 , 2 , 1 , 2 , 2 , 1 ] {- Input 19 -}
  [0, 1, 2, 3, 0, 4, 0, 3, 3, 3, 2, 3, 0, 0, 1, 4] -> [ 0 , 4 , 5 , 2 , 5 , 1 , 3 , 1 , 5 , 1 , 3 , 3 , 0 , 0 , 5 , 0 ] {- Input 20 -}
  [0, 1, 2, 3, 0, 4, 0, 3, 3, 3, 2, 3, 0, 0, 1, 4] -> [ 1 , 0 , 0 , 3 , 0 , 4 , 1 , 2 , 4 , 1 , 5 , 5 , 3 , 3 , 4 , 5 ] {- Input 21 -}
  [0, 1, 2, 3, 0, 4, 0, 3, 3, 3, 2, 3, 0, 0, 1, 4] -> [ 1 , 1 , 2 , 2 , 3 , 4 , 5 , 4 , 3 , 0 , 5 , 0 , 4 , 2 , 4 , 4 ] {- Input 22 -}
  [0, 1, 2, 3, 0, 4, 0, 3, 3, 3, 2, 3, 0, 0, 1, 4] -> [ 2 , 1 , 1 , 3 , 2 , 4 , 4 , 4 , 4 , 0 , 0 , 4 , 5 , 2 , 4 , 5 ] {- Input 23 -}
  [0, 1, 2, 3, 0, 4, 0, 3, 3, 3, 2, 3, 0, 0, 1, 4] -> [ 2 , 3 , 2 , 2 , 5 , 5 , 5 , 0 , 5 , 0 , 3 , 2 , 2 , 4 , 2 , 1 ] {- Input 24 -}
  [0, 1, 2, 3, 0, 4, 0, 3, 3, 3, 2, 3, 0, 0, 1, 4] -> [ 2 , 5 , 5 , 1 , 5 , 1 , 2 , 3 , 0 , 3 , 5 , 2 , 4 , 1 , 0 , 0 ] {- Input 25 -}
  [0, 1, 2, 3, 0, 4, 0, 3, 3, 3, 2, 3, 0, 0, 1, 4] -> [ 3 , 0 , 1 , 0 , 4 , 3 , 0 , 5 , 1 , 0 , 4 , 2 , 4 , 5 , 2 , 5 ] {- Input 26 -}
  [0, 1, 2, 3, 0, 4, 0, 3, 3, 3, 2, 3, 0, 0, 1, 4] -> [ 3 , 1 , 3 , 5 , 5 , 0 , 0 , 3 , 4 , 3 , 0 , 4 , 4 , 2 , 4 , 4 ] {- Input 27 -}
  [0, 1, 2, 3, 0, 4, 0, 3, 3, 3, 2, 3, 0, 0, 1, 4] -> [ 3 , 2 , 4 , 2 , 4 , 4 , 2 , 0 , 4 , 1 , 3 , 4 , 3 , 5 , 0 , 4 ] {- Input 28 -}
  [0, 1, 2, 3, 0, 4, 0, 3, 3, 3, 2, 3, 0, 0, 1, 4] -> [ 3 , 4 , 3 , 3 , 4 , 1 , 4 , 1 , 0 , 0 , 5 , 1 , 5 , 4 , 5 , 2 ] {- Input 29 -}
  [0, 1, 2, 3, 0, 4, 0, 3, 3, 3, 2, 3, 0, 0, 1, 4] -> [ 3 , 4 , 3 , 4 , 2 , 4 , 4 , 4 , 2 , 4 , 1 , 4 , 4 , 0 , 1 , 5 ] {- Input 30 -}
  [0, 1, 2, 3, 0, 4, 0, 3, 3, 3, 2, 3, 0, 0, 1, 4] -> [ 3 , 5 , 5 , 0 , 3 , 4 , 5 , 5 , 5 , 1 , 2 , 1 , 5 , 4 , 3 , 4 ] {- Input 31 -}
  [0, 1, 2, 3, 0, 4, 0, 3, 3, 3, 2, 3, 0, 0, 1, 4] -> [ 4 , 0 , 5 , 2 , 3 , 5 , 3 , 3 , 4 , 2 , 3 , 5 , 5 , 4 , 0 , 3 ] {- Input 32 -}
  [0, 1, 2, 3, 0, 4, 0, 3, 3, 3, 2, 3, 0, 0, 1, 4] -> [ 4 , 2 , 0 , 1 , 0 , 5 , 5 , 4 , 3 , 2 , 0 , 2 , 3 , 3 , 1 , 5 ] {- Input 33 -}
  [0, 1, 2, 3, 0, 4, 0, 3, 3, 3, 2, 3, 0, 0, 1, 4] -> [ 4 , 2 , 3 , 1 , 5 , 3 , 5 , 2 , 5 , 0 , 5 , 5 , 1 , 4 , 1 , 4 ] {- Input 34 -}
  [0, 1, 2, 3, 0, 4, 0, 3, 3, 3, 2, 3, 0, 0, 1, 4] -> [ 5 , 0 , 0 , 1 , 2 , 5 , 5 , 2 , 0 , 5 , 5 , 0 , 3 , 0 , 2 , 4 ] {- Input 35 -}
  [0, 1, 2, 3, 0, 4, 0, 3, 3, 3, 2, 3, 0, 0, 1, 4] -> [ 5 , 1 , 5 , 0 , 3 , 0 , 5 , 4 , 2 , 0 , 4 , 0 , 2 , 4 , 5 , 2 ] {- Input 36 -}
  [0, 1, 2, 3, 0, 4, 0, 3, 3, 3, 2, 3, 0, 0, 1, 4] -> [ 5 , 2 , 3 , 4 , 3 , 3 , 2 , 5 , 1 , 4 , 3 , 2 , 3 , 5 , 2 , 0 ] {- Input 37 -}
  [0, 1, 2, 3, 0, 4, 0, 3, 3, 3, 2, 3, 0, 0, 1, 4] -> [ 5 , 2 , 4 , 0 , 2 , 5 , 3 , 2 , 3 , 5 , 0 , 0 , 0 , 5 , 1 , 4 ] {- Input 38 -}
  [0, 1, 2, 3, 0, 4, 0, 3, 3, 3, 2, 3, 0, 0, 1, 4] -> [ 5 , 2 , 4 , 0 , 3 , 2 , 5 , 1 , 2 , 0 , 5 , 4 , 1 , 0 , 2 , 2 ] {- Input 39 -}
  [0, 1, 2, 3, 0, 4, 0, 3, 3, 3, 2, 3, 0, 0, 1, 4] -> [ 5 , 4 , 0 , 4 , 3 , 1 , 2 , 5 , 3 , 2 , 0 , 0 , 2 , 2 , 4 , 0 ] {- Input 40 -}
  [0, 1, 2, 3, 0, 4, 0, 3, 3, 3, 2, 3, 0, 0, 1, 4] -> [ 5 , 4 , 5 , 0 , 5 , 1 , 5 , 3 , 0 , 2 , 2 , 3 , 3 , 4 , 1 , 4 ] {- Input 41 -}
  [0, 1, 2, 3, 0, 4, 0, 3, 3, 3, 2, 3, 0, 0, 1, 4] -> [ 5 , 5 , 2 , 0 , 3 , 4 , 2 , 2 , 3 , 3 , 5 , 4 , 0 , 5 , 2 , 4 ] {- Input 42 -}
  [0, 1, 3, 0, 1, 2, 4, 3, 0, 3, 1, 1, 0, 1, 4, 5] -> [ 0 , 0 , 0 , 1 , 2 , 3 , 2 , 2 , 2 , 2 , 0 , 0 , 3 , 4 , 5 , 5 ] {- Input 43 -}
  [0, 1, 3, 0, 1, 2, 4, 3, 0, 3, 1, 1, 0, 1, 4, 5] -> [ 0 , 0 , 4 , 0 , 5 , 1 , 3 , 5 , 1 , 2 , 4 , 0 , 3 , 4 , 3 , 3 ] {- Input 44 -}
  [0, 1, 3, 0, 1, 2, 4, 3, 0, 3, 1, 1, 0, 1, 4, 5] -> [ 0 , 0 , 5 , 4 , 2 , 2 , 4 , 0 , 2 , 5 , 1 , 0 , 2 , 1 , 0 , 2 ] {- Input 45 -}
  [0, 1, 3, 0, 1, 2, 4, 3, 0, 3, 1, 1, 0, 1, 4, 5] -> [ 0 , 1 , 3 , 5 , 5 , 5 , 2 , 3 , 4 , 0 , 3 , 4 , 4 , 4 , 2 , 2 ] {- Input 46 -}
  [0, 1, 3, 0, 1, 2, 4, 3, 0, 3, 1, 1, 0, 1, 4, 5] -> [ 0 , 2 , 1 , 4 , 0 , 4 , 0 , 0 , 3 , 0 , 2 , 5 , 1 , 2 , 5 , 3 ] {- Input 47 -}
  [0, 1, 3, 0, 1, 2, 4, 3, 0, 3, 1, 1, 0, 1, 4, 5] -> [ 0 , 2 , 4 , 3 , 4 , 1 , 3 , 5 , 5 , 5 , 5 , 4 , 1 , 4 , 0 , 4 ] {- Input 48 -}
  [0, 1, 3, 0, 1, 2, 4, 3, 0, 3, 1, 1, 0, 1, 4, 5] -> [ 0 , 2 , 5 , 5 , 5 , 3 , 0 , 4 , 4 , 2 , 2 , 5 , 0 , 5 , 0 , 2 ] {- Input 49 -}
  [0, 1, 3, 0, 1, 2, 4, 3, 0, 3, 1, 1, 0, 1, 4, 5] -> [ 0 , 3 , 5 , 0 , 5 , 0 , 3 , 2 , 1 , 5 , 1 , 2 , 0 , 5 , 5 , 4 ] {- Input 50 -}
  [0, 1, 3, 0, 1, 2, 4, 3, 0, 3, 1, 1, 0, 1, 4, 5] -> [ 0 , 4 , 2 , 4 , 3 , 4 , 2 , 4 , 5 , 1 , 3 , 3 , 5 , 5 , 1 , 4 ] {- Input 51 -}
  [0, 1, 3, 0, 1, 2, 4, 3, 0, 3, 1, 1, 0, 1, 4, 5] -> [ 0 , 4 , 3 , 0 , 2 , 3 , 4 , 5 , 4 , 3 , 4 , 0 , 3 , 2 , 1 , 0 ] {- Input 52 -}
  [0, 1, 3, 0, 1, 2, 4, 3, 0, 3, 1, 1, 0, 1, 4, 5] -> [ 0 , 4 , 4 , 1 , 5 , 5 , 5 , 4 , 1 , 3 , 2 , 0 , 4 , 3 , 5 , 4 ] {- Input 53 -}
  [0, 1, 3, 0, 1, 2, 4, 3, 0, 3, 1, 1, 0, 1, 4, 5] -> [ 0 , 4 , 4 , 5 , 5 , 5 , 2 , 5 , 3 , 5 , 4 , 2 , 1 , 2 , 2 , 1 ] {- Input 54 -}
  [0, 1, 3, 0, 1, 2, 4, 3, 0, 3, 1, 1, 0, 1, 4, 5] -> [ 0 , 4 , 5 , 2 , 5 , 1 , 3 , 1 , 5 , 1 , 3 , 3 , 0 , 0 , 5 , 0 ] {- Input 55 -}
  [0, 1, 3, 0, 1, 2, 4, 3, 0, 3, 1, 1, 0, 1, 4, 5] -> [ 1 , 0 , 0 , 3 , 0 , 4 , 1 , 2 , 4 , 1 , 5 , 5 , 3 , 3 , 4 , 5 ] {- Input 56 -}
  [0, 1, 3, 0, 1, 2, 4, 3, 0, 3, 1, 1, 0, 1, 4, 5] -> [ 1 , 1 , 2 , 2 , 3 , 4 , 5 , 4 , 3 , 0 , 5 , 0 , 4 , 2 , 4 , 4 ] {- Input 57 -}
  [0, 1, 3, 0, 1, 2, 4, 3, 0, 3, 1, 1, 0, 1, 4, 5] -> [ 1 , 4 , 3 , 0 , 0 , 2 , 0 , 1 , 2 , 1 , 2 , 4 , 1 , 5 , 4 , 5 ] {- Input 58 -}
  [0, 1, 3, 0, 1, 2, 4, 3, 0, 3, 1, 1, 0, 1, 4, 5] -> [ 2 , 1 , 1 , 3 , 2 , 4 , 4 , 4 , 4 , 0 , 0 , 4 , 5 , 2 , 4 , 5 ] {- Input 59 -}
  [0, 1, 3, 0, 1, 2, 4, 3, 0, 3, 1, 1, 0, 1, 4, 5] -> [ 2 , 3 , 2 , 2 , 5 , 5 , 5 , 0 , 5 , 0 , 3 , 2 , 2 , 4 , 2 , 1 ] {- Input 60 -}
  [0, 1, 3, 0, 1, 2, 4, 3, 0, 3, 1, 1, 0, 1, 4, 5] -> [ 2 , 5 , 0 , 2 , 0 , 3 , 3 , 4 , 1 , 2 , 5 , 1 , 5 , 0 , 0 , 2 ] {- Input 61 -}
  [0, 1, 3, 0, 1, 2, 4, 3, 0, 3, 1, 1, 0, 1, 4, 5] -> [ 2 , 5 , 5 , 1 , 5 , 1 , 2 , 3 , 0 , 3 , 5 , 2 , 4 , 1 , 0 , 0 ] {- Input 62 -}
  [0, 1, 3, 0, 1, 2, 4, 3, 0, 3, 1, 1, 0, 1, 4, 5] -> [ 3 , 0 , 1 , 0 , 4 , 3 , 0 , 5 , 1 , 0 , 4 , 2 , 4 , 5 , 2 , 5 ] {- Input 63 -}
  [0, 1, 3, 0, 1, 2, 4, 3, 0, 3, 1, 1, 0, 1, 4, 5] -> [ 3 , 1 , 1 , 3 , 2 , 0 , 0 , 5 , 2 , 3 , 4 , 5 , 5 , 5 , 1 , 0 ] {- Input 64 -}
  [0, 1, 3, 0, 1, 2, 4, 3, 0, 3, 1, 1, 0, 1, 4, 5] -> [ 3 , 2 , 4 , 2 , 4 , 4 , 2 , 0 , 4 , 1 , 3 , 4 , 3 , 5 , 0 , 4 ] {- Input 65 -}
  [0, 1, 3, 0, 1, 2, 4, 3, 0, 3, 1, 1, 0, 1, 4, 5] -> [ 3 , 4 , 3 , 3 , 4 , 1 , 4 , 1 , 0 , 0 , 5 , 1 , 5 , 4 , 5 , 2 ] {- Input 66 -}
  [0, 1, 3, 0, 1, 2, 4, 3, 0, 3, 1, 1, 0, 1, 4, 5] -> [ 3 , 4 , 3 , 4 , 2 , 4 , 4 , 4 , 2 , 4 , 1 , 4 , 4 , 0 , 1 , 5 ] {- Input 67 -}
  [0, 1, 3, 0, 1, 2, 4, 3, 0, 3, 1, 1, 0, 1, 4, 5] -> [ 3 , 5 , 5 , 0 , 3 , 4 , 5 , 5 , 5 , 1 , 2 , 1 , 5 , 4 , 3 , 4 ] {- Input 68 -}
  [0, 1, 3, 0, 1, 2, 4, 3, 0, 3, 1, 1, 0, 1, 4, 5] -> [ 4 , 0 , 5 , 2 , 3 , 5 , 3 , 3 , 4 , 2 , 3 , 5 , 5 , 4 , 0 , 3 ] {- Input 69 -}
  [0, 1, 3, 0, 1, 2, 4, 3, 0, 3, 1, 1, 0, 1, 4, 5] -> [ 4 , 2 , 0 , 1 , 0 , 5 , 5 , 4 , 3 , 2 , 0 , 2 , 3 , 3 , 1 , 5 ] {- Input 70 -}
  [0, 1, 3, 0, 1, 2, 4, 3, 0, 3, 1, 1, 0, 1, 4, 5] -> [ 4 , 2 , 1 , 3 , 2 , 5 , 1 , 3 , 3 , 4 , 1 , 0 , 3 , 5 , 3 , 5 ] {- Input 71 -}
  [0, 1, 3, 0, 1, 2, 4, 3, 0, 3, 1, 1, 0, 1, 4, 5] -> [ 5 , 0 , 0 , 1 , 2 , 5 , 5 , 2 , 0 , 5 , 5 , 0 , 3 , 0 , 2 , 4 ] {- Input 72 -}
  [0, 1, 3, 0, 1, 2, 4, 3, 0, 3, 1, 1, 0, 1, 4, 5] -> [ 5 , 1 , 5 , 0 , 3 , 0 , 5 , 4 , 2 , 0 , 4 , 0 , 2 , 4 , 5 , 2 ] {- Input 73 -}
  [0, 1, 3, 0, 1, 2, 4, 3, 0, 3, 1, 1, 0, 1, 4, 5] -> [ 5 , 2 , 3 , 4 , 3 , 3 , 2 , 5 , 1 , 4 , 3 , 2 , 3 , 5 , 2 , 0 ] {- Input 74 -}
  [0, 1, 3, 0, 1, 2, 4, 3, 0, 3, 1, 1, 0, 1, 4, 5] -> [ 5 , 2 , 4 , 0 , 3 , 2 , 5 , 1 , 2 , 0 , 5 , 4 , 1 , 0 , 2 , 2 ] {- Input 75 -}
  [0, 1, 3, 0, 1, 2, 4, 3, 0, 3, 1, 1, 0, 1, 4, 5] -> [ 5 , 4 , 0 , 4 , 3 , 1 , 2 , 5 , 3 , 2 , 0 , 0 , 2 , 2 , 4 , 0 ] {- Input 76 -}
  [0, 1, 3, 0, 1, 2, 4, 3, 0, 3, 1, 1, 0, 1, 4, 5] -> [ 5 , 5 , 2 , 0 , 3 , 4 , 2 , 2 , 3 , 3 , 5 , 4 , 0 , 5 , 2 , 4 ] {- Input 77 -}
  [0, 1, 3, 5, 5, 5, 2, 3, 4, 0, 3, 4, 4, 4, 2, 2] -> [ 0 , 2 , 5 , 5 , 5 , 3 , 0 , 4 , 4 , 2 , 2 , 5 , 0 , 5 , 0 , 2 ] {- Input 78 -}
  [0, 2, 1, 4, 0, 4, 0, 0, 3, 0, 2, 5, 1, 2, 5, 3] -> [ 0 , 2 , 4 , 3 , 4 , 1 , 3 , 5 , 5 , 5 , 5 , 4 , 1 , 4 , 0 , 4 ] {- Input 79 -}
  [0, 2, 1, 4, 0, 4, 0, 0, 3, 0, 2, 5, 1, 2, 5, 3] -> [ 0 , 4 , 4 , 1 , 5 , 5 , 5 , 4 , 1 , 3 , 2 , 0 , 4 , 3 , 5 , 4 ] {- Input 80 -}
  [0, 2, 4, 3, 4, 1, 3, 5, 5, 5, 5, 4, 1, 4, 0, 4] -> [ 0 , 4 , 4 , 1 , 5 , 5 , 5 , 4 , 1 , 3 , 2 , 0 , 4 , 3 , 5 , 4 ] {- Input 81 -}
  [0, 3, 5, 0, 5, 0, 3, 2, 1, 5, 1, 2, 0, 5, 5, 4] -> [ 0 , 2 , 4 , 3 , 4 , 1 , 3 , 5 , 5 , 5 , 5 , 4 , 1 , 4 , 0 , 4 ] {- Input 82 -}
  [0, 3, 5, 0, 5, 0, 3, 2, 1, 5, 1, 2, 0, 5, 5, 4] -> [ 0 , 4 , 4 , 1 , 5 , 5 , 5 , 4 , 1 , 3 , 2 , 0 , 4 , 3 , 5 , 4 ] {- Input 83 -}
  [0, 4, 2, 4, 3, 4, 2, 4, 5, 1, 3, 3, 5, 5, 1, 4] -> [ 0 , 4 , 4 , 1 , 5 , 5 , 5 , 4 , 1 , 3 , 2 , 0 , 4 , 3 , 5 , 4 ] {- Input 84 -}
  [0, 4, 3, 0, 2, 3, 4, 5, 4, 3, 4, 0, 3, 2, 1, 0] -> [ 0 , 4 , 4 , 1 , 5 , 5 , 5 , 4 , 1 , 3 , 2 , 0 , 4 , 3 , 5 , 4 ] {- Input 85 -}
  [0, 4, 5, 2, 5, 1, 3, 1, 5, 1, 3, 3, 0, 0, 5, 0] -> [ 0 , 2 , 4 , 3 , 4 , 1 , 3 , 5 , 5 , 5 , 5 , 4 , 1 , 4 , 0 , 4 ] {- Input 86 -}
  [0, 4, 5, 2, 5, 1, 3, 1, 5, 1, 3, 3, 0, 0, 5, 0] -> [ 0 , 2 , 5 , 5 , 5 , 3 , 0 , 4 , 4 , 2 , 2 , 5 , 0 , 5 , 0 , 2 ] {- Input 87 -}
  [0, 4, 5, 2, 5, 1, 3, 1, 5, 1, 3, 3, 0, 0, 5, 0] -> [ 0 , 4 , 2 , 4 , 3 , 4 , 2 , 4 , 5 , 1 , 3 , 3 , 5 , 5 , 1 , 4 ] {- Input 88 -}
  [0, 4, 5, 2, 5, 1, 3, 1, 5, 1, 3, 3, 0, 0, 5, 0] -> [ 0 , 4 , 4 , 1 , 5 , 5 , 5 , 4 , 1 , 3 , 2 , 0 , 4 , 3 , 5 , 4 ] {- Input 89 -}
  [1, 0, 3, 2, 2, 3, 1, 4, 0, 0, 5, 1, 4, 2, 5, 0] -> [ 0 , 2 , 4 , 3 , 4 , 1 , 3 , 5 , 5 , 5 , 5 , 4 , 1 , 4 , 0 , 4 ] {- Input 90 -}
  [1, 0, 3, 2, 2, 3, 1, 4, 0, 0, 5, 1, 4, 2, 5, 0] -> [ 0 , 2 , 5 , 5 , 5 , 3 , 0 , 4 , 4 , 2 , 2 , 5 , 0 , 5 , 0 , 2 ] {- Input 91 -}
  [1, 0, 3, 2, 2, 3, 1, 4, 0, 0, 5, 1, 4, 2, 5, 0] -> [ 0 , 4 , 4 , 1 , 5 , 5 , 5 , 4 , 1 , 3 , 2 , 0 , 4 , 3 , 5 , 4 ] {- Input 92 -}
  [1, 0, 3, 2, 2, 3, 1, 4, 0, 0, 5, 1, 4, 2, 5, 0] -> [ 3 , 5 , 5 , 0 , 3 , 4 , 5 , 5 , 5 , 1 , 2 , 1 , 5 , 4 , 3 , 4 ] {- Input 93 -}
  [1, 0, 3, 2, 2, 3, 1, 4, 0, 0, 5, 1, 4, 2, 5, 0] -> [ 5 , 2 , 3 , 4 , 3 , 3 , 2 , 5 , 1 , 4 , 3 , 2 , 3 , 5 , 2 , 0 ] {- Input 94 -}
  [1, 0, 3, 2, 2, 3, 1, 4, 0, 0, 5, 1, 4, 2, 5, 0] -> [ 5 , 5 , 2 , 0 , 3 , 4 , 2 , 2 , 3 , 3 , 5 , 4 , 0 , 5 , 2 , 4 ] {- Input 95 -}
  [1, 1, 2, 2, 3, 4, 5, 4, 3, 0, 5, 0, 4, 2, 4, 4] -> [ 0 , 2 , 4 , 3 , 4 , 1 , 3 , 5 , 5 , 5 , 5 , 4 , 1 , 4 , 0 , 4 ] {- Input 96 -}
  [1, 1, 2, 2, 3, 4, 5, 4, 3, 0, 5, 0, 4, 2, 4, 4] -> [ 0 , 4 , 4 , 1 , 5 , 5 , 5 , 4 , 1 , 3 , 2 , 0 , 4 , 3 , 5 , 4 ] {- Input 97 -}
  [1, 4, 3, 0, 0, 2, 0, 1, 2, 1, 2, 4, 1, 5, 4, 5] -> [ 0 , 0 , 5 , 4 , 2 , 2 , 4 , 0 , 2 , 5 , 1 , 0 , 2 , 1 , 0 , 2 ] {- Input 98 -}
  [1, 4, 3, 0, 0, 2, 0, 1, 2, 1, 2, 4, 1, 5, 4, 5] -> [ 0 , 1 , 3 , 5 , 5 , 5 , 2 , 3 , 4 , 0 , 3 , 4 , 4 , 4 , 2 , 2 ] {- Input 99 -}
  [1, 4, 3, 0, 0, 2, 0, 1, 2, 1, 2, 4, 1, 5, 4, 5] -> [ 0 , 2 , 4 , 3 , 4 , 1 , 3 , 5 , 5 , 5 , 5 , 4 , 1 , 4 , 0 , 4 ] {- Input 100 -}
  [1, 4, 3, 0, 0, 2, 0, 1, 2, 1, 2, 4, 1, 5, 4, 5] -> [ 0 , 2 , 5 , 5 , 5 , 3 , 0 , 4 , 4 , 2 , 2 , 5 , 0 , 5 , 0 , 2 ] {- Input 101 -}
  [1, 4, 3, 0, 0, 2, 0, 1, 2, 1, 2, 4, 1, 5, 4, 5] -> [ 0 , 4 , 4 , 1 , 5 , 5 , 5 , 4 , 1 , 3 , 2 , 0 , 4 , 3 , 5 , 4 ] {- Input 102 -}
  [1, 4, 3, 0, 0, 2, 0, 1, 2, 1, 2, 4, 1, 5, 4, 5] -> [ 1 , 0 , 0 , 3 , 0 , 4 , 1 , 2 , 4 , 1 , 5 , 5 , 3 , 3 , 4 , 5 ] {- Input 103 -}
  [1, 4, 3, 0, 0, 2, 0, 1, 2, 1, 2, 4, 1, 5, 4, 5] -> [ 2 , 1 , 1 , 3 , 2 , 4 , 4 , 4 , 4 , 0 , 0 , 4 , 5 , 2 , 4 , 5 ] {- Input 104 -}
  [1, 4, 3, 0, 0, 2, 0, 1, 2, 1, 2, 4, 1, 5, 4, 5] -> [ 3 , 0 , 1 , 0 , 4 , 3 , 0 , 5 , 1 , 0 , 4 , 2 , 4 , 5 , 2 , 5 ] {- Input 105 -}
  [1, 4, 3, 0, 0, 2, 0, 1, 2, 1, 2, 4, 1, 5, 4, 5] -> [ 3 , 1 , 1 , 3 , 2 , 0 , 0 , 5 , 2 , 3 , 4 , 5 , 5 , 5 , 1 , 0 ] {- Input 106 -}
  [1, 4, 3, 0, 0, 2, 0, 1, 2, 1, 2, 4, 1, 5, 4, 5] -> [ 3 , 4 , 3 , 4 , 2 , 4 , 4 , 4 , 2 , 4 , 1 , 4 , 4 , 0 , 1 , 5 ] {- Input 107 -}
  [1, 4, 3, 0, 0, 2, 0, 1, 2, 1, 2, 4, 1, 5, 4, 5] -> [ 3 , 5 , 5 , 0 , 3 , 4 , 5 , 5 , 5 , 1 , 2 , 1 , 5 , 4 , 3 , 4 ] {- Input 108 -}
  [1, 4, 3, 0, 0, 2, 0, 1, 2, 1, 2, 4, 1, 5, 4, 5] -> [ 4 , 2 , 0 , 1 , 0 , 5 , 5 , 4 , 3 , 2 , 0 , 2 , 3 , 3 , 1 , 5 ] {- Input 109 -}
  [1, 4, 3, 0, 0, 2, 0, 1, 2, 1, 2, 4, 1, 5, 4, 5] -> [ 5 , 1 , 5 , 0 , 3 , 0 , 5 , 4 , 2 , 0 , 4 , 0 , 2 , 4 , 5 , 2 ] {- Input 110 -}
  [1, 4, 3, 0, 0, 2, 0, 1, 2, 1, 2, 4, 1, 5, 4, 5] -> [ 5 , 5 , 2 , 0 , 3 , 4 , 2 , 2 , 3 , 3 , 5 , 4 , 0 , 5 , 2 , 4 ] {- Input 111 -}
  [1, 5, 2, 3, 4, 3, 1, 4, 3, 0, 3, 5, 4, 4, 2, 2] -> [ 0 , 0 , 5 , 4 , 2 , 2 , 4 , 0 , 2 , 5 , 1 , 0 , 2 , 1 , 0 , 2 ] {- Input 112 -}
  [1, 5, 2, 3, 4, 3, 1, 4, 3, 0, 3, 5, 4, 4, 2, 2] -> [ 0 , 1 , 3 , 5 , 5 , 5 , 2 , 3 , 4 , 0 , 3 , 4 , 4 , 4 , 2 , 2 ] {- Input 113 -}
  [1, 5, 2, 3, 4, 3, 1, 4, 3, 0, 3, 5, 4, 4, 2, 2] -> [ 0 , 2 , 5 , 5 , 5 , 3 , 0 , 4 , 4 , 2 , 2 , 5 , 0 , 5 , 0 , 2 ] {- Input 114 -}
  [1, 5, 2, 3, 4, 3, 1, 4, 3, 0, 3, 5, 4, 4, 2, 2] -> [ 2 , 3 , 2 , 2 , 5 , 5 , 5 , 0 , 5 , 0 , 3 , 2 , 2 , 4 , 2 , 1 ] {- Input 115 -}
  [1, 5, 2, 3, 4, 3, 1, 4, 3, 0, 3, 5, 4, 4, 2, 2] -> [ 2 , 5 , 0 , 2 , 0 , 3 , 3 , 4 , 1 , 2 , 5 , 1 , 5 , 0 , 0 , 2 ] {- Input 116 -}
  [1, 5, 2, 3, 4, 3, 1, 4, 3, 0, 3, 5, 4, 4, 2, 2] -> [ 3 , 0 , 1 , 0 , 4 , 3 , 0 , 5 , 1 , 0 , 4 , 2 , 4 , 5 , 2 , 5 ] {- Input 117 -}
  [1, 5, 2, 3, 4, 3, 1, 4, 3, 0, 3, 5, 4, 4, 2, 2] -> [ 3 , 4 , 3 , 3 , 4 , 1 , 4 , 1 , 0 , 0 , 5 , 1 , 5 , 4 , 5 , 2 ] {- Input 118 -}
  [1, 5, 2, 3, 4, 3, 1, 4, 3, 0, 3, 5, 4, 4, 2, 2] -> [ 5 , 1 , 5 , 0 , 3 , 0 , 5 , 4 , 2 , 0 , 4 , 0 , 2 , 4 , 5 , 2 ] {- Input 119 -}
  [1, 5, 2, 3, 4, 3, 1, 4, 3, 0, 3, 5, 4, 4, 2, 2] -> [ 5 , 2 , 4 , 0 , 3 , 2 , 5 , 1 , 2 , 0 , 5 , 4 , 1 , 0 , 2 , 2 ] {- Input 120 -}
  [2, 2, 3, 2, 0, 1, 0, 1, 3, 3, 2, 3, 2, 0, 3, 3] -> [ 3 , 5 , 5 , 0 , 3 , 4 , 5 , 5 , 5 , 1 , 2 , 1 , 5 , 4 , 3 , 4 ] {- Input 121 -}
  [2, 2, 3, 2, 0, 1, 0, 1, 3, 3, 2, 3, 2, 0, 3, 3] -> [ 4 , 0 , 5 , 2 , 3 , 5 , 3 , 3 , 4 , 2 , 3 , 5 , 5 , 4 , 0 , 3 ] {- Input 122 -}
  [2, 4, 1, 3, 0, 2, 4, 5, 3, 2, 0, 3, 3, 0, 1, 5] -> [ 0 , 0 , 5 , 4 , 2 , 2 , 4 , 0 , 2 , 5 , 1 , 0 , 2 , 1 , 0 , 2 ] {- Input 123 -}
  [2, 4, 1, 3, 0, 2, 4, 5, 3, 2, 0, 3, 3, 0, 1, 5] -> [ 0 , 2 , 5 , 5 , 5 , 3 , 0 , 4 , 4 , 2 , 2 , 5 , 0 , 5 , 0 , 2 ] {- Input 124 -}
  [2, 4, 1, 3, 0, 2, 4, 5, 3, 2, 0, 3, 3, 0, 1, 5] -> [ 0 , 4 , 4 , 1 , 5 , 5 , 5 , 4 , 1 , 3 , 2 , 0 , 4 , 3 , 5 , 4 ] {- Input 125 -}
  [2, 4, 1, 3, 0, 2, 4, 5, 3, 2, 0, 3, 3, 0, 1, 5] -> [ 1 , 0 , 0 , 3 , 0 , 4 , 1 , 2 , 4 , 1 , 5 , 5 , 3 , 3 , 4 , 5 ] {- Input 126 -}
  [2, 4, 1, 3, 0, 2, 4, 5, 3, 2, 0, 3, 3, 0, 1, 5] -> [ 2 , 1 , 1 , 3 , 2 , 4 , 4 , 4 , 4 , 0 , 0 , 4 , 5 , 2 , 4 , 5 ] {- Input 127 -}
  [2, 4, 1, 3, 0, 2, 4, 5, 3, 2, 0, 3, 3, 0, 1, 5] -> [ 2 , 5 , 0 , 2 , 0 , 3 , 3 , 4 , 1 , 2 , 5 , 1 , 5 , 0 , 0 , 2 ] {- Input 128 -}
  [2, 4, 1, 3, 0, 2, 4, 5, 3, 2, 0, 3, 3, 0, 1, 5] -> [ 2 , 5 , 5 , 1 , 5 , 1 , 2 , 3 , 0 , 3 , 5 , 2 , 4 , 1 , 0 , 0 ] {- Input 129 -}
  [2, 4, 1, 3, 0, 2, 4, 5, 3, 2, 0, 3, 3, 0, 1, 5] -> [ 3 , 0 , 1 , 0 , 4 , 3 , 0 , 5 , 1 , 0 , 4 , 2 , 4 , 5 , 2 , 5 ] {- Input 130 -}
  [2, 4, 1, 3, 0, 2, 4, 5, 3, 2, 0, 3, 3, 0, 1, 5] -> [ 3 , 4 , 3 , 4 , 2 , 4 , 4 , 4 , 2 , 4 , 1 , 4 , 4 , 0 , 1 , 5 ] {- Input 131 -}
  [2, 4, 1, 3, 0, 2, 4, 5, 3, 2, 0, 3, 3, 0, 1, 5] -> [ 3 , 5 , 5 , 0 , 3 , 4 , 5 , 5 , 5 , 1 , 2 , 1 , 5 , 4 , 3 , 4 ] {- Input 132 -}
  [2, 4, 1, 3, 0, 2, 4, 5, 3, 2, 0, 3, 3, 0, 1, 5] -> [ 4 , 2 , 0 , 1 , 0 , 5 , 5 , 4 , 3 , 2 , 0 , 2 , 3 , 3 , 1 , 5 ] {- Input 133 -}
  [2, 4, 3, 4, 5, 1, 4, 2, 2, 1, 2, 1, 5, 3, 1, 2] -> [ 0 , 0 , 5 , 4 , 2 , 2 , 4 , 0 , 2 , 5 , 1 , 0 , 2 , 1 , 0 , 2 ] {- Input 134 -}
  [2, 4, 3, 4, 5, 1, 4, 2, 2, 1, 2, 1, 5, 3, 1, 2] -> [ 0 , 1 , 3 , 5 , 5 , 5 , 2 , 3 , 4 , 0 , 3 , 4 , 4 , 4 , 2 , 2 ] {- Input 135 -}
  [2, 4, 3, 4, 5, 1, 4, 2, 2, 1, 2, 1, 5, 3, 1, 2] -> [ 0 , 2 , 5 , 5 , 5 , 3 , 0 , 4 , 4 , 2 , 2 , 5 , 0 , 5 , 0 , 2 ] {- Input 136 -}
  [2, 4, 3, 4, 5, 1, 4, 2, 2, 1, 2, 1, 5, 3, 1, 2] -> [ 2 , 1 , 1 , 3 , 2 , 4 , 4 , 4 , 4 , 0 , 0 , 4 , 5 , 2 , 4 , 5 ] {- Input 137 -}
  [2, 4, 3, 4, 5, 1, 4, 2, 2, 1, 2, 1, 5, 3, 1, 2] -> [ 2 , 3 , 2 , 2 , 5 , 5 , 5 , 0 , 5 , 0 , 3 , 2 , 2 , 4 , 2 , 1 ] {- Input 138 -}
  [2, 4, 3, 4, 5, 1, 4, 2, 2, 1, 2, 1, 5, 3, 1, 2] -> [ 2 , 5 , 0 , 2 , 0 , 3 , 3 , 4 , 1 , 2 , 5 , 1 , 5 , 0 , 0 , 2 ] {- Input 139 -}
  [2, 4, 3, 4, 5, 1, 4, 2, 2, 1, 2, 1, 5, 3, 1, 2] -> [ 3 , 0 , 1 , 0 , 4 , 3 , 0 , 5 , 1 , 0 , 4 , 2 , 4 , 5 , 2 , 5 ] {- Input 140 -}
  [2, 4, 3, 4, 5, 1, 4, 2, 2, 1, 2, 1, 5, 3, 1, 2] -> [ 3 , 4 , 3 , 3 , 4 , 1 , 4 , 1 , 0 , 0 , 5 , 1 , 5 , 4 , 5 , 2 ] {- Input 141 -}
  [2, 4, 3, 4, 5, 1, 4, 2, 2, 1, 2, 1, 5, 3, 1, 2] -> [ 3 , 5 , 5 , 0 , 3 , 4 , 5 , 5 , 5 , 1 , 2 , 1 , 5 , 4 , 3 , 4 ] {- Input 142 -}
  [2, 4, 3, 4, 5, 1, 4, 2, 2, 1, 2, 1, 5, 3, 1, 2] -> [ 5 , 1 , 5 , 0 , 3 , 0 , 5 , 4 , 2 , 0 , 4 , 0 , 2 , 4 , 5 , 2 ] {- Input 143 -}
  [2, 4, 3, 4, 5, 1, 4, 2, 2, 1, 2, 1, 5, 3, 1, 2] -> [ 5 , 2 , 4 , 0 , 3 , 2 , 5 , 1 , 2 , 0 , 5 , 4 , 1 , 0 , 2 , 2 ] {- Input 144 -}
  [3, 0, 1, 3, 0, 2, 3, 2, 0, 0, 4, 4, 0, 0, 3, 3] -> [ 0 , 2 , 4 , 3 , 4 , 1 , 3 , 5 , 5 , 5 , 5 , 4 , 1 , 4 , 0 , 4 ] {- Input 145 -}
  [3, 0, 1, 3, 0, 2, 3, 2, 0, 0, 4, 4, 0, 0, 3, 3] -> [ 0 , 4 , 4 , 1 , 5 , 5 , 5 , 4 , 1 , 3 , 2 , 0 , 4 , 3 , 5 , 4 ] {- Input 146 -}
  [3, 0, 1, 3, 0, 2, 3, 2, 0, 0, 4, 4, 0, 0, 3, 3] -> [ 3 , 0 , 1 , 0 , 4 , 3 , 0 , 5 , 1 , 0 , 4 , 2 , 4 , 5 , 2 , 5 ] {- Input 147 -}
  [3, 0, 1, 3, 0, 2, 3, 2, 0, 0, 4, 4, 0, 0, 3, 3] -> [ 3 , 2 , 3 , 2 , 3 , 1 , 5 , 3 , 4 , 5 , 4 , 3 , 5 , 0 , 3 , 3 ] {- Input 148 -}
  [3, 0, 1, 3, 0, 2, 3, 2, 0, 0, 4, 4, 0, 0, 3, 3] -> [ 3 , 2 , 4 , 2 , 4 , 4 , 2 , 0 , 4 , 1 , 3 , 4 , 3 , 5 , 0 , 4 ] {- Input 149 -}
  [3, 0, 1, 3, 0, 2, 3, 2, 0, 0, 4, 4, 0, 0, 3, 3] -> [ 3 , 5 , 5 , 0 , 3 , 4 , 5 , 5 , 5 , 1 , 2 , 1 , 5 , 4 , 3 , 4 ] {- Input 150 -}
  [3, 0, 1, 3, 0, 2, 3, 2, 0, 0, 4, 4, 0, 0, 3, 3] -> [ 4 , 0 , 5 , 2 , 3 , 5 , 3 , 3 , 4 , 2 , 3 , 5 , 5 , 4 , 0 , 3 ] {- Input 151 -}
  [3, 0, 1, 3, 0, 2, 3, 2, 0, 0, 4, 4, 0, 0, 3, 3] -> [ 5 , 5 , 2 , 0 , 3 , 4 , 2 , 2 , 3 , 3 , 5 , 4 , 0 , 5 , 2 , 4 ] {- Input 152 -}
  [3, 1, 3, 5, 5, 0, 0, 3, 4, 3, 0, 4, 4, 2, 4, 4] -> [ 3 , 2 , 4 , 2 , 4 , 4 , 2 , 0 , 4 , 1 , 3 , 4 , 3 , 5 , 0 , 4 ] {- Input 153 -}
  [3, 1, 3, 5, 5, 0, 0, 3, 4, 3, 0, 4, 4, 2, 4, 4] -> [ 3 , 5 , 5 , 0 , 3 , 4 , 5 , 5 , 5 , 1 , 2 , 1 , 5 , 4 , 3 , 4 ] {- Input 154 -}
  [3, 2, 3, 2, 3, 1, 5, 3, 4, 5, 4, 3, 5, 0, 3, 3] -> [ 3 , 5 , 5 , 0 , 3 , 4 , 5 , 5 , 5 , 1 , 2 , 1 , 5 , 4 , 3 , 4 ] {- Input 155 -}
  [3, 3, 5, 1, 0, 1, 3, 2, 2, 1, 0, 4, 2, 1, 4, 0] -> [ 3 , 0 , 1 , 0 , 4 , 3 , 0 , 5 , 1 , 0 , 4 , 2 , 4 , 5 , 2 , 5 ] {- Input 156 -}
  [3, 3, 5, 1, 0, 1, 3, 2, 2, 1, 0, 4, 2, 1, 4, 0] -> [ 3 , 1 , 1 , 3 , 2 , 0 , 0 , 5 , 2 , 3 , 4 , 5 , 5 , 5 , 1 , 0 ] {- Input 157 -}
  [3, 3, 5, 1, 0, 1, 3, 2, 2, 1, 0, 4, 2, 1, 4, 0] -> [ 3 , 2 , 4 , 2 , 4 , 4 , 2 , 0 , 4 , 1 , 3 , 4 , 3 , 5 , 0 , 4 ] {- Input 158 -}
  [3, 3, 5, 1, 0, 1, 3, 2, 2, 1, 0, 4, 2, 1, 4, 0] -> [ 3 , 4 , 3 , 4 , 2 , 4 , 4 , 4 , 2 , 4 , 1 , 4 , 4 , 0 , 1 , 5 ] {- Input 159 -}
  [3, 3, 5, 1, 0, 1, 3, 2, 2, 1, 0, 4, 2, 1, 4, 0] -> [ 3 , 5 , 5 , 0 , 3 , 4 , 5 , 5 , 5 , 1 , 2 , 1 , 5 , 4 , 3 , 4 ] {- Input 160 -}
  [4, 1, 3, 3, 5, 5, 1, 3, 2, 2, 4, 3, 1, 0, 3, 3] -> [ 4 , 0 , 5 , 2 , 3 , 5 , 3 , 3 , 4 , 2 , 3 , 5 , 5 , 4 , 0 , 3 ] {- Input 161 -}
  [4, 2, 1, 3, 2, 5, 1, 3, 3, 4, 1, 0, 3, 5, 3, 5] -> [ 4 , 2 , 0 , 1 , 0 , 5 , 5 , 4 , 3 , 2 , 0 , 2 , 3 , 3 , 1 , 5 ] {- Input 162 -}
  [5, 0, 0, 1, 2, 5, 5, 2, 0, 5, 5, 0, 3, 0, 2, 4] -> [ 5 , 5 , 2 , 0 , 3 , 4 , 2 , 2 , 3 , 3 , 5 , 4 , 0 , 5 , 2 , 4 ] {- Input 163 -}
  [5, 2, 2, 3, 1, 2, 1, 2, 1, 3, 2, 2, 2, 4, 2, 5] -> [ 0 , 4 , 4 , 1 , 5 , 5 , 5 , 4 , 1 , 3 , 2 , 0 , 4 , 3 , 5 , 4 ] {- Input 164 -}
  [5, 2, 2, 3, 1, 2, 1, 2, 1, 3, 2, 2, 2, 4, 2, 5] -> [ 3 , 0 , 1 , 0 , 4 , 3 , 0 , 5 , 1 , 0 , 4 , 2 , 4 , 5 , 2 , 5 ] {- Input 165 -}
  [5, 2, 2, 3, 1, 2, 1, 2, 1, 3, 2, 2, 2, 4, 2, 5] -> [ 3 , 4 , 3 , 4 , 2 , 4 , 4 , 4 , 2 , 4 , 1 , 4 , 4 , 0 , 1 , 5 ] {- Input 166 -}
  [5, 2, 2, 3, 1, 2, 1, 2, 1, 3, 2, 2, 2, 4, 2, 5] -> [ 4 , 2 , 0 , 1 , 0 , 5 , 5 , 4 , 3 , 2 , 0 , 2 , 3 , 3 , 1 , 5 ] {- Input 167 -}
  [5, 2, 2, 3, 1, 2, 1, 2, 1, 3, 2, 2, 2, 4, 2, 5] -> [ 5 , 0 , 0 , 1 , 2 , 5 , 5 , 2 , 0 , 5 , 5 , 0 , 3 , 0 , 2 , 4 ] {- Input 168 -}
  [5, 2, 2, 3, 1, 2, 1, 2, 1, 3, 2, 2, 2, 4, 2, 5] -> [ 5 , 1 , 5 , 0 , 3 , 0 , 5 , 4 , 2 , 0 , 4 , 0 , 2 , 4 , 5 , 2 ] {- Input 169 -}
  [5, 2, 2, 3, 1, 2, 1, 2, 1, 3, 2, 2, 2, 4, 2, 5] -> [ 5 , 2 , 3 , 4 , 3 , 3 , 2 , 5 , 1 , 4 , 3 , 2 , 3 , 5 , 2 , 0 ] {- Input 170 -}
  [5, 2, 2, 3, 1, 2, 1, 2, 1, 3, 2, 2, 2, 4, 2, 5] -> [ 5 , 2 , 4 , 0 , 2 , 5 , 3 , 2 , 3 , 5 , 0 , 0 , 0 , 5 , 1 , 4 ] {- Input 171 -}
  [5, 2, 2, 3, 1, 2, 1, 2, 1, 3, 2, 2, 2, 4, 2, 5] -> [ 5 , 2 , 4 , 0 , 3 , 2 , 5 , 1 , 2 , 0 , 5 , 4 , 1 , 0 , 2 , 2 ] {- Input 172 -}
  [5, 2, 2, 3, 1, 2, 1, 2, 1, 3, 2, 2, 2, 4, 2, 5] -> [ 5 , 5 , 2 , 0 , 3 , 4 , 2 , 2 , 3 , 3 , 5 , 4 , 0 , 5 , 2 , 4 ] {- Input 173 -}
  [5, 2, 4, 0, 2, 5, 3, 2, 3, 5, 0, 0, 0, 5, 1, 4] -> [ 5 , 0 , 0 , 1 , 2 , 5 , 5 , 2 , 0 , 5 , 5 , 0 , 3 , 0 , 2 , 4 ] {- Input 174 -}
  [5, 2, 4, 0, 2, 5, 3, 2, 3, 5, 0, 0, 0, 5, 1, 4] -> [ 5 , 5 , 2 , 0 , 3 , 4 , 2 , 2 , 3 , 3 , 5 , 4 , 0 , 5 , 2 , 4 ] {- Input 175 -}
  [5, 2, 4, 0, 3, 2, 5, 1, 2, 0, 5, 4, 1, 0, 2, 2] -> [ 5 , 1 , 5 , 0 , 3 , 0 , 5 , 4 , 2 , 0 , 4 , 0 , 2 , 4 , 5 , 2 ] {- Input 176 -}
  [5, 4, 0, 4, 3, 1, 2, 5, 3, 2, 0, 0, 2, 2, 4, 0] -> [ 5 , 5 , 2 , 0 , 3 , 4 , 2 , 2 , 3 , 3 , 5 , 4 , 0 , 5 , 2 , 4 ] {- Input 177 -}
  [5, 4, 3, 1, 5, 4, 0, 5, 3, 3, 5, 3, 3, 2, 3, 4] -> [ 5 , 5 , 2 , 0 , 3 , 4 , 2 , 2 , 3 , 3 , 5 , 4 , 0 , 5 , 2 , 4 ] {- Input 178 -}
  [5, 4, 5, 0, 5, 1, 5, 3, 0, 2, 2, 3, 3, 4, 1, 4] -> [ 5 , 5 , 2 , 0 , 3 , 4 , 2 , 2 , 3 , 3 , 5 , 4 , 0 , 5 , 2 , 4 ] {- Input 179 -}
reason
  (1, 45/1)
  (4, 11/1)
  (2, 20/1)
  (0, 30/1)
  (5, 0/1)
  (3, 41/1)
   property Termination
has value Just True
for SRS
  [0, 2, 4, 3, 4, 1, 3, 5, 5, 5, 5, 4, 1, 4, 0, 4] -> [ 0 , 4 , 4 , 1 , 5 , 5 , 5 , 4 , 1 , 3 , 2 , 0 , 4 , 3 , 5 , 4 ] {- Input 81 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [ [0, 0] , [0, 2] , [2, 4] , [4, 3] , [3, 4] , [4, 1] , [1, 3] , [3, 5] , [5, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 4] , [4, 0] , [0, 4] , [4, 0] ] -> [ [0, 0] , [0, 4] , [4, 4] , [4, 1] , [1, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 3] , [3, 2] , [2, 0] , [0, 4] , [4, 3] , [3, 5] , [5, 4] , [4, 0] ] {- Semlab 0 (Concon 0 (Input 81)) -}
  [ [0, 0] , [0, 2] , [2, 4] , [4, 3] , [3, 4] , [4, 1] , [1, 3] , [3, 5] , [5, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 4] , [4, 0] , [0, 4] , [4, 2] ] -> [ [0, 0] , [0, 4] , [4, 4] , [4, 1] , [1, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 3] , [3, 2] , [2, 0] , [0, 4] , [4, 3] , [3, 5] , [5, 4] , [4, 2] ] {- Semlab 0 (Concon 1 (Input 81)) -}
  [ [0, 0] , [0, 2] , [2, 4] , [4, 3] , [3, 4] , [4, 1] , [1, 3] , [3, 5] , [5, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 4] , [4, 0] , [0, 4] , [4, 4] ] -> [ [0, 0] , [0, 4] , [4, 4] , [4, 1] , [1, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 3] , [3, 2] , [2, 0] , [0, 4] , [4, 3] , [3, 5] , [5, 4] , [4, 4] ] {- Semlab 0 (Concon 2 (Input 81)) -}
  [ [0, 0] , [0, 2] , [2, 4] , [4, 3] , [3, 4] , [4, 1] , [1, 3] , [3, 5] , [5, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 4] , [4, 0] , [0, 4] , [4, 3] ] -> [ [0, 0] , [0, 4] , [4, 4] , [4, 1] , [1, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 3] , [3, 2] , [2, 0] , [0, 4] , [4, 3] , [3, 5] , [5, 4] , [4, 3] ] {- Semlab 0 (Concon 3 (Input 81)) -}
  [ [0, 0] , [0, 2] , [2, 4] , [4, 3] , [3, 4] , [4, 1] , [1, 3] , [3, 5] , [5, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 4] , [4, 0] , [0, 4] , [4, 1] ] -> [ [0, 0] , [0, 4] , [4, 4] , [4, 1] , [1, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 3] , [3, 2] , [2, 0] , [0, 4] , [4, 3] , [3, 5] , [5, 4] , [4, 1] ] {- Semlab 0 (Concon 4 (Input 81)) -}
  [ [0, 0] , [0, 2] , [2, 4] , [4, 3] , [3, 4] , [4, 1] , [1, 3] , [3, 5] , [5, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 4] , [4, 0] , [0, 4] , [4, 5] ] -> [ [0, 0] , [0, 4] , [4, 4] , [4, 1] , [1, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 3] , [3, 2] , [2, 0] , [0, 4] , [4, 3] , [3, 5] , [5, 4] , [4, 5] ] {- Semlab 0 (Concon 5 (Input 81)) -}
  [ [2, 0] , [0, 2] , [2, 4] , [4, 3] , [3, 4] , [4, 1] , [1, 3] , [3, 5] , [5, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 4] , [4, 0] , [0, 4] , [4, 0] ] -> [ [2, 0] , [0, 4] , [4, 4] , [4, 1] , [1, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 3] , [3, 2] , [2, 0] , [0, 4] , [4, 3] , [3, 5] , [5, 4] , [4, 0] ] {- Semlab 1 (Concon 0 (Input 81)) -}
  [ [2, 0] , [0, 2] , [2, 4] , [4, 3] , [3, 4] , [4, 1] , [1, 3] , [3, 5] , [5, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 4] , [4, 0] , [0, 4] , [4, 2] ] -> [ [2, 0] , [0, 4] , [4, 4] , [4, 1] , [1, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 3] , [3, 2] , [2, 0] , [0, 4] , [4, 3] , [3, 5] , [5, 4] , [4, 2] ] {- Semlab 1 (Concon 1 (Input 81)) -}
  [ [2, 0] , [0, 2] , [2, 4] , [4, 3] , [3, 4] , [4, 1] , [1, 3] , [3, 5] , [5, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 4] , [4, 0] , [0, 4] , [4, 4] ] -> [ [2, 0] , [0, 4] , [4, 4] , [4, 1] , [1, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 3] , [3, 2] , [2, 0] , [0, 4] , [4, 3] , [3, 5] , [5, 4] , [4, 4] ] {- Semlab 1 (Concon 2 (Input 81)) -}
  [ [2, 0] , [0, 2] , [2, 4] , [4, 3] , [3, 4] , [4, 1] , [1, 3] , [3, 5] , [5, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 4] , [4, 0] , [0, 4] , [4, 3] ] -> [ [2, 0] , [0, 4] , [4, 4] , [4, 1] , [1, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 3] , [3, 2] , [2, 0] , [0, 4] , [4, 3] , [3, 5] , [5, 4] , [4, 3] ] {- Semlab 1 (Concon 3 (Input 81)) -}
  [ [2, 0] , [0, 2] , [2, 4] , [4, 3] , [3, 4] , [4, 1] , [1, 3] , [3, 5] , [5, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 4] , [4, 0] , [0, 4] , [4, 1] ] -> [ [2, 0] , [0, 4] , [4, 4] , [4, 1] , [1, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 3] , [3, 2] , [2, 0] , [0, 4] , [4, 3] , [3, 5] , [5, 4] , [4, 1] ] {- Semlab 1 (Concon 4 (Input 81)) -}
  [ [2, 0] , [0, 2] , [2, 4] , [4, 3] , [3, 4] , [4, 1] , [1, 3] , [3, 5] , [5, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 4] , [4, 0] , [0, 4] , [4, 5] ] -> [ [2, 0] , [0, 4] , [4, 4] , [4, 1] , [1, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 3] , [3, 2] , [2, 0] , [0, 4] , [4, 3] , [3, 5] , [5, 4] , [4, 5] ] {- Semlab 1 (Concon 5 (Input 81)) -}
  [ [4, 0] , [0, 2] , [2, 4] , [4, 3] , [3, 4] , [4, 1] , [1, 3] , [3, 5] , [5, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 4] , [4, 0] , [0, 4] , [4, 0] ] -> [ [4, 0] , [0, 4] , [4, 4] , [4, 1] , [1, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 3] , [3, 2] , [2, 0] , [0, 4] , [4, 3] , [3, 5] , [5, 4] , [4, 0] ] {- Semlab 2 (Concon 0 (Input 81)) -}
  [ [4, 0] , [0, 2] , [2, 4] , [4, 3] , [3, 4] , [4, 1] , [1, 3] , [3, 5] , [5, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 4] , [4, 0] , [0, 4] , [4, 2] ] -> [ [4, 0] , [0, 4] , [4, 4] , [4, 1] , [1, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 3] , [3, 2] , [2, 0] , [0, 4] , [4, 3] , [3, 5] , [5, 4] , [4, 2] ] {- Semlab 2 (Concon 1 (Input 81)) -}
  [ [4, 0] , [0, 2] , [2, 4] , [4, 3] , [3, 4] , [4, 1] , [1, 3] , [3, 5] , [5, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 4] , [4, 0] , [0, 4] , [4, 4] ] -> [ [4, 0] , [0, 4] , [4, 4] , [4, 1] , [1, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 3] , [3, 2] , [2, 0] , [0, 4] , [4, 3] , [3, 5] , [5, 4] , [4, 4] ] {- Semlab 2 (Concon 2 (Input 81)) -}
  [ [4, 0] , [0, 2] , [2, 4] , [4, 3] , [3, 4] , [4, 1] , [1, 3] , [3, 5] , [5, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 4] , [4, 0] , [0, 4] , [4, 3] ] -> [ [4, 0] , [0, 4] , [4, 4] , [4, 1] , [1, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 3] , [3, 2] , [2, 0] , [0, 4] , [4, 3] , [3, 5] , [5, 4] , [4, 3] ] {- Semlab 2 (Concon 3 (Input 81)) -}
  [ [4, 0] , [0, 2] , [2, 4] , [4, 3] , [3, 4] , [4, 1] , [1, 3] , [3, 5] , [5, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 4] , [4, 0] , [0, 4] , [4, 1] ] -> [ [4, 0] , [0, 4] , [4, 4] , [4, 1] , [1, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 3] , [3, 2] , [2, 0] , [0, 4] , [4, 3] , [3, 5] , [5, 4] , [4, 1] ] {- Semlab 2 (Concon 4 (Input 81)) -}
  [ [4, 0] , [0, 2] , [2, 4] , [4, 3] , [3, 4] , [4, 1] , [1, 3] , [3, 5] , [5, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 4] , [4, 0] , [0, 4] , [4, 5] ] -> [ [4, 0] , [0, 4] , [4, 4] , [4, 1] , [1, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 3] , [3, 2] , [2, 0] , [0, 4] , [4, 3] , [3, 5] , [5, 4] , [4, 5] ] {- Semlab 2 (Concon 5 (Input 81)) -}
  [ [3, 0] , [0, 2] , [2, 4] , [4, 3] , [3, 4] , [4, 1] , [1, 3] , [3, 5] , [5, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 4] , [4, 0] , [0, 4] , [4, 0] ] -> [ [3, 0] , [0, 4] , [4, 4] , [4, 1] , [1, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 3] , [3, 2] , [2, 0] , [0, 4] , [4, 3] , [3, 5] , [5, 4] , [4, 0] ] {- Semlab 3 (Concon 0 (Input 81)) -}
  [ [3, 0] , [0, 2] , [2, 4] , [4, 3] , [3, 4] , [4, 1] , [1, 3] , [3, 5] , [5, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 4] , [4, 0] , [0, 4] , [4, 2] ] -> [ [3, 0] , [0, 4] , [4, 4] , [4, 1] , [1, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 3] , [3, 2] , [2, 0] , [0, 4] , [4, 3] , [3, 5] , [5, 4] , [4, 2] ] {- Semlab 3 (Concon 1 (Input 81)) -}
  [ [3, 0] , [0, 2] , [2, 4] , [4, 3] , [3, 4] , [4, 1] , [1, 3] , [3, 5] , [5, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 4] , [4, 0] , [0, 4] , [4, 4] ] -> [ [3, 0] , [0, 4] , [4, 4] , [4, 1] , [1, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 3] , [3, 2] , [2, 0] , [0, 4] , [4, 3] , [3, 5] , [5, 4] , [4, 4] ] {- Semlab 3 (Concon 2 (Input 81)) -}
  [ [3, 0] , [0, 2] , [2, 4] , [4, 3] , [3, 4] , [4, 1] , [1, 3] , [3, 5] , [5, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 4] , [4, 0] , [0, 4] , [4, 3] ] -> [ [3, 0] , [0, 4] , [4, 4] , [4, 1] , [1, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 3] , [3, 2] , [2, 0] , [0, 4] , [4, 3] , [3, 5] , [5, 4] , [4, 3] ] {- Semlab 3 (Concon 3 (Input 81)) -}
  [ [3, 0] , [0, 2] , [2, 4] , [4, 3] , [3, 4] , [4, 1] , [1, 3] , [3, 5] , [5, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 4] , [4, 0] , [0, 4] , [4, 1] ] -> [ [3, 0] , [0, 4] , [4, 4] , [4, 1] , [1, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 3] , [3, 2] , [2, 0] , [0, 4] , [4, 3] , [3, 5] , [5, 4] , [4, 1] ] {- Semlab 3 (Concon 4 (Input 81)) -}
  [ [3, 0] , [0, 2] , [2, 4] , [4, 3] , [3, 4] , [4, 1] , [1, 3] , [3, 5] , [5, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 4] , [4, 0] , [0, 4] , [4, 5] ] -> [ [3, 0] , [0, 4] , [4, 4] , [4, 1] , [1, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 3] , [3, 2] , [2, 0] , [0, 4] , [4, 3] , [3, 5] , [5, 4] , [4, 5] ] {- Semlab 3 (Concon 5 (Input 81)) -}
  [ [1, 0] , [0, 2] , [2, 4] , [4, 3] , [3, 4] , [4, 1] , [1, 3] , [3, 5] , [5, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 4] , [4, 0] , [0, 4] , [4, 0] ] -> [ [1, 0] , [0, 4] , [4, 4] , [4, 1] , [1, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 3] , [3, 2] , [2, 0] , [0, 4] , [4, 3] , [3, 5] , [5, 4] , [4, 0] ] {- Semlab 4 (Concon 0 (Input 81)) -}
  [ [1, 0] , [0, 2] , [2, 4] , [4, 3] , [3, 4] , [4, 1] , [1, 3] , [3, 5] , [5, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 4] , [4, 0] , [0, 4] , [4, 2] ] -> [ [1, 0] , [0, 4] , [4, 4] , [4, 1] , [1, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 3] , [3, 2] , [2, 0] , [0, 4] , [4, 3] , [3, 5] , [5, 4] , [4, 2] ] {- Semlab 4 (Concon 1 (Input 81)) -}
  [ [1, 0] , [0, 2] , [2, 4] , [4, 3] , [3, 4] , [4, 1] , [1, 3] , [3, 5] , [5, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 4] , [4, 0] , [0, 4] , [4, 4] ] -> [ [1, 0] , [0, 4] , [4, 4] , [4, 1] , [1, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 3] , [3, 2] , [2, 0] , [0, 4] , [4, 3] , [3, 5] , [5, 4] , [4, 4] ] {- Semlab 4 (Concon 2 (Input 81)) -}
  [ [1, 0] , [0, 2] , [2, 4] , [4, 3] , [3, 4] , [4, 1] , [1, 3] , [3, 5] , [5, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 4] , [4, 0] , [0, 4] , [4, 3] ] -> [ [1, 0] , [0, 4] , [4, 4] , [4, 1] , [1, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 3] , [3, 2] , [2, 0] , [0, 4] , [4, 3] , [3, 5] , [5, 4] , [4, 3] ] {- Semlab 4 (Concon 3 (Input 81)) -}
  [ [1, 0] , [0, 2] , [2, 4] , [4, 3] , [3, 4] , [4, 1] , [1, 3] , [3, 5] , [5, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 4] , [4, 0] , [0, 4] , [4, 1] ] -> [ [1, 0] , [0, 4] , [4, 4] , [4, 1] , [1, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 3] , [3, 2] , [2, 0] , [0, 4] , [4, 3] , [3, 5] , [5, 4] , [4, 1] ] {- Semlab 4 (Concon 4 (Input 81)) -}
  [ [1, 0] , [0, 2] , [2, 4] , [4, 3] , [3, 4] , [4, 1] , [1, 3] , [3, 5] , [5, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 4] , [4, 0] , [0, 4] , [4, 5] ] -> [ [1, 0] , [0, 4] , [4, 4] , [4, 1] , [1, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 3] , [3, 2] , [2, 0] , [0, 4] , [4, 3] , [3, 5] , [5, 4] , [4, 5] ] {- Semlab 4 (Concon 5 (Input 81)) -}
  [ [5, 0] , [0, 2] , [2, 4] , [4, 3] , [3, 4] , [4, 1] , [1, 3] , [3, 5] , [5, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 4] , [4, 0] , [0, 4] , [4, 0] ] -> [ [5, 0] , [0, 4] , [4, 4] , [4, 1] , [1, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 3] , [3, 2] , [2, 0] , [0, 4] , [4, 3] , [3, 5] , [5, 4] , [4, 0] ] {- Semlab 5 (Concon 0 (Input 81)) -}
  [ [5, 0] , [0, 2] , [2, 4] , [4, 3] , [3, 4] , [4, 1] , [1, 3] , [3, 5] , [5, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 4] , [4, 0] , [0, 4] , [4, 2] ] -> [ [5, 0] , [0, 4] , [4, 4] , [4, 1] , [1, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 3] , [3, 2] , [2, 0] , [0, 4] , [4, 3] , [3, 5] , [5, 4] , [4, 2] ] {- Semlab 5 (Concon 1 (Input 81)) -}
  [ [5, 0] , [0, 2] , [2, 4] , [4, 3] , [3, 4] , [4, 1] , [1, 3] , [3, 5] , [5, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 4] , [4, 0] , [0, 4] , [4, 4] ] -> [ [5, 0] , [0, 4] , [4, 4] , [4, 1] , [1, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 3] , [3, 2] , [2, 0] , [0, 4] , [4, 3] , [3, 5] , [5, 4] , [4, 4] ] {- Semlab 5 (Concon 2 (Input 81)) -}
  [ [5, 0] , [0, 2] , [2, 4] , [4, 3] , [3, 4] , [4, 1] , [1, 3] , [3, 5] , [5, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 4] , [4, 0] , [0, 4] , [4, 3] ] -> [ [5, 0] , [0, 4] , [4, 4] , [4, 1] , [1, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 3] , [3, 2] , [2, 0] , [0, 4] , [4, 3] , [3, 5] , [5, 4] , [4, 3] ] {- Semlab 5 (Concon 3 (Input 81)) -}
  [ [5, 0] , [0, 2] , [2, 4] , [4, 3] , [3, 4] , [4, 1] , [1, 3] , [3, 5] , [5, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 4] , [4, 0] , [0, 4] , [4, 1] ] -> [ [5, 0] , [0, 4] , [4, 4] , [4, 1] , [1, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 3] , [3, 2] , [2, 0] , [0, 4] , [4, 3] , [3, 5] , [5, 4] , [4, 1] ] {- Semlab 5 (Concon 4 (Input 81)) -}
  [ [5, 0] , [0, 2] , [2, 4] , [4, 3] , [3, 4] , [4, 1] , [1, 3] , [3, 5] , [5, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 4] , [4, 0] , [0, 4] , [4, 5] ] -> [ [5, 0] , [0, 4] , [4, 4] , [4, 1] , [1, 5] , [5, 5] , [5, 5] , [5, 4] , [4, 1] , [1, 3] , [3, 2] , [2, 0] , [0, 4] , [4, 3] , [3, 5] , [5, 4] , [4, 5] ] {- Semlab 5 (Concon 5 (Input 81)) -}
reason
  ([1, 4], 1/1)
  ([1, 0], 0/1)
  ([1, 5], 0/1)
  ([1, 3], 0/1)
  ([4, 1], 0/1)
  ([4, 4], 0/1)
  ([4, 2], 0/1)
  ([4, 0], 1/1)
  ([4, 5], 0/1)
  ([4, 3], 0/1)
  ([2, 4], 1/1)
  ([2, 0], 0/1)
  ([0, 4], 0/1)
  ([0, 2], 1/1)
  ([0, 0], 0/1)
  ([5, 4], 0/1)
  ([5, 0], 0/1)
  ([5, 5], 1/1)
  ([3, 4], 1/1)
  ([3, 2], 0/1)
  ([3, 0], 0/1)
  ([3, 5], 0/1)
   property Termination
has value Just True
for SRS
  
reason
  no strict rules

**************************************************
skeleton: (180,6)\Weight(1,6)\TileAllAll{2}(36,22)\Weight(0,0)[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))
