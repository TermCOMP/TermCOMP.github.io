YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/Jkt6T.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRS Reverse [EQUIVALENT, 0 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 73 ms]
(4) QTRS
(5) DependencyPairsProof [EQUIVALENT, 9 ms]
(6) QDP
(7) DependencyGraphProof [EQUIVALENT, 0 ms]
(8) AND
    (9) QDP
        (10) UsableRulesProof [EQUIVALENT, 0 ms]
        (11) QDP
        (12) MNOCProof [EQUIVALENT, 0 ms]
        (13) QDP
        (14) MRRProof [EQUIVALENT, 12 ms]
        (15) QDP
        (16) PisEmptyProof [EQUIVALENT, 0 ms]
        (17) YES
    (18) QDP
        (19) UsableRulesProof [EQUIVALENT, 0 ms]
        (20) QDP
        (21) MNOCProof [EQUIVALENT, 0 ms]
        (22) QDP
        (23) QDPOrderProof [EQUIVALENT, 12 ms]
        (24) QDP
        (25) MRRProof [EQUIVALENT, 4 ms]
        (26) QDP
        (27) PisEmptyProof [EQUIVALENT, 0 ms]
        (28) YES
    (29) QDP
        (30) UsableRulesProof [EQUIVALENT, 0 ms]
        (31) QDP
        (32) QDPOrderProof [EQUIVALENT, 28 ms]
        (33) QDP
        (34) PisEmptyProof [EQUIVALENT, 0 ms]
        (35) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a12(a12(a12(a12(x1)))) -> x1
   a13(a13(a13(a13(x1)))) -> x1
   a14(a14(a14(a14(x1)))) -> x1
   a15(a15(a15(a15(x1)))) -> x1
   a16(a16(a16(a16(x1)))) -> x1
   a23(a23(a23(a23(x1)))) -> x1
   a24(a24(a24(a24(x1)))) -> x1
   a25(a25(a25(a25(x1)))) -> x1
   a26(a26(a26(a26(x1)))) -> x1
   a34(a34(a34(a34(x1)))) -> x1
   a35(a35(a35(a35(x1)))) -> x1
   a36(a36(a36(a36(x1)))) -> x1
   a45(a45(a45(a45(x1)))) -> x1
   a46(a46(a46(a46(x1)))) -> x1
   a56(a56(a56(a56(x1)))) -> x1
   a13(a13(x1)) -> a12(a12(a23(a23(a12(a12(x1))))))
   a14(a14(x1)) -> a12(a12(a23(a23(a34(a34(a23(a23(a12(a12(x1))))))))))
   a15(a15(x1)) -> a12(a12(a23(a23(a34(a34(a45(a45(a34(a34(a23(a23(a12(a12(x1))))))))))))))
   a16(a16(x1)) -> a12(a12(a23(a23(a34(a34(a45(a45(a56(a56(a45(a45(a34(a34(a23(a23(a12(a12(x1))))))))))))))))))
   a24(a24(x1)) -> a23(a23(a34(a34(a23(a23(x1))))))
   a25(a25(x1)) -> a23(a23(a34(a34(a45(a45(a34(a34(a23(a23(x1))))))))))
   a26(a26(x1)) -> a23(a23(a34(a34(a45(a45(a56(a56(a45(a45(a34(a34(a23(a23(x1))))))))))))))
   a35(a35(x1)) -> a34(a34(a45(a45(a34(a34(x1))))))
   a36(a36(x1)) -> a34(a34(a45(a45(a56(a56(a45(a45(a34(a34(x1))))))))))
   a46(a46(x1)) -> a45(a45(a56(a56(a45(a45(x1))))))
   a12(a12(a23(a23(a12(a12(a23(a23(a12(a12(a23(a23(x1)))))))))))) -> x1
   a23(a23(a34(a34(a23(a23(a34(a34(a23(a23(a34(a34(x1)))))))))))) -> x1
   a34(a34(a45(a45(a34(a34(a45(a45(a34(a34(a45(a45(x1)))))))))))) -> x1
   a45(a45(a56(a56(a45(a45(a56(a56(a45(a45(a56(a56(x1)))))))))))) -> x1
   a12(a12(a34(a34(x1)))) -> a34(a34(a12(a12(x1))))
   a12(a12(a45(a45(x1)))) -> a45(a45(a12(a12(x1))))
   a12(a12(a56(a56(x1)))) -> a56(a56(a12(a12(x1))))
   a23(a23(a45(a45(x1)))) -> a45(a45(a23(a23(x1))))
   a23(a23(a56(a56(x1)))) -> a56(a56(a23(a23(x1))))
   a34(a34(a56(a56(x1)))) -> a56(a56(a34(a34(x1))))

Q is empty.

----------------------------------------

(1) QTRS Reverse (EQUIVALENT)
We applied the QTRS Reverse Processor [REVERSE].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a12(a12(a12(a12(x1)))) -> x1
   a13(a13(a13(a13(x1)))) -> x1
   a14(a14(a14(a14(x1)))) -> x1
   a15(a15(a15(a15(x1)))) -> x1
   a16(a16(a16(a16(x1)))) -> x1
   a23(a23(a23(a23(x1)))) -> x1
   a24(a24(a24(a24(x1)))) -> x1
   a25(a25(a25(a25(x1)))) -> x1
   a26(a26(a26(a26(x1)))) -> x1
   a34(a34(a34(a34(x1)))) -> x1
   a35(a35(a35(a35(x1)))) -> x1
   a36(a36(a36(a36(x1)))) -> x1
   a45(a45(a45(a45(x1)))) -> x1
   a46(a46(a46(a46(x1)))) -> x1
   a56(a56(a56(a56(x1)))) -> x1
   a13(a13(x1)) -> a12(a12(a23(a23(a12(a12(x1))))))
   a14(a14(x1)) -> a12(a12(a23(a23(a34(a34(a23(a23(a12(a12(x1))))))))))
   a15(a15(x1)) -> a12(a12(a23(a23(a34(a34(a45(a45(a34(a34(a23(a23(a12(a12(x1))))))))))))))
   a16(a16(x1)) -> a12(a12(a23(a23(a34(a34(a45(a45(a56(a56(a45(a45(a34(a34(a23(a23(a12(a12(x1))))))))))))))))))
   a24(a24(x1)) -> a23(a23(a34(a34(a23(a23(x1))))))
   a25(a25(x1)) -> a23(a23(a34(a34(a45(a45(a34(a34(a23(a23(x1))))))))))
   a26(a26(x1)) -> a23(a23(a34(a34(a45(a45(a56(a56(a45(a45(a34(a34(a23(a23(x1))))))))))))))
   a35(a35(x1)) -> a34(a34(a45(a45(a34(a34(x1))))))
   a36(a36(x1)) -> a34(a34(a45(a45(a56(a56(a45(a45(a34(a34(x1))))))))))
   a46(a46(x1)) -> a45(a45(a56(a56(a45(a45(x1))))))
   a23(a23(a12(a12(a23(a23(a12(a12(a23(a23(a12(a12(x1)))))))))))) -> x1
   a34(a34(a23(a23(a34(a34(a23(a23(a34(a34(a23(a23(x1)))))))))))) -> x1
   a45(a45(a34(a34(a45(a45(a34(a34(a45(a45(a34(a34(x1)))))))))))) -> x1
   a56(a56(a45(a45(a56(a56(a45(a45(a56(a56(a45(a45(x1)))))))))))) -> x1
   a34(a34(a12(a12(x1)))) -> a12(a12(a34(a34(x1))))
   a45(a45(a12(a12(x1)))) -> a12(a12(a45(a45(x1))))
   a56(a56(a12(a12(x1)))) -> a12(a12(a56(a56(x1))))
   a45(a45(a23(a23(x1)))) -> a23(a23(a45(a45(x1))))
   a56(a56(a23(a23(x1)))) -> a23(a23(a56(a56(x1))))
   a56(a56(a34(a34(x1)))) -> a34(a34(a56(a56(x1))))

Q is empty.

----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(a12(x_1)) = 1 + x_1
   POL(a13(x_1)) = 4 + x_1
   POL(a14(x_1)) = 6 + x_1
   POL(a15(x_1)) = 8 + x_1
   POL(a16(x_1)) = 10 + x_1
   POL(a23(x_1)) = 1 + x_1
   POL(a24(x_1)) = 4 + x_1
   POL(a25(x_1)) = 6 + x_1
   POL(a26(x_1)) = 8 + x_1
   POL(a34(x_1)) = 1 + x_1
   POL(a35(x_1)) = 4 + x_1
   POL(a36(x_1)) = 6 + x_1
   POL(a45(x_1)) = 1 + x_1
   POL(a46(x_1)) = 4 + x_1
   POL(a56(x_1)) = 1 + x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   a12(a12(a12(a12(x1)))) -> x1
   a13(a13(a13(a13(x1)))) -> x1
   a14(a14(a14(a14(x1)))) -> x1
   a15(a15(a15(a15(x1)))) -> x1
   a16(a16(a16(a16(x1)))) -> x1
   a23(a23(a23(a23(x1)))) -> x1
   a24(a24(a24(a24(x1)))) -> x1
   a25(a25(a25(a25(x1)))) -> x1
   a26(a26(a26(a26(x1)))) -> x1
   a34(a34(a34(a34(x1)))) -> x1
   a35(a35(a35(a35(x1)))) -> x1
   a36(a36(a36(a36(x1)))) -> x1
   a45(a45(a45(a45(x1)))) -> x1
   a46(a46(a46(a46(x1)))) -> x1
   a56(a56(a56(a56(x1)))) -> x1
   a13(a13(x1)) -> a12(a12(a23(a23(a12(a12(x1))))))
   a14(a14(x1)) -> a12(a12(a23(a23(a34(a34(a23(a23(a12(a12(x1))))))))))
   a15(a15(x1)) -> a12(a12(a23(a23(a34(a34(a45(a45(a34(a34(a23(a23(a12(a12(x1))))))))))))))
   a16(a16(x1)) -> a12(a12(a23(a23(a34(a34(a45(a45(a56(a56(a45(a45(a34(a34(a23(a23(a12(a12(x1))))))))))))))))))
   a24(a24(x1)) -> a23(a23(a34(a34(a23(a23(x1))))))
   a25(a25(x1)) -> a23(a23(a34(a34(a45(a45(a34(a34(a23(a23(x1))))))))))
   a26(a26(x1)) -> a23(a23(a34(a34(a45(a45(a56(a56(a45(a45(a34(a34(a23(a23(x1))))))))))))))
   a35(a35(x1)) -> a34(a34(a45(a45(a34(a34(x1))))))
   a36(a36(x1)) -> a34(a34(a45(a45(a56(a56(a45(a45(a34(a34(x1))))))))))
   a46(a46(x1)) -> a45(a45(a56(a56(a45(a45(x1))))))
   a23(a23(a12(a12(a23(a23(a12(a12(a23(a23(a12(a12(x1)))))))))))) -> x1
   a34(a34(a23(a23(a34(a34(a23(a23(a34(a34(a23(a23(x1)))))))))))) -> x1
   a45(a45(a34(a34(a45(a45(a34(a34(a45(a45(a34(a34(x1)))))))))))) -> x1
   a56(a56(a45(a45(a56(a56(a45(a45(a56(a56(a45(a45(x1)))))))))))) -> x1




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a34(a34(a12(a12(x1)))) -> a12(a12(a34(a34(x1))))
   a45(a45(a12(a12(x1)))) -> a12(a12(a45(a45(x1))))
   a56(a56(a12(a12(x1)))) -> a12(a12(a56(a56(x1))))
   a45(a45(a23(a23(x1)))) -> a23(a23(a45(a45(x1))))
   a56(a56(a23(a23(x1)))) -> a23(a23(a56(a56(x1))))
   a56(a56(a34(a34(x1)))) -> a34(a34(a56(a56(x1))))

Q is empty.

----------------------------------------

(5) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A34(a34(a12(a12(x1)))) -> A34(a34(x1))
   A34(a34(a12(a12(x1)))) -> A34(x1)
   A45(a45(a12(a12(x1)))) -> A45(a45(x1))
   A45(a45(a12(a12(x1)))) -> A45(x1)
   A56(a56(a12(a12(x1)))) -> A56(a56(x1))
   A56(a56(a12(a12(x1)))) -> A56(x1)
   A45(a45(a23(a23(x1)))) -> A45(a45(x1))
   A45(a45(a23(a23(x1)))) -> A45(x1)
   A56(a56(a23(a23(x1)))) -> A56(a56(x1))
   A56(a56(a23(a23(x1)))) -> A56(x1)
   A56(a56(a34(a34(x1)))) -> A34(a34(a56(a56(x1))))
   A56(a56(a34(a34(x1)))) -> A34(a56(a56(x1)))
   A56(a56(a34(a34(x1)))) -> A56(a56(x1))
   A56(a56(a34(a34(x1)))) -> A56(x1)

The TRS R consists of the following rules:

   a34(a34(a12(a12(x1)))) -> a12(a12(a34(a34(x1))))
   a45(a45(a12(a12(x1)))) -> a12(a12(a45(a45(x1))))
   a56(a56(a12(a12(x1)))) -> a12(a12(a56(a56(x1))))
   a45(a45(a23(a23(x1)))) -> a23(a23(a45(a45(x1))))
   a56(a56(a23(a23(x1)))) -> a23(a23(a56(a56(x1))))
   a56(a56(a34(a34(x1)))) -> a34(a34(a56(a56(x1))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 3 SCCs with 2 less nodes.
----------------------------------------

(8)
Complex Obligation (AND)

----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A45(a45(a12(a12(x1)))) -> A45(x1)
   A45(a45(a12(a12(x1)))) -> A45(a45(x1))
   A45(a45(a23(a23(x1)))) -> A45(a45(x1))
   A45(a45(a23(a23(x1)))) -> A45(x1)

The TRS R consists of the following rules:

   a34(a34(a12(a12(x1)))) -> a12(a12(a34(a34(x1))))
   a45(a45(a12(a12(x1)))) -> a12(a12(a45(a45(x1))))
   a56(a56(a12(a12(x1)))) -> a12(a12(a56(a56(x1))))
   a45(a45(a23(a23(x1)))) -> a23(a23(a45(a45(x1))))
   a56(a56(a23(a23(x1)))) -> a23(a23(a56(a56(x1))))
   a56(a56(a34(a34(x1)))) -> a34(a34(a56(a56(x1))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A45(a45(a12(a12(x1)))) -> A45(x1)
   A45(a45(a12(a12(x1)))) -> A45(a45(x1))
   A45(a45(a23(a23(x1)))) -> A45(a45(x1))
   A45(a45(a23(a23(x1)))) -> A45(x1)

The TRS R consists of the following rules:

   a45(a45(a12(a12(x1)))) -> a12(a12(a45(a45(x1))))
   a45(a45(a23(a23(x1)))) -> a23(a23(a45(a45(x1))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) MNOCProof (EQUIVALENT)
We use the modular non-overlap check [LPAR04] to enlarge Q to all left-hand sides of R.
----------------------------------------

(13)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A45(a45(a12(a12(x1)))) -> A45(x1)
   A45(a45(a12(a12(x1)))) -> A45(a45(x1))
   A45(a45(a23(a23(x1)))) -> A45(a45(x1))
   A45(a45(a23(a23(x1)))) -> A45(x1)

The TRS R consists of the following rules:

   a45(a45(a12(a12(x1)))) -> a12(a12(a45(a45(x1))))
   a45(a45(a23(a23(x1)))) -> a23(a23(a45(a45(x1))))

The set Q consists of the following terms:

   a45(a45(a12(a12(x0))))
   a45(a45(a23(a23(x0))))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(14) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.

Strictly oriented dependency pairs:

   A45(a45(a12(a12(x1)))) -> A45(x1)
   A45(a45(a12(a12(x1)))) -> A45(a45(x1))
   A45(a45(a23(a23(x1)))) -> A45(a45(x1))
   A45(a45(a23(a23(x1)))) -> A45(x1)

Strictly oriented rules of the TRS R:

   a45(a45(a12(a12(x1)))) -> a12(a12(a45(a45(x1))))

Used ordering: Polynomial interpretation [POLO]:

   POL(A45(x_1)) = 2*x_1
   POL(a12(x_1)) = 2 + 2*x_1
   POL(a23(x_1)) = 3 + 3*x_1
   POL(a45(x_1)) = 3 + 3*x_1


----------------------------------------

(15)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   a45(a45(a23(a23(x1)))) -> a23(a23(a45(a45(x1))))

The set Q consists of the following terms:

   a45(a45(a12(a12(x0))))
   a45(a45(a23(a23(x0))))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(16) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(17)
YES

----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A34(a34(a12(a12(x1)))) -> A34(x1)
   A34(a34(a12(a12(x1)))) -> A34(a34(x1))

The TRS R consists of the following rules:

   a34(a34(a12(a12(x1)))) -> a12(a12(a34(a34(x1))))
   a45(a45(a12(a12(x1)))) -> a12(a12(a45(a45(x1))))
   a56(a56(a12(a12(x1)))) -> a12(a12(a56(a56(x1))))
   a45(a45(a23(a23(x1)))) -> a23(a23(a45(a45(x1))))
   a56(a56(a23(a23(x1)))) -> a23(a23(a56(a56(x1))))
   a56(a56(a34(a34(x1)))) -> a34(a34(a56(a56(x1))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A34(a34(a12(a12(x1)))) -> A34(x1)
   A34(a34(a12(a12(x1)))) -> A34(a34(x1))

The TRS R consists of the following rules:

   a34(a34(a12(a12(x1)))) -> a12(a12(a34(a34(x1))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) MNOCProof (EQUIVALENT)
We use the modular non-overlap check [LPAR04] to enlarge Q to all left-hand sides of R.
----------------------------------------

(22)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A34(a34(a12(a12(x1)))) -> A34(x1)
   A34(a34(a12(a12(x1)))) -> A34(a34(x1))

The TRS R consists of the following rules:

   a34(a34(a12(a12(x1)))) -> a12(a12(a34(a34(x1))))

The set Q consists of the following terms:

   a34(a34(a12(a12(x0))))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(23) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   A34(a34(a12(a12(x1)))) -> A34(x1)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(A34(x_1)) = 2*x_1
   POL(a12(x_1)) = x_1
   POL(a34(x_1)) = 1 + 4*x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   a34(a34(a12(a12(x1)))) -> a12(a12(a34(a34(x1))))


----------------------------------------

(24)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A34(a34(a12(a12(x1)))) -> A34(a34(x1))

The TRS R consists of the following rules:

   a34(a34(a12(a12(x1)))) -> a12(a12(a34(a34(x1))))

The set Q consists of the following terms:

   a34(a34(a12(a12(x0))))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(25) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.

Strictly oriented dependency pairs:

   A34(a34(a12(a12(x1)))) -> A34(a34(x1))

Strictly oriented rules of the TRS R:

   a34(a34(a12(a12(x1)))) -> a12(a12(a34(a34(x1))))

Used ordering: Polynomial interpretation [POLO]:

   POL(A34(x_1)) = 2*x_1
   POL(a12(x_1)) = 3 + 3*x_1
   POL(a34(x_1)) = 3*x_1


----------------------------------------

(26)
Obligation:
Q DP problem:
P is empty.
R is empty.
The set Q consists of the following terms:

   a34(a34(a12(a12(x0))))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(27) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(28)
YES

----------------------------------------

(29)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A56(a56(a12(a12(x1)))) -> A56(x1)
   A56(a56(a12(a12(x1)))) -> A56(a56(x1))
   A56(a56(a23(a23(x1)))) -> A56(a56(x1))
   A56(a56(a23(a23(x1)))) -> A56(x1)
   A56(a56(a34(a34(x1)))) -> A56(a56(x1))
   A56(a56(a34(a34(x1)))) -> A56(x1)

The TRS R consists of the following rules:

   a34(a34(a12(a12(x1)))) -> a12(a12(a34(a34(x1))))
   a45(a45(a12(a12(x1)))) -> a12(a12(a45(a45(x1))))
   a56(a56(a12(a12(x1)))) -> a12(a12(a56(a56(x1))))
   a45(a45(a23(a23(x1)))) -> a23(a23(a45(a45(x1))))
   a56(a56(a23(a23(x1)))) -> a23(a23(a56(a56(x1))))
   a56(a56(a34(a34(x1)))) -> a34(a34(a56(a56(x1))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(30) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(31)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A56(a56(a12(a12(x1)))) -> A56(x1)
   A56(a56(a12(a12(x1)))) -> A56(a56(x1))
   A56(a56(a23(a23(x1)))) -> A56(a56(x1))
   A56(a56(a23(a23(x1)))) -> A56(x1)
   A56(a56(a34(a34(x1)))) -> A56(a56(x1))
   A56(a56(a34(a34(x1)))) -> A56(x1)

The TRS R consists of the following rules:

   a56(a56(a12(a12(x1)))) -> a12(a12(a56(a56(x1))))
   a56(a56(a23(a23(x1)))) -> a23(a23(a56(a56(x1))))
   a56(a56(a34(a34(x1)))) -> a34(a34(a56(a56(x1))))
   a34(a34(a12(a12(x1)))) -> a12(a12(a34(a34(x1))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(32) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   A56(a56(a12(a12(x1)))) -> A56(x1)
   A56(a56(a12(a12(x1)))) -> A56(a56(x1))
   A56(a56(a23(a23(x1)))) -> A56(a56(x1))
   A56(a56(a23(a23(x1)))) -> A56(x1)
   A56(a56(a34(a34(x1)))) -> A56(a56(x1))
   A56(a56(a34(a34(x1)))) -> A56(x1)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( A56_1(x_1) ) = x_1 + 2
POL( a56_1(x_1) ) = 2x_1 + 1
POL( a12_1(x_1) ) = 2x_1 + 1
POL( a23_1(x_1) ) = x_1 + 1
POL( a34_1(x_1) ) = 2x_1 + 1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   a56(a56(a12(a12(x1)))) -> a12(a12(a56(a56(x1))))
   a56(a56(a23(a23(x1)))) -> a23(a23(a56(a56(x1))))
   a56(a56(a34(a34(x1)))) -> a34(a34(a56(a56(x1))))
   a34(a34(a12(a12(x1)))) -> a12(a12(a34(a34(x1))))


----------------------------------------

(33)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   a56(a56(a12(a12(x1)))) -> a12(a12(a56(a56(x1))))
   a56(a56(a23(a23(x1)))) -> a23(a23(a56(a56(x1))))
   a56(a56(a34(a34(x1)))) -> a34(a34(a56(a56(x1))))
   a34(a34(a12(a12(x1)))) -> a12(a12(a34(a34(x1))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(34) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(35)
YES
