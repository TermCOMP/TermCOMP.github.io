YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/BP9ha.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 129 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) QDP
(5) QDPOrderProof [EQUIVALENT, 174 ms]
(6) QDP
(7) DependencyGraphProof [EQUIVALENT, 0 ms]
(8) QDP
(9) QDPOrderProof [EQUIVALENT, 110 ms]
(10) QDP
(11) DependencyGraphProof [EQUIVALENT, 0 ms]
(12) AND
    (13) QDP
        (14) QDPOrderProof [EQUIVALENT, 40 ms]
        (15) QDP
        (16) QDPOrderProof [EQUIVALENT, 32 ms]
        (17) QDP
        (18) QDPOrderProof [EQUIVALENT, 24 ms]
        (19) QDP
        (20) QDPOrderProof [EQUIVALENT, 31 ms]
        (21) QDP
        (22) QDPOrderProof [EQUIVALENT, 28 ms]
        (23) QDP
        (24) PisEmptyProof [EQUIVALENT, 0 ms]
        (25) YES
    (26) QDP
        (27) QDPOrderProof [EQUIVALENT, 29 ms]
        (28) QDP
        (29) PisEmptyProof [EQUIVALENT, 0 ms]
        (30) YES
    (31) QDP
        (32) QDPOrderProof [EQUIVALENT, 33 ms]
        (33) QDP
        (34) PisEmptyProof [EQUIVALENT, 0 ms]
        (35) YES
    (36) QDP
        (37) QDPOrderProof [EQUIVALENT, 40 ms]
        (38) QDP
        (39) PisEmptyProof [EQUIVALENT, 0 ms]
        (40) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   0(1(2(x1))) -> 0(2(1(1(x1))))
   0(3(2(x1))) -> 0(2(1(3(x1))))
   2(4(1(x1))) -> 4(2(1(1(x1))))
   0(0(3(2(x1)))) -> 0(0(2(1(3(x1)))))
   0(1(0(3(x1)))) -> 0(1(1(3(0(x1)))))
   0(1(0(5(x1)))) -> 0(0(1(1(5(x1)))))
   0(1(2(2(x1)))) -> 0(2(1(1(2(x1)))))
   0(1(2(3(x1)))) -> 0(2(1(3(1(x1)))))
   0(1(2(5(x1)))) -> 2(1(1(0(5(x1)))))
   0(1(4(1(x1)))) -> 0(4(1(1(1(x1)))))
   0(1(4(2(x1)))) -> 0(0(2(1(4(x1)))))
   0(1(4(2(x1)))) -> 0(4(0(2(1(x1)))))
   0(1(4(3(x1)))) -> 4(0(1(1(3(x1)))))
   0(1(4(5(x1)))) -> 0(1(1(5(4(x1)))))
   0(1(5(2(x1)))) -> 0(2(5(1(1(x1)))))
   0(2(0(3(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(1(x1)))) -> 0(0(1(3(1(x1)))))
   0(3(0(2(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(3(x1)))) -> 0(0(3(1(3(x1)))))
   0(3(2(0(x1)))) -> 0(2(1(3(0(x1)))))
   0(3(5(1(x1)))) -> 0(5(3(1(1(x1)))))
   0(4(0(1(x1)))) -> 0(0(4(1(1(x1)))))
   0(5(2(0(x1)))) -> 2(1(5(0(0(x1)))))
   2(1(2(3(x1)))) -> 2(1(1(3(2(x1)))))
   2(1(4(1(x1)))) -> 4(2(1(1(1(x1)))))
   2(2(0(3(x1)))) -> 2(0(2(1(3(x1)))))
   2(2(4(1(x1)))) -> 2(4(2(1(1(x1)))))
   2(3(1(4(x1)))) -> 2(1(1(3(4(x1)))))
   2(4(1(4(x1)))) -> 4(4(2(1(1(x1)))))
   2(4(3(1(x1)))) -> 4(2(3(1(1(x1)))))
   2(5(0(1(x1)))) -> 0(2(5(1(1(x1)))))
   2(5(0(3(x1)))) -> 5(0(2(1(3(x1)))))
   3(0(1(0(x1)))) -> 3(1(0(0(0(x1)))))
   3(0(1(4(x1)))) -> 3(1(1(0(4(x1)))))
   3(0(3(0(x1)))) -> 3(1(3(0(0(x1)))))
   3(1(0(3(x1)))) -> 3(1(1(3(0(x1)))))
   3(1(2(1(x1)))) -> 1(3(2(1(1(x1)))))
   3(1(2(1(x1)))) -> 3(2(1(1(1(x1)))))
   3(2(0(1(x1)))) -> 1(3(0(2(1(x1)))))
   3(2(0(1(x1)))) -> 3(1(0(2(1(x1)))))
   3(4(1(2(x1)))) -> 3(2(1(1(4(x1)))))
   3(5(1(4(x1)))) -> 3(1(1(5(4(x1)))))
   4(1(0(1(x1)))) -> 4(0(1(1(1(x1)))))
   4(1(2(1(x1)))) -> 2(4(1(1(1(x1)))))
   4(1(4(3(x1)))) -> 4(1(1(3(4(x1)))))
   4(2(4(1(x1)))) -> 4(4(2(1(1(x1)))))
   4(4(1(2(x1)))) -> 4(2(1(1(4(x1)))))
   4(5(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(1(0(3(x1)))) -> 5(0(1(1(3(x1)))))
   5(1(0(3(x1)))) -> 5(1(1(3(0(x1)))))
   5(1(3(1(x1)))) -> 5(3(1(1(1(x1)))))
   5(1(4(3(x1)))) -> 4(1(1(3(5(x1)))))
   5(1(4(4(x1)))) -> 4(1(1(5(4(x1)))))
   5(1(5(3(x1)))) -> 5(5(1(1(3(x1)))))
   5(2(0(1(x1)))) -> 2(0(5(1(1(x1)))))
   5(2(0(5(x1)))) -> 5(0(2(1(5(x1)))))
   5(3(4(1(x1)))) -> 5(4(3(1(1(x1)))))
   5(4(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(4(1(0(x1)))) -> 4(1(1(5(0(x1)))))
   5(4(1(0(x1)))) -> 5(1(1(4(0(x1)))))

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   0^1(1(2(x1))) -> 0^1(2(1(1(x1))))
   0^1(1(2(x1))) -> 2^1(1(1(x1)))
   0^1(3(2(x1))) -> 0^1(2(1(3(x1))))
   0^1(3(2(x1))) -> 2^1(1(3(x1)))
   0^1(3(2(x1))) -> 3^1(x1)
   2^1(4(1(x1))) -> 4^1(2(1(1(x1))))
   2^1(4(1(x1))) -> 2^1(1(1(x1)))
   0^1(0(3(2(x1)))) -> 0^1(0(2(1(3(x1)))))
   0^1(0(3(2(x1)))) -> 0^1(2(1(3(x1))))
   0^1(0(3(2(x1)))) -> 2^1(1(3(x1)))
   0^1(0(3(2(x1)))) -> 3^1(x1)
   0^1(1(0(3(x1)))) -> 0^1(1(1(3(0(x1)))))
   0^1(1(0(3(x1)))) -> 3^1(0(x1))
   0^1(1(0(3(x1)))) -> 0^1(x1)
   0^1(1(0(5(x1)))) -> 0^1(0(1(1(5(x1)))))
   0^1(1(0(5(x1)))) -> 0^1(1(1(5(x1))))
   0^1(1(2(2(x1)))) -> 0^1(2(1(1(2(x1)))))
   0^1(1(2(2(x1)))) -> 2^1(1(1(2(x1))))
   0^1(1(2(3(x1)))) -> 0^1(2(1(3(1(x1)))))
   0^1(1(2(3(x1)))) -> 2^1(1(3(1(x1))))
   0^1(1(2(3(x1)))) -> 3^1(1(x1))
   0^1(1(2(5(x1)))) -> 2^1(1(1(0(5(x1)))))
   0^1(1(2(5(x1)))) -> 0^1(5(x1))
   0^1(1(4(1(x1)))) -> 0^1(4(1(1(1(x1)))))
   0^1(1(4(1(x1)))) -> 4^1(1(1(1(x1))))
   0^1(1(4(2(x1)))) -> 0^1(0(2(1(4(x1)))))
   0^1(1(4(2(x1)))) -> 0^1(2(1(4(x1))))
   0^1(1(4(2(x1)))) -> 2^1(1(4(x1)))
   0^1(1(4(2(x1)))) -> 4^1(x1)
   0^1(1(4(2(x1)))) -> 0^1(4(0(2(1(x1)))))
   0^1(1(4(2(x1)))) -> 4^1(0(2(1(x1))))
   0^1(1(4(2(x1)))) -> 0^1(2(1(x1)))
   0^1(1(4(2(x1)))) -> 2^1(1(x1))
   0^1(1(4(3(x1)))) -> 4^1(0(1(1(3(x1)))))
   0^1(1(4(3(x1)))) -> 0^1(1(1(3(x1))))
   0^1(1(4(5(x1)))) -> 0^1(1(1(5(4(x1)))))
   0^1(1(4(5(x1)))) -> 5^1(4(x1))
   0^1(1(4(5(x1)))) -> 4^1(x1)
   0^1(1(5(2(x1)))) -> 0^1(2(5(1(1(x1)))))
   0^1(1(5(2(x1)))) -> 2^1(5(1(1(x1))))
   0^1(1(5(2(x1)))) -> 5^1(1(1(x1)))
   0^1(2(0(3(x1)))) -> 0^1(0(2(3(1(x1)))))
   0^1(2(0(3(x1)))) -> 0^1(2(3(1(x1))))
   0^1(2(0(3(x1)))) -> 2^1(3(1(x1)))
   0^1(2(0(3(x1)))) -> 3^1(1(x1))
   0^1(3(0(1(x1)))) -> 0^1(0(1(3(1(x1)))))
   0^1(3(0(1(x1)))) -> 0^1(1(3(1(x1))))
   0^1(3(0(1(x1)))) -> 3^1(1(x1))
   0^1(3(0(2(x1)))) -> 0^1(0(2(3(1(x1)))))
   0^1(3(0(2(x1)))) -> 0^1(2(3(1(x1))))
   0^1(3(0(2(x1)))) -> 2^1(3(1(x1)))
   0^1(3(0(2(x1)))) -> 3^1(1(x1))
   0^1(3(0(3(x1)))) -> 0^1(0(3(1(3(x1)))))
   0^1(3(0(3(x1)))) -> 0^1(3(1(3(x1))))
   0^1(3(0(3(x1)))) -> 3^1(1(3(x1)))
   0^1(3(2(0(x1)))) -> 0^1(2(1(3(0(x1)))))
   0^1(3(2(0(x1)))) -> 2^1(1(3(0(x1))))
   0^1(3(2(0(x1)))) -> 3^1(0(x1))
   0^1(3(5(1(x1)))) -> 0^1(5(3(1(1(x1)))))
   0^1(3(5(1(x1)))) -> 5^1(3(1(1(x1))))
   0^1(3(5(1(x1)))) -> 3^1(1(1(x1)))
   0^1(4(0(1(x1)))) -> 0^1(0(4(1(1(x1)))))
   0^1(4(0(1(x1)))) -> 0^1(4(1(1(x1))))
   0^1(4(0(1(x1)))) -> 4^1(1(1(x1)))
   0^1(5(2(0(x1)))) -> 2^1(1(5(0(0(x1)))))
   0^1(5(2(0(x1)))) -> 5^1(0(0(x1)))
   0^1(5(2(0(x1)))) -> 0^1(0(x1))
   2^1(1(2(3(x1)))) -> 2^1(1(1(3(2(x1)))))
   2^1(1(2(3(x1)))) -> 3^1(2(x1))
   2^1(1(2(3(x1)))) -> 2^1(x1)
   2^1(1(4(1(x1)))) -> 4^1(2(1(1(1(x1)))))
   2^1(1(4(1(x1)))) -> 2^1(1(1(1(x1))))
   2^1(2(0(3(x1)))) -> 2^1(0(2(1(3(x1)))))
   2^1(2(0(3(x1)))) -> 0^1(2(1(3(x1))))
   2^1(2(0(3(x1)))) -> 2^1(1(3(x1)))
   2^1(2(4(1(x1)))) -> 2^1(4(2(1(1(x1)))))
   2^1(2(4(1(x1)))) -> 4^1(2(1(1(x1))))
   2^1(2(4(1(x1)))) -> 2^1(1(1(x1)))
   2^1(3(1(4(x1)))) -> 2^1(1(1(3(4(x1)))))
   2^1(3(1(4(x1)))) -> 3^1(4(x1))
   2^1(4(1(4(x1)))) -> 4^1(4(2(1(1(x1)))))
   2^1(4(1(4(x1)))) -> 4^1(2(1(1(x1))))
   2^1(4(1(4(x1)))) -> 2^1(1(1(x1)))
   2^1(4(3(1(x1)))) -> 4^1(2(3(1(1(x1)))))
   2^1(4(3(1(x1)))) -> 2^1(3(1(1(x1))))
   2^1(4(3(1(x1)))) -> 3^1(1(1(x1)))
   2^1(5(0(1(x1)))) -> 0^1(2(5(1(1(x1)))))
   2^1(5(0(1(x1)))) -> 2^1(5(1(1(x1))))
   2^1(5(0(1(x1)))) -> 5^1(1(1(x1)))
   2^1(5(0(3(x1)))) -> 5^1(0(2(1(3(x1)))))
   2^1(5(0(3(x1)))) -> 0^1(2(1(3(x1))))
   2^1(5(0(3(x1)))) -> 2^1(1(3(x1)))
   3^1(0(1(0(x1)))) -> 3^1(1(0(0(0(x1)))))
   3^1(0(1(0(x1)))) -> 0^1(0(0(x1)))
   3^1(0(1(0(x1)))) -> 0^1(0(x1))
   3^1(0(1(4(x1)))) -> 3^1(1(1(0(4(x1)))))
   3^1(0(1(4(x1)))) -> 0^1(4(x1))
   3^1(0(3(0(x1)))) -> 3^1(1(3(0(0(x1)))))
   3^1(0(3(0(x1)))) -> 3^1(0(0(x1)))
   3^1(0(3(0(x1)))) -> 0^1(0(x1))
   3^1(1(0(3(x1)))) -> 3^1(1(1(3(0(x1)))))
   3^1(1(0(3(x1)))) -> 3^1(0(x1))
   3^1(1(0(3(x1)))) -> 0^1(x1)
   3^1(1(2(1(x1)))) -> 3^1(2(1(1(x1))))
   3^1(1(2(1(x1)))) -> 2^1(1(1(x1)))
   3^1(1(2(1(x1)))) -> 3^1(2(1(1(1(x1)))))
   3^1(1(2(1(x1)))) -> 2^1(1(1(1(x1))))
   3^1(2(0(1(x1)))) -> 3^1(0(2(1(x1))))
   3^1(2(0(1(x1)))) -> 0^1(2(1(x1)))
   3^1(2(0(1(x1)))) -> 2^1(1(x1))
   3^1(2(0(1(x1)))) -> 3^1(1(0(2(1(x1)))))
   3^1(4(1(2(x1)))) -> 3^1(2(1(1(4(x1)))))
   3^1(4(1(2(x1)))) -> 2^1(1(1(4(x1))))
   3^1(4(1(2(x1)))) -> 4^1(x1)
   3^1(5(1(4(x1)))) -> 3^1(1(1(5(4(x1)))))
   3^1(5(1(4(x1)))) -> 5^1(4(x1))
   4^1(1(0(1(x1)))) -> 4^1(0(1(1(1(x1)))))
   4^1(1(0(1(x1)))) -> 0^1(1(1(1(x1))))
   4^1(1(2(1(x1)))) -> 2^1(4(1(1(1(x1)))))
   4^1(1(2(1(x1)))) -> 4^1(1(1(1(x1))))
   4^1(1(4(3(x1)))) -> 4^1(1(1(3(4(x1)))))
   4^1(1(4(3(x1)))) -> 3^1(4(x1))
   4^1(1(4(3(x1)))) -> 4^1(x1)
   4^1(2(4(1(x1)))) -> 4^1(4(2(1(1(x1)))))
   4^1(2(4(1(x1)))) -> 4^1(2(1(1(x1))))
   4^1(2(4(1(x1)))) -> 2^1(1(1(x1)))
   4^1(4(1(2(x1)))) -> 4^1(2(1(1(4(x1)))))
   4^1(4(1(2(x1)))) -> 2^1(1(1(4(x1))))
   4^1(4(1(2(x1)))) -> 4^1(x1)
   4^1(5(0(1(x1)))) -> 5^1(0(4(1(1(x1)))))
   4^1(5(0(1(x1)))) -> 0^1(4(1(1(x1))))
   4^1(5(0(1(x1)))) -> 4^1(1(1(x1)))
   5^1(1(0(3(x1)))) -> 5^1(0(1(1(3(x1)))))
   5^1(1(0(3(x1)))) -> 0^1(1(1(3(x1))))
   5^1(1(0(3(x1)))) -> 5^1(1(1(3(0(x1)))))
   5^1(1(0(3(x1)))) -> 3^1(0(x1))
   5^1(1(0(3(x1)))) -> 0^1(x1)
   5^1(1(3(1(x1)))) -> 5^1(3(1(1(1(x1)))))
   5^1(1(3(1(x1)))) -> 3^1(1(1(1(x1))))
   5^1(1(4(3(x1)))) -> 4^1(1(1(3(5(x1)))))
   5^1(1(4(3(x1)))) -> 3^1(5(x1))
   5^1(1(4(3(x1)))) -> 5^1(x1)
   5^1(1(4(4(x1)))) -> 4^1(1(1(5(4(x1)))))
   5^1(1(4(4(x1)))) -> 5^1(4(x1))
   5^1(1(5(3(x1)))) -> 5^1(5(1(1(3(x1)))))
   5^1(1(5(3(x1)))) -> 5^1(1(1(3(x1))))
   5^1(2(0(1(x1)))) -> 2^1(0(5(1(1(x1)))))
   5^1(2(0(1(x1)))) -> 0^1(5(1(1(x1))))
   5^1(2(0(1(x1)))) -> 5^1(1(1(x1)))
   5^1(2(0(5(x1)))) -> 5^1(0(2(1(5(x1)))))
   5^1(2(0(5(x1)))) -> 0^1(2(1(5(x1))))
   5^1(2(0(5(x1)))) -> 2^1(1(5(x1)))
   5^1(3(4(1(x1)))) -> 5^1(4(3(1(1(x1)))))
   5^1(3(4(1(x1)))) -> 4^1(3(1(1(x1))))
   5^1(3(4(1(x1)))) -> 3^1(1(1(x1)))
   5^1(4(0(1(x1)))) -> 5^1(0(4(1(1(x1)))))
   5^1(4(0(1(x1)))) -> 0^1(4(1(1(x1))))
   5^1(4(0(1(x1)))) -> 4^1(1(1(x1)))
   5^1(4(1(0(x1)))) -> 4^1(1(1(5(0(x1)))))
   5^1(4(1(0(x1)))) -> 5^1(0(x1))
   5^1(4(1(0(x1)))) -> 5^1(1(1(4(0(x1)))))
   5^1(4(1(0(x1)))) -> 4^1(0(x1))

The TRS R consists of the following rules:

   0(1(2(x1))) -> 0(2(1(1(x1))))
   0(3(2(x1))) -> 0(2(1(3(x1))))
   2(4(1(x1))) -> 4(2(1(1(x1))))
   0(0(3(2(x1)))) -> 0(0(2(1(3(x1)))))
   0(1(0(3(x1)))) -> 0(1(1(3(0(x1)))))
   0(1(0(5(x1)))) -> 0(0(1(1(5(x1)))))
   0(1(2(2(x1)))) -> 0(2(1(1(2(x1)))))
   0(1(2(3(x1)))) -> 0(2(1(3(1(x1)))))
   0(1(2(5(x1)))) -> 2(1(1(0(5(x1)))))
   0(1(4(1(x1)))) -> 0(4(1(1(1(x1)))))
   0(1(4(2(x1)))) -> 0(0(2(1(4(x1)))))
   0(1(4(2(x1)))) -> 0(4(0(2(1(x1)))))
   0(1(4(3(x1)))) -> 4(0(1(1(3(x1)))))
   0(1(4(5(x1)))) -> 0(1(1(5(4(x1)))))
   0(1(5(2(x1)))) -> 0(2(5(1(1(x1)))))
   0(2(0(3(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(1(x1)))) -> 0(0(1(3(1(x1)))))
   0(3(0(2(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(3(x1)))) -> 0(0(3(1(3(x1)))))
   0(3(2(0(x1)))) -> 0(2(1(3(0(x1)))))
   0(3(5(1(x1)))) -> 0(5(3(1(1(x1)))))
   0(4(0(1(x1)))) -> 0(0(4(1(1(x1)))))
   0(5(2(0(x1)))) -> 2(1(5(0(0(x1)))))
   2(1(2(3(x1)))) -> 2(1(1(3(2(x1)))))
   2(1(4(1(x1)))) -> 4(2(1(1(1(x1)))))
   2(2(0(3(x1)))) -> 2(0(2(1(3(x1)))))
   2(2(4(1(x1)))) -> 2(4(2(1(1(x1)))))
   2(3(1(4(x1)))) -> 2(1(1(3(4(x1)))))
   2(4(1(4(x1)))) -> 4(4(2(1(1(x1)))))
   2(4(3(1(x1)))) -> 4(2(3(1(1(x1)))))
   2(5(0(1(x1)))) -> 0(2(5(1(1(x1)))))
   2(5(0(3(x1)))) -> 5(0(2(1(3(x1)))))
   3(0(1(0(x1)))) -> 3(1(0(0(0(x1)))))
   3(0(1(4(x1)))) -> 3(1(1(0(4(x1)))))
   3(0(3(0(x1)))) -> 3(1(3(0(0(x1)))))
   3(1(0(3(x1)))) -> 3(1(1(3(0(x1)))))
   3(1(2(1(x1)))) -> 1(3(2(1(1(x1)))))
   3(1(2(1(x1)))) -> 3(2(1(1(1(x1)))))
   3(2(0(1(x1)))) -> 1(3(0(2(1(x1)))))
   3(2(0(1(x1)))) -> 3(1(0(2(1(x1)))))
   3(4(1(2(x1)))) -> 3(2(1(1(4(x1)))))
   3(5(1(4(x1)))) -> 3(1(1(5(4(x1)))))
   4(1(0(1(x1)))) -> 4(0(1(1(1(x1)))))
   4(1(2(1(x1)))) -> 2(4(1(1(1(x1)))))
   4(1(4(3(x1)))) -> 4(1(1(3(4(x1)))))
   4(2(4(1(x1)))) -> 4(4(2(1(1(x1)))))
   4(4(1(2(x1)))) -> 4(2(1(1(4(x1)))))
   4(5(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(1(0(3(x1)))) -> 5(0(1(1(3(x1)))))
   5(1(0(3(x1)))) -> 5(1(1(3(0(x1)))))
   5(1(3(1(x1)))) -> 5(3(1(1(1(x1)))))
   5(1(4(3(x1)))) -> 4(1(1(3(5(x1)))))
   5(1(4(4(x1)))) -> 4(1(1(5(4(x1)))))
   5(1(5(3(x1)))) -> 5(5(1(1(3(x1)))))
   5(2(0(1(x1)))) -> 2(0(5(1(1(x1)))))
   5(2(0(5(x1)))) -> 5(0(2(1(5(x1)))))
   5(3(4(1(x1)))) -> 5(4(3(1(1(x1)))))
   5(4(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(4(1(0(x1)))) -> 4(1(1(5(0(x1)))))
   5(4(1(0(x1)))) -> 5(1(1(4(0(x1)))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 82 less nodes.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   0^1(3(2(x1))) -> 2^1(1(3(x1)))
   2^1(1(2(3(x1)))) -> 3^1(2(x1))
   3^1(0(1(0(x1)))) -> 3^1(1(0(0(0(x1)))))
   3^1(1(0(3(x1)))) -> 3^1(0(x1))
   3^1(0(1(0(x1)))) -> 0^1(0(0(x1)))
   0^1(3(2(x1))) -> 0^1(2(1(3(x1))))
   0^1(3(2(x1))) -> 3^1(x1)
   3^1(0(1(0(x1)))) -> 0^1(0(x1))
   0^1(0(3(2(x1)))) -> 0^1(0(2(1(3(x1)))))
   0^1(0(3(2(x1)))) -> 0^1(2(1(3(x1))))
   0^1(0(3(2(x1)))) -> 2^1(1(3(x1)))
   2^1(1(2(3(x1)))) -> 2^1(x1)
   2^1(2(0(3(x1)))) -> 2^1(0(2(1(3(x1)))))
   2^1(2(0(3(x1)))) -> 0^1(2(1(3(x1))))
   0^1(0(3(2(x1)))) -> 3^1(x1)
   3^1(0(1(4(x1)))) -> 0^1(4(x1))
   0^1(1(0(3(x1)))) -> 3^1(0(x1))
   3^1(0(3(0(x1)))) -> 3^1(1(3(0(0(x1)))))
   3^1(1(0(3(x1)))) -> 0^1(x1)
   0^1(1(0(3(x1)))) -> 0^1(x1)
   0^1(1(2(3(x1)))) -> 0^1(2(1(3(1(x1)))))
   0^1(1(2(3(x1)))) -> 2^1(1(3(1(x1))))
   0^1(1(2(3(x1)))) -> 3^1(1(x1))
   0^1(1(2(5(x1)))) -> 0^1(5(x1))
   0^1(1(4(2(x1)))) -> 0^1(0(2(1(4(x1)))))
   0^1(1(4(2(x1)))) -> 0^1(2(1(4(x1))))
   0^1(1(4(2(x1)))) -> 2^1(1(4(x1)))
   0^1(1(4(2(x1)))) -> 4^1(x1)
   4^1(1(4(3(x1)))) -> 3^1(4(x1))
   3^1(0(3(0(x1)))) -> 3^1(0(0(x1)))
   3^1(0(3(0(x1)))) -> 0^1(0(x1))
   0^1(1(4(2(x1)))) -> 0^1(4(0(2(1(x1)))))
   0^1(1(4(2(x1)))) -> 4^1(0(2(1(x1))))
   4^1(1(4(3(x1)))) -> 4^1(x1)
   4^1(4(1(2(x1)))) -> 4^1(x1)
   0^1(1(4(2(x1)))) -> 0^1(2(1(x1)))
   0^1(1(4(2(x1)))) -> 2^1(1(x1))
   0^1(1(4(5(x1)))) -> 5^1(4(x1))
   5^1(1(0(3(x1)))) -> 3^1(0(x1))
   3^1(2(0(1(x1)))) -> 3^1(0(2(1(x1))))
   3^1(2(0(1(x1)))) -> 0^1(2(1(x1)))
   0^1(1(4(5(x1)))) -> 4^1(x1)
   0^1(2(0(3(x1)))) -> 0^1(0(2(3(1(x1)))))
   0^1(2(0(3(x1)))) -> 0^1(2(3(1(x1))))
   0^1(2(0(3(x1)))) -> 2^1(3(1(x1)))
   2^1(2(0(3(x1)))) -> 2^1(1(3(x1)))
   2^1(3(1(4(x1)))) -> 3^1(4(x1))
   3^1(2(0(1(x1)))) -> 2^1(1(x1))
   3^1(2(0(1(x1)))) -> 3^1(1(0(2(1(x1)))))
   3^1(4(1(2(x1)))) -> 4^1(x1)
   3^1(5(1(4(x1)))) -> 5^1(4(x1))
   5^1(1(0(3(x1)))) -> 0^1(x1)
   0^1(2(0(3(x1)))) -> 3^1(1(x1))
   0^1(3(0(1(x1)))) -> 0^1(0(1(3(1(x1)))))
   0^1(3(0(1(x1)))) -> 0^1(1(3(1(x1))))
   0^1(3(0(1(x1)))) -> 3^1(1(x1))
   0^1(3(0(2(x1)))) -> 0^1(0(2(3(1(x1)))))
   0^1(3(0(2(x1)))) -> 0^1(2(3(1(x1))))
   0^1(3(0(2(x1)))) -> 2^1(3(1(x1)))
   2^1(5(0(3(x1)))) -> 5^1(0(2(1(3(x1)))))
   5^1(1(4(3(x1)))) -> 3^1(5(x1))
   5^1(1(4(3(x1)))) -> 5^1(x1)
   5^1(1(4(4(x1)))) -> 5^1(4(x1))
   5^1(2(0(5(x1)))) -> 5^1(0(2(1(5(x1)))))
   5^1(2(0(5(x1)))) -> 0^1(2(1(5(x1))))
   0^1(3(0(2(x1)))) -> 3^1(1(x1))
   0^1(3(0(3(x1)))) -> 0^1(0(3(1(3(x1)))))
   0^1(3(0(3(x1)))) -> 0^1(3(1(3(x1))))
   0^1(3(0(3(x1)))) -> 3^1(1(3(x1)))
   0^1(3(2(0(x1)))) -> 0^1(2(1(3(0(x1)))))
   0^1(3(2(0(x1)))) -> 2^1(1(3(0(x1))))
   0^1(3(2(0(x1)))) -> 3^1(0(x1))
   0^1(5(2(0(x1)))) -> 2^1(1(5(0(0(x1)))))
   0^1(5(2(0(x1)))) -> 5^1(0(0(x1)))
   5^1(2(0(5(x1)))) -> 2^1(1(5(x1)))
   5^1(4(1(0(x1)))) -> 5^1(0(x1))
   5^1(4(1(0(x1)))) -> 4^1(0(x1))
   0^1(5(2(0(x1)))) -> 0^1(0(x1))
   2^1(5(0(3(x1)))) -> 0^1(2(1(3(x1))))
   2^1(5(0(3(x1)))) -> 2^1(1(3(x1)))

The TRS R consists of the following rules:

   0(1(2(x1))) -> 0(2(1(1(x1))))
   0(3(2(x1))) -> 0(2(1(3(x1))))
   2(4(1(x1))) -> 4(2(1(1(x1))))
   0(0(3(2(x1)))) -> 0(0(2(1(3(x1)))))
   0(1(0(3(x1)))) -> 0(1(1(3(0(x1)))))
   0(1(0(5(x1)))) -> 0(0(1(1(5(x1)))))
   0(1(2(2(x1)))) -> 0(2(1(1(2(x1)))))
   0(1(2(3(x1)))) -> 0(2(1(3(1(x1)))))
   0(1(2(5(x1)))) -> 2(1(1(0(5(x1)))))
   0(1(4(1(x1)))) -> 0(4(1(1(1(x1)))))
   0(1(4(2(x1)))) -> 0(0(2(1(4(x1)))))
   0(1(4(2(x1)))) -> 0(4(0(2(1(x1)))))
   0(1(4(3(x1)))) -> 4(0(1(1(3(x1)))))
   0(1(4(5(x1)))) -> 0(1(1(5(4(x1)))))
   0(1(5(2(x1)))) -> 0(2(5(1(1(x1)))))
   0(2(0(3(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(1(x1)))) -> 0(0(1(3(1(x1)))))
   0(3(0(2(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(3(x1)))) -> 0(0(3(1(3(x1)))))
   0(3(2(0(x1)))) -> 0(2(1(3(0(x1)))))
   0(3(5(1(x1)))) -> 0(5(3(1(1(x1)))))
   0(4(0(1(x1)))) -> 0(0(4(1(1(x1)))))
   0(5(2(0(x1)))) -> 2(1(5(0(0(x1)))))
   2(1(2(3(x1)))) -> 2(1(1(3(2(x1)))))
   2(1(4(1(x1)))) -> 4(2(1(1(1(x1)))))
   2(2(0(3(x1)))) -> 2(0(2(1(3(x1)))))
   2(2(4(1(x1)))) -> 2(4(2(1(1(x1)))))
   2(3(1(4(x1)))) -> 2(1(1(3(4(x1)))))
   2(4(1(4(x1)))) -> 4(4(2(1(1(x1)))))
   2(4(3(1(x1)))) -> 4(2(3(1(1(x1)))))
   2(5(0(1(x1)))) -> 0(2(5(1(1(x1)))))
   2(5(0(3(x1)))) -> 5(0(2(1(3(x1)))))
   3(0(1(0(x1)))) -> 3(1(0(0(0(x1)))))
   3(0(1(4(x1)))) -> 3(1(1(0(4(x1)))))
   3(0(3(0(x1)))) -> 3(1(3(0(0(x1)))))
   3(1(0(3(x1)))) -> 3(1(1(3(0(x1)))))
   3(1(2(1(x1)))) -> 1(3(2(1(1(x1)))))
   3(1(2(1(x1)))) -> 3(2(1(1(1(x1)))))
   3(2(0(1(x1)))) -> 1(3(0(2(1(x1)))))
   3(2(0(1(x1)))) -> 3(1(0(2(1(x1)))))
   3(4(1(2(x1)))) -> 3(2(1(1(4(x1)))))
   3(5(1(4(x1)))) -> 3(1(1(5(4(x1)))))
   4(1(0(1(x1)))) -> 4(0(1(1(1(x1)))))
   4(1(2(1(x1)))) -> 2(4(1(1(1(x1)))))
   4(1(4(3(x1)))) -> 4(1(1(3(4(x1)))))
   4(2(4(1(x1)))) -> 4(4(2(1(1(x1)))))
   4(4(1(2(x1)))) -> 4(2(1(1(4(x1)))))
   4(5(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(1(0(3(x1)))) -> 5(0(1(1(3(x1)))))
   5(1(0(3(x1)))) -> 5(1(1(3(0(x1)))))
   5(1(3(1(x1)))) -> 5(3(1(1(1(x1)))))
   5(1(4(3(x1)))) -> 4(1(1(3(5(x1)))))
   5(1(4(4(x1)))) -> 4(1(1(5(4(x1)))))
   5(1(5(3(x1)))) -> 5(5(1(1(3(x1)))))
   5(2(0(1(x1)))) -> 2(0(5(1(1(x1)))))
   5(2(0(5(x1)))) -> 5(0(2(1(5(x1)))))
   5(3(4(1(x1)))) -> 5(4(3(1(1(x1)))))
   5(4(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(4(1(0(x1)))) -> 4(1(1(5(0(x1)))))
   5(4(1(0(x1)))) -> 5(1(1(4(0(x1)))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   4^1(1(4(3(x1)))) -> 3^1(4(x1))
   4^1(1(4(3(x1)))) -> 4^1(x1)
   4^1(4(1(2(x1)))) -> 4^1(x1)
   0^1(1(4(2(x1)))) -> 0^1(2(1(x1)))
   0^1(1(4(2(x1)))) -> 2^1(1(x1))
   5^1(1(4(3(x1)))) -> 3^1(5(x1))
   5^1(1(4(3(x1)))) -> 5^1(x1)
   5^1(1(4(4(x1)))) -> 5^1(4(x1))
   5^1(4(1(0(x1)))) -> 5^1(0(x1))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(0(x_1)) = x_1
   POL(0^1(x_1)) = x_1
   POL(1(x_1)) = x_1
   POL(2(x_1)) = x_1
   POL(2^1(x_1)) = x_1
   POL(3(x_1)) = x_1
   POL(3^1(x_1)) = x_1
   POL(4(x_1)) = 1 + x_1
   POL(4^1(x_1)) = 1 + x_1
   POL(5(x_1)) = x_1
   POL(5^1(x_1)) = x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   3(0(1(0(x1)))) -> 3(1(0(0(0(x1)))))
   3(0(1(4(x1)))) -> 3(1(1(0(4(x1)))))
   3(0(3(0(x1)))) -> 3(1(3(0(0(x1)))))
   3(1(0(3(x1)))) -> 3(1(1(3(0(x1)))))
   3(1(2(1(x1)))) -> 1(3(2(1(1(x1)))))
   3(1(2(1(x1)))) -> 3(2(1(1(1(x1)))))
   3(2(0(1(x1)))) -> 1(3(0(2(1(x1)))))
   3(2(0(1(x1)))) -> 3(1(0(2(1(x1)))))
   3(4(1(2(x1)))) -> 3(2(1(1(4(x1)))))
   3(5(1(4(x1)))) -> 3(1(1(5(4(x1)))))
   2(4(1(x1))) -> 4(2(1(1(x1))))
   2(1(2(3(x1)))) -> 2(1(1(3(2(x1)))))
   2(1(4(1(x1)))) -> 4(2(1(1(1(x1)))))
   2(2(0(3(x1)))) -> 2(0(2(1(3(x1)))))
   2(2(4(1(x1)))) -> 2(4(2(1(1(x1)))))
   2(3(1(4(x1)))) -> 2(1(1(3(4(x1)))))
   2(4(1(4(x1)))) -> 4(4(2(1(1(x1)))))
   2(4(3(1(x1)))) -> 4(2(3(1(1(x1)))))
   2(5(0(1(x1)))) -> 0(2(5(1(1(x1)))))
   2(5(0(3(x1)))) -> 5(0(2(1(3(x1)))))
   0(1(2(x1))) -> 0(2(1(1(x1))))
   0(0(3(2(x1)))) -> 0(0(2(1(3(x1)))))
   0(3(2(x1))) -> 0(2(1(3(x1))))
   0(1(2(3(x1)))) -> 0(2(1(3(1(x1)))))
   0(1(4(2(x1)))) -> 0(0(2(1(4(x1)))))
   0(1(4(2(x1)))) -> 0(4(0(2(1(x1)))))
   0(2(0(3(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(1(x1)))) -> 0(0(1(3(1(x1)))))
   0(3(0(2(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(3(x1)))) -> 0(0(3(1(3(x1)))))
   0(3(2(0(x1)))) -> 0(2(1(3(0(x1)))))
   0(1(0(3(x1)))) -> 0(1(1(3(0(x1)))))
   0(1(0(5(x1)))) -> 0(0(1(1(5(x1)))))
   0(1(2(2(x1)))) -> 0(2(1(1(2(x1)))))
   0(1(2(5(x1)))) -> 2(1(1(0(5(x1)))))
   0(1(4(1(x1)))) -> 0(4(1(1(1(x1)))))
   0(1(4(3(x1)))) -> 4(0(1(1(3(x1)))))
   0(1(4(5(x1)))) -> 0(1(1(5(4(x1)))))
   0(1(5(2(x1)))) -> 0(2(5(1(1(x1)))))
   0(3(5(1(x1)))) -> 0(5(3(1(1(x1)))))
   0(4(0(1(x1)))) -> 0(0(4(1(1(x1)))))
   0(5(2(0(x1)))) -> 2(1(5(0(0(x1)))))
   4(1(0(1(x1)))) -> 4(0(1(1(1(x1)))))
   4(1(2(1(x1)))) -> 2(4(1(1(1(x1)))))
   4(1(4(3(x1)))) -> 4(1(1(3(4(x1)))))
   4(2(4(1(x1)))) -> 4(4(2(1(1(x1)))))
   4(4(1(2(x1)))) -> 4(2(1(1(4(x1)))))
   4(5(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(1(0(3(x1)))) -> 5(0(1(1(3(x1)))))
   5(1(0(3(x1)))) -> 5(1(1(3(0(x1)))))
   5(1(3(1(x1)))) -> 5(3(1(1(1(x1)))))
   5(1(4(3(x1)))) -> 4(1(1(3(5(x1)))))
   5(1(4(4(x1)))) -> 4(1(1(5(4(x1)))))
   5(1(5(3(x1)))) -> 5(5(1(1(3(x1)))))
   5(2(0(1(x1)))) -> 2(0(5(1(1(x1)))))
   5(2(0(5(x1)))) -> 5(0(2(1(5(x1)))))
   5(3(4(1(x1)))) -> 5(4(3(1(1(x1)))))
   5(4(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(4(1(0(x1)))) -> 4(1(1(5(0(x1)))))
   5(4(1(0(x1)))) -> 5(1(1(4(0(x1)))))


----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   0^1(3(2(x1))) -> 2^1(1(3(x1)))
   2^1(1(2(3(x1)))) -> 3^1(2(x1))
   3^1(0(1(0(x1)))) -> 3^1(1(0(0(0(x1)))))
   3^1(1(0(3(x1)))) -> 3^1(0(x1))
   3^1(0(1(0(x1)))) -> 0^1(0(0(x1)))
   0^1(3(2(x1))) -> 0^1(2(1(3(x1))))
   0^1(3(2(x1))) -> 3^1(x1)
   3^1(0(1(0(x1)))) -> 0^1(0(x1))
   0^1(0(3(2(x1)))) -> 0^1(0(2(1(3(x1)))))
   0^1(0(3(2(x1)))) -> 0^1(2(1(3(x1))))
   0^1(0(3(2(x1)))) -> 2^1(1(3(x1)))
   2^1(1(2(3(x1)))) -> 2^1(x1)
   2^1(2(0(3(x1)))) -> 2^1(0(2(1(3(x1)))))
   2^1(2(0(3(x1)))) -> 0^1(2(1(3(x1))))
   0^1(0(3(2(x1)))) -> 3^1(x1)
   3^1(0(1(4(x1)))) -> 0^1(4(x1))
   0^1(1(0(3(x1)))) -> 3^1(0(x1))
   3^1(0(3(0(x1)))) -> 3^1(1(3(0(0(x1)))))
   3^1(1(0(3(x1)))) -> 0^1(x1)
   0^1(1(0(3(x1)))) -> 0^1(x1)
   0^1(1(2(3(x1)))) -> 0^1(2(1(3(1(x1)))))
   0^1(1(2(3(x1)))) -> 2^1(1(3(1(x1))))
   0^1(1(2(3(x1)))) -> 3^1(1(x1))
   0^1(1(2(5(x1)))) -> 0^1(5(x1))
   0^1(1(4(2(x1)))) -> 0^1(0(2(1(4(x1)))))
   0^1(1(4(2(x1)))) -> 0^1(2(1(4(x1))))
   0^1(1(4(2(x1)))) -> 2^1(1(4(x1)))
   0^1(1(4(2(x1)))) -> 4^1(x1)
   3^1(0(3(0(x1)))) -> 3^1(0(0(x1)))
   3^1(0(3(0(x1)))) -> 0^1(0(x1))
   0^1(1(4(2(x1)))) -> 0^1(4(0(2(1(x1)))))
   0^1(1(4(2(x1)))) -> 4^1(0(2(1(x1))))
   0^1(1(4(5(x1)))) -> 5^1(4(x1))
   5^1(1(0(3(x1)))) -> 3^1(0(x1))
   3^1(2(0(1(x1)))) -> 3^1(0(2(1(x1))))
   3^1(2(0(1(x1)))) -> 0^1(2(1(x1)))
   0^1(1(4(5(x1)))) -> 4^1(x1)
   0^1(2(0(3(x1)))) -> 0^1(0(2(3(1(x1)))))
   0^1(2(0(3(x1)))) -> 0^1(2(3(1(x1))))
   0^1(2(0(3(x1)))) -> 2^1(3(1(x1)))
   2^1(2(0(3(x1)))) -> 2^1(1(3(x1)))
   2^1(3(1(4(x1)))) -> 3^1(4(x1))
   3^1(2(0(1(x1)))) -> 2^1(1(x1))
   3^1(2(0(1(x1)))) -> 3^1(1(0(2(1(x1)))))
   3^1(4(1(2(x1)))) -> 4^1(x1)
   3^1(5(1(4(x1)))) -> 5^1(4(x1))
   5^1(1(0(3(x1)))) -> 0^1(x1)
   0^1(2(0(3(x1)))) -> 3^1(1(x1))
   0^1(3(0(1(x1)))) -> 0^1(0(1(3(1(x1)))))
   0^1(3(0(1(x1)))) -> 0^1(1(3(1(x1))))
   0^1(3(0(1(x1)))) -> 3^1(1(x1))
   0^1(3(0(2(x1)))) -> 0^1(0(2(3(1(x1)))))
   0^1(3(0(2(x1)))) -> 0^1(2(3(1(x1))))
   0^1(3(0(2(x1)))) -> 2^1(3(1(x1)))
   2^1(5(0(3(x1)))) -> 5^1(0(2(1(3(x1)))))
   5^1(2(0(5(x1)))) -> 5^1(0(2(1(5(x1)))))
   5^1(2(0(5(x1)))) -> 0^1(2(1(5(x1))))
   0^1(3(0(2(x1)))) -> 3^1(1(x1))
   0^1(3(0(3(x1)))) -> 0^1(0(3(1(3(x1)))))
   0^1(3(0(3(x1)))) -> 0^1(3(1(3(x1))))
   0^1(3(0(3(x1)))) -> 3^1(1(3(x1)))
   0^1(3(2(0(x1)))) -> 0^1(2(1(3(0(x1)))))
   0^1(3(2(0(x1)))) -> 2^1(1(3(0(x1))))
   0^1(3(2(0(x1)))) -> 3^1(0(x1))
   0^1(5(2(0(x1)))) -> 2^1(1(5(0(0(x1)))))
   0^1(5(2(0(x1)))) -> 5^1(0(0(x1)))
   5^1(2(0(5(x1)))) -> 2^1(1(5(x1)))
   5^1(4(1(0(x1)))) -> 4^1(0(x1))
   0^1(5(2(0(x1)))) -> 0^1(0(x1))
   2^1(5(0(3(x1)))) -> 0^1(2(1(3(x1))))
   2^1(5(0(3(x1)))) -> 2^1(1(3(x1)))

The TRS R consists of the following rules:

   0(1(2(x1))) -> 0(2(1(1(x1))))
   0(3(2(x1))) -> 0(2(1(3(x1))))
   2(4(1(x1))) -> 4(2(1(1(x1))))
   0(0(3(2(x1)))) -> 0(0(2(1(3(x1)))))
   0(1(0(3(x1)))) -> 0(1(1(3(0(x1)))))
   0(1(0(5(x1)))) -> 0(0(1(1(5(x1)))))
   0(1(2(2(x1)))) -> 0(2(1(1(2(x1)))))
   0(1(2(3(x1)))) -> 0(2(1(3(1(x1)))))
   0(1(2(5(x1)))) -> 2(1(1(0(5(x1)))))
   0(1(4(1(x1)))) -> 0(4(1(1(1(x1)))))
   0(1(4(2(x1)))) -> 0(0(2(1(4(x1)))))
   0(1(4(2(x1)))) -> 0(4(0(2(1(x1)))))
   0(1(4(3(x1)))) -> 4(0(1(1(3(x1)))))
   0(1(4(5(x1)))) -> 0(1(1(5(4(x1)))))
   0(1(5(2(x1)))) -> 0(2(5(1(1(x1)))))
   0(2(0(3(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(1(x1)))) -> 0(0(1(3(1(x1)))))
   0(3(0(2(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(3(x1)))) -> 0(0(3(1(3(x1)))))
   0(3(2(0(x1)))) -> 0(2(1(3(0(x1)))))
   0(3(5(1(x1)))) -> 0(5(3(1(1(x1)))))
   0(4(0(1(x1)))) -> 0(0(4(1(1(x1)))))
   0(5(2(0(x1)))) -> 2(1(5(0(0(x1)))))
   2(1(2(3(x1)))) -> 2(1(1(3(2(x1)))))
   2(1(4(1(x1)))) -> 4(2(1(1(1(x1)))))
   2(2(0(3(x1)))) -> 2(0(2(1(3(x1)))))
   2(2(4(1(x1)))) -> 2(4(2(1(1(x1)))))
   2(3(1(4(x1)))) -> 2(1(1(3(4(x1)))))
   2(4(1(4(x1)))) -> 4(4(2(1(1(x1)))))
   2(4(3(1(x1)))) -> 4(2(3(1(1(x1)))))
   2(5(0(1(x1)))) -> 0(2(5(1(1(x1)))))
   2(5(0(3(x1)))) -> 5(0(2(1(3(x1)))))
   3(0(1(0(x1)))) -> 3(1(0(0(0(x1)))))
   3(0(1(4(x1)))) -> 3(1(1(0(4(x1)))))
   3(0(3(0(x1)))) -> 3(1(3(0(0(x1)))))
   3(1(0(3(x1)))) -> 3(1(1(3(0(x1)))))
   3(1(2(1(x1)))) -> 1(3(2(1(1(x1)))))
   3(1(2(1(x1)))) -> 3(2(1(1(1(x1)))))
   3(2(0(1(x1)))) -> 1(3(0(2(1(x1)))))
   3(2(0(1(x1)))) -> 3(1(0(2(1(x1)))))
   3(4(1(2(x1)))) -> 3(2(1(1(4(x1)))))
   3(5(1(4(x1)))) -> 3(1(1(5(4(x1)))))
   4(1(0(1(x1)))) -> 4(0(1(1(1(x1)))))
   4(1(2(1(x1)))) -> 2(4(1(1(1(x1)))))
   4(1(4(3(x1)))) -> 4(1(1(3(4(x1)))))
   4(2(4(1(x1)))) -> 4(4(2(1(1(x1)))))
   4(4(1(2(x1)))) -> 4(2(1(1(4(x1)))))
   4(5(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(1(0(3(x1)))) -> 5(0(1(1(3(x1)))))
   5(1(0(3(x1)))) -> 5(1(1(3(0(x1)))))
   5(1(3(1(x1)))) -> 5(3(1(1(1(x1)))))
   5(1(4(3(x1)))) -> 4(1(1(3(5(x1)))))
   5(1(4(4(x1)))) -> 4(1(1(5(4(x1)))))
   5(1(5(3(x1)))) -> 5(5(1(1(3(x1)))))
   5(2(0(1(x1)))) -> 2(0(5(1(1(x1)))))
   5(2(0(5(x1)))) -> 5(0(2(1(5(x1)))))
   5(3(4(1(x1)))) -> 5(4(3(1(1(x1)))))
   5(4(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(4(1(0(x1)))) -> 4(1(1(5(0(x1)))))
   5(4(1(0(x1)))) -> 5(1(1(4(0(x1)))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 5 less nodes.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   2^1(1(2(3(x1)))) -> 3^1(2(x1))
   3^1(0(1(0(x1)))) -> 3^1(1(0(0(0(x1)))))
   3^1(1(0(3(x1)))) -> 3^1(0(x1))
   3^1(0(1(0(x1)))) -> 0^1(0(0(x1)))
   0^1(3(2(x1))) -> 0^1(2(1(3(x1))))
   0^1(3(2(x1))) -> 2^1(1(3(x1)))
   2^1(1(2(3(x1)))) -> 2^1(x1)
   2^1(2(0(3(x1)))) -> 2^1(0(2(1(3(x1)))))
   2^1(2(0(3(x1)))) -> 0^1(2(1(3(x1))))
   0^1(3(2(x1))) -> 3^1(x1)
   3^1(0(1(0(x1)))) -> 0^1(0(x1))
   0^1(0(3(2(x1)))) -> 0^1(0(2(1(3(x1)))))
   0^1(0(3(2(x1)))) -> 0^1(2(1(3(x1))))
   0^1(0(3(2(x1)))) -> 2^1(1(3(x1)))
   0^1(0(3(2(x1)))) -> 3^1(x1)
   3^1(0(1(4(x1)))) -> 0^1(4(x1))
   0^1(1(0(3(x1)))) -> 3^1(0(x1))
   3^1(0(3(0(x1)))) -> 3^1(1(3(0(0(x1)))))
   3^1(1(0(3(x1)))) -> 0^1(x1)
   0^1(1(0(3(x1)))) -> 0^1(x1)
   0^1(1(2(3(x1)))) -> 0^1(2(1(3(1(x1)))))
   0^1(1(2(3(x1)))) -> 2^1(1(3(1(x1))))
   0^1(1(2(3(x1)))) -> 3^1(1(x1))
   0^1(1(2(5(x1)))) -> 0^1(5(x1))
   0^1(1(4(2(x1)))) -> 0^1(0(2(1(4(x1)))))
   0^1(1(4(2(x1)))) -> 0^1(2(1(4(x1))))
   0^1(1(4(2(x1)))) -> 2^1(1(4(x1)))
   0^1(1(4(2(x1)))) -> 0^1(4(0(2(1(x1)))))
   0^1(1(4(5(x1)))) -> 5^1(4(x1))
   5^1(1(0(3(x1)))) -> 3^1(0(x1))
   3^1(0(3(0(x1)))) -> 3^1(0(0(x1)))
   3^1(0(3(0(x1)))) -> 0^1(0(x1))
   0^1(2(0(3(x1)))) -> 0^1(0(2(3(1(x1)))))
   0^1(2(0(3(x1)))) -> 0^1(2(3(1(x1))))
   0^1(2(0(3(x1)))) -> 2^1(3(1(x1)))
   2^1(2(0(3(x1)))) -> 2^1(1(3(x1)))
   2^1(3(1(4(x1)))) -> 3^1(4(x1))
   3^1(2(0(1(x1)))) -> 3^1(0(2(1(x1))))
   3^1(2(0(1(x1)))) -> 0^1(2(1(x1)))
   0^1(2(0(3(x1)))) -> 3^1(1(x1))
   0^1(3(0(1(x1)))) -> 0^1(0(1(3(1(x1)))))
   0^1(3(0(1(x1)))) -> 0^1(1(3(1(x1))))
   0^1(3(0(1(x1)))) -> 3^1(1(x1))
   0^1(3(0(2(x1)))) -> 0^1(0(2(3(1(x1)))))
   0^1(3(0(2(x1)))) -> 0^1(2(3(1(x1))))
   0^1(3(0(2(x1)))) -> 2^1(3(1(x1)))
   2^1(5(0(3(x1)))) -> 5^1(0(2(1(3(x1)))))
   5^1(1(0(3(x1)))) -> 0^1(x1)
   0^1(3(0(2(x1)))) -> 3^1(1(x1))
   0^1(3(0(3(x1)))) -> 0^1(0(3(1(3(x1)))))
   0^1(3(0(3(x1)))) -> 0^1(3(1(3(x1))))
   0^1(3(0(3(x1)))) -> 3^1(1(3(x1)))
   0^1(3(2(0(x1)))) -> 0^1(2(1(3(0(x1)))))
   0^1(3(2(0(x1)))) -> 2^1(1(3(0(x1))))
   0^1(3(2(0(x1)))) -> 3^1(0(x1))
   3^1(2(0(1(x1)))) -> 2^1(1(x1))
   3^1(2(0(1(x1)))) -> 3^1(1(0(2(1(x1)))))
   3^1(5(1(4(x1)))) -> 5^1(4(x1))
   5^1(2(0(5(x1)))) -> 5^1(0(2(1(5(x1)))))
   5^1(2(0(5(x1)))) -> 0^1(2(1(5(x1))))
   0^1(5(2(0(x1)))) -> 2^1(1(5(0(0(x1)))))
   0^1(5(2(0(x1)))) -> 5^1(0(0(x1)))
   5^1(2(0(5(x1)))) -> 2^1(1(5(x1)))
   0^1(5(2(0(x1)))) -> 0^1(0(x1))
   2^1(5(0(3(x1)))) -> 0^1(2(1(3(x1))))
   2^1(5(0(3(x1)))) -> 2^1(1(3(x1)))

The TRS R consists of the following rules:

   0(1(2(x1))) -> 0(2(1(1(x1))))
   0(3(2(x1))) -> 0(2(1(3(x1))))
   2(4(1(x1))) -> 4(2(1(1(x1))))
   0(0(3(2(x1)))) -> 0(0(2(1(3(x1)))))
   0(1(0(3(x1)))) -> 0(1(1(3(0(x1)))))
   0(1(0(5(x1)))) -> 0(0(1(1(5(x1)))))
   0(1(2(2(x1)))) -> 0(2(1(1(2(x1)))))
   0(1(2(3(x1)))) -> 0(2(1(3(1(x1)))))
   0(1(2(5(x1)))) -> 2(1(1(0(5(x1)))))
   0(1(4(1(x1)))) -> 0(4(1(1(1(x1)))))
   0(1(4(2(x1)))) -> 0(0(2(1(4(x1)))))
   0(1(4(2(x1)))) -> 0(4(0(2(1(x1)))))
   0(1(4(3(x1)))) -> 4(0(1(1(3(x1)))))
   0(1(4(5(x1)))) -> 0(1(1(5(4(x1)))))
   0(1(5(2(x1)))) -> 0(2(5(1(1(x1)))))
   0(2(0(3(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(1(x1)))) -> 0(0(1(3(1(x1)))))
   0(3(0(2(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(3(x1)))) -> 0(0(3(1(3(x1)))))
   0(3(2(0(x1)))) -> 0(2(1(3(0(x1)))))
   0(3(5(1(x1)))) -> 0(5(3(1(1(x1)))))
   0(4(0(1(x1)))) -> 0(0(4(1(1(x1)))))
   0(5(2(0(x1)))) -> 2(1(5(0(0(x1)))))
   2(1(2(3(x1)))) -> 2(1(1(3(2(x1)))))
   2(1(4(1(x1)))) -> 4(2(1(1(1(x1)))))
   2(2(0(3(x1)))) -> 2(0(2(1(3(x1)))))
   2(2(4(1(x1)))) -> 2(4(2(1(1(x1)))))
   2(3(1(4(x1)))) -> 2(1(1(3(4(x1)))))
   2(4(1(4(x1)))) -> 4(4(2(1(1(x1)))))
   2(4(3(1(x1)))) -> 4(2(3(1(1(x1)))))
   2(5(0(1(x1)))) -> 0(2(5(1(1(x1)))))
   2(5(0(3(x1)))) -> 5(0(2(1(3(x1)))))
   3(0(1(0(x1)))) -> 3(1(0(0(0(x1)))))
   3(0(1(4(x1)))) -> 3(1(1(0(4(x1)))))
   3(0(3(0(x1)))) -> 3(1(3(0(0(x1)))))
   3(1(0(3(x1)))) -> 3(1(1(3(0(x1)))))
   3(1(2(1(x1)))) -> 1(3(2(1(1(x1)))))
   3(1(2(1(x1)))) -> 3(2(1(1(1(x1)))))
   3(2(0(1(x1)))) -> 1(3(0(2(1(x1)))))
   3(2(0(1(x1)))) -> 3(1(0(2(1(x1)))))
   3(4(1(2(x1)))) -> 3(2(1(1(4(x1)))))
   3(5(1(4(x1)))) -> 3(1(1(5(4(x1)))))
   4(1(0(1(x1)))) -> 4(0(1(1(1(x1)))))
   4(1(2(1(x1)))) -> 2(4(1(1(1(x1)))))
   4(1(4(3(x1)))) -> 4(1(1(3(4(x1)))))
   4(2(4(1(x1)))) -> 4(4(2(1(1(x1)))))
   4(4(1(2(x1)))) -> 4(2(1(1(4(x1)))))
   4(5(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(1(0(3(x1)))) -> 5(0(1(1(3(x1)))))
   5(1(0(3(x1)))) -> 5(1(1(3(0(x1)))))
   5(1(3(1(x1)))) -> 5(3(1(1(1(x1)))))
   5(1(4(3(x1)))) -> 4(1(1(3(5(x1)))))
   5(1(4(4(x1)))) -> 4(1(1(5(4(x1)))))
   5(1(5(3(x1)))) -> 5(5(1(1(3(x1)))))
   5(2(0(1(x1)))) -> 2(0(5(1(1(x1)))))
   5(2(0(5(x1)))) -> 5(0(2(1(5(x1)))))
   5(3(4(1(x1)))) -> 5(4(3(1(1(x1)))))
   5(4(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(4(1(0(x1)))) -> 4(1(1(5(0(x1)))))
   5(4(1(0(x1)))) -> 5(1(1(4(0(x1)))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   2^1(1(2(3(x1)))) -> 3^1(2(x1))
   3^1(1(0(3(x1)))) -> 3^1(0(x1))
   0^1(3(2(x1))) -> 2^1(1(3(x1)))
   2^1(1(2(3(x1)))) -> 2^1(x1)
   0^1(3(2(x1))) -> 3^1(x1)
   0^1(0(3(2(x1)))) -> 2^1(1(3(x1)))
   0^1(0(3(2(x1)))) -> 3^1(x1)
   0^1(1(0(3(x1)))) -> 3^1(0(x1))
   3^1(1(0(3(x1)))) -> 0^1(x1)
   0^1(1(0(3(x1)))) -> 0^1(x1)
   0^1(1(2(3(x1)))) -> 2^1(1(3(1(x1))))
   0^1(1(2(3(x1)))) -> 3^1(1(x1))
   0^1(1(2(5(x1)))) -> 0^1(5(x1))
   0^1(1(4(2(x1)))) -> 2^1(1(4(x1)))
   0^1(1(4(5(x1)))) -> 5^1(4(x1))
   5^1(1(0(3(x1)))) -> 3^1(0(x1))
   3^1(0(3(0(x1)))) -> 3^1(0(0(x1)))
   3^1(0(3(0(x1)))) -> 0^1(0(x1))
   0^1(2(0(3(x1)))) -> 2^1(3(1(x1)))
   2^1(2(0(3(x1)))) -> 2^1(1(3(x1)))
   2^1(3(1(4(x1)))) -> 3^1(4(x1))
   0^1(2(0(3(x1)))) -> 3^1(1(x1))
   0^1(3(0(1(x1)))) -> 3^1(1(x1))
   0^1(3(0(2(x1)))) -> 2^1(3(1(x1)))
   5^1(1(0(3(x1)))) -> 0^1(x1)
   0^1(3(0(2(x1)))) -> 3^1(1(x1))
   0^1(3(0(3(x1)))) -> 3^1(1(3(x1)))
   0^1(3(2(0(x1)))) -> 2^1(1(3(0(x1))))
   0^1(3(2(0(x1)))) -> 3^1(0(x1))
   3^1(2(0(1(x1)))) -> 2^1(1(x1))
   3^1(5(1(4(x1)))) -> 5^1(4(x1))
   0^1(5(2(0(x1)))) -> 2^1(1(5(0(0(x1)))))
   0^1(5(2(0(x1)))) -> 5^1(0(0(x1)))
   5^1(2(0(5(x1)))) -> 2^1(1(5(x1)))
   0^1(5(2(0(x1)))) -> 0^1(0(x1))
   2^1(5(0(3(x1)))) -> 2^1(1(3(x1)))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(0(x_1)) = x_1
   POL(0^1(x_1)) = x_1
   POL(1(x_1)) = x_1
   POL(2(x_1)) = 1 + x_1
   POL(2^1(x_1)) = x_1
   POL(3(x_1)) = 1 + x_1
   POL(3^1(x_1)) = x_1
   POL(4(x_1)) = 1 + x_1
   POL(5(x_1)) = 1 + x_1
   POL(5^1(x_1)) = x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   2(4(1(x1))) -> 4(2(1(1(x1))))
   2(1(2(3(x1)))) -> 2(1(1(3(2(x1)))))
   2(1(4(1(x1)))) -> 4(2(1(1(1(x1)))))
   2(2(0(3(x1)))) -> 2(0(2(1(3(x1)))))
   2(2(4(1(x1)))) -> 2(4(2(1(1(x1)))))
   2(3(1(4(x1)))) -> 2(1(1(3(4(x1)))))
   2(4(1(4(x1)))) -> 4(4(2(1(1(x1)))))
   2(4(3(1(x1)))) -> 4(2(3(1(1(x1)))))
   2(5(0(1(x1)))) -> 0(2(5(1(1(x1)))))
   2(5(0(3(x1)))) -> 5(0(2(1(3(x1)))))
   0(1(2(x1))) -> 0(2(1(1(x1))))
   0(0(3(2(x1)))) -> 0(0(2(1(3(x1)))))
   0(3(2(x1))) -> 0(2(1(3(x1))))
   0(1(2(3(x1)))) -> 0(2(1(3(1(x1)))))
   0(1(4(2(x1)))) -> 0(0(2(1(4(x1)))))
   0(1(4(2(x1)))) -> 0(4(0(2(1(x1)))))
   0(2(0(3(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(1(x1)))) -> 0(0(1(3(1(x1)))))
   0(3(0(2(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(3(x1)))) -> 0(0(3(1(3(x1)))))
   0(3(2(0(x1)))) -> 0(2(1(3(0(x1)))))
   0(1(0(3(x1)))) -> 0(1(1(3(0(x1)))))
   0(1(0(5(x1)))) -> 0(0(1(1(5(x1)))))
   0(1(2(2(x1)))) -> 0(2(1(1(2(x1)))))
   0(1(2(5(x1)))) -> 2(1(1(0(5(x1)))))
   0(1(4(1(x1)))) -> 0(4(1(1(1(x1)))))
   0(1(4(3(x1)))) -> 4(0(1(1(3(x1)))))
   0(1(4(5(x1)))) -> 0(1(1(5(4(x1)))))
   0(1(5(2(x1)))) -> 0(2(5(1(1(x1)))))
   0(3(5(1(x1)))) -> 0(5(3(1(1(x1)))))
   0(4(0(1(x1)))) -> 0(0(4(1(1(x1)))))
   0(5(2(0(x1)))) -> 2(1(5(0(0(x1)))))
   3(0(1(0(x1)))) -> 3(1(0(0(0(x1)))))
   3(0(1(4(x1)))) -> 3(1(1(0(4(x1)))))
   3(0(3(0(x1)))) -> 3(1(3(0(0(x1)))))
   3(1(0(3(x1)))) -> 3(1(1(3(0(x1)))))
   3(1(2(1(x1)))) -> 1(3(2(1(1(x1)))))
   3(1(2(1(x1)))) -> 3(2(1(1(1(x1)))))
   3(2(0(1(x1)))) -> 1(3(0(2(1(x1)))))
   3(2(0(1(x1)))) -> 3(1(0(2(1(x1)))))
   3(4(1(2(x1)))) -> 3(2(1(1(4(x1)))))
   3(5(1(4(x1)))) -> 3(1(1(5(4(x1)))))
   4(1(0(1(x1)))) -> 4(0(1(1(1(x1)))))
   4(1(2(1(x1)))) -> 2(4(1(1(1(x1)))))
   4(1(4(3(x1)))) -> 4(1(1(3(4(x1)))))
   4(2(4(1(x1)))) -> 4(4(2(1(1(x1)))))
   4(4(1(2(x1)))) -> 4(2(1(1(4(x1)))))
   4(5(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(1(0(3(x1)))) -> 5(0(1(1(3(x1)))))
   5(1(0(3(x1)))) -> 5(1(1(3(0(x1)))))
   5(1(3(1(x1)))) -> 5(3(1(1(1(x1)))))
   5(1(4(3(x1)))) -> 4(1(1(3(5(x1)))))
   5(1(4(4(x1)))) -> 4(1(1(5(4(x1)))))
   5(1(5(3(x1)))) -> 5(5(1(1(3(x1)))))
   5(2(0(1(x1)))) -> 2(0(5(1(1(x1)))))
   5(2(0(5(x1)))) -> 5(0(2(1(5(x1)))))
   5(3(4(1(x1)))) -> 5(4(3(1(1(x1)))))
   5(4(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(4(1(0(x1)))) -> 4(1(1(5(0(x1)))))
   5(4(1(0(x1)))) -> 5(1(1(4(0(x1)))))


----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   3^1(0(1(0(x1)))) -> 3^1(1(0(0(0(x1)))))
   3^1(0(1(0(x1)))) -> 0^1(0(0(x1)))
   0^1(3(2(x1))) -> 0^1(2(1(3(x1))))
   2^1(2(0(3(x1)))) -> 2^1(0(2(1(3(x1)))))
   2^1(2(0(3(x1)))) -> 0^1(2(1(3(x1))))
   3^1(0(1(0(x1)))) -> 0^1(0(x1))
   0^1(0(3(2(x1)))) -> 0^1(0(2(1(3(x1)))))
   0^1(0(3(2(x1)))) -> 0^1(2(1(3(x1))))
   3^1(0(1(4(x1)))) -> 0^1(4(x1))
   3^1(0(3(0(x1)))) -> 3^1(1(3(0(0(x1)))))
   0^1(1(2(3(x1)))) -> 0^1(2(1(3(1(x1)))))
   0^1(1(4(2(x1)))) -> 0^1(0(2(1(4(x1)))))
   0^1(1(4(2(x1)))) -> 0^1(2(1(4(x1))))
   0^1(1(4(2(x1)))) -> 0^1(4(0(2(1(x1)))))
   0^1(2(0(3(x1)))) -> 0^1(0(2(3(1(x1)))))
   0^1(2(0(3(x1)))) -> 0^1(2(3(1(x1))))
   3^1(2(0(1(x1)))) -> 3^1(0(2(1(x1))))
   3^1(2(0(1(x1)))) -> 0^1(2(1(x1)))
   0^1(3(0(1(x1)))) -> 0^1(0(1(3(1(x1)))))
   0^1(3(0(1(x1)))) -> 0^1(1(3(1(x1))))
   0^1(3(0(2(x1)))) -> 0^1(0(2(3(1(x1)))))
   0^1(3(0(2(x1)))) -> 0^1(2(3(1(x1))))
   2^1(5(0(3(x1)))) -> 5^1(0(2(1(3(x1)))))
   0^1(3(0(3(x1)))) -> 0^1(0(3(1(3(x1)))))
   0^1(3(0(3(x1)))) -> 0^1(3(1(3(x1))))
   0^1(3(2(0(x1)))) -> 0^1(2(1(3(0(x1)))))
   3^1(2(0(1(x1)))) -> 3^1(1(0(2(1(x1)))))
   5^1(2(0(5(x1)))) -> 5^1(0(2(1(5(x1)))))
   5^1(2(0(5(x1)))) -> 0^1(2(1(5(x1))))
   2^1(5(0(3(x1)))) -> 0^1(2(1(3(x1))))

The TRS R consists of the following rules:

   0(1(2(x1))) -> 0(2(1(1(x1))))
   0(3(2(x1))) -> 0(2(1(3(x1))))
   2(4(1(x1))) -> 4(2(1(1(x1))))
   0(0(3(2(x1)))) -> 0(0(2(1(3(x1)))))
   0(1(0(3(x1)))) -> 0(1(1(3(0(x1)))))
   0(1(0(5(x1)))) -> 0(0(1(1(5(x1)))))
   0(1(2(2(x1)))) -> 0(2(1(1(2(x1)))))
   0(1(2(3(x1)))) -> 0(2(1(3(1(x1)))))
   0(1(2(5(x1)))) -> 2(1(1(0(5(x1)))))
   0(1(4(1(x1)))) -> 0(4(1(1(1(x1)))))
   0(1(4(2(x1)))) -> 0(0(2(1(4(x1)))))
   0(1(4(2(x1)))) -> 0(4(0(2(1(x1)))))
   0(1(4(3(x1)))) -> 4(0(1(1(3(x1)))))
   0(1(4(5(x1)))) -> 0(1(1(5(4(x1)))))
   0(1(5(2(x1)))) -> 0(2(5(1(1(x1)))))
   0(2(0(3(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(1(x1)))) -> 0(0(1(3(1(x1)))))
   0(3(0(2(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(3(x1)))) -> 0(0(3(1(3(x1)))))
   0(3(2(0(x1)))) -> 0(2(1(3(0(x1)))))
   0(3(5(1(x1)))) -> 0(5(3(1(1(x1)))))
   0(4(0(1(x1)))) -> 0(0(4(1(1(x1)))))
   0(5(2(0(x1)))) -> 2(1(5(0(0(x1)))))
   2(1(2(3(x1)))) -> 2(1(1(3(2(x1)))))
   2(1(4(1(x1)))) -> 4(2(1(1(1(x1)))))
   2(2(0(3(x1)))) -> 2(0(2(1(3(x1)))))
   2(2(4(1(x1)))) -> 2(4(2(1(1(x1)))))
   2(3(1(4(x1)))) -> 2(1(1(3(4(x1)))))
   2(4(1(4(x1)))) -> 4(4(2(1(1(x1)))))
   2(4(3(1(x1)))) -> 4(2(3(1(1(x1)))))
   2(5(0(1(x1)))) -> 0(2(5(1(1(x1)))))
   2(5(0(3(x1)))) -> 5(0(2(1(3(x1)))))
   3(0(1(0(x1)))) -> 3(1(0(0(0(x1)))))
   3(0(1(4(x1)))) -> 3(1(1(0(4(x1)))))
   3(0(3(0(x1)))) -> 3(1(3(0(0(x1)))))
   3(1(0(3(x1)))) -> 3(1(1(3(0(x1)))))
   3(1(2(1(x1)))) -> 1(3(2(1(1(x1)))))
   3(1(2(1(x1)))) -> 3(2(1(1(1(x1)))))
   3(2(0(1(x1)))) -> 1(3(0(2(1(x1)))))
   3(2(0(1(x1)))) -> 3(1(0(2(1(x1)))))
   3(4(1(2(x1)))) -> 3(2(1(1(4(x1)))))
   3(5(1(4(x1)))) -> 3(1(1(5(4(x1)))))
   4(1(0(1(x1)))) -> 4(0(1(1(1(x1)))))
   4(1(2(1(x1)))) -> 2(4(1(1(1(x1)))))
   4(1(4(3(x1)))) -> 4(1(1(3(4(x1)))))
   4(2(4(1(x1)))) -> 4(4(2(1(1(x1)))))
   4(4(1(2(x1)))) -> 4(2(1(1(4(x1)))))
   4(5(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(1(0(3(x1)))) -> 5(0(1(1(3(x1)))))
   5(1(0(3(x1)))) -> 5(1(1(3(0(x1)))))
   5(1(3(1(x1)))) -> 5(3(1(1(1(x1)))))
   5(1(4(3(x1)))) -> 4(1(1(3(5(x1)))))
   5(1(4(4(x1)))) -> 4(1(1(5(4(x1)))))
   5(1(5(3(x1)))) -> 5(5(1(1(3(x1)))))
   5(2(0(1(x1)))) -> 2(0(5(1(1(x1)))))
   5(2(0(5(x1)))) -> 5(0(2(1(5(x1)))))
   5(3(4(1(x1)))) -> 5(4(3(1(1(x1)))))
   5(4(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(4(1(0(x1)))) -> 4(1(1(5(0(x1)))))
   5(4(1(0(x1)))) -> 5(1(1(4(0(x1)))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 4 SCCs with 11 less nodes.
----------------------------------------

(12)
Complex Obligation (AND)

----------------------------------------

(13)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   0^1(0(3(2(x1)))) -> 0^1(0(2(1(3(x1)))))
   0^1(3(2(x1))) -> 0^1(2(1(3(x1))))
   0^1(0(3(2(x1)))) -> 0^1(2(1(3(x1))))
   0^1(1(2(3(x1)))) -> 0^1(2(1(3(1(x1)))))
   0^1(1(4(2(x1)))) -> 0^1(0(2(1(4(x1)))))
   0^1(1(4(2(x1)))) -> 0^1(2(1(4(x1))))
   0^1(1(4(2(x1)))) -> 0^1(4(0(2(1(x1)))))
   0^1(2(0(3(x1)))) -> 0^1(0(2(3(1(x1)))))
   0^1(2(0(3(x1)))) -> 0^1(2(3(1(x1))))
   0^1(3(0(1(x1)))) -> 0^1(0(1(3(1(x1)))))
   0^1(3(0(1(x1)))) -> 0^1(1(3(1(x1))))
   0^1(3(0(2(x1)))) -> 0^1(0(2(3(1(x1)))))
   0^1(3(0(2(x1)))) -> 0^1(2(3(1(x1))))
   0^1(3(0(3(x1)))) -> 0^1(0(3(1(3(x1)))))
   0^1(3(0(3(x1)))) -> 0^1(3(1(3(x1))))
   0^1(3(2(0(x1)))) -> 0^1(2(1(3(0(x1)))))

The TRS R consists of the following rules:

   0(1(2(x1))) -> 0(2(1(1(x1))))
   0(3(2(x1))) -> 0(2(1(3(x1))))
   2(4(1(x1))) -> 4(2(1(1(x1))))
   0(0(3(2(x1)))) -> 0(0(2(1(3(x1)))))
   0(1(0(3(x1)))) -> 0(1(1(3(0(x1)))))
   0(1(0(5(x1)))) -> 0(0(1(1(5(x1)))))
   0(1(2(2(x1)))) -> 0(2(1(1(2(x1)))))
   0(1(2(3(x1)))) -> 0(2(1(3(1(x1)))))
   0(1(2(5(x1)))) -> 2(1(1(0(5(x1)))))
   0(1(4(1(x1)))) -> 0(4(1(1(1(x1)))))
   0(1(4(2(x1)))) -> 0(0(2(1(4(x1)))))
   0(1(4(2(x1)))) -> 0(4(0(2(1(x1)))))
   0(1(4(3(x1)))) -> 4(0(1(1(3(x1)))))
   0(1(4(5(x1)))) -> 0(1(1(5(4(x1)))))
   0(1(5(2(x1)))) -> 0(2(5(1(1(x1)))))
   0(2(0(3(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(1(x1)))) -> 0(0(1(3(1(x1)))))
   0(3(0(2(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(3(x1)))) -> 0(0(3(1(3(x1)))))
   0(3(2(0(x1)))) -> 0(2(1(3(0(x1)))))
   0(3(5(1(x1)))) -> 0(5(3(1(1(x1)))))
   0(4(0(1(x1)))) -> 0(0(4(1(1(x1)))))
   0(5(2(0(x1)))) -> 2(1(5(0(0(x1)))))
   2(1(2(3(x1)))) -> 2(1(1(3(2(x1)))))
   2(1(4(1(x1)))) -> 4(2(1(1(1(x1)))))
   2(2(0(3(x1)))) -> 2(0(2(1(3(x1)))))
   2(2(4(1(x1)))) -> 2(4(2(1(1(x1)))))
   2(3(1(4(x1)))) -> 2(1(1(3(4(x1)))))
   2(4(1(4(x1)))) -> 4(4(2(1(1(x1)))))
   2(4(3(1(x1)))) -> 4(2(3(1(1(x1)))))
   2(5(0(1(x1)))) -> 0(2(5(1(1(x1)))))
   2(5(0(3(x1)))) -> 5(0(2(1(3(x1)))))
   3(0(1(0(x1)))) -> 3(1(0(0(0(x1)))))
   3(0(1(4(x1)))) -> 3(1(1(0(4(x1)))))
   3(0(3(0(x1)))) -> 3(1(3(0(0(x1)))))
   3(1(0(3(x1)))) -> 3(1(1(3(0(x1)))))
   3(1(2(1(x1)))) -> 1(3(2(1(1(x1)))))
   3(1(2(1(x1)))) -> 3(2(1(1(1(x1)))))
   3(2(0(1(x1)))) -> 1(3(0(2(1(x1)))))
   3(2(0(1(x1)))) -> 3(1(0(2(1(x1)))))
   3(4(1(2(x1)))) -> 3(2(1(1(4(x1)))))
   3(5(1(4(x1)))) -> 3(1(1(5(4(x1)))))
   4(1(0(1(x1)))) -> 4(0(1(1(1(x1)))))
   4(1(2(1(x1)))) -> 2(4(1(1(1(x1)))))
   4(1(4(3(x1)))) -> 4(1(1(3(4(x1)))))
   4(2(4(1(x1)))) -> 4(4(2(1(1(x1)))))
   4(4(1(2(x1)))) -> 4(2(1(1(4(x1)))))
   4(5(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(1(0(3(x1)))) -> 5(0(1(1(3(x1)))))
   5(1(0(3(x1)))) -> 5(1(1(3(0(x1)))))
   5(1(3(1(x1)))) -> 5(3(1(1(1(x1)))))
   5(1(4(3(x1)))) -> 4(1(1(3(5(x1)))))
   5(1(4(4(x1)))) -> 4(1(1(5(4(x1)))))
   5(1(5(3(x1)))) -> 5(5(1(1(3(x1)))))
   5(2(0(1(x1)))) -> 2(0(5(1(1(x1)))))
   5(2(0(5(x1)))) -> 5(0(2(1(5(x1)))))
   5(3(4(1(x1)))) -> 5(4(3(1(1(x1)))))
   5(4(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(4(1(0(x1)))) -> 4(1(1(5(0(x1)))))
   5(4(1(0(x1)))) -> 5(1(1(4(0(x1)))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(14) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   0^1(0(3(2(x1)))) -> 0^1(0(2(1(3(x1)))))
   0^1(3(2(x1))) -> 0^1(2(1(3(x1))))
   0^1(0(3(2(x1)))) -> 0^1(2(1(3(x1))))
   0^1(3(0(1(x1)))) -> 0^1(0(1(3(1(x1)))))
   0^1(3(0(1(x1)))) -> 0^1(1(3(1(x1))))
   0^1(3(0(2(x1)))) -> 0^1(0(2(3(1(x1)))))
   0^1(3(0(2(x1)))) -> 0^1(2(3(1(x1))))
   0^1(3(2(0(x1)))) -> 0^1(2(1(3(0(x1)))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(0(x_1)) = x_1
   POL(0^1(x_1)) = x_1
   POL(1(x_1)) = 0
   POL(2(x_1)) = 0
   POL(3(x_1)) = 1
   POL(4(x_1)) = 0
   POL(5(x_1)) = 0

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   3(1(0(3(x1)))) -> 3(1(1(3(0(x1)))))
   3(1(2(1(x1)))) -> 1(3(2(1(1(x1)))))
   3(1(2(1(x1)))) -> 3(2(1(1(1(x1)))))
   2(1(2(3(x1)))) -> 2(1(1(3(2(x1)))))
   2(1(4(1(x1)))) -> 4(2(1(1(1(x1)))))
   0(1(2(x1))) -> 0(2(1(1(x1))))
   0(0(3(2(x1)))) -> 0(0(2(1(3(x1)))))
   0(3(2(x1))) -> 0(2(1(3(x1))))
   0(1(2(3(x1)))) -> 0(2(1(3(1(x1)))))
   0(1(4(2(x1)))) -> 0(0(2(1(4(x1)))))
   0(1(4(2(x1)))) -> 0(4(0(2(1(x1)))))
   0(2(0(3(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(1(x1)))) -> 0(0(1(3(1(x1)))))
   0(3(0(2(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(3(x1)))) -> 0(0(3(1(3(x1)))))
   0(3(2(0(x1)))) -> 0(2(1(3(0(x1)))))
   0(1(0(3(x1)))) -> 0(1(1(3(0(x1)))))
   0(1(0(5(x1)))) -> 0(0(1(1(5(x1)))))
   0(1(2(2(x1)))) -> 0(2(1(1(2(x1)))))
   0(1(2(5(x1)))) -> 2(1(1(0(5(x1)))))
   0(1(4(1(x1)))) -> 0(4(1(1(1(x1)))))
   0(1(4(3(x1)))) -> 4(0(1(1(3(x1)))))
   0(1(4(5(x1)))) -> 0(1(1(5(4(x1)))))
   0(1(5(2(x1)))) -> 0(2(5(1(1(x1)))))
   0(3(5(1(x1)))) -> 0(5(3(1(1(x1)))))
   0(4(0(1(x1)))) -> 0(0(4(1(1(x1)))))
   0(5(2(0(x1)))) -> 2(1(5(0(0(x1)))))
   4(1(0(1(x1)))) -> 4(0(1(1(1(x1)))))
   4(1(2(1(x1)))) -> 2(4(1(1(1(x1)))))
   4(1(4(3(x1)))) -> 4(1(1(3(4(x1)))))
   4(2(4(1(x1)))) -> 4(4(2(1(1(x1)))))
   4(4(1(2(x1)))) -> 4(2(1(1(4(x1)))))
   4(5(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   2(4(1(x1))) -> 4(2(1(1(x1))))
   2(2(0(3(x1)))) -> 2(0(2(1(3(x1)))))
   2(2(4(1(x1)))) -> 2(4(2(1(1(x1)))))
   2(3(1(4(x1)))) -> 2(1(1(3(4(x1)))))
   2(4(1(4(x1)))) -> 4(4(2(1(1(x1)))))
   2(4(3(1(x1)))) -> 4(2(3(1(1(x1)))))
   2(5(0(1(x1)))) -> 0(2(5(1(1(x1)))))
   2(5(0(3(x1)))) -> 5(0(2(1(3(x1)))))
   5(1(0(3(x1)))) -> 5(0(1(1(3(x1)))))
   5(1(0(3(x1)))) -> 5(1(1(3(0(x1)))))
   5(1(4(3(x1)))) -> 4(1(1(3(5(x1)))))
   5(1(4(4(x1)))) -> 4(1(1(5(4(x1)))))
   5(1(5(3(x1)))) -> 5(5(1(1(3(x1)))))
   5(2(0(5(x1)))) -> 5(0(2(1(5(x1)))))
   5(4(1(0(x1)))) -> 4(1(1(5(0(x1)))))
   5(4(1(0(x1)))) -> 5(1(1(4(0(x1)))))
   5(1(3(1(x1)))) -> 5(3(1(1(1(x1)))))
   5(2(0(1(x1)))) -> 2(0(5(1(1(x1)))))
   5(3(4(1(x1)))) -> 5(4(3(1(1(x1)))))
   5(4(0(1(x1)))) -> 5(0(4(1(1(x1)))))


----------------------------------------

(15)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   0^1(1(2(3(x1)))) -> 0^1(2(1(3(1(x1)))))
   0^1(1(4(2(x1)))) -> 0^1(0(2(1(4(x1)))))
   0^1(1(4(2(x1)))) -> 0^1(2(1(4(x1))))
   0^1(1(4(2(x1)))) -> 0^1(4(0(2(1(x1)))))
   0^1(2(0(3(x1)))) -> 0^1(0(2(3(1(x1)))))
   0^1(2(0(3(x1)))) -> 0^1(2(3(1(x1))))
   0^1(3(0(3(x1)))) -> 0^1(0(3(1(3(x1)))))
   0^1(3(0(3(x1)))) -> 0^1(3(1(3(x1))))

The TRS R consists of the following rules:

   0(1(2(x1))) -> 0(2(1(1(x1))))
   0(3(2(x1))) -> 0(2(1(3(x1))))
   2(4(1(x1))) -> 4(2(1(1(x1))))
   0(0(3(2(x1)))) -> 0(0(2(1(3(x1)))))
   0(1(0(3(x1)))) -> 0(1(1(3(0(x1)))))
   0(1(0(5(x1)))) -> 0(0(1(1(5(x1)))))
   0(1(2(2(x1)))) -> 0(2(1(1(2(x1)))))
   0(1(2(3(x1)))) -> 0(2(1(3(1(x1)))))
   0(1(2(5(x1)))) -> 2(1(1(0(5(x1)))))
   0(1(4(1(x1)))) -> 0(4(1(1(1(x1)))))
   0(1(4(2(x1)))) -> 0(0(2(1(4(x1)))))
   0(1(4(2(x1)))) -> 0(4(0(2(1(x1)))))
   0(1(4(3(x1)))) -> 4(0(1(1(3(x1)))))
   0(1(4(5(x1)))) -> 0(1(1(5(4(x1)))))
   0(1(5(2(x1)))) -> 0(2(5(1(1(x1)))))
   0(2(0(3(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(1(x1)))) -> 0(0(1(3(1(x1)))))
   0(3(0(2(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(3(x1)))) -> 0(0(3(1(3(x1)))))
   0(3(2(0(x1)))) -> 0(2(1(3(0(x1)))))
   0(3(5(1(x1)))) -> 0(5(3(1(1(x1)))))
   0(4(0(1(x1)))) -> 0(0(4(1(1(x1)))))
   0(5(2(0(x1)))) -> 2(1(5(0(0(x1)))))
   2(1(2(3(x1)))) -> 2(1(1(3(2(x1)))))
   2(1(4(1(x1)))) -> 4(2(1(1(1(x1)))))
   2(2(0(3(x1)))) -> 2(0(2(1(3(x1)))))
   2(2(4(1(x1)))) -> 2(4(2(1(1(x1)))))
   2(3(1(4(x1)))) -> 2(1(1(3(4(x1)))))
   2(4(1(4(x1)))) -> 4(4(2(1(1(x1)))))
   2(4(3(1(x1)))) -> 4(2(3(1(1(x1)))))
   2(5(0(1(x1)))) -> 0(2(5(1(1(x1)))))
   2(5(0(3(x1)))) -> 5(0(2(1(3(x1)))))
   3(0(1(0(x1)))) -> 3(1(0(0(0(x1)))))
   3(0(1(4(x1)))) -> 3(1(1(0(4(x1)))))
   3(0(3(0(x1)))) -> 3(1(3(0(0(x1)))))
   3(1(0(3(x1)))) -> 3(1(1(3(0(x1)))))
   3(1(2(1(x1)))) -> 1(3(2(1(1(x1)))))
   3(1(2(1(x1)))) -> 3(2(1(1(1(x1)))))
   3(2(0(1(x1)))) -> 1(3(0(2(1(x1)))))
   3(2(0(1(x1)))) -> 3(1(0(2(1(x1)))))
   3(4(1(2(x1)))) -> 3(2(1(1(4(x1)))))
   3(5(1(4(x1)))) -> 3(1(1(5(4(x1)))))
   4(1(0(1(x1)))) -> 4(0(1(1(1(x1)))))
   4(1(2(1(x1)))) -> 2(4(1(1(1(x1)))))
   4(1(4(3(x1)))) -> 4(1(1(3(4(x1)))))
   4(2(4(1(x1)))) -> 4(4(2(1(1(x1)))))
   4(4(1(2(x1)))) -> 4(2(1(1(4(x1)))))
   4(5(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(1(0(3(x1)))) -> 5(0(1(1(3(x1)))))
   5(1(0(3(x1)))) -> 5(1(1(3(0(x1)))))
   5(1(3(1(x1)))) -> 5(3(1(1(1(x1)))))
   5(1(4(3(x1)))) -> 4(1(1(3(5(x1)))))
   5(1(4(4(x1)))) -> 4(1(1(5(4(x1)))))
   5(1(5(3(x1)))) -> 5(5(1(1(3(x1)))))
   5(2(0(1(x1)))) -> 2(0(5(1(1(x1)))))
   5(2(0(5(x1)))) -> 5(0(2(1(5(x1)))))
   5(3(4(1(x1)))) -> 5(4(3(1(1(x1)))))
   5(4(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(4(1(0(x1)))) -> 4(1(1(5(0(x1)))))
   5(4(1(0(x1)))) -> 5(1(1(4(0(x1)))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(16) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   0^1(1(2(3(x1)))) -> 0^1(2(1(3(1(x1)))))
   0^1(1(4(2(x1)))) -> 0^1(0(2(1(4(x1)))))
   0^1(1(4(2(x1)))) -> 0^1(2(1(4(x1))))
   0^1(1(4(2(x1)))) -> 0^1(4(0(2(1(x1)))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(0(x_1)) = x_1
   POL(0^1(x_1)) = x_1
   POL(1(x_1)) = 1
   POL(2(x_1)) = 0
   POL(3(x_1)) = 1 + x_1
   POL(4(x_1)) = 0
   POL(5(x_1)) = 0

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   3(1(0(3(x1)))) -> 3(1(1(3(0(x1)))))
   3(1(2(1(x1)))) -> 1(3(2(1(1(x1)))))
   3(1(2(1(x1)))) -> 3(2(1(1(1(x1)))))
   2(1(2(3(x1)))) -> 2(1(1(3(2(x1)))))
   2(1(4(1(x1)))) -> 4(2(1(1(1(x1)))))
   4(1(0(1(x1)))) -> 4(0(1(1(1(x1)))))
   4(1(2(1(x1)))) -> 2(4(1(1(1(x1)))))
   4(1(4(3(x1)))) -> 4(1(1(3(4(x1)))))
   4(2(4(1(x1)))) -> 4(4(2(1(1(x1)))))
   4(4(1(2(x1)))) -> 4(2(1(1(4(x1)))))
   4(5(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   0(1(2(x1))) -> 0(2(1(1(x1))))
   0(0(3(2(x1)))) -> 0(0(2(1(3(x1)))))
   0(3(2(x1))) -> 0(2(1(3(x1))))
   0(1(2(3(x1)))) -> 0(2(1(3(1(x1)))))
   0(1(4(2(x1)))) -> 0(0(2(1(4(x1)))))
   0(1(4(2(x1)))) -> 0(4(0(2(1(x1)))))
   0(2(0(3(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(1(x1)))) -> 0(0(1(3(1(x1)))))
   0(3(0(2(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(3(x1)))) -> 0(0(3(1(3(x1)))))
   0(3(2(0(x1)))) -> 0(2(1(3(0(x1)))))
   0(1(0(3(x1)))) -> 0(1(1(3(0(x1)))))
   0(1(0(5(x1)))) -> 0(0(1(1(5(x1)))))
   0(1(2(2(x1)))) -> 0(2(1(1(2(x1)))))
   0(1(2(5(x1)))) -> 2(1(1(0(5(x1)))))
   0(1(4(1(x1)))) -> 0(4(1(1(1(x1)))))
   0(1(4(3(x1)))) -> 4(0(1(1(3(x1)))))
   0(1(4(5(x1)))) -> 0(1(1(5(4(x1)))))
   0(1(5(2(x1)))) -> 0(2(5(1(1(x1)))))
   0(3(5(1(x1)))) -> 0(5(3(1(1(x1)))))
   0(4(0(1(x1)))) -> 0(0(4(1(1(x1)))))
   0(5(2(0(x1)))) -> 2(1(5(0(0(x1)))))
   2(4(1(x1))) -> 4(2(1(1(x1))))
   2(2(0(3(x1)))) -> 2(0(2(1(3(x1)))))
   2(2(4(1(x1)))) -> 2(4(2(1(1(x1)))))
   2(3(1(4(x1)))) -> 2(1(1(3(4(x1)))))
   2(4(1(4(x1)))) -> 4(4(2(1(1(x1)))))
   2(4(3(1(x1)))) -> 4(2(3(1(1(x1)))))
   2(5(0(1(x1)))) -> 0(2(5(1(1(x1)))))
   2(5(0(3(x1)))) -> 5(0(2(1(3(x1)))))
   5(1(0(3(x1)))) -> 5(0(1(1(3(x1)))))
   5(1(0(3(x1)))) -> 5(1(1(3(0(x1)))))
   5(1(4(3(x1)))) -> 4(1(1(3(5(x1)))))
   5(1(4(4(x1)))) -> 4(1(1(5(4(x1)))))
   5(1(5(3(x1)))) -> 5(5(1(1(3(x1)))))
   5(2(0(5(x1)))) -> 5(0(2(1(5(x1)))))
   5(4(1(0(x1)))) -> 4(1(1(5(0(x1)))))
   5(4(1(0(x1)))) -> 5(1(1(4(0(x1)))))
   5(1(3(1(x1)))) -> 5(3(1(1(1(x1)))))
   5(2(0(1(x1)))) -> 2(0(5(1(1(x1)))))
   5(3(4(1(x1)))) -> 5(4(3(1(1(x1)))))
   5(4(0(1(x1)))) -> 5(0(4(1(1(x1)))))


----------------------------------------

(17)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   0^1(2(0(3(x1)))) -> 0^1(0(2(3(1(x1)))))
   0^1(2(0(3(x1)))) -> 0^1(2(3(1(x1))))
   0^1(3(0(3(x1)))) -> 0^1(0(3(1(3(x1)))))
   0^1(3(0(3(x1)))) -> 0^1(3(1(3(x1))))

The TRS R consists of the following rules:

   0(1(2(x1))) -> 0(2(1(1(x1))))
   0(3(2(x1))) -> 0(2(1(3(x1))))
   2(4(1(x1))) -> 4(2(1(1(x1))))
   0(0(3(2(x1)))) -> 0(0(2(1(3(x1)))))
   0(1(0(3(x1)))) -> 0(1(1(3(0(x1)))))
   0(1(0(5(x1)))) -> 0(0(1(1(5(x1)))))
   0(1(2(2(x1)))) -> 0(2(1(1(2(x1)))))
   0(1(2(3(x1)))) -> 0(2(1(3(1(x1)))))
   0(1(2(5(x1)))) -> 2(1(1(0(5(x1)))))
   0(1(4(1(x1)))) -> 0(4(1(1(1(x1)))))
   0(1(4(2(x1)))) -> 0(0(2(1(4(x1)))))
   0(1(4(2(x1)))) -> 0(4(0(2(1(x1)))))
   0(1(4(3(x1)))) -> 4(0(1(1(3(x1)))))
   0(1(4(5(x1)))) -> 0(1(1(5(4(x1)))))
   0(1(5(2(x1)))) -> 0(2(5(1(1(x1)))))
   0(2(0(3(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(1(x1)))) -> 0(0(1(3(1(x1)))))
   0(3(0(2(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(3(x1)))) -> 0(0(3(1(3(x1)))))
   0(3(2(0(x1)))) -> 0(2(1(3(0(x1)))))
   0(3(5(1(x1)))) -> 0(5(3(1(1(x1)))))
   0(4(0(1(x1)))) -> 0(0(4(1(1(x1)))))
   0(5(2(0(x1)))) -> 2(1(5(0(0(x1)))))
   2(1(2(3(x1)))) -> 2(1(1(3(2(x1)))))
   2(1(4(1(x1)))) -> 4(2(1(1(1(x1)))))
   2(2(0(3(x1)))) -> 2(0(2(1(3(x1)))))
   2(2(4(1(x1)))) -> 2(4(2(1(1(x1)))))
   2(3(1(4(x1)))) -> 2(1(1(3(4(x1)))))
   2(4(1(4(x1)))) -> 4(4(2(1(1(x1)))))
   2(4(3(1(x1)))) -> 4(2(3(1(1(x1)))))
   2(5(0(1(x1)))) -> 0(2(5(1(1(x1)))))
   2(5(0(3(x1)))) -> 5(0(2(1(3(x1)))))
   3(0(1(0(x1)))) -> 3(1(0(0(0(x1)))))
   3(0(1(4(x1)))) -> 3(1(1(0(4(x1)))))
   3(0(3(0(x1)))) -> 3(1(3(0(0(x1)))))
   3(1(0(3(x1)))) -> 3(1(1(3(0(x1)))))
   3(1(2(1(x1)))) -> 1(3(2(1(1(x1)))))
   3(1(2(1(x1)))) -> 3(2(1(1(1(x1)))))
   3(2(0(1(x1)))) -> 1(3(0(2(1(x1)))))
   3(2(0(1(x1)))) -> 3(1(0(2(1(x1)))))
   3(4(1(2(x1)))) -> 3(2(1(1(4(x1)))))
   3(5(1(4(x1)))) -> 3(1(1(5(4(x1)))))
   4(1(0(1(x1)))) -> 4(0(1(1(1(x1)))))
   4(1(2(1(x1)))) -> 2(4(1(1(1(x1)))))
   4(1(4(3(x1)))) -> 4(1(1(3(4(x1)))))
   4(2(4(1(x1)))) -> 4(4(2(1(1(x1)))))
   4(4(1(2(x1)))) -> 4(2(1(1(4(x1)))))
   4(5(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(1(0(3(x1)))) -> 5(0(1(1(3(x1)))))
   5(1(0(3(x1)))) -> 5(1(1(3(0(x1)))))
   5(1(3(1(x1)))) -> 5(3(1(1(1(x1)))))
   5(1(4(3(x1)))) -> 4(1(1(3(5(x1)))))
   5(1(4(4(x1)))) -> 4(1(1(5(4(x1)))))
   5(1(5(3(x1)))) -> 5(5(1(1(3(x1)))))
   5(2(0(1(x1)))) -> 2(0(5(1(1(x1)))))
   5(2(0(5(x1)))) -> 5(0(2(1(5(x1)))))
   5(3(4(1(x1)))) -> 5(4(3(1(1(x1)))))
   5(4(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(4(1(0(x1)))) -> 4(1(1(5(0(x1)))))
   5(4(1(0(x1)))) -> 5(1(1(4(0(x1)))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(18) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   0^1(2(0(3(x1)))) -> 0^1(2(3(1(x1))))
   0^1(3(0(3(x1)))) -> 0^1(3(1(3(x1))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(0(x_1)) = 1
   POL(0^1(x_1)) = x_1
   POL(1(x_1)) = 0
   POL(2(x_1)) = x_1
   POL(3(x_1)) = x_1
   POL(4(x_1)) = 0
   POL(5(x_1)) = 1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   3(1(0(3(x1)))) -> 3(1(1(3(0(x1)))))
   3(1(2(1(x1)))) -> 1(3(2(1(1(x1)))))
   3(1(2(1(x1)))) -> 3(2(1(1(1(x1)))))
   2(4(1(x1))) -> 4(2(1(1(x1))))
   2(1(2(3(x1)))) -> 2(1(1(3(2(x1)))))
   2(1(4(1(x1)))) -> 4(2(1(1(1(x1)))))
   2(2(0(3(x1)))) -> 2(0(2(1(3(x1)))))
   2(2(4(1(x1)))) -> 2(4(2(1(1(x1)))))
   2(3(1(4(x1)))) -> 2(1(1(3(4(x1)))))
   2(4(1(4(x1)))) -> 4(4(2(1(1(x1)))))
   2(4(3(1(x1)))) -> 4(2(3(1(1(x1)))))
   2(5(0(1(x1)))) -> 0(2(5(1(1(x1)))))
   2(5(0(3(x1)))) -> 5(0(2(1(3(x1)))))
   0(1(2(x1))) -> 0(2(1(1(x1))))
   0(0(3(2(x1)))) -> 0(0(2(1(3(x1)))))
   0(3(2(x1))) -> 0(2(1(3(x1))))
   0(1(2(3(x1)))) -> 0(2(1(3(1(x1)))))
   0(1(4(2(x1)))) -> 0(0(2(1(4(x1)))))
   0(1(4(2(x1)))) -> 0(4(0(2(1(x1)))))
   0(2(0(3(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(1(x1)))) -> 0(0(1(3(1(x1)))))
   0(3(0(2(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(3(x1)))) -> 0(0(3(1(3(x1)))))
   0(3(2(0(x1)))) -> 0(2(1(3(0(x1)))))
   0(1(0(3(x1)))) -> 0(1(1(3(0(x1)))))
   0(1(0(5(x1)))) -> 0(0(1(1(5(x1)))))
   0(1(2(2(x1)))) -> 0(2(1(1(2(x1)))))
   0(1(2(5(x1)))) -> 2(1(1(0(5(x1)))))
   0(1(4(1(x1)))) -> 0(4(1(1(1(x1)))))
   0(1(4(3(x1)))) -> 4(0(1(1(3(x1)))))
   0(1(4(5(x1)))) -> 0(1(1(5(4(x1)))))
   0(1(5(2(x1)))) -> 0(2(5(1(1(x1)))))
   0(3(5(1(x1)))) -> 0(5(3(1(1(x1)))))
   0(4(0(1(x1)))) -> 0(0(4(1(1(x1)))))
   0(5(2(0(x1)))) -> 2(1(5(0(0(x1)))))
   5(1(0(3(x1)))) -> 5(0(1(1(3(x1)))))
   5(1(0(3(x1)))) -> 5(1(1(3(0(x1)))))
   5(1(4(3(x1)))) -> 4(1(1(3(5(x1)))))
   5(1(4(4(x1)))) -> 4(1(1(5(4(x1)))))
   5(1(5(3(x1)))) -> 5(5(1(1(3(x1)))))
   5(2(0(5(x1)))) -> 5(0(2(1(5(x1)))))
   5(4(1(0(x1)))) -> 4(1(1(5(0(x1)))))
   5(4(1(0(x1)))) -> 5(1(1(4(0(x1)))))
   5(1(3(1(x1)))) -> 5(3(1(1(1(x1)))))
   5(2(0(1(x1)))) -> 2(0(5(1(1(x1)))))
   5(3(4(1(x1)))) -> 5(4(3(1(1(x1)))))
   5(4(0(1(x1)))) -> 5(0(4(1(1(x1)))))


----------------------------------------

(19)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   0^1(2(0(3(x1)))) -> 0^1(0(2(3(1(x1)))))
   0^1(3(0(3(x1)))) -> 0^1(0(3(1(3(x1)))))

The TRS R consists of the following rules:

   0(1(2(x1))) -> 0(2(1(1(x1))))
   0(3(2(x1))) -> 0(2(1(3(x1))))
   2(4(1(x1))) -> 4(2(1(1(x1))))
   0(0(3(2(x1)))) -> 0(0(2(1(3(x1)))))
   0(1(0(3(x1)))) -> 0(1(1(3(0(x1)))))
   0(1(0(5(x1)))) -> 0(0(1(1(5(x1)))))
   0(1(2(2(x1)))) -> 0(2(1(1(2(x1)))))
   0(1(2(3(x1)))) -> 0(2(1(3(1(x1)))))
   0(1(2(5(x1)))) -> 2(1(1(0(5(x1)))))
   0(1(4(1(x1)))) -> 0(4(1(1(1(x1)))))
   0(1(4(2(x1)))) -> 0(0(2(1(4(x1)))))
   0(1(4(2(x1)))) -> 0(4(0(2(1(x1)))))
   0(1(4(3(x1)))) -> 4(0(1(1(3(x1)))))
   0(1(4(5(x1)))) -> 0(1(1(5(4(x1)))))
   0(1(5(2(x1)))) -> 0(2(5(1(1(x1)))))
   0(2(0(3(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(1(x1)))) -> 0(0(1(3(1(x1)))))
   0(3(0(2(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(3(x1)))) -> 0(0(3(1(3(x1)))))
   0(3(2(0(x1)))) -> 0(2(1(3(0(x1)))))
   0(3(5(1(x1)))) -> 0(5(3(1(1(x1)))))
   0(4(0(1(x1)))) -> 0(0(4(1(1(x1)))))
   0(5(2(0(x1)))) -> 2(1(5(0(0(x1)))))
   2(1(2(3(x1)))) -> 2(1(1(3(2(x1)))))
   2(1(4(1(x1)))) -> 4(2(1(1(1(x1)))))
   2(2(0(3(x1)))) -> 2(0(2(1(3(x1)))))
   2(2(4(1(x1)))) -> 2(4(2(1(1(x1)))))
   2(3(1(4(x1)))) -> 2(1(1(3(4(x1)))))
   2(4(1(4(x1)))) -> 4(4(2(1(1(x1)))))
   2(4(3(1(x1)))) -> 4(2(3(1(1(x1)))))
   2(5(0(1(x1)))) -> 0(2(5(1(1(x1)))))
   2(5(0(3(x1)))) -> 5(0(2(1(3(x1)))))
   3(0(1(0(x1)))) -> 3(1(0(0(0(x1)))))
   3(0(1(4(x1)))) -> 3(1(1(0(4(x1)))))
   3(0(3(0(x1)))) -> 3(1(3(0(0(x1)))))
   3(1(0(3(x1)))) -> 3(1(1(3(0(x1)))))
   3(1(2(1(x1)))) -> 1(3(2(1(1(x1)))))
   3(1(2(1(x1)))) -> 3(2(1(1(1(x1)))))
   3(2(0(1(x1)))) -> 1(3(0(2(1(x1)))))
   3(2(0(1(x1)))) -> 3(1(0(2(1(x1)))))
   3(4(1(2(x1)))) -> 3(2(1(1(4(x1)))))
   3(5(1(4(x1)))) -> 3(1(1(5(4(x1)))))
   4(1(0(1(x1)))) -> 4(0(1(1(1(x1)))))
   4(1(2(1(x1)))) -> 2(4(1(1(1(x1)))))
   4(1(4(3(x1)))) -> 4(1(1(3(4(x1)))))
   4(2(4(1(x1)))) -> 4(4(2(1(1(x1)))))
   4(4(1(2(x1)))) -> 4(2(1(1(4(x1)))))
   4(5(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(1(0(3(x1)))) -> 5(0(1(1(3(x1)))))
   5(1(0(3(x1)))) -> 5(1(1(3(0(x1)))))
   5(1(3(1(x1)))) -> 5(3(1(1(1(x1)))))
   5(1(4(3(x1)))) -> 4(1(1(3(5(x1)))))
   5(1(4(4(x1)))) -> 4(1(1(5(4(x1)))))
   5(1(5(3(x1)))) -> 5(5(1(1(3(x1)))))
   5(2(0(1(x1)))) -> 2(0(5(1(1(x1)))))
   5(2(0(5(x1)))) -> 5(0(2(1(5(x1)))))
   5(3(4(1(x1)))) -> 5(4(3(1(1(x1)))))
   5(4(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(4(1(0(x1)))) -> 4(1(1(5(0(x1)))))
   5(4(1(0(x1)))) -> 5(1(1(4(0(x1)))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(20) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   0^1(3(0(3(x1)))) -> 0^1(0(3(1(3(x1)))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(0(x_1)) = 0
   POL(0^1(x_1)) = x_1
   POL(1(x_1)) = 0
   POL(2(x_1)) = 0
   POL(3(x_1)) = 1
   POL(4(x_1)) = 0
   POL(5(x_1)) = 0

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   2(1(2(3(x1)))) -> 2(1(1(3(2(x1)))))
   2(1(4(1(x1)))) -> 4(2(1(1(1(x1)))))
   0(1(2(x1))) -> 0(2(1(1(x1))))
   0(0(3(2(x1)))) -> 0(0(2(1(3(x1)))))
   0(3(2(x1))) -> 0(2(1(3(x1))))
   0(1(2(3(x1)))) -> 0(2(1(3(1(x1)))))
   0(1(4(2(x1)))) -> 0(0(2(1(4(x1)))))
   0(1(4(2(x1)))) -> 0(4(0(2(1(x1)))))
   0(2(0(3(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(1(x1)))) -> 0(0(1(3(1(x1)))))
   0(3(0(2(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(3(x1)))) -> 0(0(3(1(3(x1)))))
   0(3(2(0(x1)))) -> 0(2(1(3(0(x1)))))
   0(1(0(3(x1)))) -> 0(1(1(3(0(x1)))))
   0(1(0(5(x1)))) -> 0(0(1(1(5(x1)))))
   0(1(2(2(x1)))) -> 0(2(1(1(2(x1)))))
   0(1(2(5(x1)))) -> 2(1(1(0(5(x1)))))
   0(1(4(1(x1)))) -> 0(4(1(1(1(x1)))))
   0(1(4(3(x1)))) -> 4(0(1(1(3(x1)))))
   0(1(4(5(x1)))) -> 0(1(1(5(4(x1)))))
   0(1(5(2(x1)))) -> 0(2(5(1(1(x1)))))
   0(3(5(1(x1)))) -> 0(5(3(1(1(x1)))))
   0(4(0(1(x1)))) -> 0(0(4(1(1(x1)))))
   0(5(2(0(x1)))) -> 2(1(5(0(0(x1)))))


----------------------------------------

(21)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   0^1(2(0(3(x1)))) -> 0^1(0(2(3(1(x1)))))

The TRS R consists of the following rules:

   0(1(2(x1))) -> 0(2(1(1(x1))))
   0(3(2(x1))) -> 0(2(1(3(x1))))
   2(4(1(x1))) -> 4(2(1(1(x1))))
   0(0(3(2(x1)))) -> 0(0(2(1(3(x1)))))
   0(1(0(3(x1)))) -> 0(1(1(3(0(x1)))))
   0(1(0(5(x1)))) -> 0(0(1(1(5(x1)))))
   0(1(2(2(x1)))) -> 0(2(1(1(2(x1)))))
   0(1(2(3(x1)))) -> 0(2(1(3(1(x1)))))
   0(1(2(5(x1)))) -> 2(1(1(0(5(x1)))))
   0(1(4(1(x1)))) -> 0(4(1(1(1(x1)))))
   0(1(4(2(x1)))) -> 0(0(2(1(4(x1)))))
   0(1(4(2(x1)))) -> 0(4(0(2(1(x1)))))
   0(1(4(3(x1)))) -> 4(0(1(1(3(x1)))))
   0(1(4(5(x1)))) -> 0(1(1(5(4(x1)))))
   0(1(5(2(x1)))) -> 0(2(5(1(1(x1)))))
   0(2(0(3(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(1(x1)))) -> 0(0(1(3(1(x1)))))
   0(3(0(2(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(3(x1)))) -> 0(0(3(1(3(x1)))))
   0(3(2(0(x1)))) -> 0(2(1(3(0(x1)))))
   0(3(5(1(x1)))) -> 0(5(3(1(1(x1)))))
   0(4(0(1(x1)))) -> 0(0(4(1(1(x1)))))
   0(5(2(0(x1)))) -> 2(1(5(0(0(x1)))))
   2(1(2(3(x1)))) -> 2(1(1(3(2(x1)))))
   2(1(4(1(x1)))) -> 4(2(1(1(1(x1)))))
   2(2(0(3(x1)))) -> 2(0(2(1(3(x1)))))
   2(2(4(1(x1)))) -> 2(4(2(1(1(x1)))))
   2(3(1(4(x1)))) -> 2(1(1(3(4(x1)))))
   2(4(1(4(x1)))) -> 4(4(2(1(1(x1)))))
   2(4(3(1(x1)))) -> 4(2(3(1(1(x1)))))
   2(5(0(1(x1)))) -> 0(2(5(1(1(x1)))))
   2(5(0(3(x1)))) -> 5(0(2(1(3(x1)))))
   3(0(1(0(x1)))) -> 3(1(0(0(0(x1)))))
   3(0(1(4(x1)))) -> 3(1(1(0(4(x1)))))
   3(0(3(0(x1)))) -> 3(1(3(0(0(x1)))))
   3(1(0(3(x1)))) -> 3(1(1(3(0(x1)))))
   3(1(2(1(x1)))) -> 1(3(2(1(1(x1)))))
   3(1(2(1(x1)))) -> 3(2(1(1(1(x1)))))
   3(2(0(1(x1)))) -> 1(3(0(2(1(x1)))))
   3(2(0(1(x1)))) -> 3(1(0(2(1(x1)))))
   3(4(1(2(x1)))) -> 3(2(1(1(4(x1)))))
   3(5(1(4(x1)))) -> 3(1(1(5(4(x1)))))
   4(1(0(1(x1)))) -> 4(0(1(1(1(x1)))))
   4(1(2(1(x1)))) -> 2(4(1(1(1(x1)))))
   4(1(4(3(x1)))) -> 4(1(1(3(4(x1)))))
   4(2(4(1(x1)))) -> 4(4(2(1(1(x1)))))
   4(4(1(2(x1)))) -> 4(2(1(1(4(x1)))))
   4(5(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(1(0(3(x1)))) -> 5(0(1(1(3(x1)))))
   5(1(0(3(x1)))) -> 5(1(1(3(0(x1)))))
   5(1(3(1(x1)))) -> 5(3(1(1(1(x1)))))
   5(1(4(3(x1)))) -> 4(1(1(3(5(x1)))))
   5(1(4(4(x1)))) -> 4(1(1(5(4(x1)))))
   5(1(5(3(x1)))) -> 5(5(1(1(3(x1)))))
   5(2(0(1(x1)))) -> 2(0(5(1(1(x1)))))
   5(2(0(5(x1)))) -> 5(0(2(1(5(x1)))))
   5(3(4(1(x1)))) -> 5(4(3(1(1(x1)))))
   5(4(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(4(1(0(x1)))) -> 4(1(1(5(0(x1)))))
   5(4(1(0(x1)))) -> 5(1(1(4(0(x1)))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(22) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   0^1(2(0(3(x1)))) -> 0^1(0(2(3(1(x1)))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(0(x_1)) = 1
   POL(0^1(x_1)) = x_1
   POL(1(x_1)) = 0
   POL(2(x_1)) = 1 + x_1
   POL(3(x_1)) = 1 + x_1
   POL(4(x_1)) = 1
   POL(5(x_1)) = 0

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   2(1(2(3(x1)))) -> 2(1(1(3(2(x1)))))
   2(1(4(1(x1)))) -> 4(2(1(1(1(x1)))))
   0(1(2(x1))) -> 0(2(1(1(x1))))
   0(0(3(2(x1)))) -> 0(0(2(1(3(x1)))))
   0(3(2(x1))) -> 0(2(1(3(x1))))
   0(1(2(3(x1)))) -> 0(2(1(3(1(x1)))))
   0(1(4(2(x1)))) -> 0(0(2(1(4(x1)))))
   0(1(4(2(x1)))) -> 0(4(0(2(1(x1)))))
   0(2(0(3(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(1(x1)))) -> 0(0(1(3(1(x1)))))
   0(3(0(2(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(3(x1)))) -> 0(0(3(1(3(x1)))))
   0(3(2(0(x1)))) -> 0(2(1(3(0(x1)))))
   0(1(0(3(x1)))) -> 0(1(1(3(0(x1)))))
   0(1(0(5(x1)))) -> 0(0(1(1(5(x1)))))
   0(1(2(2(x1)))) -> 0(2(1(1(2(x1)))))
   0(1(2(5(x1)))) -> 2(1(1(0(5(x1)))))
   0(1(4(1(x1)))) -> 0(4(1(1(1(x1)))))
   0(1(4(3(x1)))) -> 4(0(1(1(3(x1)))))
   0(1(4(5(x1)))) -> 0(1(1(5(4(x1)))))
   0(1(5(2(x1)))) -> 0(2(5(1(1(x1)))))
   0(3(5(1(x1)))) -> 0(5(3(1(1(x1)))))
   0(4(0(1(x1)))) -> 0(0(4(1(1(x1)))))
   0(5(2(0(x1)))) -> 2(1(5(0(0(x1)))))


----------------------------------------

(23)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   0(1(2(x1))) -> 0(2(1(1(x1))))
   0(3(2(x1))) -> 0(2(1(3(x1))))
   2(4(1(x1))) -> 4(2(1(1(x1))))
   0(0(3(2(x1)))) -> 0(0(2(1(3(x1)))))
   0(1(0(3(x1)))) -> 0(1(1(3(0(x1)))))
   0(1(0(5(x1)))) -> 0(0(1(1(5(x1)))))
   0(1(2(2(x1)))) -> 0(2(1(1(2(x1)))))
   0(1(2(3(x1)))) -> 0(2(1(3(1(x1)))))
   0(1(2(5(x1)))) -> 2(1(1(0(5(x1)))))
   0(1(4(1(x1)))) -> 0(4(1(1(1(x1)))))
   0(1(4(2(x1)))) -> 0(0(2(1(4(x1)))))
   0(1(4(2(x1)))) -> 0(4(0(2(1(x1)))))
   0(1(4(3(x1)))) -> 4(0(1(1(3(x1)))))
   0(1(4(5(x1)))) -> 0(1(1(5(4(x1)))))
   0(1(5(2(x1)))) -> 0(2(5(1(1(x1)))))
   0(2(0(3(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(1(x1)))) -> 0(0(1(3(1(x1)))))
   0(3(0(2(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(3(x1)))) -> 0(0(3(1(3(x1)))))
   0(3(2(0(x1)))) -> 0(2(1(3(0(x1)))))
   0(3(5(1(x1)))) -> 0(5(3(1(1(x1)))))
   0(4(0(1(x1)))) -> 0(0(4(1(1(x1)))))
   0(5(2(0(x1)))) -> 2(1(5(0(0(x1)))))
   2(1(2(3(x1)))) -> 2(1(1(3(2(x1)))))
   2(1(4(1(x1)))) -> 4(2(1(1(1(x1)))))
   2(2(0(3(x1)))) -> 2(0(2(1(3(x1)))))
   2(2(4(1(x1)))) -> 2(4(2(1(1(x1)))))
   2(3(1(4(x1)))) -> 2(1(1(3(4(x1)))))
   2(4(1(4(x1)))) -> 4(4(2(1(1(x1)))))
   2(4(3(1(x1)))) -> 4(2(3(1(1(x1)))))
   2(5(0(1(x1)))) -> 0(2(5(1(1(x1)))))
   2(5(0(3(x1)))) -> 5(0(2(1(3(x1)))))
   3(0(1(0(x1)))) -> 3(1(0(0(0(x1)))))
   3(0(1(4(x1)))) -> 3(1(1(0(4(x1)))))
   3(0(3(0(x1)))) -> 3(1(3(0(0(x1)))))
   3(1(0(3(x1)))) -> 3(1(1(3(0(x1)))))
   3(1(2(1(x1)))) -> 1(3(2(1(1(x1)))))
   3(1(2(1(x1)))) -> 3(2(1(1(1(x1)))))
   3(2(0(1(x1)))) -> 1(3(0(2(1(x1)))))
   3(2(0(1(x1)))) -> 3(1(0(2(1(x1)))))
   3(4(1(2(x1)))) -> 3(2(1(1(4(x1)))))
   3(5(1(4(x1)))) -> 3(1(1(5(4(x1)))))
   4(1(0(1(x1)))) -> 4(0(1(1(1(x1)))))
   4(1(2(1(x1)))) -> 2(4(1(1(1(x1)))))
   4(1(4(3(x1)))) -> 4(1(1(3(4(x1)))))
   4(2(4(1(x1)))) -> 4(4(2(1(1(x1)))))
   4(4(1(2(x1)))) -> 4(2(1(1(4(x1)))))
   4(5(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(1(0(3(x1)))) -> 5(0(1(1(3(x1)))))
   5(1(0(3(x1)))) -> 5(1(1(3(0(x1)))))
   5(1(3(1(x1)))) -> 5(3(1(1(1(x1)))))
   5(1(4(3(x1)))) -> 4(1(1(3(5(x1)))))
   5(1(4(4(x1)))) -> 4(1(1(5(4(x1)))))
   5(1(5(3(x1)))) -> 5(5(1(1(3(x1)))))
   5(2(0(1(x1)))) -> 2(0(5(1(1(x1)))))
   5(2(0(5(x1)))) -> 5(0(2(1(5(x1)))))
   5(3(4(1(x1)))) -> 5(4(3(1(1(x1)))))
   5(4(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(4(1(0(x1)))) -> 4(1(1(5(0(x1)))))
   5(4(1(0(x1)))) -> 5(1(1(4(0(x1)))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(24) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(25)
YES

----------------------------------------

(26)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   5^1(2(0(5(x1)))) -> 5^1(0(2(1(5(x1)))))

The TRS R consists of the following rules:

   0(1(2(x1))) -> 0(2(1(1(x1))))
   0(3(2(x1))) -> 0(2(1(3(x1))))
   2(4(1(x1))) -> 4(2(1(1(x1))))
   0(0(3(2(x1)))) -> 0(0(2(1(3(x1)))))
   0(1(0(3(x1)))) -> 0(1(1(3(0(x1)))))
   0(1(0(5(x1)))) -> 0(0(1(1(5(x1)))))
   0(1(2(2(x1)))) -> 0(2(1(1(2(x1)))))
   0(1(2(3(x1)))) -> 0(2(1(3(1(x1)))))
   0(1(2(5(x1)))) -> 2(1(1(0(5(x1)))))
   0(1(4(1(x1)))) -> 0(4(1(1(1(x1)))))
   0(1(4(2(x1)))) -> 0(0(2(1(4(x1)))))
   0(1(4(2(x1)))) -> 0(4(0(2(1(x1)))))
   0(1(4(3(x1)))) -> 4(0(1(1(3(x1)))))
   0(1(4(5(x1)))) -> 0(1(1(5(4(x1)))))
   0(1(5(2(x1)))) -> 0(2(5(1(1(x1)))))
   0(2(0(3(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(1(x1)))) -> 0(0(1(3(1(x1)))))
   0(3(0(2(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(3(x1)))) -> 0(0(3(1(3(x1)))))
   0(3(2(0(x1)))) -> 0(2(1(3(0(x1)))))
   0(3(5(1(x1)))) -> 0(5(3(1(1(x1)))))
   0(4(0(1(x1)))) -> 0(0(4(1(1(x1)))))
   0(5(2(0(x1)))) -> 2(1(5(0(0(x1)))))
   2(1(2(3(x1)))) -> 2(1(1(3(2(x1)))))
   2(1(4(1(x1)))) -> 4(2(1(1(1(x1)))))
   2(2(0(3(x1)))) -> 2(0(2(1(3(x1)))))
   2(2(4(1(x1)))) -> 2(4(2(1(1(x1)))))
   2(3(1(4(x1)))) -> 2(1(1(3(4(x1)))))
   2(4(1(4(x1)))) -> 4(4(2(1(1(x1)))))
   2(4(3(1(x1)))) -> 4(2(3(1(1(x1)))))
   2(5(0(1(x1)))) -> 0(2(5(1(1(x1)))))
   2(5(0(3(x1)))) -> 5(0(2(1(3(x1)))))
   3(0(1(0(x1)))) -> 3(1(0(0(0(x1)))))
   3(0(1(4(x1)))) -> 3(1(1(0(4(x1)))))
   3(0(3(0(x1)))) -> 3(1(3(0(0(x1)))))
   3(1(0(3(x1)))) -> 3(1(1(3(0(x1)))))
   3(1(2(1(x1)))) -> 1(3(2(1(1(x1)))))
   3(1(2(1(x1)))) -> 3(2(1(1(1(x1)))))
   3(2(0(1(x1)))) -> 1(3(0(2(1(x1)))))
   3(2(0(1(x1)))) -> 3(1(0(2(1(x1)))))
   3(4(1(2(x1)))) -> 3(2(1(1(4(x1)))))
   3(5(1(4(x1)))) -> 3(1(1(5(4(x1)))))
   4(1(0(1(x1)))) -> 4(0(1(1(1(x1)))))
   4(1(2(1(x1)))) -> 2(4(1(1(1(x1)))))
   4(1(4(3(x1)))) -> 4(1(1(3(4(x1)))))
   4(2(4(1(x1)))) -> 4(4(2(1(1(x1)))))
   4(4(1(2(x1)))) -> 4(2(1(1(4(x1)))))
   4(5(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(1(0(3(x1)))) -> 5(0(1(1(3(x1)))))
   5(1(0(3(x1)))) -> 5(1(1(3(0(x1)))))
   5(1(3(1(x1)))) -> 5(3(1(1(1(x1)))))
   5(1(4(3(x1)))) -> 4(1(1(3(5(x1)))))
   5(1(4(4(x1)))) -> 4(1(1(5(4(x1)))))
   5(1(5(3(x1)))) -> 5(5(1(1(3(x1)))))
   5(2(0(1(x1)))) -> 2(0(5(1(1(x1)))))
   5(2(0(5(x1)))) -> 5(0(2(1(5(x1)))))
   5(3(4(1(x1)))) -> 5(4(3(1(1(x1)))))
   5(4(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(4(1(0(x1)))) -> 4(1(1(5(0(x1)))))
   5(4(1(0(x1)))) -> 5(1(1(4(0(x1)))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(27) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   5^1(2(0(5(x1)))) -> 5^1(0(2(1(5(x1)))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(0(x_1)) = 1
   POL(1(x_1)) = 0
   POL(2(x_1)) = 1 + x_1
   POL(3(x_1)) = 1
   POL(4(x_1)) = 0
   POL(5(x_1)) = 0
   POL(5^1(x_1)) = x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   2(1(2(3(x1)))) -> 2(1(1(3(2(x1)))))
   2(1(4(1(x1)))) -> 4(2(1(1(1(x1)))))
   0(1(2(x1))) -> 0(2(1(1(x1))))
   0(0(3(2(x1)))) -> 0(0(2(1(3(x1)))))
   0(3(2(x1))) -> 0(2(1(3(x1))))
   0(1(2(3(x1)))) -> 0(2(1(3(1(x1)))))
   0(1(4(2(x1)))) -> 0(0(2(1(4(x1)))))
   0(1(4(2(x1)))) -> 0(4(0(2(1(x1)))))
   0(2(0(3(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(1(x1)))) -> 0(0(1(3(1(x1)))))
   0(3(0(2(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(3(x1)))) -> 0(0(3(1(3(x1)))))
   0(3(2(0(x1)))) -> 0(2(1(3(0(x1)))))
   0(1(0(3(x1)))) -> 0(1(1(3(0(x1)))))
   0(1(0(5(x1)))) -> 0(0(1(1(5(x1)))))
   0(1(2(2(x1)))) -> 0(2(1(1(2(x1)))))
   0(1(2(5(x1)))) -> 2(1(1(0(5(x1)))))
   0(1(4(1(x1)))) -> 0(4(1(1(1(x1)))))
   0(1(4(3(x1)))) -> 4(0(1(1(3(x1)))))
   0(1(4(5(x1)))) -> 0(1(1(5(4(x1)))))
   0(1(5(2(x1)))) -> 0(2(5(1(1(x1)))))
   0(3(5(1(x1)))) -> 0(5(3(1(1(x1)))))
   0(4(0(1(x1)))) -> 0(0(4(1(1(x1)))))
   0(5(2(0(x1)))) -> 2(1(5(0(0(x1)))))


----------------------------------------

(28)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   0(1(2(x1))) -> 0(2(1(1(x1))))
   0(3(2(x1))) -> 0(2(1(3(x1))))
   2(4(1(x1))) -> 4(2(1(1(x1))))
   0(0(3(2(x1)))) -> 0(0(2(1(3(x1)))))
   0(1(0(3(x1)))) -> 0(1(1(3(0(x1)))))
   0(1(0(5(x1)))) -> 0(0(1(1(5(x1)))))
   0(1(2(2(x1)))) -> 0(2(1(1(2(x1)))))
   0(1(2(3(x1)))) -> 0(2(1(3(1(x1)))))
   0(1(2(5(x1)))) -> 2(1(1(0(5(x1)))))
   0(1(4(1(x1)))) -> 0(4(1(1(1(x1)))))
   0(1(4(2(x1)))) -> 0(0(2(1(4(x1)))))
   0(1(4(2(x1)))) -> 0(4(0(2(1(x1)))))
   0(1(4(3(x1)))) -> 4(0(1(1(3(x1)))))
   0(1(4(5(x1)))) -> 0(1(1(5(4(x1)))))
   0(1(5(2(x1)))) -> 0(2(5(1(1(x1)))))
   0(2(0(3(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(1(x1)))) -> 0(0(1(3(1(x1)))))
   0(3(0(2(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(3(x1)))) -> 0(0(3(1(3(x1)))))
   0(3(2(0(x1)))) -> 0(2(1(3(0(x1)))))
   0(3(5(1(x1)))) -> 0(5(3(1(1(x1)))))
   0(4(0(1(x1)))) -> 0(0(4(1(1(x1)))))
   0(5(2(0(x1)))) -> 2(1(5(0(0(x1)))))
   2(1(2(3(x1)))) -> 2(1(1(3(2(x1)))))
   2(1(4(1(x1)))) -> 4(2(1(1(1(x1)))))
   2(2(0(3(x1)))) -> 2(0(2(1(3(x1)))))
   2(2(4(1(x1)))) -> 2(4(2(1(1(x1)))))
   2(3(1(4(x1)))) -> 2(1(1(3(4(x1)))))
   2(4(1(4(x1)))) -> 4(4(2(1(1(x1)))))
   2(4(3(1(x1)))) -> 4(2(3(1(1(x1)))))
   2(5(0(1(x1)))) -> 0(2(5(1(1(x1)))))
   2(5(0(3(x1)))) -> 5(0(2(1(3(x1)))))
   3(0(1(0(x1)))) -> 3(1(0(0(0(x1)))))
   3(0(1(4(x1)))) -> 3(1(1(0(4(x1)))))
   3(0(3(0(x1)))) -> 3(1(3(0(0(x1)))))
   3(1(0(3(x1)))) -> 3(1(1(3(0(x1)))))
   3(1(2(1(x1)))) -> 1(3(2(1(1(x1)))))
   3(1(2(1(x1)))) -> 3(2(1(1(1(x1)))))
   3(2(0(1(x1)))) -> 1(3(0(2(1(x1)))))
   3(2(0(1(x1)))) -> 3(1(0(2(1(x1)))))
   3(4(1(2(x1)))) -> 3(2(1(1(4(x1)))))
   3(5(1(4(x1)))) -> 3(1(1(5(4(x1)))))
   4(1(0(1(x1)))) -> 4(0(1(1(1(x1)))))
   4(1(2(1(x1)))) -> 2(4(1(1(1(x1)))))
   4(1(4(3(x1)))) -> 4(1(1(3(4(x1)))))
   4(2(4(1(x1)))) -> 4(4(2(1(1(x1)))))
   4(4(1(2(x1)))) -> 4(2(1(1(4(x1)))))
   4(5(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(1(0(3(x1)))) -> 5(0(1(1(3(x1)))))
   5(1(0(3(x1)))) -> 5(1(1(3(0(x1)))))
   5(1(3(1(x1)))) -> 5(3(1(1(1(x1)))))
   5(1(4(3(x1)))) -> 4(1(1(3(5(x1)))))
   5(1(4(4(x1)))) -> 4(1(1(5(4(x1)))))
   5(1(5(3(x1)))) -> 5(5(1(1(3(x1)))))
   5(2(0(1(x1)))) -> 2(0(5(1(1(x1)))))
   5(2(0(5(x1)))) -> 5(0(2(1(5(x1)))))
   5(3(4(1(x1)))) -> 5(4(3(1(1(x1)))))
   5(4(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(4(1(0(x1)))) -> 4(1(1(5(0(x1)))))
   5(4(1(0(x1)))) -> 5(1(1(4(0(x1)))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(29) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(30)
YES

----------------------------------------

(31)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   2^1(2(0(3(x1)))) -> 2^1(0(2(1(3(x1)))))

The TRS R consists of the following rules:

   0(1(2(x1))) -> 0(2(1(1(x1))))
   0(3(2(x1))) -> 0(2(1(3(x1))))
   2(4(1(x1))) -> 4(2(1(1(x1))))
   0(0(3(2(x1)))) -> 0(0(2(1(3(x1)))))
   0(1(0(3(x1)))) -> 0(1(1(3(0(x1)))))
   0(1(0(5(x1)))) -> 0(0(1(1(5(x1)))))
   0(1(2(2(x1)))) -> 0(2(1(1(2(x1)))))
   0(1(2(3(x1)))) -> 0(2(1(3(1(x1)))))
   0(1(2(5(x1)))) -> 2(1(1(0(5(x1)))))
   0(1(4(1(x1)))) -> 0(4(1(1(1(x1)))))
   0(1(4(2(x1)))) -> 0(0(2(1(4(x1)))))
   0(1(4(2(x1)))) -> 0(4(0(2(1(x1)))))
   0(1(4(3(x1)))) -> 4(0(1(1(3(x1)))))
   0(1(4(5(x1)))) -> 0(1(1(5(4(x1)))))
   0(1(5(2(x1)))) -> 0(2(5(1(1(x1)))))
   0(2(0(3(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(1(x1)))) -> 0(0(1(3(1(x1)))))
   0(3(0(2(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(3(x1)))) -> 0(0(3(1(3(x1)))))
   0(3(2(0(x1)))) -> 0(2(1(3(0(x1)))))
   0(3(5(1(x1)))) -> 0(5(3(1(1(x1)))))
   0(4(0(1(x1)))) -> 0(0(4(1(1(x1)))))
   0(5(2(0(x1)))) -> 2(1(5(0(0(x1)))))
   2(1(2(3(x1)))) -> 2(1(1(3(2(x1)))))
   2(1(4(1(x1)))) -> 4(2(1(1(1(x1)))))
   2(2(0(3(x1)))) -> 2(0(2(1(3(x1)))))
   2(2(4(1(x1)))) -> 2(4(2(1(1(x1)))))
   2(3(1(4(x1)))) -> 2(1(1(3(4(x1)))))
   2(4(1(4(x1)))) -> 4(4(2(1(1(x1)))))
   2(4(3(1(x1)))) -> 4(2(3(1(1(x1)))))
   2(5(0(1(x1)))) -> 0(2(5(1(1(x1)))))
   2(5(0(3(x1)))) -> 5(0(2(1(3(x1)))))
   3(0(1(0(x1)))) -> 3(1(0(0(0(x1)))))
   3(0(1(4(x1)))) -> 3(1(1(0(4(x1)))))
   3(0(3(0(x1)))) -> 3(1(3(0(0(x1)))))
   3(1(0(3(x1)))) -> 3(1(1(3(0(x1)))))
   3(1(2(1(x1)))) -> 1(3(2(1(1(x1)))))
   3(1(2(1(x1)))) -> 3(2(1(1(1(x1)))))
   3(2(0(1(x1)))) -> 1(3(0(2(1(x1)))))
   3(2(0(1(x1)))) -> 3(1(0(2(1(x1)))))
   3(4(1(2(x1)))) -> 3(2(1(1(4(x1)))))
   3(5(1(4(x1)))) -> 3(1(1(5(4(x1)))))
   4(1(0(1(x1)))) -> 4(0(1(1(1(x1)))))
   4(1(2(1(x1)))) -> 2(4(1(1(1(x1)))))
   4(1(4(3(x1)))) -> 4(1(1(3(4(x1)))))
   4(2(4(1(x1)))) -> 4(4(2(1(1(x1)))))
   4(4(1(2(x1)))) -> 4(2(1(1(4(x1)))))
   4(5(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(1(0(3(x1)))) -> 5(0(1(1(3(x1)))))
   5(1(0(3(x1)))) -> 5(1(1(3(0(x1)))))
   5(1(3(1(x1)))) -> 5(3(1(1(1(x1)))))
   5(1(4(3(x1)))) -> 4(1(1(3(5(x1)))))
   5(1(4(4(x1)))) -> 4(1(1(5(4(x1)))))
   5(1(5(3(x1)))) -> 5(5(1(1(3(x1)))))
   5(2(0(1(x1)))) -> 2(0(5(1(1(x1)))))
   5(2(0(5(x1)))) -> 5(0(2(1(5(x1)))))
   5(3(4(1(x1)))) -> 5(4(3(1(1(x1)))))
   5(4(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(4(1(0(x1)))) -> 4(1(1(5(0(x1)))))
   5(4(1(0(x1)))) -> 5(1(1(4(0(x1)))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(32) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   2^1(2(0(3(x1)))) -> 2^1(0(2(1(3(x1)))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(0(x_1)) = 1
   POL(1(x_1)) = 0
   POL(2(x_1)) = 1 + x_1
   POL(2^1(x_1)) = x_1
   POL(3(x_1)) = 0
   POL(4(x_1)) = 0
   POL(5(x_1)) = 0

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   2(1(2(3(x1)))) -> 2(1(1(3(2(x1)))))
   2(1(4(1(x1)))) -> 4(2(1(1(1(x1)))))
   0(1(2(x1))) -> 0(2(1(1(x1))))
   0(0(3(2(x1)))) -> 0(0(2(1(3(x1)))))
   0(3(2(x1))) -> 0(2(1(3(x1))))
   0(1(2(3(x1)))) -> 0(2(1(3(1(x1)))))
   0(1(4(2(x1)))) -> 0(0(2(1(4(x1)))))
   0(1(4(2(x1)))) -> 0(4(0(2(1(x1)))))
   0(2(0(3(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(1(x1)))) -> 0(0(1(3(1(x1)))))
   0(3(0(2(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(3(x1)))) -> 0(0(3(1(3(x1)))))
   0(3(2(0(x1)))) -> 0(2(1(3(0(x1)))))
   0(1(0(3(x1)))) -> 0(1(1(3(0(x1)))))
   0(1(0(5(x1)))) -> 0(0(1(1(5(x1)))))
   0(1(2(2(x1)))) -> 0(2(1(1(2(x1)))))
   0(1(2(5(x1)))) -> 2(1(1(0(5(x1)))))
   0(1(4(1(x1)))) -> 0(4(1(1(1(x1)))))
   0(1(4(3(x1)))) -> 4(0(1(1(3(x1)))))
   0(1(4(5(x1)))) -> 0(1(1(5(4(x1)))))
   0(1(5(2(x1)))) -> 0(2(5(1(1(x1)))))
   0(3(5(1(x1)))) -> 0(5(3(1(1(x1)))))
   0(4(0(1(x1)))) -> 0(0(4(1(1(x1)))))
   0(5(2(0(x1)))) -> 2(1(5(0(0(x1)))))


----------------------------------------

(33)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   0(1(2(x1))) -> 0(2(1(1(x1))))
   0(3(2(x1))) -> 0(2(1(3(x1))))
   2(4(1(x1))) -> 4(2(1(1(x1))))
   0(0(3(2(x1)))) -> 0(0(2(1(3(x1)))))
   0(1(0(3(x1)))) -> 0(1(1(3(0(x1)))))
   0(1(0(5(x1)))) -> 0(0(1(1(5(x1)))))
   0(1(2(2(x1)))) -> 0(2(1(1(2(x1)))))
   0(1(2(3(x1)))) -> 0(2(1(3(1(x1)))))
   0(1(2(5(x1)))) -> 2(1(1(0(5(x1)))))
   0(1(4(1(x1)))) -> 0(4(1(1(1(x1)))))
   0(1(4(2(x1)))) -> 0(0(2(1(4(x1)))))
   0(1(4(2(x1)))) -> 0(4(0(2(1(x1)))))
   0(1(4(3(x1)))) -> 4(0(1(1(3(x1)))))
   0(1(4(5(x1)))) -> 0(1(1(5(4(x1)))))
   0(1(5(2(x1)))) -> 0(2(5(1(1(x1)))))
   0(2(0(3(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(1(x1)))) -> 0(0(1(3(1(x1)))))
   0(3(0(2(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(3(x1)))) -> 0(0(3(1(3(x1)))))
   0(3(2(0(x1)))) -> 0(2(1(3(0(x1)))))
   0(3(5(1(x1)))) -> 0(5(3(1(1(x1)))))
   0(4(0(1(x1)))) -> 0(0(4(1(1(x1)))))
   0(5(2(0(x1)))) -> 2(1(5(0(0(x1)))))
   2(1(2(3(x1)))) -> 2(1(1(3(2(x1)))))
   2(1(4(1(x1)))) -> 4(2(1(1(1(x1)))))
   2(2(0(3(x1)))) -> 2(0(2(1(3(x1)))))
   2(2(4(1(x1)))) -> 2(4(2(1(1(x1)))))
   2(3(1(4(x1)))) -> 2(1(1(3(4(x1)))))
   2(4(1(4(x1)))) -> 4(4(2(1(1(x1)))))
   2(4(3(1(x1)))) -> 4(2(3(1(1(x1)))))
   2(5(0(1(x1)))) -> 0(2(5(1(1(x1)))))
   2(5(0(3(x1)))) -> 5(0(2(1(3(x1)))))
   3(0(1(0(x1)))) -> 3(1(0(0(0(x1)))))
   3(0(1(4(x1)))) -> 3(1(1(0(4(x1)))))
   3(0(3(0(x1)))) -> 3(1(3(0(0(x1)))))
   3(1(0(3(x1)))) -> 3(1(1(3(0(x1)))))
   3(1(2(1(x1)))) -> 1(3(2(1(1(x1)))))
   3(1(2(1(x1)))) -> 3(2(1(1(1(x1)))))
   3(2(0(1(x1)))) -> 1(3(0(2(1(x1)))))
   3(2(0(1(x1)))) -> 3(1(0(2(1(x1)))))
   3(4(1(2(x1)))) -> 3(2(1(1(4(x1)))))
   3(5(1(4(x1)))) -> 3(1(1(5(4(x1)))))
   4(1(0(1(x1)))) -> 4(0(1(1(1(x1)))))
   4(1(2(1(x1)))) -> 2(4(1(1(1(x1)))))
   4(1(4(3(x1)))) -> 4(1(1(3(4(x1)))))
   4(2(4(1(x1)))) -> 4(4(2(1(1(x1)))))
   4(4(1(2(x1)))) -> 4(2(1(1(4(x1)))))
   4(5(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(1(0(3(x1)))) -> 5(0(1(1(3(x1)))))
   5(1(0(3(x1)))) -> 5(1(1(3(0(x1)))))
   5(1(3(1(x1)))) -> 5(3(1(1(1(x1)))))
   5(1(4(3(x1)))) -> 4(1(1(3(5(x1)))))
   5(1(4(4(x1)))) -> 4(1(1(5(4(x1)))))
   5(1(5(3(x1)))) -> 5(5(1(1(3(x1)))))
   5(2(0(1(x1)))) -> 2(0(5(1(1(x1)))))
   5(2(0(5(x1)))) -> 5(0(2(1(5(x1)))))
   5(3(4(1(x1)))) -> 5(4(3(1(1(x1)))))
   5(4(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(4(1(0(x1)))) -> 4(1(1(5(0(x1)))))
   5(4(1(0(x1)))) -> 5(1(1(4(0(x1)))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(34) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(35)
YES

----------------------------------------

(36)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   3^1(2(0(1(x1)))) -> 3^1(0(2(1(x1))))

The TRS R consists of the following rules:

   0(1(2(x1))) -> 0(2(1(1(x1))))
   0(3(2(x1))) -> 0(2(1(3(x1))))
   2(4(1(x1))) -> 4(2(1(1(x1))))
   0(0(3(2(x1)))) -> 0(0(2(1(3(x1)))))
   0(1(0(3(x1)))) -> 0(1(1(3(0(x1)))))
   0(1(0(5(x1)))) -> 0(0(1(1(5(x1)))))
   0(1(2(2(x1)))) -> 0(2(1(1(2(x1)))))
   0(1(2(3(x1)))) -> 0(2(1(3(1(x1)))))
   0(1(2(5(x1)))) -> 2(1(1(0(5(x1)))))
   0(1(4(1(x1)))) -> 0(4(1(1(1(x1)))))
   0(1(4(2(x1)))) -> 0(0(2(1(4(x1)))))
   0(1(4(2(x1)))) -> 0(4(0(2(1(x1)))))
   0(1(4(3(x1)))) -> 4(0(1(1(3(x1)))))
   0(1(4(5(x1)))) -> 0(1(1(5(4(x1)))))
   0(1(5(2(x1)))) -> 0(2(5(1(1(x1)))))
   0(2(0(3(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(1(x1)))) -> 0(0(1(3(1(x1)))))
   0(3(0(2(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(3(x1)))) -> 0(0(3(1(3(x1)))))
   0(3(2(0(x1)))) -> 0(2(1(3(0(x1)))))
   0(3(5(1(x1)))) -> 0(5(3(1(1(x1)))))
   0(4(0(1(x1)))) -> 0(0(4(1(1(x1)))))
   0(5(2(0(x1)))) -> 2(1(5(0(0(x1)))))
   2(1(2(3(x1)))) -> 2(1(1(3(2(x1)))))
   2(1(4(1(x1)))) -> 4(2(1(1(1(x1)))))
   2(2(0(3(x1)))) -> 2(0(2(1(3(x1)))))
   2(2(4(1(x1)))) -> 2(4(2(1(1(x1)))))
   2(3(1(4(x1)))) -> 2(1(1(3(4(x1)))))
   2(4(1(4(x1)))) -> 4(4(2(1(1(x1)))))
   2(4(3(1(x1)))) -> 4(2(3(1(1(x1)))))
   2(5(0(1(x1)))) -> 0(2(5(1(1(x1)))))
   2(5(0(3(x1)))) -> 5(0(2(1(3(x1)))))
   3(0(1(0(x1)))) -> 3(1(0(0(0(x1)))))
   3(0(1(4(x1)))) -> 3(1(1(0(4(x1)))))
   3(0(3(0(x1)))) -> 3(1(3(0(0(x1)))))
   3(1(0(3(x1)))) -> 3(1(1(3(0(x1)))))
   3(1(2(1(x1)))) -> 1(3(2(1(1(x1)))))
   3(1(2(1(x1)))) -> 3(2(1(1(1(x1)))))
   3(2(0(1(x1)))) -> 1(3(0(2(1(x1)))))
   3(2(0(1(x1)))) -> 3(1(0(2(1(x1)))))
   3(4(1(2(x1)))) -> 3(2(1(1(4(x1)))))
   3(5(1(4(x1)))) -> 3(1(1(5(4(x1)))))
   4(1(0(1(x1)))) -> 4(0(1(1(1(x1)))))
   4(1(2(1(x1)))) -> 2(4(1(1(1(x1)))))
   4(1(4(3(x1)))) -> 4(1(1(3(4(x1)))))
   4(2(4(1(x1)))) -> 4(4(2(1(1(x1)))))
   4(4(1(2(x1)))) -> 4(2(1(1(4(x1)))))
   4(5(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(1(0(3(x1)))) -> 5(0(1(1(3(x1)))))
   5(1(0(3(x1)))) -> 5(1(1(3(0(x1)))))
   5(1(3(1(x1)))) -> 5(3(1(1(1(x1)))))
   5(1(4(3(x1)))) -> 4(1(1(3(5(x1)))))
   5(1(4(4(x1)))) -> 4(1(1(5(4(x1)))))
   5(1(5(3(x1)))) -> 5(5(1(1(3(x1)))))
   5(2(0(1(x1)))) -> 2(0(5(1(1(x1)))))
   5(2(0(5(x1)))) -> 5(0(2(1(5(x1)))))
   5(3(4(1(x1)))) -> 5(4(3(1(1(x1)))))
   5(4(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(4(1(0(x1)))) -> 4(1(1(5(0(x1)))))
   5(4(1(0(x1)))) -> 5(1(1(4(0(x1)))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(37) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   3^1(2(0(1(x1)))) -> 3^1(0(2(1(x1))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(0(x_1)) = 1
   POL(1(x_1)) = 0
   POL(2(x_1)) = 1 + x_1
   POL(3(x_1)) = 1 + x_1
   POL(3^1(x_1)) = x_1
   POL(4(x_1)) = 1
   POL(5(x_1)) = 0

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   2(1(2(3(x1)))) -> 2(1(1(3(2(x1)))))
   2(1(4(1(x1)))) -> 4(2(1(1(1(x1)))))
   0(1(2(x1))) -> 0(2(1(1(x1))))
   0(0(3(2(x1)))) -> 0(0(2(1(3(x1)))))
   0(3(2(x1))) -> 0(2(1(3(x1))))
   0(1(2(3(x1)))) -> 0(2(1(3(1(x1)))))
   0(1(4(2(x1)))) -> 0(0(2(1(4(x1)))))
   0(1(4(2(x1)))) -> 0(4(0(2(1(x1)))))
   0(2(0(3(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(1(x1)))) -> 0(0(1(3(1(x1)))))
   0(3(0(2(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(3(x1)))) -> 0(0(3(1(3(x1)))))
   0(3(2(0(x1)))) -> 0(2(1(3(0(x1)))))
   0(1(0(3(x1)))) -> 0(1(1(3(0(x1)))))
   0(1(0(5(x1)))) -> 0(0(1(1(5(x1)))))
   0(1(2(2(x1)))) -> 0(2(1(1(2(x1)))))
   0(1(2(5(x1)))) -> 2(1(1(0(5(x1)))))
   0(1(4(1(x1)))) -> 0(4(1(1(1(x1)))))
   0(1(4(3(x1)))) -> 4(0(1(1(3(x1)))))
   0(1(4(5(x1)))) -> 0(1(1(5(4(x1)))))
   0(1(5(2(x1)))) -> 0(2(5(1(1(x1)))))
   0(3(5(1(x1)))) -> 0(5(3(1(1(x1)))))
   0(4(0(1(x1)))) -> 0(0(4(1(1(x1)))))
   0(5(2(0(x1)))) -> 2(1(5(0(0(x1)))))


----------------------------------------

(38)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   0(1(2(x1))) -> 0(2(1(1(x1))))
   0(3(2(x1))) -> 0(2(1(3(x1))))
   2(4(1(x1))) -> 4(2(1(1(x1))))
   0(0(3(2(x1)))) -> 0(0(2(1(3(x1)))))
   0(1(0(3(x1)))) -> 0(1(1(3(0(x1)))))
   0(1(0(5(x1)))) -> 0(0(1(1(5(x1)))))
   0(1(2(2(x1)))) -> 0(2(1(1(2(x1)))))
   0(1(2(3(x1)))) -> 0(2(1(3(1(x1)))))
   0(1(2(5(x1)))) -> 2(1(1(0(5(x1)))))
   0(1(4(1(x1)))) -> 0(4(1(1(1(x1)))))
   0(1(4(2(x1)))) -> 0(0(2(1(4(x1)))))
   0(1(4(2(x1)))) -> 0(4(0(2(1(x1)))))
   0(1(4(3(x1)))) -> 4(0(1(1(3(x1)))))
   0(1(4(5(x1)))) -> 0(1(1(5(4(x1)))))
   0(1(5(2(x1)))) -> 0(2(5(1(1(x1)))))
   0(2(0(3(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(1(x1)))) -> 0(0(1(3(1(x1)))))
   0(3(0(2(x1)))) -> 0(0(2(3(1(x1)))))
   0(3(0(3(x1)))) -> 0(0(3(1(3(x1)))))
   0(3(2(0(x1)))) -> 0(2(1(3(0(x1)))))
   0(3(5(1(x1)))) -> 0(5(3(1(1(x1)))))
   0(4(0(1(x1)))) -> 0(0(4(1(1(x1)))))
   0(5(2(0(x1)))) -> 2(1(5(0(0(x1)))))
   2(1(2(3(x1)))) -> 2(1(1(3(2(x1)))))
   2(1(4(1(x1)))) -> 4(2(1(1(1(x1)))))
   2(2(0(3(x1)))) -> 2(0(2(1(3(x1)))))
   2(2(4(1(x1)))) -> 2(4(2(1(1(x1)))))
   2(3(1(4(x1)))) -> 2(1(1(3(4(x1)))))
   2(4(1(4(x1)))) -> 4(4(2(1(1(x1)))))
   2(4(3(1(x1)))) -> 4(2(3(1(1(x1)))))
   2(5(0(1(x1)))) -> 0(2(5(1(1(x1)))))
   2(5(0(3(x1)))) -> 5(0(2(1(3(x1)))))
   3(0(1(0(x1)))) -> 3(1(0(0(0(x1)))))
   3(0(1(4(x1)))) -> 3(1(1(0(4(x1)))))
   3(0(3(0(x1)))) -> 3(1(3(0(0(x1)))))
   3(1(0(3(x1)))) -> 3(1(1(3(0(x1)))))
   3(1(2(1(x1)))) -> 1(3(2(1(1(x1)))))
   3(1(2(1(x1)))) -> 3(2(1(1(1(x1)))))
   3(2(0(1(x1)))) -> 1(3(0(2(1(x1)))))
   3(2(0(1(x1)))) -> 3(1(0(2(1(x1)))))
   3(4(1(2(x1)))) -> 3(2(1(1(4(x1)))))
   3(5(1(4(x1)))) -> 3(1(1(5(4(x1)))))
   4(1(0(1(x1)))) -> 4(0(1(1(1(x1)))))
   4(1(2(1(x1)))) -> 2(4(1(1(1(x1)))))
   4(1(4(3(x1)))) -> 4(1(1(3(4(x1)))))
   4(2(4(1(x1)))) -> 4(4(2(1(1(x1)))))
   4(4(1(2(x1)))) -> 4(2(1(1(4(x1)))))
   4(5(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(1(0(3(x1)))) -> 5(0(1(1(3(x1)))))
   5(1(0(3(x1)))) -> 5(1(1(3(0(x1)))))
   5(1(3(1(x1)))) -> 5(3(1(1(1(x1)))))
   5(1(4(3(x1)))) -> 4(1(1(3(5(x1)))))
   5(1(4(4(x1)))) -> 4(1(1(5(4(x1)))))
   5(1(5(3(x1)))) -> 5(5(1(1(3(x1)))))
   5(2(0(1(x1)))) -> 2(0(5(1(1(x1)))))
   5(2(0(5(x1)))) -> 5(0(2(1(5(x1)))))
   5(3(4(1(x1)))) -> 5(4(3(1(1(x1)))))
   5(4(0(1(x1)))) -> 5(0(4(1(1(x1)))))
   5(4(1(0(x1)))) -> 4(1(1(5(0(x1)))))
   5(4(1(0(x1)))) -> 5(1(1(4(0(x1)))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(39) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(40)
YES
