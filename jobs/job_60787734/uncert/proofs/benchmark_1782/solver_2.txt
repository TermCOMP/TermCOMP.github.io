YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/piGCW.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 9 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) AND
    (5) QDP
        (6) UsableRulesProof [EQUIVALENT, 0 ms]
        (7) QDP
        (8) MNOCProof [EQUIVALENT, 0 ms]
        (9) QDP
        (10) QDPOrderProof [EQUIVALENT, 7 ms]
        (11) QDP
        (12) QDPOrderProof [EQUIVALENT, 4 ms]
        (13) QDP
        (14) PisEmptyProof [EQUIVALENT, 0 ms]
        (15) YES
    (16) QDP
        (17) UsableRulesProof [EQUIVALENT, 0 ms]
        (18) QDP
        (19) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (20) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(b(x1)) -> b(c(a(x1)))
   b(c(x1)) -> c(b(b(x1)))
   b(a(x1)) -> a(c(b(x1)))

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(b(x1)) -> B(c(a(x1)))
   A(b(x1)) -> A(x1)
   B(c(x1)) -> B(b(x1))
   B(c(x1)) -> B(x1)
   B(a(x1)) -> A(c(b(x1)))
   B(a(x1)) -> B(x1)

The TRS R consists of the following rules:

   a(b(x1)) -> b(c(a(x1)))
   b(c(x1)) -> c(b(b(x1)))
   b(a(x1)) -> a(c(b(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 2 less nodes.
----------------------------------------

(4)
Complex Obligation (AND)

----------------------------------------

(5)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(c(x1)) -> B(x1)
   B(c(x1)) -> B(b(x1))
   B(a(x1)) -> B(x1)

The TRS R consists of the following rules:

   a(b(x1)) -> b(c(a(x1)))
   b(c(x1)) -> c(b(b(x1)))
   b(a(x1)) -> a(c(b(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(6) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(c(x1)) -> B(x1)
   B(c(x1)) -> B(b(x1))
   B(a(x1)) -> B(x1)

The TRS R consists of the following rules:

   b(c(x1)) -> c(b(b(x1)))
   b(a(x1)) -> a(c(b(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) MNOCProof (EQUIVALENT)
We use the modular non-overlap check [LPAR04] to enlarge Q to all left-hand sides of R.
----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(c(x1)) -> B(x1)
   B(c(x1)) -> B(b(x1))
   B(a(x1)) -> B(x1)

The TRS R consists of the following rules:

   b(c(x1)) -> c(b(b(x1)))
   b(a(x1)) -> a(c(b(x1)))

The set Q consists of the following terms:

   b(c(x0))
   b(a(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   B(a(x1)) -> B(x1)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(B(x_1)) = 4*x_1
   POL(a(x_1)) = 1 + 4*x_1
   POL(b(x_1)) = x_1
   POL(c(x_1)) = x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   b(c(x1)) -> c(b(b(x1)))
   b(a(x1)) -> a(c(b(x1)))


----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(c(x1)) -> B(x1)
   B(c(x1)) -> B(b(x1))

The TRS R consists of the following rules:

   b(c(x1)) -> c(b(b(x1)))
   b(a(x1)) -> a(c(b(x1)))

The set Q consists of the following terms:

   b(c(x0))
   b(a(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   B(c(x1)) -> B(x1)
   B(c(x1)) -> B(b(x1))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( B_1(x_1) ) = x_1 + 1
POL( b_1(x_1) ) = x_1
POL( c_1(x_1) ) = 2x_1 + 1
POL( a_1(x_1) ) = 2

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   b(c(x1)) -> c(b(b(x1)))
   b(a(x1)) -> a(c(b(x1)))


----------------------------------------

(13)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   b(c(x1)) -> c(b(b(x1)))
   b(a(x1)) -> a(c(b(x1)))

The set Q consists of the following terms:

   b(c(x0))
   b(a(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(14) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(15)
YES

----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(b(x1)) -> A(x1)

The TRS R consists of the following rules:

   a(b(x1)) -> b(c(a(x1)))
   b(c(x1)) -> c(b(b(x1)))
   b(a(x1)) -> a(c(b(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(b(x1)) -> A(x1)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*A(b(x1)) -> A(x1)
The graph contains the following edges 1 > 1


----------------------------------------

(20)
YES
