YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/BStTx.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 65 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 218 ms]
(4) QDP
(5) QDPOrderProof [EQUIVALENT, 615 ms]
(6) QDP
(7) DependencyGraphProof [EQUIVALENT, 0 ms]
(8) AND
    (9) QDP
        (10) QDPOrderProof [EQUIVALENT, 39 ms]
        (11) QDP
        (12) QDPOrderProof [EQUIVALENT, 27 ms]
        (13) QDP
        (14) PisEmptyProof [EQUIVALENT, 0 ms]
        (15) YES
    (16) QDP
        (17) QDPOrderProof [EQUIVALENT, 1484 ms]
        (18) QDP
        (19) PisEmptyProof [EQUIVALENT, 0 ms]
        (20) YES
    (21) QDP
        (22) QDPOrderProof [EQUIVALENT, 39 ms]
        (23) QDP
        (24) QDPOrderProof [EQUIVALENT, 30 ms]
        (25) QDP
        (26) QDPOrderProof [EQUIVALENT, 1390 ms]
        (27) QDP
        (28) QDPOrderProof [EQUIVALENT, 1749 ms]
        (29) QDP
        (30) PisEmptyProof [EQUIVALENT, 0 ms]
        (31) YES
    (32) QDP
        (33) QDPOrderProof [EQUIVALENT, 57 ms]
        (34) QDP
        (35) QDPOrderProof [EQUIVALENT, 43 ms]
        (36) QDP
        (37) QDPOrderProof [EQUIVALENT, 31 ms]
        (38) QDP
        (39) DependencyGraphProof [EQUIVALENT, 0 ms]
        (40) QDP
        (41) QDPOrderProof [EQUIVALENT, 18 ms]
        (42) QDP
        (43) QDPOrderProof [EQUIVALENT, 23 ms]
        (44) QDP
        (45) PisEmptyProof [EQUIVALENT, 0 ms]
        (46) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   0(0(1(1(x1)))) -> 2(2(1(3(x1))))
   1(4(0(4(x1)))) -> 1(2(3(1(x1))))
   3(4(3(1(1(x1))))) -> 3(4(0(3(1(x1)))))
   1(3(1(1(0(4(x1)))))) -> 1(3(0(2(0(4(x1))))))
   2(4(4(5(4(4(3(x1))))))) -> 2(4(2(3(4(2(2(x1)))))))
   5(5(4(2(0(2(3(x1))))))) -> 5(2(4(1(2(3(3(x1)))))))
   0(4(5(2(1(2(0(1(x1)))))))) -> 0(1(5(4(2(5(0(0(x1))))))))
   4(4(1(4(0(0(1(3(x1)))))))) -> 4(1(2(3(4(2(5(3(x1))))))))
   4(3(0(2(5(3(1(2(3(x1))))))))) -> 4(1(1(0(0(0(5(3(x1))))))))
   4(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 1(4(3(3(4(3(3(1(0(0(x1))))))))))
   4(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0(1(0(2(5(0(5(3(5(4(x1))))))))))
   3(0(4(4(4(5(3(1(2(5(0(4(x1)))))))))))) -> 5(3(3(0(3(5(1(0(0(1(0(x1)))))))))))
   4(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 4(1(1(4(3(2(2(3(5(2(1(3(x1))))))))))))
   5(4(2(3(0(4(3(2(2(2(4(1(x1)))))))))))) -> 5(1(0(2(4(4(4(5(1(4(1(x1)))))))))))
   3(0(0(2(1(1(3(1(5(0(5(1(0(5(x1)))))))))))))) -> 5(1(0(1(2(2(1(3(3(1(0(2(5(x1)))))))))))))
   0(4(2(4(1(1(5(3(0(2(2(0(5(1(5(x1))))))))))))))) -> 1(1(0(0(3(5(5(1(1(2(5(3(5(5(x1))))))))))))))
   0(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   2(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3(2(2(3(4(1(2(1(0(3(1(2(3(2(1(1(x1))))))))))))))))
   0(0(0(2(0(3(0(5(1(0(5(0(5(1(0(4(3(x1))))))))))))))))) -> 0(0(1(4(5(0(0(2(0(0(1(1(3(2(5(3(x1))))))))))))))))
   1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1(1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))))
   2(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4(1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))))
   1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))
   2(4(2(1(5(5(0(1(0(4(2(2(2(3(4(1(0(4(x1)))))))))))))))))) -> 2(1(3(2(1(2(2(5(1(1(3(5(4(4(5(5(5(x1)))))))))))))))))
   5(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 5(1(2(2(3(1(5(2(5(1(1(3(4(2(4(0(5(5(x1))))))))))))))))))
   0(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2(4(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))))

Q is empty.

----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(0(x_1)) = 1 + x_1
   POL(1(x_1)) = 1 + x_1
   POL(2(x_1)) = 1 + x_1
   POL(3(x_1)) = 1 + x_1
   POL(4(x_1)) = 1 + x_1
   POL(5(x_1)) = 1 + x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   4(3(0(2(5(3(1(2(3(x1))))))))) -> 4(1(1(0(0(0(5(3(x1))))))))
   3(0(4(4(4(5(3(1(2(5(0(4(x1)))))))))))) -> 5(3(3(0(3(5(1(0(0(1(0(x1)))))))))))
   5(4(2(3(0(4(3(2(2(2(4(1(x1)))))))))))) -> 5(1(0(2(4(4(4(5(1(4(1(x1)))))))))))
   3(0(0(2(1(1(3(1(5(0(5(1(0(5(x1)))))))))))))) -> 5(1(0(1(2(2(1(3(3(1(0(2(5(x1)))))))))))))
   0(4(2(4(1(1(5(3(0(2(2(0(5(1(5(x1))))))))))))))) -> 1(1(0(0(3(5(5(1(1(2(5(3(5(5(x1))))))))))))))
   0(0(0(2(0(3(0(5(1(0(5(0(5(1(0(4(3(x1))))))))))))))))) -> 0(0(1(4(5(0(0(2(0(0(1(1(3(2(5(3(x1))))))))))))))))
   2(4(2(1(5(5(0(1(0(4(2(2(2(3(4(1(0(4(x1)))))))))))))))))) -> 2(1(3(2(1(2(2(5(1(1(3(5(4(4(5(5(5(x1)))))))))))))))))




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   0(0(1(1(x1)))) -> 2(2(1(3(x1))))
   1(4(0(4(x1)))) -> 1(2(3(1(x1))))
   3(4(3(1(1(x1))))) -> 3(4(0(3(1(x1)))))
   1(3(1(1(0(4(x1)))))) -> 1(3(0(2(0(4(x1))))))
   2(4(4(5(4(4(3(x1))))))) -> 2(4(2(3(4(2(2(x1)))))))
   5(5(4(2(0(2(3(x1))))))) -> 5(2(4(1(2(3(3(x1)))))))
   0(4(5(2(1(2(0(1(x1)))))))) -> 0(1(5(4(2(5(0(0(x1))))))))
   4(4(1(4(0(0(1(3(x1)))))))) -> 4(1(2(3(4(2(5(3(x1))))))))
   4(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 1(4(3(3(4(3(3(1(0(0(x1))))))))))
   4(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0(1(0(2(5(0(5(3(5(4(x1))))))))))
   4(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 4(1(1(4(3(2(2(3(5(2(1(3(x1))))))))))))
   0(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   2(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3(2(2(3(4(1(2(1(0(3(1(2(3(2(1(1(x1))))))))))))))))
   1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1(1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))))
   2(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4(1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))))
   1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))
   5(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 5(1(2(2(3(1(5(2(5(1(1(3(4(2(4(0(5(5(x1))))))))))))))))))
   0(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2(4(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))))

Q is empty.

----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   0^1(0(1(1(x1)))) -> 2^1(2(1(3(x1))))
   0^1(0(1(1(x1)))) -> 2^1(1(3(x1)))
   0^1(0(1(1(x1)))) -> 1^1(3(x1))
   0^1(0(1(1(x1)))) -> 3^1(x1)
   1^1(4(0(4(x1)))) -> 1^1(2(3(1(x1))))
   1^1(4(0(4(x1)))) -> 2^1(3(1(x1)))
   1^1(4(0(4(x1)))) -> 3^1(1(x1))
   1^1(4(0(4(x1)))) -> 1^1(x1)
   3^1(4(3(1(1(x1))))) -> 3^1(4(0(3(1(x1)))))
   3^1(4(3(1(1(x1))))) -> 4^1(0(3(1(x1))))
   3^1(4(3(1(1(x1))))) -> 0^1(3(1(x1)))
   3^1(4(3(1(1(x1))))) -> 3^1(1(x1))
   1^1(3(1(1(0(4(x1)))))) -> 1^1(3(0(2(0(4(x1))))))
   1^1(3(1(1(0(4(x1)))))) -> 3^1(0(2(0(4(x1)))))
   1^1(3(1(1(0(4(x1)))))) -> 0^1(2(0(4(x1))))
   1^1(3(1(1(0(4(x1)))))) -> 2^1(0(4(x1)))
   2^1(4(4(5(4(4(3(x1))))))) -> 2^1(4(2(3(4(2(2(x1)))))))
   2^1(4(4(5(4(4(3(x1))))))) -> 4^1(2(3(4(2(2(x1))))))
   2^1(4(4(5(4(4(3(x1))))))) -> 2^1(3(4(2(2(x1)))))
   2^1(4(4(5(4(4(3(x1))))))) -> 3^1(4(2(2(x1))))
   2^1(4(4(5(4(4(3(x1))))))) -> 4^1(2(2(x1)))
   2^1(4(4(5(4(4(3(x1))))))) -> 2^1(2(x1))
   2^1(4(4(5(4(4(3(x1))))))) -> 2^1(x1)
   5^1(5(4(2(0(2(3(x1))))))) -> 5^1(2(4(1(2(3(3(x1)))))))
   5^1(5(4(2(0(2(3(x1))))))) -> 2^1(4(1(2(3(3(x1))))))
   5^1(5(4(2(0(2(3(x1))))))) -> 4^1(1(2(3(3(x1)))))
   5^1(5(4(2(0(2(3(x1))))))) -> 1^1(2(3(3(x1))))
   5^1(5(4(2(0(2(3(x1))))))) -> 2^1(3(3(x1)))
   5^1(5(4(2(0(2(3(x1))))))) -> 3^1(3(x1))
   0^1(4(5(2(1(2(0(1(x1)))))))) -> 0^1(1(5(4(2(5(0(0(x1))))))))
   0^1(4(5(2(1(2(0(1(x1)))))))) -> 1^1(5(4(2(5(0(0(x1)))))))
   0^1(4(5(2(1(2(0(1(x1)))))))) -> 5^1(4(2(5(0(0(x1))))))
   0^1(4(5(2(1(2(0(1(x1)))))))) -> 4^1(2(5(0(0(x1)))))
   0^1(4(5(2(1(2(0(1(x1)))))))) -> 2^1(5(0(0(x1))))
   0^1(4(5(2(1(2(0(1(x1)))))))) -> 5^1(0(0(x1)))
   0^1(4(5(2(1(2(0(1(x1)))))))) -> 0^1(0(x1))
   0^1(4(5(2(1(2(0(1(x1)))))))) -> 0^1(x1)
   4^1(4(1(4(0(0(1(3(x1)))))))) -> 4^1(1(2(3(4(2(5(3(x1))))))))
   4^1(4(1(4(0(0(1(3(x1)))))))) -> 1^1(2(3(4(2(5(3(x1)))))))
   4^1(4(1(4(0(0(1(3(x1)))))))) -> 2^1(3(4(2(5(3(x1))))))
   4^1(4(1(4(0(0(1(3(x1)))))))) -> 3^1(4(2(5(3(x1)))))
   4^1(4(1(4(0(0(1(3(x1)))))))) -> 4^1(2(5(3(x1))))
   4^1(4(1(4(0(0(1(3(x1)))))))) -> 2^1(5(3(x1)))
   4^1(4(1(4(0(0(1(3(x1)))))))) -> 5^1(3(x1))
   4^1(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 1^1(4(3(3(4(3(3(1(0(0(x1))))))))))
   4^1(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 4^1(3(3(4(3(3(1(0(0(x1)))))))))
   4^1(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 3^1(3(4(3(3(1(0(0(x1))))))))
   4^1(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 3^1(4(3(3(1(0(0(x1)))))))
   4^1(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 4^1(3(3(1(0(0(x1))))))
   4^1(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 3^1(3(1(0(0(x1)))))
   4^1(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 3^1(1(0(0(x1))))
   4^1(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 1^1(0(0(x1)))
   4^1(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0^1(1(0(2(5(0(5(3(5(4(x1))))))))))
   4^1(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 1^1(0(2(5(0(5(3(5(4(x1)))))))))
   4^1(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0^1(2(5(0(5(3(5(4(x1))))))))
   4^1(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 2^1(5(0(5(3(5(4(x1)))))))
   4^1(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 5^1(0(5(3(5(4(x1))))))
   4^1(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0^1(5(3(5(4(x1)))))
   4^1(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 5^1(3(5(4(x1))))
   4^1(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 3^1(5(4(x1)))
   4^1(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 5^1(4(x1))
   4^1(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 4^1(x1)
   4^1(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 4^1(1(1(4(3(2(2(3(5(2(1(3(x1))))))))))))
   4^1(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 1^1(1(4(3(2(2(3(5(2(1(3(x1)))))))))))
   4^1(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 1^1(4(3(2(2(3(5(2(1(3(x1))))))))))
   4^1(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 4^1(3(2(2(3(5(2(1(3(x1)))))))))
   4^1(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 3^1(2(2(3(5(2(1(3(x1))))))))
   4^1(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 2^1(2(3(5(2(1(3(x1)))))))
   4^1(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 2^1(3(5(2(1(3(x1))))))
   4^1(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 3^1(5(2(1(3(x1)))))
   4^1(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 5^1(2(1(3(x1))))
   4^1(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 2^1(1(3(x1)))
   4^1(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 1^1(3(x1))
   4^1(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 3^1(x1)
   0^1(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0^1(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   0^1(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 4^1(0(0(3(4(3(3(5(0(4(3(3(1(3(x1))))))))))))))
   0^1(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0^1(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))
   0^1(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0^1(3(4(3(3(5(0(4(3(3(1(3(x1))))))))))))
   0^1(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 3^1(4(3(3(5(0(4(3(3(1(3(x1)))))))))))
   0^1(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 4^1(3(3(5(0(4(3(3(1(3(x1))))))))))
   0^1(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 3^1(3(5(0(4(3(3(1(3(x1)))))))))
   0^1(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 3^1(5(0(4(3(3(1(3(x1))))))))
   0^1(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 5^1(0(4(3(3(1(3(x1)))))))
   0^1(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0^1(4(3(3(1(3(x1))))))
   0^1(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 4^1(3(3(1(3(x1)))))
   0^1(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 3^1(3(1(3(x1))))
   0^1(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 3^1(1(3(x1)))
   0^1(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 1^1(3(x1))
   2^1(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3^1(2(2(3(4(1(2(1(0(3(1(2(3(2(1(1(x1))))))))))))))))
   2^1(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 2^1(2(3(4(1(2(1(0(3(1(2(3(2(1(1(x1)))))))))))))))
   2^1(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 2^1(3(4(1(2(1(0(3(1(2(3(2(1(1(x1))))))))))))))
   2^1(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3^1(4(1(2(1(0(3(1(2(3(2(1(1(x1)))))))))))))
   2^1(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 4^1(1(2(1(0(3(1(2(3(2(1(1(x1))))))))))))
   2^1(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 1^1(2(1(0(3(1(2(3(2(1(1(x1)))))))))))
   2^1(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 2^1(1(0(3(1(2(3(2(1(1(x1))))))))))
   2^1(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 1^1(0(3(1(2(3(2(1(1(x1)))))))))
   2^1(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 0^1(3(1(2(3(2(1(1(x1))))))))
   2^1(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3^1(1(2(3(2(1(1(x1)))))))
   2^1(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 1^1(2(3(2(1(1(x1))))))
   2^1(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 2^1(3(2(1(1(x1)))))
   2^1(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3^1(2(1(1(x1))))
   2^1(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 2^1(1(1(x1)))
   2^1(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 1^1(1(x1))
   1^1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1^1(1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))))
   1^1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1^1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1))))))))))))))))
   1^1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 0^1(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))
   1^1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 0^1(3(4(4(4(4(4(2(3(3(1(0(4(3(x1))))))))))))))
   1^1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 3^1(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))
   1^1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 4^1(4(4(4(4(2(3(3(1(0(4(3(x1))))))))))))
   1^1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 4^1(4(4(4(2(3(3(1(0(4(3(x1)))))))))))
   1^1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 4^1(4(4(2(3(3(1(0(4(3(x1))))))))))
   1^1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 4^1(4(2(3(3(1(0(4(3(x1)))))))))
   1^1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 4^1(2(3(3(1(0(4(3(x1))))))))
   1^1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 2^1(3(3(1(0(4(3(x1)))))))
   1^1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 3^1(3(1(0(4(3(x1))))))
   1^1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 3^1(1(0(4(3(x1)))))
   1^1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1^1(0(4(3(x1))))
   1^1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 0^1(4(3(x1)))
   1^1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 4^1(3(x1))
   2^1(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4^1(1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))))
   2^1(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 1^1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1))))))))))))))))
   2^1(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 1^1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))
   2^1(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 2^1(3(3(1(1(4(5(3(1(3(2(4(0(2(x1))))))))))))))
   2^1(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 3^1(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))
   2^1(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 3^1(1(1(4(5(3(1(3(2(4(0(2(x1))))))))))))
   2^1(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 1^1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))
   2^1(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 1^1(4(5(3(1(3(2(4(0(2(x1))))))))))
   2^1(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4^1(5(3(1(3(2(4(0(2(x1)))))))))
   2^1(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 5^1(3(1(3(2(4(0(2(x1))))))))
   2^1(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 3^1(1(3(2(4(0(2(x1)))))))
   2^1(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 1^1(3(2(4(0(2(x1))))))
   2^1(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 3^1(2(4(0(2(x1)))))
   2^1(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 2^1(4(0(2(x1))))
   2^1(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4^1(0(2(x1)))
   2^1(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 0^1(2(x1))
   2^1(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 2^1(x1)
   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1^1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))
   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 0^1(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1)))))))))))))))))
   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 5^1(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))
   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1^1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1)))))))))))))))
   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 0^1(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))
   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 2^1(0(0(4(0(2(5(0(2(5(2(2(2(x1)))))))))))))
   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 0^1(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))
   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 0^1(4(0(2(5(0(2(5(2(2(2(x1)))))))))))
   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 4^1(0(2(5(0(2(5(2(2(2(x1))))))))))
   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 0^1(2(5(0(2(5(2(2(2(x1)))))))))
   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 2^1(5(0(2(5(2(2(2(x1))))))))
   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 5^1(0(2(5(2(2(2(x1)))))))
   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 0^1(2(5(2(2(2(x1))))))
   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 2^1(5(2(2(2(x1)))))
   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 5^1(2(2(2(x1))))
   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 2^1(2(2(x1)))
   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 2^1(2(x1))
   5^1(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 5^1(1(2(2(3(1(5(2(5(1(1(3(4(2(4(0(5(5(x1))))))))))))))))))
   5^1(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 1^1(2(2(3(1(5(2(5(1(1(3(4(2(4(0(5(5(x1)))))))))))))))))
   5^1(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 2^1(2(3(1(5(2(5(1(1(3(4(2(4(0(5(5(x1))))))))))))))))
   5^1(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 2^1(3(1(5(2(5(1(1(3(4(2(4(0(5(5(x1)))))))))))))))
   5^1(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 3^1(1(5(2(5(1(1(3(4(2(4(0(5(5(x1))))))))))))))
   5^1(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 1^1(5(2(5(1(1(3(4(2(4(0(5(5(x1)))))))))))))
   5^1(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 5^1(2(5(1(1(3(4(2(4(0(5(5(x1))))))))))))
   5^1(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 2^1(5(1(1(3(4(2(4(0(5(5(x1)))))))))))
   5^1(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 5^1(1(1(3(4(2(4(0(5(5(x1))))))))))
   5^1(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 1^1(1(3(4(2(4(0(5(5(x1)))))))))
   5^1(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 1^1(3(4(2(4(0(5(5(x1))))))))
   5^1(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 3^1(4(2(4(0(5(5(x1)))))))
   5^1(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 4^1(2(4(0(5(5(x1))))))
   5^1(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 2^1(4(0(5(5(x1)))))
   5^1(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 4^1(0(5(5(x1))))
   5^1(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 0^1(5(5(x1)))
   5^1(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 5^1(5(x1))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2^1(4(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 4^1(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1))))))))))))))))))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 0^1(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 1^1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1))))))))))))))))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 5^1(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 0^1(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1))))))))))))))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 1^1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2^1(3(0(4(1(4(1(5(3(4(1(5(0(2(x1))))))))))))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 3^1(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 0^1(4(1(4(1(5(3(4(1(5(0(2(x1))))))))))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 4^1(1(4(1(5(3(4(1(5(0(2(x1)))))))))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 1^1(4(1(5(3(4(1(5(0(2(x1))))))))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 4^1(1(5(3(4(1(5(0(2(x1)))))))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 1^1(5(3(4(1(5(0(2(x1))))))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 5^1(3(4(1(5(0(2(x1)))))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 3^1(4(1(5(0(2(x1))))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 4^1(1(5(0(2(x1)))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 1^1(5(0(2(x1))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 5^1(0(2(x1)))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 0^1(2(x1))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2^1(x1)

The TRS R consists of the following rules:

   0(0(1(1(x1)))) -> 2(2(1(3(x1))))
   1(4(0(4(x1)))) -> 1(2(3(1(x1))))
   3(4(3(1(1(x1))))) -> 3(4(0(3(1(x1)))))
   1(3(1(1(0(4(x1)))))) -> 1(3(0(2(0(4(x1))))))
   2(4(4(5(4(4(3(x1))))))) -> 2(4(2(3(4(2(2(x1)))))))
   5(5(4(2(0(2(3(x1))))))) -> 5(2(4(1(2(3(3(x1)))))))
   0(4(5(2(1(2(0(1(x1)))))))) -> 0(1(5(4(2(5(0(0(x1))))))))
   4(4(1(4(0(0(1(3(x1)))))))) -> 4(1(2(3(4(2(5(3(x1))))))))
   4(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 1(4(3(3(4(3(3(1(0(0(x1))))))))))
   4(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0(1(0(2(5(0(5(3(5(4(x1))))))))))
   4(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 4(1(1(4(3(2(2(3(5(2(1(3(x1))))))))))))
   0(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   2(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3(2(2(3(4(1(2(1(0(3(1(2(3(2(1(1(x1))))))))))))))))
   1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1(1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))))
   2(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4(1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))))
   1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))
   5(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 5(1(2(2(3(1(5(2(5(1(1(3(4(2(4(0(5(5(x1))))))))))))))))))
   0(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2(4(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   0^1(0(1(1(x1)))) -> 2^1(1(3(x1)))
   0^1(0(1(1(x1)))) -> 1^1(3(x1))
   0^1(0(1(1(x1)))) -> 3^1(x1)
   1^1(4(0(4(x1)))) -> 2^1(3(1(x1)))
   1^1(4(0(4(x1)))) -> 3^1(1(x1))
   1^1(4(0(4(x1)))) -> 1^1(x1)
   3^1(4(3(1(1(x1))))) -> 4^1(0(3(1(x1))))
   3^1(4(3(1(1(x1))))) -> 0^1(3(1(x1)))
   3^1(4(3(1(1(x1))))) -> 3^1(1(x1))
   1^1(3(1(1(0(4(x1)))))) -> 3^1(0(2(0(4(x1)))))
   1^1(3(1(1(0(4(x1)))))) -> 0^1(2(0(4(x1))))
   1^1(3(1(1(0(4(x1)))))) -> 2^1(0(4(x1)))
   2^1(4(4(5(4(4(3(x1))))))) -> 4^1(2(3(4(2(2(x1))))))
   2^1(4(4(5(4(4(3(x1))))))) -> 2^1(3(4(2(2(x1)))))
   2^1(4(4(5(4(4(3(x1))))))) -> 3^1(4(2(2(x1))))
   2^1(4(4(5(4(4(3(x1))))))) -> 4^1(2(2(x1)))
   2^1(4(4(5(4(4(3(x1))))))) -> 2^1(2(x1))
   2^1(4(4(5(4(4(3(x1))))))) -> 2^1(x1)
   5^1(5(4(2(0(2(3(x1))))))) -> 2^1(4(1(2(3(3(x1))))))
   5^1(5(4(2(0(2(3(x1))))))) -> 4^1(1(2(3(3(x1)))))
   5^1(5(4(2(0(2(3(x1))))))) -> 1^1(2(3(3(x1))))
   5^1(5(4(2(0(2(3(x1))))))) -> 2^1(3(3(x1)))
   5^1(5(4(2(0(2(3(x1))))))) -> 3^1(3(x1))
   0^1(4(5(2(1(2(0(1(x1)))))))) -> 1^1(5(4(2(5(0(0(x1)))))))
   0^1(4(5(2(1(2(0(1(x1)))))))) -> 5^1(4(2(5(0(0(x1))))))
   0^1(4(5(2(1(2(0(1(x1)))))))) -> 4^1(2(5(0(0(x1)))))
   0^1(4(5(2(1(2(0(1(x1)))))))) -> 2^1(5(0(0(x1))))
   0^1(4(5(2(1(2(0(1(x1)))))))) -> 5^1(0(0(x1)))
   0^1(4(5(2(1(2(0(1(x1)))))))) -> 0^1(0(x1))
   0^1(4(5(2(1(2(0(1(x1)))))))) -> 0^1(x1)
   4^1(4(1(4(0(0(1(3(x1)))))))) -> 1^1(2(3(4(2(5(3(x1)))))))
   4^1(4(1(4(0(0(1(3(x1)))))))) -> 2^1(3(4(2(5(3(x1))))))
   4^1(4(1(4(0(0(1(3(x1)))))))) -> 3^1(4(2(5(3(x1)))))
   4^1(4(1(4(0(0(1(3(x1)))))))) -> 4^1(2(5(3(x1))))
   4^1(4(1(4(0(0(1(3(x1)))))))) -> 2^1(5(3(x1)))
   4^1(4(1(4(0(0(1(3(x1)))))))) -> 5^1(3(x1))
   4^1(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 4^1(3(3(4(3(3(1(0(0(x1)))))))))
   4^1(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 3^1(3(4(3(3(1(0(0(x1))))))))
   4^1(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 3^1(4(3(3(1(0(0(x1)))))))
   4^1(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 4^1(3(3(1(0(0(x1))))))
   4^1(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 3^1(3(1(0(0(x1)))))
   4^1(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 3^1(1(0(0(x1))))
   4^1(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 1^1(0(0(x1)))
   4^1(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 1^1(0(2(5(0(5(3(5(4(x1)))))))))
   4^1(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0^1(2(5(0(5(3(5(4(x1))))))))
   4^1(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 2^1(5(0(5(3(5(4(x1)))))))
   4^1(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 5^1(0(5(3(5(4(x1))))))
   4^1(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0^1(5(3(5(4(x1)))))
   4^1(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 5^1(3(5(4(x1))))
   4^1(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 3^1(5(4(x1)))
   4^1(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 5^1(4(x1))
   4^1(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 4^1(x1)
   4^1(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 1^1(1(4(3(2(2(3(5(2(1(3(x1)))))))))))
   4^1(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 1^1(4(3(2(2(3(5(2(1(3(x1))))))))))
   4^1(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 4^1(3(2(2(3(5(2(1(3(x1)))))))))
   4^1(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 3^1(2(2(3(5(2(1(3(x1))))))))
   4^1(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 2^1(2(3(5(2(1(3(x1)))))))
   4^1(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 2^1(3(5(2(1(3(x1))))))
   4^1(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 3^1(5(2(1(3(x1)))))
   4^1(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 5^1(2(1(3(x1))))
   4^1(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 2^1(1(3(x1)))
   4^1(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 1^1(3(x1))
   4^1(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 3^1(x1)
   0^1(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 4^1(0(0(3(4(3(3(5(0(4(3(3(1(3(x1))))))))))))))
   0^1(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0^1(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))
   0^1(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0^1(3(4(3(3(5(0(4(3(3(1(3(x1))))))))))))
   0^1(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 3^1(4(3(3(5(0(4(3(3(1(3(x1)))))))))))
   0^1(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 4^1(3(3(5(0(4(3(3(1(3(x1))))))))))
   0^1(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 3^1(3(5(0(4(3(3(1(3(x1)))))))))
   0^1(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 3^1(5(0(4(3(3(1(3(x1))))))))
   0^1(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 5^1(0(4(3(3(1(3(x1)))))))
   0^1(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0^1(4(3(3(1(3(x1))))))
   0^1(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 4^1(3(3(1(3(x1)))))
   0^1(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 3^1(3(1(3(x1))))
   0^1(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 3^1(1(3(x1)))
   0^1(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 1^1(3(x1))
   2^1(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 2^1(2(3(4(1(2(1(0(3(1(2(3(2(1(1(x1)))))))))))))))
   2^1(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 2^1(3(4(1(2(1(0(3(1(2(3(2(1(1(x1))))))))))))))
   2^1(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3^1(4(1(2(1(0(3(1(2(3(2(1(1(x1)))))))))))))
   2^1(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 4^1(1(2(1(0(3(1(2(3(2(1(1(x1))))))))))))
   2^1(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 1^1(2(1(0(3(1(2(3(2(1(1(x1)))))))))))
   2^1(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 2^1(1(0(3(1(2(3(2(1(1(x1))))))))))
   2^1(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 1^1(0(3(1(2(3(2(1(1(x1)))))))))
   2^1(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 0^1(3(1(2(3(2(1(1(x1))))))))
   2^1(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3^1(1(2(3(2(1(1(x1)))))))
   2^1(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 1^1(2(3(2(1(1(x1))))))
   2^1(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 2^1(3(2(1(1(x1)))))
   2^1(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3^1(2(1(1(x1))))
   2^1(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 2^1(1(1(x1)))
   2^1(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 1^1(1(x1))
   1^1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1^1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1))))))))))))))))
   1^1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 0^1(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))
   1^1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 0^1(3(4(4(4(4(4(2(3(3(1(0(4(3(x1))))))))))))))
   1^1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 3^1(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))
   1^1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 4^1(4(4(4(4(2(3(3(1(0(4(3(x1))))))))))))
   1^1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 4^1(4(4(4(2(3(3(1(0(4(3(x1)))))))))))
   1^1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 4^1(4(4(2(3(3(1(0(4(3(x1))))))))))
   1^1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 4^1(4(2(3(3(1(0(4(3(x1)))))))))
   1^1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 4^1(2(3(3(1(0(4(3(x1))))))))
   1^1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 2^1(3(3(1(0(4(3(x1)))))))
   1^1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 3^1(3(1(0(4(3(x1))))))
   1^1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 3^1(1(0(4(3(x1)))))
   1^1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1^1(0(4(3(x1))))
   1^1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 0^1(4(3(x1)))
   1^1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 4^1(3(x1))
   2^1(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 1^1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1))))))))))))))))
   2^1(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 1^1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))
   2^1(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 2^1(3(3(1(1(4(5(3(1(3(2(4(0(2(x1))))))))))))))
   2^1(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 3^1(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))
   2^1(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 3^1(1(1(4(5(3(1(3(2(4(0(2(x1))))))))))))
   2^1(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 1^1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))
   2^1(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 1^1(4(5(3(1(3(2(4(0(2(x1))))))))))
   2^1(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4^1(5(3(1(3(2(4(0(2(x1)))))))))
   2^1(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 5^1(3(1(3(2(4(0(2(x1))))))))
   2^1(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 3^1(1(3(2(4(0(2(x1)))))))
   2^1(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 1^1(3(2(4(0(2(x1))))))
   2^1(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 3^1(2(4(0(2(x1)))))
   2^1(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 2^1(4(0(2(x1))))
   2^1(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4^1(0(2(x1)))
   2^1(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 0^1(2(x1))
   2^1(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 2^1(x1)
   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 0^1(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1)))))))))))))))))
   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 5^1(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))
   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1^1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1)))))))))))))))
   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 0^1(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))
   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 2^1(0(0(4(0(2(5(0(2(5(2(2(2(x1)))))))))))))
   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 0^1(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))
   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 0^1(4(0(2(5(0(2(5(2(2(2(x1)))))))))))
   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 4^1(0(2(5(0(2(5(2(2(2(x1))))))))))
   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 0^1(2(5(0(2(5(2(2(2(x1)))))))))
   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 2^1(5(0(2(5(2(2(2(x1))))))))
   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 5^1(0(2(5(2(2(2(x1)))))))
   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 0^1(2(5(2(2(2(x1))))))
   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 2^1(5(2(2(2(x1)))))
   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 5^1(2(2(2(x1))))
   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 2^1(2(2(x1)))
   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 2^1(2(x1))
   5^1(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 1^1(2(2(3(1(5(2(5(1(1(3(4(2(4(0(5(5(x1)))))))))))))))))
   5^1(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 2^1(2(3(1(5(2(5(1(1(3(4(2(4(0(5(5(x1))))))))))))))))
   5^1(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 2^1(3(1(5(2(5(1(1(3(4(2(4(0(5(5(x1)))))))))))))))
   5^1(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 3^1(1(5(2(5(1(1(3(4(2(4(0(5(5(x1))))))))))))))
   5^1(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 1^1(5(2(5(1(1(3(4(2(4(0(5(5(x1)))))))))))))
   5^1(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 5^1(2(5(1(1(3(4(2(4(0(5(5(x1))))))))))))
   5^1(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 2^1(5(1(1(3(4(2(4(0(5(5(x1)))))))))))
   5^1(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 5^1(1(1(3(4(2(4(0(5(5(x1))))))))))
   5^1(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 1^1(1(3(4(2(4(0(5(5(x1)))))))))
   5^1(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 1^1(3(4(2(4(0(5(5(x1))))))))
   5^1(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 3^1(4(2(4(0(5(5(x1)))))))
   5^1(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 4^1(2(4(0(5(5(x1))))))
   5^1(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 2^1(4(0(5(5(x1)))))
   5^1(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 4^1(0(5(5(x1))))
   5^1(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 0^1(5(5(x1)))
   5^1(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 5^1(5(x1))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 4^1(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1))))))))))))))))))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 0^1(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 1^1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1))))))))))))))))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 5^1(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 0^1(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1))))))))))))))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 1^1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2^1(3(0(4(1(4(1(5(3(4(1(5(0(2(x1))))))))))))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 3^1(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 0^1(4(1(4(1(5(3(4(1(5(0(2(x1))))))))))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 4^1(1(4(1(5(3(4(1(5(0(2(x1)))))))))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 1^1(4(1(5(3(4(1(5(0(2(x1))))))))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 4^1(1(5(3(4(1(5(0(2(x1)))))))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 1^1(5(3(4(1(5(0(2(x1))))))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 5^1(3(4(1(5(0(2(x1)))))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 3^1(4(1(5(0(2(x1))))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 4^1(1(5(0(2(x1)))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 1^1(5(0(2(x1))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 5^1(0(2(x1)))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 0^1(2(x1))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2^1(x1)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(0(x_1)) = 1 + x_1
   POL(0^1(x_1)) = x_1
   POL(1(x_1)) = 1 + x_1
   POL(1^1(x_1)) = x_1
   POL(2(x_1)) = 1 + x_1
   POL(2^1(x_1)) = x_1
   POL(3(x_1)) = 1 + x_1
   POL(3^1(x_1)) = x_1
   POL(4(x_1)) = 1 + x_1
   POL(4^1(x_1)) = x_1
   POL(5(x_1)) = 1 + x_1
   POL(5^1(x_1)) = x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   3(4(3(1(1(x1))))) -> 3(4(0(3(1(x1)))))
   1(3(1(1(0(4(x1)))))) -> 1(3(0(2(0(4(x1))))))
   1(4(0(4(x1)))) -> 1(2(3(1(x1))))
   1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1(1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))))
   1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))
   2(4(4(5(4(4(3(x1))))))) -> 2(4(2(3(4(2(2(x1)))))))
   2(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4(1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))))
   4(4(1(4(0(0(1(3(x1)))))))) -> 4(1(2(3(4(2(5(3(x1))))))))
   4(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0(1(0(2(5(0(5(3(5(4(x1))))))))))
   0(0(1(1(x1)))) -> 2(2(1(3(x1))))
   0(4(5(2(1(2(0(1(x1)))))))) -> 0(1(5(4(2(5(0(0(x1))))))))
   0(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   0(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2(4(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))))
   4(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 4(1(1(4(3(2(2(3(5(2(1(3(x1))))))))))))
   2(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3(2(2(3(4(1(2(1(0(3(1(2(3(2(1(1(x1))))))))))))))))
   4(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 1(4(3(3(4(3(3(1(0(0(x1))))))))))
   5(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 5(1(2(2(3(1(5(2(5(1(1(3(4(2(4(0(5(5(x1))))))))))))))))))
   5(5(4(2(0(2(3(x1))))))) -> 5(2(4(1(2(3(3(x1)))))))


----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   0^1(0(1(1(x1)))) -> 2^1(2(1(3(x1))))
   1^1(4(0(4(x1)))) -> 1^1(2(3(1(x1))))
   3^1(4(3(1(1(x1))))) -> 3^1(4(0(3(1(x1)))))
   1^1(3(1(1(0(4(x1)))))) -> 1^1(3(0(2(0(4(x1))))))
   2^1(4(4(5(4(4(3(x1))))))) -> 2^1(4(2(3(4(2(2(x1)))))))
   5^1(5(4(2(0(2(3(x1))))))) -> 5^1(2(4(1(2(3(3(x1)))))))
   0^1(4(5(2(1(2(0(1(x1)))))))) -> 0^1(1(5(4(2(5(0(0(x1))))))))
   4^1(4(1(4(0(0(1(3(x1)))))))) -> 4^1(1(2(3(4(2(5(3(x1))))))))
   4^1(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 1^1(4(3(3(4(3(3(1(0(0(x1))))))))))
   4^1(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0^1(1(0(2(5(0(5(3(5(4(x1))))))))))
   4^1(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 4^1(1(1(4(3(2(2(3(5(2(1(3(x1))))))))))))
   0^1(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0^1(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   2^1(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3^1(2(2(3(4(1(2(1(0(3(1(2(3(2(1(1(x1))))))))))))))))
   1^1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1^1(1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))))
   2^1(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4^1(1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))))
   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1^1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))
   5^1(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 5^1(1(2(2(3(1(5(2(5(1(1(3(4(2(4(0(5(5(x1))))))))))))))))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2^1(4(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))))

The TRS R consists of the following rules:

   0(0(1(1(x1)))) -> 2(2(1(3(x1))))
   1(4(0(4(x1)))) -> 1(2(3(1(x1))))
   3(4(3(1(1(x1))))) -> 3(4(0(3(1(x1)))))
   1(3(1(1(0(4(x1)))))) -> 1(3(0(2(0(4(x1))))))
   2(4(4(5(4(4(3(x1))))))) -> 2(4(2(3(4(2(2(x1)))))))
   5(5(4(2(0(2(3(x1))))))) -> 5(2(4(1(2(3(3(x1)))))))
   0(4(5(2(1(2(0(1(x1)))))))) -> 0(1(5(4(2(5(0(0(x1))))))))
   4(4(1(4(0(0(1(3(x1)))))))) -> 4(1(2(3(4(2(5(3(x1))))))))
   4(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 1(4(3(3(4(3(3(1(0(0(x1))))))))))
   4(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0(1(0(2(5(0(5(3(5(4(x1))))))))))
   4(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 4(1(1(4(3(2(2(3(5(2(1(3(x1))))))))))))
   0(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   2(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3(2(2(3(4(1(2(1(0(3(1(2(3(2(1(1(x1))))))))))))))))
   1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1(1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))))
   2(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4(1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))))
   1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))
   5(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 5(1(2(2(3(1(5(2(5(1(1(3(4(2(4(0(5(5(x1))))))))))))))))))
   0(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2(4(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 4 SCCs with 2 less nodes.
----------------------------------------

(8)
Complex Obligation (AND)

----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   5^1(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 5^1(1(2(2(3(1(5(2(5(1(1(3(4(2(4(0(5(5(x1))))))))))))))))))
   5^1(5(4(2(0(2(3(x1))))))) -> 5^1(2(4(1(2(3(3(x1)))))))

The TRS R consists of the following rules:

   0(0(1(1(x1)))) -> 2(2(1(3(x1))))
   1(4(0(4(x1)))) -> 1(2(3(1(x1))))
   3(4(3(1(1(x1))))) -> 3(4(0(3(1(x1)))))
   1(3(1(1(0(4(x1)))))) -> 1(3(0(2(0(4(x1))))))
   2(4(4(5(4(4(3(x1))))))) -> 2(4(2(3(4(2(2(x1)))))))
   5(5(4(2(0(2(3(x1))))))) -> 5(2(4(1(2(3(3(x1)))))))
   0(4(5(2(1(2(0(1(x1)))))))) -> 0(1(5(4(2(5(0(0(x1))))))))
   4(4(1(4(0(0(1(3(x1)))))))) -> 4(1(2(3(4(2(5(3(x1))))))))
   4(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 1(4(3(3(4(3(3(1(0(0(x1))))))))))
   4(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0(1(0(2(5(0(5(3(5(4(x1))))))))))
   4(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 4(1(1(4(3(2(2(3(5(2(1(3(x1))))))))))))
   0(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   2(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3(2(2(3(4(1(2(1(0(3(1(2(3(2(1(1(x1))))))))))))))))
   1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1(1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))))
   2(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4(1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))))
   1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))
   5(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 5(1(2(2(3(1(5(2(5(1(1(3(4(2(4(0(5(5(x1))))))))))))))))))
   0(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2(4(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   5^1(5(4(2(0(2(3(x1))))))) -> 5^1(2(4(1(2(3(3(x1)))))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(0(x_1)) = 0
   POL(1(x_1)) = 0
   POL(2(x_1)) = 0
   POL(3(x_1)) = 0
   POL(4(x_1)) = 0
   POL(5(x_1)) = 1
   POL(5^1(x_1)) = x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   2(4(4(5(4(4(3(x1))))))) -> 2(4(2(3(4(2(2(x1)))))))
   2(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4(1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))))
   4(4(1(4(0(0(1(3(x1)))))))) -> 4(1(2(3(4(2(5(3(x1))))))))
   4(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0(1(0(2(5(0(5(3(5(4(x1))))))))))
   0(0(1(1(x1)))) -> 2(2(1(3(x1))))
   0(4(5(2(1(2(0(1(x1)))))))) -> 0(1(5(4(2(5(0(0(x1))))))))
   0(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   0(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2(4(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))))
   4(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 4(1(1(4(3(2(2(3(5(2(1(3(x1))))))))))))
   4(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 1(4(3(3(4(3(3(1(0(0(x1))))))))))
   2(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3(2(2(3(4(1(2(1(0(3(1(2(3(2(1(1(x1))))))))))))))))
   3(4(3(1(1(x1))))) -> 3(4(0(3(1(x1)))))
   1(3(1(1(0(4(x1)))))) -> 1(3(0(2(0(4(x1))))))
   1(4(0(4(x1)))) -> 1(2(3(1(x1))))
   1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1(1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))))
   1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))


----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   5^1(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 5^1(1(2(2(3(1(5(2(5(1(1(3(4(2(4(0(5(5(x1))))))))))))))))))

The TRS R consists of the following rules:

   0(0(1(1(x1)))) -> 2(2(1(3(x1))))
   1(4(0(4(x1)))) -> 1(2(3(1(x1))))
   3(4(3(1(1(x1))))) -> 3(4(0(3(1(x1)))))
   1(3(1(1(0(4(x1)))))) -> 1(3(0(2(0(4(x1))))))
   2(4(4(5(4(4(3(x1))))))) -> 2(4(2(3(4(2(2(x1)))))))
   5(5(4(2(0(2(3(x1))))))) -> 5(2(4(1(2(3(3(x1)))))))
   0(4(5(2(1(2(0(1(x1)))))))) -> 0(1(5(4(2(5(0(0(x1))))))))
   4(4(1(4(0(0(1(3(x1)))))))) -> 4(1(2(3(4(2(5(3(x1))))))))
   4(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 1(4(3(3(4(3(3(1(0(0(x1))))))))))
   4(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0(1(0(2(5(0(5(3(5(4(x1))))))))))
   4(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 4(1(1(4(3(2(2(3(5(2(1(3(x1))))))))))))
   0(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   2(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3(2(2(3(4(1(2(1(0(3(1(2(3(2(1(1(x1))))))))))))))))
   1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1(1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))))
   2(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4(1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))))
   1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))
   5(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 5(1(2(2(3(1(5(2(5(1(1(3(4(2(4(0(5(5(x1))))))))))))))))))
   0(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2(4(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   5^1(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 5^1(1(2(2(3(1(5(2(5(1(1(3(4(2(4(0(5(5(x1))))))))))))))))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(0(x_1)) = 0
   POL(1(x_1)) = 0
   POL(2(x_1)) = x_1
   POL(3(x_1)) = 0
   POL(4(x_1)) = 1 + x_1
   POL(5(x_1)) = 0
   POL(5^1(x_1)) = x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   1(3(1(1(0(4(x1)))))) -> 1(3(0(2(0(4(x1))))))
   1(4(0(4(x1)))) -> 1(2(3(1(x1))))
   1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1(1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))))
   1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))


----------------------------------------

(13)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   0(0(1(1(x1)))) -> 2(2(1(3(x1))))
   1(4(0(4(x1)))) -> 1(2(3(1(x1))))
   3(4(3(1(1(x1))))) -> 3(4(0(3(1(x1)))))
   1(3(1(1(0(4(x1)))))) -> 1(3(0(2(0(4(x1))))))
   2(4(4(5(4(4(3(x1))))))) -> 2(4(2(3(4(2(2(x1)))))))
   5(5(4(2(0(2(3(x1))))))) -> 5(2(4(1(2(3(3(x1)))))))
   0(4(5(2(1(2(0(1(x1)))))))) -> 0(1(5(4(2(5(0(0(x1))))))))
   4(4(1(4(0(0(1(3(x1)))))))) -> 4(1(2(3(4(2(5(3(x1))))))))
   4(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 1(4(3(3(4(3(3(1(0(0(x1))))))))))
   4(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0(1(0(2(5(0(5(3(5(4(x1))))))))))
   4(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 4(1(1(4(3(2(2(3(5(2(1(3(x1))))))))))))
   0(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   2(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3(2(2(3(4(1(2(1(0(3(1(2(3(2(1(1(x1))))))))))))))))
   1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1(1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))))
   2(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4(1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))))
   1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))
   5(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 5(1(2(2(3(1(5(2(5(1(1(3(4(2(4(0(5(5(x1))))))))))))))))))
   0(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2(4(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(14) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(15)
YES

----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   3^1(4(3(1(1(x1))))) -> 3^1(4(0(3(1(x1)))))

The TRS R consists of the following rules:

   0(0(1(1(x1)))) -> 2(2(1(3(x1))))
   1(4(0(4(x1)))) -> 1(2(3(1(x1))))
   3(4(3(1(1(x1))))) -> 3(4(0(3(1(x1)))))
   1(3(1(1(0(4(x1)))))) -> 1(3(0(2(0(4(x1))))))
   2(4(4(5(4(4(3(x1))))))) -> 2(4(2(3(4(2(2(x1)))))))
   5(5(4(2(0(2(3(x1))))))) -> 5(2(4(1(2(3(3(x1)))))))
   0(4(5(2(1(2(0(1(x1)))))))) -> 0(1(5(4(2(5(0(0(x1))))))))
   4(4(1(4(0(0(1(3(x1)))))))) -> 4(1(2(3(4(2(5(3(x1))))))))
   4(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 1(4(3(3(4(3(3(1(0(0(x1))))))))))
   4(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0(1(0(2(5(0(5(3(5(4(x1))))))))))
   4(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 4(1(1(4(3(2(2(3(5(2(1(3(x1))))))))))))
   0(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   2(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3(2(2(3(4(1(2(1(0(3(1(2(3(2(1(1(x1))))))))))))))))
   1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1(1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))))
   2(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4(1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))))
   1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))
   5(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 5(1(2(2(3(1(5(2(5(1(1(3(4(2(4(0(5(5(x1))))))))))))))))))
   0(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2(4(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   3^1(4(3(1(1(x1))))) -> 3^1(4(0(3(1(x1)))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( 3^1_1(x_1) ) = max{0, 2x_1 - 1}
POL( 1_1(x_1) ) = 2
POL( 3_1(x_1) ) = 1
POL( 0_1(x_1) ) = max{0, 2x_1 - 2}
POL( 4_1(x_1) ) = x_1
POL( 2_1(x_1) ) = max{0, 2x_1 - 2}
POL( 5_1(x_1) ) = 2

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   1(3(1(1(0(4(x1)))))) -> 1(3(0(2(0(4(x1))))))
   1(4(0(4(x1)))) -> 1(2(3(1(x1))))
   1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1(1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))))
   1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))
   3(4(3(1(1(x1))))) -> 3(4(0(3(1(x1)))))
   2(4(4(5(4(4(3(x1))))))) -> 2(4(2(3(4(2(2(x1)))))))
   2(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4(1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))))
   4(4(1(4(0(0(1(3(x1)))))))) -> 4(1(2(3(4(2(5(3(x1))))))))
   4(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0(1(0(2(5(0(5(3(5(4(x1))))))))))
   0(0(1(1(x1)))) -> 2(2(1(3(x1))))
   0(4(5(2(1(2(0(1(x1)))))))) -> 0(1(5(4(2(5(0(0(x1))))))))
   0(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   0(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2(4(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))))
   4(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 4(1(1(4(3(2(2(3(5(2(1(3(x1))))))))))))
   4(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 1(4(3(3(4(3(3(1(0(0(x1))))))))))
   2(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3(2(2(3(4(1(2(1(0(3(1(2(3(2(1(1(x1))))))))))))))))


----------------------------------------

(18)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   0(0(1(1(x1)))) -> 2(2(1(3(x1))))
   1(4(0(4(x1)))) -> 1(2(3(1(x1))))
   3(4(3(1(1(x1))))) -> 3(4(0(3(1(x1)))))
   1(3(1(1(0(4(x1)))))) -> 1(3(0(2(0(4(x1))))))
   2(4(4(5(4(4(3(x1))))))) -> 2(4(2(3(4(2(2(x1)))))))
   5(5(4(2(0(2(3(x1))))))) -> 5(2(4(1(2(3(3(x1)))))))
   0(4(5(2(1(2(0(1(x1)))))))) -> 0(1(5(4(2(5(0(0(x1))))))))
   4(4(1(4(0(0(1(3(x1)))))))) -> 4(1(2(3(4(2(5(3(x1))))))))
   4(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 1(4(3(3(4(3(3(1(0(0(x1))))))))))
   4(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0(1(0(2(5(0(5(3(5(4(x1))))))))))
   4(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 4(1(1(4(3(2(2(3(5(2(1(3(x1))))))))))))
   0(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   2(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3(2(2(3(4(1(2(1(0(3(1(2(3(2(1(1(x1))))))))))))))))
   1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1(1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))))
   2(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4(1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))))
   1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))
   5(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 5(1(2(2(3(1(5(2(5(1(1(3(4(2(4(0(5(5(x1))))))))))))))))))
   0(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2(4(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(20)
YES

----------------------------------------

(21)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   1^1(3(1(1(0(4(x1)))))) -> 1^1(3(0(2(0(4(x1))))))
   1^1(4(0(4(x1)))) -> 1^1(2(3(1(x1))))
   1^1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1^1(1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))))
   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1^1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))

The TRS R consists of the following rules:

   0(0(1(1(x1)))) -> 2(2(1(3(x1))))
   1(4(0(4(x1)))) -> 1(2(3(1(x1))))
   3(4(3(1(1(x1))))) -> 3(4(0(3(1(x1)))))
   1(3(1(1(0(4(x1)))))) -> 1(3(0(2(0(4(x1))))))
   2(4(4(5(4(4(3(x1))))))) -> 2(4(2(3(4(2(2(x1)))))))
   5(5(4(2(0(2(3(x1))))))) -> 5(2(4(1(2(3(3(x1)))))))
   0(4(5(2(1(2(0(1(x1)))))))) -> 0(1(5(4(2(5(0(0(x1))))))))
   4(4(1(4(0(0(1(3(x1)))))))) -> 4(1(2(3(4(2(5(3(x1))))))))
   4(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 1(4(3(3(4(3(3(1(0(0(x1))))))))))
   4(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0(1(0(2(5(0(5(3(5(4(x1))))))))))
   4(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 4(1(1(4(3(2(2(3(5(2(1(3(x1))))))))))))
   0(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   2(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3(2(2(3(4(1(2(1(0(3(1(2(3(2(1(1(x1))))))))))))))))
   1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1(1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))))
   2(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4(1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))))
   1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))
   5(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 5(1(2(2(3(1(5(2(5(1(1(3(4(2(4(0(5(5(x1))))))))))))))))))
   0(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2(4(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(22) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   1^1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1^1(1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(0(x_1)) = 1
   POL(1(x_1)) = 0
   POL(1^1(x_1)) = x_1
   POL(2(x_1)) = 1
   POL(3(x_1)) = 0
   POL(4(x_1)) = 1
   POL(5(x_1)) = 0

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   2(4(4(5(4(4(3(x1))))))) -> 2(4(2(3(4(2(2(x1)))))))
   2(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4(1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))))
   4(4(1(4(0(0(1(3(x1)))))))) -> 4(1(2(3(4(2(5(3(x1))))))))
   4(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0(1(0(2(5(0(5(3(5(4(x1))))))))))
   0(0(1(1(x1)))) -> 2(2(1(3(x1))))
   0(4(5(2(1(2(0(1(x1)))))))) -> 0(1(5(4(2(5(0(0(x1))))))))
   0(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   0(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2(4(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))))
   4(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 4(1(1(4(3(2(2(3(5(2(1(3(x1))))))))))))
   4(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 1(4(3(3(4(3(3(1(0(0(x1))))))))))
   2(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3(2(2(3(4(1(2(1(0(3(1(2(3(2(1(1(x1))))))))))))))))
   3(4(3(1(1(x1))))) -> 3(4(0(3(1(x1)))))
   1(3(1(1(0(4(x1)))))) -> 1(3(0(2(0(4(x1))))))
   1(4(0(4(x1)))) -> 1(2(3(1(x1))))
   1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1(1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))))
   1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))


----------------------------------------

(23)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   1^1(3(1(1(0(4(x1)))))) -> 1^1(3(0(2(0(4(x1))))))
   1^1(4(0(4(x1)))) -> 1^1(2(3(1(x1))))
   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1^1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))

The TRS R consists of the following rules:

   0(0(1(1(x1)))) -> 2(2(1(3(x1))))
   1(4(0(4(x1)))) -> 1(2(3(1(x1))))
   3(4(3(1(1(x1))))) -> 3(4(0(3(1(x1)))))
   1(3(1(1(0(4(x1)))))) -> 1(3(0(2(0(4(x1))))))
   2(4(4(5(4(4(3(x1))))))) -> 2(4(2(3(4(2(2(x1)))))))
   5(5(4(2(0(2(3(x1))))))) -> 5(2(4(1(2(3(3(x1)))))))
   0(4(5(2(1(2(0(1(x1)))))))) -> 0(1(5(4(2(5(0(0(x1))))))))
   4(4(1(4(0(0(1(3(x1)))))))) -> 4(1(2(3(4(2(5(3(x1))))))))
   4(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 1(4(3(3(4(3(3(1(0(0(x1))))))))))
   4(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0(1(0(2(5(0(5(3(5(4(x1))))))))))
   4(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 4(1(1(4(3(2(2(3(5(2(1(3(x1))))))))))))
   0(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   2(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3(2(2(3(4(1(2(1(0(3(1(2(3(2(1(1(x1))))))))))))))))
   1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1(1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))))
   2(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4(1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))))
   1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))
   5(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 5(1(2(2(3(1(5(2(5(1(1(3(4(2(4(0(5(5(x1))))))))))))))))))
   0(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2(4(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(24) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   1^1(4(0(4(x1)))) -> 1^1(2(3(1(x1))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(0(x_1)) = 1
   POL(1(x_1)) = x_1
   POL(1^1(x_1)) = x_1
   POL(2(x_1)) = 0
   POL(3(x_1)) = 0
   POL(4(x_1)) = x_1
   POL(5(x_1)) = 1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   2(4(4(5(4(4(3(x1))))))) -> 2(4(2(3(4(2(2(x1)))))))
   2(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4(1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))))
   4(4(1(4(0(0(1(3(x1)))))))) -> 4(1(2(3(4(2(5(3(x1))))))))
   4(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0(1(0(2(5(0(5(3(5(4(x1))))))))))
   0(0(1(1(x1)))) -> 2(2(1(3(x1))))
   0(4(5(2(1(2(0(1(x1)))))))) -> 0(1(5(4(2(5(0(0(x1))))))))
   0(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   0(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2(4(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))))
   4(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 4(1(1(4(3(2(2(3(5(2(1(3(x1))))))))))))
   4(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 1(4(3(3(4(3(3(1(0(0(x1))))))))))
   2(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3(2(2(3(4(1(2(1(0(3(1(2(3(2(1(1(x1))))))))))))))))
   3(4(3(1(1(x1))))) -> 3(4(0(3(1(x1)))))
   1(3(1(1(0(4(x1)))))) -> 1(3(0(2(0(4(x1))))))
   1(4(0(4(x1)))) -> 1(2(3(1(x1))))
   1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1(1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))))
   1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))


----------------------------------------

(25)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   1^1(3(1(1(0(4(x1)))))) -> 1^1(3(0(2(0(4(x1))))))
   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1^1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))

The TRS R consists of the following rules:

   0(0(1(1(x1)))) -> 2(2(1(3(x1))))
   1(4(0(4(x1)))) -> 1(2(3(1(x1))))
   3(4(3(1(1(x1))))) -> 3(4(0(3(1(x1)))))
   1(3(1(1(0(4(x1)))))) -> 1(3(0(2(0(4(x1))))))
   2(4(4(5(4(4(3(x1))))))) -> 2(4(2(3(4(2(2(x1)))))))
   5(5(4(2(0(2(3(x1))))))) -> 5(2(4(1(2(3(3(x1)))))))
   0(4(5(2(1(2(0(1(x1)))))))) -> 0(1(5(4(2(5(0(0(x1))))))))
   4(4(1(4(0(0(1(3(x1)))))))) -> 4(1(2(3(4(2(5(3(x1))))))))
   4(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 1(4(3(3(4(3(3(1(0(0(x1))))))))))
   4(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0(1(0(2(5(0(5(3(5(4(x1))))))))))
   4(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 4(1(1(4(3(2(2(3(5(2(1(3(x1))))))))))))
   0(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   2(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3(2(2(3(4(1(2(1(0(3(1(2(3(2(1(1(x1))))))))))))))))
   1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1(1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))))
   2(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4(1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))))
   1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))
   5(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 5(1(2(2(3(1(5(2(5(1(1(3(4(2(4(0(5(5(x1))))))))))))))))))
   0(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2(4(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(26) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   1^1(3(1(1(0(4(x1)))))) -> 1^1(3(0(2(0(4(x1))))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( 1^1_1(x_1) ) = max{0, 2x_1 - 1}
POL( 2_1(x_1) ) = max{0, 2x_1 - 2}
POL( 4_1(x_1) ) = 1
POL( 5_1(x_1) ) = 2
POL( 3_1(x_1) ) = max{0, 2x_1 - 1}
POL( 1_1(x_1) ) = 1
POL( 0_1(x_1) ) = max{0, -2}

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   2(4(4(5(4(4(3(x1))))))) -> 2(4(2(3(4(2(2(x1)))))))
   2(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4(1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))))
   4(4(1(4(0(0(1(3(x1)))))))) -> 4(1(2(3(4(2(5(3(x1))))))))
   4(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0(1(0(2(5(0(5(3(5(4(x1))))))))))
   0(0(1(1(x1)))) -> 2(2(1(3(x1))))
   0(4(5(2(1(2(0(1(x1)))))))) -> 0(1(5(4(2(5(0(0(x1))))))))
   0(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   0(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2(4(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))))
   4(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 4(1(1(4(3(2(2(3(5(2(1(3(x1))))))))))))
   4(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 1(4(3(3(4(3(3(1(0(0(x1))))))))))
   2(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3(2(2(3(4(1(2(1(0(3(1(2(3(2(1(1(x1))))))))))))))))
   3(4(3(1(1(x1))))) -> 3(4(0(3(1(x1)))))
   1(3(1(1(0(4(x1)))))) -> 1(3(0(2(0(4(x1))))))
   1(4(0(4(x1)))) -> 1(2(3(1(x1))))
   1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1(1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))))
   1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))


----------------------------------------

(27)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1^1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))

The TRS R consists of the following rules:

   0(0(1(1(x1)))) -> 2(2(1(3(x1))))
   1(4(0(4(x1)))) -> 1(2(3(1(x1))))
   3(4(3(1(1(x1))))) -> 3(4(0(3(1(x1)))))
   1(3(1(1(0(4(x1)))))) -> 1(3(0(2(0(4(x1))))))
   2(4(4(5(4(4(3(x1))))))) -> 2(4(2(3(4(2(2(x1)))))))
   5(5(4(2(0(2(3(x1))))))) -> 5(2(4(1(2(3(3(x1)))))))
   0(4(5(2(1(2(0(1(x1)))))))) -> 0(1(5(4(2(5(0(0(x1))))))))
   4(4(1(4(0(0(1(3(x1)))))))) -> 4(1(2(3(4(2(5(3(x1))))))))
   4(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 1(4(3(3(4(3(3(1(0(0(x1))))))))))
   4(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0(1(0(2(5(0(5(3(5(4(x1))))))))))
   4(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 4(1(1(4(3(2(2(3(5(2(1(3(x1))))))))))))
   0(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   2(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3(2(2(3(4(1(2(1(0(3(1(2(3(2(1(1(x1))))))))))))))))
   1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1(1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))))
   2(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4(1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))))
   1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))
   5(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 5(1(2(2(3(1(5(2(5(1(1(3(4(2(4(0(5(5(x1))))))))))))))))))
   0(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2(4(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(28) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   1^1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1^1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( 1^1_1(x_1) ) = max{0, x_1 - 2}
POL( 2_1(x_1) ) = max{0, x_1 - 1}
POL( 4_1(x_1) ) = 1
POL( 5_1(x_1) ) = 2x_1 + 1
POL( 3_1(x_1) ) = 2x_1
POL( 1_1(x_1) ) = 1
POL( 0_1(x_1) ) = max{0, x_1 - 1}

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   2(4(4(5(4(4(3(x1))))))) -> 2(4(2(3(4(2(2(x1)))))))
   2(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4(1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))))
   4(4(1(4(0(0(1(3(x1)))))))) -> 4(1(2(3(4(2(5(3(x1))))))))
   4(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0(1(0(2(5(0(5(3(5(4(x1))))))))))
   0(0(1(1(x1)))) -> 2(2(1(3(x1))))
   0(4(5(2(1(2(0(1(x1)))))))) -> 0(1(5(4(2(5(0(0(x1))))))))
   0(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   0(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2(4(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))))
   4(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 4(1(1(4(3(2(2(3(5(2(1(3(x1))))))))))))
   2(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3(2(2(3(4(1(2(1(0(3(1(2(3(2(1(1(x1))))))))))))))))
   5(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 5(1(2(2(3(1(5(2(5(1(1(3(4(2(4(0(5(5(x1))))))))))))))))))
   5(5(4(2(0(2(3(x1))))))) -> 5(2(4(1(2(3(3(x1)))))))
   4(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 1(4(3(3(4(3(3(1(0(0(x1))))))))))
   1(3(1(1(0(4(x1)))))) -> 1(3(0(2(0(4(x1))))))
   1(4(0(4(x1)))) -> 1(2(3(1(x1))))
   1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1(1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))))
   1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))
   3(4(3(1(1(x1))))) -> 3(4(0(3(1(x1)))))


----------------------------------------

(29)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   0(0(1(1(x1)))) -> 2(2(1(3(x1))))
   1(4(0(4(x1)))) -> 1(2(3(1(x1))))
   3(4(3(1(1(x1))))) -> 3(4(0(3(1(x1)))))
   1(3(1(1(0(4(x1)))))) -> 1(3(0(2(0(4(x1))))))
   2(4(4(5(4(4(3(x1))))))) -> 2(4(2(3(4(2(2(x1)))))))
   5(5(4(2(0(2(3(x1))))))) -> 5(2(4(1(2(3(3(x1)))))))
   0(4(5(2(1(2(0(1(x1)))))))) -> 0(1(5(4(2(5(0(0(x1))))))))
   4(4(1(4(0(0(1(3(x1)))))))) -> 4(1(2(3(4(2(5(3(x1))))))))
   4(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 1(4(3(3(4(3(3(1(0(0(x1))))))))))
   4(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0(1(0(2(5(0(5(3(5(4(x1))))))))))
   4(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 4(1(1(4(3(2(2(3(5(2(1(3(x1))))))))))))
   0(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   2(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3(2(2(3(4(1(2(1(0(3(1(2(3(2(1(1(x1))))))))))))))))
   1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1(1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))))
   2(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4(1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))))
   1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))
   5(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 5(1(2(2(3(1(5(2(5(1(1(3(4(2(4(0(5(5(x1))))))))))))))))))
   0(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2(4(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(30) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(31)
YES

----------------------------------------

(32)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   2^1(4(4(5(4(4(3(x1))))))) -> 2^1(4(2(3(4(2(2(x1)))))))
   2^1(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4^1(1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))))
   4^1(4(1(4(0(0(1(3(x1)))))))) -> 4^1(1(2(3(4(2(5(3(x1))))))))
   4^1(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0^1(1(0(2(5(0(5(3(5(4(x1))))))))))
   0^1(0(1(1(x1)))) -> 2^1(2(1(3(x1))))
   0^1(4(5(2(1(2(0(1(x1)))))))) -> 0^1(1(5(4(2(5(0(0(x1))))))))
   0^1(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0^1(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2^1(4(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))))
   4^1(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 4^1(1(1(4(3(2(2(3(5(2(1(3(x1))))))))))))

The TRS R consists of the following rules:

   0(0(1(1(x1)))) -> 2(2(1(3(x1))))
   1(4(0(4(x1)))) -> 1(2(3(1(x1))))
   3(4(3(1(1(x1))))) -> 3(4(0(3(1(x1)))))
   1(3(1(1(0(4(x1)))))) -> 1(3(0(2(0(4(x1))))))
   2(4(4(5(4(4(3(x1))))))) -> 2(4(2(3(4(2(2(x1)))))))
   5(5(4(2(0(2(3(x1))))))) -> 5(2(4(1(2(3(3(x1)))))))
   0(4(5(2(1(2(0(1(x1)))))))) -> 0(1(5(4(2(5(0(0(x1))))))))
   4(4(1(4(0(0(1(3(x1)))))))) -> 4(1(2(3(4(2(5(3(x1))))))))
   4(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 1(4(3(3(4(3(3(1(0(0(x1))))))))))
   4(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0(1(0(2(5(0(5(3(5(4(x1))))))))))
   4(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 4(1(1(4(3(2(2(3(5(2(1(3(x1))))))))))))
   0(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   2(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3(2(2(3(4(1(2(1(0(3(1(2(3(2(1(1(x1))))))))))))))))
   1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1(1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))))
   2(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4(1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))))
   1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))
   5(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 5(1(2(2(3(1(5(2(5(1(1(3(4(2(4(0(5(5(x1))))))))))))))))))
   0(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2(4(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(33) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   4^1(4(1(4(0(0(1(3(x1)))))))) -> 4^1(1(2(3(4(2(5(3(x1))))))))
   4^1(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 4^1(1(1(4(3(2(2(3(5(2(1(3(x1))))))))))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(0(x_1)) = 0
   POL(0^1(x_1)) = 0
   POL(1(x_1)) = 0
   POL(2(x_1)) = 1 + x_1
   POL(2^1(x_1)) = 0
   POL(3(x_1)) = 0
   POL(4(x_1)) = 1
   POL(4^1(x_1)) = x_1
   POL(5(x_1)) = x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   1(3(1(1(0(4(x1)))))) -> 1(3(0(2(0(4(x1))))))
   1(4(0(4(x1)))) -> 1(2(3(1(x1))))
   1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1(1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))))
   1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))


----------------------------------------

(34)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   2^1(4(4(5(4(4(3(x1))))))) -> 2^1(4(2(3(4(2(2(x1)))))))
   2^1(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4^1(1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))))
   4^1(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0^1(1(0(2(5(0(5(3(5(4(x1))))))))))
   0^1(0(1(1(x1)))) -> 2^1(2(1(3(x1))))
   0^1(4(5(2(1(2(0(1(x1)))))))) -> 0^1(1(5(4(2(5(0(0(x1))))))))
   0^1(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0^1(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2^1(4(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))))

The TRS R consists of the following rules:

   0(0(1(1(x1)))) -> 2(2(1(3(x1))))
   1(4(0(4(x1)))) -> 1(2(3(1(x1))))
   3(4(3(1(1(x1))))) -> 3(4(0(3(1(x1)))))
   1(3(1(1(0(4(x1)))))) -> 1(3(0(2(0(4(x1))))))
   2(4(4(5(4(4(3(x1))))))) -> 2(4(2(3(4(2(2(x1)))))))
   5(5(4(2(0(2(3(x1))))))) -> 5(2(4(1(2(3(3(x1)))))))
   0(4(5(2(1(2(0(1(x1)))))))) -> 0(1(5(4(2(5(0(0(x1))))))))
   4(4(1(4(0(0(1(3(x1)))))))) -> 4(1(2(3(4(2(5(3(x1))))))))
   4(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 1(4(3(3(4(3(3(1(0(0(x1))))))))))
   4(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0(1(0(2(5(0(5(3(5(4(x1))))))))))
   4(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 4(1(1(4(3(2(2(3(5(2(1(3(x1))))))))))))
   0(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   2(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3(2(2(3(4(1(2(1(0(3(1(2(3(2(1(1(x1))))))))))))))))
   1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1(1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))))
   2(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4(1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))))
   1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))
   5(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 5(1(2(2(3(1(5(2(5(1(1(3(4(2(4(0(5(5(x1))))))))))))))))))
   0(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2(4(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(35) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   2^1(4(4(5(4(4(3(x1))))))) -> 2^1(4(2(3(4(2(2(x1)))))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(0(x_1)) = 0
   POL(0^1(x_1)) = 0
   POL(1(x_1)) = 0
   POL(2(x_1)) = 0
   POL(2^1(x_1)) = x_1
   POL(3(x_1)) = 0
   POL(4(x_1)) = x_1
   POL(4^1(x_1)) = 0
   POL(5(x_1)) = 1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   2(4(4(5(4(4(3(x1))))))) -> 2(4(2(3(4(2(2(x1)))))))
   2(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4(1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))))
   4(4(1(4(0(0(1(3(x1)))))))) -> 4(1(2(3(4(2(5(3(x1))))))))
   4(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0(1(0(2(5(0(5(3(5(4(x1))))))))))
   0(0(1(1(x1)))) -> 2(2(1(3(x1))))
   0(4(5(2(1(2(0(1(x1)))))))) -> 0(1(5(4(2(5(0(0(x1))))))))
   0(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   0(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2(4(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))))
   4(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 4(1(1(4(3(2(2(3(5(2(1(3(x1))))))))))))
   2(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3(2(2(3(4(1(2(1(0(3(1(2(3(2(1(1(x1))))))))))))))))
   4(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 1(4(3(3(4(3(3(1(0(0(x1))))))))))
   3(4(3(1(1(x1))))) -> 3(4(0(3(1(x1)))))
   1(3(1(1(0(4(x1)))))) -> 1(3(0(2(0(4(x1))))))
   1(4(0(4(x1)))) -> 1(2(3(1(x1))))
   1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1(1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))))
   1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))


----------------------------------------

(36)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   2^1(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4^1(1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))))
   4^1(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0^1(1(0(2(5(0(5(3(5(4(x1))))))))))
   0^1(0(1(1(x1)))) -> 2^1(2(1(3(x1))))
   0^1(4(5(2(1(2(0(1(x1)))))))) -> 0^1(1(5(4(2(5(0(0(x1))))))))
   0^1(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0^1(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2^1(4(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))))

The TRS R consists of the following rules:

   0(0(1(1(x1)))) -> 2(2(1(3(x1))))
   1(4(0(4(x1)))) -> 1(2(3(1(x1))))
   3(4(3(1(1(x1))))) -> 3(4(0(3(1(x1)))))
   1(3(1(1(0(4(x1)))))) -> 1(3(0(2(0(4(x1))))))
   2(4(4(5(4(4(3(x1))))))) -> 2(4(2(3(4(2(2(x1)))))))
   5(5(4(2(0(2(3(x1))))))) -> 5(2(4(1(2(3(3(x1)))))))
   0(4(5(2(1(2(0(1(x1)))))))) -> 0(1(5(4(2(5(0(0(x1))))))))
   4(4(1(4(0(0(1(3(x1)))))))) -> 4(1(2(3(4(2(5(3(x1))))))))
   4(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 1(4(3(3(4(3(3(1(0(0(x1))))))))))
   4(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0(1(0(2(5(0(5(3(5(4(x1))))))))))
   4(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 4(1(1(4(3(2(2(3(5(2(1(3(x1))))))))))))
   0(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   2(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3(2(2(3(4(1(2(1(0(3(1(2(3(2(1(1(x1))))))))))))))))
   1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1(1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))))
   2(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4(1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))))
   1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))
   5(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 5(1(2(2(3(1(5(2(5(1(1(3(4(2(4(0(5(5(x1))))))))))))))))))
   0(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2(4(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(37) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   2^1(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4^1(1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(0(x_1)) = 0
   POL(0^1(x_1)) = 0
   POL(1(x_1)) = 0
   POL(2(x_1)) = x_1
   POL(2^1(x_1)) = x_1
   POL(3(x_1)) = 0
   POL(4(x_1)) = x_1
   POL(4^1(x_1)) = 0
   POL(5(x_1)) = 1 + x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   2(4(4(5(4(4(3(x1))))))) -> 2(4(2(3(4(2(2(x1)))))))
   2(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4(1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))))
   4(4(1(4(0(0(1(3(x1)))))))) -> 4(1(2(3(4(2(5(3(x1))))))))
   4(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0(1(0(2(5(0(5(3(5(4(x1))))))))))
   0(0(1(1(x1)))) -> 2(2(1(3(x1))))
   0(4(5(2(1(2(0(1(x1)))))))) -> 0(1(5(4(2(5(0(0(x1))))))))
   0(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   0(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2(4(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))))
   4(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 4(1(1(4(3(2(2(3(5(2(1(3(x1))))))))))))
   2(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3(2(2(3(4(1(2(1(0(3(1(2(3(2(1(1(x1))))))))))))))))
   4(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 1(4(3(3(4(3(3(1(0(0(x1))))))))))
   3(4(3(1(1(x1))))) -> 3(4(0(3(1(x1)))))
   1(3(1(1(0(4(x1)))))) -> 1(3(0(2(0(4(x1))))))
   1(4(0(4(x1)))) -> 1(2(3(1(x1))))
   1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1(1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))))
   1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))


----------------------------------------

(38)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   4^1(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0^1(1(0(2(5(0(5(3(5(4(x1))))))))))
   0^1(0(1(1(x1)))) -> 2^1(2(1(3(x1))))
   0^1(4(5(2(1(2(0(1(x1)))))))) -> 0^1(1(5(4(2(5(0(0(x1))))))))
   0^1(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0^1(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   0^1(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2^1(4(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))))

The TRS R consists of the following rules:

   0(0(1(1(x1)))) -> 2(2(1(3(x1))))
   1(4(0(4(x1)))) -> 1(2(3(1(x1))))
   3(4(3(1(1(x1))))) -> 3(4(0(3(1(x1)))))
   1(3(1(1(0(4(x1)))))) -> 1(3(0(2(0(4(x1))))))
   2(4(4(5(4(4(3(x1))))))) -> 2(4(2(3(4(2(2(x1)))))))
   5(5(4(2(0(2(3(x1))))))) -> 5(2(4(1(2(3(3(x1)))))))
   0(4(5(2(1(2(0(1(x1)))))))) -> 0(1(5(4(2(5(0(0(x1))))))))
   4(4(1(4(0(0(1(3(x1)))))))) -> 4(1(2(3(4(2(5(3(x1))))))))
   4(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 1(4(3(3(4(3(3(1(0(0(x1))))))))))
   4(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0(1(0(2(5(0(5(3(5(4(x1))))))))))
   4(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 4(1(1(4(3(2(2(3(5(2(1(3(x1))))))))))))
   0(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   2(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3(2(2(3(4(1(2(1(0(3(1(2(3(2(1(1(x1))))))))))))))))
   1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1(1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))))
   2(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4(1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))))
   1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))
   5(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 5(1(2(2(3(1(5(2(5(1(1(3(4(2(4(0(5(5(x1))))))))))))))))))
   0(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2(4(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(39) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 3 less nodes.
----------------------------------------

(40)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   0^1(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0^1(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   0^1(4(5(2(1(2(0(1(x1)))))))) -> 0^1(1(5(4(2(5(0(0(x1))))))))

The TRS R consists of the following rules:

   0(0(1(1(x1)))) -> 2(2(1(3(x1))))
   1(4(0(4(x1)))) -> 1(2(3(1(x1))))
   3(4(3(1(1(x1))))) -> 3(4(0(3(1(x1)))))
   1(3(1(1(0(4(x1)))))) -> 1(3(0(2(0(4(x1))))))
   2(4(4(5(4(4(3(x1))))))) -> 2(4(2(3(4(2(2(x1)))))))
   5(5(4(2(0(2(3(x1))))))) -> 5(2(4(1(2(3(3(x1)))))))
   0(4(5(2(1(2(0(1(x1)))))))) -> 0(1(5(4(2(5(0(0(x1))))))))
   4(4(1(4(0(0(1(3(x1)))))))) -> 4(1(2(3(4(2(5(3(x1))))))))
   4(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 1(4(3(3(4(3(3(1(0(0(x1))))))))))
   4(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0(1(0(2(5(0(5(3(5(4(x1))))))))))
   4(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 4(1(1(4(3(2(2(3(5(2(1(3(x1))))))))))))
   0(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   2(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3(2(2(3(4(1(2(1(0(3(1(2(3(2(1(1(x1))))))))))))))))
   1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1(1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))))
   2(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4(1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))))
   1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))
   5(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 5(1(2(2(3(1(5(2(5(1(1(3(4(2(4(0(5(5(x1))))))))))))))))))
   0(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2(4(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(41) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   0^1(4(5(2(1(2(0(1(x1)))))))) -> 0^1(1(5(4(2(5(0(0(x1))))))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(0(x_1)) = 1
   POL(0^1(x_1)) = x_1
   POL(1(x_1)) = 0
   POL(2(x_1)) = 1
   POL(3(x_1)) = 0
   POL(4(x_1)) = 1
   POL(5(x_1)) = 1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   3(4(3(1(1(x1))))) -> 3(4(0(3(1(x1)))))
   1(3(1(1(0(4(x1)))))) -> 1(3(0(2(0(4(x1))))))
   1(4(0(4(x1)))) -> 1(2(3(1(x1))))
   1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1(1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))))
   1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))
   2(4(4(5(4(4(3(x1))))))) -> 2(4(2(3(4(2(2(x1)))))))
   2(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4(1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))))
   4(4(1(4(0(0(1(3(x1)))))))) -> 4(1(2(3(4(2(5(3(x1))))))))
   4(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0(1(0(2(5(0(5(3(5(4(x1))))))))))
   0(0(1(1(x1)))) -> 2(2(1(3(x1))))
   0(4(5(2(1(2(0(1(x1)))))))) -> 0(1(5(4(2(5(0(0(x1))))))))
   0(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   0(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2(4(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))))
   4(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 4(1(1(4(3(2(2(3(5(2(1(3(x1))))))))))))
   4(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 1(4(3(3(4(3(3(1(0(0(x1))))))))))
   2(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3(2(2(3(4(1(2(1(0(3(1(2(3(2(1(1(x1))))))))))))))))


----------------------------------------

(42)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   0^1(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0^1(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))

The TRS R consists of the following rules:

   0(0(1(1(x1)))) -> 2(2(1(3(x1))))
   1(4(0(4(x1)))) -> 1(2(3(1(x1))))
   3(4(3(1(1(x1))))) -> 3(4(0(3(1(x1)))))
   1(3(1(1(0(4(x1)))))) -> 1(3(0(2(0(4(x1))))))
   2(4(4(5(4(4(3(x1))))))) -> 2(4(2(3(4(2(2(x1)))))))
   5(5(4(2(0(2(3(x1))))))) -> 5(2(4(1(2(3(3(x1)))))))
   0(4(5(2(1(2(0(1(x1)))))))) -> 0(1(5(4(2(5(0(0(x1))))))))
   4(4(1(4(0(0(1(3(x1)))))))) -> 4(1(2(3(4(2(5(3(x1))))))))
   4(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 1(4(3(3(4(3(3(1(0(0(x1))))))))))
   4(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0(1(0(2(5(0(5(3(5(4(x1))))))))))
   4(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 4(1(1(4(3(2(2(3(5(2(1(3(x1))))))))))))
   0(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   2(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3(2(2(3(4(1(2(1(0(3(1(2(3(2(1(1(x1))))))))))))))))
   1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1(1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))))
   2(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4(1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))))
   1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))
   5(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 5(1(2(2(3(1(5(2(5(1(1(3(4(2(4(0(5(5(x1))))))))))))))))))
   0(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2(4(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(43) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   0^1(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0^1(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(0(x_1)) = 0
   POL(0^1(x_1)) = x_1
   POL(1(x_1)) = 0
   POL(2(x_1)) = 0
   POL(3(x_1)) = 0
   POL(4(x_1)) = 0
   POL(5(x_1)) = 1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   3(4(3(1(1(x1))))) -> 3(4(0(3(1(x1)))))
   1(3(1(1(0(4(x1)))))) -> 1(3(0(2(0(4(x1))))))
   1(4(0(4(x1)))) -> 1(2(3(1(x1))))
   1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1(1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))))
   1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))
   2(4(4(5(4(4(3(x1))))))) -> 2(4(2(3(4(2(2(x1)))))))
   2(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4(1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))))
   4(4(1(4(0(0(1(3(x1)))))))) -> 4(1(2(3(4(2(5(3(x1))))))))
   4(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0(1(0(2(5(0(5(3(5(4(x1))))))))))
   0(0(1(1(x1)))) -> 2(2(1(3(x1))))
   0(4(5(2(1(2(0(1(x1)))))))) -> 0(1(5(4(2(5(0(0(x1))))))))
   0(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   0(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2(4(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))))
   4(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 4(1(1(4(3(2(2(3(5(2(1(3(x1))))))))))))
   4(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 1(4(3(3(4(3(3(1(0(0(x1))))))))))
   2(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3(2(2(3(4(1(2(1(0(3(1(2(3(2(1(1(x1))))))))))))))))


----------------------------------------

(44)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   0(0(1(1(x1)))) -> 2(2(1(3(x1))))
   1(4(0(4(x1)))) -> 1(2(3(1(x1))))
   3(4(3(1(1(x1))))) -> 3(4(0(3(1(x1)))))
   1(3(1(1(0(4(x1)))))) -> 1(3(0(2(0(4(x1))))))
   2(4(4(5(4(4(3(x1))))))) -> 2(4(2(3(4(2(2(x1)))))))
   5(5(4(2(0(2(3(x1))))))) -> 5(2(4(1(2(3(3(x1)))))))
   0(4(5(2(1(2(0(1(x1)))))))) -> 0(1(5(4(2(5(0(0(x1))))))))
   4(4(1(4(0(0(1(3(x1)))))))) -> 4(1(2(3(4(2(5(3(x1))))))))
   4(0(5(5(3(2(1(0(0(0(x1)))))))))) -> 1(4(3(3(4(3(3(1(0(0(x1))))))))))
   4(1(5(2(4(0(1(1(0(1(x1)))))))))) -> 0(1(0(2(5(0(5(3(5(4(x1))))))))))
   4(5(2(2(5(1(5(0(4(0(1(1(x1)))))))))))) -> 4(1(1(4(3(2(2(3(5(2(1(3(x1))))))))))))
   0(5(1(3(5(4(4(0(5(1(2(0(0(5(3(x1))))))))))))))) -> 0(4(0(0(3(4(3(3(5(0(4(3(3(1(3(x1)))))))))))))))
   2(4(2(0(0(1(3(4(2(1(5(2(2(0(4(1(x1)))))))))))))))) -> 3(2(2(3(4(1(2(1(0(3(1(2(3(2(1(1(x1))))))))))))))))
   1(4(0(4(0(4(0(2(2(5(5(3(1(1(0(0(3(x1))))))))))))))))) -> 1(1(0(0(3(4(4(4(4(4(2(3(3(1(0(4(3(x1)))))))))))))))))
   2(2(5(1(1(3(5(4(0(5(5(2(4(1(4(4(1(x1))))))))))))))))) -> 4(1(1(2(3(3(1(1(4(5(3(1(3(2(4(0(2(x1)))))))))))))))))
   1(0(3(3(1(4(3(3(5(0(4(2(4(3(4(2(0(2(x1)))))))))))))))))) -> 1(0(5(1(0(2(0(0(4(0(2(5(0(2(5(2(2(2(x1))))))))))))))))))
   5(4(2(2(4(2(1(1(0(5(1(5(2(4(0(1(3(5(x1)))))))))))))))))) -> 5(1(2(2(3(1(5(2(5(1(1(3(4(2(4(0(5(5(x1))))))))))))))))))
   0(1(2(4(3(4(2(1(1(0(4(5(4(0(4(5(4(5(3(4(1(x1))))))))))))))))))))) -> 2(4(0(1(5(0(1(2(3(0(4(1(4(1(5(3(4(1(5(0(2(x1)))))))))))))))))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(45) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(46)
YES
