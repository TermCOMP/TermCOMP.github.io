YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/hYAEi.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) AND
    (5) QDP
        (6) UsableRulesProof [EQUIVALENT, 0 ms]
        (7) QDP
        (8) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (9) YES
    (10) QDP
        (11) UsableRulesProof [EQUIVALENT, 0 ms]
        (12) QDP
        (13) QDPOrderProof [EQUIVALENT, 3 ms]
        (14) QDP
        (15) PisEmptyProof [EQUIVALENT, 0 ms]
        (16) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(x1) -> b(c(x1))
   a(b(x1)) -> b(a(x1))
   d(c(x1)) -> d(a(x1))
   a(c(x1)) -> c(a(x1))

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(b(x1)) -> A(x1)
   D(c(x1)) -> D(a(x1))
   D(c(x1)) -> A(x1)
   A(c(x1)) -> A(x1)

The TRS R consists of the following rules:

   a(x1) -> b(c(x1))
   a(b(x1)) -> b(a(x1))
   d(c(x1)) -> d(a(x1))
   a(c(x1)) -> c(a(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 1 less node.
----------------------------------------

(4)
Complex Obligation (AND)

----------------------------------------

(5)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(c(x1)) -> A(x1)
   A(b(x1)) -> A(x1)

The TRS R consists of the following rules:

   a(x1) -> b(c(x1))
   a(b(x1)) -> b(a(x1))
   d(c(x1)) -> d(a(x1))
   a(c(x1)) -> c(a(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(6) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(c(x1)) -> A(x1)
   A(b(x1)) -> A(x1)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*A(c(x1)) -> A(x1)
The graph contains the following edges 1 > 1


*A(b(x1)) -> A(x1)
The graph contains the following edges 1 > 1


----------------------------------------

(9)
YES

----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   D(c(x1)) -> D(a(x1))

The TRS R consists of the following rules:

   a(x1) -> b(c(x1))
   a(b(x1)) -> b(a(x1))
   d(c(x1)) -> d(a(x1))
   a(c(x1)) -> c(a(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   D(c(x1)) -> D(a(x1))

The TRS R consists of the following rules:

   a(x1) -> b(c(x1))
   a(b(x1)) -> b(a(x1))
   a(c(x1)) -> c(a(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   D(c(x1)) -> D(a(x1))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(D(x_1)) = x_1
   POL(a(x_1)) = x_1
   POL(b(x_1)) = 0
   POL(c(x_1)) = 1 + x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   a(x1) -> b(c(x1))
   a(b(x1)) -> b(a(x1))
   a(c(x1)) -> c(a(x1))


----------------------------------------

(14)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   a(x1) -> b(c(x1))
   a(b(x1)) -> b(a(x1))
   a(c(x1)) -> c(a(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(16)
YES
