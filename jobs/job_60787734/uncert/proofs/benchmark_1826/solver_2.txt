YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/DooQ2.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRS Reverse [EQUIVALENT, 0 ms]
(2) QTRS
(3) RFCMatchBoundsTRSProof [EQUIVALENT, 0 ms]
(4) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   b(c(a(b(b(c(x1)))))) -> a(b(c(b(b(c(a(x1)))))))

Q is empty.

----------------------------------------

(1) QTRS Reverse (EQUIVALENT)
We applied the QTRS Reverse Processor [REVERSE].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   c(b(b(a(c(b(x1)))))) -> a(c(b(b(c(b(a(x1)))))))

Q is empty.

----------------------------------------

(3) RFCMatchBoundsTRSProof (EQUIVALENT)
Termination of the TRS R could be shown with a Match Bound [MATCHBOUNDS1,MATCHBOUNDS2] of 0. This implies Q-termination of R.
The following rules were used to construct the certificate:

   c(b(b(a(c(b(x1)))))) -> a(c(b(b(c(b(a(x1)))))))

The certificate found is represented by the following graph.
The certificate consists of the following enumerated nodes:
9, 10, 17, 18, 19, 20, 21, 22

Node 9 is start node and node 10 is final node.

Those nodes are connected through the following edges:

* 9 to 17 labelled a_1(0)* 10 to 10 labelled #_1(0)* 17 to 18 labelled c_1(0)* 18 to 19 labelled b_1(0)* 19 to 20 labelled b_1(0)* 20 to 21 labelled c_1(0)* 21 to 22 labelled b_1(0)* 22 to 10 labelled a_1(0)


----------------------------------------

(4)
YES
