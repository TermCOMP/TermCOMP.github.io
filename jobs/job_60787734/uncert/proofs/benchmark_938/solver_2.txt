YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/nQzvk.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRS Reverse [EQUIVALENT, 0 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 36 ms]
(4) QTRS
(5) DependencyPairsProof [EQUIVALENT, 0 ms]
(6) QDP
(7) DependencyGraphProof [EQUIVALENT, 0 ms]
(8) QDP
(9) QDPOrderProof [EQUIVALENT, 25 ms]
(10) QDP
(11) DependencyGraphProof [EQUIVALENT, 0 ms]
(12) QDP
(13) UsableRulesProof [EQUIVALENT, 0 ms]
(14) QDP
(15) QDPSizeChangeProof [EQUIVALENT, 0 ms]
(16) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(b(c(a(x1)))) -> b(a(c(b(a(b(x1))))))
   a(d(x1)) -> c(x1)
   a(f(f(x1))) -> g(x1)
   b(g(x1)) -> g(b(x1))
   c(x1) -> f(f(x1))
   c(a(c(x1))) -> b(c(a(b(c(x1)))))
   c(d(x1)) -> a(a(x1))
   g(x1) -> c(a(x1))
   g(x1) -> d(d(d(d(x1))))

Q is empty.

----------------------------------------

(1) QTRS Reverse (EQUIVALENT)
We applied the QTRS Reverse Processor [REVERSE].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(c(b(a(x1)))) -> b(a(b(c(a(b(x1))))))
   d(a(x1)) -> c(x1)
   f(f(a(x1))) -> g(x1)
   g(b(x1)) -> b(g(x1))
   c(x1) -> f(f(x1))
   c(a(c(x1))) -> c(b(a(c(b(x1)))))
   d(c(x1)) -> a(a(x1))
   g(x1) -> a(c(x1))
   g(x1) -> d(d(d(d(x1))))

Q is empty.

----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(a(x_1)) = 12 + x_1
   POL(b(x_1)) = x_1
   POL(c(x_1)) = 18 + x_1
   POL(d(x_1)) = 7 + x_1
   POL(f(x_1)) = 9 + x_1
   POL(g(x_1)) = 30 + x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   d(a(x1)) -> c(x1)
   d(c(x1)) -> a(a(x1))
   g(x1) -> d(d(d(d(x1))))




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(c(b(a(x1)))) -> b(a(b(c(a(b(x1))))))
   f(f(a(x1))) -> g(x1)
   g(b(x1)) -> b(g(x1))
   c(x1) -> f(f(x1))
   c(a(c(x1))) -> c(b(a(c(b(x1)))))
   g(x1) -> a(c(x1))

Q is empty.

----------------------------------------

(5) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(c(b(a(x1)))) -> A(b(c(a(b(x1)))))
   A(c(b(a(x1)))) -> C(a(b(x1)))
   A(c(b(a(x1)))) -> A(b(x1))
   F(f(a(x1))) -> G(x1)
   G(b(x1)) -> G(x1)
   C(x1) -> F(f(x1))
   C(x1) -> F(x1)
   C(a(c(x1))) -> C(b(a(c(b(x1)))))
   C(a(c(x1))) -> A(c(b(x1)))
   C(a(c(x1))) -> C(b(x1))
   G(x1) -> A(c(x1))
   G(x1) -> C(x1)

The TRS R consists of the following rules:

   a(c(b(a(x1)))) -> b(a(b(c(a(b(x1))))))
   f(f(a(x1))) -> g(x1)
   g(b(x1)) -> b(g(x1))
   c(x1) -> f(f(x1))
   c(a(c(x1))) -> c(b(a(c(b(x1)))))
   g(x1) -> a(c(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 2 less nodes.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(c(b(a(x1)))) -> C(a(b(x1)))
   C(x1) -> F(f(x1))
   F(f(a(x1))) -> G(x1)
   G(b(x1)) -> G(x1)
   G(x1) -> A(c(x1))
   G(x1) -> C(x1)
   C(x1) -> F(x1)
   C(a(c(x1))) -> C(b(a(c(b(x1)))))
   C(a(c(x1))) -> A(c(b(x1)))
   C(a(c(x1))) -> C(b(x1))

The TRS R consists of the following rules:

   a(c(b(a(x1)))) -> b(a(b(c(a(b(x1))))))
   f(f(a(x1))) -> g(x1)
   g(b(x1)) -> b(g(x1))
   c(x1) -> f(f(x1))
   c(a(c(x1))) -> c(b(a(c(b(x1)))))
   g(x1) -> a(c(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   G(x1) -> A(c(x1))
   G(x1) -> C(x1)
   C(a(c(x1))) -> A(c(b(x1)))
   C(a(c(x1))) -> C(b(x1))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(A(x_1)) = x_1
   POL(C(x_1)) = x_1
   POL(F(x_1)) = x_1
   POL(G(x_1)) = 1 + x_1
   POL(a(x_1)) = 1 + x_1
   POL(b(x_1)) = x_1
   POL(c(x_1)) = x_1
   POL(f(x_1)) = x_1
   POL(g(x_1)) = 1 + x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   f(f(a(x1))) -> g(x1)
   c(x1) -> f(f(x1))
   c(a(c(x1))) -> c(b(a(c(b(x1)))))
   a(c(b(a(x1)))) -> b(a(b(c(a(b(x1))))))
   g(b(x1)) -> b(g(x1))
   g(x1) -> a(c(x1))


----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(c(b(a(x1)))) -> C(a(b(x1)))
   C(x1) -> F(f(x1))
   F(f(a(x1))) -> G(x1)
   G(b(x1)) -> G(x1)
   C(x1) -> F(x1)
   C(a(c(x1))) -> C(b(a(c(b(x1)))))

The TRS R consists of the following rules:

   a(c(b(a(x1)))) -> b(a(b(c(a(b(x1))))))
   f(f(a(x1))) -> g(x1)
   g(b(x1)) -> b(g(x1))
   c(x1) -> f(f(x1))
   c(a(c(x1))) -> c(b(a(c(b(x1)))))
   g(x1) -> a(c(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 5 less nodes.
----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(b(x1)) -> G(x1)

The TRS R consists of the following rules:

   a(c(b(a(x1)))) -> b(a(b(c(a(b(x1))))))
   f(f(a(x1))) -> g(x1)
   g(b(x1)) -> b(g(x1))
   c(x1) -> f(f(x1))
   c(a(c(x1))) -> c(b(a(c(b(x1)))))
   g(x1) -> a(c(x1))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(b(x1)) -> G(x1)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*G(b(x1)) -> G(x1)
The graph contains the following edges 1 > 1


----------------------------------------

(16)
YES
