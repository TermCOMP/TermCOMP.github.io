YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/hrwRO.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRS Reverse [EQUIVALENT, 0 ms]
(2) QTRS
(3) RFCMatchBoundsTRSProof [EQUIVALENT, 0 ms]
(4) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   b(a(b(c(c(b(x1)))))) -> a(b(b(c(c(b(a(x1)))))))

Q is empty.

----------------------------------------

(1) QTRS Reverse (EQUIVALENT)
We applied the QTRS Reverse Processor [REVERSE].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   b(c(c(b(a(b(x1)))))) -> a(b(c(c(b(b(a(x1)))))))

Q is empty.

----------------------------------------

(3) RFCMatchBoundsTRSProof (EQUIVALENT)
Termination of the TRS R could be shown with a Match Bound [MATCHBOUNDS1,MATCHBOUNDS2] of 0. This implies Q-termination of R.
The following rules were used to construct the certificate:

   b(c(c(b(a(b(x1)))))) -> a(b(c(c(b(b(a(x1)))))))

The certificate found is represented by the following graph.
The certificate consists of the following enumerated nodes:
1, 2, 5, 6, 7, 8, 9, 10

Node 1 is start node and node 2 is final node.

Those nodes are connected through the following edges:

* 1 to 5 labelled a_1(0)* 2 to 2 labelled #_1(0)* 5 to 6 labelled b_1(0)* 6 to 7 labelled c_1(0)* 7 to 8 labelled c_1(0)* 8 to 9 labelled b_1(0)* 9 to 10 labelled b_1(0)* 10 to 2 labelled a_1(0)


----------------------------------------

(4)
YES
