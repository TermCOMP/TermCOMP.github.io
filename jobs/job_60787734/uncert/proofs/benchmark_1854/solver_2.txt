YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/U12qV.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) FlatCCProof [EQUIVALENT, 0 ms]
(2) QTRS
(3) RootLabelingProof [EQUIVALENT, 0 ms]
(4) QTRS
(5) QTRSRRRProof [EQUIVALENT, 31 ms]
(6) QTRS
(7) DependencyPairsProof [EQUIVALENT, 24 ms]
(8) QDP
(9) QDPOrderProof [EQUIVALENT, 325 ms]
(10) QDP
(11) DependencyGraphProof [EQUIVALENT, 0 ms]
(12) AND
    (13) QDP
        (14) QDPOrderProof [EQUIVALENT, 48 ms]
        (15) QDP
        (16) DependencyGraphProof [EQUIVALENT, 0 ms]
        (17) TRUE
    (18) QDP
        (19) UsableRulesProof [EQUIVALENT, 0 ms]
        (20) QDP
        (21) QDPOrderProof [EQUIVALENT, 0 ms]
        (22) QDP
        (23) PisEmptyProof [EQUIVALENT, 0 ms]
        (24) YES
    (25) QDP
        (26) QDPOrderProof [EQUIVALENT, 50 ms]
        (27) QDP
        (28) PisEmptyProof [EQUIVALENT, 0 ms]
        (29) YES
    (30) QDP
        (31) QDPOrderProof [EQUIVALENT, 53 ms]
        (32) QDP
        (33) PisEmptyProof [EQUIVALENT, 0 ms]
        (34) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   s(b(x1)) -> b(s(s(s(x1))))
   s(b(s(x1))) -> b(t(x1))
   t(b(x1)) -> b(s(x1))
   t(b(s(x1))) -> u(t(b(x1)))
   b(u(x1)) -> b(s(x1))
   t(s(x1)) -> t(t(x1))
   t(u(x1)) -> u(t(x1))
   s(u(x1)) -> s(s(x1))

Q is empty.

----------------------------------------

(1) FlatCCProof (EQUIVALENT)
We used flat context closure [ROOTLAB]
As Q is empty the flat context closure was sound AND complete.

----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   b(u(x1)) -> b(s(x1))
   t(s(x1)) -> t(t(x1))
   s(u(x1)) -> s(s(x1))
   s(s(b(x1))) -> s(b(s(s(s(x1)))))
   b(s(b(x1))) -> b(b(s(s(s(x1)))))
   t(s(b(x1))) -> t(b(s(s(s(x1)))))
   u(s(b(x1))) -> u(b(s(s(s(x1)))))
   s(s(b(s(x1)))) -> s(b(t(x1)))
   b(s(b(s(x1)))) -> b(b(t(x1)))
   t(s(b(s(x1)))) -> t(b(t(x1)))
   u(s(b(s(x1)))) -> u(b(t(x1)))
   s(t(b(x1))) -> s(b(s(x1)))
   b(t(b(x1))) -> b(b(s(x1)))
   t(t(b(x1))) -> t(b(s(x1)))
   u(t(b(x1))) -> u(b(s(x1)))
   s(t(b(s(x1)))) -> s(u(t(b(x1))))
   b(t(b(s(x1)))) -> b(u(t(b(x1))))
   t(t(b(s(x1)))) -> t(u(t(b(x1))))
   u(t(b(s(x1)))) -> u(u(t(b(x1))))
   s(t(u(x1))) -> s(u(t(x1)))
   b(t(u(x1))) -> b(u(t(x1)))
   t(t(u(x1))) -> t(u(t(x1)))
   u(t(u(x1))) -> u(u(t(x1)))

Q is empty.

----------------------------------------

(3) RootLabelingProof (EQUIVALENT)
We used plain root labeling [ROOTLAB] with the following heuristic:
LabelAll: All function symbols get labeled

As Q is empty the root labeling was sound AND complete.

----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   b_{u_1}(u_{b_1}(x1)) -> b_{s_1}(s_{b_1}(x1))
   b_{u_1}(u_{u_1}(x1)) -> b_{s_1}(s_{u_1}(x1))
   b_{u_1}(u_{s_1}(x1)) -> b_{s_1}(s_{s_1}(x1))
   b_{u_1}(u_{t_1}(x1)) -> b_{s_1}(s_{t_1}(x1))
   t_{s_1}(s_{b_1}(x1)) -> t_{t_1}(t_{b_1}(x1))
   t_{s_1}(s_{u_1}(x1)) -> t_{t_1}(t_{u_1}(x1))
   t_{s_1}(s_{s_1}(x1)) -> t_{t_1}(t_{s_1}(x1))
   t_{s_1}(s_{t_1}(x1)) -> t_{t_1}(t_{t_1}(x1))
   s_{u_1}(u_{b_1}(x1)) -> s_{s_1}(s_{b_1}(x1))
   s_{u_1}(u_{u_1}(x1)) -> s_{s_1}(s_{u_1}(x1))
   s_{u_1}(u_{s_1}(x1)) -> s_{s_1}(s_{s_1}(x1))
   s_{u_1}(u_{t_1}(x1)) -> s_{s_1}(s_{t_1}(x1))
   s_{s_1}(s_{b_1}(b_{b_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{u_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{s_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{t_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{b_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{u_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{s_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{t_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{b_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{u_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{s_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{t_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   u_{s_1}(s_{b_1}(b_{b_1}(x1))) -> u_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   u_{s_1}(s_{b_1}(b_{u_1}(x1))) -> u_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   u_{s_1}(s_{b_1}(b_{s_1}(x1))) -> u_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   u_{s_1}(s_{b_1}(b_{t_1}(x1))) -> u_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{b_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{u_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{s_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{t_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{b_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{u_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{s_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{t_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{b_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{u_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{s_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{t_1}(x1)))
   u_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> u_{b_1}(b_{t_1}(t_{b_1}(x1)))
   u_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> u_{b_1}(b_{t_1}(t_{u_1}(x1)))
   u_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> u_{b_1}(b_{t_1}(t_{s_1}(x1)))
   u_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> u_{b_1}(b_{t_1}(t_{t_1}(x1)))
   s_{t_1}(t_{b_1}(b_{b_1}(x1))) -> s_{b_1}(b_{s_1}(s_{b_1}(x1)))
   s_{t_1}(t_{b_1}(b_{u_1}(x1))) -> s_{b_1}(b_{s_1}(s_{u_1}(x1)))
   s_{t_1}(t_{b_1}(b_{s_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(x1)))
   s_{t_1}(t_{b_1}(b_{t_1}(x1))) -> s_{b_1}(b_{s_1}(s_{t_1}(x1)))
   b_{t_1}(t_{b_1}(b_{b_1}(x1))) -> b_{b_1}(b_{s_1}(s_{b_1}(x1)))
   b_{t_1}(t_{b_1}(b_{u_1}(x1))) -> b_{b_1}(b_{s_1}(s_{u_1}(x1)))
   b_{t_1}(t_{b_1}(b_{s_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(x1)))
   b_{t_1}(t_{b_1}(b_{t_1}(x1))) -> b_{b_1}(b_{s_1}(s_{t_1}(x1)))
   t_{t_1}(t_{b_1}(b_{b_1}(x1))) -> t_{b_1}(b_{s_1}(s_{b_1}(x1)))
   t_{t_1}(t_{b_1}(b_{u_1}(x1))) -> t_{b_1}(b_{s_1}(s_{u_1}(x1)))
   t_{t_1}(t_{b_1}(b_{s_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(x1)))
   t_{t_1}(t_{b_1}(b_{t_1}(x1))) -> t_{b_1}(b_{s_1}(s_{t_1}(x1)))
   u_{t_1}(t_{b_1}(b_{b_1}(x1))) -> u_{b_1}(b_{s_1}(s_{b_1}(x1)))
   u_{t_1}(t_{b_1}(b_{u_1}(x1))) -> u_{b_1}(b_{s_1}(s_{u_1}(x1)))
   u_{t_1}(t_{b_1}(b_{s_1}(x1))) -> u_{b_1}(b_{s_1}(s_{s_1}(x1)))
   u_{t_1}(t_{b_1}(b_{t_1}(x1))) -> u_{b_1}(b_{s_1}(s_{t_1}(x1)))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   s_{t_1}(t_{u_1}(u_{b_1}(x1))) -> s_{u_1}(u_{t_1}(t_{b_1}(x1)))
   s_{t_1}(t_{u_1}(u_{u_1}(x1))) -> s_{u_1}(u_{t_1}(t_{u_1}(x1)))
   s_{t_1}(t_{u_1}(u_{s_1}(x1))) -> s_{u_1}(u_{t_1}(t_{s_1}(x1)))
   s_{t_1}(t_{u_1}(u_{t_1}(x1))) -> s_{u_1}(u_{t_1}(t_{t_1}(x1)))
   b_{t_1}(t_{u_1}(u_{b_1}(x1))) -> b_{u_1}(u_{t_1}(t_{b_1}(x1)))
   b_{t_1}(t_{u_1}(u_{u_1}(x1))) -> b_{u_1}(u_{t_1}(t_{u_1}(x1)))
   b_{t_1}(t_{u_1}(u_{s_1}(x1))) -> b_{u_1}(u_{t_1}(t_{s_1}(x1)))
   b_{t_1}(t_{u_1}(u_{t_1}(x1))) -> b_{u_1}(u_{t_1}(t_{t_1}(x1)))
   t_{t_1}(t_{u_1}(u_{b_1}(x1))) -> t_{u_1}(u_{t_1}(t_{b_1}(x1)))
   t_{t_1}(t_{u_1}(u_{u_1}(x1))) -> t_{u_1}(u_{t_1}(t_{u_1}(x1)))
   t_{t_1}(t_{u_1}(u_{s_1}(x1))) -> t_{u_1}(u_{t_1}(t_{s_1}(x1)))
   t_{t_1}(t_{u_1}(u_{t_1}(x1))) -> t_{u_1}(u_{t_1}(t_{t_1}(x1)))
   u_{t_1}(t_{u_1}(u_{b_1}(x1))) -> u_{u_1}(u_{t_1}(t_{b_1}(x1)))
   u_{t_1}(t_{u_1}(u_{u_1}(x1))) -> u_{u_1}(u_{t_1}(t_{u_1}(x1)))
   u_{t_1}(t_{u_1}(u_{s_1}(x1))) -> u_{u_1}(u_{t_1}(t_{s_1}(x1)))
   u_{t_1}(t_{u_1}(u_{t_1}(x1))) -> u_{u_1}(u_{t_1}(t_{t_1}(x1)))

Q is empty.

----------------------------------------

(5) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(b_{b_1}(x_1)) = x_1
   POL(b_{s_1}(x_1)) = x_1
   POL(b_{t_1}(x_1)) = x_1
   POL(b_{u_1}(x_1)) = x_1
   POL(s_{b_1}(x_1)) = x_1
   POL(s_{s_1}(x_1)) = x_1
   POL(s_{t_1}(x_1)) = x_1
   POL(s_{u_1}(x_1)) = x_1
   POL(t_{b_1}(x_1)) = x_1
   POL(t_{s_1}(x_1)) = x_1
   POL(t_{t_1}(x_1)) = x_1
   POL(t_{u_1}(x_1)) = x_1
   POL(u_{b_1}(x_1)) = x_1
   POL(u_{s_1}(x_1)) = 1 + x_1
   POL(u_{t_1}(x_1)) = x_1
   POL(u_{u_1}(x_1)) = x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   b_{u_1}(u_{s_1}(x1)) -> b_{s_1}(s_{s_1}(x1))
   s_{u_1}(u_{s_1}(x1)) -> s_{s_1}(s_{s_1}(x1))
   u_{s_1}(s_{b_1}(b_{b_1}(x1))) -> u_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   u_{s_1}(s_{b_1}(b_{u_1}(x1))) -> u_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   u_{s_1}(s_{b_1}(b_{s_1}(x1))) -> u_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   u_{s_1}(s_{b_1}(b_{t_1}(x1))) -> u_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   u_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> u_{b_1}(b_{t_1}(t_{b_1}(x1)))
   u_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> u_{b_1}(b_{t_1}(t_{u_1}(x1)))
   u_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> u_{b_1}(b_{t_1}(t_{s_1}(x1)))
   u_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> u_{b_1}(b_{t_1}(t_{t_1}(x1)))
   s_{t_1}(t_{u_1}(u_{s_1}(x1))) -> s_{u_1}(u_{t_1}(t_{s_1}(x1)))
   b_{t_1}(t_{u_1}(u_{s_1}(x1))) -> b_{u_1}(u_{t_1}(t_{s_1}(x1)))
   t_{t_1}(t_{u_1}(u_{s_1}(x1))) -> t_{u_1}(u_{t_1}(t_{s_1}(x1)))
   u_{t_1}(t_{u_1}(u_{s_1}(x1))) -> u_{u_1}(u_{t_1}(t_{s_1}(x1)))




----------------------------------------

(6)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   b_{u_1}(u_{b_1}(x1)) -> b_{s_1}(s_{b_1}(x1))
   b_{u_1}(u_{u_1}(x1)) -> b_{s_1}(s_{u_1}(x1))
   b_{u_1}(u_{t_1}(x1)) -> b_{s_1}(s_{t_1}(x1))
   t_{s_1}(s_{b_1}(x1)) -> t_{t_1}(t_{b_1}(x1))
   t_{s_1}(s_{u_1}(x1)) -> t_{t_1}(t_{u_1}(x1))
   t_{s_1}(s_{s_1}(x1)) -> t_{t_1}(t_{s_1}(x1))
   t_{s_1}(s_{t_1}(x1)) -> t_{t_1}(t_{t_1}(x1))
   s_{u_1}(u_{b_1}(x1)) -> s_{s_1}(s_{b_1}(x1))
   s_{u_1}(u_{u_1}(x1)) -> s_{s_1}(s_{u_1}(x1))
   s_{u_1}(u_{t_1}(x1)) -> s_{s_1}(s_{t_1}(x1))
   s_{s_1}(s_{b_1}(b_{b_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{u_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{s_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{t_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{b_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{u_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{s_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{t_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{b_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{u_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{s_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{t_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{b_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{u_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{s_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{t_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{b_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{u_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{s_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{t_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{b_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{u_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{s_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{t_1}(x1)))
   s_{t_1}(t_{b_1}(b_{b_1}(x1))) -> s_{b_1}(b_{s_1}(s_{b_1}(x1)))
   s_{t_1}(t_{b_1}(b_{u_1}(x1))) -> s_{b_1}(b_{s_1}(s_{u_1}(x1)))
   s_{t_1}(t_{b_1}(b_{s_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(x1)))
   s_{t_1}(t_{b_1}(b_{t_1}(x1))) -> s_{b_1}(b_{s_1}(s_{t_1}(x1)))
   b_{t_1}(t_{b_1}(b_{b_1}(x1))) -> b_{b_1}(b_{s_1}(s_{b_1}(x1)))
   b_{t_1}(t_{b_1}(b_{u_1}(x1))) -> b_{b_1}(b_{s_1}(s_{u_1}(x1)))
   b_{t_1}(t_{b_1}(b_{s_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(x1)))
   b_{t_1}(t_{b_1}(b_{t_1}(x1))) -> b_{b_1}(b_{s_1}(s_{t_1}(x1)))
   t_{t_1}(t_{b_1}(b_{b_1}(x1))) -> t_{b_1}(b_{s_1}(s_{b_1}(x1)))
   t_{t_1}(t_{b_1}(b_{u_1}(x1))) -> t_{b_1}(b_{s_1}(s_{u_1}(x1)))
   t_{t_1}(t_{b_1}(b_{s_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(x1)))
   t_{t_1}(t_{b_1}(b_{t_1}(x1))) -> t_{b_1}(b_{s_1}(s_{t_1}(x1)))
   u_{t_1}(t_{b_1}(b_{b_1}(x1))) -> u_{b_1}(b_{s_1}(s_{b_1}(x1)))
   u_{t_1}(t_{b_1}(b_{u_1}(x1))) -> u_{b_1}(b_{s_1}(s_{u_1}(x1)))
   u_{t_1}(t_{b_1}(b_{s_1}(x1))) -> u_{b_1}(b_{s_1}(s_{s_1}(x1)))
   u_{t_1}(t_{b_1}(b_{t_1}(x1))) -> u_{b_1}(b_{s_1}(s_{t_1}(x1)))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   s_{t_1}(t_{u_1}(u_{b_1}(x1))) -> s_{u_1}(u_{t_1}(t_{b_1}(x1)))
   s_{t_1}(t_{u_1}(u_{u_1}(x1))) -> s_{u_1}(u_{t_1}(t_{u_1}(x1)))
   s_{t_1}(t_{u_1}(u_{t_1}(x1))) -> s_{u_1}(u_{t_1}(t_{t_1}(x1)))
   b_{t_1}(t_{u_1}(u_{b_1}(x1))) -> b_{u_1}(u_{t_1}(t_{b_1}(x1)))
   b_{t_1}(t_{u_1}(u_{u_1}(x1))) -> b_{u_1}(u_{t_1}(t_{u_1}(x1)))
   b_{t_1}(t_{u_1}(u_{t_1}(x1))) -> b_{u_1}(u_{t_1}(t_{t_1}(x1)))
   t_{t_1}(t_{u_1}(u_{b_1}(x1))) -> t_{u_1}(u_{t_1}(t_{b_1}(x1)))
   t_{t_1}(t_{u_1}(u_{u_1}(x1))) -> t_{u_1}(u_{t_1}(t_{u_1}(x1)))
   t_{t_1}(t_{u_1}(u_{t_1}(x1))) -> t_{u_1}(u_{t_1}(t_{t_1}(x1)))
   u_{t_1}(t_{u_1}(u_{b_1}(x1))) -> u_{u_1}(u_{t_1}(t_{b_1}(x1)))
   u_{t_1}(t_{u_1}(u_{u_1}(x1))) -> u_{u_1}(u_{t_1}(t_{u_1}(x1)))
   u_{t_1}(t_{u_1}(u_{t_1}(x1))) -> u_{u_1}(u_{t_1}(t_{t_1}(x1)))

Q is empty.

----------------------------------------

(7) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B_{U_1}(u_{b_1}(x1)) -> B_{S_1}(s_{b_1}(x1))
   B_{U_1}(u_{u_1}(x1)) -> B_{S_1}(s_{u_1}(x1))
   B_{U_1}(u_{u_1}(x1)) -> S_{U_1}(x1)
   B_{U_1}(u_{t_1}(x1)) -> B_{S_1}(s_{t_1}(x1))
   B_{U_1}(u_{t_1}(x1)) -> S_{T_1}(x1)
   T_{S_1}(s_{b_1}(x1)) -> T_{T_1}(t_{b_1}(x1))
   T_{S_1}(s_{u_1}(x1)) -> T_{T_1}(t_{u_1}(x1))
   T_{S_1}(s_{s_1}(x1)) -> T_{T_1}(t_{s_1}(x1))
   T_{S_1}(s_{s_1}(x1)) -> T_{S_1}(x1)
   T_{S_1}(s_{t_1}(x1)) -> T_{T_1}(t_{t_1}(x1))
   T_{S_1}(s_{t_1}(x1)) -> T_{T_1}(x1)
   S_{U_1}(u_{b_1}(x1)) -> S_{S_1}(s_{b_1}(x1))
   S_{U_1}(u_{u_1}(x1)) -> S_{S_1}(s_{u_1}(x1))
   S_{U_1}(u_{u_1}(x1)) -> S_{U_1}(x1)
   S_{U_1}(u_{t_1}(x1)) -> S_{S_1}(s_{t_1}(x1))
   S_{U_1}(u_{t_1}(x1)) -> S_{T_1}(x1)
   S_{S_1}(s_{b_1}(b_{b_1}(x1))) -> B_{S_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1))))
   S_{S_1}(s_{b_1}(b_{b_1}(x1))) -> S_{S_1}(s_{s_1}(s_{b_1}(x1)))
   S_{S_1}(s_{b_1}(b_{b_1}(x1))) -> S_{S_1}(s_{b_1}(x1))
   S_{S_1}(s_{b_1}(b_{u_1}(x1))) -> B_{S_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1))))
   S_{S_1}(s_{b_1}(b_{u_1}(x1))) -> S_{S_1}(s_{s_1}(s_{u_1}(x1)))
   S_{S_1}(s_{b_1}(b_{u_1}(x1))) -> S_{S_1}(s_{u_1}(x1))
   S_{S_1}(s_{b_1}(b_{u_1}(x1))) -> S_{U_1}(x1)
   S_{S_1}(s_{b_1}(b_{s_1}(x1))) -> B_{S_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1))))
   S_{S_1}(s_{b_1}(b_{s_1}(x1))) -> S_{S_1}(s_{s_1}(s_{s_1}(x1)))
   S_{S_1}(s_{b_1}(b_{s_1}(x1))) -> S_{S_1}(s_{s_1}(x1))
   S_{S_1}(s_{b_1}(b_{s_1}(x1))) -> S_{S_1}(x1)
   S_{S_1}(s_{b_1}(b_{t_1}(x1))) -> B_{S_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1))))
   S_{S_1}(s_{b_1}(b_{t_1}(x1))) -> S_{S_1}(s_{s_1}(s_{t_1}(x1)))
   S_{S_1}(s_{b_1}(b_{t_1}(x1))) -> S_{S_1}(s_{t_1}(x1))
   S_{S_1}(s_{b_1}(b_{t_1}(x1))) -> S_{T_1}(x1)
   B_{S_1}(s_{b_1}(b_{b_1}(x1))) -> B_{S_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1))))
   B_{S_1}(s_{b_1}(b_{b_1}(x1))) -> S_{S_1}(s_{s_1}(s_{b_1}(x1)))
   B_{S_1}(s_{b_1}(b_{b_1}(x1))) -> S_{S_1}(s_{b_1}(x1))
   B_{S_1}(s_{b_1}(b_{u_1}(x1))) -> B_{S_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1))))
   B_{S_1}(s_{b_1}(b_{u_1}(x1))) -> S_{S_1}(s_{s_1}(s_{u_1}(x1)))
   B_{S_1}(s_{b_1}(b_{u_1}(x1))) -> S_{S_1}(s_{u_1}(x1))
   B_{S_1}(s_{b_1}(b_{u_1}(x1))) -> S_{U_1}(x1)
   B_{S_1}(s_{b_1}(b_{s_1}(x1))) -> B_{S_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1))))
   B_{S_1}(s_{b_1}(b_{s_1}(x1))) -> S_{S_1}(s_{s_1}(s_{s_1}(x1)))
   B_{S_1}(s_{b_1}(b_{s_1}(x1))) -> S_{S_1}(s_{s_1}(x1))
   B_{S_1}(s_{b_1}(b_{s_1}(x1))) -> S_{S_1}(x1)
   B_{S_1}(s_{b_1}(b_{t_1}(x1))) -> B_{S_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1))))
   B_{S_1}(s_{b_1}(b_{t_1}(x1))) -> S_{S_1}(s_{s_1}(s_{t_1}(x1)))
   B_{S_1}(s_{b_1}(b_{t_1}(x1))) -> S_{S_1}(s_{t_1}(x1))
   B_{S_1}(s_{b_1}(b_{t_1}(x1))) -> S_{T_1}(x1)
   T_{S_1}(s_{b_1}(b_{b_1}(x1))) -> B_{S_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1))))
   T_{S_1}(s_{b_1}(b_{b_1}(x1))) -> S_{S_1}(s_{s_1}(s_{b_1}(x1)))
   T_{S_1}(s_{b_1}(b_{b_1}(x1))) -> S_{S_1}(s_{b_1}(x1))
   T_{S_1}(s_{b_1}(b_{u_1}(x1))) -> B_{S_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1))))
   T_{S_1}(s_{b_1}(b_{u_1}(x1))) -> S_{S_1}(s_{s_1}(s_{u_1}(x1)))
   T_{S_1}(s_{b_1}(b_{u_1}(x1))) -> S_{S_1}(s_{u_1}(x1))
   T_{S_1}(s_{b_1}(b_{u_1}(x1))) -> S_{U_1}(x1)
   T_{S_1}(s_{b_1}(b_{s_1}(x1))) -> B_{S_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1))))
   T_{S_1}(s_{b_1}(b_{s_1}(x1))) -> S_{S_1}(s_{s_1}(s_{s_1}(x1)))
   T_{S_1}(s_{b_1}(b_{s_1}(x1))) -> S_{S_1}(s_{s_1}(x1))
   T_{S_1}(s_{b_1}(b_{s_1}(x1))) -> S_{S_1}(x1)
   T_{S_1}(s_{b_1}(b_{t_1}(x1))) -> B_{S_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1))))
   T_{S_1}(s_{b_1}(b_{t_1}(x1))) -> S_{S_1}(s_{s_1}(s_{t_1}(x1)))
   T_{S_1}(s_{b_1}(b_{t_1}(x1))) -> S_{S_1}(s_{t_1}(x1))
   T_{S_1}(s_{b_1}(b_{t_1}(x1))) -> S_{T_1}(x1)
   S_{S_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> B_{T_1}(t_{b_1}(x1))
   S_{S_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> B_{T_1}(t_{u_1}(x1))
   S_{S_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> B_{T_1}(t_{s_1}(x1))
   S_{S_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> T_{S_1}(x1)
   S_{S_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> B_{T_1}(t_{t_1}(x1))
   S_{S_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> T_{T_1}(x1)
   B_{S_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> B_{T_1}(t_{b_1}(x1))
   B_{S_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> B_{T_1}(t_{u_1}(x1))
   B_{S_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> B_{T_1}(t_{s_1}(x1))
   B_{S_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> T_{S_1}(x1)
   B_{S_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> B_{T_1}(t_{t_1}(x1))
   B_{S_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> T_{T_1}(x1)
   T_{S_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> B_{T_1}(t_{b_1}(x1))
   T_{S_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> B_{T_1}(t_{u_1}(x1))
   T_{S_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> B_{T_1}(t_{s_1}(x1))
   T_{S_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> T_{S_1}(x1)
   T_{S_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> B_{T_1}(t_{t_1}(x1))
   T_{S_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> T_{T_1}(x1)
   S_{T_1}(t_{b_1}(b_{b_1}(x1))) -> B_{S_1}(s_{b_1}(x1))
   S_{T_1}(t_{b_1}(b_{u_1}(x1))) -> B_{S_1}(s_{u_1}(x1))
   S_{T_1}(t_{b_1}(b_{u_1}(x1))) -> S_{U_1}(x1)
   S_{T_1}(t_{b_1}(b_{s_1}(x1))) -> B_{S_1}(s_{s_1}(x1))
   S_{T_1}(t_{b_1}(b_{s_1}(x1))) -> S_{S_1}(x1)
   S_{T_1}(t_{b_1}(b_{t_1}(x1))) -> B_{S_1}(s_{t_1}(x1))
   S_{T_1}(t_{b_1}(b_{t_1}(x1))) -> S_{T_1}(x1)
   B_{T_1}(t_{b_1}(b_{b_1}(x1))) -> B_{S_1}(s_{b_1}(x1))
   B_{T_1}(t_{b_1}(b_{u_1}(x1))) -> B_{S_1}(s_{u_1}(x1))
   B_{T_1}(t_{b_1}(b_{u_1}(x1))) -> S_{U_1}(x1)
   B_{T_1}(t_{b_1}(b_{s_1}(x1))) -> B_{S_1}(s_{s_1}(x1))
   B_{T_1}(t_{b_1}(b_{s_1}(x1))) -> S_{S_1}(x1)
   B_{T_1}(t_{b_1}(b_{t_1}(x1))) -> B_{S_1}(s_{t_1}(x1))
   B_{T_1}(t_{b_1}(b_{t_1}(x1))) -> S_{T_1}(x1)
   T_{T_1}(t_{b_1}(b_{b_1}(x1))) -> B_{S_1}(s_{b_1}(x1))
   T_{T_1}(t_{b_1}(b_{u_1}(x1))) -> B_{S_1}(s_{u_1}(x1))
   T_{T_1}(t_{b_1}(b_{u_1}(x1))) -> S_{U_1}(x1)
   T_{T_1}(t_{b_1}(b_{s_1}(x1))) -> B_{S_1}(s_{s_1}(x1))
   T_{T_1}(t_{b_1}(b_{s_1}(x1))) -> S_{S_1}(x1)
   T_{T_1}(t_{b_1}(b_{t_1}(x1))) -> B_{S_1}(s_{t_1}(x1))
   T_{T_1}(t_{b_1}(b_{t_1}(x1))) -> S_{T_1}(x1)
   U_{T_1}(t_{b_1}(b_{b_1}(x1))) -> B_{S_1}(s_{b_1}(x1))
   U_{T_1}(t_{b_1}(b_{u_1}(x1))) -> B_{S_1}(s_{u_1}(x1))
   U_{T_1}(t_{b_1}(b_{u_1}(x1))) -> S_{U_1}(x1)
   U_{T_1}(t_{b_1}(b_{s_1}(x1))) -> B_{S_1}(s_{s_1}(x1))
   U_{T_1}(t_{b_1}(b_{s_1}(x1))) -> S_{S_1}(x1)
   U_{T_1}(t_{b_1}(b_{t_1}(x1))) -> B_{S_1}(s_{t_1}(x1))
   U_{T_1}(t_{b_1}(b_{t_1}(x1))) -> S_{T_1}(x1)
   S_{T_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> S_{U_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   S_{T_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> U_{T_1}(t_{b_1}(b_{b_1}(x1)))
   S_{T_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> S_{U_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   S_{T_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> U_{T_1}(t_{b_1}(b_{u_1}(x1)))
   S_{T_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> B_{U_1}(x1)
   S_{T_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> S_{U_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   S_{T_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> U_{T_1}(t_{b_1}(b_{s_1}(x1)))
   S_{T_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> B_{S_1}(x1)
   S_{T_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> S_{U_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   S_{T_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> U_{T_1}(t_{b_1}(b_{t_1}(x1)))
   S_{T_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> B_{T_1}(x1)
   B_{T_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> B_{U_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   B_{T_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> U_{T_1}(t_{b_1}(b_{b_1}(x1)))
   B_{T_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> B_{U_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   B_{T_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> U_{T_1}(t_{b_1}(b_{u_1}(x1)))
   B_{T_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> B_{U_1}(x1)
   B_{T_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> B_{U_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   B_{T_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> U_{T_1}(t_{b_1}(b_{s_1}(x1)))
   B_{T_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> B_{S_1}(x1)
   B_{T_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> B_{U_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   B_{T_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> U_{T_1}(t_{b_1}(b_{t_1}(x1)))
   B_{T_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> B_{T_1}(x1)
   T_{T_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> U_{T_1}(t_{b_1}(b_{b_1}(x1)))
   T_{T_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> U_{T_1}(t_{b_1}(b_{u_1}(x1)))
   T_{T_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> B_{U_1}(x1)
   T_{T_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> U_{T_1}(t_{b_1}(b_{s_1}(x1)))
   T_{T_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> B_{S_1}(x1)
   T_{T_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> U_{T_1}(t_{b_1}(b_{t_1}(x1)))
   T_{T_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> B_{T_1}(x1)
   U_{T_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> U_{T_1}(t_{b_1}(b_{b_1}(x1)))
   U_{T_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> U_{T_1}(t_{b_1}(b_{u_1}(x1)))
   U_{T_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> B_{U_1}(x1)
   U_{T_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> U_{T_1}(t_{b_1}(b_{s_1}(x1)))
   U_{T_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> B_{S_1}(x1)
   U_{T_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> U_{T_1}(t_{b_1}(b_{t_1}(x1)))
   U_{T_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> B_{T_1}(x1)
   S_{T_1}(t_{u_1}(u_{b_1}(x1))) -> S_{U_1}(u_{t_1}(t_{b_1}(x1)))
   S_{T_1}(t_{u_1}(u_{b_1}(x1))) -> U_{T_1}(t_{b_1}(x1))
   S_{T_1}(t_{u_1}(u_{u_1}(x1))) -> S_{U_1}(u_{t_1}(t_{u_1}(x1)))
   S_{T_1}(t_{u_1}(u_{u_1}(x1))) -> U_{T_1}(t_{u_1}(x1))
   S_{T_1}(t_{u_1}(u_{t_1}(x1))) -> S_{U_1}(u_{t_1}(t_{t_1}(x1)))
   S_{T_1}(t_{u_1}(u_{t_1}(x1))) -> U_{T_1}(t_{t_1}(x1))
   S_{T_1}(t_{u_1}(u_{t_1}(x1))) -> T_{T_1}(x1)
   B_{T_1}(t_{u_1}(u_{b_1}(x1))) -> B_{U_1}(u_{t_1}(t_{b_1}(x1)))
   B_{T_1}(t_{u_1}(u_{b_1}(x1))) -> U_{T_1}(t_{b_1}(x1))
   B_{T_1}(t_{u_1}(u_{u_1}(x1))) -> B_{U_1}(u_{t_1}(t_{u_1}(x1)))
   B_{T_1}(t_{u_1}(u_{u_1}(x1))) -> U_{T_1}(t_{u_1}(x1))
   B_{T_1}(t_{u_1}(u_{t_1}(x1))) -> B_{U_1}(u_{t_1}(t_{t_1}(x1)))
   B_{T_1}(t_{u_1}(u_{t_1}(x1))) -> U_{T_1}(t_{t_1}(x1))
   B_{T_1}(t_{u_1}(u_{t_1}(x1))) -> T_{T_1}(x1)
   T_{T_1}(t_{u_1}(u_{b_1}(x1))) -> U_{T_1}(t_{b_1}(x1))
   T_{T_1}(t_{u_1}(u_{u_1}(x1))) -> U_{T_1}(t_{u_1}(x1))
   T_{T_1}(t_{u_1}(u_{t_1}(x1))) -> U_{T_1}(t_{t_1}(x1))
   T_{T_1}(t_{u_1}(u_{t_1}(x1))) -> T_{T_1}(x1)
   U_{T_1}(t_{u_1}(u_{b_1}(x1))) -> U_{T_1}(t_{b_1}(x1))
   U_{T_1}(t_{u_1}(u_{u_1}(x1))) -> U_{T_1}(t_{u_1}(x1))
   U_{T_1}(t_{u_1}(u_{t_1}(x1))) -> U_{T_1}(t_{t_1}(x1))
   U_{T_1}(t_{u_1}(u_{t_1}(x1))) -> T_{T_1}(x1)

The TRS R consists of the following rules:

   b_{u_1}(u_{b_1}(x1)) -> b_{s_1}(s_{b_1}(x1))
   b_{u_1}(u_{u_1}(x1)) -> b_{s_1}(s_{u_1}(x1))
   b_{u_1}(u_{t_1}(x1)) -> b_{s_1}(s_{t_1}(x1))
   t_{s_1}(s_{b_1}(x1)) -> t_{t_1}(t_{b_1}(x1))
   t_{s_1}(s_{u_1}(x1)) -> t_{t_1}(t_{u_1}(x1))
   t_{s_1}(s_{s_1}(x1)) -> t_{t_1}(t_{s_1}(x1))
   t_{s_1}(s_{t_1}(x1)) -> t_{t_1}(t_{t_1}(x1))
   s_{u_1}(u_{b_1}(x1)) -> s_{s_1}(s_{b_1}(x1))
   s_{u_1}(u_{u_1}(x1)) -> s_{s_1}(s_{u_1}(x1))
   s_{u_1}(u_{t_1}(x1)) -> s_{s_1}(s_{t_1}(x1))
   s_{s_1}(s_{b_1}(b_{b_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{u_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{s_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{t_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{b_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{u_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{s_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{t_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{b_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{u_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{s_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{t_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{b_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{u_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{s_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{t_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{b_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{u_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{s_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{t_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{b_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{u_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{s_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{t_1}(x1)))
   s_{t_1}(t_{b_1}(b_{b_1}(x1))) -> s_{b_1}(b_{s_1}(s_{b_1}(x1)))
   s_{t_1}(t_{b_1}(b_{u_1}(x1))) -> s_{b_1}(b_{s_1}(s_{u_1}(x1)))
   s_{t_1}(t_{b_1}(b_{s_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(x1)))
   s_{t_1}(t_{b_1}(b_{t_1}(x1))) -> s_{b_1}(b_{s_1}(s_{t_1}(x1)))
   b_{t_1}(t_{b_1}(b_{b_1}(x1))) -> b_{b_1}(b_{s_1}(s_{b_1}(x1)))
   b_{t_1}(t_{b_1}(b_{u_1}(x1))) -> b_{b_1}(b_{s_1}(s_{u_1}(x1)))
   b_{t_1}(t_{b_1}(b_{s_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(x1)))
   b_{t_1}(t_{b_1}(b_{t_1}(x1))) -> b_{b_1}(b_{s_1}(s_{t_1}(x1)))
   t_{t_1}(t_{b_1}(b_{b_1}(x1))) -> t_{b_1}(b_{s_1}(s_{b_1}(x1)))
   t_{t_1}(t_{b_1}(b_{u_1}(x1))) -> t_{b_1}(b_{s_1}(s_{u_1}(x1)))
   t_{t_1}(t_{b_1}(b_{s_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(x1)))
   t_{t_1}(t_{b_1}(b_{t_1}(x1))) -> t_{b_1}(b_{s_1}(s_{t_1}(x1)))
   u_{t_1}(t_{b_1}(b_{b_1}(x1))) -> u_{b_1}(b_{s_1}(s_{b_1}(x1)))
   u_{t_1}(t_{b_1}(b_{u_1}(x1))) -> u_{b_1}(b_{s_1}(s_{u_1}(x1)))
   u_{t_1}(t_{b_1}(b_{s_1}(x1))) -> u_{b_1}(b_{s_1}(s_{s_1}(x1)))
   u_{t_1}(t_{b_1}(b_{t_1}(x1))) -> u_{b_1}(b_{s_1}(s_{t_1}(x1)))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   s_{t_1}(t_{u_1}(u_{b_1}(x1))) -> s_{u_1}(u_{t_1}(t_{b_1}(x1)))
   s_{t_1}(t_{u_1}(u_{u_1}(x1))) -> s_{u_1}(u_{t_1}(t_{u_1}(x1)))
   s_{t_1}(t_{u_1}(u_{t_1}(x1))) -> s_{u_1}(u_{t_1}(t_{t_1}(x1)))
   b_{t_1}(t_{u_1}(u_{b_1}(x1))) -> b_{u_1}(u_{t_1}(t_{b_1}(x1)))
   b_{t_1}(t_{u_1}(u_{u_1}(x1))) -> b_{u_1}(u_{t_1}(t_{u_1}(x1)))
   b_{t_1}(t_{u_1}(u_{t_1}(x1))) -> b_{u_1}(u_{t_1}(t_{t_1}(x1)))
   t_{t_1}(t_{u_1}(u_{b_1}(x1))) -> t_{u_1}(u_{t_1}(t_{b_1}(x1)))
   t_{t_1}(t_{u_1}(u_{u_1}(x1))) -> t_{u_1}(u_{t_1}(t_{u_1}(x1)))
   t_{t_1}(t_{u_1}(u_{t_1}(x1))) -> t_{u_1}(u_{t_1}(t_{t_1}(x1)))
   u_{t_1}(t_{u_1}(u_{b_1}(x1))) -> u_{u_1}(u_{t_1}(t_{b_1}(x1)))
   u_{t_1}(t_{u_1}(u_{u_1}(x1))) -> u_{u_1}(u_{t_1}(t_{u_1}(x1)))
   u_{t_1}(t_{u_1}(u_{t_1}(x1))) -> u_{u_1}(u_{t_1}(t_{t_1}(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   B_{U_1}(u_{b_1}(x1)) -> B_{S_1}(s_{b_1}(x1))
   B_{U_1}(u_{u_1}(x1)) -> B_{S_1}(s_{u_1}(x1))
   B_{U_1}(u_{t_1}(x1)) -> B_{S_1}(s_{t_1}(x1))
   T_{S_1}(s_{b_1}(x1)) -> T_{T_1}(t_{b_1}(x1))
   T_{S_1}(s_{u_1}(x1)) -> T_{T_1}(t_{u_1}(x1))
   T_{S_1}(s_{s_1}(x1)) -> T_{T_1}(t_{s_1}(x1))
   T_{S_1}(s_{t_1}(x1)) -> T_{T_1}(t_{t_1}(x1))
   T_{S_1}(s_{t_1}(x1)) -> T_{T_1}(x1)
   S_{U_1}(u_{b_1}(x1)) -> S_{S_1}(s_{b_1}(x1))
   S_{U_1}(u_{u_1}(x1)) -> S_{S_1}(s_{u_1}(x1))
   S_{U_1}(u_{t_1}(x1)) -> S_{S_1}(s_{t_1}(x1))
   S_{S_1}(s_{b_1}(b_{b_1}(x1))) -> B_{S_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1))))
   S_{S_1}(s_{b_1}(b_{b_1}(x1))) -> S_{S_1}(s_{s_1}(s_{b_1}(x1)))
   S_{S_1}(s_{b_1}(b_{b_1}(x1))) -> S_{S_1}(s_{b_1}(x1))
   S_{S_1}(s_{b_1}(b_{u_1}(x1))) -> B_{S_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1))))
   S_{S_1}(s_{b_1}(b_{u_1}(x1))) -> S_{S_1}(s_{s_1}(s_{u_1}(x1)))
   S_{S_1}(s_{b_1}(b_{u_1}(x1))) -> S_{S_1}(s_{u_1}(x1))
   S_{S_1}(s_{b_1}(b_{s_1}(x1))) -> B_{S_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1))))
   S_{S_1}(s_{b_1}(b_{s_1}(x1))) -> S_{S_1}(s_{s_1}(s_{s_1}(x1)))
   S_{S_1}(s_{b_1}(b_{s_1}(x1))) -> S_{S_1}(s_{s_1}(x1))
   S_{S_1}(s_{b_1}(b_{s_1}(x1))) -> S_{S_1}(x1)
   S_{S_1}(s_{b_1}(b_{t_1}(x1))) -> B_{S_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1))))
   S_{S_1}(s_{b_1}(b_{t_1}(x1))) -> S_{S_1}(s_{s_1}(s_{t_1}(x1)))
   S_{S_1}(s_{b_1}(b_{t_1}(x1))) -> S_{S_1}(s_{t_1}(x1))
   B_{S_1}(s_{b_1}(b_{b_1}(x1))) -> B_{S_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1))))
   B_{S_1}(s_{b_1}(b_{b_1}(x1))) -> S_{S_1}(s_{s_1}(s_{b_1}(x1)))
   B_{S_1}(s_{b_1}(b_{b_1}(x1))) -> S_{S_1}(s_{b_1}(x1))
   B_{S_1}(s_{b_1}(b_{u_1}(x1))) -> B_{S_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1))))
   B_{S_1}(s_{b_1}(b_{u_1}(x1))) -> S_{S_1}(s_{s_1}(s_{u_1}(x1)))
   B_{S_1}(s_{b_1}(b_{u_1}(x1))) -> S_{S_1}(s_{u_1}(x1))
   B_{S_1}(s_{b_1}(b_{s_1}(x1))) -> B_{S_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1))))
   B_{S_1}(s_{b_1}(b_{s_1}(x1))) -> S_{S_1}(s_{s_1}(s_{s_1}(x1)))
   B_{S_1}(s_{b_1}(b_{s_1}(x1))) -> S_{S_1}(s_{s_1}(x1))
   B_{S_1}(s_{b_1}(b_{s_1}(x1))) -> S_{S_1}(x1)
   B_{S_1}(s_{b_1}(b_{t_1}(x1))) -> B_{S_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1))))
   B_{S_1}(s_{b_1}(b_{t_1}(x1))) -> S_{S_1}(s_{s_1}(s_{t_1}(x1)))
   B_{S_1}(s_{b_1}(b_{t_1}(x1))) -> S_{S_1}(s_{t_1}(x1))
   T_{S_1}(s_{b_1}(b_{b_1}(x1))) -> B_{S_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1))))
   T_{S_1}(s_{b_1}(b_{b_1}(x1))) -> S_{S_1}(s_{s_1}(s_{b_1}(x1)))
   T_{S_1}(s_{b_1}(b_{b_1}(x1))) -> S_{S_1}(s_{b_1}(x1))
   T_{S_1}(s_{b_1}(b_{u_1}(x1))) -> B_{S_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1))))
   T_{S_1}(s_{b_1}(b_{u_1}(x1))) -> S_{S_1}(s_{s_1}(s_{u_1}(x1)))
   T_{S_1}(s_{b_1}(b_{u_1}(x1))) -> S_{S_1}(s_{u_1}(x1))
   T_{S_1}(s_{b_1}(b_{u_1}(x1))) -> S_{U_1}(x1)
   T_{S_1}(s_{b_1}(b_{s_1}(x1))) -> B_{S_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1))))
   T_{S_1}(s_{b_1}(b_{s_1}(x1))) -> S_{S_1}(s_{s_1}(s_{s_1}(x1)))
   T_{S_1}(s_{b_1}(b_{s_1}(x1))) -> S_{S_1}(s_{s_1}(x1))
   T_{S_1}(s_{b_1}(b_{s_1}(x1))) -> S_{S_1}(x1)
   T_{S_1}(s_{b_1}(b_{t_1}(x1))) -> B_{S_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1))))
   T_{S_1}(s_{b_1}(b_{t_1}(x1))) -> S_{S_1}(s_{s_1}(s_{t_1}(x1)))
   T_{S_1}(s_{b_1}(b_{t_1}(x1))) -> S_{S_1}(s_{t_1}(x1))
   T_{S_1}(s_{b_1}(b_{t_1}(x1))) -> S_{T_1}(x1)
   S_{S_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> T_{T_1}(x1)
   B_{S_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> T_{T_1}(x1)
   T_{S_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> B_{T_1}(t_{b_1}(x1))
   T_{S_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> B_{T_1}(t_{u_1}(x1))
   T_{S_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> B_{T_1}(t_{s_1}(x1))
   T_{S_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> T_{S_1}(x1)
   T_{S_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> B_{T_1}(t_{t_1}(x1))
   T_{S_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> T_{T_1}(x1)
   S_{T_1}(t_{b_1}(b_{b_1}(x1))) -> B_{S_1}(s_{b_1}(x1))
   S_{T_1}(t_{b_1}(b_{u_1}(x1))) -> B_{S_1}(s_{u_1}(x1))
   S_{T_1}(t_{b_1}(b_{u_1}(x1))) -> S_{U_1}(x1)
   S_{T_1}(t_{b_1}(b_{s_1}(x1))) -> B_{S_1}(s_{s_1}(x1))
   S_{T_1}(t_{b_1}(b_{s_1}(x1))) -> S_{S_1}(x1)
   S_{T_1}(t_{b_1}(b_{t_1}(x1))) -> B_{S_1}(s_{t_1}(x1))
   S_{T_1}(t_{b_1}(b_{t_1}(x1))) -> S_{T_1}(x1)
   B_{T_1}(t_{b_1}(b_{b_1}(x1))) -> B_{S_1}(s_{b_1}(x1))
   B_{T_1}(t_{b_1}(b_{u_1}(x1))) -> B_{S_1}(s_{u_1}(x1))
   B_{T_1}(t_{b_1}(b_{u_1}(x1))) -> S_{U_1}(x1)
   B_{T_1}(t_{b_1}(b_{s_1}(x1))) -> B_{S_1}(s_{s_1}(x1))
   B_{T_1}(t_{b_1}(b_{s_1}(x1))) -> S_{S_1}(x1)
   B_{T_1}(t_{b_1}(b_{t_1}(x1))) -> B_{S_1}(s_{t_1}(x1))
   B_{T_1}(t_{b_1}(b_{t_1}(x1))) -> S_{T_1}(x1)
   T_{T_1}(t_{b_1}(b_{b_1}(x1))) -> B_{S_1}(s_{b_1}(x1))
   T_{T_1}(t_{b_1}(b_{u_1}(x1))) -> B_{S_1}(s_{u_1}(x1))
   T_{T_1}(t_{b_1}(b_{s_1}(x1))) -> B_{S_1}(s_{s_1}(x1))
   T_{T_1}(t_{b_1}(b_{s_1}(x1))) -> S_{S_1}(x1)
   T_{T_1}(t_{b_1}(b_{t_1}(x1))) -> B_{S_1}(s_{t_1}(x1))
   U_{T_1}(t_{b_1}(b_{b_1}(x1))) -> B_{S_1}(s_{b_1}(x1))
   U_{T_1}(t_{b_1}(b_{u_1}(x1))) -> B_{S_1}(s_{u_1}(x1))
   U_{T_1}(t_{b_1}(b_{s_1}(x1))) -> B_{S_1}(s_{s_1}(x1))
   U_{T_1}(t_{b_1}(b_{s_1}(x1))) -> S_{S_1}(x1)
   U_{T_1}(t_{b_1}(b_{t_1}(x1))) -> B_{S_1}(s_{t_1}(x1))
   S_{T_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> U_{T_1}(t_{b_1}(b_{b_1}(x1)))
   S_{T_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> U_{T_1}(t_{b_1}(b_{u_1}(x1)))
   S_{T_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> B_{U_1}(x1)
   S_{T_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> U_{T_1}(t_{b_1}(b_{s_1}(x1)))
   S_{T_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> B_{S_1}(x1)
   S_{T_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> U_{T_1}(t_{b_1}(b_{t_1}(x1)))
   S_{T_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> B_{T_1}(x1)
   B_{T_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> U_{T_1}(t_{b_1}(b_{b_1}(x1)))
   B_{T_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> U_{T_1}(t_{b_1}(b_{u_1}(x1)))
   B_{T_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> B_{U_1}(x1)
   B_{T_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> U_{T_1}(t_{b_1}(b_{s_1}(x1)))
   B_{T_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> B_{S_1}(x1)
   B_{T_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> U_{T_1}(t_{b_1}(b_{t_1}(x1)))
   B_{T_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> B_{T_1}(x1)
   T_{T_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> B_{S_1}(x1)
   U_{T_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> B_{S_1}(x1)
   S_{T_1}(t_{u_1}(u_{b_1}(x1))) -> U_{T_1}(t_{b_1}(x1))
   S_{T_1}(t_{u_1}(u_{u_1}(x1))) -> U_{T_1}(t_{u_1}(x1))
   S_{T_1}(t_{u_1}(u_{t_1}(x1))) -> U_{T_1}(t_{t_1}(x1))
   S_{T_1}(t_{u_1}(u_{t_1}(x1))) -> T_{T_1}(x1)
   B_{T_1}(t_{u_1}(u_{b_1}(x1))) -> U_{T_1}(t_{b_1}(x1))
   B_{T_1}(t_{u_1}(u_{u_1}(x1))) -> U_{T_1}(t_{u_1}(x1))
   B_{T_1}(t_{u_1}(u_{t_1}(x1))) -> U_{T_1}(t_{t_1}(x1))
   B_{T_1}(t_{u_1}(u_{t_1}(x1))) -> T_{T_1}(x1)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(B_{S_1}(x_1)) = x_1
   POL(B_{T_1}(x_1)) = 1 + x_1
   POL(B_{U_1}(x_1)) = 1 + x_1
   POL(S_{S_1}(x_1)) = x_1
   POL(S_{T_1}(x_1)) = 1 + x_1
   POL(S_{U_1}(x_1)) = 1 + x_1
   POL(T_{S_1}(x_1)) = 1 + x_1
   POL(T_{T_1}(x_1)) = x_1
   POL(U_{T_1}(x_1)) = x_1
   POL(b_{b_1}(x_1)) = 1 + x_1
   POL(b_{s_1}(x_1)) = x_1
   POL(b_{t_1}(x_1)) = x_1
   POL(b_{u_1}(x_1)) = x_1
   POL(s_{b_1}(x_1)) = 1 + x_1
   POL(s_{s_1}(x_1)) = x_1
   POL(s_{t_1}(x_1)) = x_1
   POL(s_{u_1}(x_1)) = x_1
   POL(t_{b_1}(x_1)) = 1 + x_1
   POL(t_{s_1}(x_1)) = x_1
   POL(t_{t_1}(x_1)) = x_1
   POL(t_{u_1}(x_1)) = x_1
   POL(u_{b_1}(x_1)) = 1 + x_1
   POL(u_{t_1}(x_1)) = x_1
   POL(u_{u_1}(x_1)) = x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   s_{u_1}(u_{b_1}(x1)) -> s_{s_1}(s_{b_1}(x1))
   s_{u_1}(u_{u_1}(x1)) -> s_{s_1}(s_{u_1}(x1))
   s_{u_1}(u_{t_1}(x1)) -> s_{s_1}(s_{t_1}(x1))
   s_{t_1}(t_{b_1}(b_{b_1}(x1))) -> s_{b_1}(b_{s_1}(s_{b_1}(x1)))
   s_{t_1}(t_{b_1}(b_{u_1}(x1))) -> s_{b_1}(b_{s_1}(s_{u_1}(x1)))
   s_{t_1}(t_{b_1}(b_{s_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(x1)))
   s_{t_1}(t_{b_1}(b_{t_1}(x1))) -> s_{b_1}(b_{s_1}(s_{t_1}(x1)))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   s_{t_1}(t_{u_1}(u_{b_1}(x1))) -> s_{u_1}(u_{t_1}(t_{b_1}(x1)))
   s_{t_1}(t_{u_1}(u_{u_1}(x1))) -> s_{u_1}(u_{t_1}(t_{u_1}(x1)))
   s_{t_1}(t_{u_1}(u_{t_1}(x1))) -> s_{u_1}(u_{t_1}(t_{t_1}(x1)))
   t_{s_1}(s_{b_1}(x1)) -> t_{t_1}(t_{b_1}(x1))
   t_{s_1}(s_{u_1}(x1)) -> t_{t_1}(t_{u_1}(x1))
   t_{s_1}(s_{s_1}(x1)) -> t_{t_1}(t_{s_1}(x1))
   t_{s_1}(s_{t_1}(x1)) -> t_{t_1}(t_{t_1}(x1))
   t_{s_1}(s_{b_1}(b_{b_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{u_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{s_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{t_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{b_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{u_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{s_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{t_1}(x1)))
   t_{t_1}(t_{b_1}(b_{b_1}(x1))) -> t_{b_1}(b_{s_1}(s_{b_1}(x1)))
   t_{t_1}(t_{b_1}(b_{u_1}(x1))) -> t_{b_1}(b_{s_1}(s_{u_1}(x1)))
   t_{t_1}(t_{b_1}(b_{s_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(x1)))
   t_{t_1}(t_{b_1}(b_{t_1}(x1))) -> t_{b_1}(b_{s_1}(s_{t_1}(x1)))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   t_{t_1}(t_{u_1}(u_{b_1}(x1))) -> t_{u_1}(u_{t_1}(t_{b_1}(x1)))
   t_{t_1}(t_{u_1}(u_{u_1}(x1))) -> t_{u_1}(u_{t_1}(t_{u_1}(x1)))
   t_{t_1}(t_{u_1}(u_{t_1}(x1))) -> t_{u_1}(u_{t_1}(t_{t_1}(x1)))
   s_{s_1}(s_{b_1}(b_{b_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{u_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{s_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{t_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{b_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{u_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{s_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{t_1}(x1)))
   u_{t_1}(t_{b_1}(b_{b_1}(x1))) -> u_{b_1}(b_{s_1}(s_{b_1}(x1)))
   b_{u_1}(u_{b_1}(x1)) -> b_{s_1}(s_{b_1}(x1))
   b_{u_1}(u_{u_1}(x1)) -> b_{s_1}(s_{u_1}(x1))
   b_{u_1}(u_{t_1}(x1)) -> b_{s_1}(s_{t_1}(x1))
   u_{t_1}(t_{b_1}(b_{u_1}(x1))) -> u_{b_1}(b_{s_1}(s_{u_1}(x1)))
   u_{t_1}(t_{b_1}(b_{s_1}(x1))) -> u_{b_1}(b_{s_1}(s_{s_1}(x1)))
   u_{t_1}(t_{b_1}(b_{t_1}(x1))) -> u_{b_1}(b_{s_1}(s_{t_1}(x1)))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   b_{s_1}(s_{b_1}(b_{b_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{u_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{s_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{t_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{b_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{u_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{s_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{t_1}(x1)))
   b_{t_1}(t_{b_1}(b_{b_1}(x1))) -> b_{b_1}(b_{s_1}(s_{b_1}(x1)))
   b_{t_1}(t_{b_1}(b_{u_1}(x1))) -> b_{b_1}(b_{s_1}(s_{u_1}(x1)))
   b_{t_1}(t_{b_1}(b_{s_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(x1)))
   b_{t_1}(t_{b_1}(b_{t_1}(x1))) -> b_{b_1}(b_{s_1}(s_{t_1}(x1)))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   b_{t_1}(t_{u_1}(u_{b_1}(x1))) -> b_{u_1}(u_{t_1}(t_{b_1}(x1)))
   b_{t_1}(t_{u_1}(u_{u_1}(x1))) -> b_{u_1}(u_{t_1}(t_{u_1}(x1)))
   b_{t_1}(t_{u_1}(u_{t_1}(x1))) -> b_{u_1}(u_{t_1}(t_{t_1}(x1)))
   u_{t_1}(t_{u_1}(u_{b_1}(x1))) -> u_{u_1}(u_{t_1}(t_{b_1}(x1)))
   u_{t_1}(t_{u_1}(u_{u_1}(x1))) -> u_{u_1}(u_{t_1}(t_{u_1}(x1)))
   u_{t_1}(t_{u_1}(u_{t_1}(x1))) -> u_{u_1}(u_{t_1}(t_{t_1}(x1)))


----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B_{U_1}(u_{u_1}(x1)) -> S_{U_1}(x1)
   B_{U_1}(u_{t_1}(x1)) -> S_{T_1}(x1)
   T_{S_1}(s_{s_1}(x1)) -> T_{S_1}(x1)
   S_{U_1}(u_{u_1}(x1)) -> S_{U_1}(x1)
   S_{U_1}(u_{t_1}(x1)) -> S_{T_1}(x1)
   S_{S_1}(s_{b_1}(b_{u_1}(x1))) -> S_{U_1}(x1)
   S_{S_1}(s_{b_1}(b_{t_1}(x1))) -> S_{T_1}(x1)
   B_{S_1}(s_{b_1}(b_{u_1}(x1))) -> S_{U_1}(x1)
   B_{S_1}(s_{b_1}(b_{t_1}(x1))) -> S_{T_1}(x1)
   S_{S_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> B_{T_1}(t_{b_1}(x1))
   S_{S_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> B_{T_1}(t_{u_1}(x1))
   S_{S_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> B_{T_1}(t_{s_1}(x1))
   S_{S_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> T_{S_1}(x1)
   S_{S_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> B_{T_1}(t_{t_1}(x1))
   B_{S_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> B_{T_1}(t_{b_1}(x1))
   B_{S_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> B_{T_1}(t_{u_1}(x1))
   B_{S_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> B_{T_1}(t_{s_1}(x1))
   B_{S_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> T_{S_1}(x1)
   B_{S_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> B_{T_1}(t_{t_1}(x1))
   T_{T_1}(t_{b_1}(b_{u_1}(x1))) -> S_{U_1}(x1)
   T_{T_1}(t_{b_1}(b_{t_1}(x1))) -> S_{T_1}(x1)
   U_{T_1}(t_{b_1}(b_{u_1}(x1))) -> S_{U_1}(x1)
   U_{T_1}(t_{b_1}(b_{t_1}(x1))) -> S_{T_1}(x1)
   S_{T_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> S_{U_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   S_{T_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> S_{U_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   S_{T_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> S_{U_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   S_{T_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> S_{U_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   B_{T_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> B_{U_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   B_{T_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> B_{U_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   B_{T_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> B_{U_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   B_{T_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> B_{U_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   T_{T_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> U_{T_1}(t_{b_1}(b_{b_1}(x1)))
   T_{T_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> U_{T_1}(t_{b_1}(b_{u_1}(x1)))
   T_{T_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> B_{U_1}(x1)
   T_{T_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> U_{T_1}(t_{b_1}(b_{s_1}(x1)))
   T_{T_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> U_{T_1}(t_{b_1}(b_{t_1}(x1)))
   T_{T_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> B_{T_1}(x1)
   U_{T_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> U_{T_1}(t_{b_1}(b_{b_1}(x1)))
   U_{T_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> U_{T_1}(t_{b_1}(b_{u_1}(x1)))
   U_{T_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> B_{U_1}(x1)
   U_{T_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> U_{T_1}(t_{b_1}(b_{s_1}(x1)))
   U_{T_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> U_{T_1}(t_{b_1}(b_{t_1}(x1)))
   U_{T_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> B_{T_1}(x1)
   S_{T_1}(t_{u_1}(u_{b_1}(x1))) -> S_{U_1}(u_{t_1}(t_{b_1}(x1)))
   S_{T_1}(t_{u_1}(u_{u_1}(x1))) -> S_{U_1}(u_{t_1}(t_{u_1}(x1)))
   S_{T_1}(t_{u_1}(u_{t_1}(x1))) -> S_{U_1}(u_{t_1}(t_{t_1}(x1)))
   B_{T_1}(t_{u_1}(u_{b_1}(x1))) -> B_{U_1}(u_{t_1}(t_{b_1}(x1)))
   B_{T_1}(t_{u_1}(u_{u_1}(x1))) -> B_{U_1}(u_{t_1}(t_{u_1}(x1)))
   B_{T_1}(t_{u_1}(u_{t_1}(x1))) -> B_{U_1}(u_{t_1}(t_{t_1}(x1)))
   T_{T_1}(t_{u_1}(u_{b_1}(x1))) -> U_{T_1}(t_{b_1}(x1))
   T_{T_1}(t_{u_1}(u_{u_1}(x1))) -> U_{T_1}(t_{u_1}(x1))
   T_{T_1}(t_{u_1}(u_{t_1}(x1))) -> U_{T_1}(t_{t_1}(x1))
   T_{T_1}(t_{u_1}(u_{t_1}(x1))) -> T_{T_1}(x1)
   U_{T_1}(t_{u_1}(u_{b_1}(x1))) -> U_{T_1}(t_{b_1}(x1))
   U_{T_1}(t_{u_1}(u_{u_1}(x1))) -> U_{T_1}(t_{u_1}(x1))
   U_{T_1}(t_{u_1}(u_{t_1}(x1))) -> U_{T_1}(t_{t_1}(x1))
   U_{T_1}(t_{u_1}(u_{t_1}(x1))) -> T_{T_1}(x1)

The TRS R consists of the following rules:

   b_{u_1}(u_{b_1}(x1)) -> b_{s_1}(s_{b_1}(x1))
   b_{u_1}(u_{u_1}(x1)) -> b_{s_1}(s_{u_1}(x1))
   b_{u_1}(u_{t_1}(x1)) -> b_{s_1}(s_{t_1}(x1))
   t_{s_1}(s_{b_1}(x1)) -> t_{t_1}(t_{b_1}(x1))
   t_{s_1}(s_{u_1}(x1)) -> t_{t_1}(t_{u_1}(x1))
   t_{s_1}(s_{s_1}(x1)) -> t_{t_1}(t_{s_1}(x1))
   t_{s_1}(s_{t_1}(x1)) -> t_{t_1}(t_{t_1}(x1))
   s_{u_1}(u_{b_1}(x1)) -> s_{s_1}(s_{b_1}(x1))
   s_{u_1}(u_{u_1}(x1)) -> s_{s_1}(s_{u_1}(x1))
   s_{u_1}(u_{t_1}(x1)) -> s_{s_1}(s_{t_1}(x1))
   s_{s_1}(s_{b_1}(b_{b_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{u_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{s_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{t_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{b_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{u_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{s_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{t_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{b_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{u_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{s_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{t_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{b_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{u_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{s_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{t_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{b_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{u_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{s_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{t_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{b_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{u_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{s_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{t_1}(x1)))
   s_{t_1}(t_{b_1}(b_{b_1}(x1))) -> s_{b_1}(b_{s_1}(s_{b_1}(x1)))
   s_{t_1}(t_{b_1}(b_{u_1}(x1))) -> s_{b_1}(b_{s_1}(s_{u_1}(x1)))
   s_{t_1}(t_{b_1}(b_{s_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(x1)))
   s_{t_1}(t_{b_1}(b_{t_1}(x1))) -> s_{b_1}(b_{s_1}(s_{t_1}(x1)))
   b_{t_1}(t_{b_1}(b_{b_1}(x1))) -> b_{b_1}(b_{s_1}(s_{b_1}(x1)))
   b_{t_1}(t_{b_1}(b_{u_1}(x1))) -> b_{b_1}(b_{s_1}(s_{u_1}(x1)))
   b_{t_1}(t_{b_1}(b_{s_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(x1)))
   b_{t_1}(t_{b_1}(b_{t_1}(x1))) -> b_{b_1}(b_{s_1}(s_{t_1}(x1)))
   t_{t_1}(t_{b_1}(b_{b_1}(x1))) -> t_{b_1}(b_{s_1}(s_{b_1}(x1)))
   t_{t_1}(t_{b_1}(b_{u_1}(x1))) -> t_{b_1}(b_{s_1}(s_{u_1}(x1)))
   t_{t_1}(t_{b_1}(b_{s_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(x1)))
   t_{t_1}(t_{b_1}(b_{t_1}(x1))) -> t_{b_1}(b_{s_1}(s_{t_1}(x1)))
   u_{t_1}(t_{b_1}(b_{b_1}(x1))) -> u_{b_1}(b_{s_1}(s_{b_1}(x1)))
   u_{t_1}(t_{b_1}(b_{u_1}(x1))) -> u_{b_1}(b_{s_1}(s_{u_1}(x1)))
   u_{t_1}(t_{b_1}(b_{s_1}(x1))) -> u_{b_1}(b_{s_1}(s_{s_1}(x1)))
   u_{t_1}(t_{b_1}(b_{t_1}(x1))) -> u_{b_1}(b_{s_1}(s_{t_1}(x1)))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   s_{t_1}(t_{u_1}(u_{b_1}(x1))) -> s_{u_1}(u_{t_1}(t_{b_1}(x1)))
   s_{t_1}(t_{u_1}(u_{u_1}(x1))) -> s_{u_1}(u_{t_1}(t_{u_1}(x1)))
   s_{t_1}(t_{u_1}(u_{t_1}(x1))) -> s_{u_1}(u_{t_1}(t_{t_1}(x1)))
   b_{t_1}(t_{u_1}(u_{b_1}(x1))) -> b_{u_1}(u_{t_1}(t_{b_1}(x1)))
   b_{t_1}(t_{u_1}(u_{u_1}(x1))) -> b_{u_1}(u_{t_1}(t_{u_1}(x1)))
   b_{t_1}(t_{u_1}(u_{t_1}(x1))) -> b_{u_1}(u_{t_1}(t_{t_1}(x1)))
   t_{t_1}(t_{u_1}(u_{b_1}(x1))) -> t_{u_1}(u_{t_1}(t_{b_1}(x1)))
   t_{t_1}(t_{u_1}(u_{u_1}(x1))) -> t_{u_1}(u_{t_1}(t_{u_1}(x1)))
   t_{t_1}(t_{u_1}(u_{t_1}(x1))) -> t_{u_1}(u_{t_1}(t_{t_1}(x1)))
   u_{t_1}(t_{u_1}(u_{b_1}(x1))) -> u_{u_1}(u_{t_1}(t_{b_1}(x1)))
   u_{t_1}(t_{u_1}(u_{u_1}(x1))) -> u_{u_1}(u_{t_1}(t_{u_1}(x1)))
   u_{t_1}(t_{u_1}(u_{t_1}(x1))) -> u_{u_1}(u_{t_1}(t_{t_1}(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 4 SCCs with 38 less nodes.
----------------------------------------

(12)
Complex Obligation (AND)

----------------------------------------

(13)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   S_{U_1}(u_{t_1}(x1)) -> S_{T_1}(x1)
   S_{T_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> S_{U_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   S_{U_1}(u_{u_1}(x1)) -> S_{U_1}(x1)
   S_{T_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> S_{U_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   S_{T_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> S_{U_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   S_{T_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> S_{U_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   S_{T_1}(t_{u_1}(u_{b_1}(x1))) -> S_{U_1}(u_{t_1}(t_{b_1}(x1)))
   S_{T_1}(t_{u_1}(u_{u_1}(x1))) -> S_{U_1}(u_{t_1}(t_{u_1}(x1)))
   S_{T_1}(t_{u_1}(u_{t_1}(x1))) -> S_{U_1}(u_{t_1}(t_{t_1}(x1)))

The TRS R consists of the following rules:

   b_{u_1}(u_{b_1}(x1)) -> b_{s_1}(s_{b_1}(x1))
   b_{u_1}(u_{u_1}(x1)) -> b_{s_1}(s_{u_1}(x1))
   b_{u_1}(u_{t_1}(x1)) -> b_{s_1}(s_{t_1}(x1))
   t_{s_1}(s_{b_1}(x1)) -> t_{t_1}(t_{b_1}(x1))
   t_{s_1}(s_{u_1}(x1)) -> t_{t_1}(t_{u_1}(x1))
   t_{s_1}(s_{s_1}(x1)) -> t_{t_1}(t_{s_1}(x1))
   t_{s_1}(s_{t_1}(x1)) -> t_{t_1}(t_{t_1}(x1))
   s_{u_1}(u_{b_1}(x1)) -> s_{s_1}(s_{b_1}(x1))
   s_{u_1}(u_{u_1}(x1)) -> s_{s_1}(s_{u_1}(x1))
   s_{u_1}(u_{t_1}(x1)) -> s_{s_1}(s_{t_1}(x1))
   s_{s_1}(s_{b_1}(b_{b_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{u_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{s_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{t_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{b_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{u_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{s_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{t_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{b_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{u_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{s_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{t_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{b_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{u_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{s_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{t_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{b_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{u_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{s_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{t_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{b_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{u_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{s_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{t_1}(x1)))
   s_{t_1}(t_{b_1}(b_{b_1}(x1))) -> s_{b_1}(b_{s_1}(s_{b_1}(x1)))
   s_{t_1}(t_{b_1}(b_{u_1}(x1))) -> s_{b_1}(b_{s_1}(s_{u_1}(x1)))
   s_{t_1}(t_{b_1}(b_{s_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(x1)))
   s_{t_1}(t_{b_1}(b_{t_1}(x1))) -> s_{b_1}(b_{s_1}(s_{t_1}(x1)))
   b_{t_1}(t_{b_1}(b_{b_1}(x1))) -> b_{b_1}(b_{s_1}(s_{b_1}(x1)))
   b_{t_1}(t_{b_1}(b_{u_1}(x1))) -> b_{b_1}(b_{s_1}(s_{u_1}(x1)))
   b_{t_1}(t_{b_1}(b_{s_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(x1)))
   b_{t_1}(t_{b_1}(b_{t_1}(x1))) -> b_{b_1}(b_{s_1}(s_{t_1}(x1)))
   t_{t_1}(t_{b_1}(b_{b_1}(x1))) -> t_{b_1}(b_{s_1}(s_{b_1}(x1)))
   t_{t_1}(t_{b_1}(b_{u_1}(x1))) -> t_{b_1}(b_{s_1}(s_{u_1}(x1)))
   t_{t_1}(t_{b_1}(b_{s_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(x1)))
   t_{t_1}(t_{b_1}(b_{t_1}(x1))) -> t_{b_1}(b_{s_1}(s_{t_1}(x1)))
   u_{t_1}(t_{b_1}(b_{b_1}(x1))) -> u_{b_1}(b_{s_1}(s_{b_1}(x1)))
   u_{t_1}(t_{b_1}(b_{u_1}(x1))) -> u_{b_1}(b_{s_1}(s_{u_1}(x1)))
   u_{t_1}(t_{b_1}(b_{s_1}(x1))) -> u_{b_1}(b_{s_1}(s_{s_1}(x1)))
   u_{t_1}(t_{b_1}(b_{t_1}(x1))) -> u_{b_1}(b_{s_1}(s_{t_1}(x1)))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   s_{t_1}(t_{u_1}(u_{b_1}(x1))) -> s_{u_1}(u_{t_1}(t_{b_1}(x1)))
   s_{t_1}(t_{u_1}(u_{u_1}(x1))) -> s_{u_1}(u_{t_1}(t_{u_1}(x1)))
   s_{t_1}(t_{u_1}(u_{t_1}(x1))) -> s_{u_1}(u_{t_1}(t_{t_1}(x1)))
   b_{t_1}(t_{u_1}(u_{b_1}(x1))) -> b_{u_1}(u_{t_1}(t_{b_1}(x1)))
   b_{t_1}(t_{u_1}(u_{u_1}(x1))) -> b_{u_1}(u_{t_1}(t_{u_1}(x1)))
   b_{t_1}(t_{u_1}(u_{t_1}(x1))) -> b_{u_1}(u_{t_1}(t_{t_1}(x1)))
   t_{t_1}(t_{u_1}(u_{b_1}(x1))) -> t_{u_1}(u_{t_1}(t_{b_1}(x1)))
   t_{t_1}(t_{u_1}(u_{u_1}(x1))) -> t_{u_1}(u_{t_1}(t_{u_1}(x1)))
   t_{t_1}(t_{u_1}(u_{t_1}(x1))) -> t_{u_1}(u_{t_1}(t_{t_1}(x1)))
   u_{t_1}(t_{u_1}(u_{b_1}(x1))) -> u_{u_1}(u_{t_1}(t_{b_1}(x1)))
   u_{t_1}(t_{u_1}(u_{u_1}(x1))) -> u_{u_1}(u_{t_1}(t_{u_1}(x1)))
   u_{t_1}(t_{u_1}(u_{t_1}(x1))) -> u_{u_1}(u_{t_1}(t_{t_1}(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(14) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   S_{U_1}(u_{t_1}(x1)) -> S_{T_1}(x1)
   S_{U_1}(u_{u_1}(x1)) -> S_{U_1}(x1)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(S_{T_1}(x_1)) = 1 + x_1
   POL(S_{U_1}(x_1)) = 1 + x_1
   POL(b_{b_1}(x_1)) = 0
   POL(b_{s_1}(x_1)) = 1 + x_1
   POL(b_{t_1}(x_1)) = 1 + x_1
   POL(b_{u_1}(x_1)) = 1 + x_1
   POL(s_{b_1}(x_1)) = 0
   POL(s_{s_1}(x_1)) = 1 + x_1
   POL(s_{t_1}(x_1)) = 1 + x_1
   POL(s_{u_1}(x_1)) = 1 + x_1
   POL(t_{b_1}(x_1)) = 1 + x_1
   POL(t_{s_1}(x_1)) = 0
   POL(t_{t_1}(x_1)) = 1 + x_1
   POL(t_{u_1}(x_1)) = 1 + x_1
   POL(u_{b_1}(x_1)) = 1 + x_1
   POL(u_{t_1}(x_1)) = 1 + x_1
   POL(u_{u_1}(x_1)) = 1 + x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   u_{t_1}(t_{b_1}(b_{b_1}(x1))) -> u_{b_1}(b_{s_1}(s_{b_1}(x1)))
   b_{u_1}(u_{b_1}(x1)) -> b_{s_1}(s_{b_1}(x1))
   b_{u_1}(u_{u_1}(x1)) -> b_{s_1}(s_{u_1}(x1))
   b_{u_1}(u_{t_1}(x1)) -> b_{s_1}(s_{t_1}(x1))
   u_{t_1}(t_{b_1}(b_{u_1}(x1))) -> u_{b_1}(b_{s_1}(s_{u_1}(x1)))
   u_{t_1}(t_{b_1}(b_{s_1}(x1))) -> u_{b_1}(b_{s_1}(s_{s_1}(x1)))
   u_{t_1}(t_{b_1}(b_{t_1}(x1))) -> u_{b_1}(b_{s_1}(s_{t_1}(x1)))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   b_{s_1}(s_{b_1}(b_{b_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{u_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{s_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{t_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{b_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{u_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{s_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{t_1}(x1)))
   b_{t_1}(t_{b_1}(b_{b_1}(x1))) -> b_{b_1}(b_{s_1}(s_{b_1}(x1)))
   b_{t_1}(t_{b_1}(b_{u_1}(x1))) -> b_{b_1}(b_{s_1}(s_{u_1}(x1)))
   b_{t_1}(t_{b_1}(b_{s_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(x1)))
   b_{t_1}(t_{b_1}(b_{t_1}(x1))) -> b_{b_1}(b_{s_1}(s_{t_1}(x1)))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   b_{t_1}(t_{u_1}(u_{b_1}(x1))) -> b_{u_1}(u_{t_1}(t_{b_1}(x1)))
   b_{t_1}(t_{u_1}(u_{u_1}(x1))) -> b_{u_1}(u_{t_1}(t_{u_1}(x1)))
   b_{t_1}(t_{u_1}(u_{t_1}(x1))) -> b_{u_1}(u_{t_1}(t_{t_1}(x1)))
   u_{t_1}(t_{u_1}(u_{b_1}(x1))) -> u_{u_1}(u_{t_1}(t_{b_1}(x1)))
   u_{t_1}(t_{u_1}(u_{u_1}(x1))) -> u_{u_1}(u_{t_1}(t_{u_1}(x1)))
   u_{t_1}(t_{u_1}(u_{t_1}(x1))) -> u_{u_1}(u_{t_1}(t_{t_1}(x1)))
   t_{t_1}(t_{b_1}(b_{b_1}(x1))) -> t_{b_1}(b_{s_1}(s_{b_1}(x1)))
   t_{t_1}(t_{b_1}(b_{u_1}(x1))) -> t_{b_1}(b_{s_1}(s_{u_1}(x1)))
   t_{t_1}(t_{b_1}(b_{s_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(x1)))
   t_{t_1}(t_{b_1}(b_{t_1}(x1))) -> t_{b_1}(b_{s_1}(s_{t_1}(x1)))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   t_{t_1}(t_{u_1}(u_{b_1}(x1))) -> t_{u_1}(u_{t_1}(t_{b_1}(x1)))
   t_{t_1}(t_{u_1}(u_{u_1}(x1))) -> t_{u_1}(u_{t_1}(t_{u_1}(x1)))
   t_{t_1}(t_{u_1}(u_{t_1}(x1))) -> t_{u_1}(u_{t_1}(t_{t_1}(x1)))
   s_{s_1}(s_{b_1}(b_{b_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{u_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{s_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{t_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{b_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{u_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{s_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{t_1}(x1)))
   s_{u_1}(u_{b_1}(x1)) -> s_{s_1}(s_{b_1}(x1))
   s_{u_1}(u_{u_1}(x1)) -> s_{s_1}(s_{u_1}(x1))
   s_{u_1}(u_{t_1}(x1)) -> s_{s_1}(s_{t_1}(x1))
   s_{t_1}(t_{b_1}(b_{b_1}(x1))) -> s_{b_1}(b_{s_1}(s_{b_1}(x1)))
   s_{t_1}(t_{b_1}(b_{u_1}(x1))) -> s_{b_1}(b_{s_1}(s_{u_1}(x1)))
   s_{t_1}(t_{b_1}(b_{s_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(x1)))
   s_{t_1}(t_{b_1}(b_{t_1}(x1))) -> s_{b_1}(b_{s_1}(s_{t_1}(x1)))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   s_{t_1}(t_{u_1}(u_{b_1}(x1))) -> s_{u_1}(u_{t_1}(t_{b_1}(x1)))
   s_{t_1}(t_{u_1}(u_{u_1}(x1))) -> s_{u_1}(u_{t_1}(t_{u_1}(x1)))
   s_{t_1}(t_{u_1}(u_{t_1}(x1))) -> s_{u_1}(u_{t_1}(t_{t_1}(x1)))


----------------------------------------

(15)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   S_{T_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> S_{U_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   S_{T_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> S_{U_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   S_{T_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> S_{U_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   S_{T_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> S_{U_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   S_{T_1}(t_{u_1}(u_{b_1}(x1))) -> S_{U_1}(u_{t_1}(t_{b_1}(x1)))
   S_{T_1}(t_{u_1}(u_{u_1}(x1))) -> S_{U_1}(u_{t_1}(t_{u_1}(x1)))
   S_{T_1}(t_{u_1}(u_{t_1}(x1))) -> S_{U_1}(u_{t_1}(t_{t_1}(x1)))

The TRS R consists of the following rules:

   b_{u_1}(u_{b_1}(x1)) -> b_{s_1}(s_{b_1}(x1))
   b_{u_1}(u_{u_1}(x1)) -> b_{s_1}(s_{u_1}(x1))
   b_{u_1}(u_{t_1}(x1)) -> b_{s_1}(s_{t_1}(x1))
   t_{s_1}(s_{b_1}(x1)) -> t_{t_1}(t_{b_1}(x1))
   t_{s_1}(s_{u_1}(x1)) -> t_{t_1}(t_{u_1}(x1))
   t_{s_1}(s_{s_1}(x1)) -> t_{t_1}(t_{s_1}(x1))
   t_{s_1}(s_{t_1}(x1)) -> t_{t_1}(t_{t_1}(x1))
   s_{u_1}(u_{b_1}(x1)) -> s_{s_1}(s_{b_1}(x1))
   s_{u_1}(u_{u_1}(x1)) -> s_{s_1}(s_{u_1}(x1))
   s_{u_1}(u_{t_1}(x1)) -> s_{s_1}(s_{t_1}(x1))
   s_{s_1}(s_{b_1}(b_{b_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{u_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{s_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{t_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{b_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{u_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{s_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{t_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{b_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{u_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{s_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{t_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{b_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{u_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{s_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{t_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{b_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{u_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{s_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{t_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{b_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{u_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{s_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{t_1}(x1)))
   s_{t_1}(t_{b_1}(b_{b_1}(x1))) -> s_{b_1}(b_{s_1}(s_{b_1}(x1)))
   s_{t_1}(t_{b_1}(b_{u_1}(x1))) -> s_{b_1}(b_{s_1}(s_{u_1}(x1)))
   s_{t_1}(t_{b_1}(b_{s_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(x1)))
   s_{t_1}(t_{b_1}(b_{t_1}(x1))) -> s_{b_1}(b_{s_1}(s_{t_1}(x1)))
   b_{t_1}(t_{b_1}(b_{b_1}(x1))) -> b_{b_1}(b_{s_1}(s_{b_1}(x1)))
   b_{t_1}(t_{b_1}(b_{u_1}(x1))) -> b_{b_1}(b_{s_1}(s_{u_1}(x1)))
   b_{t_1}(t_{b_1}(b_{s_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(x1)))
   b_{t_1}(t_{b_1}(b_{t_1}(x1))) -> b_{b_1}(b_{s_1}(s_{t_1}(x1)))
   t_{t_1}(t_{b_1}(b_{b_1}(x1))) -> t_{b_1}(b_{s_1}(s_{b_1}(x1)))
   t_{t_1}(t_{b_1}(b_{u_1}(x1))) -> t_{b_1}(b_{s_1}(s_{u_1}(x1)))
   t_{t_1}(t_{b_1}(b_{s_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(x1)))
   t_{t_1}(t_{b_1}(b_{t_1}(x1))) -> t_{b_1}(b_{s_1}(s_{t_1}(x1)))
   u_{t_1}(t_{b_1}(b_{b_1}(x1))) -> u_{b_1}(b_{s_1}(s_{b_1}(x1)))
   u_{t_1}(t_{b_1}(b_{u_1}(x1))) -> u_{b_1}(b_{s_1}(s_{u_1}(x1)))
   u_{t_1}(t_{b_1}(b_{s_1}(x1))) -> u_{b_1}(b_{s_1}(s_{s_1}(x1)))
   u_{t_1}(t_{b_1}(b_{t_1}(x1))) -> u_{b_1}(b_{s_1}(s_{t_1}(x1)))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   s_{t_1}(t_{u_1}(u_{b_1}(x1))) -> s_{u_1}(u_{t_1}(t_{b_1}(x1)))
   s_{t_1}(t_{u_1}(u_{u_1}(x1))) -> s_{u_1}(u_{t_1}(t_{u_1}(x1)))
   s_{t_1}(t_{u_1}(u_{t_1}(x1))) -> s_{u_1}(u_{t_1}(t_{t_1}(x1)))
   b_{t_1}(t_{u_1}(u_{b_1}(x1))) -> b_{u_1}(u_{t_1}(t_{b_1}(x1)))
   b_{t_1}(t_{u_1}(u_{u_1}(x1))) -> b_{u_1}(u_{t_1}(t_{u_1}(x1)))
   b_{t_1}(t_{u_1}(u_{t_1}(x1))) -> b_{u_1}(u_{t_1}(t_{t_1}(x1)))
   t_{t_1}(t_{u_1}(u_{b_1}(x1))) -> t_{u_1}(u_{t_1}(t_{b_1}(x1)))
   t_{t_1}(t_{u_1}(u_{u_1}(x1))) -> t_{u_1}(u_{t_1}(t_{u_1}(x1)))
   t_{t_1}(t_{u_1}(u_{t_1}(x1))) -> t_{u_1}(u_{t_1}(t_{t_1}(x1)))
   u_{t_1}(t_{u_1}(u_{b_1}(x1))) -> u_{u_1}(u_{t_1}(t_{b_1}(x1)))
   u_{t_1}(t_{u_1}(u_{u_1}(x1))) -> u_{u_1}(u_{t_1}(t_{u_1}(x1)))
   u_{t_1}(t_{u_1}(u_{t_1}(x1))) -> u_{u_1}(u_{t_1}(t_{t_1}(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(16) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 7 less nodes.
----------------------------------------

(17)
TRUE

----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   T_{S_1}(s_{s_1}(x1)) -> T_{S_1}(x1)

The TRS R consists of the following rules:

   b_{u_1}(u_{b_1}(x1)) -> b_{s_1}(s_{b_1}(x1))
   b_{u_1}(u_{u_1}(x1)) -> b_{s_1}(s_{u_1}(x1))
   b_{u_1}(u_{t_1}(x1)) -> b_{s_1}(s_{t_1}(x1))
   t_{s_1}(s_{b_1}(x1)) -> t_{t_1}(t_{b_1}(x1))
   t_{s_1}(s_{u_1}(x1)) -> t_{t_1}(t_{u_1}(x1))
   t_{s_1}(s_{s_1}(x1)) -> t_{t_1}(t_{s_1}(x1))
   t_{s_1}(s_{t_1}(x1)) -> t_{t_1}(t_{t_1}(x1))
   s_{u_1}(u_{b_1}(x1)) -> s_{s_1}(s_{b_1}(x1))
   s_{u_1}(u_{u_1}(x1)) -> s_{s_1}(s_{u_1}(x1))
   s_{u_1}(u_{t_1}(x1)) -> s_{s_1}(s_{t_1}(x1))
   s_{s_1}(s_{b_1}(b_{b_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{u_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{s_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{t_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{b_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{u_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{s_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{t_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{b_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{u_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{s_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{t_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{b_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{u_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{s_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{t_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{b_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{u_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{s_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{t_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{b_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{u_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{s_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{t_1}(x1)))
   s_{t_1}(t_{b_1}(b_{b_1}(x1))) -> s_{b_1}(b_{s_1}(s_{b_1}(x1)))
   s_{t_1}(t_{b_1}(b_{u_1}(x1))) -> s_{b_1}(b_{s_1}(s_{u_1}(x1)))
   s_{t_1}(t_{b_1}(b_{s_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(x1)))
   s_{t_1}(t_{b_1}(b_{t_1}(x1))) -> s_{b_1}(b_{s_1}(s_{t_1}(x1)))
   b_{t_1}(t_{b_1}(b_{b_1}(x1))) -> b_{b_1}(b_{s_1}(s_{b_1}(x1)))
   b_{t_1}(t_{b_1}(b_{u_1}(x1))) -> b_{b_1}(b_{s_1}(s_{u_1}(x1)))
   b_{t_1}(t_{b_1}(b_{s_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(x1)))
   b_{t_1}(t_{b_1}(b_{t_1}(x1))) -> b_{b_1}(b_{s_1}(s_{t_1}(x1)))
   t_{t_1}(t_{b_1}(b_{b_1}(x1))) -> t_{b_1}(b_{s_1}(s_{b_1}(x1)))
   t_{t_1}(t_{b_1}(b_{u_1}(x1))) -> t_{b_1}(b_{s_1}(s_{u_1}(x1)))
   t_{t_1}(t_{b_1}(b_{s_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(x1)))
   t_{t_1}(t_{b_1}(b_{t_1}(x1))) -> t_{b_1}(b_{s_1}(s_{t_1}(x1)))
   u_{t_1}(t_{b_1}(b_{b_1}(x1))) -> u_{b_1}(b_{s_1}(s_{b_1}(x1)))
   u_{t_1}(t_{b_1}(b_{u_1}(x1))) -> u_{b_1}(b_{s_1}(s_{u_1}(x1)))
   u_{t_1}(t_{b_1}(b_{s_1}(x1))) -> u_{b_1}(b_{s_1}(s_{s_1}(x1)))
   u_{t_1}(t_{b_1}(b_{t_1}(x1))) -> u_{b_1}(b_{s_1}(s_{t_1}(x1)))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   s_{t_1}(t_{u_1}(u_{b_1}(x1))) -> s_{u_1}(u_{t_1}(t_{b_1}(x1)))
   s_{t_1}(t_{u_1}(u_{u_1}(x1))) -> s_{u_1}(u_{t_1}(t_{u_1}(x1)))
   s_{t_1}(t_{u_1}(u_{t_1}(x1))) -> s_{u_1}(u_{t_1}(t_{t_1}(x1)))
   b_{t_1}(t_{u_1}(u_{b_1}(x1))) -> b_{u_1}(u_{t_1}(t_{b_1}(x1)))
   b_{t_1}(t_{u_1}(u_{u_1}(x1))) -> b_{u_1}(u_{t_1}(t_{u_1}(x1)))
   b_{t_1}(t_{u_1}(u_{t_1}(x1))) -> b_{u_1}(u_{t_1}(t_{t_1}(x1)))
   t_{t_1}(t_{u_1}(u_{b_1}(x1))) -> t_{u_1}(u_{t_1}(t_{b_1}(x1)))
   t_{t_1}(t_{u_1}(u_{u_1}(x1))) -> t_{u_1}(u_{t_1}(t_{u_1}(x1)))
   t_{t_1}(t_{u_1}(u_{t_1}(x1))) -> t_{u_1}(u_{t_1}(t_{t_1}(x1)))
   u_{t_1}(t_{u_1}(u_{b_1}(x1))) -> u_{u_1}(u_{t_1}(t_{b_1}(x1)))
   u_{t_1}(t_{u_1}(u_{u_1}(x1))) -> u_{u_1}(u_{t_1}(t_{u_1}(x1)))
   u_{t_1}(t_{u_1}(u_{t_1}(x1))) -> u_{u_1}(u_{t_1}(t_{t_1}(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   T_{S_1}(s_{s_1}(x1)) -> T_{S_1}(x1)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   T_{S_1}(s_{s_1}(x1)) -> T_{S_1}(x1)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(T_{S_1}(x_1)) = x_1
   POL(s_{s_1}(x_1)) = 1 + x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:
none


----------------------------------------

(22)
Obligation:
Q DP problem:
P is empty.
R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(23) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(24)
YES

----------------------------------------

(25)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U_{T_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> U_{T_1}(t_{b_1}(b_{s_1}(x1)))
   U_{T_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> U_{T_1}(t_{b_1}(b_{u_1}(x1)))
   U_{T_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> U_{T_1}(t_{b_1}(b_{t_1}(x1)))

The TRS R consists of the following rules:

   b_{u_1}(u_{b_1}(x1)) -> b_{s_1}(s_{b_1}(x1))
   b_{u_1}(u_{u_1}(x1)) -> b_{s_1}(s_{u_1}(x1))
   b_{u_1}(u_{t_1}(x1)) -> b_{s_1}(s_{t_1}(x1))
   t_{s_1}(s_{b_1}(x1)) -> t_{t_1}(t_{b_1}(x1))
   t_{s_1}(s_{u_1}(x1)) -> t_{t_1}(t_{u_1}(x1))
   t_{s_1}(s_{s_1}(x1)) -> t_{t_1}(t_{s_1}(x1))
   t_{s_1}(s_{t_1}(x1)) -> t_{t_1}(t_{t_1}(x1))
   s_{u_1}(u_{b_1}(x1)) -> s_{s_1}(s_{b_1}(x1))
   s_{u_1}(u_{u_1}(x1)) -> s_{s_1}(s_{u_1}(x1))
   s_{u_1}(u_{t_1}(x1)) -> s_{s_1}(s_{t_1}(x1))
   s_{s_1}(s_{b_1}(b_{b_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{u_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{s_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{t_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{b_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{u_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{s_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{t_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{b_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{u_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{s_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{t_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{b_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{u_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{s_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{t_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{b_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{u_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{s_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{t_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{b_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{u_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{s_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{t_1}(x1)))
   s_{t_1}(t_{b_1}(b_{b_1}(x1))) -> s_{b_1}(b_{s_1}(s_{b_1}(x1)))
   s_{t_1}(t_{b_1}(b_{u_1}(x1))) -> s_{b_1}(b_{s_1}(s_{u_1}(x1)))
   s_{t_1}(t_{b_1}(b_{s_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(x1)))
   s_{t_1}(t_{b_1}(b_{t_1}(x1))) -> s_{b_1}(b_{s_1}(s_{t_1}(x1)))
   b_{t_1}(t_{b_1}(b_{b_1}(x1))) -> b_{b_1}(b_{s_1}(s_{b_1}(x1)))
   b_{t_1}(t_{b_1}(b_{u_1}(x1))) -> b_{b_1}(b_{s_1}(s_{u_1}(x1)))
   b_{t_1}(t_{b_1}(b_{s_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(x1)))
   b_{t_1}(t_{b_1}(b_{t_1}(x1))) -> b_{b_1}(b_{s_1}(s_{t_1}(x1)))
   t_{t_1}(t_{b_1}(b_{b_1}(x1))) -> t_{b_1}(b_{s_1}(s_{b_1}(x1)))
   t_{t_1}(t_{b_1}(b_{u_1}(x1))) -> t_{b_1}(b_{s_1}(s_{u_1}(x1)))
   t_{t_1}(t_{b_1}(b_{s_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(x1)))
   t_{t_1}(t_{b_1}(b_{t_1}(x1))) -> t_{b_1}(b_{s_1}(s_{t_1}(x1)))
   u_{t_1}(t_{b_1}(b_{b_1}(x1))) -> u_{b_1}(b_{s_1}(s_{b_1}(x1)))
   u_{t_1}(t_{b_1}(b_{u_1}(x1))) -> u_{b_1}(b_{s_1}(s_{u_1}(x1)))
   u_{t_1}(t_{b_1}(b_{s_1}(x1))) -> u_{b_1}(b_{s_1}(s_{s_1}(x1)))
   u_{t_1}(t_{b_1}(b_{t_1}(x1))) -> u_{b_1}(b_{s_1}(s_{t_1}(x1)))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   s_{t_1}(t_{u_1}(u_{b_1}(x1))) -> s_{u_1}(u_{t_1}(t_{b_1}(x1)))
   s_{t_1}(t_{u_1}(u_{u_1}(x1))) -> s_{u_1}(u_{t_1}(t_{u_1}(x1)))
   s_{t_1}(t_{u_1}(u_{t_1}(x1))) -> s_{u_1}(u_{t_1}(t_{t_1}(x1)))
   b_{t_1}(t_{u_1}(u_{b_1}(x1))) -> b_{u_1}(u_{t_1}(t_{b_1}(x1)))
   b_{t_1}(t_{u_1}(u_{u_1}(x1))) -> b_{u_1}(u_{t_1}(t_{u_1}(x1)))
   b_{t_1}(t_{u_1}(u_{t_1}(x1))) -> b_{u_1}(u_{t_1}(t_{t_1}(x1)))
   t_{t_1}(t_{u_1}(u_{b_1}(x1))) -> t_{u_1}(u_{t_1}(t_{b_1}(x1)))
   t_{t_1}(t_{u_1}(u_{u_1}(x1))) -> t_{u_1}(u_{t_1}(t_{u_1}(x1)))
   t_{t_1}(t_{u_1}(u_{t_1}(x1))) -> t_{u_1}(u_{t_1}(t_{t_1}(x1)))
   u_{t_1}(t_{u_1}(u_{b_1}(x1))) -> u_{u_1}(u_{t_1}(t_{b_1}(x1)))
   u_{t_1}(t_{u_1}(u_{u_1}(x1))) -> u_{u_1}(u_{t_1}(t_{u_1}(x1)))
   u_{t_1}(t_{u_1}(u_{t_1}(x1))) -> u_{u_1}(u_{t_1}(t_{t_1}(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(26) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   U_{T_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> U_{T_1}(t_{b_1}(b_{s_1}(x1)))
   U_{T_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> U_{T_1}(t_{b_1}(b_{u_1}(x1)))
   U_{T_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> U_{T_1}(t_{b_1}(b_{t_1}(x1)))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(U_{T_1}(x_1)) = x_1
   POL(b_{b_1}(x_1)) = 0
   POL(b_{s_1}(x_1)) = x_1
   POL(b_{t_1}(x_1)) = x_1
   POL(b_{u_1}(x_1)) = x_1
   POL(s_{b_1}(x_1)) = 1
   POL(s_{s_1}(x_1)) = 1 + x_1
   POL(s_{t_1}(x_1)) = 1 + x_1
   POL(s_{u_1}(x_1)) = 1 + x_1
   POL(t_{b_1}(x_1)) = 1 + x_1
   POL(t_{s_1}(x_1)) = 0
   POL(t_{t_1}(x_1)) = 1 + x_1
   POL(t_{u_1}(x_1)) = 1 + x_1
   POL(u_{b_1}(x_1)) = 1 + x_1
   POL(u_{t_1}(x_1)) = 1 + x_1
   POL(u_{u_1}(x_1)) = 1 + x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   b_{s_1}(s_{b_1}(b_{b_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{u_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{s_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{t_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{b_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{u_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{s_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{t_1}(x1)))
   b_{u_1}(u_{b_1}(x1)) -> b_{s_1}(s_{b_1}(x1))
   b_{u_1}(u_{u_1}(x1)) -> b_{s_1}(s_{u_1}(x1))
   b_{u_1}(u_{t_1}(x1)) -> b_{s_1}(s_{t_1}(x1))
   b_{t_1}(t_{b_1}(b_{b_1}(x1))) -> b_{b_1}(b_{s_1}(s_{b_1}(x1)))
   b_{t_1}(t_{b_1}(b_{u_1}(x1))) -> b_{b_1}(b_{s_1}(s_{u_1}(x1)))
   b_{t_1}(t_{b_1}(b_{s_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(x1)))
   b_{t_1}(t_{b_1}(b_{t_1}(x1))) -> b_{b_1}(b_{s_1}(s_{t_1}(x1)))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   b_{t_1}(t_{u_1}(u_{b_1}(x1))) -> b_{u_1}(u_{t_1}(t_{b_1}(x1)))
   b_{t_1}(t_{u_1}(u_{u_1}(x1))) -> b_{u_1}(u_{t_1}(t_{u_1}(x1)))
   b_{t_1}(t_{u_1}(u_{t_1}(x1))) -> b_{u_1}(u_{t_1}(t_{t_1}(x1)))
   s_{s_1}(s_{b_1}(b_{b_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{u_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{s_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{t_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{b_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{u_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{s_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{t_1}(x1)))
   s_{u_1}(u_{b_1}(x1)) -> s_{s_1}(s_{b_1}(x1))
   s_{u_1}(u_{u_1}(x1)) -> s_{s_1}(s_{u_1}(x1))
   s_{u_1}(u_{t_1}(x1)) -> s_{s_1}(s_{t_1}(x1))
   s_{t_1}(t_{b_1}(b_{b_1}(x1))) -> s_{b_1}(b_{s_1}(s_{b_1}(x1)))
   s_{t_1}(t_{b_1}(b_{u_1}(x1))) -> s_{b_1}(b_{s_1}(s_{u_1}(x1)))
   s_{t_1}(t_{b_1}(b_{s_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(x1)))
   s_{t_1}(t_{b_1}(b_{t_1}(x1))) -> s_{b_1}(b_{s_1}(s_{t_1}(x1)))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   s_{t_1}(t_{u_1}(u_{b_1}(x1))) -> s_{u_1}(u_{t_1}(t_{b_1}(x1)))
   s_{t_1}(t_{u_1}(u_{u_1}(x1))) -> s_{u_1}(u_{t_1}(t_{u_1}(x1)))
   s_{t_1}(t_{u_1}(u_{t_1}(x1))) -> s_{u_1}(u_{t_1}(t_{t_1}(x1)))
   u_{t_1}(t_{b_1}(b_{b_1}(x1))) -> u_{b_1}(b_{s_1}(s_{b_1}(x1)))
   u_{t_1}(t_{b_1}(b_{u_1}(x1))) -> u_{b_1}(b_{s_1}(s_{u_1}(x1)))
   u_{t_1}(t_{b_1}(b_{s_1}(x1))) -> u_{b_1}(b_{s_1}(s_{s_1}(x1)))
   u_{t_1}(t_{b_1}(b_{t_1}(x1))) -> u_{b_1}(b_{s_1}(s_{t_1}(x1)))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   u_{t_1}(t_{u_1}(u_{b_1}(x1))) -> u_{u_1}(u_{t_1}(t_{b_1}(x1)))
   u_{t_1}(t_{u_1}(u_{u_1}(x1))) -> u_{u_1}(u_{t_1}(t_{u_1}(x1)))
   u_{t_1}(t_{u_1}(u_{t_1}(x1))) -> u_{u_1}(u_{t_1}(t_{t_1}(x1)))
   t_{t_1}(t_{b_1}(b_{b_1}(x1))) -> t_{b_1}(b_{s_1}(s_{b_1}(x1)))
   t_{t_1}(t_{b_1}(b_{u_1}(x1))) -> t_{b_1}(b_{s_1}(s_{u_1}(x1)))
   t_{t_1}(t_{b_1}(b_{s_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(x1)))
   t_{t_1}(t_{b_1}(b_{t_1}(x1))) -> t_{b_1}(b_{s_1}(s_{t_1}(x1)))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   t_{t_1}(t_{u_1}(u_{b_1}(x1))) -> t_{u_1}(u_{t_1}(t_{b_1}(x1)))
   t_{t_1}(t_{u_1}(u_{u_1}(x1))) -> t_{u_1}(u_{t_1}(t_{u_1}(x1)))
   t_{t_1}(t_{u_1}(u_{t_1}(x1))) -> t_{u_1}(u_{t_1}(t_{t_1}(x1)))


----------------------------------------

(27)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   b_{u_1}(u_{b_1}(x1)) -> b_{s_1}(s_{b_1}(x1))
   b_{u_1}(u_{u_1}(x1)) -> b_{s_1}(s_{u_1}(x1))
   b_{u_1}(u_{t_1}(x1)) -> b_{s_1}(s_{t_1}(x1))
   t_{s_1}(s_{b_1}(x1)) -> t_{t_1}(t_{b_1}(x1))
   t_{s_1}(s_{u_1}(x1)) -> t_{t_1}(t_{u_1}(x1))
   t_{s_1}(s_{s_1}(x1)) -> t_{t_1}(t_{s_1}(x1))
   t_{s_1}(s_{t_1}(x1)) -> t_{t_1}(t_{t_1}(x1))
   s_{u_1}(u_{b_1}(x1)) -> s_{s_1}(s_{b_1}(x1))
   s_{u_1}(u_{u_1}(x1)) -> s_{s_1}(s_{u_1}(x1))
   s_{u_1}(u_{t_1}(x1)) -> s_{s_1}(s_{t_1}(x1))
   s_{s_1}(s_{b_1}(b_{b_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{u_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{s_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{t_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{b_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{u_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{s_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{t_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{b_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{u_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{s_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{t_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{b_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{u_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{s_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{t_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{b_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{u_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{s_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{t_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{b_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{u_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{s_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{t_1}(x1)))
   s_{t_1}(t_{b_1}(b_{b_1}(x1))) -> s_{b_1}(b_{s_1}(s_{b_1}(x1)))
   s_{t_1}(t_{b_1}(b_{u_1}(x1))) -> s_{b_1}(b_{s_1}(s_{u_1}(x1)))
   s_{t_1}(t_{b_1}(b_{s_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(x1)))
   s_{t_1}(t_{b_1}(b_{t_1}(x1))) -> s_{b_1}(b_{s_1}(s_{t_1}(x1)))
   b_{t_1}(t_{b_1}(b_{b_1}(x1))) -> b_{b_1}(b_{s_1}(s_{b_1}(x1)))
   b_{t_1}(t_{b_1}(b_{u_1}(x1))) -> b_{b_1}(b_{s_1}(s_{u_1}(x1)))
   b_{t_1}(t_{b_1}(b_{s_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(x1)))
   b_{t_1}(t_{b_1}(b_{t_1}(x1))) -> b_{b_1}(b_{s_1}(s_{t_1}(x1)))
   t_{t_1}(t_{b_1}(b_{b_1}(x1))) -> t_{b_1}(b_{s_1}(s_{b_1}(x1)))
   t_{t_1}(t_{b_1}(b_{u_1}(x1))) -> t_{b_1}(b_{s_1}(s_{u_1}(x1)))
   t_{t_1}(t_{b_1}(b_{s_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(x1)))
   t_{t_1}(t_{b_1}(b_{t_1}(x1))) -> t_{b_1}(b_{s_1}(s_{t_1}(x1)))
   u_{t_1}(t_{b_1}(b_{b_1}(x1))) -> u_{b_1}(b_{s_1}(s_{b_1}(x1)))
   u_{t_1}(t_{b_1}(b_{u_1}(x1))) -> u_{b_1}(b_{s_1}(s_{u_1}(x1)))
   u_{t_1}(t_{b_1}(b_{s_1}(x1))) -> u_{b_1}(b_{s_1}(s_{s_1}(x1)))
   u_{t_1}(t_{b_1}(b_{t_1}(x1))) -> u_{b_1}(b_{s_1}(s_{t_1}(x1)))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   s_{t_1}(t_{u_1}(u_{b_1}(x1))) -> s_{u_1}(u_{t_1}(t_{b_1}(x1)))
   s_{t_1}(t_{u_1}(u_{u_1}(x1))) -> s_{u_1}(u_{t_1}(t_{u_1}(x1)))
   s_{t_1}(t_{u_1}(u_{t_1}(x1))) -> s_{u_1}(u_{t_1}(t_{t_1}(x1)))
   b_{t_1}(t_{u_1}(u_{b_1}(x1))) -> b_{u_1}(u_{t_1}(t_{b_1}(x1)))
   b_{t_1}(t_{u_1}(u_{u_1}(x1))) -> b_{u_1}(u_{t_1}(t_{u_1}(x1)))
   b_{t_1}(t_{u_1}(u_{t_1}(x1))) -> b_{u_1}(u_{t_1}(t_{t_1}(x1)))
   t_{t_1}(t_{u_1}(u_{b_1}(x1))) -> t_{u_1}(u_{t_1}(t_{b_1}(x1)))
   t_{t_1}(t_{u_1}(u_{u_1}(x1))) -> t_{u_1}(u_{t_1}(t_{u_1}(x1)))
   t_{t_1}(t_{u_1}(u_{t_1}(x1))) -> t_{u_1}(u_{t_1}(t_{t_1}(x1)))
   u_{t_1}(t_{u_1}(u_{b_1}(x1))) -> u_{u_1}(u_{t_1}(t_{b_1}(x1)))
   u_{t_1}(t_{u_1}(u_{u_1}(x1))) -> u_{u_1}(u_{t_1}(t_{u_1}(x1)))
   u_{t_1}(t_{u_1}(u_{t_1}(x1))) -> u_{u_1}(u_{t_1}(t_{t_1}(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(28) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(29)
YES

----------------------------------------

(30)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   T_{T_1}(t_{u_1}(u_{u_1}(x1))) -> U_{T_1}(t_{u_1}(x1))
   U_{T_1}(t_{u_1}(u_{u_1}(x1))) -> U_{T_1}(t_{u_1}(x1))
   U_{T_1}(t_{u_1}(u_{t_1}(x1))) -> U_{T_1}(t_{t_1}(x1))
   U_{T_1}(t_{u_1}(u_{t_1}(x1))) -> T_{T_1}(x1)
   T_{T_1}(t_{u_1}(u_{t_1}(x1))) -> U_{T_1}(t_{t_1}(x1))
   T_{T_1}(t_{u_1}(u_{t_1}(x1))) -> T_{T_1}(x1)

The TRS R consists of the following rules:

   b_{u_1}(u_{b_1}(x1)) -> b_{s_1}(s_{b_1}(x1))
   b_{u_1}(u_{u_1}(x1)) -> b_{s_1}(s_{u_1}(x1))
   b_{u_1}(u_{t_1}(x1)) -> b_{s_1}(s_{t_1}(x1))
   t_{s_1}(s_{b_1}(x1)) -> t_{t_1}(t_{b_1}(x1))
   t_{s_1}(s_{u_1}(x1)) -> t_{t_1}(t_{u_1}(x1))
   t_{s_1}(s_{s_1}(x1)) -> t_{t_1}(t_{s_1}(x1))
   t_{s_1}(s_{t_1}(x1)) -> t_{t_1}(t_{t_1}(x1))
   s_{u_1}(u_{b_1}(x1)) -> s_{s_1}(s_{b_1}(x1))
   s_{u_1}(u_{u_1}(x1)) -> s_{s_1}(s_{u_1}(x1))
   s_{u_1}(u_{t_1}(x1)) -> s_{s_1}(s_{t_1}(x1))
   s_{s_1}(s_{b_1}(b_{b_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{u_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{s_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{t_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{b_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{u_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{s_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{t_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{b_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{u_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{s_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{t_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{b_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{u_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{s_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{t_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{b_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{u_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{s_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{t_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{b_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{u_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{s_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{t_1}(x1)))
   s_{t_1}(t_{b_1}(b_{b_1}(x1))) -> s_{b_1}(b_{s_1}(s_{b_1}(x1)))
   s_{t_1}(t_{b_1}(b_{u_1}(x1))) -> s_{b_1}(b_{s_1}(s_{u_1}(x1)))
   s_{t_1}(t_{b_1}(b_{s_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(x1)))
   s_{t_1}(t_{b_1}(b_{t_1}(x1))) -> s_{b_1}(b_{s_1}(s_{t_1}(x1)))
   b_{t_1}(t_{b_1}(b_{b_1}(x1))) -> b_{b_1}(b_{s_1}(s_{b_1}(x1)))
   b_{t_1}(t_{b_1}(b_{u_1}(x1))) -> b_{b_1}(b_{s_1}(s_{u_1}(x1)))
   b_{t_1}(t_{b_1}(b_{s_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(x1)))
   b_{t_1}(t_{b_1}(b_{t_1}(x1))) -> b_{b_1}(b_{s_1}(s_{t_1}(x1)))
   t_{t_1}(t_{b_1}(b_{b_1}(x1))) -> t_{b_1}(b_{s_1}(s_{b_1}(x1)))
   t_{t_1}(t_{b_1}(b_{u_1}(x1))) -> t_{b_1}(b_{s_1}(s_{u_1}(x1)))
   t_{t_1}(t_{b_1}(b_{s_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(x1)))
   t_{t_1}(t_{b_1}(b_{t_1}(x1))) -> t_{b_1}(b_{s_1}(s_{t_1}(x1)))
   u_{t_1}(t_{b_1}(b_{b_1}(x1))) -> u_{b_1}(b_{s_1}(s_{b_1}(x1)))
   u_{t_1}(t_{b_1}(b_{u_1}(x1))) -> u_{b_1}(b_{s_1}(s_{u_1}(x1)))
   u_{t_1}(t_{b_1}(b_{s_1}(x1))) -> u_{b_1}(b_{s_1}(s_{s_1}(x1)))
   u_{t_1}(t_{b_1}(b_{t_1}(x1))) -> u_{b_1}(b_{s_1}(s_{t_1}(x1)))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   s_{t_1}(t_{u_1}(u_{b_1}(x1))) -> s_{u_1}(u_{t_1}(t_{b_1}(x1)))
   s_{t_1}(t_{u_1}(u_{u_1}(x1))) -> s_{u_1}(u_{t_1}(t_{u_1}(x1)))
   s_{t_1}(t_{u_1}(u_{t_1}(x1))) -> s_{u_1}(u_{t_1}(t_{t_1}(x1)))
   b_{t_1}(t_{u_1}(u_{b_1}(x1))) -> b_{u_1}(u_{t_1}(t_{b_1}(x1)))
   b_{t_1}(t_{u_1}(u_{u_1}(x1))) -> b_{u_1}(u_{t_1}(t_{u_1}(x1)))
   b_{t_1}(t_{u_1}(u_{t_1}(x1))) -> b_{u_1}(u_{t_1}(t_{t_1}(x1)))
   t_{t_1}(t_{u_1}(u_{b_1}(x1))) -> t_{u_1}(u_{t_1}(t_{b_1}(x1)))
   t_{t_1}(t_{u_1}(u_{u_1}(x1))) -> t_{u_1}(u_{t_1}(t_{u_1}(x1)))
   t_{t_1}(t_{u_1}(u_{t_1}(x1))) -> t_{u_1}(u_{t_1}(t_{t_1}(x1)))
   u_{t_1}(t_{u_1}(u_{b_1}(x1))) -> u_{u_1}(u_{t_1}(t_{b_1}(x1)))
   u_{t_1}(t_{u_1}(u_{u_1}(x1))) -> u_{u_1}(u_{t_1}(t_{u_1}(x1)))
   u_{t_1}(t_{u_1}(u_{t_1}(x1))) -> u_{u_1}(u_{t_1}(t_{t_1}(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(31) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   T_{T_1}(t_{u_1}(u_{u_1}(x1))) -> U_{T_1}(t_{u_1}(x1))
   U_{T_1}(t_{u_1}(u_{u_1}(x1))) -> U_{T_1}(t_{u_1}(x1))
   U_{T_1}(t_{u_1}(u_{t_1}(x1))) -> U_{T_1}(t_{t_1}(x1))
   U_{T_1}(t_{u_1}(u_{t_1}(x1))) -> T_{T_1}(x1)
   T_{T_1}(t_{u_1}(u_{t_1}(x1))) -> U_{T_1}(t_{t_1}(x1))
   T_{T_1}(t_{u_1}(u_{t_1}(x1))) -> T_{T_1}(x1)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(T_{T_1}(x_1)) = x_1
   POL(U_{T_1}(x_1)) = x_1
   POL(b_{b_1}(x_1)) = 0
   POL(b_{s_1}(x_1)) = 1 + x_1
   POL(b_{t_1}(x_1)) = 1 + x_1
   POL(b_{u_1}(x_1)) = 1 + x_1
   POL(s_{b_1}(x_1)) = 0
   POL(s_{s_1}(x_1)) = 1 + x_1
   POL(s_{t_1}(x_1)) = 1 + x_1
   POL(s_{u_1}(x_1)) = 1 + x_1
   POL(t_{b_1}(x_1)) = x_1
   POL(t_{s_1}(x_1)) = 0
   POL(t_{t_1}(x_1)) = 1 + x_1
   POL(t_{u_1}(x_1)) = 1 + x_1
   POL(u_{b_1}(x_1)) = x_1
   POL(u_{t_1}(x_1)) = 1 + x_1
   POL(u_{u_1}(x_1)) = 1 + x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   t_{t_1}(t_{b_1}(b_{b_1}(x1))) -> t_{b_1}(b_{s_1}(s_{b_1}(x1)))
   t_{t_1}(t_{b_1}(b_{u_1}(x1))) -> t_{b_1}(b_{s_1}(s_{u_1}(x1)))
   t_{t_1}(t_{b_1}(b_{s_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(x1)))
   t_{t_1}(t_{b_1}(b_{t_1}(x1))) -> t_{b_1}(b_{s_1}(s_{t_1}(x1)))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   t_{t_1}(t_{u_1}(u_{b_1}(x1))) -> t_{u_1}(u_{t_1}(t_{b_1}(x1)))
   t_{t_1}(t_{u_1}(u_{u_1}(x1))) -> t_{u_1}(u_{t_1}(t_{u_1}(x1)))
   t_{t_1}(t_{u_1}(u_{t_1}(x1))) -> t_{u_1}(u_{t_1}(t_{t_1}(x1)))
   b_{s_1}(s_{b_1}(b_{b_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{u_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{s_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{t_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{b_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{u_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{s_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{t_1}(x1)))
   s_{u_1}(u_{b_1}(x1)) -> s_{s_1}(s_{b_1}(x1))
   s_{u_1}(u_{u_1}(x1)) -> s_{s_1}(s_{u_1}(x1))
   s_{u_1}(u_{t_1}(x1)) -> s_{s_1}(s_{t_1}(x1))
   s_{s_1}(s_{b_1}(b_{b_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{u_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{s_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{t_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{b_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{u_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{s_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{t_1}(x1)))
   u_{t_1}(t_{b_1}(b_{b_1}(x1))) -> u_{b_1}(b_{s_1}(s_{b_1}(x1)))
   u_{t_1}(t_{b_1}(b_{u_1}(x1))) -> u_{b_1}(b_{s_1}(s_{u_1}(x1)))
   u_{t_1}(t_{b_1}(b_{s_1}(x1))) -> u_{b_1}(b_{s_1}(s_{s_1}(x1)))
   u_{t_1}(t_{b_1}(b_{t_1}(x1))) -> u_{b_1}(b_{s_1}(s_{t_1}(x1)))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   s_{t_1}(t_{b_1}(b_{b_1}(x1))) -> s_{b_1}(b_{s_1}(s_{b_1}(x1)))
   s_{t_1}(t_{b_1}(b_{u_1}(x1))) -> s_{b_1}(b_{s_1}(s_{u_1}(x1)))
   s_{t_1}(t_{b_1}(b_{s_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(x1)))
   s_{t_1}(t_{b_1}(b_{t_1}(x1))) -> s_{b_1}(b_{s_1}(s_{t_1}(x1)))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   s_{t_1}(t_{u_1}(u_{b_1}(x1))) -> s_{u_1}(u_{t_1}(t_{b_1}(x1)))
   s_{t_1}(t_{u_1}(u_{u_1}(x1))) -> s_{u_1}(u_{t_1}(t_{u_1}(x1)))
   s_{t_1}(t_{u_1}(u_{t_1}(x1))) -> s_{u_1}(u_{t_1}(t_{t_1}(x1)))
   b_{u_1}(u_{b_1}(x1)) -> b_{s_1}(s_{b_1}(x1))
   b_{u_1}(u_{u_1}(x1)) -> b_{s_1}(s_{u_1}(x1))
   b_{u_1}(u_{t_1}(x1)) -> b_{s_1}(s_{t_1}(x1))
   b_{t_1}(t_{b_1}(b_{b_1}(x1))) -> b_{b_1}(b_{s_1}(s_{b_1}(x1)))
   b_{t_1}(t_{b_1}(b_{u_1}(x1))) -> b_{b_1}(b_{s_1}(s_{u_1}(x1)))
   b_{t_1}(t_{b_1}(b_{s_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(x1)))
   b_{t_1}(t_{b_1}(b_{t_1}(x1))) -> b_{b_1}(b_{s_1}(s_{t_1}(x1)))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   b_{t_1}(t_{u_1}(u_{b_1}(x1))) -> b_{u_1}(u_{t_1}(t_{b_1}(x1)))
   b_{t_1}(t_{u_1}(u_{u_1}(x1))) -> b_{u_1}(u_{t_1}(t_{u_1}(x1)))
   b_{t_1}(t_{u_1}(u_{t_1}(x1))) -> b_{u_1}(u_{t_1}(t_{t_1}(x1)))
   u_{t_1}(t_{u_1}(u_{b_1}(x1))) -> u_{u_1}(u_{t_1}(t_{b_1}(x1)))
   u_{t_1}(t_{u_1}(u_{u_1}(x1))) -> u_{u_1}(u_{t_1}(t_{u_1}(x1)))
   u_{t_1}(t_{u_1}(u_{t_1}(x1))) -> u_{u_1}(u_{t_1}(t_{t_1}(x1)))


----------------------------------------

(32)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   b_{u_1}(u_{b_1}(x1)) -> b_{s_1}(s_{b_1}(x1))
   b_{u_1}(u_{u_1}(x1)) -> b_{s_1}(s_{u_1}(x1))
   b_{u_1}(u_{t_1}(x1)) -> b_{s_1}(s_{t_1}(x1))
   t_{s_1}(s_{b_1}(x1)) -> t_{t_1}(t_{b_1}(x1))
   t_{s_1}(s_{u_1}(x1)) -> t_{t_1}(t_{u_1}(x1))
   t_{s_1}(s_{s_1}(x1)) -> t_{t_1}(t_{s_1}(x1))
   t_{s_1}(s_{t_1}(x1)) -> t_{t_1}(t_{t_1}(x1))
   s_{u_1}(u_{b_1}(x1)) -> s_{s_1}(s_{b_1}(x1))
   s_{u_1}(u_{u_1}(x1)) -> s_{s_1}(s_{u_1}(x1))
   s_{u_1}(u_{t_1}(x1)) -> s_{s_1}(s_{t_1}(x1))
   s_{s_1}(s_{b_1}(b_{b_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{u_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{s_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{t_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{b_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{u_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{s_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   b_{s_1}(s_{b_1}(b_{t_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{b_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{b_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{u_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{u_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{s_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{s_1}(x1)))))
   t_{s_1}(s_{b_1}(b_{t_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(s_{s_1}(s_{t_1}(x1)))))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{b_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{u_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{s_1}(x1)))
   s_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> s_{b_1}(b_{t_1}(t_{t_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{b_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{u_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{s_1}(x1)))
   b_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> b_{b_1}(b_{t_1}(t_{t_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{b_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{u_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{s_1}(x1)))
   t_{s_1}(s_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> t_{b_1}(b_{t_1}(t_{t_1}(x1)))
   s_{t_1}(t_{b_1}(b_{b_1}(x1))) -> s_{b_1}(b_{s_1}(s_{b_1}(x1)))
   s_{t_1}(t_{b_1}(b_{u_1}(x1))) -> s_{b_1}(b_{s_1}(s_{u_1}(x1)))
   s_{t_1}(t_{b_1}(b_{s_1}(x1))) -> s_{b_1}(b_{s_1}(s_{s_1}(x1)))
   s_{t_1}(t_{b_1}(b_{t_1}(x1))) -> s_{b_1}(b_{s_1}(s_{t_1}(x1)))
   b_{t_1}(t_{b_1}(b_{b_1}(x1))) -> b_{b_1}(b_{s_1}(s_{b_1}(x1)))
   b_{t_1}(t_{b_1}(b_{u_1}(x1))) -> b_{b_1}(b_{s_1}(s_{u_1}(x1)))
   b_{t_1}(t_{b_1}(b_{s_1}(x1))) -> b_{b_1}(b_{s_1}(s_{s_1}(x1)))
   b_{t_1}(t_{b_1}(b_{t_1}(x1))) -> b_{b_1}(b_{s_1}(s_{t_1}(x1)))
   t_{t_1}(t_{b_1}(b_{b_1}(x1))) -> t_{b_1}(b_{s_1}(s_{b_1}(x1)))
   t_{t_1}(t_{b_1}(b_{u_1}(x1))) -> t_{b_1}(b_{s_1}(s_{u_1}(x1)))
   t_{t_1}(t_{b_1}(b_{s_1}(x1))) -> t_{b_1}(b_{s_1}(s_{s_1}(x1)))
   t_{t_1}(t_{b_1}(b_{t_1}(x1))) -> t_{b_1}(b_{s_1}(s_{t_1}(x1)))
   u_{t_1}(t_{b_1}(b_{b_1}(x1))) -> u_{b_1}(b_{s_1}(s_{b_1}(x1)))
   u_{t_1}(t_{b_1}(b_{u_1}(x1))) -> u_{b_1}(b_{s_1}(s_{u_1}(x1)))
   u_{t_1}(t_{b_1}(b_{s_1}(x1))) -> u_{b_1}(b_{s_1}(s_{s_1}(x1)))
   u_{t_1}(t_{b_1}(b_{t_1}(x1))) -> u_{b_1}(b_{s_1}(s_{t_1}(x1)))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   s_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> s_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   b_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> b_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   t_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> t_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{b_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{b_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{u_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{u_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{s_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{s_1}(x1))))
   u_{t_1}(t_{b_1}(b_{s_1}(s_{t_1}(x1)))) -> u_{u_1}(u_{t_1}(t_{b_1}(b_{t_1}(x1))))
   s_{t_1}(t_{u_1}(u_{b_1}(x1))) -> s_{u_1}(u_{t_1}(t_{b_1}(x1)))
   s_{t_1}(t_{u_1}(u_{u_1}(x1))) -> s_{u_1}(u_{t_1}(t_{u_1}(x1)))
   s_{t_1}(t_{u_1}(u_{t_1}(x1))) -> s_{u_1}(u_{t_1}(t_{t_1}(x1)))
   b_{t_1}(t_{u_1}(u_{b_1}(x1))) -> b_{u_1}(u_{t_1}(t_{b_1}(x1)))
   b_{t_1}(t_{u_1}(u_{u_1}(x1))) -> b_{u_1}(u_{t_1}(t_{u_1}(x1)))
   b_{t_1}(t_{u_1}(u_{t_1}(x1))) -> b_{u_1}(u_{t_1}(t_{t_1}(x1)))
   t_{t_1}(t_{u_1}(u_{b_1}(x1))) -> t_{u_1}(u_{t_1}(t_{b_1}(x1)))
   t_{t_1}(t_{u_1}(u_{u_1}(x1))) -> t_{u_1}(u_{t_1}(t_{u_1}(x1)))
   t_{t_1}(t_{u_1}(u_{t_1}(x1))) -> t_{u_1}(u_{t_1}(t_{t_1}(x1)))
   u_{t_1}(t_{u_1}(u_{b_1}(x1))) -> u_{u_1}(u_{t_1}(t_{b_1}(x1)))
   u_{t_1}(t_{u_1}(u_{u_1}(x1))) -> u_{u_1}(u_{t_1}(t_{u_1}(x1)))
   u_{t_1}(t_{u_1}(u_{t_1}(x1))) -> u_{u_1}(u_{t_1}(t_{t_1}(x1)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(33) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(34)
YES
