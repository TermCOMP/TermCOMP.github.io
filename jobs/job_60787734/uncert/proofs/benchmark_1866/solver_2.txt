YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/IjMXn.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) QDP
(5) MRRProof [EQUIVALENT, 5 ms]
(6) QDP
(7) MRRProof [EQUIVALENT, 2 ms]
(8) QDP
(9) DependencyGraphProof [EQUIVALENT, 0 ms]
(10) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(d(x1)) -> d(b(x1))
   a(x1) -> b(b(b(x1)))
   b(d(b(x1))) -> a(c(x1))
   c(x1) -> d(x1)

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(d(x1)) -> B(x1)
   A(x1) -> B(b(b(x1)))
   A(x1) -> B(b(x1))
   A(x1) -> B(x1)
   B(d(b(x1))) -> A(c(x1))
   B(d(b(x1))) -> C(x1)

The TRS R consists of the following rules:

   a(d(x1)) -> d(b(x1))
   a(x1) -> b(b(b(x1)))
   b(d(b(x1))) -> a(c(x1))
   c(x1) -> d(x1)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(d(b(x1))) -> A(c(x1))
   A(d(x1)) -> B(x1)
   A(x1) -> B(b(b(x1)))
   A(x1) -> B(b(x1))
   A(x1) -> B(x1)

The TRS R consists of the following rules:

   a(d(x1)) -> d(b(x1))
   a(x1) -> b(b(b(x1)))
   b(d(b(x1))) -> a(c(x1))
   c(x1) -> d(x1)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.

Strictly oriented dependency pairs:

   A(d(x1)) -> B(x1)


Used ordering: Polynomial interpretation [POLO]:

   POL(A(x_1)) = x_1
   POL(B(x_1)) = x_1
   POL(a(x_1)) = x_1
   POL(b(x_1)) = x_1
   POL(c(x_1)) = 1 + x_1
   POL(d(x_1)) = 1 + x_1


----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(d(b(x1))) -> A(c(x1))
   A(x1) -> B(b(b(x1)))
   A(x1) -> B(b(x1))
   A(x1) -> B(x1)

The TRS R consists of the following rules:

   a(d(x1)) -> d(b(x1))
   a(x1) -> b(b(b(x1)))
   b(d(b(x1))) -> a(c(x1))
   c(x1) -> d(x1)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.

Strictly oriented dependency pairs:

   A(x1) -> B(b(b(x1)))
   A(x1) -> B(b(x1))
   A(x1) -> B(x1)

Strictly oriented rules of the TRS R:

   b(d(b(x1))) -> a(c(x1))

Used ordering: Polynomial interpretation [POLO]:

   POL(A(x_1)) = 3 + x_1
   POL(B(x_1)) = x_1
   POL(a(x_1)) = 3 + x_1
   POL(b(x_1)) = 1 + x_1
   POL(c(x_1)) = 3*x_1
   POL(d(x_1)) = 3*x_1


----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(d(b(x1))) -> A(c(x1))

The TRS R consists of the following rules:

   a(d(x1)) -> d(b(x1))
   a(x1) -> b(b(b(x1)))
   c(x1) -> d(x1)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 1 less node.
----------------------------------------

(10)
TRUE
