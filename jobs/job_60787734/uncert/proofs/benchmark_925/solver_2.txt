YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/2aQox.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRS Reverse [EQUIVALENT, 0 ms]
(2) QTRS
(3) Overlay + Local Confluence [EQUIVALENT, 0 ms]
(4) QTRS
(5) DependencyPairsProof [EQUIVALENT, 4 ms]
(6) QDP
(7) DependencyGraphProof [EQUIVALENT, 0 ms]
(8) AND
    (9) QDP
        (10) UsableRulesProof [EQUIVALENT, 0 ms]
        (11) QDP
        (12) QReductionProof [EQUIVALENT, 0 ms]
        (13) QDP
        (14) QDPOrderProof [EQUIVALENT, 28 ms]
        (15) QDP
        (16) QDPOrderProof [EQUIVALENT, 28 ms]
        (17) QDP
        (18) DependencyGraphProof [EQUIVALENT, 0 ms]
        (19) QDP
        (20) UsableRulesProof [EQUIVALENT, 0 ms]
        (21) QDP
        (22) QReductionProof [EQUIVALENT, 0 ms]
        (23) QDP
        (24) QDPOrderProof [EQUIVALENT, 1 ms]
        (25) QDP
        (26) DependencyGraphProof [EQUIVALENT, 0 ms]
        (27) TRUE
    (28) QDP
        (29) UsableRulesProof [EQUIVALENT, 0 ms]
        (30) QDP
        (31) QReductionProof [EQUIVALENT, 0 ms]
        (32) QDP
        (33) QDPOrderProof [EQUIVALENT, 54 ms]
        (34) QDP
        (35) UsableRulesProof [EQUIVALENT, 0 ms]
        (36) QDP
        (37) QReductionProof [EQUIVALENT, 0 ms]
        (38) QDP
        (39) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (40) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   p(0(x1)) -> s(s(0(s(s(p(x1))))))
   p(s(0(x1))) -> 0(x1)
   p(s(s(x1))) -> s(p(s(x1)))
   f(s(x1)) -> g(q(i(x1)))
   g(x1) -> f(p(p(x1)))
   q(i(x1)) -> q(s(x1))
   q(s(x1)) -> s(s(x1))
   i(x1) -> s(x1)

Q is empty.

----------------------------------------

(1) QTRS Reverse (EQUIVALENT)
We applied the QTRS Reverse Processor [REVERSE].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   0(p(x1)) -> p(s(s(0(s(s(x1))))))
   0(s(p(x1))) -> 0(x1)
   s(s(p(x1))) -> s(p(s(x1)))
   s(f(x1)) -> i(q(g(x1)))
   g(x1) -> p(p(f(x1)))
   i(q(x1)) -> s(q(x1))
   s(q(x1)) -> s(s(x1))
   i(x1) -> s(x1)

Q is empty.

----------------------------------------

(3) Overlay + Local Confluence (EQUIVALENT)
The TRS is overlay and locally confluent. By [NOC] we can switch to innermost.
----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   0(p(x1)) -> p(s(s(0(s(s(x1))))))
   0(s(p(x1))) -> 0(x1)
   s(s(p(x1))) -> s(p(s(x1)))
   s(f(x1)) -> i(q(g(x1)))
   g(x1) -> p(p(f(x1)))
   i(q(x1)) -> s(q(x1))
   s(q(x1)) -> s(s(x1))
   i(x1) -> s(x1)

The set Q consists of the following terms:

   0(p(x0))
   0(s(p(x0)))
   s(s(p(x0)))
   s(f(x0))
   g(x0)
   s(q(x0))
   i(x0)


----------------------------------------

(5) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   0^1(p(x1)) -> S(s(0(s(s(x1)))))
   0^1(p(x1)) -> S(0(s(s(x1))))
   0^1(p(x1)) -> 0^1(s(s(x1)))
   0^1(p(x1)) -> S(s(x1))
   0^1(p(x1)) -> S(x1)
   0^1(s(p(x1))) -> 0^1(x1)
   S(s(p(x1))) -> S(p(s(x1)))
   S(s(p(x1))) -> S(x1)
   S(f(x1)) -> I(q(g(x1)))
   S(f(x1)) -> G(x1)
   I(q(x1)) -> S(q(x1))
   S(q(x1)) -> S(s(x1))
   S(q(x1)) -> S(x1)
   I(x1) -> S(x1)

The TRS R consists of the following rules:

   0(p(x1)) -> p(s(s(0(s(s(x1))))))
   0(s(p(x1))) -> 0(x1)
   s(s(p(x1))) -> s(p(s(x1)))
   s(f(x1)) -> i(q(g(x1)))
   g(x1) -> p(p(f(x1)))
   i(q(x1)) -> s(q(x1))
   s(q(x1)) -> s(s(x1))
   i(x1) -> s(x1)

The set Q consists of the following terms:

   0(p(x0))
   0(s(p(x0)))
   s(s(p(x0)))
   s(f(x0))
   g(x0)
   s(q(x0))
   i(x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 6 less nodes.
----------------------------------------

(8)
Complex Obligation (AND)

----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   S(f(x1)) -> I(q(g(x1)))
   I(q(x1)) -> S(q(x1))
   S(q(x1)) -> S(s(x1))
   S(s(p(x1))) -> S(x1)
   S(q(x1)) -> S(x1)
   I(x1) -> S(x1)

The TRS R consists of the following rules:

   0(p(x1)) -> p(s(s(0(s(s(x1))))))
   0(s(p(x1))) -> 0(x1)
   s(s(p(x1))) -> s(p(s(x1)))
   s(f(x1)) -> i(q(g(x1)))
   g(x1) -> p(p(f(x1)))
   i(q(x1)) -> s(q(x1))
   s(q(x1)) -> s(s(x1))
   i(x1) -> s(x1)

The set Q consists of the following terms:

   0(p(x0))
   0(s(p(x0)))
   s(s(p(x0)))
   s(f(x0))
   g(x0)
   s(q(x0))
   i(x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   S(f(x1)) -> I(q(g(x1)))
   I(q(x1)) -> S(q(x1))
   S(q(x1)) -> S(s(x1))
   S(s(p(x1))) -> S(x1)
   S(q(x1)) -> S(x1)
   I(x1) -> S(x1)

The TRS R consists of the following rules:

   s(s(p(x1))) -> s(p(s(x1)))
   s(f(x1)) -> i(q(g(x1)))
   i(q(x1)) -> s(q(x1))
   s(q(x1)) -> s(s(x1))
   i(x1) -> s(x1)
   g(x1) -> p(p(f(x1)))

The set Q consists of the following terms:

   0(p(x0))
   0(s(p(x0)))
   s(s(p(x0)))
   s(f(x0))
   g(x0)
   s(q(x0))
   i(x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   0(p(x0))
   0(s(p(x0)))


----------------------------------------

(13)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   S(f(x1)) -> I(q(g(x1)))
   I(q(x1)) -> S(q(x1))
   S(q(x1)) -> S(s(x1))
   S(s(p(x1))) -> S(x1)
   S(q(x1)) -> S(x1)
   I(x1) -> S(x1)

The TRS R consists of the following rules:

   s(s(p(x1))) -> s(p(s(x1)))
   s(f(x1)) -> i(q(g(x1)))
   i(q(x1)) -> s(q(x1))
   s(q(x1)) -> s(s(x1))
   i(x1) -> s(x1)
   g(x1) -> p(p(f(x1)))

The set Q consists of the following terms:

   s(s(p(x0)))
   s(f(x0))
   g(x0)
   s(q(x0))
   i(x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(14) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   S(q(x1)) -> S(x1)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( I_1(x_1) ) = 2x_1 + 2
POL( q_1(x_1) ) = x_1 + 2
POL( S_1(x_1) ) = 2x_1 + 2
POL( i_1(x_1) ) = x_1 + 2
POL( g_1(x_1) ) = 0
POL( p_1(x_1) ) = max{0, x_1 - 2}
POL( f_1(x_1) ) = 2
POL( s_1(x_1) ) = x_1 + 2

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   g(x1) -> p(p(f(x1)))
   s(s(p(x1))) -> s(p(s(x1)))
   s(f(x1)) -> i(q(g(x1)))
   i(q(x1)) -> s(q(x1))
   s(q(x1)) -> s(s(x1))
   i(x1) -> s(x1)


----------------------------------------

(15)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   S(f(x1)) -> I(q(g(x1)))
   I(q(x1)) -> S(q(x1))
   S(q(x1)) -> S(s(x1))
   S(s(p(x1))) -> S(x1)
   I(x1) -> S(x1)

The TRS R consists of the following rules:

   s(s(p(x1))) -> s(p(s(x1)))
   s(f(x1)) -> i(q(g(x1)))
   i(q(x1)) -> s(q(x1))
   s(q(x1)) -> s(s(x1))
   i(x1) -> s(x1)
   g(x1) -> p(p(f(x1)))

The set Q consists of the following terms:

   s(s(p(x0)))
   s(f(x0))
   g(x0)
   s(q(x0))
   i(x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(16) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   S(s(p(x1))) -> S(x1)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( I_1(x_1) ) = 2x_1
POL( q_1(x_1) ) = 2x_1 + 2
POL( S_1(x_1) ) = 2x_1
POL( i_1(x_1) ) = x_1 + 2
POL( g_1(x_1) ) = 0
POL( p_1(x_1) ) = max{0, x_1 - 1}
POL( f_1(x_1) ) = 2
POL( s_1(x_1) ) = x_1 + 2

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   g(x1) -> p(p(f(x1)))
   s(s(p(x1))) -> s(p(s(x1)))
   s(f(x1)) -> i(q(g(x1)))
   i(q(x1)) -> s(q(x1))
   s(q(x1)) -> s(s(x1))
   i(x1) -> s(x1)


----------------------------------------

(17)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   S(f(x1)) -> I(q(g(x1)))
   I(q(x1)) -> S(q(x1))
   S(q(x1)) -> S(s(x1))
   I(x1) -> S(x1)

The TRS R consists of the following rules:

   s(s(p(x1))) -> s(p(s(x1)))
   s(f(x1)) -> i(q(g(x1)))
   i(q(x1)) -> s(q(x1))
   s(q(x1)) -> s(s(x1))
   i(x1) -> s(x1)
   g(x1) -> p(p(f(x1)))

The set Q consists of the following terms:

   s(s(p(x0)))
   s(f(x0))
   g(x0)
   s(q(x0))
   i(x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(18) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 2 less nodes.
----------------------------------------

(19)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   I(x1) -> S(x1)
   S(f(x1)) -> I(q(g(x1)))

The TRS R consists of the following rules:

   s(s(p(x1))) -> s(p(s(x1)))
   s(f(x1)) -> i(q(g(x1)))
   i(q(x1)) -> s(q(x1))
   s(q(x1)) -> s(s(x1))
   i(x1) -> s(x1)
   g(x1) -> p(p(f(x1)))

The set Q consists of the following terms:

   s(s(p(x0)))
   s(f(x0))
   g(x0)
   s(q(x0))
   i(x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(20) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(21)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   I(x1) -> S(x1)
   S(f(x1)) -> I(q(g(x1)))

The TRS R consists of the following rules:

   g(x1) -> p(p(f(x1)))

The set Q consists of the following terms:

   s(s(p(x0)))
   s(f(x0))
   g(x0)
   s(q(x0))
   i(x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(22) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   s(s(p(x0)))
   s(f(x0))
   s(q(x0))
   i(x0)


----------------------------------------

(23)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   I(x1) -> S(x1)
   S(f(x1)) -> I(q(g(x1)))

The TRS R consists of the following rules:

   g(x1) -> p(p(f(x1)))

The set Q consists of the following terms:

   g(x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(24) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   S(f(x1)) -> I(q(g(x1)))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(I(x_1)) = 1 + x_1
   POL(S(x_1)) = 1 + x_1
   POL(f(x_1)) = 1 + x_1
   POL(g(x_1)) = 1 + x_1
   POL(p(x_1)) = 1
   POL(q(x_1)) = 0

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:
none


----------------------------------------

(25)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   I(x1) -> S(x1)

The TRS R consists of the following rules:

   g(x1) -> p(p(f(x1)))

The set Q consists of the following terms:

   g(x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(26) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 1 less node.
----------------------------------------

(27)
TRUE

----------------------------------------

(28)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   0^1(s(p(x1))) -> 0^1(x1)
   0^1(p(x1)) -> 0^1(s(s(x1)))

The TRS R consists of the following rules:

   0(p(x1)) -> p(s(s(0(s(s(x1))))))
   0(s(p(x1))) -> 0(x1)
   s(s(p(x1))) -> s(p(s(x1)))
   s(f(x1)) -> i(q(g(x1)))
   g(x1) -> p(p(f(x1)))
   i(q(x1)) -> s(q(x1))
   s(q(x1)) -> s(s(x1))
   i(x1) -> s(x1)

The set Q consists of the following terms:

   0(p(x0))
   0(s(p(x0)))
   s(s(p(x0)))
   s(f(x0))
   g(x0)
   s(q(x0))
   i(x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(29) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(30)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   0^1(s(p(x1))) -> 0^1(x1)
   0^1(p(x1)) -> 0^1(s(s(x1)))

The TRS R consists of the following rules:

   s(s(p(x1))) -> s(p(s(x1)))
   s(f(x1)) -> i(q(g(x1)))
   i(q(x1)) -> s(q(x1))
   s(q(x1)) -> s(s(x1))
   i(x1) -> s(x1)
   g(x1) -> p(p(f(x1)))

The set Q consists of the following terms:

   0(p(x0))
   0(s(p(x0)))
   s(s(p(x0)))
   s(f(x0))
   g(x0)
   s(q(x0))
   i(x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(31) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   0(p(x0))
   0(s(p(x0)))


----------------------------------------

(32)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   0^1(s(p(x1))) -> 0^1(x1)
   0^1(p(x1)) -> 0^1(s(s(x1)))

The TRS R consists of the following rules:

   s(s(p(x1))) -> s(p(s(x1)))
   s(f(x1)) -> i(q(g(x1)))
   i(q(x1)) -> s(q(x1))
   s(q(x1)) -> s(s(x1))
   i(x1) -> s(x1)
   g(x1) -> p(p(f(x1)))

The set Q consists of the following terms:

   s(s(p(x0)))
   s(f(x0))
   g(x0)
   s(q(x0))
   i(x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(33) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   0^1(p(x1)) -> 0^1(s(s(x1)))
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(0^1(x_1)) =  	[[0A]] 	 +  	[[0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(s(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[-I, 0A, -I], [-I, 0A, -I], [0A, 0A, -I]] 	* 	x_1
>>>

   <<<
 POL(p(x_1)) =  	[[0A], [0A], [1A]] 	 +  	[[0A, 0A, 0A], [0A, 0A, -I], [0A, 1A, 0A]] 	* 	x_1
>>>

   <<<
 POL(f(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[0A, -I, -I], [0A, -I, -I], [0A, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(i(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[0A, 0A, 0A], [0A, 0A, 0A], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(q(x_1)) =  	[[0A], [0A], [-I]] 	 +  	[[-I, -I, -I], [-I, 0A, -I], [-I, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(g(x_1)) =  	[[1A], [0A], [1A]] 	 +  	[[1A, 0A, 0A], [0A, -I, -I], [1A, 0A, 0A]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   s(s(p(x1))) -> s(p(s(x1)))
   s(f(x1)) -> i(q(g(x1)))
   i(q(x1)) -> s(q(x1))
   s(q(x1)) -> s(s(x1))
   i(x1) -> s(x1)
   g(x1) -> p(p(f(x1)))


----------------------------------------

(34)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   0^1(s(p(x1))) -> 0^1(x1)

The TRS R consists of the following rules:

   s(s(p(x1))) -> s(p(s(x1)))
   s(f(x1)) -> i(q(g(x1)))
   i(q(x1)) -> s(q(x1))
   s(q(x1)) -> s(s(x1))
   i(x1) -> s(x1)
   g(x1) -> p(p(f(x1)))

The set Q consists of the following terms:

   s(s(p(x0)))
   s(f(x0))
   g(x0)
   s(q(x0))
   i(x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(35) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(36)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   0^1(s(p(x1))) -> 0^1(x1)

R is empty.
The set Q consists of the following terms:

   s(s(p(x0)))
   s(f(x0))
   g(x0)
   s(q(x0))
   i(x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(37) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   g(x0)
   i(x0)


----------------------------------------

(38)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   0^1(s(p(x1))) -> 0^1(x1)

R is empty.
The set Q consists of the following terms:

   s(s(p(x0)))
   s(f(x0))
   s(q(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(39) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*0^1(s(p(x1))) -> 0^1(x1)
The graph contains the following edges 1 > 1


----------------------------------------

(40)
YES
