YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/i53cs.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRS Reverse [EQUIVALENT, 0 ms]
(2) QTRS
(3) RFCMatchBoundsTRSProof [EQUIVALENT, 0 ms]
(4) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   0(1(2(3(4(x1))))) -> 0(2(3(1(4(x1)))))
   0(5(1(2(3(4(x1)))))) -> 0(1(2(5(3(4(x1))))))
   0(5(1(2(3(4(x1)))))) -> 0(5(2(1(3(4(x1))))))
   0(5(1(2(3(4(x1)))))) -> 5(0(2(3(1(4(x1))))))
   0(5(2(3(1(4(x1)))))) -> 0(1(5(2(3(4(x1))))))

Q is empty.

----------------------------------------

(1) QTRS Reverse (EQUIVALENT)
We applied the QTRS Reverse Processor [REVERSE].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   4(3(2(1(0(x1))))) -> 4(1(3(2(0(x1)))))
   4(3(2(1(5(0(x1)))))) -> 4(3(5(2(1(0(x1))))))
   4(3(2(1(5(0(x1)))))) -> 4(3(1(2(5(0(x1))))))
   4(3(2(1(5(0(x1)))))) -> 4(1(3(2(0(5(x1))))))
   4(1(3(2(5(0(x1)))))) -> 4(3(2(5(1(0(x1))))))

Q is empty.

----------------------------------------

(3) RFCMatchBoundsTRSProof (EQUIVALENT)
Termination of the TRS R could be shown with a Match Bound [MATCHBOUNDS1,MATCHBOUNDS2] of 0. This implies Q-termination of R.
The following rules were used to construct the certificate:

   4(3(2(1(0(x1))))) -> 4(1(3(2(0(x1)))))
   4(3(2(1(5(0(x1)))))) -> 4(3(5(2(1(0(x1))))))
   4(3(2(1(5(0(x1)))))) -> 4(3(1(2(5(0(x1))))))
   4(3(2(1(5(0(x1)))))) -> 4(1(3(2(0(5(x1))))))
   4(1(3(2(5(0(x1)))))) -> 4(3(2(5(1(0(x1))))))

The certificate found is represented by the following graph.
The certificate consists of the following enumerated nodes:
3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23

Node 3 is start node and node 4 is final node.

Those nodes are connected through the following edges:

* 3 to 5 labelled 4_1(0)* 3 to 9 labelled 4_1(0)* 3 to 14 labelled 4_1(0)* 3 to 19 labelled 4_1(0)* 4 to 4 labelled #_1(0), 5_1(0)* 5 to 6 labelled 1_1(0)* 6 to 7 labelled 3_1(0)* 7 to 8 labelled 2_1(0)* 8 to 4 labelled 0_1(0)* 9 to 10 labelled 3_1(0)* 10 to 11 labelled 5_1(0)* 11 to 12 labelled 2_1(0)* 12 to 13 labelled 1_1(0)* 13 to 4 labelled 0_1(0)* 14 to 15 labelled 3_1(0)* 15 to 16 labelled 1_1(0)* 16 to 17 labelled 2_1(0)* 17 to 18 labelled 5_1(0)* 18 to 4 labelled 0_1(0)* 19 to 20 labelled 3_1(0)* 20 to 21 labelled 2_1(0)* 21 to 22 labelled 5_1(0)* 22 to 23 labelled 1_1(0)* 23 to 4 labelled 0_1(0)


----------------------------------------

(4)
YES
