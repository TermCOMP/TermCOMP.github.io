last 3162 length 13677
last 2670 length 12607
CNF 3162 vars 13677 clauses
last 837 length 3497
CNF 2670 vars 12607 clauses
last 636 length 2780
CNF 837 vars 3497 clauses
last 620 length 2584
last 951 length 3976
CNF 620 vars 2584 clauses
CNF 636 vars 2780 clauses
CNF 951 vars 3976 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1549, clauses: 5668
last 1549 length 5668
CNF 1549 vars 5668 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1967, clauses: 7326
last 1967 length 7326
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1549, clauses: 5668, status: Unsatisfied, time: 0.093841441s
CNF 1967 vars 7326 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1967, clauses: 7326, status: Unsatisfied, time: 0.135861984s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3332, clauses: 13748
last 3332 length 13748
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6520, clauses: 27209
CNF 3332 vars 13748 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5559, clauses: 23219
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3932, clauses: 16229
last 6520 length 27209
last 5559 length 23219
last 3932 length 16229
CNF 3932 vars 16229 clauses
CNF 5559 vars 23219 clauses
CNF 6520 vars 27209 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3332, clauses: 13748, status: Unsatisfied, time: 0.348151283s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5559, clauses: 23219, status: Unsatisfied, time: 0.396484276s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3932, clauses: 16229, status: Unsatisfied, time: 0.499042966s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2569, clauses: 9896
last 2569 length 9896
CNF 2569 vars 9896 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6520, clauses: 27209, status: Unsatisfied, time: 0.671796209s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3252, clauses: 12827
last 3252 length 12827
CNF 3252 vars 12827 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2569, clauses: 9896, status: Unsatisfied, time: 0.257832699s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9601, clauses: 41348
last 9601 length 41348
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3252, clauses: 12827, status: Unsatisfied, time: 0.400609022s
CNF 9601 vars 41348 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4814, clauses: 18389
last 4814 length 18389
CNF 4814 vars 18389 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11122, clauses: 47976
last 11122 length 47976
CNF 11122 vars 47976 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6073, clauses: 23666
last 6073 length 23666
CNF 6073 vars 23666 clauses
last 3968 length 17746
CNF 3968 vars 17746 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4814, clauses: 18389, status: Unsatisfied, time: 2.508061866s
last 4060 length 20518
CNF 4060 vars 20518 clauses
last 3664 length 18096
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4050, clauses: 15206
CNF 3664 vars 18096 clauses
last 4050 length 15206
last 4838 length 21606
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4563, clauses: 17555
last 4563 length 17555
CNF 4050 vars 15206 clauses
CNF 4838 vars 21606 clauses
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11965, clauses: 56091
last 11965 length 56091
CNF 4563 vars 17555 clauses
CNF 11965 vars 56091 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6073, clauses: 23666, status: Unsatisfied, time: 2.940823856s
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13738, clauses: 64403
last 13738 length 64403
CNF 13738 vars 64403 clauses
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11965, clauses: 56091, status: Satisfied, time: 0.961294255s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15931, clauses: 67035
last 15931 length 67035
**************************************************
summary
**************************************************
SRS with 2 rules on 2 letters       DP
SRS with 8 strict rules and 2 weak rules on 4 letters       weights
SRS with 1 strict rules and 2 weak rules on 3 letters       EDG
SRS with 1 strict rules and 2 weak rules on 3 letters       Matrix   { monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 2 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [0, 0, 0, 0] -> [0, 1, 1, 1] {- Input 0 -}
  [1, 0, 0, 1] -> [0, 0, 0, 0] {- Input 1 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [0, 0, 0, 0] ->= [0, 1, 1, 1] {- DP Nontop (Input 0) -}
  [1, 0, 0, 1] ->= [0, 0, 0, 0] {- DP Nontop (Input 1) -}
  [1#, 0, 0, 1] |-> [0#] {- DP (Top 3) (Input 1) -}
  [1#, 0, 0, 1] |-> [0#, 0] {- DP (Top 2) (Input 1) -}
  [1#, 0, 0, 1] |-> [0#, 0, 0] {- DP (Top 1) (Input 1) -}
  [1#, 0, 0, 1] |-> [0#, 0, 0, 0] {- DP (Top 0) (Input 1) -}
  [0#, 0, 0, 0] |-> [1#] {- DP (Top 3) (Input 0) -}
  [0#, 0, 0, 0] |-> [1#, 1] {- DP (Top 2) (Input 0) -}CNF 15931 vars 67035 clauses

Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13738, clauses: 64403, status: Satisfied, time: 0.380423168s
  [0#, 0, 0, 0] |-> [1#, 1, 1] {- DP (Top 1) (Input 0) -}
  [0#, 0, 0, 0] |-> [0#, 1, 1, 1] {- DP (Top 0) (Input 0) -}
reason
  (1, 2/1)
  (0, 2/1)
  (1#, 2/1)
  (0#, 1/1)
   property Termination
has value Just True
for SRS
  [0, 0, 0, 0] ->= [0, 1, 1, 1] {- DP Nontop (Input 0) -}
  [1, 0, 0, 1] ->= [0, 0, 0, 0] {- DP Nontop (Input 1) -}
  [0#, 0, 0, 0] |-> [0#, 1, 1, 1] {- DP (Top 0) (Input 0) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [0#, 0, 0, 0] |-> [0#, 1, 1, 1] {- DP (Top 0) (Input 0) -}
  [0, 0, 0, 0] ->= [0, 1, 1, 1] {- DP Nontop (Input 0) -}
  [1, 0, 0, 1] ->= [0, 0, 0, 0] {- DP Nontop (Input 1) -}
reason
  ( 1
  , Wk  / 0A 0A -  -  -  \
        | -  0A -  -  -  |
        | 0A 0A 0A -  0A |
        | 1A 1A 1A 0A 1A |
        \ -  -  -  -  0A / )
  ( 0
  , Wk  / 0A 0A 0A -  -  \
        | -  -  1A -  -  |
        | -  -  -  0A -  |
        | 1A 0A -  -  1A |
        \ -  -  -  -  0A / )
  ( 0#
  , Wk  / - 1A - - 0A \
        | - -  - - -  |
        | - -  - - -  |
        | - -  - - -  |
        \ - -  - - 0A / )
   property Termination
has value Just True
for SRS
  [0, 0, 0, 0] ->= [0, 1, 1, 1] {- DP Nontop (Input 0) -}
  [1, 0, 0, 1] ->= [0, 0, 0, 0] {- DP Nontop (Input 1) -}
reason
  EDG

**************************************************
skeleton: (2,2)\Deepee(8/2,4)\Weight\EDG(1/2,3)\Matrix{\Arctic}{5}(0/2,2)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.796849262000
  min duration 0.008728974000
  total durat. 1.207571194000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.762513654000
  min duration 0.020984954000
  total durat. 1.481317142000
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 4
  max duration 3.892662289000
  min duration 0.271144305000
  total durat. 6.923558850000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 8
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 80}
    , self = 76
    , parent = Nothing
    , duration = 2.486294581000
    , status = Fail
    , start = 2025-09-03 11:22:35.288343804 UTC
    , finish = 2025-09-03 11:22:37.774638385 UTC
    , thread_cap_info = ("ThreadId 74", 0, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 8
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 80}
    , self = 77
    , parent = Nothing
    , duration = 3.892662289000
    , status = Fail
    , start = 2025-09-03 11:22:35.307830002 UTC
    , finish = 2025-09-03 11:22:39.200492291 UTC
    , thread_cap_info = ("ThreadId 76", 0, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.910371185000
  min duration 0.680614674000
  total durat. 1.590985859000
Success : "Matrix\n { monotone = Weak\n , domain = Arctic\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.439968607000
  min duration 1.439968607000
  total durat. 1.439968607000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Arctic\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 5\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 2
      , alphabet_size = 3
      , total_length = 24}
    , self = 97
    , parent = Nothing
    , duration = 1.439968607000
    , status = Success
    , start = 2025-09-03 11:22:39.557197818 UTC
    , finish = 2025-09-03 11:22:40.997166425 UTC
    , thread_cap_info = ("ThreadId 150", 1, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.562513304000
  min duration 0.462296021000
  total durat. 1.024809325000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 4.772808688000
  min duration 4.772808688000
  total durat. 4.772808688000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 2
      , alphabet_size = 3
      , total_length = 24}
    , self = 99
    , parent = Nothing
    , duration = 4.772808688000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:22:36.347836693 UTC
    , finish = 2025-09-03 11:22:41.120645381 UTC
    , thread_cap_info = ("ThreadId 120", 1, False)}
Fail : "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.303939156000
  min duration 2.802713395000
  total durat. 6.106652551000
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 2
      , alphabet_size = 3
      , total_length = 24}
    , self = 92
    , parent = Nothing
    , duration = 2.802713395000
    , status = Fail
    , start = 2025-09-03 11:22:36.727844757 UTC
    , finish = 2025-09-03 11:22:39.530558152 UTC
    , thread_cap_info = ("ThreadId 125", 1, False)}
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 32}
    , self = 96
    , parent = Nothing
    , duration = 3.303939156000
    , status = Fail
    , start = 2025-09-03 11:22:37.010081627 UTC
    , finish = 2025-09-03 11:22:40.314020783 UTC
    , thread_cap_info = ("ThreadId 127", 1, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 6.062486656000
  min duration 6.062486656000
  total durat. 6.062486656000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 2
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 16}
    , self = 102
    , parent = Nothing
    , duration = 6.062486656000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:22:35.203567504 UTC
    , finish = 2025-09-03 11:22:41.26605416 UTC
    , thread_cap_info = ("ThreadId 57", 3, False)}
**************************************************
F                Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
F                , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
F                = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
F                False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
F                = Size { num_rules = 2 , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules
F                = 0 , alphabet_size = 2 , total_length = 16} , self = 43 , parent = Nothing
F                , duration = 0.273457675000 , status = Fail , start = 2025-09-03 11:22:35.19718857
F                UTC , finish = 2025-09-03 11:22:35.470646245 UTC , thread_cap_info = ("ThreadId
F                43", 1, False)}
F                
| F              Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| F              , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| F              = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| F              , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| F              = False}" , input_size = Size { num_rules = 2 , num_strict_rules = 2 ,
| F              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| F              = 16} , self = 41 , parent = Nothing , duration = 0.259371353000 , status
| F              = Fail , start = 2025-09-03 11:22:35.197193349 UTC , finish = 2025-09-03
| F              11:22:35.456564702 UTC , thread_cap_info = ("ThreadId 22", 0, False)}
| F              
| | E            Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | E            , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | E            = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | E            , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | E            max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | E            [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | E            string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | E            , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | E            = True})" , input_size = Size { num_rules = 2 , num_strict_rules = 2 ,
| | E            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | E            = 16} , self = 102 , parent = Nothing , duration = 6.062486656000 , status
| | E            = Except "AsyncCancelled" , start = 2025-09-03 11:22:35.203567504 UTC ,
| | E            finish = 2025-09-03 11:22:41.26605416 UTC , thread_cap_info = ("ThreadId
| | E            57", 3, False)}
| | E            
| | | F          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | F          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | F          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | F          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | F          = Size { num_rules = 2 , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules
| | | F          = 0 , alphabet_size = 2 , total_length = 16} , self = 44 , parent = Nothing
| | | F          , duration = 0.271144305000 , status = Fail , start = 2025-09-03 11:22:35.209183687
| | | F          UTC , finish = 2025-09-03 11:22:35.480327992 UTC , thread_cap_info = ("ThreadId
| | | F          45", 1, False)}
| | | F          
| | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | F        = 8 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | F        = 80} , self = 42 , parent = Nothing , duration = 0.202338572000 , status
| | | | F        = Fail , start = 2025-09-03 11:22:35.267831856 UTC , finish = 2025-09-03
| | | | F        11:22:35.470170428 UTC , thread_cap_info = ("ThreadId 67", 3, False)}
| | | | F        
| | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | F      = 8 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | | F      = 80} , self = 60 , parent = Nothing , duration = 0.242861816000 , status
| | | | | F      = Fail , start = 2025-09-03 11:22:35.267843686 UTC , finish = 2025-09-03
| | | | | F      11:22:35.510705502 UTC , thread_cap_info = ("ThreadId 69", 3, False)}
| | | | | F      
| | | | | | F    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | F    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | F    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | F    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | F    = Size { num_rules = 8 , num_strict_rules = 8 , num_top_rules = 0 , num_weak_rules
| | | | | | F    = 0 , alphabet_size = 4 , total_length = 80} , self = 76 , parent = Nothing
| | | | | | F    , duration = 2.486294581000 , status = Fail , start = 2025-09-03 11:22:35.288343804
| | | | | | F    UTC , finish = 2025-09-03 11:22:37.774638385 UTC , thread_cap_info = ("ThreadId
| | | | | | F    74", 0, False)}
| | | | | | F    
| | | | | | | F  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | F  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | F  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | F  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | F  = Size { num_rules = 8 , num_strict_rules = 8 , num_top_rules = 0 , num_weak_rules
| | | | | | | F  = 0 , alphabet_size = 4 , total_length = 80} , self = 77 , parent = Nothing
| | | | | | | F  , duration = 3.892662289000 , status = Fail , start = 2025-09-03 11:22:35.307830002
| | | | | | | F  UTC , finish = 2025-09-03 11:22:39.200492291 UTC , thread_cap_info = ("ThreadId
| | | | | | | F  76", 0, False)}
| | | | | | | F  
| F | | | | | |  
|   | | F | | |  
F   | |   | | |  
    | F   | | |  
    |     F | |  
F   |       | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F   |       | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F   |       | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F   |       | |  = 4 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
F   |       | |  = 4 , total_length = 32} , self = 69 , parent = Nothing , duration = 0.238155226000
F   |       | |  , status = Fail , start = 2025-09-03 11:22:35.516693875 UTC , finish =
F   |       | |  2025-09-03 11:22:35.754849101 UTC , thread_cap_info = ("ThreadId 105",
F   |       | |  1, False)}
F   |       | |  
| F |       | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F |       | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F |       | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F |       | |  = 3 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size
| F |       | |  = 3 , total_length = 24} , self = 68 , parent = Nothing , duration = 0.106798884000
| F |       | |  , status = Fail , start = 2025-09-03 11:22:35.516696632 UTC , finish =
| F |       | |  2025-09-03 11:22:35.623495516 UTC , thread_cap_info = ("ThreadId 104",
| F |       | |  1, False)}
| F |       | |  
| | | F     | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | F     | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | F     | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | F     | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F     | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F     | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | F     | |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size
| | | F     | |  = 3 , total_length = 24} , self = 71 , parent = Nothing , duration = 0.680614674000
| | | F     | |  , status = Fail , start = 2025-09-03 11:22:35.527443484 UTC , finish =
| | | F     | |  2025-09-03 11:22:36.208058158 UTC , thread_cap_info = ("ThreadId 106",
| | | F     | |  1, False)}
| | | F     | |  
| | | | F   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | F   | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | F   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | F   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | F   | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | | | F   | |  = 4 , total_length = 32} , self = 73 , parent = Nothing , duration = 0.910371185000
| | | | F   | |  , status = Fail , start = 2025-09-03 11:22:35.567828483 UTC , finish =
| | | | F   | |  2025-09-03 11:22:36.478199668 UTC , thread_cap_info = ("ThreadId 110",
| | | | F   | |  1, False)}
| | | | F   | |  
| F | | |   | |  
| F | | |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| F | | |   | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F | | |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F | | |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | | |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | | |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| F | | |   | |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size
| F | | |   | |  = 3 , total_length = 24} , self = 70 , parent = Nothing , duration = 0.462296021000
| F | | |   | |  , status = Fail , start = 2025-09-03 11:22:35.668738867 UTC , finish =
| F | | |   | |  2025-09-03 11:22:36.131034888 UTC , thread_cap_info = ("ThreadId 113",
| F | | |   | |  1, False)}
| F | | |   | |  
F | | | |   | |  
F | | | |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
F | | | |   | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F | | | |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F | | | |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F | | | |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F | | | |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
F | | | |   | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
F | | | |   | |  = 4 , total_length = 32} , self = 72 , parent = Nothing , duration = 0.562513304000
F | | | |   | |  , status = Fail , start = 2025-09-03 11:22:35.767831767 UTC , finish =
F | | | |   | |  2025-09-03 11:22:36.330345071 UTC , thread_cap_info = ("ThreadId 115",
F | | | |   | |  1, False)}
F | | | |   | |  
| F | | |   | |  
| F | | |   | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| F | | |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | | |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | | |   | |  = 3 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size
| F | | |   | |  = 3 , total_length = 24} , self = 74 , parent = Nothing , duration = 0.467862638000
| F | | |   | |  , status = Fail , start = 2025-09-03 11:22:36.16843011 UTC , finish = 2025-09-03
| F | | |   | |  11:22:36.636292748 UTC , thread_cap_info = ("ThreadId 119", 1, False)}
| F | | |   | |  
| | | F |   | |  
F | |   |   | |  
E | |   |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E | |   |   | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E | |   |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E | |   |   | |  , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | |   |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | |   |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
E | |   |   | |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size
E | |   |   | |  = 3 , total_length = 24} , self = 99 , parent = Nothing , duration = 4.772808688000
E | |   |   | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:22:36.347836693
E | |   |   | |  UTC , finish = 2025-09-03 11:22:41.120645381 UTC , thread_cap_info = ("ThreadId
E | |   |   | |  120", 1, False)}
E | |   |   | |  
| | | F |   | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | F |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F |   | |  = 4 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | | F |   | |  = 4 , total_length = 32} , self = 75 , parent = Nothing , duration = 0.526395572000
| | | F |   | |  , status = Fail , start = 2025-09-03 11:22:36.381505415 UTC , finish =
| | | F |   | |  2025-09-03 11:22:36.907900987 UTC , thread_cap_info = ("ThreadId 121",
| | | F |   | |  1, False)}
| | | F |   | |  
| | | | F   | |  
| F | |     | |  
| F | |     | |  Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
| F | |     | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | |     | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | |     | |  = 3 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size
| F | |     | |  = 3 , total_length = 24} , self = 92 , parent = Nothing , duration = 2.802713395000
| F | |     | |  , status = Fail , start = 2025-09-03 11:22:36.727844757 UTC , finish =
| F | |     | |  2025-09-03 11:22:39.530558152 UTC , thread_cap_info = ("ThreadId 125",
| F | |     | |  1, False)}
| F | |     | |  
| | | F     | |  
| | | F     | |  Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
| | | F     | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F     | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F     | |  = 4 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | | F     | |  = 4 , total_length = 32} , self = 96 , parent = Nothing , duration = 3.303939156000
| | | F     | |  , status = Fail , start = 2025-09-03 11:22:37.010081627 UTC , finish =
| | | F     | |  2025-09-03 11:22:40.314020783 UTC , thread_cap_info = ("ThreadId 127",
| | | F     | |  1, False)}
| | | F     | |  
| | | |     F |  
| | | |       F  
| | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | F        = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size = 5 , total_length
| | | | F        = 100} , self = 91 , parent = Nothing , duration = 0.162525149000 , status
| | | | F        = Fail , start = 2025-09-03 11:22:39.223913232 UTC , finish = 2025-09-03
| | | | F        11:22:39.386438381 UTC , thread_cap_info = ("ThreadId 142", 0, False)}
| | | | F        
| | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | F      = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size = 5 , total_length
| | | | | F      = 100} , self = 94 , parent = Nothing , duration = 0.762513654000 , status
| | | | | F      = Fail , start = 2025-09-03 11:22:39.244583586 UTC , finish = 2025-09-03
| | | | | F      11:22:40.00709724 UTC , thread_cap_info = ("ThreadId 143", 0, False)}
| | | | | F      
| | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | F    = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size = 6 , total_length
| | | | | | F    = 120} , self = 95 , parent = Nothing , duration = 0.796849262000 , status
| | | | | | F    = Fail , start = 2025-09-03 11:22:39.246724009 UTC , finish = 2025-09-03
| | | | | | F    11:22:40.043573271 UTC , thread_cap_info = ("ThreadId 145", 0, False)}
| | | | | | F    
| | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | | F  = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size = 6 , total_length
| | | | | | | F  = 120} , self = 93 , parent = Nothing , duration = 0.433137416000 , status
| | | | | | | F  = Fail , start = 2025-09-03 11:22:39.247823886 UTC , finish = 2025-09-03
| | | | | | | F  11:22:39.680961302 UTC , thread_cap_info = ("ThreadId 146", 0, False)}
| | | | | | | F  
| | | | F | | |  
| F | |   | | |  
| S | |   | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Arctic\n , method
| S | |   | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| S | |   | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S | |   | | |  , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S | |   | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S | |   | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| S | |   | | |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size
| S | |   | | |  = 3 , total_length = 24} , self = 97 , parent = Nothing , duration = 1.439968607000
| S | |   | | |  , status = Success , start = 2025-09-03 11:22:39.557197818 UTC , finish
| S | |   | | |  = 2025-09-03 11:22:40.997166425 UTC , thread_cap_info = ("ThreadId 150",
| S | |   | | |  1, False)}
| S | |   | | |  
| | | |   | | F  
| | | |   F |    
| | | |     F    
| | | F          
| S |            
E   |            
    E            
