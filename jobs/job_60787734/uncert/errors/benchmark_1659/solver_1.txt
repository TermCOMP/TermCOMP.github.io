last 4040 length 21994
CNF 4040 vars 21994 clauses
last 4828 length 23196
CNF 4828 vars 23196 clauses
last 10918 length 63083
CNF 10918 vars 63083 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4855, clauses: 19345
last 4855 length 19345
CNF 4855 vars 19345 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4855, clauses: 19345, status: Satisfied, time: 0.436582744s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5456, clauses: 25875
last 5456 length 25875
CNF 5456 vars 25875 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5456, clauses: 25875, status: Unsatisfied, time: 0.410724016s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16855, clauses: 71022
last 16855 length 71022
**************************************************
summary
**************************************************
SRS with 1 rules on 2 letters       Drop
SRS with 1 rules on 2 letters       mirror
SRS with 1 rules on 2 letters       Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 52 states

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, a, b, a, b, b, a, b, a, b] -> [ a , b , a , b , b , a , b , a , b , a , b , b , a ] {- Input 0 -}
reason
  Drop
    property Termination
    has value Just True
    for SRS
      [a, b, b, a, b, a, b] -> [b, a, b, a, b, a, b, b, a] {- Dropped 4 0 (Input 0) -}
    reason
      mirror
       property Termination
    has value Just True
    for SRS
      [b, a, b, a, b, b, a] -> [ a , b , b , a , b , a , b , a , b ] {- Mirror (Dropped 4 0 (Input 0)) -}
    reason
      Matchbound
        Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 52 states

   property Termination
has value Just True
for SRS
  [a, b, b, a, b, a, b] -> [b, a, b, a, b, a, b, b, a] {- Dropped 4 0 (Input 0) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [b, a, b, a, b, b, a] -> [ a , b , b , a , b , a , b , a , b ] {- Mirror (Dropped 4 0 (Input 0)) -}
reason
  Matchbound
    Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 52 states

**************************************************
skeleton: (1,2)\Drop{4}{0}\Mirror(1,2)\Rfcmatchbound{1}[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************CNF 16855 vars 71022 clauses

Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.019808532000
  min duration 3.019808532000
  total durat. 3.019808532000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 12
      , num_top_rules = 12
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 356}
    , self = 99
    , parent = Nothing
    , duration = 3.019808532000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:55:49.265293256 UTC
    , finish = 2025-09-03 12:55:52.285101788 UTC
    , thread_cap_info = ("ThreadId 184", 1, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 2.077215186000
  min duration 2.077215186000
  total durat. 2.077215186000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 242}
    , self = 90
    , parent = Nothing
    , duration = 2.077215186000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:55:49.06771521 UTC
    , finish = 2025-09-03 12:55:51.144930396 UTC
    , thread_cap_info = ("ThreadId 175", 1, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.207341784000
  min duration 0.260595367000
  total durat. 1.467937151000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 242}
    , self = 82
    , parent = Nothing
    , duration = 1.207341784000
    , status = Fail
    , start = 2025-09-03 12:55:49.1202563 UTC
    , finish = 2025-09-03 12:55:50.327598084 UTC
    , thread_cap_info = ("ThreadId 176", 1, False)}
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.002519738000
  min duration 3.002519738000
  total durat. 3.002519738000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 12
      , num_top_rules = 12
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 356}
    , self = 100
    , parent = Nothing
    , duration = 3.002519738000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:55:49.28492901 UTC
    , finish = 2025-09-03 12:55:52.287448748 UTC
    , thread_cap_info = ("ThreadId 185", 1, False)}
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 8
  max duration 4.599793879000
  min duration 0.392448356000
  total durat. 17.797527789000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 24}
    , self = 88
    , parent = Nothing
    , duration = 1.858881823000
    , status = Fail
    , start = 2025-09-03 12:55:49.226242524 UTC
    , finish = 2025-09-03 12:55:51.085124347 UTC
    , thread_cap_info = ("ThreadId 163", 0, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 20}
    , self = 102
    , parent = Nothing
    , duration = 4.308390311000
    , status = Fail
    , start = 2025-09-03 12:55:48.50497861 UTC
    , finish = 2025-09-03 12:55:52.813368921 UTC
    , thread_cap_info = ("ThreadId 107", 0, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 20}
    , self = 105
    , parent = Nothing
    , duration = 4.325345281000
    , status = Fail
    , start = 2025-09-03 12:55:48.628441845 UTC
    , finish = 2025-09-03 12:55:52.953787126 UTC
    , thread_cap_info = ("ThreadId 116", 0, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 22}
    , self = 104
    , parent = Nothing
    , duration = 4.599793879000
    , status = Fail
    , start = 2025-09-03 12:55:48.344972258 UTC
    , finish = 2025-09-03 12:55:52.944766137 UTC
    , thread_cap_info = ("ThreadId 83", 0, False)}
Except "AsyncCancelled" : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 1
  max duration 1.559259635000
  min duration 1.559259635000
  total durat. 1.559259635000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 16}
    , self = 83
    , parent = Nothing
    , duration = 1.559259635000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:55:48.905653361 UTC
    , finish = 2025-09-03 12:55:50.464912996 UTC
    , thread_cap_info = ("ThreadId 149", 0, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 4
  max duration 4.260865020000
  min duration 2.860012048000
  total durat. 14.443589007000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 18}
    , self = 110
    , parent = Nothing
    , duration = 2.860012048000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:55:50.344912213 UTC
    , finish = 2025-09-03 12:55:53.204924261 UTC
    , thread_cap_info = ("ThreadId 189", 0, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 16}
    , self = 101
    , parent = Nothing
    , duration = 3.100341047000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:55:49.584910648 UTC
    , finish = 2025-09-03 12:55:52.685251695 UTC
    , thread_cap_info = ("ThreadId 180", 0, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 22}
    , self = 103
    , parent = Nothing
    , duration = 4.222370892000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:55:48.704917856 UTC
    , finish = 2025-09-03 12:55:52.927288748 UTC
    , thread_cap_info = ("ThreadId 135", 0, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 20}
    , self = 108
    , parent = Nothing
    , duration = 4.260865020000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:55:48.785253488 UTC
    , finish = 2025-09-03 12:55:53.046118508 UTC
    , thread_cap_info = ("ThreadId 141", 0, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 5
  max duration 3.560071696000
  min duration 2.060711061000
  total durat. 15.728443319000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 16}
    , self = 96
    , parent = Nothing
    , duration = 2.060711061000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:55:49.564917258 UTC
    , finish = 2025-09-03 12:55:51.625628319 UTC
    , thread_cap_info = ("ThreadId 179", 0, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 24}
    , self = 109
    , parent = Nothing
    , duration = 3.119720719000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:55:50.065404665 UTC
    , finish = 2025-09-03 12:55:53.185125384 UTC
    , thread_cap_info = ("ThreadId 187", 0, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 18}
    , self = 106
    , parent = Nothing
    , duration = 3.468129574000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:55:49.485663497 UTC
    , finish = 2025-09-03 12:55:52.953793071 UTC
    , thread_cap_info = ("ThreadId 177", 0, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 20}
    , self = 98
    , parent = Nothing
    , duration = 3.519810269000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:55:48.765270648 UTC
    , finish = 2025-09-03 12:55:52.285080917 UTC
    , thread_cap_info = ("ThreadId 140", 0, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 22}
    , self = 97
    , parent = Nothing
    , duration = 3.560071696000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:55:48.425148812 UTC
    , finish = 2025-09-03 12:55:51.985220508 UTC
    , thread_cap_info = ("ThreadId 103", 0, False)}
Fail : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = False}"
  total number 3
  max duration 2.280537966000
  min duration 0.434736860000
  total durat. 4.563994178000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 20}
    , self = 81
    , parent = Nothing
    , duration = 1.848719352000
    , status = Fail
    , start = 2025-09-03 12:55:48.385240418 UTC
    , finish = 2025-09-03 12:55:50.23395977 UTC
    , thread_cap_info = ("ThreadId 88", 0, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 18}
    , self = 85
    , parent = Nothing
    , duration = 2.280537966000
    , status = Fail
    , start = 2025-09-03 12:55:48.644918623 UTC
    , finish = 2025-09-03 12:55:50.925456589 UTC
    , thread_cap_info = ("ThreadId 118", 0, False)}
Except "AsyncCancelled" : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = False}"
  total number 3
  max duration 4.340106452000
  min duration 2.340104243000
  total durat. 9.766864579000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 16}
    , self = 86
    , parent = Nothing
    , duration = 2.340104243000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:55:48.664943246 UTC
    , finish = 2025-09-03 12:55:51.005047489 UTC
    , thread_cap_info = ("ThreadId 126", 0, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 22}
    , self = 95
    , parent = Nothing
    , duration = 3.086653884000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:55:48.318690276 UTC
    , finish = 2025-09-03 12:55:51.40534416 UTC
    , thread_cap_info = ("ThreadId 53", 0, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 24}
    , self = 107
    , parent = Nothing
    , duration = 4.340106452000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:55:48.664951688 UTC
    , finish = 2025-09-03 12:55:53.00505814 UTC
    , thread_cap_info = ("ThreadId 134", 0, False)}
**************************************************
F                                              Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                                              , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                                              = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                                              , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                                              = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
F                                              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F                                              = 24} , self = 53 , parent = Nothing , duration = 0.434736860000 , status
F                                              = Fail , start = 2025-09-03 12:55:48.317736155 UTC , finish = 2025-09-03
F                                              12:55:48.752473015 UTC , thread_cap_info = ("ThreadId 22", 3, False)}
F                                              
| E                                            Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| E                                            , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| E                                            = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| E                                            , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| E                                            = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| E                                            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| E                                            = 22} , self = 95 , parent = Nothing , duration = 3.086653884000 , status
| E                                            = Except "AsyncCancelled" , start = 2025-09-03 12:55:48.318690276 UTC ,
| E                                            finish = 2025-09-03 12:55:51.40534416 UTC , thread_cap_info = ("ThreadId
| E                                            53", 0, False)}
| E                                            
| | F                                          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | F                                          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | F                                          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | F                                          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | F                                          = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| | F                                          = 0 , alphabet_size = 4 , total_length = 104} , self = 60 , parent = Nothing
| | F                                          , duration = 0.737067920000 , status = Fail , start = 2025-09-03 12:55:48.323344201
| | F                                          UTC , finish = 2025-09-03 12:55:49.060412121 UTC , thread_cap_info = ("ThreadId
| | F                                          71", 1, False)}
| | F                                          
| | | F                                        Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | F                                        , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | F                                        = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | F                                        False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | F                                        = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| | | F                                        = 0 , alphabet_size = 4 , total_length = 104} , self = 59 , parent = Nothing
| | | F                                        , duration = 0.645520511000 , status = Fail , start = 2025-09-03 12:55:48.323348001
| | | F                                        UTC , finish = 2025-09-03 12:55:48.968868512 UTC , thread_cap_info = ("ThreadId
| | | F                                        73", 1, False)}
| | | F                                        
| | | | F                                      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                                      = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | F                                      = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | F                                      = 104} , self = 51 , parent = Nothing , duration = 0.276905699000 , status
| | | | F                                      = Fail , start = 2025-09-03 12:55:48.325478387 UTC , finish = 2025-09-03
| | | | F                                      12:55:48.602384086 UTC , thread_cap_info = ("ThreadId 98", 2, False)}
| | | | F                                      
| | | | | F                                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F                                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F                                    = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | F                                    = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | | F                                    = 104} , self = 50 , parent = Nothing , duration = 0.260595367000 , status
| | | | | F                                    = Fail , start = 2025-09-03 12:55:48.32548364 UTC , finish = 2025-09-03
| | | | | F                                    12:55:48.586079007 UTC , thread_cap_info = ("ThreadId 100", 2, False)}
| | | | | F                                    
| | | | | | F                                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | F                                  , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | F                                  = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | | | | F                                  Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | | | | F                                  8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | | | | F                                  = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | | | | F                                  ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | | | | F                                  1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | F                                  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | F                                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | F                                  = 22} , self = 45 , parent = Nothing , duration = 0.108446321000 , status
| | | | | | F                                  = Fail , start = 2025-09-03 12:55:48.34497019 UTC , finish = 2025-09-03
| | | | | | F                                  12:55:48.453416511 UTC , thread_cap_info = ("ThreadId 81", 0, False)}
| | | | | | F                                  
| | | | | | | F                                Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | F                                , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | F                                = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | F                                False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | F                                = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | F                                = 0 , alphabet_size = 2 , total_length = 22} , self = 104 , parent = Nothing
| | | | | | | F                                , duration = 4.599793879000 , status = Fail , start = 2025-09-03 12:55:48.344972258
| | | | | | | F                                UTC , finish = 2025-09-03 12:55:52.944766137 UTC , thread_cap_info = ("ThreadId
| | | | | | | F                                83", 0, False)}
| | | | | | | F                                
| | | | | | | | F                              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | F                              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | F                              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | F                              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | F                              = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | F                              = 0 , alphabet_size = 2 , total_length = 22} , self = 54 , parent = Nothing
| | | | | | | | F                              , duration = 0.392448356000 , status = Fail , start = 2025-09-03 12:55:48.366744268
| | | | | | | | F                              UTC , finish = 2025-09-03 12:55:48.759192624 UTC , thread_cap_info = ("ThreadId
| | | | | | | | F                              85", 0, False)}
| | | | | | | | F                              
| | | | | | | | | F                            Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | | F                            , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | | F                            = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | | F                            , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | | F                            = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | F                            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | F                            = 20} , self = 81 , parent = Nothing , duration = 1.848719352000 , status
| | | | | | | | | F                            = Fail , start = 2025-09-03 12:55:48.385240418 UTC , finish = 2025-09-03
| | | | | | | | | F                            12:55:50.23395977 UTC , thread_cap_info = ("ThreadId 88", 0, False)}
| | | | | | | | | F                            
| | | | | | | | | | E                          Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | E                          , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | E                          = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | E                          , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | E                          max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | E                          [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | E                          string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | E                          , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | E                          = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | E                          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | E                          = 22} , self = 97 , parent = Nothing , duration = 3.560071696000 , status
| | | | | | | | | | E                          = Except "AsyncCancelled" , start = 2025-09-03 12:55:48.425148812 UTC ,
| | | | | | | | | | E                          finish = 2025-09-03 12:55:51.985220508 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | E                          103", 0, False)}
| | | | | | | | | | E                          
| | | | | | F | | | |                          
| | | | | | F | | | |                          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | F | | | |                          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | F | | | |                          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | F | | | |                          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | F | | | |                          = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | F | | | |                          = 0 , alphabet_size = 2 , total_length = 20} , self = 102 , parent = Nothing
| | | | | | F | | | |                          , duration = 4.308390311000 , status = Fail , start = 2025-09-03 12:55:48.50497861
| | | | | | F | | | |                          UTC , finish = 2025-09-03 12:55:52.813368921 UTC , thread_cap_info = ("ThreadId
| | | | | | F | | | |                          107", 0, False)}
| | | | | | F | | | |                          
| | | | | F | | | | |                          
| | | | F   | | | | |                          
| | | | F   | | | | |                          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | F   | | | | |                          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | F   | | | | |                          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | F   | | | | |                          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | F   | | | | |                          = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | F   | | | | |                          = 0 , alphabet_size = 2 , total_length = 20} , self = 105 , parent = Nothing
| | | | F   | | | | |                          , duration = 4.325345281000 , status = Fail , start = 2025-09-03 12:55:48.628441845
| | | | F   | | | | |                          UTC , finish = 2025-09-03 12:55:52.953787126 UTC , thread_cap_info = ("ThreadId
| | | | F   | | | | |                          116", 0, False)}
| | | | F   | | | | |                          
| | | | | F | | | | |                          Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | F | | | | |                          , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | F | | | | |                          = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | F | | | | |                          , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | F | | | | |                          = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | F | | | | |                          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | F | | | | |                          = 18} , self = 85 , parent = Nothing , duration = 2.280537966000 , status
| | | | | F | | | | |                          = Fail , start = 2025-09-03 12:55:48.644918623 UTC , finish = 2025-09-03
| | | | | F | | | | |                          12:55:50.925456589 UTC , thread_cap_info = ("ThreadId 118", 0, False)}
| | | | | F | | | | |                          
| | | | | | | | | | | E                        Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | | | | E                        , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | | | | E                        = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | | | | E                        , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | | | | E                        = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | E                        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | E                        = 16} , self = 86 , parent = Nothing , duration = 2.340104243000 , status
| | | | | | | | | | | E                        = Except "AsyncCancelled" , start = 2025-09-03 12:55:48.664943246 UTC ,
| | | | | | | | | | | E                        finish = 2025-09-03 12:55:51.005047489 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | E                        126", 0, False)}
| | | | | | | | | | | E                        
| | | | | | | | | | | | E                      Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | | | | | E                      , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | | | | | E                      = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | | | | | E                      , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | | | | | E                      = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | E                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | E                      = 24} , self = 107 , parent = Nothing , duration = 4.340106452000 , status
| | | | | | | | | | | | E                      = Except "AsyncCancelled" , start = 2025-09-03 12:55:48.664951688 UTC ,
| | | | | | | | | | | | E                      finish = 2025-09-03 12:55:53.00505814 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | E                      134", 0, False)}
| | | | | | | | | | | | E                      
| | | | | | | | | | | | | E                    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | E                    , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | E                    = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | E                    , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | E                    max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | E                    [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | E                    string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | E                    , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | E                    = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | E                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | E                    = 22} , self = 103 , parent = Nothing , duration = 4.222370892000 , status
| | | | | | | | | | | | | E                    = Except "AsyncCancelled" , start = 2025-09-03 12:55:48.704917856 UTC ,
| | | | | | | | | | | | | E                    finish = 2025-09-03 12:55:52.927288748 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | E                    135", 0, False)}
| | | | | | | | | | | | | E                    
F | | | | | | | | | | | | |                    
  | | | | | | | F | | | | |                    
E | | | | | | |   | | | | |                    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E | | | | | | |   | | | | |                    , closure = Forward\n , start_strict_only = True\n , max_closure_length
E | | | | | | |   | | | | |                    = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
E | | | | | | |   | | | | |                    , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
E | | | | | | |   | | | | |                    max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
E | | | | | | |   | | | | |                    [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
E | | | | | | |   | | | | |                    string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
E | | | | | | |   | | | | |                    , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E | | | | | | |   | | | | |                    = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
E | | | | | | |   | | | | |                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
E | | | | | | |   | | | | |                    = 20} , self = 98 , parent = Nothing , duration = 3.519810269000 , status
E | | | | | | |   | | | | |                    = Except "AsyncCancelled" , start = 2025-09-03 12:55:48.765270648 UTC ,
E | | | | | | |   | | | | |                    finish = 2025-09-03 12:55:52.285080917 UTC , thread_cap_info = ("ThreadId
E | | | | | | |   | | | | |                    140", 0, False)}
E | | | | | | |   | | | | |                    
| | | | | | | | E | | | | |                    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | E | | | | |                    , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | E | | | | |                    = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | E | | | | |                    , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | E | | | | |                    max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | E | | | | |                    [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | E | | | | |                    string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | E | | | | |                    , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | E | | | | |                    = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | E | | | | |                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | E | | | | |                    = 20} , self = 108 , parent = Nothing , duration = 4.260865020000 , status
| | | | | | | | E | | | | |                    = Except "AsyncCancelled" , start = 2025-09-03 12:55:48.785253488 UTC ,
| | | | | | | | E | | | | |                    finish = 2025-09-03 12:55:53.046118508 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E | | | | |                    141", 0, False)}
| | | | | | | | E | | | | |                    
| | | | | | | | | | | | | | E                  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | E                  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | E                  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | E                  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | E                  = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | E                  = 0 , alphabet_size = 2 , total_length = 16} , self = 83 , parent = Nothing
| | | | | | | | | | | | | | E                  , duration = 1.559259635000 , status = Except "AsyncCancelled" , start
| | | | | | | | | | | | | | E                  = 2025-09-03 12:55:48.905653361 UTC , finish = 2025-09-03 12:55:50.464912996
| | | | | | | | | | | | | | E                  UTC , thread_cap_info = ("ThreadId 149", 0, False)}
| | | | | | | | | | | | | | E                  
| | | F | | | | | | | | | | |                  
| | F   | | | | | | | | | | |                  
| | E   | | | | | | | | | | |                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | E   | | | | | | | | | | |                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E   | | | | | | | | | | |                  = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | E   | | | | | | | | | | |                  = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | E   | | | | | | | | | | |                  = 242} , self = 90 , parent = Nothing , duration = 2.077215186000 , status
| | E   | | | | | | | | | | |                  = Except "AsyncCancelled" , start = 2025-09-03 12:55:49.06771521 UTC ,
| | E   | | | | | | | | | | |                  finish = 2025-09-03 12:55:51.144930396 UTC , thread_cap_info = ("ThreadId
| | E   | | | | | | | | | | |                  175", 1, False)}
| | E   | | | | | | | | | | |                  
| | | F | | | | | | | | | | |                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F | | | | | | | | | | |                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F | | | | | | | | | | |                  = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | F | | | | | | | | | | |                  = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | F | | | | | | | | | | |                  = 242} , self = 82 , parent = Nothing , duration = 1.207341784000 , status
| | | F | | | | | | | | | | |                  = Fail , start = 2025-09-03 12:55:49.1202563 UTC , finish = 2025-09-03
| | | F | | | | | | | | | | |                  12:55:50.327598084 UTC , thread_cap_info = ("ThreadId 176", 1, False)}
| | | F | | | | | | | | | | |                  
| | | | | | | | | | | | | | | F                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | F                , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | F                = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | | | | | | | | | | | | | F                Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | | | | | | | | | | | | | F                8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | | | | | | | | | | | | | F                = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | | | | | | | | | | | | | F                ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | | | | | | | | | | | | | F                1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | F                = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | F                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | F                = 18} , self = 79 , parent = Nothing , duration = 0.360018937000 , status
| | | | | | | | | | | | | | | F                = Fail , start = 2025-09-03 12:55:49.14492793 UTC , finish = 2025-09-03
| | | | | | | | | | | | | | | F                12:55:49.504946867 UTC , thread_cap_info = ("ThreadId 158", 0, False)}
| | | | | | | | | | | | | | | F                
| | | | | | | | | | | | | | | | F              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | | | F              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | | | F              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | | | F              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | | | F              = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | | | F              = 0 , alphabet_size = 2 , total_length = 24} , self = 88 , parent = Nothing
| | | | | | | | | | | | | | | | F              , duration = 1.858881823000 , status = Fail , start = 2025-09-03 12:55:49.226242524
| | | | | | | | | | | | | | | | F              UTC , finish = 2025-09-03 12:55:51.085124347 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | F              163", 0, False)}
| | | | | | | | | | | | | | | | F              
| | | | | | | | | | | | | | | | | E            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | | | E            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | | | E            = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | | | | | | | | | | | | | | E            = 12 , num_top_rules = 12 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | | | | | | | | | | | | | | | E            = 356} , self = 99 , parent = Nothing , duration = 3.019808532000 , status
| | | | | | | | | | | | | | | | | E            = Except "<<timeout>>" , start = 2025-09-03 12:55:49.265293256 UTC , finish
| | | | | | | | | | | | | | | | | E            = 2025-09-03 12:55:52.285101788 UTC , thread_cap_info = ("ThreadId 184",
| | | | | | | | | | | | | | | | | E            1, False)}
| | | | | | | | | | | | | | | | | E            
| | | | | | | | | | | | | | | | | | E          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | | | | E          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | | | | E          = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | | | | | | | | | | | | | | | E          = 12 , num_top_rules = 12 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | | | | | | | | | | | | | | | | E          = 356} , self = 100 , parent = Nothing , duration = 3.002519738000 , status
| | | | | | | | | | | | | | | | | | E          = Except "<<timeout>>" , start = 2025-09-03 12:55:49.28492901 UTC , finish
| | | | | | | | | | | | | | | | | | E          = 2025-09-03 12:55:52.287448748 UTC , thread_cap_info = ("ThreadId 185",
| | | | | | | | | | | | | | | | | | E          1, False)}
| | | | | | | | | | | | | | | | | | E          
| | | | | | | | | | | | | | | | | | | E        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | | | | E        , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | | | | E        = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | | | | E        , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | | | | E        max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | | | | E        [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | | | | E        string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | | | | E        , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | | | | E        = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | | | E        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | | | E        = 18} , self = 106 , parent = Nothing , duration = 3.468129574000 , status
| | | | | | | | | | | | | | | | | | | E        = Except "AsyncCancelled" , start = 2025-09-03 12:55:49.485663497 UTC ,
| | | | | | | | | | | | | | | | | | | E        finish = 2025-09-03 12:55:52.953793071 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | | E        177", 0, False)}
| | | | | | | | | | | | | | | | | | | E        
| | | | | | | | | | | | | | | F | | | |        
| | | | | | | | | | | | | | | E | | | |        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | E | | | |        , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | E | | | |        = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | E | | | |        , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | E | | | |        max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | E | | | |        [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | E | | | |        string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | E | | | |        , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | E | | | |        = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | E | | | |        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | E | | | |        = 16} , self = 96 , parent = Nothing , duration = 2.060711061000 , status
| | | | | | | | | | | | | | | E | | | |        = Except "AsyncCancelled" , start = 2025-09-03 12:55:49.564917258 UTC ,
| | | | | | | | | | | | | | | E | | | |        finish = 2025-09-03 12:55:51.625628319 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | E | | | |        179", 0, False)}
| | | | | | | | | | | | | | | E | | | |        
| | | | | | | | | | | | | | | | | | | | E      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | | | | | E      , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | | | | | E      = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | | | | | E      , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | | | | | E      max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | | | | | E      [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | | | | | E      string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | | | | | E      , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | | | | | E      = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | | | | E      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | | | | E      = 16} , self = 101 , parent = Nothing , duration = 3.100341047000 , status
| | | | | | | | | | | | | | | | | | | | E      = Except "AsyncCancelled" , start = 2025-09-03 12:55:49.584910648 UTC ,
| | | | | | | | | | | | | | | | | | | | E      finish = 2025-09-03 12:55:52.685251695 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | | | E      180", 0, False)}
| | | | | | | | | | | | | | | | | | | | E      
| | | | | | | | | | | | | | | | | | | | | F    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | | | | | | | | F    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | | | | | | | | F    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | | | | | | | | F    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | | | | | | | | F    = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | | | | | | | | F    = 0 , alphabet_size = 2 , total_length = 24} , self = 84 , parent = Nothing
| | | | | | | | | | | | | | | | | | | | | F    , duration = 0.930079708000 , status = Fail , start = 2025-09-03 12:55:49.625091731
| | | | | | | | | | | | | | | | | | | | | F    UTC , finish = 2025-09-03 12:55:50.555171439 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | | | | F    182", 0, False)}
| | | | | | | | | | | | | | | | | | | | | F    
| | | | | | | | | | | | | | | | | | | | | | E  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | | | | | | | E  , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | | | | | | | E  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | | | | | | | E  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | | | | | | | E  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | | | | | | | E  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | | | | | | | E  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | | | | | | | E  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | | | | | | | E  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | | | | | | E  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | | | | | | E  = 24} , self = 109 , parent = Nothing , duration = 3.119720719000 , status
| | | | | | | | | | | | | | | | | | | | | | E  = Except "AsyncCancelled" , start = 2025-09-03 12:55:50.065404665 UTC ,
| | | | | | | | | | | | | | | | | | | | | | E  finish = 2025-09-03 12:55:53.185125384 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | | | | | E  187", 0, False)}
| | | | | | | | | | | | | | | | | | | | | | E  
| | | | | | | | | F | | | | | | | | | | | | |  
| | | F | | | | |   | | | | | | | | | | | | |  
| | | E | | | | |   | | | | | | | | | | | | |  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | E | | | | |   | | | | | | | | | | | | |  , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | E | | | | |   | | | | | | | | | | | | |  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | E | | | | |   | | | | | | | | | | | | |  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | E | | | | |   | | | | | | | | | | | | |  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | E | | | | |   | | | | | | | | | | | | |  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | E | | | | |   | | | | | | | | | | | | |  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | E | | | | |   | | | | | | | | | | | | |  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | E | | | | |   | | | | | | | | | | | | |  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | E | | | | |   | | | | | | | | | | | | |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | E | | | | |   | | | | | | | | | | | | |  = 18} , self = 110 , parent = Nothing , duration = 2.860012048000 , status
| | | E | | | | |   | | | | | | | | | | | | |  = Except "AsyncCancelled" , start = 2025-09-03 12:55:50.344912213 UTC ,
| | | E | | | | |   | | | | | | | | | | | | |  finish = 2025-09-03 12:55:53.204924261 UTC , thread_cap_info = ("ThreadId
| | | E | | | | |   | | | | | | | | | | | | |  189", 0, False)}
| | | E | | | | |   | | | | | | | | | | | | |  
| | | | | | | | | S | | | | | | | | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | | S | | | | | | | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | | S | | | | | | | | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | | S | | | | | | | | | | | | |  = 12 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 4 ,
| | | | | | | | | S | | | | | | | | | | | | |  alphabet_size = 6 , total_length = 242} , self = 87 , parent = Nothing
| | | | | | | | | S | | | | | | | | | | | | |  , duration = 0.605549384000 , status = Success , start = 2025-09-03 12:55:50.426106338
| | | | | | | | | S | | | | | | | | | | | | |  UTC , finish = 2025-09-03 12:55:51.031655722 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | S | | | | | | | | | | | | |  192", 1, False)}
| | | | | | | | | S | | | | | | | | | | | | |  
| | | | | | | | | | | | | | E | | | | | | | |  
| | | | | | | | | | | | | |   | | | | | | F |  
| | | | | F | | | | | | | |   | | | | | |   |  
| | | | |   | | | | | E | |   | | | | | |   |  
| | | | |   | | | S |   | |   | | | | | |   |  
| | | | |   | | |   |   | |   | F | | | |   |  
| | E | |   | | |   |   | |   |   | | | |   |  
| E   | |   | | |   |   | |   |   | | | |   |  
|     | |   | | |   |   | |   E   | | | |   |  
|     | |   | | |   E   | |       | | | |   |  
E     | |   | | |       | |       | | | |   |  
      | |   | | |       | |       E | | |   |  
      | |   | | |       | |         E | |   |  
F     | |   | | |       | |           | |   |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F     | |   | | |       | |           | |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F     | |   | | |       | |           | |   |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F     | |   | | |       | |           | |   |  = 16 , num_strict_rules = 12 , num_top_rules = 12 , num_weak_rules = 4
F     | |   | | |       | |           | |   |  , alphabet_size = 6 , total_length = 356} , self = 111 , parent = Nothing
F     | |   | | |       | |           | |   |  , duration = 0.883143819000 , status = Fail , start = 2025-09-03 12:55:52.345533378
F     | |   | | |       | |           | |   |  UTC , finish = 2025-09-03 12:55:53.228677197 UTC , thread_cap_info = ("ThreadId
F     | |   | | |       | |           | |   |  206", 1, False)}
F     | |   | | |       | |           | |   |  
|     | |   | | |       | |           | E   |  
|     | |   F | |       | |           |     |  
|     | |     | |       | E           |     |  
|     | |     F |       |             |     |  
|     | F       |       |             |     |  
|     |         |       |             E     |  
|     |         |       E                   |  
|     |         E                           |  
|     |                                     E  
|     E                                        
F                                              
