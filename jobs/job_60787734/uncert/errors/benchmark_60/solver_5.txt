Input TRS:
    1: A(a(x1)) -> A(A(x1))
    2: A(b(x1)) -> AB(x1)
    3: AB(a(x1)) -> ABA(x1)
    4: AB(b(x1)) -> AB(B(x1))
    5: ABA(a(x1)) -> ABA(A(x1))
    6: ABA(b(x1)) -> ABAB(x1)
    7: ABAB(a(x1)) -> ABABA(x1)
    8: ABAB(b(x1)) -> ABAB(B(x1))
    9: ABABA(a(x1)) -> ABABAA(x1)
    10: ABABA(b(x1)) -> ABABA(B(x1))
    11: ABABAA(a(x1)) -> ABABAA(A(x1))
    12: ABABAA(b(x1)) -> ABABAAB(x1)
    13: ABABAAB(a(x1)) -> ABABAABA(x1)
    14: ABABAAB(b(x1)) -> ABABAAB(B(x1))
    15: ABABAABA(a(x1)) -> ABABAABAA(x1)
    16: ABABAABA(b(x1)) -> ABABAABA(B(x1))
    17: ABABAABAA(a(x1)) -> ABABAABAAA(x1)
    18: ABABAABAA(b(x1)) -> ABABAABAA(B(x1))
    19: ABABAABAAA(x1) -> b(a(a(b(a(x1)))))
    20: B(a(x1)) -> BA(x1)
    21: B(b(x1)) -> B(B(x1))
    22: BA(a(x1)) -> BAA(x1)
    23: BA(b(x1)) -> BA(B(x1))
    24: BAA(a(x1)) -> BAA(A(x1))
    25: BAA(b(x1)) -> BAAB(x1)
    26: BAAB(a(x1)) -> BAABA(x1)
    27: BAAB(b(x1)) -> BAAB(B(x1))
    28: BAABA(x1) -> a(b(a(b(a(a(b(a(a(a(x1))))))))))
Number of strict rules: 28
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #A(b(x1)) -> #AB(x1)
   #2: #ABA(b(x1)) -> #ABAB(x1)
   #3: #ABABAAB(a(x1)) -> #ABABAABA(x1)
   #4: #ABABA(a(x1)) -> #ABABAA(x1)
   #5: #ABABAA(a(x1)) -> #ABABAA(A(x1))
   #6: #ABABAA(a(x1)) -> #A(x1)
   #7: #BAA(a(x1)) -> #BAA(A(x1))
   #8: #BAA(a(x1)) -> #A(x1)
   #9: #BA(b(x1)) -> #BA(B(x1))
   #10: #BA(b(x1)) -> #B(x1)
   #11: #ABABAA(b(x1)) -> #ABABAAB(x1)
   #12: #ABABAAB(b(x1)) -> #ABABAAB(B(x1))
   #13: #ABABAAB(b(x1)) -> #B(x1)
   #14: #BAA(b(x1)) -> #BAAB(x1)
   #15: #B(a(x1)) -> #BA(x1)
   #16: #ABAB(a(x1)) -> #ABABA(x1)
   #17: #ABABA(b(x1)) -> #ABABA(B(x1))
   #18: #ABABA(b(x1)) -> #B(x1)
   #19: #ABA(a(x1)) -> #ABA(A(x1))
   #20: #ABA(a(x1)) -> #A(x1)
   #21: #BA(a(x1)) -> #BAA(x1)
   #22: #BAAB(b(x1)) -> #BAAB(B(x1))
   #23: #BAAB(b(x1)) -> #B(x1)
   #24: #ABABAABAA(a(x1)) -> #ABABAABAAA(x1)
   #25: #BAAB(a(x1)) -> #BAABA(x1)
   #26: #B(b(x1)) -> #B(B(x1))
   #27: #B(b(x1)) -> #B(x1)
   #28: #ABABAABA(b(x1)) -> #ABABAABA(B(x1))
   #29: #ABABAABA(b(x1)) -> #B(x1)
   #30: #AB(a(x1)) -> #ABA(x1)
   #31: #A(a(x1)) -> #A(A(x1))
   #32: #A(a(x1)) -> #A(x1)
   #33: #ABAB(b(x1)) -> #ABAB(B(x1))
   #34: #ABAB(b(x1)) -> #B(x1)
   #35: #ABABAABA(a(x1)) -> #ABABAABAA(x1)
   #36: #AB(b(x1)) -> #AB(B(x1))
   #37: #AB(b(x1)) -> #B(x1)
   #38: #ABABAABAA(b(x1)) -> #ABABAABAA(B(x1))
   #39: #ABABAABAA(b(x1)) -> #B(x1)
Number of SCCs: 1, DPs: 35, edges: 79
	SCC { #1..21 #23 #26..37 #39 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: x1_2; x1_2
  #BA(x1)	weight: x1_2; 0
#ABABAAB(x1)	weight: x1_1; 0
ABABAA(x1)	weight: (/ 1 8) + x1_2; x1_2
  BAAB(x1)	weight: x1_1; x1_1
  ABAB(x1)	weight: (/ 1 8) + x1_1; x1_1
#ABABA(x1)	weight: x1_2; 0
     b(x1)	weight: (/ 1 8) + x1_1; x1_1
   #B(x1)	weight: x1_1; 0
#ABABAABA(x1)	weight: x1_2; 0
#ABABAA(x1)	weight: x1_2; 0
#ABAB(x1)	weight: x1_1; 0
    AB(x1)	weight: (/ 1 8) + x1_1; x1_1
ABABAABAA(x1)	weight: (/ 1 8) + x1_2; x1_2
#ABABAABAA(x1)	weight: x1_2; 0
 #ABA(x1)	weight: x1_2; 0
   BAA(x1)	weight: x1_2; x1_2
ABABAABA(x1)	weight: (/ 1 8) + x1_2; x1_2
     B(x1)	weight: x1_1; x1_1
#BAAB(x1)	weight: x1_1; 0
#BAABA(x1)	weight: 0; 0
     A(x1)	weight: (/ 1 8) + x1_2; x1_2
   #A(x1)	weight: x1_2; 0
   ABA(x1)	weight: (/ 1 8) + x1_2; x1_2
ABABAABAAA(x1)	weight: (/ 1 8) + x1_2; x1_2
ABABAAB(x1)	weight: (/ 1 8) + x1_1; x1_1
 ABABA(x1)	weight: (/ 1 8) + x1_2; x1_2
 BAABA(x1)	weight: x1_2; x1_2
 #BAA(x1)	weight: x1_2; 0
#ABABAABAAA(x1)	weight: 0; 0
  #AB(x1)	weight: x1_1; 0
    BA(x1)	weight: x1_2; x1_2
    Usable rules: { 1..28 }
    Removed DPs: #12 #13 #23 #26 #27 #33 #34 #36 #37
Number of SCCs: 1, DPs: 24, edges: 42
	SCC { #1..6 #8..11 #15..21 #28..32 #35 #39 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
