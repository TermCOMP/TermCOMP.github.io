last 3720 length 18147
CNF 3720 vars 18147 clauses
last 2886 length 13463
CNF 2886 vars 13463 clauses
last 9948 length 57616
CNF 9948 vars 57616 clauses
last 12365 length 60636
CNF 12365 vars 60636 clauses
last 12152 length 76999
CNF 12152 vars 76999 clauses
last 16155 length 79631
CNF 16155 vars 79631 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18908, clauses: 73239
last 18908 length 73239
CNF 18908 vars 73239 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18908, clauses: 73239, status: Satisfied, time: 0.335143901s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20432, clauses: 81450
last 20432 length 81450
CNF 20432 vars 81450 clauses
last 5925 length 31790
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20432, clauses: 81450, status: Satisfied, time: 0.465330563s
CNF 5925 vars 31790 clauses
last 7018 length 44963
CNF 7018 vars 44963 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9825, clauses: 35588
last 9825 length 35588
CNF 9825 vars 35588 clauses
last 5331 length 29037
CNF 5331 vars 29037 clauses
last 6478 length 43219
CNF 6478 vars 43219 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8807, clauses: 31689
last 8807 length 31689
CNF 8807 vars 31689 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8807, clauses: 31689, status: Satisfied, time: 0.871778423s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 36881, clauses: 154631
**************************************************
last 36881 length 154631
summary
**************************************************
SRS with 4 rules on 3 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 36 rules on 9 letters       mirror
SRS with 36 rules on 9 letters       DP
SRS with 81 strict rules and 36 weak rules on 18 letters       weights
SRS with 65 strict rules and 36 weak rules on 16 letters       EDG
SRS with 65 strict rules and 36 weak rules on 16 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 13 strict rules and 36 weak rules on 15 letters       weights
SRS with 5 strict rules and 36 weak rules on 13 letters       EDG
4 sub-proofs
  1 SRS with 1 strict rules and 36 weak rules on 10 letters       Usable
  SRS with 1 rules on 2 letters       weights
  SRS with 0 rules on 0 letters       EDG

  2 SRS with 1 strict rules and 36 weak rules on 10 letters       Usable
  SRS with 1 rules on 2 letters       weights
  SRS with 0 rules on 0 letters       EDG

  3 SRS with 2 strict rules and 36 weak rules on 10 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 1 strict rules and 36 weak rules on 10 letters       EDG
  SRS with 1 strict rules and 36 weak rules on 10 letters       Usable
  SRS with 1 rules on 2 letters       weights
  SRS with 0 rules on 0 letters       EDG

  4 SRS with 1 strict rules and 36 weak rules on 10 letters       Usable
  SRS with 1 rules on 2 letters       weights
  SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [a, b] -> [b, b, b, a, a, c] {- Input 1 -}
  [b] -> [] {- Input 2 -}
  [c, c] -> [] {- Input 3 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, a], [a, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[b, a], [a, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[c, a], [a, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[c, a], [a, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[c, a], [a, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[a, a], [a, b], [b, a]] -> [ [a, b] , [b, b] , [b, b] , [b, a] , [a, a] , [a, c] , [c, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, a], [a, b], [b, b]] -> [ [a, b] , [b, b] , [b, b] , [b, a] , [a, a] , [a, c] , [c, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, a], [a, b], [b, c]] -> [ [a, b] , [b, b] , [b, b] , [b, a] , [a, a] , [a, c] , [c, c] ] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, a], [a, b], [b, a]] -> [ [b, b] , [b, b] , [b, b] , [b, a] , [a, a] , [a, c] , [c, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, a], [a, b], [b, b]] -> [ [b, b] , [b, b] , [b, b] , [b, a] , [a, a] , [a, c] , [c, b] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, a], [a, b], [b, c]] -> [ [b, b] , [b, b] , [b, b] , [b, a] , [a, a] , [a, c] , [c, c] ] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[c, a], [a, b], [b, a]] -> [ [c, b] , [b, b] , [b, b] , [b, a] , [a, a] , [a, c] , [c, a] ] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[c, a], [a, b], [b, b]] -> [ [c, b] , [b, b] , [b, b] , [b, a] , [a, a] , [a, c] , [c, b] ] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[c, a], [a, b], [b, c]] -> [ [c, b] , [b, b] , [b, b] , [b, a] , [a, a] , [a, c] , [c, c] ] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, b], [b, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b], [b, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b], [b, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, b], [b, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, b], [b, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[b, b], [b, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[c, b], [b, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[c, b], [b, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[c, b], [b, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 2)) -}
  [[a, c], [c, c], [c, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 3)) -}
  [[a, c], [c, c], [c, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 3)) -}
  [[a, c], [c, c], [c, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 3)) -}
  [[b, c], [c, c], [c, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 3)) -}
  [[b, c], [c, c], [c, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 3)) -}
  [[b, c], [c, c], [c, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 3)) -}
  [[c, c], [c, c], [c, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 3)) -}
  [[c, c], [c, c], [c, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 3)) -}
  [[c, c], [c, c], [c, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 3)) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] -> [[a, a]] {- Mirror (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, b], [a, a]] -> [[a, b]] {- Mirror (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, c], [a, a]] -> [[a, c]] {- Mirror (Semlab 0 (Concon 2 (Input 0))) -}
  [[a, a], [b, a]] -> [[b, a]] {- Mirror (Semlab 1 (Concon 0 (Input 0))) -}
  [[a, b], [b, a]] -> [[b, b]] {- Mirror (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, c], [b, a]] -> [[b, c]] {- Mirror (Semlab 1 (Concon 2 (Input 0))) -}
  [[a, a], [c, a]] -> [[c, a]] {- Mirror (Semlab 2 (Concon 0 (Input 0))) -}
  [[a, b], [c, a]] -> [[c, b]] {- Mirror (Semlab 2 (Concon 1 (Input 0))) -}
  [[a, c], [c, a]] -> [[c, c]] {- Mirror (Semlab 2 (Concon 2 (Input 0))) -}
  [[b, a], [a, b], [a, a]] -> [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 0 (Input 1))) -}
  [[b, b], [a, b], [a, a]] -> [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, c], [a, b], [a, a]] -> [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 2 (Input 1))) -}
  [[b, a], [a, b], [b, a]] -> [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [a, b], [b, a]] -> [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, c], [a, b], [b, a]] -> [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 2 (Input 1))) -}
  [[b, a], [a, b], [c, a]] -> [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- Mirror (Semlab 2 (Concon 0 (Input 1))) -}
  [[b, b], [a, b], [c, a]] -> [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- Mirror (Semlab 2 (Concon 1 (Input 1))) -}
  [[b, c], [a, b], [c, a]] -> [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- Mirror (Semlab 2 (Concon 2 (Input 1))) -}
  [[b, a], [a, b]] -> [[a, a]] {- Mirror (Semlab 0 (Concon 0 (Input 2))) -}
  [[b, b], [a, b]] -> [[a, b]] {- Mirror (Semlab 0 (Concon 1 (Input 2))) -}
  [[b, c], [a, b]] -> [[a, c]] {- Mirror (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, a], [b, b]] -> [[b, a]] {- Mirror (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, b], [b, b]] -> [[b, b]] {- Mirror (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c], [b, b]] -> [[b, c]] {- Mirror (Semlab 1 (Concon 2 (Input 2))) -}
  [[b, a], [c, b]] -> [[c, a]] {- Mirror (Semlab 2 (Concon 0 (Input 2))) -}
  [[b, b], [c, b]] -> [[c, b]] {- Mirror (Semlab 2 (Concon 1 (Input 2))) -}
  [[b, c], [c, b]] -> [[c, c]] {- Mirror (Semlab 2 (Concon 2 (Input 2))) -}
  [[c, a], [c, c], [a, c]] -> [ [ a , a ] ] {- Mirror (Semlab 0 (Concon 0 (Input 3))) -}
  [[c, b], [c, c], [a, c]] -> [ [ a , b ] ] {- Mirror (Semlab 0 (Concon 1 (Input 3))) -}
  [[c, c], [c, c], [a, c]] -> [ [ a , c ] ] {- Mirror (Semlab 0 (Concon 2 (Input 3))) -}
  [[c, a], [c, c], [b, c]] -> [ [ b , a ] ] {- Mirror (Semlab 1 (Concon 0 (Input 3))) -}
  [[c, b], [c, c], [b, c]] -> [ [ b , b ] ] {- Mirror (Semlab 1 (Concon 1 (Input 3))) -}
  [[c, c], [c, c], [b, c]] -> [ [ b , c ] ] {- Mirror (Semlab 1 (Concon 2 (Input 3))) -}
  [[c, a], [c, c], [c, c]] -> [ [ c , a ] ] {- Mirror (Semlab 2 (Concon 0 (Input 3))) -}
  [[c, b], [c, c], [c, c]] -> [ [ c , b ] ] {- Mirror (Semlab 2 (Concon 1 (Input 3))) -}
  [[c, c], [c, c], [c, c]] -> [ [ c , c ] ] {- Mirror (Semlab 2 (Concon 2 (Input 3))) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [b, a]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, b]#, [c, a]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, c]#, [c, a]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a]#, [a, b]] |-> [ [ a , a ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [a, a]# , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [b, b]# , [b, b] , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [c, a]# , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [a, a]# , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [b, b]# , [b, b] , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [c, a]# , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [a, a]# , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [b, b]# , [b, b] , [ c , b ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [b, b]# , [ c , b ] ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [c, a]# , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 6) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [c, b]] |-> [ [ c , a ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [a, a]# , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [b, b]# , [b, b] , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [c, b]# , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [a, a]# , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [b, b]# , [b, b] , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [c, b]# , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [a, a]# , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [b, b]# , [b, b] , [ c , b ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [b, b]# , [ c , b ] ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 6) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [c, b]# , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c]#, [a, b]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [a, a]# , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [b, b]# , [b, b] , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [c, c]# , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [a, a]# , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [b, b]# , [b, b] , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [c, c]# , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [a, a]# , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [b, b]# , [b, b] , [ c , b ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [b, b]# , [ c , b ] ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 6) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [c, c]# , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [b, b]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, c]#, [c, b]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c]] |-> [ [ a , a ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, a]#, [c, c], [b, c]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, a]#, [c, c], [c, c]] |-> [ [ c , a ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b]#, [c, c], [a, c]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, b]#, [c, c], [b, c]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, b]#, [c, c], [c, c]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
  ([a, a]#, 0/1)
  ([a, b]#, 1/1)
  ([a, c]#, 1/1)
  ([b, a]#, 1/1)
  ([b, b]#, 1/1)
  ([b, c]#, 1/1)
  ([c, a]#, 1/1)
  ([c, b]#, 1/1)
  ([c, c]#, 0/1)
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [b, a]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, b]#, [c, a]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [b, b]# , [b, b] , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [c, a]# , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [b, b]# , [b, b] , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [c, a]# , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [b, b]# , [b, b] , [ c , b ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [b, b]# , [ c , b ] ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [c, a]# , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 6) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [c, b]] |-> [ [ c , a ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [b, b]# , [b, b] , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [c, b]# , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [b, b]# , [b, b] , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [c, b]# , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [b, b]# , [b, b] , [ c , b ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [b, b]# , [ c , b ] ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 6) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [c, b]# , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c]#, [a, b]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [b, b]# , [b, b] , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [b, b]# , [b, b] , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [b, b]# , [b, b] , [ c , b ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [b, b]# , [ c , b ] ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 6) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [b, b]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, a]#, [c, c], [b, c]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, a]#, [c, c], [c, c]] |-> [ [ c , a ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b]#, [c, c], [a, c]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, b]#, [c, c], [b, c]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, b]#, [c, c], [c, c]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [b, a]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, b]#, [c, a]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[c, b]#, [c, c], [a, c]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, b]#, [c, c], [b, c]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, c]#, [a, b]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [b, b]# , [b, b] , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [b, b]# , [b, b] , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [c, b]# , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[c, b]#, [c, c], [c, c]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [c, a]# , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[c, a]#, [c, c], [b, c]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [b, b]# , [b, b] , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [c, b]# , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [b, b]# , [b, b] , [ c , b ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [b, b]# , [ c , b ] ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 6) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [c, b]# , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [b, b]# , [b, b] , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [c, a]# , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[c, a]#, [c, c], [c, c]] |-> [ [ c , a ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [b, b]# , [b, b] , [ c , b ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [b, b]# , [ c , b ] ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [c, a]# , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 6) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [c, b]] |-> [ [ c , a ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [b, b]# , [b, b] , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [b, b]# , [b, b] , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [b, b]# , [b, b] , [ c , b ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [b, b]# , [ c , b ] ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 6) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [b, b]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  ( [a, a]
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [a, b]
  , Wk  / 3A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [a, c]
  , Wk  / 0A  0A  0A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, a]
  , Wk  / 0A  0A  3A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, b]
  , Wk  / 0A  0A  0A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, c]
  , Wk  / 0A  0A  3A - \
        | 0A  0A  3A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [c, a]
  , Wk  / 0A  3A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [c, b]
  , Wk  / 0A  0A 0A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [c, c]
  , Wk  / 0A  3A 3A - \
        | 0A  3A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [a, b]#
  , Wk  / 14A 15A 15A - \
        | 14A 15A 15A - |
        | 14A 15A 15A - |
        \ -   -   -   - / )
  ( [a, c]#
  , Wk  / 12A 12A 12A - \
        | 12A 12A 12A - |
        | 12A 12A 12A - |
        \ -   -   -   - / )
  ( [b, a]#
  , Wk  / 13A 15A 15A - \
        | 13A 15A 15A - |
        | 13A 15A 15A - |
        \ -   -   -   - / )
  ( [b, b]#
  , Wk  / 12A 12A 15A - \
        | 12A 12A 15A - |
        | 12A 12A 15A - |
        \ -   -   -   - / )
  ( [b, c]#
  , Wk  / 12A 12A 15A - \
        | 12A 12A 15A - |
        | 12A 12A 15A - |
        \ -   -   -   - / )
  ( [c, a]#
  , Wk  / 12A 13A 13A - \
        | 12A 13A 13A - |
        | 12A 13A 13A - |
        \ -   -   -   - / )
  ( [c, b]#
  , Wk  / 9A 12A 12A - \
        | 9A 12A 12A - |
        | 9A 12A 12A - |
        \ -  -   -   - / )
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[c, b]#, [c, c], [a, c]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, a]#, [b, b]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [b, b]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
  ([a, b]#, 0/1)
  ([a, c]#, 2/1)
  ([b, a]#, 0/1)
  ([b, b]#, 2/1)
  ([b, c]#, 1/1)
  ([c, b]#, 2/1)
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, c]#, [b, b]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  remove un-usable
    SRS
      [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
      [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
      [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
      [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
      [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
      [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
      [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
      [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
      [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
      [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
      [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
      [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
      [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
      [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
      [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
      [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
      [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
      [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
      [[c, a], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
      [[c, b], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
      [[c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
      [[c, a], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
      [[c, b], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
      [[c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
      [[c, a], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
      [[c, b], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
      [[c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
reason
  ([a, a], 1/1)
  ([a, b]#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

property Termination
has value Just True
for SRS
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  remove un-usable
    SRS
      [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
      [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
      [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
      [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
      [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
      [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
      [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
      [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
      [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
      [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
      [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
      [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
      [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
      [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
      [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
      [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
      [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
      [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
      [[c, a], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
      [[c, b], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
      [[c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
      [[c, a], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
      [[c, b], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
      [[c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
      [[c, a], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
      [[c, b], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
      [[c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
   property Termination
has value Just True
for SRS
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
reason
  ([a, a], 1/1)
  ([a, c]#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

property Termination
has value Just True
for SRS
  [[b, a]#, [a, b], [a, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  ( [a, a]
  , Wk  / 0A  3A 3A - \
        | 0A  3A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [a, b]
  , Wk  / 3A 6A 6A - \
        | 0A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( [a, c]
  , Wk  / 3A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [b, a]
  , Wk  / 0A  0A  3A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, b]
  , Wk  / 0A  0A  3A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, c]
  , Wk  / 3A 3A 6A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [c, a]
  , Wk  / 0A  0A  3A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [c, b]
  , Wk  / 0A  3A 3A - \
        | 0A  3A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [c, c]
  , Wk  / 0A  0A  3A - \
        | 0A  0A  3A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, a]#
  , Wk  / 6A 6A 9A - \
        | 6A 6A 9A - |
        | 6A 6A 9A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [[b, a]#, [b, b]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[b, a]#, [b, b]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  remove un-usable
    SRS
      [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
      [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
      [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
      [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
      [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
      [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
      [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
      [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
      [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
      [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
      [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
      [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
      [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
      [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
      [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
      [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
      [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
      [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
      [[c, a], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
      [[c, b], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
      [[c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
      [[c, a], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
      [[c, b], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
      [[c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
      [[c, a], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
      [[c, b], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
      [[c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
   property Termination
has value Just True
for SRS
  [[b, a]#, [b, b]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
reason
  ([b, b], 1/1)
  ([b, a]#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

property Termination
has value Just True
for SRS
  [[b, c]#, [b, b]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  remove un-usable
    SRS
      [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
      [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
      [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
      [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
      [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
      [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
      [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
      [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
      [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
      [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
      [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
      [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
      [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
      [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
      [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
      [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
      [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
      [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
      [[c, a], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
      [[c, b], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
      [[c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
      [[c, a], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
      [[c, b], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
      [[c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
      [[c, a], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
      [[c, b], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
      [[c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
   property Termination
has value Just True
for SRS
  [[b, c]#, [b, b]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
reason
  ([b, b], 1/1)
  ([b, c]#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: (4,3)\TileAllAll{2}\Mirror(36,9)\Deepee(81/36,18)\Weight\EDG(65/36,16)\Matrix{\Arctic}{3}(13/36,15)\Weight(5/36,13)\EDG[(1/36,10)\Usable(1,2)\Weight(0,0)\EDG[],(1/36,10)\Usable(1,2)\Weight(0,0)\EDG[],(2/36,10)\Matrix{\Arctic}{3}\EDG(1/36,10)\Usable(1,2)\Weight(0,0)\EDG[],(1/36,10)\Usable(1,2)\Weight(0,0)\EDG[]]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************CNF 36881 vars 154631 clauses

Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 1.465904256000
  min duration 0.074374693000
  total durat. 3.100400807000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 101
      , num_strict_rules = 65
      , num_top_rules = 65
      , num_weak_rules = 36
      , alphabet_size = 16
      , total_length = 566}
    , self = 66
    , parent = Nothing
    , duration = 1.465904256000
    , status = Fail
    , start = 2025-09-03 11:10:58.616986564 UTC
    , finish = 2025-09-03 11:11:00.08289082 UTC
    , thread_cap_info = ("ThreadId 97", 0, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 1.137274110000
  min duration 0.149142435000
  total durat. 3.060766636000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 101
      , num_strict_rules = 65
      , num_top_rules = 65
      , num_weak_rules = 36
      , alphabet_size = 16
      , total_length = 566}
    , self = 65
    , parent = Nothing
    , duration = 1.137274110000
    , status = Fail
    , start = 2025-09-03 11:10:58.618652537 UTC
    , finish = 2025-09-03 11:10:59.755926647 UTC
    , thread_cap_info = ("ThreadId 98", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 1.340151510000
  min duration 1.075124649000
  total durat. 3.752426676000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 38
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 36
      , alphabet_size = 10
      , total_length = 190}
    , self = 91
    , parent = Nothing
    , duration = 1.075124649000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:11:02.32639493 UTC
    , finish = 2025-09-03 11:11:03.401519579 UTC
    , thread_cap_info = ("ThreadId 133", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 89
      , num_strict_rules = 53
      , num_top_rules = 53
      , num_weak_rules = 36
      , alphabet_size = 16
      , total_length = 473}
    , self = 69
    , parent = Nothing
    , duration = 1.337150517000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:10:59.621518973 UTC
    , finish = 2025-09-03 11:11:00.95866949 UTC
    , thread_cap_info = ("ThreadId 105", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 101
      , num_strict_rules = 65
      , num_top_rules = 65
      , num_weak_rules = 36
      , alphabet_size = 16
      , total_length = 566}
    , self = 77
    , parent = Nothing
    , duration = 1.340151510000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:11:00.17865547 UTC
    , finish = 2025-09-03 11:11:01.51880698 UTC
    , thread_cap_info = ("ThreadId 108", 0, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 1.572865328000
  min duration 1.161186338000
  total durat. 4.005345492000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 38
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 36
      , alphabet_size = 10
      , total_length = 190}
    , self = 89
    , parent = Nothing
    , duration = 1.161186338000
    , status = Success
    , start = 2025-09-03 11:11:02.15702326 UTC
    , finish = 2025-09-03 11:11:03.318209598 UTC
    , thread_cap_info = ("ThreadId 132", 0, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 89
      , num_strict_rules = 53
      , num_top_rules = 53
      , num_weak_rules = 36
      , alphabet_size = 16
      , total_length = 473}
    , self = 67
    , parent = Nothing
    , duration = 1.271293826000
    , status = Success
    , start = 2025-09-03 11:10:59.359882429 UTC
    , finish = 2025-09-03 11:11:00.631176255 UTC
    , thread_cap_info = ("ThreadId 103", 0, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 101
      , num_strict_rules = 65
      , num_top_rules = 65
      , num_weak_rules = 36
      , alphabet_size = 16
      , total_length = 566}
    , self = 74
    , parent = Nothing
    , duration = 1.572865328000
    , status = Success
    , start = 2025-09-03 11:10:59.83866466 UTC
    , finish = 2025-09-03 11:11:01.411529988 UTC
    , thread_cap_info = ("ThreadId 107", 0, False)}
**************************************************
F        Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
F        , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
F        = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
F        False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
F        = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
F        = 0 , alphabet_size = 3 , total_length = 12} , self = 38 , parent = Nothing
F        , duration = 0.239736607000 , status = Fail , start = 2025-09-03 11:10:58.204470918
F        UTC , finish = 2025-09-03 11:10:58.444207525 UTC , thread_cap_info = ("ThreadId
F        40", 3, False)}
F        
| F      Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F      , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F      = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F      False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F      = Size { num_rules = 36 , num_strict_rules = 36 , num_top_rules = 0 , num_weak_rules
| F      = 0 , alphabet_size = 9 , total_length = 180} , self = 37 , parent = Nothing
| F      , duration = 0.222738617000 , status = Fail , start = 2025-09-03 11:10:58.211706019
| F      UTC , finish = 2025-09-03 11:10:58.434444636 UTC , thread_cap_info = ("ThreadId
| F      54", 0, False)}
| F      
| | F    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | F    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | F    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | F    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | F    = Size { num_rules = 36 , num_strict_rules = 36 , num_top_rules = 0 , num_weak_rules
| | F    = 0 , alphabet_size = 9 , total_length = 180} , self = 42 , parent = Nothing
| | F    , duration = 0.278345309000 , status = Fail , start = 2025-09-03 11:10:58.211711046
| | F    UTC , finish = 2025-09-03 11:10:58.490056355 UTC , thread_cap_info = ("ThreadId
| | F    56", 0, False)}
| | F    
| | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | | F  = 36 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | F  = 180} , self = 61 , parent = Nothing , duration = 0.149142435000 , status
| | | F  = Fail , start = 2025-09-03 11:10:58.430978578 UTC , finish = 2025-09-03
| | | F  11:10:58.580121013 UTC , thread_cap_info = ("ThreadId 73", 1, False)}
| | | F  
| F | |  
F   | |  
    F |  
F     |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F     |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F     |  = False\n , verbose = False}" , input_size = Size { num_rules = 89 , num_strict_rules
F     |  = 53 , num_top_rules = 53 , num_weak_rules = 36 , alphabet_size = 16 ,
F     |  total_length = 473} , self = 63 , parent = Nothing , duration = 0.747838435000
F     |  , status = Fail , start = 2025-09-03 11:10:58.512559792 UTC , finish =
F     |  2025-09-03 11:10:59.260398227 UTC , thread_cap_info = ("ThreadId 89", 0,
F     |  False)}
F     |  
| F   |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F   |  = False\n , verbose = False}" , input_size = Size { num_rules = 89 , num_strict_rules
| F   |  = 53 , num_top_rules = 53 , num_weak_rules = 36 , alphabet_size = 16 ,
| F   |  total_length = 473} , self = 64 , parent = Nothing , duration = 0.904521974000
| F   |  , status = Fail , start = 2025-09-03 11:10:58.52078185 UTC , finish = 2025-09-03
| F   |  11:10:59.425303824 UTC , thread_cap_info = ("ThreadId 88", 0, False)}
| F   |  
| |   F  
| | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F    = False\n , verbose = False}" , input_size = Size { num_rules = 101 , num_strict_rules
| | F    = 65 , num_top_rules = 65 , num_weak_rules = 36 , alphabet_size = 16 ,
| | F    total_length = 566} , self = 66 , parent = Nothing , duration = 1.465904256000
| | F    , status = Fail , start = 2025-09-03 11:10:58.616986564 UTC , finish =
| | F    2025-09-03 11:11:00.08289082 UTC , thread_cap_info = ("ThreadId 97", 0,
| | F    False)}
| | F    
| | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 101 , num_strict_rules
| | | F  = 65 , num_top_rules = 65 , num_weak_rules = 36 , alphabet_size = 16 ,
| | | F  total_length = 566} , self = 65 , parent = Nothing , duration = 1.137274110000
| | | F  , status = Fail , start = 2025-09-03 11:10:58.618652537 UTC , finish =
| | | F  2025-09-03 11:10:59.755926647 UTC , thread_cap_info = ("ThreadId 98", 0,
| | | F  False)}
| | | F  
F | | |  
S | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | | |  = 89 , num_strict_rules = 53 , num_top_rules = 53 , num_weak_rules = 36
S | | |  , alphabet_size = 16 , total_length = 473} , self = 67 , parent = Nothing
S | | |  , duration = 1.271293826000 , status = Success , start = 2025-09-03 11:10:59.359882429
S | | |  UTC , finish = 2025-09-03 11:11:00.631176255 UTC , thread_cap_info = ("ThreadId
S | | |  103", 0, False)}
S | | |  
| F | |  
| E | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 89
| E | |  , num_strict_rules = 53 , num_top_rules = 53 , num_weak_rules = 36 , alphabet_size
| E | |  = 16 , total_length = 473} , self = 69 , parent = Nothing , duration =
| E | |  1.337150517000 , status = Except "AsyncCancelled" , start = 2025-09-03
| E | |  11:10:59.621518973 UTC , finish = 2025-09-03 11:11:00.95866949 UTC , thread_cap_info
| E | |  = ("ThreadId 105", 0, False)}
| E | |  
| | | F  
| | | S  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S  = 101 , num_strict_rules = 65 , num_top_rules = 65 , num_weak_rules = 36
| | | S  , alphabet_size = 16 , total_length = 566} , self = 74 , parent = Nothing
| | | S  , duration = 1.572865328000 , status = Success , start = 2025-09-03 11:10:59.83866466
| | | S  UTC , finish = 2025-09-03 11:11:01.411529988 UTC , thread_cap_info = ("ThreadId
| | | S  107", 0, False)}
| | | S  
| | F |  
| | E |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 101
| | E |  , num_strict_rules = 65 , num_top_rules = 65 , num_weak_rules = 36 , alphabet_size
| | E |  = 16 , total_length = 566} , self = 77 , parent = Nothing , duration =
| | E |  1.340151510000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | E |  11:11:00.17865547 UTC , finish = 2025-09-03 11:11:01.51880698 UTC , thread_cap_info
| | E |  = ("ThreadId 108", 0, False)}
| | E |  
S | | |  
  E | |  
F   | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 41 , num_strict_rules
F   | |  = 5 , num_top_rules = 5 , num_weak_rules = 36 , alphabet_size = 11 , total_length
F   | |  = 216} , self = 76 , parent = Nothing , duration = 0.322921856000 , status
F   | |  = Fail , start = 2025-09-03 11:11:01.178748728 UTC , finish = 2025-09-03
F   | |  11:11:01.501670584 UTC , thread_cap_info = ("ThreadId 115", 0, False)}
F   | |  
| F | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | |  = False\n , verbose = False}" , input_size = Size { num_rules = 41 , num_strict_rules
| F | |  = 5 , num_top_rules = 5 , num_weak_rules = 36 , alphabet_size = 11 , total_length
| F | |  = 216} , self = 85 , parent = Nothing , duration = 0.602326281000 , status
| F | |  = Fail , start = 2025-09-03 11:11:01.198655215 UTC , finish = 2025-09-03
| F | |  11:11:01.800981496 UTC , thread_cap_info = ("ThreadId 116", 0, False)}
| F | |  
| | | S  
F | |    
  | E    
  F      
F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F        = False\n , verbose = False}" , input_size = Size { num_rules = 38 , num_strict_rules
F        = 2 , num_top_rules = 2 , num_weak_rules = 36 , alphabet_size = 10 , total_length
F        = 190} , self = 87 , parent = Nothing , duration = 0.332678028000 , status
F        = Fail , start = 2025-09-03 11:11:01.818664433 UTC , finish = 2025-09-03
F        11:11:02.151342461 UTC , thread_cap_info = ("ThreadId 128", 0, False)}
F        
| F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F      = False\n , verbose = False}" , input_size = Size { num_rules = 38 , num_strict_rules
| F      = 2 , num_top_rules = 2 , num_weak_rules = 36 , alphabet_size = 10 , total_length
| F      = 190} , self = 88 , parent = Nothing , duration = 0.424185375000 , status
| F      = Fail , start = 2025-09-03 11:11:01.838896006 UTC , finish = 2025-09-03
| F      11:11:02.263081381 UTC , thread_cap_info = ("ThreadId 129", 0, False)}
| F      
F |      
S |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S |      = 38 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 36 ,
S |      alphabet_size = 10 , total_length = 190} , self = 89 , parent = Nothing
S |      , duration = 1.161186338000 , status = Success , start = 2025-09-03 11:11:02.15702326
S |      UTC , finish = 2025-09-03 11:11:03.318209598 UTC , thread_cap_info = ("ThreadId
S |      132", 0, False)}
S |      
| F      
| E      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 38
| E      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 36 , alphabet_size
| E      = 10 , total_length = 190} , self = 91 , parent = Nothing , duration =
| E      1.075124649000 , status = Except "AsyncCancelled" , start = 2025-09-03
| E      11:11:02.32639493 UTC , finish = 2025-09-03 11:11:03.401519579 UTC , thread_cap_info
| E      = ("ThreadId 133", 0, False)}
| E      
S |      
  E      
