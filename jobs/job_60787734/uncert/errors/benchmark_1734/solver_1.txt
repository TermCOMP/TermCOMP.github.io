last 13646 length 114540
CNF 13646 vars 114540 clauses
last 18138 length 207474
CNF 18138 vars 207474 clauses
last 10428 length 54317
CNF 10428 vars 54317 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5576, clauses: 24663
last 5576 length 24663
CNF 5576 vars 24663 clauses
last 16804 length 87387
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5576, clauses: 24663, status: Satisfied, time: 0.187213149s
CNF 16804 vars 87387 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4657, clauses: 19195
last 4657 length 19195
CNF 4657 vars 19195 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4657, clauses: 19195, status: Unsatisfied, time: 0.55335367s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15498, clauses: 65253
last 15498 length 65253
CNF 15498 vars 65253 clauses
last 15160 length 84176
CNF 15160 vars 84176 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9528, clauses: 41091
last 9528 length 41091
CNF 9528 vars 41091 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4765, clauses: 19711
last 4765 length 19711
CNF 4765 vars 19711 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4765, clauses: 19711, status: Unsatisfied, time: 0.300547425s
last 11688 length 79482
CNF 11688 vars 79482 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15510, clauses: 65337
last 15510 length 65337
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9562, clauses: 41523
last 9562 length 41523
CNF 15510 vars 65337 clauses
CNF 9562 vars 41523 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9528, clauses: 41091, status: Unsatisfied, time: 1.835586287s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9562, clauses: 41523, status: Unsatisfied, time: 0.701853856s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15498, clauses: 65253, status: Unsatisfied, time: 2.497832621s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7694, clauses: 33693
last 7694 length 33693
CNF 7694 vars 33693 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7894, clauses: 34629
last 7894 length 34629
CNF 7894 vars 34629 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7894, clauses: 34629, status: Satisfied, time: 0.777605508s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7694, clauses: 33693, status: Satisfied, time: 1.090304862s
**************************************************
summary
**************************************************
SRS with 1 rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 4 rules on 4 letters       mirror
SRS with 4 rules on 4 letters       DP
SRS with 26 strict rules and 4 weak rules on 6 letters       EDG
SRS with 12 strict rules and 4 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 8 strict rules and 4 weak rules on 6 letters       EDG
SRS with 8 strict rules and 4 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 4 strict rules and 4 weak rules on 6 letters       weights
SRS with 1 strict rules and 4 weak rules on 5 letters       EDG
SRS with 1 strict rules and 4 weak rules on 5 letters       Usable
SRS with 1 rules on 4 letters       weights
SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, a, b, b, a, b, b, a, b, a] -> [ a , b , a , b , a , b , b , a , b , b , a , b , b , a ] {- Input 0 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [ [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, a] , [a, b] ] -> [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [ [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, a] , [a, a] ] -> [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [ [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, a] , [a, b] ] -> [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [ [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, a] , [a, a] ] -> [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 1 (Input 0)) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [ [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] -> [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- Mirror (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] -> [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- Mirror (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] -> [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] {- Mirror (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] -> [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [a, a] ] {- Mirror (Semlab 1 (Concon 1 (Input 0))) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [ [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] ->= [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] ->= [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] ->= [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [ a , a ]# ] {- DP (Top 14) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [ a , a ] ] {- DP (Top 13) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 11) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 9) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 13) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 11) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 9) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [ a , a ]# ] {- DP (Top 14) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [ a , a ] ] {- DP (Top 13) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 11) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 9) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 13) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 11) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 9) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [ a , a ]# ] {- DP (Top 14) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 11) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [ a , a ]# ] {- DP (Top 14) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 9) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 11) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP (Top 9) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 13) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 11) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 9) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 13) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 11) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 9) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] ->= [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] ->= [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] ->= [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A  0A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [a, b]
  , Wk  / 0A  0A  0A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, a]
  , Wk  / 0A  0A  3A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, b]
  , Wk  / 0A  0A  3A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [a, a]#
  , Wk  / 10A 10A 10A - \
        | 10A 10A 10A - |
        | 10A 10A 10A - |
        \ -   -   -   - / )
  ( [a, b]#
  , Wk  / 7A 10A 10A - \
        | 7A 10A 10A - |
        | 7A 10A 10A - |
        \ -  -   -   - / )
   property Termination
has value Just True
for SRS
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [ a , a ]# ] {- DP (Top 14) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [ a , a ]# ] {- DP (Top 14) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 13) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 11) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 9) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 13) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 11) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 9) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] ->= [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] ->= [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] ->= [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [ a , a ]# ] {- DP (Top 14) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 13) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [ a , a ]# ] {- DP (Top 14) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 11) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 13) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 11) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, b]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 9) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 9) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] ->= [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] ->= [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] ->= [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A  0A  0A  - \
        | -4A -4A -4A -4A - |
        | -4A -4A -4A -4A - |
        | -4A -4A -4A -4A - |
        \ -   -   -   -   - / )
  ( [a, b]
  , Wk  / 0A  0A  0A 4A - \
        | -4A 0A  0A 0A - |
        | -4A -4A 0A 0A - |
        | -4A -4A 0A 0A - |
        \ -   -   -  -  - / )
  ( [b, a]
  , Wk  / 0A  0A  0A  4A - \
        | -4A 0A  0A  0A - |
        | -4A -4A 0A  0A - |
        | -4A -4A -4A 0A - |
        \ -   -   -   -  - / )
  ( [b, b]
  , Wk  / 0A  0A  0A 0A - \
        | 0A  0A  0A 0A - |
        | -4A 0A  0A 0A - |
        | -4A -4A 0A 0A - |
        \ -   -   -  -  - / )
  ( [a, a]#
  , Wk  / 1A 5A 5A 5A - \
        | 1A 5A 5A 5A - |
        | 1A 5A 5A 5A - |
        | 1A 5A 5A 5A - |
        \ -  -  -  -  - / )
  ( [a, b]#
  , Wk  / 5A 5A 9A 9A - \
        | 5A 5A 9A 9A - |
        | 5A 5A 9A 9A - |
        | 5A 5A 9A 9A - |
        \ -  -  -  -  - / )
   property Termination
has value Just True
for SRS
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [ a , a ]# ] {- DP (Top 14) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 13) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 11) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] |-> [ [a, b]# , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP (Top 9) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] ->= [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] ->= [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] ->= [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([a, a]#, 1/1)
  ([a, b]#, 0/1)
   property Termination
has value Just True
for SRS
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [ a , a ]# ] {- DP (Top 14) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] ->= [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] ->= [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] ->= [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [ a , a ]# ] {- DP (Top 14) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] ->= [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] ->= [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] ->= [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [a, a] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
reason
  remove un-usable
    SRS
      [ [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] ->= [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
      [ [a, a] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] ] ->= [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
      [ [a, b] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] ->= [ [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
      [ [a, a] , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
   property Termination
has value Just True
for SRS
  [ [a, a]# , [b, a] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [a, b] , [b, a] , [a, b] ] |-> [ [ a , a ]# ] {- DP (Top 14) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
reason
  ([a, b], 1/1)
  ([b, a], 1/1)
  ([b, b], 1/1)
  ([a, a]#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: (1,2)\TileAllAll{2}\Mirror(4,4)\Deepee(26/4,6)\EDG(12/4,6)\Matrix{\Arctic}{3}\EDG(8/4,6)\Matrix{\Arctic}{4}(4/4,6)\Weight\EDG(1/4,5)\Usable(1,4)\Weight(0,0)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.762096218000
  min duration 1.274610124000
  total durat. 3.036706342000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 104}
    , self = 49
    , parent = Nothing
    , duration = 1.274610124000
    , status = Fail
    , start = 2025-09-03 12:53:32.475152612 UTC
    , finish = 2025-09-03 12:53:33.749762736 UTC
    , thread_cap_info = ("ThreadId 71", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 218}
    , self = 80
    , parent = Nothing
    , duration = 1.762096218000
    , status = Fail
    , start = 2025-09-03 12:53:40.587692464 UTC
    , finish = 2025-09-03 12:53:42.349788682 UTC
    , thread_cap_info = ("ThreadId 125", 1, False)}
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.021518262000
  min duration 3.021518262000
  total durat. 3.021518262000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 252}
    , self = 77
    , parent = Nothing
    , duration = 3.021518262000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:53:38.048200972 UTC
    , finish = 2025-09-03 12:53:41.069719234 UTC
    , thread_cap_info = ("ThreadId 115", 1, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.823976681000
  min duration 1.823976681000
  total durat. 1.823976681000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 12
      , num_top_rules = 12
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 282}
    , self = 71
    , parent = Nothing
    , duration = 1.823976681000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:53:38.027705597 UTC
    , finish = 2025-09-03 12:53:39.851682278 UTC
    , thread_cap_info = ("ThreadId 112", 1, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 2.445918729000
  min duration 1.098103634000
  total durat. 5.444577772000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 12
      , num_top_rules = 12
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 282}
    , self = 68
    , parent = Nothing
    , duration = 1.098103634000
    , status = Fail
    , start = 2025-09-03 12:53:38.010486343 UTC
    , finish = 2025-09-03 12:53:39.108589977 UTC
    , thread_cap_info = ("ThreadId 113", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 104}
    , self = 52
    , parent = Nothing
    , duration = 1.900555409000
    , status = Fail
    , start = 2025-09-03 12:53:32.48781986 UTC
    , finish = 2025-09-03 12:53:34.388375269 UTC
    , thread_cap_info = ("ThreadId 73", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 218}
    , self = 82
    , parent = Nothing
    , duration = 2.445918729000
    , status = Fail
    , start = 2025-09-03 12:53:40.647689832 UTC
    , finish = 2025-09-03 12:53:43.093608561 UTC
    , thread_cap_info = ("ThreadId 126", 1, False)}
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.002016460000
  min duration 3.002016460000
  total durat. 3.002016460000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 252}
    , self = 76
    , parent = Nothing
    , duration = 3.002016460000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:53:38.067694768 UTC
    , finish = 2025-09-03 12:53:41.069711228 UTC
    , thread_cap_info = ("ThreadId 116", 1, False)}
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 4
  max duration 9.381779037000
  min duration 1.634988656000
  total durat. 18.060728769000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 24}
    , self = 51
    , parent = Nothing
    , duration = 1.634988656000
    , status = Fail
    , start = 2025-09-03 12:53:32.476697698 UTC
    , finish = 2025-09-03 12:53:34.111686354 UTC
    , thread_cap_info = ("ThreadId 61", 0, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 104}
    , self = 53
    , parent = Nothing
    , duration = 1.813560444000
    , status = Fail
    , start = 2025-09-03 12:53:32.747676927 UTC
    , finish = 2025-09-03 12:53:34.561237371 UTC
    , thread_cap_info = ("ThreadId 90", 3, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 104}
    , self = 54
    , parent = Nothing
    , duration = 5.230400632000
    , status = Fail
    , start = 2025-09-03 12:53:32.767846421 UTC
    , finish = 2025-09-03 12:53:37.998247053 UTC
    , thread_cap_info = ("ThreadId 92", 3, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 24}
    , self = 79
    , parent = Nothing
    , duration = 9.381779037000
    , status = Fail
    , start = 2025-09-03 12:53:32.487829513 UTC
    , finish = 2025-09-03 12:53:41.86960855 UTC
    , thread_cap_info = ("ThreadId 78", 0, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 3.229820776000
  min duration 3.229820776000
  total durat. 3.229820776000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 252}
    , self = 85
    , parent = Nothing
    , duration = 3.229820776000
    , status = Fail
    , start = 2025-09-03 12:53:41.147693086 UTC
    , finish = 2025-09-03 12:53:44.377513862 UTC
    , thread_cap_info = ("ThreadId 130", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 3.228722122000
  min duration 3.228722122000
  total durat. 3.228722122000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 218}
    , self = 89
    , parent = Nothing
    , duration = 3.228722122000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:53:42.858533409 UTC
    , finish = 2025-09-03 12:53:46.087255531 UTC
    , thread_cap_info = ("ThreadId 140", 1, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 2.280322698000
  min duration 1.155385276000
  total durat. 3.435707974000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 218}
    , self = 84
    , parent = Nothing
    , duration = 1.155385276000
    , status = Fail
    , start = 2025-09-03 12:53:43.117992849 UTC
    , finish = 2025-09-03 12:53:44.273378125 UTC
    , thread_cap_info = ("ThreadId 141", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 252}
    , self = 83
    , parent = Nothing
    , duration = 2.280322698000
    , status = Fail
    , start = 2025-09-03 12:53:41.907702422 UTC
    , finish = 2025-09-03 12:53:44.18802512 UTC
    , thread_cap_info = ("ThreadId 133", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.677874118000
  min duration 1.677874118000
  total durat. 1.677874118000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 252}
    , self = 92
    , parent = Nothing
    , duration = 1.677874118000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:53:44.470882072 UTC
    , finish = 2025-09-03 12:53:46.14875619 UTC
    , thread_cap_info = ("ThreadId 146", 1, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.724082475000
  min duration 0.500658512000
  total durat. 1.224740987000
Success : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.860703042000
  min duration 1.592819421000
  total durat. 3.453522463000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 218}
    , self = 86
    , parent = Nothing
    , duration = 1.592819421000
    , status = Success
    , start = 2025-09-03 12:53:44.327695861 UTC
    , finish = 2025-09-03 12:53:45.920515282 UTC
    , thread_cap_info = ("ThreadId 145", 1, False)}
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 252}
    , self = 88
    , parent = Nothing
    , duration = 1.860703042000
    , status = Success
    , start = 2025-09-03 12:53:44.224206044 UTC
    , finish = 2025-09-03 12:53:46.084909086 UTC
    , thread_cap_info = ("ThreadId 144", 1, False)}
Fail : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = False}"
  total number 2
  max duration 1.434834755000
  min duration 0.272547541000
  total durat. 1.707382296000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 24}
    , self = 50
    , parent = Nothing
    , duration = 1.434834755000
    , status = Fail
    , start = 2025-09-03 12:53:32.473723518 UTC
    , finish = 2025-09-03 12:53:33.908558273 UTC
    , thread_cap_info = ("ThreadId 51", 0, False)}
**************************************************
F              Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F              , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F              = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F              , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F              = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
F              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F              = 24} , self = 42 , parent = Nothing , duration = 0.272547541000 , status
F              = Fail , start = 2025-09-03 12:53:32.472759561 UTC , finish = 2025-09-03
F              12:53:32.745307102 UTC , thread_cap_info = ("ThreadId 22", 3, False)}
F              
| F            Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| F            , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| F            = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| F            , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| F            = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| F            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| F            = 24} , self = 50 , parent = Nothing , duration = 1.434834755000 , status
| F            = Fail , start = 2025-09-03 12:53:32.473723518 UTC , finish = 2025-09-03
| F            12:53:33.908558273 UTC , thread_cap_info = ("ThreadId 51", 0, False)}
| F            
| | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F          = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | F          = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | F          = 104} , self = 49 , parent = Nothing , duration = 1.274610124000 , status
| | F          = Fail , start = 2025-09-03 12:53:32.475152612 UTC , finish = 2025-09-03
| | F          12:53:33.749762736 UTC , thread_cap_info = ("ThreadId 71", 2, False)}
| | F          
| | | F        Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | F        , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | F        = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | F        False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | F        = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | F        = 0 , alphabet_size = 2 , total_length = 24} , self = 51 , parent = Nothing
| | | F        , duration = 1.634988656000 , status = Fail , start = 2025-09-03 12:53:32.476697698
| | | F        UTC , finish = 2025-09-03 12:53:34.111686354 UTC , thread_cap_info = ("ThreadId
| | | F        61", 0, False)}
| | | F        
| | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | F      = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | F      = 104} , self = 52 , parent = Nothing , duration = 1.900555409000 , status
| | | | F      = Fail , start = 2025-09-03 12:53:32.48781986 UTC , finish = 2025-09-03
| | | | F      12:53:34.388375269 UTC , thread_cap_info = ("ThreadId 73", 2, False)}
| | | | F      
| | | | | F    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | F    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | F    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | F    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | F    = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | F    = 0 , alphabet_size = 2 , total_length = 24} , self = 79 , parent = Nothing
| | | | | F    , duration = 9.381779037000 , status = Fail , start = 2025-09-03 12:53:32.487829513
| | | | | F    UTC , finish = 2025-09-03 12:53:41.86960855 UTC , thread_cap_info = ("ThreadId
| | | | | F    78", 0, False)}
| | | | | F    
F | | | | |    
F | | | | |    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
F | | | | |    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
F | | | | |    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
F | | | | |    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
F | | | | |    = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
F | | | | |    = 0 , alphabet_size = 4 , total_length = 104} , self = 53 , parent = Nothing
F | | | | |    , duration = 1.813560444000 , status = Fail , start = 2025-09-03 12:53:32.747676927
F | | | | |    UTC , finish = 2025-09-03 12:53:34.561237371 UTC , thread_cap_info = ("ThreadId
F | | | | |    90", 3, False)}
F | | | | |    
| | | | | | F  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | F  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | F  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | F  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | F  = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| | | | | | F  = 0 , alphabet_size = 4 , total_length = 104} , self = 54 , parent = Nothing
| | | | | | F  , duration = 5.230400632000 , status = Fail , start = 2025-09-03 12:53:32.767846421
| | | | | | F  UTC , finish = 2025-09-03 12:53:37.998247053 UTC , thread_cap_info = ("ThreadId
| | | | | | F  92", 3, False)}
| | | | | | F  
| | F | | | |  
| F   | | | |  
|     F | | |  
|       F | |  
F         | |  
          | F  
F         |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F         |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F         |    = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
F         |    = 12 , num_top_rules = 12 , num_weak_rules = 4 , alphabet_size = 6 , total_length
F         |    = 282} , self = 68 , parent = Nothing , duration = 1.098103634000 , status
F         |    = Fail , start = 2025-09-03 12:53:38.010486343 UTC , finish = 2025-09-03
F         |    12:53:39.108589977 UTC , thread_cap_info = ("ThreadId 113", 1, False)}
F         |    
| E       |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| E       |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E       |    = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| E       |    = 12 , num_top_rules = 12 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| E       |    = 282} , self = 71 , parent = Nothing , duration = 1.823976681000 , status
| E       |    = Except "AsyncCancelled" , start = 2025-09-03 12:53:38.027705597 UTC ,
| E       |    finish = 2025-09-03 12:53:39.851682278 UTC , thread_cap_info = ("ThreadId
| E       |    112", 1, False)}
| E       |    
| | E     |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | E     |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E     |    = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | E     |    = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | E     |    = 252} , self = 77 , parent = Nothing , duration = 3.021518262000 , status
| | E     |    = Except "<<timeout>>" , start = 2025-09-03 12:53:38.048200972 UTC , finish
| | E     |    = 2025-09-03 12:53:41.069719234 UTC , thread_cap_info = ("ThreadId 115",
| | E     |    1, False)}
| | E     |    
| | | E   |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | E   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E   |    = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | E   |    = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | E   |    = 252} , self = 76 , parent = Nothing , duration = 3.002016460000 , status
| | | E   |    = Except "<<timeout>>" , start = 2025-09-03 12:53:38.067694768 UTC , finish
| | | E   |    = 2025-09-03 12:53:41.069711228 UTC , thread_cap_info = ("ThreadId 116",
| | | E   |    1, False)}
| | | E   |    
F | | |   |    
S | | |   |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | | |   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | | |   |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | | |   |    = 16 , num_strict_rules = 12 , num_top_rules = 12 , num_weak_rules = 4
S | | |   |    , alphabet_size = 6 , total_length = 282} , self = 69 , parent = Nothing
S | | |   |    , duration = 0.447855646000 , status = Success , start = 2025-09-03 12:53:39.207713445
S | | |   |    UTC , finish = 2025-09-03 12:53:39.655569091 UTC , thread_cap_info = ("ThreadId
S | | |   |    118", 1, False)}
S | | |   |    
S | | |   |    
  E | |   |    
F   | |   |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F   | |   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F   | |   |    = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
F   | |   |    = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size = 6 , total_length
F   | |   |    = 218} , self = 80 , parent = Nothing , duration = 1.762096218000 , status
F   | |   |    = Fail , start = 2025-09-03 12:53:40.587692464 UTC , finish = 2025-09-03
F   | |   |    12:53:42.349788682 UTC , thread_cap_info = ("ThreadId 125", 1, False)}
F   | |   |    
| F | |   |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F | |   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | |   |    = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| F | |   |    = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| F | |   |    = 218} , self = 82 , parent = Nothing , duration = 2.445918729000 , status
| F | |   |    = Fail , start = 2025-09-03 12:53:40.647689832 UTC , finish = 2025-09-03
| F | |   |    12:53:43.093608561 UTC , thread_cap_info = ("ThreadId 126", 1, False)}
| F | |   |    
| | | E   |    
| | E     |    
| | F     |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F     |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F     |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F     |    = 12 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 4 ,
| | F     |    alphabet_size = 6 , total_length = 252} , self = 78 , parent = Nothing
| | F     |    , duration = 0.724082475000 , status = Fail , start = 2025-09-03 12:53:41.127700771
| | F     |    UTC , finish = 2025-09-03 12:53:41.851783246 UTC , thread_cap_info = ("ThreadId
| | F     |    129", 1, False)}
| | F     |    
| | | F   |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | F   |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | F   |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | F   |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F   |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F   |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | F   |    , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size
| | | F   |    = 6 , total_length = 252} , self = 85 , parent = Nothing , duration = 3.229820776000
| | | F   |    , status = Fail , start = 2025-09-03 12:53:41.147693086 UTC , finish =
| | | F   |    2025-09-03 12:53:44.377513862 UTC , thread_cap_info = ("ThreadId 130",
| | | F   |    1, False)}
| | | F   |    
| | F |   |    
| |   |   F    
| | F |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | F |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | F |        , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size
| | F |        = 6 , total_length = 252} , self = 83 , parent = Nothing , duration = 2.280322698000
| | F |        , status = Fail , start = 2025-09-03 12:53:41.907702422 UTC , finish =
| | F |        2025-09-03 12:53:44.18802512 UTC , thread_cap_info = ("ThreadId 133", 1,
| | F |        False)}
| | F |        
F | | |        
F | | |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | |        = 12 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 4 ,
F | | |        alphabet_size = 6 , total_length = 218} , self = 81 , parent = Nothing
F | | |        , duration = 0.500658512000 , status = Fail , start = 2025-09-03 12:53:42.357471168
F | | |        UTC , finish = 2025-09-03 12:53:42.85812968 UTC , thread_cap_info = ("ThreadId
F | | |        137", 1, False)}
F | | |        
F | | |        
E | | |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E | | |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
E | | |        , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size
E | | |        = 6 , total_length = 218} , self = 89 , parent = Nothing , duration = 3.228722122000
E | | |        , status = Except "AsyncCancelled" , start = 2025-09-03 12:53:42.858533409
E | | |        UTC , finish = 2025-09-03 12:53:46.087255531 UTC , thread_cap_info = ("ThreadId
E | | |        140", 1, False)}
E | | |        
| F | |        
| F | |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| F | |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| F | |        , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size
| F | |        = 6 , total_length = 218} , self = 84 , parent = Nothing , duration = 1.155385276000
| F | |        , status = Fail , start = 2025-09-03 12:53:43.117992849 UTC , finish =
| F | |        2025-09-03 12:53:44.273378125 UTC , thread_cap_info = ("ThreadId 141",
| F | |        1, False)}
| F | |        
| | F |        
| | S |        Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | S |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S |        = 12 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 4 ,
| | S |        alphabet_size = 6 , total_length = 252} , self = 88 , parent = Nothing
| | S |        , duration = 1.860703042000 , status = Success , start = 2025-09-03 12:53:44.224206044
| | S |        UTC , finish = 2025-09-03 12:53:46.084909086 UTC , thread_cap_info = ("ThreadId
| | S |        144", 1, False)}
| | S |        
| F | |        
| S | |        Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| S | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | |        = 12 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 4 ,
| S | |        alphabet_size = 6 , total_length = 218} , self = 86 , parent = Nothing
| S | |        , duration = 1.592819421000 , status = Success , start = 2025-09-03 12:53:44.327695861
| S | |        UTC , finish = 2025-09-03 12:53:45.920515282 UTC , thread_cap_info = ("ThreadId
| S | |        145", 1, False)}
| S | |        
| | | F        
| | | E        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | E        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | E        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | E        , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | E        , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size
| | | E        = 6 , total_length = 252} , self = 92 , parent = Nothing , duration = 1.677874118000
| | | E        , status = Except "AsyncCancelled" , start = 2025-09-03 12:53:44.470882072
| | | E        UTC , finish = 2025-09-03 12:53:46.14875619 UTC , thread_cap_info = ("ThreadId
| | | E        146", 1, False)}
| | | E        
| S | |        
|   S |        
E     |        
      E        
