last 964 length 4134
last 933 length 4017
CNF 964 vars 4134 clauses
CNF 933 vars 4017 clauses
last 944 length 4127
CNF 944 vars 4127 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1798, clauses: 6604
last 1798 length 6604
last 979 length 4167
CNF 1798 vars 6604 clauses
CNF 979 vars 4167 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1798, clauses: 6613
last 2760 length 12128
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6769, clauses: 28369
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1798, clauses: 6604, status: Unsatisfied, time: 0.105616095s
last 3874 length 16726
last 1798 length 6613
CNF 2760 vars 12128 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6769, clauses: 28409
last 6769 length 28369
last 4440 length 19021
last 4042 length 17949
last 4752 length 20951
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4078, clauses: 16890
CNF 3874 vars 16726 clauses
last 4071 length 18214
CNF 1798 vars 6613 clauses
last 6769 length 28409
CNF 6769 vars 28369 clauses
CNF 4440 vars 19021 clauses
last 4078 length 16890
CNF 4042 vars 17949 clauses
CNF 4752 vars 20951 clauses
CNF 4071 vars 18214 clauses
CNF 6769 vars 28409 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1798, clauses: 6613, status: Satisfied, time: 0.23914101s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6769, clauses: 28369, status: Satisfied, time: 0.212766353s
CNF 4078 vars 16890 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5496, clauses: 21062
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5454, clauses: 20552
last 5496 length 21062
last 5454 length 20552
last 957 length 4136
last 934 length 4000
**************************************************CNF 5496 vars 21062 clauses
CNF 5454 vars 20552 clauses

CNF 957 vars 4136 clauses
CNF 934 vars 4000 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 22257, clauses: 94193
summary
last 22257 length 94193
**************************************************
SRS with 3 rules on 2 letters       mirror
SRS with 3 rules on 2 letters       DP
SRS with 10 strict rules and 3 weak rules on 4 letters       weights
SRS with 1 strict rules and 3 weak rules on 3 letters       EDG
SRS with 1 strict rules and 3 weak rules on 3 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 3 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, b, a, b] -> [b, a, a, b] {- Input 0 -}
  [a, a, a, a] -> [b, b, a, b] {- Input 1 -}
  [a, b, a, a] -> [a, a, a, b] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [b, a, b, b] -> [b, a, a, b] {- Mirror (Input 0) -}
  [a, a, a, a] -> [b, a, b, b] {- Mirror (Input 1) -}
  [a, a, b, a] -> [b, a, a, a] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [b, a, b, b] ->= [b, a, a, b] {- DP Nontop (Mirror (Input 0)) -}
  [a, a, a, a] ->= [b, a, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [a, a, b, a] ->= [b, a, a, a] {- DP Nontop (Mirror (Input 2)) -}
  [a#, a, a, a] |-> [a#, b, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [a#, a, a, a] |-> [b#] {- DP (Top 3) (Mirror (Input 1)) -}
  [a#, a, a, a] |-> [b#, a, b, b] {- DP (Top 0) (Mirror (Input 1)) -}
  [a#, a, a, a] |-> [b#, b] {- DP (Top 2) (Mirror (Input 1)) -}
  [a#, a, b, a] |-> [a#, a] {- DP (Top 2) (Mirror (Input 2)) -}
  [a#, a, b, a] |-> [a#, a, a] {- DP (Top 1) (Mirror (Input 2)) -}
  [a#, a, b, a] |-> [b#, a, a, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, a, b, b] |-> [a#, a, b] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, a, b, b] |-> [a#, b] {- DP (Top 2) (Mirror (Input 0)) -}
  [b#, a, b, b] |-> [b#, a, a, b] {- DP (Top 0) (Mirror (Input 0)) -}
reason
  (a, 2/1)
  (b, 2/1)
  (a#, 2/1)
  (b#, 1/1)
   property Termination
has value Just True
for SRS
  [b, a, b, b] ->= [b, a, a, b] {- DP Nontop (Mirror (Input 0)) -}
  [a, a, a, a] ->= [b, a, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [a, a, b, a] ->= [b, a, a, a] {- DP Nontop (Mirror (Input 2)) -}
  [b#, a, b, b] |-> [b#, a, a, b] {- DP (Top 0) (Mirror (Input 0)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, a, b, b] |-> [b#, a, a, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [b, a, b, b] ->= [b, a, a, b] {- DP Nontop (Mirror (Input 0)) -}
  [a, a, a, a] ->= [b, a, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [a, a, b, a] ->= [b, a, a, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / -   2A  0A  \
        | -1A -1A -2A |
        \ -   -   0A  / )
  ( b
  , Wk  / - - 1A  \
        | - - -2A |
        \ - - 0A  / )
  ( b#
  , Wk  / - 1A 0A \
        | - -  -  |
        \ - -  0A / )
   property Termination
has value Just True
for SRS
  [b, a, b, b] ->= [b, a, a, b] {- DP Nontop (Mirror (Input 0)) -}
  [a, a, a, a] ->= [b, a, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [a, a, b, a] ->= [b, a, a, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG

**************************************************
skeleton: \Mirror(3,2)\Deepee(10/3,4)\Weight\EDG(1/3,3)\Matrix{\ArcticBZ}{3}(0/3,2)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.463407666000
  min duration 0.030393342000
  total durat. 1.137980967000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.438635992000
  min duration 0.054177278000
  total durat. 1.311848425000
**************************************************
F                    Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                    , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                    = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                    , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                    = False}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F                    = 24} , self = 55 , parent = Nothing , duration = 0.134067300000 , status
F                    = Fail , start = 2025-09-03 12:09:22.912307325 UTC , finish = 2025-09-03
F                    12:09:23.046374625 UTC , thread_cap_info = ("ThreadId 22", 3, False)}
F                    
| F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                  = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| F                  = 12 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| F                  = 120} , self = 81 , parent = Nothing , duration = 0.463407666000 , status
| F                  = Fail , start = 2025-09-03 12:09:23.0035419 UTC , finish = 2025-09-03
| F                  12:09:23.466949566 UTC , thread_cap_info = ("ThreadId 81", 2, False)}
| F                  
| | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | F                = 12 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | F                = 120} , self = 80 , parent = Nothing , duration = 0.438635992000 , status
| | F                = Fail , start = 2025-09-03 12:09:23.003549594 UTC , finish = 2025-09-03
| | F                12:09:23.442185586 UTC , thread_cap_info = ("ThreadId 83", 2, False)}
| | F                
| | | F              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | F              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | F              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | F              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | F              = Size { num_rules = 12 , num_strict_rules = 12 , num_top_rules = 0 , num_weak_rules
| | | F              = 0 , alphabet_size = 4 , total_length = 120} , self = 62 , parent = Nothing
| | | F              , duration = 0.198935148000 , status = Fail , start = 2025-09-03 12:09:23.024084951
| | | F              UTC , finish = 2025-09-03 12:09:23.223020099 UTC , thread_cap_info = ("ThreadId
| | | F              92", 3, False)}
| | | F              
| | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | F            = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size = 3 , total_length
| | | | F            = 32} , self = 69 , parent = Nothing , duration = 0.196674811000 , status
| | | | F            = Fail , start = 2025-09-03 12:09:23.028166148 UTC , finish = 2025-09-03
| | | | F            12:09:23.224840959 UTC , thread_cap_info = ("ThreadId 94", 1, False)}
| | | | F            
| | | | | F          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F          = 4 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | | | | F          = 3 , total_length = 32} , self = 79 , parent = Nothing , duration = 0.305586310000
| | | | | F          , status = Fail , start = 2025-09-03 12:09:23.028192421 UTC , finish =
| | | | | F          2025-09-03 12:09:23.333778731 UTC , thread_cap_info = ("ThreadId 96", 1,
| | | | | F          False)}
| | | | | F          
| | | | | | S        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | S        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | S        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | S        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | S        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | S        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | | S        , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | | | | | S        = 3 , total_length = 32} , self = 89 , parent = Nothing , duration = 0.680298721000
| | | | | | S        , status = Success , start = 2025-09-03 12:09:23.043583093 UTC , finish
| | | | | | S        = 2025-09-03 12:09:23.723881814 UTC , thread_cap_info = ("ThreadId 97",
| | | | | | S        1, False)}
| | | | | | S        
F | | | | | |        
S | | | | | |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | | | | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | | | | | |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | | | | | |        = 4 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
S | | | | | |        = 3 , total_length = 32} , self = 86 , parent = Nothing , duration = 0.619126188000
S | | | | | |        , status = Success , start = 2025-09-03 12:09:23.054583385 UTC , finish
S | | | | | |        = 2025-09-03 12:09:23.673709573 UTC , thread_cap_info = ("ThreadId 99",
S | | | | | |        1, False)}
S | | | | | |        
| | | F | | |        
| | |   F | |        
| | | F   | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F   | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F   | |        = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | F   | |        = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | | F   | |        = 140} , self = 84 , parent = Nothing , duration = 0.388649158000 , status
| | | F   | |        = Fail , start = 2025-09-03 12:09:23.230440281 UTC , finish = 2025-09-03
| | | F   | |        12:09:23.619089439 UTC , thread_cap_info = ("ThreadId 117", 3, False)}
| | | F   | |        
| | | | E | |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E | |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | E | |        , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | | | E | |        = 3 , total_length = 32} , self = 88 , parent = Nothing , duration = 0.472939180000
| | | | E | |        , status = Except "AsyncCancelled" , start = 2025-09-03 12:09:23.232487217
| | | | E | |        UTC , finish = 2025-09-03 12:09:23.705426397 UTC , thread_cap_info = ("ThreadId
| | | | E | |        119", 1, False)}
| | | | E | |        
| | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | | | F      = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | | | | | | F      = 140} , self = 83 , parent = Nothing , duration = 0.289587435000 , status
| | | | | | | F      = Fail , start = 2025-09-03 12:09:23.243544009 UTC , finish = 2025-09-03
| | | | | | | F      12:09:23.533131444 UTC , thread_cap_info = ("ThreadId 118", 3, False)}
| | | | | | | F      
| | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | | | | F    = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | | | | | | | F    = 140} , self = 82 , parent = Nothing , duration = 0.212089043000 , status
| | | | | | | | F    = Fail , start = 2025-09-03 12:09:23.283552079 UTC , finish = 2025-09-03
| | | | | | | | F    12:09:23.495641122 UTC , thread_cap_info = ("ThreadId 120", 3, False)}
| | | | | | | | F    
| | | | | F | | |    
| | | | | F | | |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | F | | |    = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | | | | F | | |    = 140} , self = 85 , parent = Nothing , duration = 0.332772909000 , status
| | | | | F | | |    = Fail , start = 2025-09-03 12:09:23.33379043 UTC , finish = 2025-09-03
| | | | | F | | |    12:09:23.666563339 UTC , thread_cap_info = ("ThreadId 121", 3, False)}
| | | | | F | | |    
| | | | | | | | | E  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | | | | | E  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | | | E  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | | | E  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | E  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | E  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | | | | | E  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | | | | | | | | E  = 3 , total_length = 32} , self = 93 , parent = Nothing , duration = 0.402228797000
| | | | | | | | | E  , status = Except "AsyncCancelled" , start = 2025-09-03 12:09:23.363571097
| | | | | | | | | E  UTC , finish = 2025-09-03 12:09:23.765799894 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | E  123", 1, False)}
| | | | | | | | | E  
| | F | | | | | | |  
| F   | | | | | | |  
|     | | | | | F |  
|     | | | | F   |  
|     F | | |     |  
|       | F |     |  
S       |   |     |  
        E   |     |  
            S     |  
                  E  
