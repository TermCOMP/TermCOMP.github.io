last 13058 length 94017
CNF 13058 vars 94017 clauses
last 15548 length 152136
CNF 15548 vars 152136 clauses
**************************************************
summary
**************************************************
SRS with 1 rules on 2 letters       Drop
SRS with 1 rules on 2 letters       Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 44 states

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, a, a, b, b, a, a, b, a, a, b] -> [ a , a , b , b , a , a , b , a , a , b , b , a , a , b ] {- Input 0 -}
reason
  Drop
    property Termination
    has value Just True
    for SRS
      [b, a, a, b, b, a, a] -> [ a , a , b , b , a , a , b , a , a , b ] {- Dropped 0 4 (Input 0) -}
    reason
      Matchbound
        Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 44 states

   property Termination
has value Just True
for SRS
  [b, a, a, b, b, a, a] -> [ a , a , b , b , a , a , b , a , a , b ] {- Dropped 0 4 (Input 0) -}
reason
  Matchbound
    Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 44 states

**************************************************
skeleton: \Drop{0}{4}(1,2)\Rfcmatchbound{1}[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 2.136754197000
  min duration 2.136754197000
  total durat. 2.136754197000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 108}
    , self = 90
    , parent = Nothing
    , duration = 2.136754197000
    , status = Fail
    , start = 2025-09-03 13:09:42.092118139 UTC
    , finish = 2025-09-03 13:09:44.228872336 UTC
    , thread_cap_info = ("ThreadId 86", 2, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.172766595000
  min duration 3.172766595000
  total durat. 3.172766595000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 108}
    , self = 94
    , parent = Nothing
    , duration = 3.172766595000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:09:42.092123817 UTC
    , finish = 2025-09-03 13:09:45.264890412 UTC
    , thread_cap_info = ("ThreadId 88", 2, False)}
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 10
  max duration 2.643115940000
  min duration 0.176578877000
  total durat. 8.194610008000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 25}
    , self = 88
    , parent = Nothing
    , duration = 1.109046305000
    , status = Fail
    , start = 2025-09-03 13:09:43.007738999 UTC
    , finish = 2025-09-03 13:09:44.116785304 UTC
    , thread_cap_info = ("ThreadId 156", 3, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 97
    , parent = Nothing
    , duration = 2.643115940000
    , status = Fail
    , start = 2025-09-03 13:09:42.7068724 UTC
    , finish = 2025-09-03 13:09:45.34998834 UTC
    , thread_cap_info = ("ThreadId 133", 3, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 4
  max duration 3.179260189000
  min duration 1.279639999000
  total durat. 10.178858376000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 17}
    , self = 95
    , parent = Nothing
    , duration = 1.279639999000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:09:44.026540848 UTC
    , finish = 2025-09-03 13:09:45.306180847 UTC
    , thread_cap_info = ("ThreadId 187", 3, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 101
    , parent = Nothing
    , duration = 2.740009302000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:09:42.926172005 UTC
    , finish = 2025-09-03 13:09:45.666181307 UTC
    , thread_cap_info = ("ThreadId 148", 3, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 99
    , parent = Nothing
    , duration = 2.979948886000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:09:42.646239569 UTC
    , finish = 2025-09-03 13:09:45.626188455 UTC
    , thread_cap_info = ("ThreadId 132", 3, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 23}
    , self = 96
    , parent = Nothing
    , duration = 3.179260189000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:09:42.1469195 UTC
    , finish = 2025-09-03 13:09:45.326179689 UTC
    , thread_cap_info = ("ThreadId 91", 3, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 5
  max duration 2.628837524000
  min duration 1.399791523000
  total durat. 11.388614826000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 17}
    , self = 91
    , parent = Nothing
    , duration = 1.399791523000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:09:43.406523546 UTC
    , finish = 2025-09-03 13:09:44.806315069 UTC
    , thread_cap_info = ("ThreadId 179", 3, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 25}
    , self = 102
    , parent = Nothing
    , duration = 2.260013558000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:09:43.44618338 UTC
    , finish = 2025-09-03 13:09:45.706196938 UTC
    , thread_cap_info = ("ThreadId 183", 3, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 98
    , parent = Nothing
    , duration = 2.479965289000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:09:42.906212846 UTC
    , finish = 2025-09-03 13:09:45.386178135 UTC
    , thread_cap_info = ("ThreadId 147", 3, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 93
    , parent = Nothing
    , duration = 2.620006932000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:09:42.626175933 UTC
    , finish = 2025-09-03 13:09:45.246182865 UTC
    , thread_cap_info = ("ThreadId 131", 3, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 23}
    , self = 92
    , parent = Nothing
    , duration = 2.628837524000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:09:42.237334875 UTC
    , finish = 2025-09-03 13:09:44.866172399 UTC
    , thread_cap_info = ("ThreadId 103", 3, False)}
Fail : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = False}"
  total number 4
  max duration 1.601608985000
  min duration 0.575283814000
  total durat. 4.392301728000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 23}
    , self = 84
    , parent = Nothing
    , duration = 1.540048146000
    , status = Fail
    , start = 2025-09-03 13:09:42.085966071 UTC
    , finish = 2025-09-03 13:09:43.626014217 UTC
    , thread_cap_info = ("ThreadId 49", 3, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 86
    , parent = Nothing
    , duration = 1.601608985000
    , status = Fail
    , start = 2025-09-03 13:09:42.326179883 UTC
    , finish = 2025-09-03 13:09:43.927788868 UTC
    , thread_cap_info = ("ThreadId 110", 3, False)}
Except "AsyncCancelled" : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = False}"
  total number 2
  max duration 2.858893370000
  min duration 1.476508379000
  total durat. 4.335401749000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 17}
    , self = 89
    , parent = Nothing
    , duration = 1.476508379000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:09:42.750576257 UTC
    , finish = 2025-09-03 13:09:44.227084636 UTC
    , thread_cap_info = ("ThreadId 135", 3, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 25}
    , self = 100
    , parent = Nothing
    , duration = 2.858893370000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:09:42.767306156 UTC
    , finish = 2025-09-03 13:09:45.626199526 UTC
    , thread_cap_info = ("ThreadId 139", 3, False)}
**************************************************
F                                    Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                                    , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                                    = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                                    , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                                    = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
F                                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F                                    = 25} , self = 54 , parent = Nothing , duration = 0.575283814000 , status
F                                    = Fail , start = 2025-09-03 13:09:42.085183633 UTC , finish = 2025-09-03
F                                    13:09:42.660467447 UTC , thread_cap_info = ("ThreadId 25", 0, False)}
F                                    
| F                                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| F                                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| F                                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| F                                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| F                                  = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| F                                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| F                                  = 23} , self = 84 , parent = Nothing , duration = 1.540048146000 , status
| F                                  = Fail , start = 2025-09-03 13:09:42.085966071 UTC , finish = 2025-09-03
| F                                  13:09:43.626014217 UTC , thread_cap_info = ("ThreadId 49", 3, False)}
| F                                  
| | F                                Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | F                                , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | F                                = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | F                                False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | F                                = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| | F                                = 0 , alphabet_size = 4 , total_length = 108} , self = 58 , parent = Nothing
| | F                                , duration = 0.753199465000 , status = Fail , start = 2025-09-03 13:09:42.08620455
| | F                                UTC , finish = 2025-09-03 13:09:42.839404015 UTC , thread_cap_info = ("ThreadId
| | F                                66", 1, False)}
| | F                                
| | | F                              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                              = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | F                              = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | F                              = 108} , self = 90 , parent = Nothing , duration = 2.136754197000 , status
| | | F                              = Fail , start = 2025-09-03 13:09:42.092118139 UTC , finish = 2025-09-03
| | | F                              13:09:44.228872336 UTC , thread_cap_info = ("ThreadId 86", 2, False)}
| | | F                              
| | | | E                            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | E                            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | E                            = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | E                            = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | E                            = 108} , self = 94 , parent = Nothing , duration = 3.172766595000 , status
| | | | E                            = Except "AsyncCancelled" , start = 2025-09-03 13:09:42.092123817 UTC ,
| | | | E                            finish = 2025-09-03 13:09:45.264890412 UTC , thread_cap_info = ("ThreadId
| | | | E                            88", 2, False)}
| | | | E                            
| | | | | F                          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | F                          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | F                          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | F                          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | F                          = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| | | | | F                          = 0 , alphabet_size = 4 , total_length = 108} , self = 55 , parent = Nothing
| | | | | F                          , duration = 0.555837433000 , status = Fail , start = 2025-09-03 13:09:42.108161662
| | | | | F                          UTC , finish = 2025-09-03 13:09:42.663999095 UTC , thread_cap_info = ("ThreadId
| | | | | F                          68", 1, False)}
| | | | | F                          
| | | | | | F                        Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | F                        , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | F                        = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | F                        False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | F                        = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | F                        = 0 , alphabet_size = 2 , total_length = 23} , self = 45 , parent = Nothing
| | | | | | F                        , duration = 0.176578877000 , status = Fail , start = 2025-09-03 13:09:42.108221274
| | | | | | F                        UTC , finish = 2025-09-03 13:09:42.284800151 UTC , thread_cap_info = ("ThreadId
| | | | | | F                        76", 3, False)}
| | | | | | F                        
| | | | | | | F                      Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | F                      , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | F                      = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | F                      False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | F                      = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | F                      = 0 , alphabet_size = 2 , total_length = 23} , self = 78 , parent = Nothing
| | | | | | | F                      , duration = 0.986161740000 , status = Fail , start = 2025-09-03 13:09:42.108224776
| | | | | | | F                      UTC , finish = 2025-09-03 13:09:43.094386516 UTC , thread_cap_info = ("ThreadId
| | | | | | | F                      78", 3, False)}
| | | | | | | F                      
| | | | | | | | E                    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | E                    , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | E                    = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | E                    , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | E                    max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | E                    [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | E                    string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | E                    , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | E                    = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | E                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | E                    = 23} , self = 96 , parent = Nothing , duration = 3.179260189000 , status
| | | | | | | | E                    = Except "AsyncCancelled" , start = 2025-09-03 13:09:42.1469195 UTC , finish
| | | | | | | | E                    = 2025-09-03 13:09:45.326179689 UTC , thread_cap_info = ("ThreadId 91",
| | | | | | | | E                    3, False)}
| | | | | | | | E                    
| | | | | | | | | F                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | | F                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | | F                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | | F                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | | F                  = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | F                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | F                  = 21} , self = 71 , parent = Nothing , duration = 0.675360783000 , status
| | | | | | | | | F                  = Fail , start = 2025-09-03 13:09:42.18812888 UTC , finish = 2025-09-03
| | | | | | | | | F                  13:09:42.863489663 UTC , thread_cap_info = ("ThreadId 94", 3, False)}
| | | | | | | | | F                  
| | | | | | | | | | E                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | E                , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | E                = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | E                , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | E                max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | E                [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | E                string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | E                , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | E                = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | E                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | E                = 23} , self = 92 , parent = Nothing , duration = 2.628837524000 , status
| | | | | | | | | | E                = Except "AsyncCancelled" , start = 2025-09-03 13:09:42.237334875 UTC ,
| | | | | | | | | | E                finish = 2025-09-03 13:09:44.866172399 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | E                103", 3, False)}
| | | | | | | | | | E                
| | | | | | F | | | |                
| | | | | | F | | | |                Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | F | | | |                , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | F | | | |                = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | F | | | |                False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | F | | | |                = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | F | | | |                = 0 , alphabet_size = 2 , total_length = 21} , self = 56 , parent = Nothing
| | | | | | F | | | |                , duration = 0.373028305000 , status = Fail , start = 2025-09-03 13:09:42.311394504
| | | | | | F | | | |                UTC , finish = 2025-09-03 13:09:42.684422809 UTC , thread_cap_info = ("ThreadId
| | | | | | F | | | |                107", 3, False)}
| | | | | | F | | | |                
| | | | | | | | | | | F              Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | | | | F              , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | | | | F              = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | | | | F              , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | | | | F              = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | F              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | F              = 19} , self = 86 , parent = Nothing , duration = 1.601608985000 , status
| | | | | | | | | | | F              = Fail , start = 2025-09-03 13:09:42.326179883 UTC , finish = 2025-09-03
| | | | | | | | | | | F              13:09:43.927788868 UTC , thread_cap_info = ("ThreadId 110", 3, False)}
| | | | | | | | | | | F              
| | | | | | | | | | | | F            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | F            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | F            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | F            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | F            = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | F            = 0 , alphabet_size = 2 , total_length = 21} , self = 73 , parent = Nothing
| | | | | | | | | | | | F            , duration = 0.453733481000 , status = Fail , start = 2025-09-03 13:09:42.447195496
| | | | | | | | | | | | F            UTC , finish = 2025-09-03 13:09:42.900928977 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | F            120", 3, False)}
| | | | | | | | | | | | F            
| | | | | | | | | | | | | F          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | F          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | F          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | F          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | F          = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | F          = 0 , alphabet_size = 2 , total_length = 19} , self = 74 , parent = Nothing
| | | | | | | | | | | | | F          , duration = 0.478395804000 , status = Fail , start = 2025-09-03 13:09:42.486853877
| | | | | | | | | | | | | F          UTC , finish = 2025-09-03 13:09:42.965249681 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | F          125", 3, False)}
| | | | | | | | | | | | | F          
| | | | | | | | | | | | | | E        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | E        , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | E        = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | E        , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | E        max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | E        [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | E        string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | E        , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | E        = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | E        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | E        = 21} , self = 93 , parent = Nothing , duration = 2.620006932000 , status
| | | | | | | | | | | | | | E        = Except "AsyncCancelled" , start = 2025-09-03 13:09:42.626175933 UTC ,
| | | | | | | | | | | | | | E        finish = 2025-09-03 13:09:45.246182865 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | E        131", 3, False)}
| | | | | | | | | | | | | | E        
| | | | | | | | | | | | | | | E      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | E      , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | E      = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | E      , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | E      max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | E      [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | E      string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | E      , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | E      = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | E      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | E      = 21} , self = 99 , parent = Nothing , duration = 2.979948886000 , status
| | | | | | | | | | | | | | | E      = Except "AsyncCancelled" , start = 2025-09-03 13:09:42.646239569 UTC ,
| | | | | | | | | | | | | | | E      finish = 2025-09-03 13:09:45.626188455 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | E      132", 3, False)}
| | | | | | | | | | | | | | | E      
F | | | | | | | | | | | | | | |      
  | | | | F | | | | | | | | | |      
  | | | |   F | | | | | | | | |      
F | | | |     | | | | | | | | |      Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
F | | | |     | | | | | | | | |      , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
F | | | |     | | | | | | | | |      = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
F | | | |     | | | | | | | | |      False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
F | | | |     | | | | | | | | |      = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
F | | | |     | | | | | | | | |      = 0 , alphabet_size = 2 , total_length = 19} , self = 97 , parent = Nothing
F | | | |     | | | | | | | | |      , duration = 2.643115940000 , status = Fail , start = 2025-09-03 13:09:42.7068724
F | | | |     | | | | | | | | |      UTC , finish = 2025-09-03 13:09:45.34998834 UTC , thread_cap_info = ("ThreadId
F | | | |     | | | | | | | | |      133", 3, False)}
F | | | |     | | | | | | | | |      
| | | | | E   | | | | | | | | |      Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | E   | | | | | | | | |      , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | E   | | | | | | | | |      = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | E   | | | | | | | | |      , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | E   | | | | | | | | |      = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | E   | | | | | | | | |      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | E   | | | | | | | | |      = 17} , self = 89 , parent = Nothing , duration = 1.476508379000 , status
| | | | | E   | | | | | | | | |      = Except "AsyncCancelled" , start = 2025-09-03 13:09:42.750576257 UTC ,
| | | | | E   | | | | | | | | |      finish = 2025-09-03 13:09:44.227084636 UTC , thread_cap_info = ("ThreadId
| | | | | E   | | | | | | | | |      135", 3, False)}
| | | | | E   | | | | | | | | |      
| | | | | | E | | | | | | | | |      Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | E | | | | | | | | |      , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | E | | | | | | | | |      = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | E | | | | | | | | |      , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | E | | | | | | | | |      = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | E | | | | | | | | |      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | E | | | | | | | | |      = 25} , self = 100 , parent = Nothing , duration = 2.858893370000 , status
| | | | | | E | | | | | | | | |      = Except "AsyncCancelled" , start = 2025-09-03 13:09:42.767306156 UTC ,
| | | | | | E | | | | | | | | |      finish = 2025-09-03 13:09:45.626199526 UTC , thread_cap_info = ("ThreadId
| | | | | | E | | | | | | | | |      139", 3, False)}
| | | | | | E | | | | | | | | |      
| | F | | | | | | | | | | | | |      
| |   | | | | | | F | | | | | |      
| |   | | | | | |   | | F | | |      
| | E | | | | | |   | |   | | |      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | E | | | | | |   | |   | | |      , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | E | | | | | |   | |   | | |      = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | E | | | | | |   | |   | | |      , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | E | | | | | |   | |   | | |      max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | E | | | | | |   | |   | | |      [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | E | | | | | |   | |   | | |      string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | E | | | | | |   | |   | | |      , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | E | | | | | |   | |   | | |      = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | E | | | | | |   | |   | | |      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | E | | | | | |   | |   | | |      = 19} , self = 98 , parent = Nothing , duration = 2.479965289000 , status
| | E | | | | | |   | |   | | |      = Except "AsyncCancelled" , start = 2025-09-03 13:09:42.906212846 UTC ,
| | E | | | | | |   | |   | | |      finish = 2025-09-03 13:09:45.386178135 UTC , thread_cap_info = ("ThreadId
| | E | | | | | |   | |   | | |      147", 3, False)}
| | E | | | | | |   | |   | | |      
| | | | | | | | | E | |   | | |      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | E | |   | | |      , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | E | |   | | |      = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | E | |   | | |      , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | E | |   | | |      max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | E | |   | | |      [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | E | |   | | |      string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | E | |   | | |      , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | E | |   | | |      = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | E | |   | | |      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | E | |   | | |      = 19} , self = 101 , parent = Nothing , duration = 2.740009302000 , status
| | | | | | | | | E | |   | | |      = Except "AsyncCancelled" , start = 2025-09-03 13:09:42.926172005 UTC ,
| | | | | | | | | E | |   | | |      finish = 2025-09-03 13:09:45.666181307 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | E | |   | | |      148", 3, False)}
| | | | | | | | | E | |   | | |      
| | | | | | | | | | | |   F | |      
| | | | | | | | | | | | F   | |      Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | F   | |      , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | F   | |      = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | F   | |      False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | F   | |      = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | F   | |      = 0 , alphabet_size = 2 , total_length = 25} , self = 88 , parent = Nothing
| | | | | | | | | | | | F   | |      , duration = 1.109046305000 , status = Fail , start = 2025-09-03 13:09:43.007738999
| | | | | | | | | | | | F   | |      UTC , finish = 2025-09-03 13:09:44.116785304 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | F   | |      156", 3, False)}
| | | | | | | | | | | | F   | |      
| | | | | | | F | | | | |   | |      
| | | | | | | F | | | | |   | |      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | F | | | | |   | |      , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | F | | | | |   | |      = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | | | | | F | | | | |   | |      Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | | | | | F | | | | |   | |      8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | | | | | F | | | | |   | |      = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | | | | | F | | | | |   | |      ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | | | | | F | | | | |   | |      1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | F | | | | |   | |      = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | F | | | | |   | |      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | F | | | | |   | |      = 17} , self = 82 , parent = Nothing , duration = 0.235979813000 , status
| | | | | | | F | | | | |   | |      = Fail , start = 2025-09-03 13:09:43.190223314 UTC , finish = 2025-09-03
| | | | | | | F | | | | |   | |      13:09:43.426203127 UTC , thread_cap_info = ("ThreadId 174", 3, False)}
| | | | | | | F | | | | |   | |      
| | | | | | | | | | | | | F | |      Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | F | |      , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | F | |      = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | F | |      False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | F | |      = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | F | |      = 0 , alphabet_size = 2 , total_length = 25} , self = 85 , parent = Nothing
| | | | | | | | | | | | | F | |      , duration = 0.665512658000 , status = Fail , start = 2025-09-03 13:09:43.206896461
| | | | | | | | | | | | | F | |      UTC , finish = 2025-09-03 13:09:43.872409119 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | F | |      176", 3, False)}
| | | | | | | | | | | | | F | |      
| | | | | | | | | | | | | | | | E    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | E    , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | E    = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | E    , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | E    max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | E    [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | E    string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | E    , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | E    = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | E    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | E    = 17} , self = 91 , parent = Nothing , duration = 1.399791523000 , status
| | | | | | | | | | | | | | | | E    = Except "AsyncCancelled" , start = 2025-09-03 13:09:43.406523546 UTC ,
| | | | | | | | | | | | | | | | E    finish = 2025-09-03 13:09:44.806315069 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | E    179", 3, False)}
| | | | | | | | | | | | | | | | E    
| | | | | | | F | | | | | | | | |    
| | | | | | | E | | | | | | | | |    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | E | | | | | | | | |    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | E | | | | | | | | |    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | E | | | | | | | | |    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | E | | | | | | | | |    = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | E | | | | | | | | |    = 0 , alphabet_size = 2 , total_length = 17} , self = 87 , parent = Nothing
| | | | | | | E | | | | | | | | |    , duration = 0.620231262000 , status = Except "AsyncCancelled" , start
| | | | | | | E | | | | | | | | |    = 2025-09-03 13:09:43.42621509 UTC , finish = 2025-09-03 13:09:44.046446352
| | | | | | | E | | | | | | | | |    UTC , thread_cap_info = ("ThreadId 181", 3, False)}
| | | | | | | E | | | | | | | | |    
| | | | | | | | | | | | | | | | | E  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | | E  , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | | E  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | | E  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | | E  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | | E  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | | E  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | | E  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | | E  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | E  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | E  = 25} , self = 102 , parent = Nothing , duration = 2.260013558000 , status
| | | | | | | | | | | | | | | | | E  = Except "AsyncCancelled" , start = 2025-09-03 13:09:43.44618338 UTC ,
| | | | | | | | | | | | | | | | | E  finish = 2025-09-03 13:09:45.706196938 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | E  183", 3, False)}
| | | | | | | | | | | | | | | | | E  
| F | | | | | | | | | | | | | | | |  
|   | | | | | | | | | | | F | | | |  
|   | | | | | | | | | F |   | | | |  
| E | | | | | | | | |   |   | | | |  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| E | | | | | | | | |   |   | | | |  , closure = Backward\n , start_strict_only = True\n , max_closure_length
| E | | | | | | | | |   |   | | | |  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| E | | | | | | | | |   |   | | | |  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| E | | | | | | | | |   |   | | | |  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| E | | | | | | | | |   |   | | | |  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| E | | | | | | | | |   |   | | | |  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| E | | | | | | | | |   |   | | | |  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| E | | | | | | | | |   |   | | | |  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| E | | | | | | | | |   |   | | | |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| E | | | | | | | | |   |   | | | |  = 17} , self = 95 , parent = Nothing , duration = 1.279639999000 , status
| E | | | | | | | | |   |   | | | |  = Except "AsyncCancelled" , start = 2025-09-03 13:09:44.026540848 UTC ,
| E | | | | | | | | |   |   | | | |  finish = 2025-09-03 13:09:45.306180847 UTC , thread_cap_info = ("ThreadId
| E | | | | | | | | |   |   | | | |  187", 3, False)}
| E | | | | | | | | |   |   | | | |  
| | | | | | | E | | |   |   | | | |  
| | | | | | |   | | |   F   | | | |  
| | | | | E |   | | |       | | | |  
| | | F |   |   | | |       | | | |  
| | |   |   |   | | |       | | E |  
| | |   |   |   | | E       | |   |  
| | |   |   |   | |         E |   |  
| | |   E   |   | |           |   |  
| E |       |   | |           |   |  
|   |       |   E |           |   |  
F   |       |     |           |   |  
    E       |     |           |   |  
            |     |           E   |  
            E     |               |  
                  E               |  
                                  E  
