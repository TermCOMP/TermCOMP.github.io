last 2947 length 13397
CNF 2947 vars 13397 clauses
last 3777 length 16505
CNF 3777 vars 16505 clauses
last 935 length 3963
last 872 length 3708
CNF 935 vars 3963 clauses
CNF 872 vars 3708 clauses
last 1586 length 6939
CNF 1586 vars 6939 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1915, clauses: 6976
last 1915 length 6976
last 1574 length 6809
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2388, clauses: 9134
CNF 1915 vars 6976 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7357, clauses: 30849
CNF 1574 vars 6809 clauses
last 5520 length 24289
last 2388 length 9134
last 5015 length 22656
last 6448 length 29239
last 5147 length 25027
last 7357 length 30849
CNF 2388 vars 9134 clauses
CNF 5520 vars 24289 clauses
CNF 5015 vars 22656 clauses
CNF 6448 vars 29239 clauses
CNF 5147 vars 25027 clauses
CNF 7357 vars 30849 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2388, clauses: 9134, status: Satisfied, time: 0.069762854s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1915, clauses: 6976, status: Unsatisfied, time: 0.378059964s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7770, clauses: 32503
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6695, clauses: 26517
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5331, clauses: 20330
last 6695 length 26517
last 5331 length 20330
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7357, clauses: 30849, status: Unsatisfied, time: 0.679572914s
last 1199 length 5199
last 1304 length 5645
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 21959, clauses: 92791
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4430, clauses: 18250
CNF 1199 vars 5199 clauses
last 21959 length 92791
CNF 1304 vars 5645 clauses
last 4430 length 18250
CNF 5331 vars 20330 clauses
CNF 6695 vars 26517 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 24519, clauses: 103695
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3177, clauses: 12176
CNF 4430 vars 18250 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2093, clauses: 7893
last 3177 length 12176
last 24519 length 103695
CNF 3177 vars 12176 clauses
last 2093 length 7893
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6695, clauses: 26517, status: Satisfied, time: 0.393831594s
CNF 2093 vars 7893 clauses
CNF 21959 vars 92791 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2093, clauses: 7893, status: Satisfied, time: 0.158817069s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7142, clauses: 29859
last 7142 length 29859
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5331, clauses: 20330, status: Satisfied, time: 0.543756284s
CNF 7142 vars 29859 clauses
CNF 24519 vars 103695 clauses
**************************************************
summary
**************************************************
SRS with 3 rules on 2 letters       mirror
SRS with 3 rules on 2 letters       DP
SRS with 6 strict rules and 3 weak rules on 4 letters       weights
SRS with 3 strict rules and 3 weak rules on 4 letters       EDG
SRS with 3 strict rules and 3 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 3 weak rules on 4 letters       EDG
SRS with 2 strict rules and 3 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 3 weak rules on 4 letters       weights
SRS with 0 strict rules and 3 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, b, a, a] -> [b, b, a, b] {- Input 0 -}
  [a, a, b, b] -> [b, b, a, a] {- Input 1 -}
  [b, a, a, b] -> [b, a, a, a] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a, b, b] -> [b, a, b, b] {- Mirror (Input 0) -}
  [b, b, a, a] -> [a, a, b, b] {- Mirror (Input 1) -}
  [b, a, a, b] -> [a, a, a, b] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a, b, b] ->= [b, a, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, b, a, a] ->= [a, a, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, a, a, b] ->= [a, a, a, b] {- DP Nontop (Mirror (Input 2)) -}
  [a#, a, b, b] |-> [b#, a, b, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, a, a, b] |-> [a#, a, a, b] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, b, a, a] |-> [a#, a, b, b] {- DP (Top 0) (Mirror (Input 1)) -}
  [b#, b, a, a] |-> [a#, b, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [b#, b, a, a] |-> [b#] {- DP (Top 3) (Mirror (Input 1)) -}
  [b#, b, a, a] |-> [b#, b] {- DP (Top 2) (Mirror (Input 1)) -}
reason
  (a, 1/1)
  (b, 1/1)
  (a#, 0/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [a, a, b, b] ->= [b, a, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, b, a, a] ->= [a, a, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, a, a, b] ->= [a, a, a, b] {- DP Nontop (Mirror (Input 2)) -}
  [a#, a, b, b] |-> [b#, a, b, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, a, a, b] |-> [a#, a, a, b] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, b, a, a] |-> [a#, a, b, b] {- DP (Top 0) (Mirror (Input 1)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a, b, b] |-> [b#, a, b, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, a, a, b] |-> [a#, a, a, b] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, b, a, a] |-> [a#, a, b, b] {- DP (Top 0) (Mirror (Input 1)) -}
  [a, a, b, b] ->= [b, a, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, b, a, a] ->= [a, a, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, a, a, b] ->= [a, a, a, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 0A  3A 3A - \
        | 0A  0A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( b
  , Wk  / 0A  3A 3A - \
        | 0A  3A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( a#
  , Wk  / 8A 10A 11A - \
        | 8A 10A 11A - |
        | 8A 10A 11A - |
        \ -  -   -   - / )
  ( b#
  , Wk  / 8A 11A 11A - \
        | 8A 11A 11A - |
        | 8A 11A 11A - |
        \ -  -   -   - / )
   property Termination
has value Just True
for SRS
  [a#, a, b, b] |-> [b#, a, b, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, b, a, a] |-> [a#, a, b, b] {- DP (Top 0) (Mirror (Input 1)) -}
  [a, a, b, b] ->= [b, a, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, b, a, a] ->= [a, a, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, a, a, b] ->= [a, a, a, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a, b, b] |-> [b#, a, b, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, b, a, a] |-> [a#, a, b, b] {- DP (Top 0) (Mirror (Input 1)) -}
  [a, a, b, b] ->= [b, a, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, b, a, a] ->= [a, a, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, a, a, b] ->= [a, a, a, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 3A 3A 6A - \
        | 3A 3A 6A - |
        | 3A 3A 3A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 3A 6A 6A - \
        | 3A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 6A 7A 8A - \
        | 6A 7A 8A - |
        | 6A 7A 8A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 5A 6A 7A - \
        | 5A 6A 7A - |
        | 5A 6A 7A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [b#, b, a, a] |-> [a#, a, b, b] {- DP (Top 0) (Mirror (Input 1)) -}
  [a, a, b, b] ->= [b, a, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, b, a, a] ->= [a, a, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, a, a, b] ->= [a, a, a, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (a#, 0/1)
  (b#, 1/1)
   property Termination
has value Just True
for SRS
  [a, a, b, b] ->= [b, a, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, b, a, a] ->= [a, a, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, a, a, b] ->= [a, a, a, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG

**************************************************
skeleton: \Mirror(3,2)\Deepee(6/3,4)\Weight\EDG(3/3,4)\Matrix{\Arctic}{3}\EDG(2/3,4)\Matrix{\Arctic}{3}(1/3,4)\Weight(0/3,2)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3177, clauses: 12176, status: Unsatisfied, time: 0.361107314s

Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.422365357000
  min duration 0.064548050000
  total durat. 1.675938815000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.420081252000
  min duration 0.038210677000
  total durat. 1.179896254000
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.141392688000
  min duration 1.141392688000
  total durat. 1.141392688000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 3
      , alphabet_size = 3
      , total_length = 32}
    , self = 95
    , parent = Nothing
    , duration = 1.141392688000
    , status = Fail
    , start = 2025-09-03 11:59:02.207956529 UTC
    , finish = 2025-09-03 11:59:03.349349217 UTC
    , thread_cap_info = ("ThreadId 108", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 1.011553645000
  min duration 0.285225528000
  total durat. 1.661792000000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 12
      , alphabet_size = 5
      , total_length = 140}
    , self = 107
    , parent = Nothing
    , duration = 1.011553645000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:59:02.771029746 UTC
    , finish = 2025-09-03 11:59:03.782583391 UTC
    , thread_cap_info = ("ThreadId 137", 2, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 1.033966713000
  min duration 0.243779051000
  total durat. 2.880364101000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 12
      , alphabet_size = 6
      , total_length = 180}
    , self = 98
    , parent = Nothing
    , duration = 1.033966713000
    , status = Success
    , start = 2025-09-03 11:59:02.582815293 UTC
    , finish = 2025-09-03 11:59:03.616782006 UTC
    , thread_cap_info = ("ThreadId 134", 2, False)}
**************************************************
F                Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                = False}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F                = 24} , self = 67 , parent = Nothing , duration = 0.337164850000 , status
F                = Fail , start = 2025-09-03 11:59:01.877725793 UTC , finish = 2025-09-03
F                11:59:02.214890643 UTC , thread_cap_info = ("ThreadId 22", 2, False)}
F                
| F              Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| F              , closure = Backward\n , start_strict_only = True\n , max_closure_length
| F              = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| F              Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| F              8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| F              = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| F              ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| F              1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| F              = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| F              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| F              = 24} , self = 63 , parent = Nothing , duration = 0.284498336000 , status
| F              = Fail , start = 2025-09-03 11:59:01.877758861 UTC , finish = 2025-09-03
| F              11:59:02.162257197 UTC , thread_cap_info = ("ThreadId 36", 0, False)}
| F              
| | F            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | F            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | F            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | F            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | F            = Size { num_rules = 3 , num_strict_rules = 3 , num_top_rules = 0 , num_weak_rules
| | F            = 0 , alphabet_size = 2 , total_length = 24} , self = 48 , parent = Nothing
| | F            , duration = 0.234933850000 , status = Fail , start = 2025-09-03 11:59:01.877844756
| | F            UTC , finish = 2025-09-03 11:59:02.112778606 UTC , thread_cap_info = ("ThreadId
| | F            49", 0, False)}
| | F            
| | | F          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | F          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | F          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | F          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | F          = Size { num_rules = 3 , num_strict_rules = 3 , num_top_rules = 0 , num_weak_rules
| | | F          = 0 , alphabet_size = 2 , total_length = 24} , self = 37 , parent = Nothing
| | | F          , duration = 0.114421803000 , status = Fail , start = 2025-09-03 11:59:01.877852083
| | | F          UTC , finish = 2025-09-03 11:59:01.992273886 UTC , thread_cap_info = ("ThreadId
| | | F          51", 0, False)}
| | | F          
| | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | F        = 12 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | F        = 120} , self = 46 , parent = Nothing , duration = 0.169821274000 , status
| | | | F        = Fail , start = 2025-09-03 11:59:01.887969493 UTC , finish = 2025-09-03
| | | | F        11:59:02.057790767 UTC , thread_cap_info = ("ThreadId 62", 1, False)}
| | | | F        
| | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | F      = 12 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | | F      = 120} , self = 43 , parent = Nothing , duration = 0.158756708000 , status
| | | | | F      = Fail , start = 2025-09-03 11:59:01.891383607 UTC , finish = 2025-09-03
| | | | | F      11:59:02.050140315 UTC , thread_cap_info = ("ThreadId 64", 1, False)}
| | | | | F      
| | | | | | F    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | F    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | F    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | F    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | F    = Size { num_rules = 12 , num_strict_rules = 12 , num_top_rules = 0 , num_weak_rules
| | | | | | F    = 0 , alphabet_size = 4 , total_length = 120} , self = 68 , parent = Nothing
| | | | | | F    , duration = 0.256921024000 , status = Fail , start = 2025-09-03 11:59:01.992236636
| | | | | | F    UTC , finish = 2025-09-03 11:59:02.24915766 UTC , thread_cap_info = ("ThreadId
| | | | | | F    75", 2, False)}
| | | | | | F    
| | | F | | |    
| | | F | | |    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | F | | |    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | F | | |    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | F | | |    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | F | | |    = Size { num_rules = 12 , num_strict_rules = 12 , num_top_rules = 0 , num_weak_rules
| | | F | | |    = 0 , alphabet_size = 4 , total_length = 120} , self = 62 , parent = Nothing
| | | F | | |    , duration = 0.123299109000 , status = Fail , start = 2025-09-03 11:59:02.011233383
| | | F | | |    UTC , finish = 2025-09-03 11:59:02.134532492 UTC , thread_cap_info = ("ThreadId
| | | F | | |    77", 2, False)}
| | | F | | |    
| | | | | F |    
| | | | F   |    
| | F |     |    
| |   F     |    
| | F       |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F       |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F       |    = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | F       |    = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | F       |    = 48} , self = 82 , parent = Nothing , duration = 0.383169923000 , status
| | F       |    = Fail , start = 2025-09-03 11:59:02.138365801 UTC , finish = 2025-09-03
| | F       |    11:59:02.521535724 UTC , thread_cap_info = ("ThreadId 102", 0, False)}
| | F       |    
| F |       |    
| S |       |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S |       |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S |       |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S |       |    = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| S |       |    = 4 , total_length = 48} , self = 87 , parent = Nothing , duration = 0.622153398000
| S |       |    , status = Success , start = 2025-09-03 11:59:02.189256839 UTC , finish
| S |       |    = 2025-09-03 11:59:02.811410237 UTC , thread_cap_info = ("ThreadId 107",
| S |       |    1, False)}
| S |       |    
| | | F     |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F     |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F     |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F     |    = 4 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | | F     |    = 3 , total_length = 32} , self = 91 , parent = Nothing , duration = 0.741608065000
| | | F     |    , status = Fail , start = 2025-09-03 11:59:02.191310796 UTC , finish =
| | | F     |    2025-09-03 11:59:02.932918861 UTC , thread_cap_info = ("ThreadId 105",
| | | F     |    0, False)}
| | | F     |    
| | | | F   |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | F   |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | F   |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | F   |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F   |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F   |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | F   |    , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | | | F   |    = 3 , total_length = 32} , self = 95 , parent = Nothing , duration = 1.141392688000
| | | | F   |    , status = Fail , start = 2025-09-03 11:59:02.207956529 UTC , finish =
| | | | F   |    2025-09-03 11:59:03.349349217 UTC , thread_cap_info = ("ThreadId 108",
| | | | F   |    0, False)}
| | | | F   |    
F | | | |   |    
  | | | |   F    
F | | | |        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F | | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | | |        = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
F | | | |        = 6 , num_top_rules = 6 , num_weak_rules = 12 , alphabet_size = 6 , total_length
F | | | |        = 180} , self = 83 , parent = Nothing , duration = 0.305752624000 , status
F | | | |        = Fail , start = 2025-09-03 11:59:02.27699888 UTC , finish = 2025-09-03
F | | | |        11:59:02.582751504 UTC , thread_cap_info = ("ThreadId 122", 2, False)}
F | | | |        
| | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | | | F      = 6 , num_top_rules = 6 , num_weak_rules = 12 , alphabet_size = 6 , total_length
| | | | | F      = 180} , self = 84 , parent = Nothing , duration = 0.422365357000 , status
| | | | | F      = Fail , start = 2025-09-03 11:59:02.291287606 UTC , finish = 2025-09-03
| | | | | F      11:59:02.713652963 UTC , thread_cap_info = ("ThreadId 121", 2, False)}
| | | | | F      
| | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | | F    = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | | | | | F    = 140} , self = 85 , parent = Nothing , duration = 0.412423370000 , status
| | | | | | F    = Fail , start = 2025-09-03 11:59:02.30124735 UTC , finish = 2025-09-03
| | | | | | F    11:59:02.71367072 UTC , thread_cap_info = ("ThreadId 124", 2, False)}
| | | | | | F    
| | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | | | F  = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | | | | | | F  = 140} , self = 86 , parent = Nothing , duration = 0.420081252000 , status
| | | | | | | F  = Fail , start = 2025-09-03 11:59:02.31102505 UTC , finish = 2025-09-03
| | | | | | | F  11:59:02.731106302 UTC , thread_cap_info = ("ThreadId 125", 2, False)}
| | | | | | | F  
| | F | | | | |  
| | E | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | E | | | | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | E | | | | |  = 4 , total_length = 48} , self = 89 , parent = Nothing , duration = 0.365012827000
| | E | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:59:02.531829038
| | E | | | | |  UTC , finish = 2025-09-03 11:59:02.896841865 UTC , thread_cap_info = ("ThreadId
| | E | | | | |  133", 1, False)}
| | E | | | | |  
F | | | | | | |  
S | | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | | | | | | |  = 18 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 12 ,
S | | | | | | |  alphabet_size = 6 , total_length = 180} , self = 98 , parent = Nothing
S | | | | | | |  , duration = 1.033966713000 , status = Success , start = 2025-09-03 11:59:02.582815293
S | | | | | | |  UTC , finish = 2025-09-03 11:59:03.616782006 UTC , thread_cap_info = ("ThreadId
S | | | | | | |  134", 2, False)}
S | | | | | | |  
| | | | | F | |  
| | | | |   F |  
| | | | |     F  
| | | | | S      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S      = 14 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 12 ,
| | | | | S      alphabet_size = 5 , total_length = 140} , self = 102 , parent = Nothing
| | | | | S      , duration = 0.980464939000 , status = Success , start = 2025-09-03 11:59:02.739299085
| | | | | S      UTC , finish = 2025-09-03 11:59:03.719764024 UTC , thread_cap_info = ("ThreadId
| | | | | S      136", 2, False)}
| | | | | S      
| | | | | | E    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
| | | | | | E    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size
| | | | | | E    = 5 , total_length = 140} , self = 107 , parent = Nothing , duration =
| | | | | | E    1.011553645000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | | E    11:59:02.771029746 UTC , finish = 2025-09-03 11:59:03.782583391 UTC , thread_cap_info
| | | | | | E    = ("ThreadId 137", 2, False)}
| | | | | | E    
| S | | | | |    
|   E | | | |    
|     F | | |    
| F     | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F     | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F     | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| F     | | |    = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| F     | | |    = 40} , self = 97 , parent = Nothing , duration = 0.223610841000 , status
| F     | | |    = Fail , start = 2025-09-03 11:59:03.211031393 UTC , finish = 2025-09-03
| F     | | |    11:59:03.434642234 UTC , thread_cap_info = ("ThreadId 143", 0, False)}
| F     | | |    
| | F   | | |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F   | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F   | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | F   | | |    = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | F   | | |    = 40} , self = 96 , parent = Nothing , duration = 0.197340442000 , status
| | F   | | |    = Fail , start = 2025-09-03 11:59:03.231021933 UTC , finish = 2025-09-03
| | F   | | |    11:59:03.428362375 UTC , thread_cap_info = ("ThreadId 144", 0, False)}
| | F   | | |    
| | |   F | |    
| | F     | |    
| | S     | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S     | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S     | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S     | |    = 5 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| | S     | |    = 4 , total_length = 40} , self = 100 , parent = Nothing , duration = 0.243779051000
| | S     | |    , status = Success , start = 2025-09-03 11:59:03.428393542 UTC , finish
| | S     | |    = 2025-09-03 11:59:03.672172593 UTC , thread_cap_info = ("ThreadId 152",
| | S     | |    0, False)}
| | S     | |    
| F |     | |    
| E |     | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E |     | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E |     | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E |     | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E |     | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E |     | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| E |     | |    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| E |     | |    = 4 , total_length = 40} , self = 104 , parent = Nothing , duration = 0.285225528000
| E |     | |    , status = Except "AsyncCancelled" , start = 2025-09-03 11:59:03.453403475
| E |     | |    UTC , finish = 2025-09-03 11:59:03.738629003 UTC , thread_cap_info = ("ThreadId
| E |     | |    153", 2, False)}
| E |     | |    
S | |     | |    
  | S     | |    
  |       S |    
  E         |    
            E    
