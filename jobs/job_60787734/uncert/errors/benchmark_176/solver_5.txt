Input TRS:
    1: B(a(x1)) -> BA(x1)
    2: B(b(x1)) -> B(B(x1))
    3: BA(a(x1)) -> BAA(x1)
    4: BA(b(x1)) -> BA(B(x1))
    5: BAA(a(x1)) -> BAAA(x1)
    6: BAA(b(x1)) -> BAA(B(x1))
    7: BAAA(a(x1)) -> BAAA(A(x1))
    8: BAAA(b(x1)) -> BAAAB(x1)
    9: BAAAB(a(x1)) -> BAAABA(x1)
    10: BAAAB(b(x1)) -> BAAAB(B(x1))
    11: BAAABA(a(x1)) -> BAAABA(A(x1))
    12: BAAABA(b(x1)) -> BAAABAB(x1)
    13: BAAABAB(a(x1)) -> BAAABABA(x1)
    14: BAAABAB(b(x1)) -> BAAABAB(B(x1))
    15: BAAABABA(a(x1)) -> BAAABABAA(x1)
    16: BAAABABA(b(x1)) -> BAAABABA(B(x1))
    17: BAAABABAA(a(x1)) -> BAAABABAAA(x1)
    18: BAAABABAA(b(x1)) -> BAAABABAA(B(x1))
    19: BAAABABAAA(x1) -> a(a(b(a(x1))))
    20: A(a(x1)) -> AA(x1)
    21: A(b(x1)) -> A(B(x1))
    22: AA(a(x1)) -> AA(A(x1))
    23: AA(b(x1)) -> AAB(x1)
    24: AAB(a(x1)) -> AABA(x1)
    25: AAB(b(x1)) -> AAB(B(x1))
    26: AABA(x1) -> b(a(a(a(b(a(b(a(a(a(x1))))))))))
Number of strict rules: 26
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #B(b(x1)) -> #B(B(x1))
   #2: #B(b(x1)) -> #B(x1)
   #3: #BAA(b(x1)) -> #BAA(B(x1))
   #4: #BAA(b(x1)) -> #B(x1)
   #5: #BAAABAB(a(x1)) -> #BAAABABA(x1)
   #6: #BAAAB(a(x1)) -> #BAAABA(x1)
   #7: #BAAABA(a(x1)) -> #BAAABA(A(x1))
   #8: #BAAABA(a(x1)) -> #A(x1)
   #9: #AAB(a(x1)) -> #AABA(x1)
   #10: #AA(b(x1)) -> #AAB(x1)
   #11: #BAAABA(b(x1)) -> #BAAABAB(x1)
   #12: #BAAABAB(b(x1)) -> #BAAABAB(B(x1))
   #13: #BAAABAB(b(x1)) -> #B(x1)
   #14: #AAB(b(x1)) -> #AAB(B(x1))
   #15: #AAB(b(x1)) -> #B(x1)
   #16: #A(a(x1)) -> #AA(x1)
   #17: #BAAA(a(x1)) -> #BAAA(A(x1))
   #18: #BAAA(a(x1)) -> #A(x1)
   #19: #BAAAB(b(x1)) -> #BAAAB(B(x1))
   #20: #BAAAB(b(x1)) -> #B(x1)
   #21: #BAA(a(x1)) -> #BAAA(x1)
   #22: #AA(a(x1)) -> #AA(A(x1))
   #23: #AA(a(x1)) -> #A(x1)
   #24: #BAAABABAA(a(x1)) -> #BAAABABAAA(x1)
   #25: #A(b(x1)) -> #A(B(x1))
   #26: #A(b(x1)) -> #B(x1)
   #27: #BAAABABA(b(x1)) -> #BAAABABA(B(x1))
   #28: #BAAABABA(b(x1)) -> #B(x1)
   #29: #BA(a(x1)) -> #BAA(x1)
   #30: #B(a(x1)) -> #BA(x1)
   #31: #BAAA(b(x1)) -> #BAAAB(x1)
   #32: #BAAABABA(a(x1)) -> #BAAABABAA(x1)
   #33: #BA(b(x1)) -> #BA(B(x1))
   #34: #BA(b(x1)) -> #B(x1)
   #35: #BAAABABAA(b(x1)) -> #BAAABABAA(B(x1))
   #36: #BAAABABAA(b(x1)) -> #B(x1)
Number of SCCs: 1, DPs: 32, edges: 72
	SCC { #1..8 #10..13 #15..23 #25..34 #36 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
#BAAABABAAA(x1)	weight: 0; 0
     a(x1)	weight: x1_1; x1_1
  #BA(x1)	weight: (/ 1 16) + x1_1; x1_1
 BAAAB(x1)	weight: x1_2; x1_2
  #AA(x1)	weight: (/ 1 16) + x1_1; x1_1
#BAAA(x1)	weight: (/ 1 16) + x1_1; x1_1
     b(x1)	weight: x1_2; (/ 1 8) + x1_2
   #B(x1)	weight: (/ 1 16) + x1_2; x1_2
  BAAA(x1)	weight: x1_1; x1_1
BAAABA(x1)	weight: x1_1; x1_1
#BAAABABAA(x1)	weight: (/ 1 16) + x1_1; x1_1
#BAAABABA(x1)	weight: (/ 1 16) + x1_1; x1_1
   BAA(x1)	weight: x1_1; x1_1
    AA(x1)	weight: x1_1; (/ 1 8) + x1_1
#BAAABAB(x1)	weight: (/ 1 16) + x1_2; x1_2
     B(x1)	weight: x1_2; (/ 1 16) + x1_2
   AAB(x1)	weight: x1_2; (/ 1 8) + x1_2
#BAAAB(x1)	weight: (/ 1 16) + x1_2; x1_2
     A(x1)	weight: x1_1; (/ 1 8) + x1_2
   #A(x1)	weight: (/ 1 16) + x1_1; x1_1
BAAABABAA(x1)	weight: x1_1; x1_1
BAAABABA(x1)	weight: x1_1; x1_1
  AABA(x1)	weight: x1_1; (/ 1 8) + x1_1
#AABA(x1)	weight: 0; 0
BAAABABAAA(x1)	weight: x1_1; x1_1
BAAABAB(x1)	weight: x1_2; x1_2
 #BAA(x1)	weight: (/ 1 16) + x1_1; x1_1
#BAAABA(x1)	weight: (/ 1 16) + x1_1; x1_1
 #AAB(x1)	weight: x1_2; x1_2
    BA(x1)	weight: x1_1; x1_1
    Usable rules: { 1..26 }
    Removed DPs: #1 #2 #10 #12 #13 #15 #19 #20
Number of SCCs: 1, DPs: 23, edges: 39
	SCC { #3..8 #11 #16..18 #21 #23 #25..34 #36 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
#BAAABABAAA(x1)	weight: 0; 0
     a(x1)	weight: x1_2; x1_1
  #BA(x1)	weight: (/ 1 16) + x1_2; x1_2
 BAAAB(x1)	weight: (/ 1 8) + x1_1; x1_1
  #AA(x1)	weight: x1_2; x1_2
#BAAA(x1)	weight: (/ 1 16) + x1_2; x1_2
     b(x1)	weight: (/ 1 8) + x1_1; x1_1
   #B(x1)	weight: (/ 1 16) + x1_1; x1_1
  BAAA(x1)	weight: (/ 1 8) + x1_2; x1_2
BAAABA(x1)	weight: (/ 1 8) + x1_2; x1_2
#BAAABABAA(x1)	weight: x1_1; x1_1
#BAAABABA(x1)	weight: (/ 1 16) + x1_2; x1_2
   BAA(x1)	weight: (/ 1 8) + x1_1; x1_1
    AA(x1)	weight: (/ 1 8) + x1_2; x1_2
#BAAABAB(x1)	weight: (/ 1 16) + x1_1; x1_1
     B(x1)	weight: (/ 1 8) + x1_1; x1_1
   AAB(x1)	weight: (/ 1 8) + x1_1; x1_1
#BAAAB(x1)	weight: (/ 1 16) + x1_1; x1_1
     A(x1)	weight: (/ 1 8) + x1_1 + x1_2; x1_1
   #A(x1)	weight: x1_1; x1_1
BAAABABAA(x1)	weight: (/ 1 8) + x1_1; x1_1
BAAABABA(x1)	weight: (/ 1 8) + x1_2; x1_2
  AABA(x1)	weight: (/ 1 8) + x1_2; x1_2
#AABA(x1)	weight: 0; 0
BAAABABAAA(x1)	weight: (/ 1 8) + x1_2; x1_2
BAAABAB(x1)	weight: (/ 1 8) + x1_1; x1_1
 #BAA(x1)	weight: (/ 1 16) + x1_1; x1_1
#BAAABA(x1)	weight: (/ 1 16) + x1_2; x1_2
 #AAB(x1)	weight: 0; 0
    BA(x1)	weight: (/ 1 8) + x1_2; x1_2
    Usable rules: { 1..26 }
    Removed DPs: #4 #8 #18 #26 #32 #36
Number of SCCs: 2, DPs: 16, edges: 22
	SCC { #16 #23 #25 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
