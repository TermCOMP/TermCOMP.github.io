last 3707 length 16336
CNF 3707 vars 16336 clauses
last 4082 length 19288
CNF 4082 vars 19288 clauses
last 781 length 3263
CNF 781 vars 3263 clauses
last 708 length 2907
CNF 708 vars 2907 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2487, clauses: 9029
last 2487 length 9029
last 704 length 2931
CNF 2487 vars 9029 clauses
CNF 704 vars 2931 clauses
last 693 length 2904
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2487, clauses: 9029, status: Satisfied, time: 0.099883033s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6759, clauses: 27919
CNF 693 vars 2904 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1763, clauses: 6405
last 1763 length 6405
CNF 1763 vars 6405 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5708, clauses: 23617
last 5708 length 23617
last 599 length 2507
last 488 length 1991
CNF 5708 vars 23617 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1763, clauses: 6405, status: Unsatisfied, time: 0.078032912s
CNF 599 vars 2507 clauses
CNF 488 vars 1991 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3479, clauses: 13976
last 3479 length 13976
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2171, clauses: 7725
last 2171 length 7725
CNF 2171 vars 7725 clauses
CNF 3479 vars 13976 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5837, clauses: 24005
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2171, clauses: 7725, status: Unsatisfied, time: 0.115073891s
last 5837 length 24005
CNF 5837 vars 24005 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3644, clauses: 14377
last 3644 length 14377
CNF 3644 vars 14377 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5837, clauses: 24005, status: Unsatisfied, time: 0.694194331s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3479, clauses: 13976, status: Unsatisfied, time: 0.8852473s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3530, clauses: 13248
last 3530 length 13248
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5708, clauses: 23617, status: Unsatisfied, time: 1.062953119s
CNF 3530 vars 13248 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2892, clauses: 11059
last 2892 length 11059
CNF 2892 vars 11059 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3644, clauses: 14377, status: Unsatisfied, time: 0.818258137s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2892, clauses: 11059, status: Satisfied, time: 0.2047296s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3530, clauses: 13248, status: Unsatisfied, time: 0.290133046s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9847, clauses: 41015
last 9847 length 41015
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9711, clauses: 39709
last 9711 length 39709
CNF 9711 vars 39709 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6576, clauses: 24546
last 6576 length 24546
CNF 6576 vars 24546 clauses
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       mirror
SRS with 3 rules on 3 letters       DP
SRS with 3 strict rules and 3 weak rules on 4 letters       EDG
SRS with 2 strict rules and 3 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 3 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, c] -> [a] {- Input 0 -}
  [a, c, b, c] -> [c, b, c, c] {- Input 1 -}
  [c] -> [b, a, a] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [c, a] -> [a] {- Mirror (Input 0) -}
  [c, b, c, a] -> [c, c, b, c] {- Mirror (Input 1) -}
  [c] -> [a, a, b] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [c, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [c, b, c, a] ->= [c, c, b, c] {- DP Nontop (Mirror (Input 1)) -}
  [c] ->= [a, a, b] {- DP Nontop (Mirror (Input 2)) -}
  [c#, b, c, a] |-> [c#] {- DP (Top 3) (Mirror (Input 1)) -}
  [c#, b, c, a] |-> [c#, b, c] {- DP (Top 1) (Mirror (Input 1)) -}
  [c#, b, c, a] |-> [c#, c, b, c] {- DP (Top 0) (Mirror (Input 1)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [c#, b, c, a] |-> [c#] {- DP (Top 3) (Mirror (Input 1)) -}
  [c#, b, c, a] |-> [c#, b, c] {- DP (Top 1) (Mirror (Input 1)) -}
  [c, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [c, b, c, a] ->= [c, c, b, c] {- DP Nontop (Mirror (Input 1)) -}
  [c] ->= [a, a, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 0A  0A  4A 4A - \
        | 0A  0A  4A 4A - |
        | -4A 0A  0A 0A - |
        | -4A -4A 0A 0A - |
        \ -   -   -  -  - / )
  ( b
  , Wk  / 0A  0A  0A  0A  - \
        | -4A -4A -4A 0A  - |
        | -4A -4A -4A 0A  - |
        | -4A -4A -4A -4A - |
        \ -   -   -   -   - / )
  ( c
  , Wk  / 0A  0A 4A 4A - \
        | 0A  0A 0A 4A - |
        | 0A  0A 0A 4A - |
        | -4A 0A 0A 0A - |
        \ -   -  -  -  - / )
  ( c#
  , Wk  / 1A 1A 3A 5A - \
        | 1A 1A 3A 5A - |
        | 1A 1A 3A 5A - |
        | 1A 1A 3A 5A - |
        \ -  -  -  -  - / )
   property Termination
has value Just True
for SRS
  [c, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [c, b, c, a] ->= [c, c, b, c] {- DP Nontop (Mirror (Input 1)) -}
  [c] ->= [a, a, b] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG

**************************************************
skeleton: \Mirror(3,3)\Deepee(3/3,4)\EDG(2/3,4)\Matrix{\Arctic}{4}(0/3,3)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.126864594000
  min duration 0.822078556000
  total durat. 1.948943150000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 27}
    , self = 81
    , parent = Nothing
    , duration = 1.126864594000
    , status = Fail
    , start = 2025-09-03 13:35:19.968719483 UTC
    , finish = 2025-09-03 13:35:21.095584077 UTC
    , thread_cap_info = ("ThreadId 113", 3, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.953798496000
  min duration 0.885222832000
  total durat. 1.839021328000
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 2.030649972000
  min duration 2.030649972000
  total durat. 2.030649972000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 15}
    , self = 89
    , parent = Nothing
    , duration = 2.030649972000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:35:19.527638897 UTC
    , finish = 2025-09-03 13:35:21.558288869 UTC
    , thread_cap_info = ("ThreadId 43", 3, False)}
**************************************************
F          Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F          , closure = Backward\n , start_strict_only = True\n , max_closure_length
F          = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F          Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F          8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F          = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F          ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F          1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F          = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F          = 15} , self = 44 , parent = Nothing , duration = 0.104315708000 , status
F          = Fail , start = 2025-09-03 13:35:19.527613418 UTC , finish = 2025-09-03
F          13:35:19.631929126 UTC , thread_cap_info = ("ThreadId 35", 0, False)}
F          
| E        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| E        , closure = Forward\n , start_strict_only = True\n , max_closure_length
| E        = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| E        Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| E        8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| E        = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| E        ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| E        1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| E        = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| E        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| E        = 15} , self = 89 , parent = Nothing , duration = 2.030649972000 , status
| E        = Except "AsyncCancelled" , start = 2025-09-03 13:35:19.527638897 UTC ,
| E        finish = 2025-09-03 13:35:21.558288869 UTC , thread_cap_info = ("ThreadId
| E        43", 3, False)}
| E        
| | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F      = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | F      = 18 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F      = 126} , self = 48 , parent = Nothing , duration = 0.103108251000 , status
| | F      = Fail , start = 2025-09-03 13:35:19.535137364 UTC , finish = 2025-09-03
| | F      13:35:19.638245615 UTC , thread_cap_info = ("ThreadId 61", 1, False)}
| | F      
| | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | F    = 18 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | F    = 126} , self = 49 , parent = Nothing , duration = 0.101930909000 , status
| | | F    = Fail , start = 2025-09-03 13:35:19.544045971 UTC , finish = 2025-09-03
| | | F    13:35:19.64597688 UTC , thread_cap_info = ("ThreadId 63", 1, False)}
| | | F    
F | | |    
F | | |    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
F | | |    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
F | | |    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
F | | |    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
F | | |    = Size { num_rules = 18 , num_strict_rules = 18 , num_top_rules = 0 , num_weak_rules
F | | |    = 0 , alphabet_size = 9 , total_length = 126} , self = 65 , parent = Nothing
F | | |    , duration = 0.207856079000 , status = Fail , start = 2025-09-03 13:35:19.631951987
F | | |    UTC , finish = 2025-09-03 13:35:19.839808066 UTC , thread_cap_info = ("ThreadId
F | | |    79", 0, False)}
F | | |    
| | F |    
| |   F    
| | S      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S      = 8 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 3 , alphabet_size
| | S      = 5 , total_length = 37} , self = 67 , parent = Nothing , duration = 0.180792649000
| | S      , status = Success , start = 2025-09-03 13:35:19.784311662 UTC , finish
| | S      = 2025-09-03 13:35:19.965104311 UTC , thread_cap_info = ("ThreadId 102",
| | S      3, False)}
| | S      
| | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | F    = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | F    = 27} , self = 70 , parent = Nothing , duration = 0.167523402000 , status
| | | F    = Fail , start = 2025-09-03 13:35:19.799906819 UTC , finish = 2025-09-03
| | | F    13:35:19.967430221 UTC , thread_cap_info = ("ThreadId 103", 3, False)}
| | | F    
| | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | F  = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | F  = 27} , self = 66 , parent = Nothing , duration = 0.104268488000 , status
| | | | F  = Fail , start = 2025-09-03 13:35:19.801751028 UTC , finish = 2025-09-03
| | | | F  13:35:19.906019516 UTC , thread_cap_info = ("ThreadId 104", 3, False)}
| | | | F  
F | | | |  
E | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
E | | | |  , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 3 , alphabet_size
E | | | |  = 5 , total_length = 37} , self = 69 , parent = Nothing , duration = 0.122088426000
E | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 13:35:19.844439111
E | | | |  UTC , finish = 2025-09-03 13:35:19.966527537 UTC , thread_cap_info = ("ThreadId
E | | | |  106", 3, False)}
E | | | |  
| | | | F  
| | | | F  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F  = 5 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| | | | F  = 4 , total_length = 27} , self = 75 , parent = Nothing , duration = 0.173570008000
| | | | F  , status = Fail , start = 2025-09-03 13:35:19.924195503 UTC , finish =
| | | | F  2025-09-03 13:35:20.097765511 UTC , thread_cap_info = ("ThreadId 108",
| | | | F  3, False)}
| | | | F  
| | S | |  
E |   | |  
  |   F |  
F |     |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
F |     |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
F |     |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
F |     |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F |     |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F |     |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
F |     |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
F |     |  = 4 , total_length = 27} , self = 81 , parent = Nothing , duration = 1.126864594000
F |     |  , status = Fail , start = 2025-09-03 13:35:19.968719483 UTC , finish =
F |     |  2025-09-03 13:35:21.095584077 UTC , thread_cap_info = ("ThreadId 113",
F |     |  3, False)}
F |     |  
| |     F  
| | F      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | F      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | F      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| | F      = 4 , total_length = 27} , self = 80 , parent = Nothing , duration = 0.953798496000
| | F      , status = Fail , start = 2025-09-03 13:35:20.099434034 UTC , finish =
| | F      2025-09-03 13:35:21.05323253 UTC , thread_cap_info = ("ThreadId 121", 3,
| | F      False)}
| | F      
| | | F    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F    = 7 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 3 , alphabet_size
| | | F    = 5 , total_length = 29} , self = 78 , parent = Nothing , duration = 0.154999096000
| | | F    , status = Fail , start = 2025-09-03 13:35:20.130375106 UTC , finish =
| | | F    2025-09-03 13:35:20.285374202 UTC , thread_cap_info = ("ThreadId 122",
| | | F    3, False)}
| | | F    
| | | | F  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | F  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | F  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | F  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | F  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 3 , alphabet_size
| | | | F  = 5 , total_length = 29} , self = 79 , parent = Nothing , duration = 0.822078556000
| | | | F  , status = Fail , start = 2025-09-03 13:35:20.157524827 UTC , finish =
| | | | F  2025-09-03 13:35:20.979603383 UTC , thread_cap_info = ("ThreadId 123",
| | | | F  3, False)}
| | | | F  
| | | F |  
| | | F |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | F |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | F |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | F |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | F |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 3 , alphabet_size
| | | F |  = 5 , total_length = 29} , self = 82 , parent = Nothing , duration = 0.885222832000
| | | F |  , status = Fail , start = 2025-09-03 13:35:20.285413735 UTC , finish =
| | | F |  2025-09-03 13:35:21.170636567 UTC , thread_cap_info = ("ThreadId 126",
| | | F |  3, False)}
| | | F |  
| | | | F  
| | | | F  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F  = 7 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 3 , alphabet_size
| | | | F  = 5 , total_length = 29} , self = 85 , parent = Nothing , duration = 0.408266948000
| | | | F  , status = Fail , start = 2025-09-03 13:35:20.979645928 UTC , finish =
| | | | F  2025-09-03 13:35:21.387912876 UTC , thread_cap_info = ("ThreadId 129",
| | | | F  3, False)}
| | | | F  
| | F | |  
| | S | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | S | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S | |  = 5 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| | S | |  = 4 , total_length = 27} , self = 83 , parent = Nothing , duration = 0.266585077000
| | S | |  , status = Success , start = 2025-09-03 13:35:21.06683286 UTC , finish
| | S | |  = 2025-09-03 13:35:21.333417937 UTC , thread_cap_info = ("ThreadId 130",
| | S | |  3, False)}
| | S | |  
F | | | |  
E | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E | | | |  , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
E | | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
E | | | |  = 4 , total_length = 27} , self = 86 , parent = Nothing , duration = 0.352198379000
E | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 13:35:21.128792718
E | | | |  UTC , finish = 2025-09-03 13:35:21.480991097 UTC , thread_cap_info = ("ThreadId
E | | | |  132", 3, False)}
E | | | |  
| | | F |  
| | S   |  
| |     F  
E |        
  E        
