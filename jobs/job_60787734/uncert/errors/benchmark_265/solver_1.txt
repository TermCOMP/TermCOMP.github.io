last 4544 length 32133
last 3032 length 21069
last 2539 length 10095
CNF 3032 vars 21069 clauses
CNF 2539 vars 10095 clauses
CNF 4544 vars 32133 clauses
last 2791 length 11346
CNF 2791 vars 11346 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9056, clauses: 32232
last 9056 length 32232
CNF 9056 vars 32232 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9056, clauses: 32232, status: Satisfied, time: 0.303620043s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15109, clauses: 54007
last 15109 length 54007
CNF 15109 vars 54007 clauses
last 2112 length 10530
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15109, clauses: 54007, status: Satisfied, time: 0.230946592s
CNF 2112 vars 10530 clauses
last 2775 length 14826
CNF 2775 vars 14826 clauses
last 2757 length 11212
last 2473 length 9843
CNF 2757 vars 11212 clauses
CNF 2473 vars 9843 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8857, clauses: 31312
last 8857 length 31312
CNF 8857 vars 31312 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 30017, clauses: 123901
last 30017 length 123901
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14898, clauses: 53186
last 14898 length 53186
CNF 30017 vars 123901 clauses
CNF 14898 vars 53186 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14898, clauses: 53186, status: Satisfied, time: 0.249762162s
last 2427 length 9673
last 2750 length 11191
CNF 2750 vars 11191 clauses
CNF 2427 vars 9673 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8857, clauses: 31312, status: Unsatisfied, time: 1.163499719s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14792, clauses: 52761
last 14792 length 52761
CNF 14792 vars 52761 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18562, clauses: 72054
last 18562 length 72054
CNF 18562 vars 72054 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14792, clauses: 52761, status: Satisfied, time: 0.760790441s
last 2692 length 10959
last 2383 length 9499
CNF 2383 vars 9499 clauses
CNF 2692 vars 10959 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14488, clauses: 51628
last 14488 length 51628
CNF 14488 vars 51628 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 38150, clauses: 157131
last 38150 length 157131
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18562, clauses: 72054, status: Unsatisfied, time: 2.625662507s
CNF 38150 vars 157131 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14488, clauses: 51628, status: Satisfied, time: 1.461182418s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14361, clauses: 53440
last 14361 length 53440
CNF 14361 vars 53440 clauses
last 2317 length 9247
last 2658 length 10825
CNF 2658 vars 10825 clauses
CNF 2317 vars 9247 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14277, clauses: 50807
last 14277 length 50807
CNF 14277 vars 50807 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 37812, clauses: 155715
last 37812 length 155715
CNF 37812 vars 155715 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14277, clauses: 50807, status: Unsatisfied, time: 2.36196249s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 24102, clauses: 93287
last 24102 length 93287
CNF 24102 vars 93287 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 37812, clauses: 155715, status: Satisfied, time: 2.964472954s
last 2251 length 8995
CNF 2251 vars 8995 clauses
last 2624 length 10691
CNF 2624 vars 10691 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 53199, clauses: 210320
last 53199 length 210320
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14066, clauses: 49986
last 14066 length 49986
CNF 53199 vars 210320 clauses
CNF 14066 vars 49986 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14361, clauses: 53440, status: Unsatisfied, time: 7.200390677s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 37474, clauses: 154299
last 37474 length 154299
CNF 37474 vars 154299 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14066, clauses: 49986, status: Unsatisfied, time: 2.226927953s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 26993, clauses: 99931
last 26993 length 99931
CNF 26993 vars 99931 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 23857, clauses: 92307
last 23857 length 92307
CNF 23857 vars 92307 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 37474, clauses: 154299, status: Satisfied, time: 2.891460607s
last 1906 length 7983
CNF 1906 vars 7983 clauses
last 1453 length 6011
CNF 1453 vars 6011 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8797, clauses: 30793
last 8797 length 30793
CNF 8797 vars 30793 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8797, clauses: 30793, status: Unsatisfied, time: 0.714189387s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 29723, clauses: 122649
last 29723 length 122649
CNF 29723 vars 122649 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18386, clauses: 71282
last 18386 length 71282
CNF 18386 vars 71282 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18386, clauses: 71282, status: Unsatisfied, time: 3.301398771s
[Info] pool sizes (success) 93801 seen 37120 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
**************************************************
summary
**************************************************
SRS with 26 rules on 16 letters       looping derivation
from
  [BA, AB, ABB, b, a]
to
  [BABBBA, B, B, BA, AB, ABB, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]
via 98 steps

**************************************************
proof
**************************************************
property Termination
has value Just False
for SRS
  [B, a] -> [BA] {- Input 0 -}
  [B, b] -> [B, B] {- Input 1 -}
  [BA, a] -> [BA, A] {- Input 2 -}
  [BA, b] -> [BAB] {- Input 3 -}
  [BAB, a] -> [BAB, A] {- Input 4 -}
  [BAB, b] -> [BABB] {- Input 5 -}
  [BABB, a] -> [BABB, A] {- Input 6 -}
  [BABB, b] -> [BABBB] {- Input 7 -}
  [BABBB, a] -> [BABBBA] {- Input 8 -}
  [BABBB, b] -> [BABBB, B] {- Input 9 -}
  [BABBBA, a] -> [BABBBAA] {- Input 10 -}
  [BABBBA, b] -> [BABBBA, B] {- Input 11 -}
  [BABBBAA, a] -> [BABBBAA, A] {- Input 12 -}
  [BABBBAA, b] -> [BABBBAAB] {- Input 13 -}
  [BABBBAAB, a] -> [BABBBAABA] {- Input 14 -}
  [BABBBAAB, b] -> [BABBBAAB, B] {- Input 15 -}
  [BABBBAABA] -> [a, b, b, b, a] {- Input 16 -}
  [A, a] -> [A, A] {- Input 17 -}
  [A, b] -> [AB] {- Input 18 -}
  [AB, a] -> [AB, A] {- Input 19 -}
  [AB, b] -> [ABB] {- Input 20 -}
  [ABB, a] -> [ABB, A] {- Input 21 -}
  [ABB, b] -> [ABBB] {- Input 22 -}
  [ABBB, a] -> [ABBBA] {- Input 23 -}
  [ABBB, b] -> [ABBB, B] {- Input 24 -}
  [ABBBA] -> [b, a, b, b, b, a, a, b, a] {- Input 25 -}
reason
  Nontermination
    Derive   { from = [BA, AB, ABB, b, a], via = [(Step   { rule = 22, position = 2}, [BA, AB, ABBB, a]), (Step   { rule = 23, position = 2}, [BA, AB, ABBBA]), (Step   { rule = 25, position = 2}, [BA, AB, b, a, b, b, b, a, a, b, a]), (Step   { rule = 20, position = 1}, [BA, ABB, a, b, b, b, a, a, b, a]), (Step   { rule = 21, position = 1}, [BA, ABB, A, b, b, b, a, a, b, a]), (Step   { rule = 18, position = 2}, [BA, ABB, AB, b, b, a, a, b, a]), (Step   { rule = 20, position = 2}, [BA, ABB, ABB, b, a, a, b, a]), (Step   { rule = 22, position = 2}, [BA, ABB, ABBB, a, a, b, a]), (Step   { rule = 23, position = 2}, [BA, ABB, ABBBA, a, b, a]), (Step   { rule = 25, position = 2}, [BA, ABB, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 22, position = 1}, [BA, ABBB, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 23, position = 1}, [BA, ABBBA, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 25, position = 1}, [BA, b, a, b, b, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 3, position = 0}, [BAB, a, b, b, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 4, position = 0}, [BAB, A, b, b, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 18, position = 1}, [BAB, AB, b, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 20, position = 1}, [BAB, ABB, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 22, position = 1}, [BAB, ABBB, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 23, position = 1}, [BAB, ABBBA, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 25, position = 1}, [BAB, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 5, position = 0}, [BABB, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 6, position = 0}, [BABB, A, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 18, position = 1}, [BABB, AB, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 20, position = 1}, [BABB, ABB, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 22, position = 1}, [BABB, ABBB, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 23, position = 1}, [BABB, ABBBA, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 25, position = 1}, [BABB, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 7, position = 0}, [BABBB, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 8, position = 0}, [BABBBA, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 11, position = 0}, [BABBBA, B, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 1, position = 1}, [BABBBA, B, B, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 1, position = 2}, [BABBBA, B, B, B, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 0, position = 3}, [BABBBA, B, B, BA, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 2, position = 3}, [BABBBA, B, B, BA, A, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 18, position = 4}, [BABBBA, B, B, BA, AB, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 19, position = 4}, [BABBBA, B, B, BA, AB, A, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 17, position = 5}, [BABBBA, B, B, BA, AB, A, A, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 18, position = 6}, [BABBBA, B, B, BA, AB, A, AB, a, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 19, position = 6}, [BABBBA, B, B, BA, AB, A, AB, A, a, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 17, position = 7}, [BABBBA, B, B, BA, AB, A, AB, A, A, b, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 18, position = 8}, [BABBBA, B, B, BA, AB, A, AB, A, AB, a, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 19, position = 8}, [BABBBA, B, B, BA, AB, A, AB, A, AB, A, b, b, b, a, a, b, a, a, b, a]), (Step   { rule = 18, position = 9}, [BABBBA, B, B, BA, AB, A, AB, A, AB, AB, b, b, a, a, b, a, a, b, a]), (Step   { rule = 20, position = 9}, [BABBBA, B, B, BA, AB, A, AB, A, AB, ABB, b, a, a, b, a, a, b, a]), (Step   { rule = 22, position = 9}, [BABBBA, B, B, BA, AB, A, AB, A, AB, ABBB, a, a, b, a, a, b, a]), (Step   { rule = 23, position = 9}, [BABBBA, B, B, BA, AB, A, AB, A, AB, ABBBA, a, b, a, a, b, a]), (Step   { rule = 25, position = 9}, [BABBBA, B, B, BA, AB, A, AB, A, AB, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 20, position = 8}, [BABBBA, B, B, BA, AB, A, AB, A, ABB, a, b, b, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 21, position = 8}, [BABBBA, B, B, BA, AB, A, AB, A, ABB, A, b, b, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 18, position = 9}, [BABBBA, B, B, BA, AB, A, AB, A, ABB, AB, b, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 20, position = 9}, [BABBBA, B, B, BA, AB, A, AB, A, ABB, ABB, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 22, position = 9}, [BABBBA, B, B, BA, AB, A, AB, A, ABB, ABBB, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 23, position = 9}, [BABBBA, B, B, BA, AB, A, AB, A, ABB, ABBBA, a, b, a, a, b, a, a, b, a]), (Step   { rule = 25, position = 9}, [BABBBA, B, B, BA, AB, A, AB, A, ABB, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 22, position = 8}, [BABBBA, B, B, BA, AB, A, AB, A, ABBB, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 23, position = 8}, [BABBBA, B, B, BA, AB, A, AB, A, ABBBA, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 25, position = 8}, [BABBBA, B, B, BA, AB, A, AB, A, b, a, b, b, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 18, position = 7}, [BABBBA, B, B, BA, AB, A, AB, AB, a, b, b, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 19, position = 7}, [BABBBA, B, B, BA, AB, A, AB, AB, A, b, b, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 18, position = 8}, [BABBBA, B, B, BA, AB, A, AB, AB, AB, b, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 20, position = 8}, [BABBBA, B, B, BA, AB, A, AB, AB, ABB, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 22, position = 8}, [BABBBA, B, B, BA, AB, A, AB, AB, ABBB, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 23, position = 8}, [BABBBA, B, B, BA, AB, A, AB, AB, ABBBA, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 25, position = 8}, [BABBBA, B, B, BA, AB, A, AB, AB, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 20, position = 7}, [BABBBA, B, B, BA, AB, A, AB, ABB, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 21, position = 7}, [BABBBA, B, B, BA, AB, A, AB, ABB, A, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 18, position = 8}, [BABBBA, B, B, BA, AB, A, AB, ABB, AB, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 20, position = 8}, [BABBBA, B, B, BA, AB, A, AB, ABB, ABB, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 22, position = 8}, [BABBBA, B, B, BA, AB, A, AB, ABB, ABBB, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 23, position = 8}, [BABBBA, B, B, BA, AB, A, AB, ABB, ABBBA, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 25, position = 8}, [BABBBA, B, B, BA, AB, A, AB, ABB, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 22, position = 7}, [BABBBA, B, B, BA, AB, A, AB, ABBB, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 23, position = 7}, [BABBBA, B, B, BA, AB, A, AB, ABBBA, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 25, position = 7}, [BABBBA, B, B, BA, AB, A, AB, b, a, b, b, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 20, position = 6}, [BABBBA, B, B, BA, AB, A, ABB, a, b, b, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 21, position = 6}, [BABBBA, B, B, BA, AB, A, ABB, A, b, b, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 18, position = 7}, [BABBBA, B, B, BA, AB, A, ABB, AB, b, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 20, position = 7}, [BABBBA, B, B, BA, AB, A, ABB, ABB, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 22, position = 7}, [BABBBA, B, B, BA, AB, A, ABB, ABBB, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 23, position = 7}, [BABBBA, B, B, BA, AB, A, ABB, ABBBA, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 25, position = 7}, [BABBBA, B, B, BA, AB, A, ABB, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 22, position = 6}, [BABBBA, B, B, BA, AB, A, ABBB, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 23, position = 6}, [BABBBA, B, B, BA, AB, A, ABBBA, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 25, position = 6}, [BABBBA, B, B, BA, AB, A, b, a, b, b, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 18, position = 5}, [BABBBA, B, B, BA, AB, AB, a, b, b, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 19, position = 5}, [BABBBA, B, B, BA, AB, AB, A, b, b, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 18, position = 6}, [BABBBA, B, B, BA, AB, AB, AB, b, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 20, position = 6}, [BABBBA, B, B, BA, AB, AB, ABB, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 22, position = 6}, [BABBBA, B, B, BA, AB, AB, ABBB, a, a, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 23, position = 6}, [BABBBA, B, B, BA, AB, AB, ABBBA, a, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 25, position = 6}, [BABBBA, B, B, BA, AB, AB, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 20, position = 5}, [BABBBA, B, B, BA, AB, ABB, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 21, position = 5}, [BABBBA, B, B, BA, AB, ABB, A, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 18, position = 6}, [BABBBA, B, B, BA, AB, ABB, AB, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 20, position = 6}, [BABBBA, B, B, BA, AB, ABB, ABB, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 22, position = 6}, [BABBBA, B, B, BA, AB, ABB, ABBB, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 23, position = 6}, [BABBBA, B, B, BA, AB, ABB, ABBBA, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]), (Step   { rule = 25, position = 6}, [BABBBA, B, B, BA, AB, ABB, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a])], to = [BABBBA, B, B, BA, AB, ABB, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, b, b, b, a, a, b, a, a, b, a, a, b, a, a, b, a]}

**************************************************
skeleton: (26,16)\Loop{98}[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14257, clauses: 52744
last 14257 length 52744

Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 0.462804787000
  min duration 0.080603990000
  total durat. 1.694144782000
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.104357285000
  min duration 3.104357285000
  total durat. 3.104357285000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 642
      , num_strict_rules = 642
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 209
      , total_length = 4314}
    , self = 107
    , parent = Nothing
    , duration = 3.104357285000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:18:26.639471401 UTC
    , finish = 2025-09-03 11:18:29.743828686 UTC
    , thread_cap_info = ("ThreadId 146", 0, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 0.263483730000
  min duration 0.060691150000
  total durat. 1.398383494000
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.142458730000
  min duration 3.142458730000
  total durat. 3.142458730000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 642
      , num_strict_rules = 642
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 209
      , total_length = 4314}
    , self = 108
    , parent = Nothing
    , duration = 3.142458730000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:18:26.639478893 UTC
    , finish = 2025-09-03 11:18:29.781937623 UTC
    , thread_cap_info = ("ThreadId 148", 0, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 5.371813648000
  min duration 4.552855634000
  total durat. 9.924669282000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 56
      , num_strict_rules = 30
      , num_top_rules = 30
      , num_weak_rules = 26
      , alphabet_size = 28
      , total_length = 199}
    , self = 121
    , parent = Nothing
    , duration = 4.552855634000
    , status = Success
    , start = 2025-09-03 11:18:31.338232204 UTC
    , finish = 2025-09-03 11:18:35.891087838 UTC
    , thread_cap_info = ("ThreadId 179", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 55
      , num_strict_rules = 29
      , num_top_rules = 29
      , num_weak_rules = 26
      , alphabet_size = 28
      , total_length = 195}
    , self = 133
    , parent = Nothing
    , duration = 5.371813648000
    , status = Success
    , start = 2025-09-03 11:18:36.342230987 UTC
    , finish = 2025-09-03 11:18:41.714044635 UTC
    , thread_cap_info = ("ThreadId 195", 2, False)}
Except "<<timeout>>" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 9.047013235000
  min duration 9.047013235000
  total durat. 9.047013235000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 26
      , alphabet_size = 19
      , total_length = 134}
    , self = 120
    , parent = Nothing
    , duration = 9.047013235000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 11:18:25.256644541 UTC
    , finish = 2025-09-03 11:18:34.303657776 UTC
    , thread_cap_info = ("ThreadId 114", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 5
  max duration 2.537944950000
  min duration 0.599348691000
  total durat. 6.617097524000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 58
      , num_strict_rules = 32
      , num_top_rules = 32
      , num_weak_rules = 26
      , alphabet_size = 28
      , total_length = 207}
    , self = 100
    , parent = Nothing
    , duration = 1.792246651000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:18:26.572663831 UTC
    , finish = 2025-09-03 11:18:28.364910482 UTC
    , thread_cap_info = ("ThreadId 143", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 57
      , num_strict_rules = 31
      , num_top_rules = 31
      , num_weak_rules = 26
      , alphabet_size = 28
      , total_length = 203}
    , self = 112
    , parent = Nothing
    , duration = 2.537944950000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:18:28.568241013 UTC
    , finish = 2025-09-03 11:18:31.106185963 UTC
    , thread_cap_info = ("ThreadId 162", 2, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 4.121676221000
  min duration 3.570586440000
  total durat. 7.692262661000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 26
      , alphabet_size = 19
      , total_length = 134}
    , self = 109
    , parent = Nothing
    , duration = 3.570586440000
    , status = Fail
    , start = 2025-09-03 11:18:26.779238333 UTC
    , finish = 2025-09-03 11:18:30.349824773 UTC
    , thread_cap_info = ("ThreadId 150", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 26
      , alphabet_size = 19
      , total_length = 123}
    , self = 144
    , parent = Nothing
    , duration = 4.121676221000
    , status = Fail
    , start = 2025-09-03 11:18:43.116913117 UTC
    , finish = 2025-09-03 11:18:47.238589338 UTC
    , thread_cap_info = ("ThreadId 215", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 2.485883380000
  min duration 1.789097319000
  total durat. 4.274980699000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 56
      , num_strict_rules = 30
      , num_top_rules = 30
      , num_weak_rules = 26
      , alphabet_size = 28
      , total_length = 199}
    , self = 123
    , parent = Nothing
    , duration = 1.789097319000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:18:34.209241618 UTC
    , finish = 2025-09-03 11:18:35.998338937 UTC
    , thread_cap_info = ("ThreadId 182", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 55
      , num_strict_rules = 29
      , num_top_rules = 29
      , num_weak_rules = 26
      , alphabet_size = 28
      , total_length = 195}
    , self = 135
    , parent = Nothing
    , duration = 2.485883380000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:18:39.258226343 UTC
    , finish = 2025-09-03 11:18:41.744109723 UTC
    , thread_cap_info = ("ThreadId 200", 2, False)}
Except "<<timeout>>" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 12.023146392000
  min duration 12.023146392000
  total durat. 12.023146392000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 26
      , alphabet_size = 19
      , total_length = 134}
    , self = 143
    , parent = Nothing
    , duration = 12.023146392000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 11:18:34.320677736 UTC
    , finish = 2025-09-03 11:18:46.343824128 UTC
    , thread_cap_info = ("ThreadId 184", 2, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 2.559645329000
  min duration 0.475918654000
  total durat. 6.568430478000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 58
      , num_strict_rules = 32
      , num_top_rules = 32
      , num_weak_rules = 26
      , alphabet_size = 28
      , total_length = 207}
    , self = 98
    , parent = Nothing
    , duration = 1.716195211000
    , status = Success
    , start = 2025-09-03 11:18:26.57822295 UTC
    , finish = 2025-09-03 11:18:28.294418161 UTC
    , thread_cap_info = ("ThreadId 142", 2, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 57
      , num_strict_rules = 31
      , num_top_rules = 31
      , num_weak_rules = 26
      , alphabet_size = 28
      , total_length = 203}
    , self = 110
    , parent = Nothing
    , duration = 2.559645329000
    , status = Success
    , start = 2025-09-03 11:18:28.497001659 UTC
    , finish = 2025-09-03 11:18:31.056646988 UTC
    , thread_cap_info = ("ThreadId 161", 2, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 2.896565458000
  min duration 1.225760509000
  total durat. 8.650812055000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 26
      , alphabet_size = 19
      , total_length = 123}
    , self = 142
    , parent = Nothing
    , duration = 1.225760509000
    , status = Fail
    , start = 2025-09-03 11:18:41.877711484 UTC
    , finish = 2025-09-03 11:18:43.103471993 UTC
    , thread_cap_info = ("ThreadId 212", 2, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 26
      , alphabet_size = 19
      , total_length = 134}
    , self = 97
    , parent = Nothing
    , duration = 1.638410883000
    , status = Fail
    , start = 2025-09-03 11:18:25.092156921 UTC
    , finish = 2025-09-03 11:18:26.730567804 UTC
    , thread_cap_info = ("ThreadId 110", 2, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 55
      , num_strict_rules = 29
      , num_top_rules = 29
      , num_weak_rules = 26
      , alphabet_size = 28
      , total_length = 195}
    , self = 131
    , parent = Nothing
    , duration = 2.890075205000
    , status = Fail
    , start = 2025-09-03 11:18:36.320501238 UTC
    , finish = 2025-09-03 11:18:39.210576443 UTC
    , thread_cap_info = ("ThreadId 194", 2, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 56
      , num_strict_rules = 30
      , num_top_rules = 30
      , num_weak_rules = 26
      , alphabet_size = 28
      , total_length = 199}
    , self = 119
    , parent = Nothing
    , duration = 2.896565458000
    , status = Fail
    , start = 2025-09-03 11:18:31.308154265 UTC
    , finish = 2025-09-03 11:18:34.204719723 UTC
    , thread_cap_info = ("ThreadId 178", 2, False)}
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 7.945629288000
  min duration 7.945629288000
  total durat. 7.945629288000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 26
      , alphabet_size = 19
      , total_length = 134}
    , self = 130
    , parent = Nothing
    , duration = 7.945629288000
    , status = Fail
    , start = 2025-09-03 11:18:30.359686802 UTC
    , finish = 2025-09-03 11:18:38.30531609 UTC
    , thread_cap_info = ("ThreadId 168", 2, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 17.545006702000
  min duration 17.545006702000
  total durat. 17.545006702000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 26
      , num_strict_rules = 26
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 16
      , total_length = 100}
    , self = 132
    , parent = Nothing
    , duration = 17.545006702000
    , status = Fail
    , start = 2025-09-03 11:18:23.790526939 UTC
    , finish = 2025-09-03 11:18:41.335533641 UTC
    , thread_cap_info = ("ThreadId 43", 2, False)}
Success : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 6.064459152000
  min duration 6.064459152000
  total durat. 6.064459152000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 26
      , num_strict_rules = 26
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 16
      , total_length = 100}
    , self = 145
    , parent = Nothing
    , duration = 6.064459152000
    , status = Success
    , start = 2025-09-03 11:18:41.348222247 UTC
    , finish = 2025-09-03 11:18:47.412681399 UTC
    , thread_cap_info = ("ThreadId 203", 2, False)}
Success : "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize, epsilon_digits = 6}))\n , verbose = False\n , tracing = False}"
  total number 5
  max duration 2.144654033000
  min duration 0.001950348000
  total durat. 3.546203331000
  Info
    { what = "Weight\n  { modus = Pre (Or_Else Count (GLPK   { goal = Optimize, epsilon_digits = 6}))\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 6656
      , num_strict_rules = 6656
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 256
      , total_length = 38912}
    , self = 73
    , parent = Nothing
    , duration = 1.371817003000
    , status = Success
    , start = 2025-09-03 11:18:23.874517329 UTC
    , finish = 2025-09-03 11:18:25.246334332 UTC
    , thread_cap_info = ("ThreadId 57", 3, False)}
  Info
    { what = "Weight\n  { modus = Pre (Or_Else Count (GLPK   { goal = Optimize, epsilon_digits = 6}))\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 5888
      , num_strict_rules = 5888
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 256
      , total_length = 34304}
    , self = 84
    , parent = Nothing
    , duration = 2.144654033000
    , status = Success
    , start = 2025-09-03 11:18:23.969105592 UTC
    , finish = 2025-09-03 11:18:26.113759625 UTC
    , thread_cap_info = ("ThreadId 79", 0, False)}
**************************************************
F                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                , closure = Forward\n , start_strict_only = True\n , max_closure_length
F                = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                = True})" , input_size = Size { num_rules = 26 , num_strict_rules = 26
F                , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 16 , total_length
F                = 100} , self = 132 , parent = Nothing , duration = 17.545006702000 , status
F                = Fail , start = 2025-09-03 11:18:23.790526939 UTC , finish = 2025-09-03
F                11:18:41.335533641 UTC , thread_cap_info = ("ThreadId 43", 2, False)}
F                
| S              Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| S              , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| S              , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| S              = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| S              , cpf = False}" , input_size = Size { num_rules = 23 , num_strict_rules
| S              = 23 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 16 , total_length
| S              = 88} , self = 41 , parent = Nothing , duration = 0.109054011000 , status
| S              = Success , start = 2025-09-03 11:18:23.860033871 UTC , finish = 2025-09-03
| S              11:18:23.969087882 UTC , thread_cap_info = ("ThreadId 54", 0, False)}
| S              
| | S            Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | S            epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | S            = Size { num_rules = 6656 , num_strict_rules = 6656 , num_top_rules = 0
| | S            , num_weak_rules = 0 , alphabet_size = 256 , total_length = 38912} , self
| | S            = 73 , parent = Nothing , duration = 1.371817003000 , status = Success
| | S            , start = 2025-09-03 11:18:23.874517329 UTC , finish = 2025-09-03 11:18:25.246334332
| | S            UTC , thread_cap_info = ("ThreadId 57", 3, False)}
| | S            
| | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 34 , num_strict_rules
| | | F          = 8 , num_top_rules = 8 , num_weak_rules = 26 , alphabet_size = 19 , total_length
| | | F          = 142} , self = 46 , parent = Nothing , duration = 0.175983296000 , status
| | | F          = Fail , start = 2025-09-03 11:18:23.928948074 UTC , finish = 2025-09-03
| | | F          11:18:24.10493137 UTC , thread_cap_info = ("ThreadId 75", 2, False)}
| | | F          
| | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 34 , num_strict_rules
| | | | F        = 8 , num_top_rules = 8 , num_weak_rules = 26 , alphabet_size = 19 , total_length
| | | | F        = 142} , self = 47 , parent = Nothing , duration = 0.153798609000 , status
| | | | F        = Fail , start = 2025-09-03 11:18:23.9529646 UTC , finish = 2025-09-03
| | | | F        11:18:24.106763209 UTC , thread_cap_info = ("ThreadId 76", 2, False)}
| | | | F        
| S | | |        
| S | | |        Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| S | | |        epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| S | | |        = Size { num_rules = 5888 , num_strict_rules = 5888 , num_top_rules = 0
| S | | |        , num_weak_rules = 0 , alphabet_size = 256 , total_length = 34304} , self
| S | | |        = 84 , parent = Nothing , duration = 2.144654033000 , status = Success
| S | | |        , start = 2025-09-03 11:18:23.969105592 UTC , finish = 2025-09-03 11:18:26.113759625
| S | | |        UTC , thread_cap_info = ("ThreadId 79", 0, False)}
| S | | |        
| | | | | F      Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | | | F      { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | | | F      = MSB_First}\n , max_size = Nothing\n , max_height = Just 3\n , initial
| | | | | F      = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | | | F      = False}" , input_size = Size { num_rules = 23 , num_strict_rules = 23
| | | | | F      , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 16 , total_length
| | | | | F      = 88} , self = 50 , parent = Nothing , duration = 0.140261698000 , status
| | | | | F      = Fail , start = 2025-09-03 11:18:24.038234018 UTC , finish = 2025-09-03
| | | | | F      11:18:24.178495716 UTC , thread_cap_info = ("ThreadId 83", 0, False)}
| | | | | F      
| | | F | |      
| | |   F |      
| | | S   |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S   |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S   |      = 34 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 26 ,
| | | S   |      alphabet_size = 19 , total_length = 142} , self = 54 , parent = Nothing
| | | S   |      , duration = 0.475918654000 , status = Success , start = 2025-09-03 11:18:24.109563642
| | | S   |      UTC , finish = 2025-09-03 11:18:24.585482296 UTC , thread_cap_info = ("ThreadId
| | | S   |      88", 2, False)}
| | | S   |      
| | | | E |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 34
| | | | E |      , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 26 , alphabet_size
| | | | E |      = 19 , total_length = 142} , self = 57 , parent = Nothing , duration =
| | | | E |      0.599348691000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | E |      11:18:24.118863649 UTC , finish = 2025-09-03 11:18:24.71821234 UTC , thread_cap_info
| | | | E |      = ("ThreadId 89", 2, False)}
| | | | E |      
| | | | | F      
| | | | | S      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S      = 60 , num_strict_rules = 34 , num_top_rules = 34 , num_weak_rules = 26
| | | | | S      , alphabet_size = 28 , total_length = 214} , self = 63 , parent = Nothing
| | | | | S      , duration = 0.846680931000 , status = Success , start = 2025-09-03 11:18:24.198223744
| | | | | S      UTC , finish = 2025-09-03 11:18:25.044904675 UTC , thread_cap_info = ("ThreadId
| | | | | S      90", 2, False)}
| | | | | S      
| | | | | | E    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 60
| | | | | | E    , num_strict_rules = 34 , num_top_rules = 34 , num_weak_rules = 26 , alphabet_size
| | | | | | E    = 28 , total_length = 214} , self = 66 , parent = Nothing , duration =
| | | | | | E    0.860735340000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | | E    11:18:24.218222131 UTC , finish = 2025-09-03 11:18:25.078957471 UTC , thread_cap_info
| | | | | | E    = ("ThreadId 91", 2, False)}
| | | | | | E    
| | | | | | | F  Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | | | | | F  { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | | | | | F  = MSB_First}\n , max_size = Nothing\n , max_height = Just 4\n , initial
| | | | | | | F  = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | | | | | F  = False}" , input_size = Size { num_rules = 23 , num_strict_rules = 23
| | | | | | | F  , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 16 , total_length
| | | | | | | F  = 88} , self = 53 , parent = Nothing , duration = 0.137751536000 , status
| | | | | | | F  = Fail , start = 2025-09-03 11:18:24.298233266 UTC , finish = 2025-09-03
| | | | | | | F  11:18:24.435984802 UTC , thread_cap_info = ("ThreadId 94", 0, False)}
| | | | | | | F  
| | | | | | | F  
| | | | | | | F  Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | | | | | F  { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | | | | | F  = MSB_First}\n , max_size = Nothing\n , max_height = Just 5\n , initial
| | | | | | | F  = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | | | | | F  = False}" , input_size = Size { num_rules = 23 , num_strict_rules = 23
| | | | | | | F  , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 16 , total_length
| | | | | | | F  = 88} , self = 56 , parent = Nothing , duration = 0.267978117000 , status
| | | | | | | F  = Fail , start = 2025-09-03 11:18:24.438229006 UTC , finish = 2025-09-03
| | | | | | | F  11:18:24.706207123 UTC , thread_cap_info = ("ThreadId 95", 0, False)}
| | | | | | | F  
| | | S | | | |  
| | |   | | | F  
| | |   E | |    
| | | F   | |    Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | F   | |    { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | F   | |    = MSB_First}\n , max_size = Nothing\n , max_height = Just 5\n , initial
| | | F   | |    = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | F   | |    = False}" , input_size = Size { num_rules = 23 , num_strict_rules = 23
| | | F   | |    , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 16 , total_length
| | | F   | |    = 88} , self = 64 , parent = Nothing , duration = 0.336257112000 , status
| | | F   | |    = Fail , start = 2025-09-03 11:18:24.718232382 UTC , finish = 2025-09-03
| | | F   | |    11:18:25.054489494 UTC , thread_cap_info = ("ThreadId 98", 0, False)}
| | | F   | |    
| | | | F | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F | |    = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | | | F | |    = 7 , num_top_rules = 7 , num_weak_rules = 26 , alphabet_size = 19 , total_length
| | | | F | |    = 134} , self = 68 , parent = Nothing , duration = 0.261445096000 , status
| | | | F | |    = Fail , start = 2025-09-03 11:18:24.8221798 UTC , finish = 2025-09-03
| | | | F | |    11:18:25.083624896 UTC , thread_cap_info = ("ThreadId 102", 2, False)}
| | | | F | |    
| | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | | | | | | F  = 7 , num_top_rules = 7 , num_weak_rules = 26 , alphabet_size = 19 , total_length
| | | | | | | F  = 134} , self = 72 , parent = Nothing , duration = 0.263483730000 , status
| | | | | | | F  = Fail , start = 2025-09-03 11:18:24.838226771 UTC , finish = 2025-09-03
| | | | | | | F  11:18:25.101710501 UTC , thread_cap_info = ("ThreadId 103", 2, False)}
| | | | | | | F  
| | | | | S | |  
| | | F |   | |  
| | | F |   | |  Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | F |   | |  { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | F |   | |  = MSB_First}\n , max_size = Nothing\n , max_height = Just 6\n , initial
| | | F |   | |  = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | F |   | |  = False}" , input_size = Size { num_rules = 23 , num_strict_rules = 23
| | | F |   | |  , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 16 , total_length
| | | F |   | |  = 88} , self = 75 , parent = Nothing , duration = 0.334910643000 , status
| | | F |   | |  = Fail , start = 2025-09-03 11:18:25.058246793 UTC , finish = 2025-09-03
| | | F |   | |  11:18:25.393157436 UTC , thread_cap_info = ("ThreadId 106", 0, False)}
| | | F |   | |  
| | | | |   E |  
| | | | F     |  
| | | | F     |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F     |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F     |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F     |  = 33 , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 26 ,
| | | | F     |  alphabet_size = 19 , total_length = 134} , self = 97 , parent = Nothing
| | | | F     |  , duration = 1.638410883000 , status = Fail , start = 2025-09-03 11:18:25.092156921
| | | | F     |  UTC , finish = 2025-09-03 11:18:26.730567804 UTC , thread_cap_info = ("ThreadId
| | | | F     |  110", 2, False)}
| | | | F     |  
| | | | | F   |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F   |  = False\n , verbose = False}" , input_size = Size { num_rules = 59 , num_strict_rules
| | | | | F   |  = 33 , num_top_rules = 33 , num_weak_rules = 26 , alphabet_size = 28 ,
| | | | | F   |  total_length = 210} , self = 78 , parent = Nothing , duration = 0.462804787000
| | | | | F   |  , status = Fail , start = 2025-09-03 11:18:25.099565825 UTC , finish =
| | | | | F   |  2025-09-03 11:18:25.562370612 UTC , thread_cap_info = ("ThreadId 112",
| | | | | F   |  2, False)}
| | | | | F   |  
| | | | | |   F  
| | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 59 , num_strict_rules
| | | | | | F    = 33 , num_top_rules = 33 , num_weak_rules = 26 , alphabet_size = 28 ,
| | | | | | F    total_length = 210} , self = 77 , parent = Nothing , duration = 0.223422702000
| | | | | | F    , status = Fail , start = 2025-09-03 11:18:25.198330827 UTC , finish =
| | | | | | F    2025-09-03 11:18:25.421753529 UTC , thread_cap_info = ("ThreadId 113",
| | | | | | F    2, False)}
| | | | | | F    
| | S | | | |    
| | E | | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | | | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 33
| | E | | | |    , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 26 , alphabet_size
| | E | | | |    = 19 , total_length = 134} , self = 120 , parent = Nothing , duration =
| | E | | | |    9.047013235000 , status = Except "<<timeout>>" , start = 2025-09-03 11:18:25.256644541
| | E | | | |    UTC , finish = 2025-09-03 11:18:34.303657776 UTC , thread_cap_info = ("ThreadId
| | E | | | |    114", 2, False)}
| | E | | | |    
| | | F | | |    
| | | F | | |    Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | F | | |    { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | F | | |    = MSB_First}\n , max_size = Nothing\n , max_height = Just 6\n , initial
| | | F | | |    = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | F | | |    = False}" , input_size = Size { num_rules = 23 , num_strict_rules = 23
| | | F | | |    , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 16 , total_length
| | | F | | |    = 88} , self = 83 , parent = Nothing , duration = 0.400395772000 , status
| | | F | | |    = Fail , start = 2025-09-03 11:18:25.399773693 UTC , finish = 2025-09-03
| | | F | | |    11:18:25.800169465 UTC , thread_cap_info = ("ThreadId 118", 0, False)}
| | | F | | |    
| | | | | | F    
| | | | | | S    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | S    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | S    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | S    = 59 , num_strict_rules = 33 , num_top_rules = 33 , num_weak_rules = 26
| | | | | | S    , alphabet_size = 28 , total_length = 210} , self = 85 , parent = Nothing
| | | | | | S    , duration = 0.969990353000 , status = Success , start = 2025-09-03 11:18:25.43825801
| | | | | | S    UTC , finish = 2025-09-03 11:18:26.408248363 UTC , thread_cap_info = ("ThreadId
| | | | | | S    119", 2, False)}
| | | | | | S    
| | | | | F |    
| | | | | E |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 59
CNF 14257 vars 52744 clauses
| | | | | E |    , num_strict_rules = 33 , num_top_rules = 33 , num_weak_rules = 26 , alphabet_size
| | | | | E |    = 28 , total_length = 210} , self = 87 , parent = Nothing , duration =
| | | | | E |    0.826821892000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | E |    11:18:25.618230272 UTC , finish = 2025-09-03 11:18:26.445052164 UTC , thread_cap_info
| | | | | E |    = ("ThreadId 126", 2, False)}
| | | | | E |    
| | | F | | |    
| S |   | | |    
| F |   | | |    Info { what = "Unlabel\n { accept_null_strict = True\n , produce_null_strict
| F |   | | |    = False\n , verbose = False\n , tracing = False}" , input_size = Size {
| F |   | | |    num_rules = 642 , num_strict_rules = 642 , num_top_rules = 0 , num_weak_rules
| F |   | | |    = 0 , alphabet_size = 209 , total_length = 4314} , self = 94 , parent =
| F |   | | |    Nothing , duration = 0.489781403000 , status = Fail , start = 2025-09-03
| F |   | | |    11:18:26.11378152 UTC , finish = 2025-09-03 11:18:26.603562923 UTC , thread_cap_info
| F |   | | |    = ("ThreadId 132", 0, False)}
| F |   | | |    
| | |   | | S    
| | |   | E      
| | | F |        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F |        = False\n , verbose = False}" , input_size = Size { num_rules = 58 , num_strict_rules
| | | F |        = 32 , num_top_rules = 32 , num_weak_rules = 26 , alphabet_size = 28 ,
| | | F |        total_length = 207} , self = 92 , parent = Nothing , duration = 0.118112065000
| | | F |        , status = Fail , start = 2025-09-03 11:18:26.452671121 UTC , finish =
| | | F |        2025-09-03 11:18:26.570783186 UTC , thread_cap_info = ("ThreadId 139",
| | | F |        2, False)}
| | | F |        
| | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 58 , num_strict_rules
| | | | | F      = 32 , num_top_rules = 32 , num_weak_rules = 26 , alphabet_size = 28 ,
| | | | | F      total_length = 207} , self = 93 , parent = Nothing , duration = 0.112767109000
| | | | | F      , status = Fail , start = 2025-09-03 11:18:26.459866405 UTC , finish =
| | | | | F      2025-09-03 11:18:26.572633514 UTC , thread_cap_info = ("ThreadId 138",
| | | | | F      2, False)}
| | | | | F      
| | | F | |      
| | |   | F      
| | | E |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 58
| | | E |        , num_strict_rules = 32 , num_top_rules = 32 , num_weak_rules = 26 , alphabet_size
| | | E |        = 28 , total_length = 207} , self = 100 , parent = Nothing , duration =
| | | E |        1.792246651000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | E |        11:18:26.572663831 UTC , finish = 2025-09-03 11:18:28.364910482 UTC , thread_cap_info
| | | E |        = ("ThreadId 143", 2, False)}
| | | E |        
| | | | | S      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S      = 58 , num_strict_rules = 32 , num_top_rules = 32 , num_weak_rules = 26
| | | | | S      , alphabet_size = 28 , total_length = 207} , self = 98 , parent = Nothing
| | | | | S      , duration = 1.716195211000 , status = Success , start = 2025-09-03 11:18:26.57822295
| | | | | S      UTC , finish = 2025-09-03 11:18:28.294418161 UTC , thread_cap_info = ("ThreadId
| | | | | S      142", 2, False)}
| | | | | S      
| F | | | |      
| E | | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| E | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 642 , num_strict_rules
| E | | | |      = 642 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 209 ,
| E | | | |      total_length = 4314} , self = 107 , parent = Nothing , duration = 3.104357285000
| E | | | |      , status = Except "AsyncCancelled" , start = 2025-09-03 11:18:26.639471401
| E | | | |      UTC , finish = 2025-09-03 11:18:29.743828686 UTC , thread_cap_info = ("ThreadId
| E | | | |      146", 0, False)}
| E | | | |      
| | | | | | E    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | E    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | E    = False\n , verbose = False}" , input_size = Size { num_rules = 642 , num_strict_rules
| | | | | | E    = 642 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 209 ,
| | | | | | E    total_length = 4314} , self = 108 , parent = Nothing , duration = 3.142458730000
| | | | | | E    , status = Except "AsyncCancelled" , start = 2025-09-03 11:18:26.639478893
| | | | | | E    UTC , finish = 2025-09-03 11:18:29.781937623 UTC , thread_cap_info = ("ThreadId
| | | | | | E    148", 0, False)}
| | | | | | E    
| | | | F | |    
| | | | F | |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | F | |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | F | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | F | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 33
| | | | F | |    , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 26 , alphabet_size
| | | | F | |    = 19 , total_length = 134} , self = 109 , parent = Nothing , duration =
| | | | F | |    3.570586440000 , status = Fail , start = 2025-09-03 11:18:26.779238333
| | | | F | |    UTC , finish = 2025-09-03 11:18:30.349824773 UTC , thread_cap_info = ("ThreadId
| | | | F | |    150", 2, False)}
| | | | F | |    
| | | | | S |    
| | | E |   |    
| | | F |   |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F |   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F |   |    = False\n , verbose = False}" , input_size = Size { num_rules = 57 , num_strict_rules
| | | F |   |    = 31 , num_top_rules = 31 , num_weak_rules = 26 , alphabet_size = 28 ,
| | | F |   |    total_length = 203} , self = 105 , parent = Nothing , duration = 0.125964569000
| | | F |   |    , status = Fail , start = 2025-09-03 11:18:28.371011651 UTC , finish =
| | | F |   |    2025-09-03 11:18:28.49697622 UTC , thread_cap_info = ("ThreadId 157", 2,
| | | F |   |    False)}
| | | F |   |    
| | | | | F |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F |    = False\n , verbose = False}" , input_size = Size { num_rules = 57 , num_strict_rules
| | | | | F |    = 31 , num_top_rules = 31 , num_weak_rules = 26 , alphabet_size = 28 ,
| | | | | F |    total_length = 203} , self = 106 , parent = Nothing , duration = 0.167926878000
| | | | | F |    , status = Fail , start = 2025-09-03 11:18:28.380389091 UTC , finish =
| | | | | F |    2025-09-03 11:18:28.548315969 UTC , thread_cap_info = ("ThreadId 158",
| | | | | F |    2, False)}
| | | | | F |    
| | | F | | |    
| | | S | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S | | |    = 57 , num_strict_rules = 31 , num_top_rules = 31 , num_weak_rules = 26
| | | S | | |    , alphabet_size = 28 , total_length = 203} , self = 110 , parent = Nothing
| | | S | | |    , duration = 2.559645329000 , status = Success , start = 2025-09-03 11:18:28.497001659
| | | S | | |    UTC , finish = 2025-09-03 11:18:31.056646988 UTC , thread_cap_info = ("ThreadId
| | | S | | |    161", 2, False)}
| | | S | | |    
| | | | | F |    
| | | | | E |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 57
| | | | | E |    , num_strict_rules = 31 , num_top_rules = 31 , num_weak_rules = 26 , alphabet_size
| | | | | E |    = 28 , total_length = 203} , self = 112 , parent = Nothing , duration =
| | | | | E |    2.537944950000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | E |    11:18:28.568241013 UTC , finish = 2025-09-03 11:18:31.106185963 UTC , thread_cap_info
| | | | | E |    = ("ThreadId 162", 2, False)}
| | | | | E |    
| E | | | | |    
|   | | | | E    
|   | | F |      
| F | |   |      Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| F | |   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | |   |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | |   |      = 33 , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 26 ,
| F | |   |      alphabet_size = 19 , total_length = 134} , self = 130 , parent = Nothing
| F | |   |      , duration = 7.945629288000 , status = Fail , start = 2025-09-03 11:18:30.359686802
| F | |   |      UTC , finish = 2025-09-03 11:18:38.30531609 UTC , thread_cap_info = ("ThreadId
| F | |   |      168", 2, False)}
| F | |   |      
| | | S   |      
| | |     E      
| | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 56 , num_strict_rules
| | | F          = 30 , num_top_rules = 30 , num_weak_rules = 26 , alphabet_size = 28 ,
| | | F          total_length = 199} , self = 118 , parent = Nothing , duration = 0.152797686000
| | | F          , status = Fail , start = 2025-09-03 11:18:31.175599447 UTC , finish =
| | | F          2025-09-03 11:18:31.328397133 UTC , thread_cap_info = ("ThreadId 174",
| | | F          2, False)}
| | | F          
| | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 56 , num_strict_rules
| | | | F        = 30 , num_top_rules = 30 , num_weak_rules = 26 , alphabet_size = 28 ,
| | | | F        total_length = 199} , self = 117 , parent = Nothing , duration = 0.118897529000
| | | | F        , status = Fail , start = 2025-09-03 11:18:31.189231674 UTC , finish =
| | | | F        2025-09-03 11:18:31.308129203 UTC , thread_cap_info = ("ThreadId 175",
| | | | F        2, False)}
| | | | F        
| | | | F        
| | | | F        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F        = 56 , num_strict_rules = 30 , num_top_rules = 30 , num_weak_rules = 26
| | | | F        , alphabet_size = 28 , total_length = 199} , self = 119 , parent = Nothing
| | | | F        , duration = 2.896565458000 , status = Fail , start = 2025-09-03 11:18:31.308154265
| | | | F        UTC , finish = 2025-09-03 11:18:34.204719723 UTC , thread_cap_info = ("ThreadId
| | | | F        178", 2, False)}
| | | | F        
| | | F |        
| | | S |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | S |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 56
| | | S |        , num_strict_rules = 30 , num_top_rules = 30 , num_weak_rules = 26 , alphabet_size
| | | S |        = 28 , total_length = 199} , self = 121 , parent = Nothing , duration =
| | | S |        4.552855634000 , status = Success , start = 2025-09-03 11:18:31.338232204
| | | S |        UTC , finish = 2025-09-03 11:18:35.891087838 UTC , thread_cap_info = ("ThreadId
| | | S |        179", 2, False)}
| | | S |        
| | | | F        
| | | | E        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | E        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | E        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | E        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 56
| | | | E        , num_strict_rules = 30 , num_top_rules = 30 , num_weak_rules = 26 , alphabet_size
| | | | E        = 28 , total_length = 199} , self = 123 , parent = Nothing , duration =
| | | | E        1.789097319000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | E        11:18:34.209241618 UTC , finish = 2025-09-03 11:18:35.998338937 UTC , thread_cap_info
| | | | E        = ("ThreadId 182", 2, False)}
| | | | E        
| | E | |        
| | E | |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | E | |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | E | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | E | |        , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 33
| | E | |        , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 26 , alphabet_size
| | E | |        = 19 , total_length = 134} , self = 143 , parent = Nothing , duration =
| | E | |        12.023146392000 , status = Except "<<timeout>>" , start = 2025-09-03 11:18:34.320677736
| | E | |        UTC , finish = 2025-09-03 11:18:46.343824128 UTC , thread_cap_info = ("ThreadId
| | E | |        184", 2, False)}
| | E | |        
| | | S |        
| | |   E        
| | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 55 , num_strict_rules
| | | F          = 29 , num_top_rules = 29 , num_weak_rules = 26 , alphabet_size = 28 ,
| | | F          total_length = 195} , self = 128 , parent = Nothing , duration = 0.202302917000
| | | F          , status = Fail , start = 2025-09-03 11:18:36.101977733 UTC , finish =
| | | F          2025-09-03 11:18:36.30428065 UTC , thread_cap_info = ("ThreadId 190", 2,
| | | F          False)}
| | | F          
| | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 55 , num_strict_rules
| | | | F        = 29 , num_top_rules = 29 , num_weak_rules = 26 , alphabet_size = 28 ,
| | | | F        total_length = 195} , self = 129 , parent = Nothing , duration = 0.166142953000
| | | | F        , status = Fail , start = 2025-09-03 11:18:36.139621178 UTC , finish =
| | | | F        2025-09-03 11:18:36.305764131 UTC , thread_cap_info = ("ThreadId 191",
| | | | F        2, False)}
| | | | F        
| | | F |        
| | |   F        
| | | F          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F          = 55 , num_strict_rules = 29 , num_top_rules = 29 , num_weak_rules = 26
| | | F          , alphabet_size = 28 , total_length = 195} , self = 131 , parent = Nothing
| | | F          , duration = 2.890075205000 , status = Fail , start = 2025-09-03 11:18:36.320501238
| | | F          UTC , finish = 2025-09-03 11:18:39.210576443 UTC , thread_cap_info = ("ThreadId
| | | F          194", 2, False)}
| | | F          
| | | | S        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | S        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | S        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | S        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 55
| | | | S        , num_strict_rules = 29 , num_top_rules = 29 , num_weak_rules = 26 , alphabet_size
| | | | S        = 28 , total_length = 195} , self = 133 , parent = Nothing , duration =
| | | | S        5.371813648000 , status = Success , start = 2025-09-03 11:18:36.342230987
| | | | S        UTC , finish = 2025-09-03 11:18:41.714044635 UTC , thread_cap_info = ("ThreadId
| | | | S        195", 2, False)}
| | | | S        
| F | | |        
|   | F |        
| E |   |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| E |   |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| E |   |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| E |   |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E |   |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E |   |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 55
| E |   |        , num_strict_rules = 29 , num_top_rules = 29 , num_weak_rules = 26 , alphabet_size
| E |   |        = 28 , total_length = 195} , self = 135 , parent = Nothing , duration =
| E |   |        2.485883380000 , status = Except "AsyncCancelled" , start = 2025-09-03
| E |   |        11:18:39.258226343 UTC , finish = 2025-09-03 11:18:41.744109723 UTC , thread_cap_info
| E |   |        = ("ThreadId 200", 2, False)}
| E |   |        
F | |   |        
S | |   |        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
S | |   |        , closure = Forward\n , start_strict_only = True\n , max_closure_length
S | |   |        = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
S | |   |        , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
S | |   |        max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
S | |   |        [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
S | |   |        string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
S | |   |        , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
S | |   |        = True})" , input_size = Size { num_rules = 26 , num_strict_rules = 26
S | |   |        , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 16 , total_length
S | |   |        = 100} , self = 145 , parent = Nothing , duration = 6.064459152000 , status
S | |   |        = Success , start = 2025-09-03 11:18:41.348222247 UTC , finish = 2025-09-03
S | |   |        11:18:47.412681399 UTC , thread_cap_info = ("ThreadId 203", 2, False)}
S | |   |        
| | |   S        
| E |            
| F |            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F |            = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| F |            = 7 , num_top_rules = 7 , num_weak_rules = 26 , alphabet_size = 19 , total_length
| F |            = 123} , self = 140 , parent = Nothing , duration = 0.125907878000 , status
| F |            = Fail , start = 2025-09-03 11:18:41.745452572 UTC , finish = 2025-09-03
| F |            11:18:41.87136045 UTC , thread_cap_info = ("ThreadId 209", 2, False)}
| F |            
| | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | | F          = 7 , num_top_rules = 7 , num_weak_rules = 26 , alphabet_size = 19 , total_length
| | | F          = 123} , self = 141 , parent = Nothing , duration = 0.119475332000 , status
| | | F          = Fail , start = 2025-09-03 11:18:41.758216664 UTC , finish = 2025-09-03
| | | F          11:18:41.877691996 UTC , thread_cap_info = ("ThreadId 208", 2, False)}
| | | F          
| F | |          
|   | F          
| F |            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F |            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F |            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F |            = 33 , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 26 ,
| F |            alphabet_size = 19 , total_length = 123} , self = 142 , parent = Nothing
| F |            , duration = 1.225760509000 , status = Fail , start = 2025-09-03 11:18:41.877711484
| F |            UTC , finish = 2025-09-03 11:18:43.103471993 UTC , thread_cap_info = ("ThreadId
| F |            212", 2, False)}
| F |            
| F |            
| F |            Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| F |            = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F |            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F |            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F |            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F |            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 33
| F |            , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 26 , alphabet_size
| F |            = 19 , total_length = 123} , self = 144 , parent = Nothing , duration =
| F |            4.121676221000 , status = Fail , start = 2025-09-03 11:18:43.116913117
| F |            UTC , finish = 2025-09-03 11:18:47.238589338 UTC , thread_cap_info = ("ThreadId
| F |            215", 2, False)}
| F |            
| | E            
| F              
S                
