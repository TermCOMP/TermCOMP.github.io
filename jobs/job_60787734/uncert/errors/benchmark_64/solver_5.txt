Input TRS:
    1: A(a(x1)) -> A(A(x1))
    2: A(b(x1)) -> AB(x1)
    3: AB(a(x1)) -> ABA(x1)
    4: AB(b(x1)) -> AB(B(x1))
    5: ABA(a(x1)) -> ABA(A(x1))
    6: ABA(b(x1)) -> ABAB(x1)
    7: ABAB(a(x1)) -> ABABA(x1)
    8: ABAB(b(x1)) -> ABAB(B(x1))
    9: ABABA(a(x1)) -> ABABA(A(x1))
    10: ABABA(b(x1)) -> ABABAB(x1)
    11: ABABAB(a(x1)) -> ABABABA(x1)
    12: ABABAB(b(x1)) -> ABABAB(B(x1))
    13: ABABABA(a(x1)) -> ABABABAA(x1)
    14: ABABABA(b(x1)) -> ABABABA(B(x1))
    15: ABABABAA(a(x1)) -> ABABABAAA(x1)
    16: ABABABAA(b(x1)) -> ABABABAA(B(x1))
    17: ABABABAAA(x1) -> b(a(a(b(a(x1)))))
    18: B(a(x1)) -> BA(x1)
    19: B(b(x1)) -> B(B(x1))
    20: BA(a(x1)) -> BAA(x1)
    21: BA(b(x1)) -> BA(B(x1))
    22: BAA(a(x1)) -> BAA(A(x1))
    23: BAA(b(x1)) -> BAAB(x1)
    24: BAAB(a(x1)) -> BAABA(x1)
    25: BAAB(b(x1)) -> BAAB(B(x1))
    26: BAABA(x1) -> a(b(a(b(a(b(a(a(a(x1)))))))))
Number of strict rules: 26
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #A(b(x1)) -> #AB(x1)
   #2: #ABA(b(x1)) -> #ABAB(x1)
   #3: #ABABABA(a(x1)) -> #ABABABAA(x1)
   #4: #ABABA(a(x1)) -> #ABABA(A(x1))
   #5: #ABABA(a(x1)) -> #A(x1)
   #6: #ABABAB(a(x1)) -> #ABABABA(x1)
   #7: #BAAB(a(x1)) -> #BAABA(x1)
   #8: #BAA(b(x1)) -> #BAAB(x1)
   #9: #ABABAB(b(x1)) -> #ABABAB(B(x1))
   #10: #ABABAB(b(x1)) -> #B(x1)
   #11: #ABABABA(b(x1)) -> #ABABABA(B(x1))
   #12: #ABABABA(b(x1)) -> #B(x1)
   #13: #BAAB(b(x1)) -> #BAAB(B(x1))
   #14: #BAAB(b(x1)) -> #B(x1)
   #15: #BA(a(x1)) -> #BAA(x1)
   #16: #ABAB(a(x1)) -> #ABABA(x1)
   #17: #ABABA(b(x1)) -> #ABABAB(x1)
   #18: #ABA(a(x1)) -> #ABA(A(x1))
   #19: #ABA(a(x1)) -> #A(x1)
   #20: #BAA(a(x1)) -> #BAA(A(x1))
   #21: #BAA(a(x1)) -> #A(x1)
   #22: #B(b(x1)) -> #B(B(x1))
   #23: #B(b(x1)) -> #B(x1)
   #24: #BA(b(x1)) -> #BA(B(x1))
   #25: #BA(b(x1)) -> #B(x1)
   #26: #ABABABAA(b(x1)) -> #ABABABAA(B(x1))
   #27: #ABABABAA(b(x1)) -> #B(x1)
   #28: #AB(a(x1)) -> #ABA(x1)
   #29: #A(a(x1)) -> #A(A(x1))
   #30: #A(a(x1)) -> #A(x1)
   #31: #ABAB(b(x1)) -> #ABAB(B(x1))
   #32: #ABAB(b(x1)) -> #B(x1)
   #33: #ABABABAA(a(x1)) -> #ABABABAAA(x1)
   #34: #AB(b(x1)) -> #AB(B(x1))
   #35: #AB(b(x1)) -> #B(x1)
   #36: #B(a(x1)) -> #BA(x1)
Number of SCCs: 1, DPs: 32, edges: 72
	SCC { #1..6 #8..12 #14..25 #27..32 #34..36 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: x1_2; x1_2
  #BA(x1)	weight: (/ 1 16) + x1_2; x1_2
  BAAB(x1)	weight: x1_1; x1_1
#ABABABAA(x1)	weight: (/ 1 16) + x1_2; x1_2
  ABAB(x1)	weight: (/ 1 8) + x1_1; x1_1
#ABABA(x1)	weight: (/ 1 16) + x1_2; x1_2
     b(x1)	weight: (/ 1 8) + x1_1; x1_1
   #B(x1)	weight: (/ 1 16) + x1_1; x1_1
#ABAB(x1)	weight: (/ 1 16) + x1_1; x1_1
#ABABABAAA(x1)	weight: 0; 0
    AB(x1)	weight: (/ 1 8) + x1_1; x1_1
ABABABAAA(x1)	weight: (/ 1 8) + x1_2; x1_2
#ABABABA(x1)	weight: (/ 1 16) + x1_2; x1_2
 #ABA(x1)	weight: (/ 1 16) + x1_2; x1_2
   BAA(x1)	weight: x1_2; x1_2
     B(x1)	weight: x1_1; x1_1
ABABAB(x1)	weight: (/ 1 8) + x1_1; x1_1
#BAAB(x1)	weight: x1_1; x1_1
#BAABA(x1)	weight: 0; 0
ABABABAA(x1)	weight: (/ 1 8) + x1_2; x1_2
     A(x1)	weight: (/ 1 8) + x1_2; x1_2
   #A(x1)	weight: (/ 1 16) + x1_2; x1_2
   ABA(x1)	weight: (/ 1 8) + x1_2; x1_2
#ABABAB(x1)	weight: (/ 1 16) + x1_1; x1_1
 ABABA(x1)	weight: (/ 1 8) + x1_2; x1_2
ABABABA(x1)	weight: (/ 1 8) + x1_2; x1_2
 BAABA(x1)	weight: x1_2; x1_2
 #BAA(x1)	weight: (/ 1 16) + x1_2; x1_2
  #AB(x1)	weight: (/ 1 16) + x1_1; x1_1
    BA(x1)	weight: x1_2; x1_2
    Usable rules: { 1..26 }
    Removed DPs: #8..10 #14 #22 #23 #31 #32 #34 #35
Number of SCCs: 1, DPs: 21, edges: 37
	SCC { #1..6 #11 #12 #15..19 #21 #24 #25 #27..30 #36 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
