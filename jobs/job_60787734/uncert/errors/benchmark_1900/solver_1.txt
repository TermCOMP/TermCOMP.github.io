last 1169 length 4823
CNF 1169 vars 4823 clauses
last 1212 length 5155
CNF 1212 vars 5155 clauses
last 1048 length 4369
last 1240 length 5359
CNF 1048 vars 4369 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3333, clauses: 12098
CNF 1240 vars 5359 clauses
last 19996 length 97693
last 19111 length 86694
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10660, clauses: 44350
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2563, clauses: 9325
last 3333 length 12098
last 13524 length 63281
CNF 19996 vars 97693 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8524, clauses: 35381
last 19087 length 83362
last 10660 length 44350
last 2563 length 9325
CNF 19111 vars 86694 clauses
CNF 3333 vars 12098 clauses
last 23717 length 107542
last 8524 length 35381
CNF 13524 vars 63281 clauses
CNF 2563 vars 9325 clauses
CNF 10660 vars 44350 clauses
CNF 19087 vars 83362 clauses
last 27422 length 132283
CNF 23717 vars 107542 clauses
CNF 8524 vars 35381 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2563, clauses: 9325, status: Satisfied, time: 0.63885822s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3333, clauses: 12098, status: Unsatisfied, time: 1.114425716s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8524, clauses: 35381, status: Satisfied, time: 0.494114832s
CNF 27422 vars 132283 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6477, clauses: 26469
last 6477 length 26469
last 1004 length 4211
last 1258 length 5423
CNF 1004 vars 4211 clauses
CNF 1258 vars 5423 clauses
CNF 6477 vars 26469 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2259, clauses: 8225
last 2259 length 8225
CNF 2259 vars 8225 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2259, clauses: 8225, status: Satisfied, time: 0.508886333s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 23385, clauses: 87749
last 23385 length 87749
**************************************************
summary
**************************************************
SRS with 5 rules on 4 letters       mirror
SRS with 5 rules on 4 letters       DP
SRS with 15 strict rules and 5 weak rules on 7 letters       weights
SRS with 3 strict rules and 5 weak rules on 7 letters       EDG
2 sub-proofs
  1 SRS with 2 strict rules and 5 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 1 strict rules and 5 weak rules on 6 letters       weights
  SRS with 0 strict rules and 5 weak rules on 4 letters       EDG

  2 SRS with 1 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 5 weak rules on 4 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, s] -> [s, a] {- Input 0 -}
  [b, a, b, s] -> [a, b, s, a] {- Input 1 -}
  [b, a, b, b] -> [c, s] {- Input 2 -}
  [c, s] -> [a, b, a, b] {- Input 3 -}
  [a, b, a, a] -> [b, a, b, a] {- Input 4 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [s, a] -> [a, s] {- Mirror (Input 0) -}
  [s, b, a, b] -> [a, s, b, a] {- Mirror (Input 1) -}
  [b, b, a, b] -> [s, c] {- Mirror (Input 2) -}
  [s, c] -> [b, a, b, a] {- Mirror (Input 3) -}
  [a, a, b, a] -> [a, b, a, b] {- Mirror (Input 4) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [s, a] ->= [a, s] {- DP Nontop (Mirror (Input 0)) -}
  [s, b, a, b] ->= [a, s, b, a] {- DP Nontop (Mirror (Input 1)) -}
  [b, b, a, b] ->= [s, c] {- DP Nontop (Mirror (Input 2)) -}
  [s, c] ->= [b, a, b, a] {- DP Nontop (Mirror (Input 3)) -}
  [a, a, b, a] ->= [a, b, a, b] {- DP Nontop (Mirror (Input 4)) -}
  [s#, a] |-> [s#] {- DP (Top 1) (Mirror (Input 0)) -}
  [s#, a] |-> [a#, s] {- DP (Top 0) (Mirror (Input 0)) -}
  [s#, b, a, b] |-> [s#, b, a] {- DP (Top 1) (Mirror (Input 1)) -}
  [s#, b, a, b] |-> [a#] {- DP (Top 3) (Mirror (Input 1)) -}
  [s#, b, a, b] |-> [a#, s, b, a] {- DP (Top 0) (Mirror (Input 1)) -}
  [s#, b, a, b] |-> [b#, a] {- DP (Top 2) (Mirror (Input 1)) -}
  [s#, c] |-> [a#] {- DP (Top 3) (Mirror (Input 3)) -}
  [s#, c] |-> [a#, b, a] {- DP (Top 1) (Mirror (Input 3)) -}
  [s#, c] |-> [b#, a] {- DP (Top 2) (Mirror (Input 3)) -}
  [s#, c] |-> [b#, a, b, a] {- DP (Top 0) (Mirror (Input 3)) -}
  [a#, a, b, a] |-> [a#, b] {- DP (Top 2) (Mirror (Input 4)) -}
  [a#, a, b, a] |-> [a#, b, a, b] {- DP (Top 0) (Mirror (Input 4)) -}
  [a#, a, b, a] |-> [b#] {- DP (Top 3) (Mirror (Input 4)) -}
  [a#, a, b, a] |-> [b#, a, b] {- DP (Top 1) (Mirror (Input 4)) -}
  [b#, b, a, b] |-> [s#, c] {- DP (Top 0) (Mirror (Input 2)) -}
reason
  (s, 4/1)
  (a, 2/1)
  (b, 2/1)
  (c, 4/1)
  (s#, 4/1)
  (a#, 1/1)
  (b#, 2/1)
   property Termination
has value Just True
for SRS
  [s, a] ->= [a, s] {- DP Nontop (Mirror (Input 0)) -}
  [s, b, a, b] ->= [a, s, b, a] {- DP Nontop (Mirror (Input 1)) -}
  [b, b, a, b] ->= [s, c] {- DP Nontop (Mirror (Input 2)) -}
  [s, c] ->= [b, a, b, a] {- DP Nontop (Mirror (Input 3)) -}
  [a, a, b, a] ->= [a, b, a, b] {- DP Nontop (Mirror (Input 4)) -}
  [s#, c] |-> [b#, a, b, a] {- DP (Top 0) (Mirror (Input 3)) -}
  [a#, a, b, a] |-> [a#, b, a, b] {- DP (Top 0) (Mirror (Input 4)) -}
  [b#, b, a, b] |-> [s#, c] {- DP (Top 0) (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [s#, c] |-> [b#, a, b, a] {- DP (Top 0) (Mirror (Input 3)) -}
  [b#, b, a, b] |-> [s#, c] {- DP (Top 0) (Mirror (Input 2)) -}
  [s, a] ->= [a, s] {- DP Nontop (Mirror (Input 0)) -}
  [s, b, a, b] ->= [a, s, b, a] {- DP Nontop (Mirror (Input 1)) -}
  [b, b, a, b] ->= [s, c] {- DP Nontop (Mirror (Input 2)) -}
  [s, c] ->= [b, a, b, a] {- DP Nontop (Mirror (Input 3)) -}
  [a, a, b, a] ->= [a, b, a, b] {- DP Nontop (Mirror (Input 4)) -}
reason
  ( s
  , Wk  / 0A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( a
  , Wk  / 0A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( c
  , Wk  / 6A 9A 9A - \
        | 6A 9A 9A - |
        | 3A 6A 6A - |
        \ -  -  -  - / )
  ( s#
  , Wk  / 1A 2A 4A - \
        | 1A 2A 4A - |
        | 1A 2A 4A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 1A 1A 2A - \
        | 1A 1A 2A - |
        | 1A 1A 2A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [b#, b, a, b] |-> [s#, c] {- DP (Top 0) (Mirror (Input 2)) -}
  [s, a] ->= [a, s] {- DP Nontop (Mirror (Input 0)) -}
  [s, b, a, b] ->= [a, s, b, a] {- DP Nontop (Mirror (Input 1)) -}
  [b, b, a, b] ->= [s, c] {- DP Nontop (Mirror (Input 2)) -}
  [s, c] ->= [b, a, b, a] {- DP Nontop (Mirror (Input 3)) -}
  [a, a, b, a] ->= [a, b, a, b] {- DP Nontop (Mirror (Input 4)) -}
reason
  (s, 0/1)
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (s#, 0/1)
  (b#, 1/1)
   property Termination
has value Just True
for SRS
  [s, a] ->= [a, s] {- DP Nontop (Mirror (Input 0)) -}
  [s, b, a, b] ->= [a, s, b, a] {- DP Nontop (Mirror (Input 1)) -}
  [b, b, a, b] ->= [s, c] {- DP Nontop (Mirror (Input 2)) -}
  [s, c] ->= [b, a, b, a] {- DP Nontop (Mirror (Input 3)) -}
  [a, a, b, a] ->= [a, b, a, b] {- DP Nontop (Mirror (Input 4)) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [a#, a, b, a] |-> [a#, b, a, b] {- DP (Top 0) (Mirror (Input 4)) -}
  [s, a] ->= [a, s] {- DP Nontop (Mirror (Input 0)) -}
  [s, b, a, b] ->= [a, s, b, a] {- DP Nontop (Mirror (Input 1)) -}
  [b, b, a, b] ->= [s, c] {- DP Nontop (Mirror (Input 2)) -}
  [s, c] ->= [b, a, b, a] {- DP Nontop (Mirror (Input 3)) -}
  [a, a, b, a] ->= [a, b, a, b] {- DP Nontop (Mirror (Input 4)) -}
reason
  ( s
  , Wk  / 9A 12A 12A - \
        | 9A 9A  12A - |
        | 9A 9A  12A - |
        \ -  -   -   - / )
  ( a
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 3A 3A 3A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 3A 3A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( c
  , Wk  / 0A  0A  0A  - \
        | 0A  0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( a#
  , Wk  / 13A 14A 14A - \
        | 13A 14A 14A - |
        | 13A 14A 14A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [s, a] ->= [a, s] {- DP Nontop (Mirror (Input 0)) -}
  [s, b, a, b] ->= [a, s, b, a] {- DP Nontop (Mirror (Input 1)) -}
  [b, b, a, b] ->= [s, c] {- DP Nontop (Mirror (Input 2)) -}
  [s, c] ->= [b, a, b, a] {- DP Nontop (Mirror (Input 3)) -}
  [a, a, b, a] ->= [a, b, a, b] {- DP Nontop (Mirror (Input 4)) -}
reason
  EDG

**************************************************
skeleton: \Mirror(5,4)\Deepee(15/5,7)\Weight(3/5,7)\EDG[(2/5,6)\Matrix{\Arctic}{3}(1/5,6)\Weight(0/5,4)\EDG[],(1/5,5)\Matrix{\Arctic}{3}(0/5,4)\EDG[]]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))CNF 23385 vars 87749 clauses
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 1.905663801000
  min duration 0.037383951000
  total durat. 5.508816635000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 72
      , num_strict_rules = 12
      , num_top_rules = 12
      , num_weak_rules = 60
      , alphabet_size = 16
      , total_length = 608}
    , self = 93
    , parent = Nothing
    , duration = 1.453608090000
    , status = Fail
    , start = 2025-09-03 13:35:14.443434247 UTC
    , finish = 2025-09-03 13:35:15.897042337 UTC
    , thread_cap_info = ("ThreadId 130", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 60
      , num_strict_rules = 60
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 16
      , total_length = 536}
    , self = 91
    , parent = Nothing
    , duration = 1.580105700000
    , status = Fail
    , start = 2025-09-03 13:35:14.043423821 UTC
    , finish = 2025-09-03 13:35:15.623529521 UTC
    , thread_cap_info = ("ThreadId 85", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 82
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 76
      , alphabet_size = 18
      , total_length = 696}
    , self = 98
    , parent = Nothing
    , duration = 1.905663801000
    , status = Fail
    , start = 2025-09-03 13:35:14.223469633 UTC
    , finish = 2025-09-03 13:35:16.129133434 UTC
    , thread_cap_info = ("ThreadId 116", 0, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 2.349234357000
  min duration 0.083038482000
  total durat. 6.012690372000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 72
      , num_strict_rules = 12
      , num_top_rules = 12
      , num_weak_rules = 60
      , alphabet_size = 16
      , total_length = 608}
    , self = 92
    , parent = Nothing
    , duration = 1.320525325000
    , status = Fail
    , start = 2025-09-03 13:35:14.464295662 UTC
    , finish = 2025-09-03 13:35:15.784820987 UTC
    , thread_cap_info = ("ThreadId 131", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 60
      , num_strict_rules = 60
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 16
      , total_length = 536}
    , self = 90
    , parent = Nothing
    , duration = 1.523980309000
    , status = Fail
    , start = 2025-09-03 13:35:14.063422958 UTC
    , finish = 2025-09-03 13:35:15.587403267 UTC
    , thread_cap_info = ("ThreadId 87", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 82
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 76
      , alphabet_size = 18
      , total_length = 696}
    , self = 105
    , parent = Nothing
    , duration = 2.349234357000
    , status = Fail
    , start = 2025-09-03 13:35:14.245209749 UTC
    , finish = 2025-09-03 13:35:16.594444106 UTC
    , thread_cap_info = ("ThreadId 117", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.214501790000
  min duration 0.814503140000
  total durat. 2.029004930000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 6
      , total_length = 44}
    , self = 97
    , parent = Nothing
    , duration = 1.214501790000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:35:14.883448878 UTC
    , finish = 2025-09-03 13:35:16.097950668 UTC
    , thread_cap_info = ("ThreadId 135", 3, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.368493234000
  min duration 0.718742550000
  total durat. 2.087235784000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 6
      , total_length = 44}
    , self = 94
    , parent = Nothing
    , duration = 1.368493234000
    , status = Success
    , start = 2025-09-03 13:35:14.643448474 UTC
    , finish = 2025-09-03 13:35:16.011941708 UTC
    , thread_cap_info = ("ThreadId 134", 3, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.738508052000
  min duration 1.738508052000
  total durat. 1.738508052000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 5
      , alphabet_size = 7
      , total_length = 52}
    , self = 95
    , parent = Nothing
    , duration = 1.738508052000
    , status = Fail
    , start = 2025-09-03 13:35:14.273491556 UTC
    , finish = 2025-09-03 13:35:16.011999608 UTC
    , thread_cap_info = ("ThreadId 121", 3, False)}
**************************************************
F                  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
F                  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
F                  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
F                  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
F                  = Size { num_rules = 76 , num_strict_rules = 76 , num_top_rules = 0 , num_weak_rules
F                  = 0 , alphabet_size = 16 , total_length = 648} , self = 45 , parent = Nothing
F                  , duration = 0.174906278000 , status = Fail , start = 2025-09-03 13:35:13.903349037
F                  UTC , finish = 2025-09-03 13:35:14.078255315 UTC , thread_cap_info = ("ThreadId
F                  52", 0, False)}
F                  
| F                Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F                , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F                = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F                False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F                = Size { num_rules = 76 , num_strict_rules = 76 , num_top_rules = 0 , num_weak_rules
| F                = 0 , alphabet_size = 16 , total_length = 648} , self = 57 , parent = Nothing
| F                , duration = 0.241934665000 , status = Fail , start = 2025-09-03 13:35:13.903351617
| F                UTC , finish = 2025-09-03 13:35:14.145286282 UTC , thread_cap_info = ("ThreadId
| F                54", 0, False)}
| F                
| | F              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | F              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | F              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | F              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | F              = Size { num_rules = 5 , num_strict_rules = 5 , num_top_rules = 0 , num_weak_rules
| | F              = 0 , alphabet_size = 4 , total_length = 32} , self = 47 , parent = Nothing
| | F              , duration = 0.119717672000 , status = Fail , start = 2025-09-03 13:35:13.977904568
| | F              UTC , finish = 2025-09-03 13:35:14.09762224 UTC , thread_cap_info = ("ThreadId
| | F              77", 3, False)}
| | F              
| | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 60 , num_strict_rules
| | | F            = 60 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 16 , total_length
| | | F            = 536} , self = 91 , parent = Nothing , duration = 1.580105700000 , status
| | | F            = Fail , start = 2025-09-03 13:35:14.043423821 UTC , finish = 2025-09-03
| | | F            13:35:15.623529521 UTC , thread_cap_info = ("ThreadId 85", 1, False)}
| | | F            
| | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 60 , num_strict_rules
| | | | F          = 60 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 16 , total_length
| | | | F          = 536} , self = 90 , parent = Nothing , duration = 1.523980309000 , status
| | | | F          = Fail , start = 2025-09-03 13:35:14.063422958 UTC , finish = 2025-09-03
| | | | F          13:35:15.587403267 UTC , thread_cap_info = ("ThreadId 87", 1, False)}
| | | | F          
F | | | |          
  | F | |          
  F   | |          
S     | |          Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
S     | |          epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
S     | |          = Size { num_rules = 325 , num_strict_rules = 249 , num_top_rules = 249
S     | |          , num_weak_rules = 76 , alphabet_size = 28 , total_length = 2440} , self
S     | |          = 77 , parent = Nothing , duration = 0.101915299000 , status = Success
S     | |          , start = 2025-09-03 13:35:14.163437668 UTC , finish = 2025-09-03 13:35:14.265352967
S     | |          UTC , thread_cap_info = ("ThreadId 107", 0, False)}
S     | |          
| F   | |          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F   | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F   | |          = False\n , verbose = False}" , input_size = Size { num_rules = 82 , num_strict_rules
| F   | |          = 6 , num_top_rules = 6 , num_weak_rules = 76 , alphabet_size = 18 , total_length
| F   | |          = 696} , self = 98 , parent = Nothing , duration = 1.905663801000 , status
| F   | |          = Fail , start = 2025-09-03 13:35:14.223469633 UTC , finish = 2025-09-03
| F   | |          13:35:16.129133434 UTC , thread_cap_info = ("ThreadId 116", 0, False)}
| F   | |          
| | F | |          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | |          = False\n , verbose = False}" , input_size = Size { num_rules = 82 , num_strict_rules
| | F | |          = 6 , num_top_rules = 6 , num_weak_rules = 76 , alphabet_size = 18 , total_length
| | F | |          = 696} , self = 105 , parent = Nothing , duration = 2.349234357000 , status
| | F | |          = Fail , start = 2025-09-03 13:35:14.245209749 UTC , finish = 2025-09-03
| | F | |          13:35:16.594444106 UTC , thread_cap_info = ("ThreadId 117", 0, False)}
| | F | |          
| | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | F        = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 6 , total_length
| | | | | F        = 44} , self = 88 , parent = Nothing , duration = 0.324048637000 , status
| | | | | F        = Fail , start = 2025-09-03 13:35:14.26408409 UTC , finish = 2025-09-03
| | | | | F        13:35:14.588132727 UTC , thread_cap_info = ("ThreadId 120", 3, False)}
| | | | | F        
S | | | | |        
F | | | | |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F | | | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | | | |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | | | |        = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
F | | | | |        = 7 , total_length = 52} , self = 95 , parent = Nothing , duration = 1.738508052000
F | | | | |        , status = Fail , start = 2025-09-03 13:35:14.273491556 UTC , finish =
F | | | | |        2025-09-03 13:35:16.011999608 UTC , thread_cap_info = ("ThreadId 121",
F | | | | |        3, False)}
F | | | | |        
| | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | F      = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 6 , total_length
| | | | | | F      = 44} , self = 89 , parent = Nothing , duration = 0.583988925000 , status
| | | | | | F      = Fail , start = 2025-09-03 13:35:14.28405922 UTC , finish = 2025-09-03
| | | | | | F      13:35:14.868048145 UTC , thread_cap_info = ("ThreadId 122", 3, False)}
| | | | | | F      
| | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 72 , num_strict_rules
| | | | | | | F    = 12 , num_top_rules = 12 , num_weak_rules = 60 , alphabet_size = 16 ,
| | | | | | | F    total_length = 608} , self = 93 , parent = Nothing , duration = 1.453608090000
| | | | | | | F    , status = Fail , start = 2025-09-03 13:35:14.443434247 UTC , finish =
| | | | | | | F    2025-09-03 13:35:15.897042337 UTC , thread_cap_info = ("ThreadId 130",
| | | | | | | F    0, False)}
| | | | | | | F    
| | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 72 , num_strict_rules
| | | | | | | | F  = 12 , num_top_rules = 12 , num_weak_rules = 60 , alphabet_size = 16 ,
| | | | | | | | F  total_length = 608} , self = 92 , parent = Nothing , duration = 1.320525325000
| | | | | | | | F  , status = Fail , start = 2025-09-03 13:35:14.464295662 UTC , finish =
| | | | | | | | F  2025-09-03 13:35:15.784820987 UTC , thread_cap_info = ("ThreadId 131",
| | | | | | | | F  0, False)}
| | | | | | | | F  
| | | | | F | | |  
| | | | | S | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S | | |  = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | | S | | |  = 6 , total_length = 44} , self = 94 , parent = Nothing , duration = 1.368493234000
| | | | | S | | |  , status = Success , start = 2025-09-03 13:35:14.643448474 UTC , finish
| | | | | S | | |  = 2025-09-03 13:35:16.011941708 UTC , thread_cap_info = ("ThreadId 134",
| | | | | S | | |  3, False)}
| | | | | S | | |  
| | | | | | F | |  
| | | | | | E | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | | E | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | | | E | |  = 6 , total_length = 44} , self = 97 , parent = Nothing , duration = 1.214501790000
| | | | | | E | |  , status = Except "AsyncCancelled" , start = 2025-09-03 13:35:14.883448878
| | | | | | E | |  UTC , finish = 2025-09-03 13:35:16.097950668 UTC , thread_cap_info = ("ThreadId
| | | | | | E | |  135", 3, False)}
| | | | | | E | |  
| | | | F | | | |  
| | | F   | | | |  
| | |     | | | F  
| | |     | | F    
| | |     S |      
F | |       |      
  | |       E      
  F |              
F   |              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F   |              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F   |              = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
F   |              = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size = 5 , total_length
F   |              = 40} , self = 104 , parent = Nothing , duration = 0.208006456000 , status
F   |              = Fail , start = 2025-09-03 13:35:16.324726376 UTC , finish = 2025-09-03
F   |              13:35:16.532732832 UTC , thread_cap_info = ("ThreadId 156", 3, False)}
F   |              
| F |              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F |              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F |              = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| F |              = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| F |              = 40} , self = 103 , parent = Nothing , duration = 0.151922974000 , status
| F |              = Fail , start = 2025-09-03 13:35:16.344555395 UTC , finish = 2025-09-03
| F |              13:35:16.496478369 UTC , thread_cap_info = ("ThreadId 157", 3, False)}
| F |              
| F |              
F   |              
S   |              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S   |              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S   |              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S   |              = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
S   |              = 5 , total_length = 40} , self = 106 , parent = Nothing , duration = 0.718742550000
S   |              , status = Success , start = 2025-09-03 13:35:16.548621219 UTC , finish
S   |              = 2025-09-03 13:35:17.267363769 UTC , thread_cap_info = ("ThreadId 161",
S   |              3, False)}
S   |              
| E |              Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E |              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E |              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E |              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E |              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E |              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| E |              , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| E |              = 5 , total_length = 40} , self = 108 , parent = Nothing , duration = 0.814503140000
| E |              , status = Except "AsyncCancelled" , start = 2025-09-03 13:35:16.565153796
| E |              UTC , finish = 2025-09-03 13:35:17.379656936 UTC , thread_cap_info = ("ThreadId
| E |              162", 3, False)}
| E |              
| | F              
S |                
  E                
