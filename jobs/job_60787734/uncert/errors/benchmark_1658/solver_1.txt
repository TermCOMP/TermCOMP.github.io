last 4842 length 39927
CNF 4842 vars 39927 clauses
last 10814 length 69364
CNF 10814 vars 69364 clauses
**************************************************
summary
**************************************************
SRS with 1 rules on 2 letters       Drop
SRS with 1 rules on 2 letters       mirror
SRS with 1 rules on 2 letters       Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 52 states

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, a, b, a, b, a, a, b, a, b, a] -> [ a , b , a , b , a , a , b , a , b , a , b , a , a , b ] {- Input 0 -}
reason
  Drop
    property Termination
    has value Just True
    for SRS
      [b, a, a, b, a, b, a] -> [a, b, a, b, a, b, a, a, b] {- Dropped 5 0 (Input 0) -}
    reason
      mirror
       property Termination
    has value Just True
    for SRS
      [a, b, a, b, a, a, b] -> [ b , a , a , b , a , b , a , b , a ] {- Mirror (Dropped 5 0 (Input 0)) -}
    reason
      Matchbound
        Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 52 states

   property Termination
has value Just True
for SRS
  [b, a, a, b, a, b, a] -> [a, b, a, b, a, b, a, a, b] {- Dropped 5 0 (Input 0) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, b, a, b, a, a, b] -> [ b , a , a , b , a , b , a , b , a ] {- Mirror (Dropped 5 0 (Input 0)) -}
reason
  Matchbound
    Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 52 states

**************************************************
skeleton: (1,2)\Drop{5}{0}\Mirror(1,2)\Rfcmatchbound{1}[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 9
  max duration 2.346378479000
  min duration 0.615951506000
  total durat. 9.121095604000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 20}
    , self = 92
    , parent = Nothing
    , duration = 1.679335028000
    , status = Fail
    , start = 2025-09-03 12:54:21.962405411 UTC
    , finish = 2025-09-03 12:54:23.641740439 UTC
    , thread_cap_info = ("ThreadId 154", 1, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 22}
    , self = 104
    , parent = Nothing
    , duration = 2.346378479000
    , status = Fail
    , start = 2025-09-03 12:54:21.727004666 UTC
    , finish = 2025-09-03 12:54:24.073383145 UTC
    , thread_cap_info = ("ThreadId 118", 1, False)}
Except "AsyncCancelled" : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 4
  max duration 2.602728344000
  min duration 0.740071530000
  total durat. 8.068268493000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 18}
    , self = 113
    , parent = Nothing
    , duration = 2.342504825000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:54:22.007466468 UTC
    , finish = 2025-09-03 12:54:24.349971293 UTC
    , thread_cap_info = ("ThreadId 158", 1, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 20}
    , self = 109
    , parent = Nothing
    , duration = 2.382963794000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:54:21.966953572 UTC
    , finish = 2025-09-03 12:54:24.349917366 UTC
    , thread_cap_info = ("ThreadId 156", 1, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 18}
    , self = 112
    , parent = Nothing
    , duration = 2.602728344000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:54:21.747210897 UTC
    , finish = 2025-09-03 12:54:24.349939241 UTC
    , thread_cap_info = ("ThreadId 127", 1, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 7
  max duration 2.722951247000
  min duration 1.099994180000
  total durat. 13.055541340000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 16}
    , self = 96
    , parent = Nothing
    , duration = 1.099994180000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:54:22.746956495 UTC
    , finish = 2025-09-03 12:54:23.846950675 UTC
    , thread_cap_info = ("ThreadId 191", 2, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 18}
    , self = 107
    , parent = Nothing
    , duration = 1.679892472000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:54:22.46705267 UTC
    , finish = 2025-09-03 12:54:24.146945142 UTC
    , thread_cap_info = ("ThreadId 177", 2, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 24}
    , self = 98
    , parent = Nothing
    , duration = 1.738928689000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:54:22.148027699 UTC
    , finish = 2025-09-03 12:54:23.886956388 UTC
    , thread_cap_info = ("ThreadId 172", 1, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 22}
    , self = 101
    , parent = Nothing
    , duration = 1.779798953000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:54:22.247150105 UTC
    , finish = 2025-09-03 12:54:24.026949058 UTC
    , thread_cap_info = ("ThreadId 174", 3, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 26}
    , self = 110
    , parent = Nothing
    , duration = 1.922975774000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:54:22.426946945 UTC
    , finish = 2025-09-03 12:54:24.349922719 UTC
    , thread_cap_info = ("ThreadId 188", 1, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 20}
    , self = 105
    , parent = Nothing
    , duration = 2.111000025000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:54:21.962390278 UTC
    , finish = 2025-09-03 12:54:24.073390303 UTC
    , thread_cap_info = ("ThreadId 153", 1, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 26}
    , self = 111
    , parent = Nothing
    , duration = 2.722951247000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:54:21.626982754 UTC
    , finish = 2025-09-03 12:54:24.349934001 UTC
    , thread_cap_info = ("ThreadId 73", 1, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 7
  max duration 2.797512104000
  min duration 0.600473083000
  total durat. 11.476787777000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 20}
    , self = 97
    , parent = Nothing
    , duration = 1.519409132000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:54:22.32754142 UTC
    , finish = 2025-09-03 12:54:23.846950552 UTC
    , thread_cap_info = ("ThreadId 175", 3, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 18}
    , self = 100
    , parent = Nothing
    , duration = 1.520013962000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:54:22.446948861 UTC
    , finish = 2025-09-03 12:54:23.966962823 UTC
    , thread_cap_info = ("ThreadId 176", 3, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 22}
    , self = 95
    , parent = Nothing
    , duration = 1.520287469000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:54:22.226947566 UTC
    , finish = 2025-09-03 12:54:23.747235035 UTC
    , thread_cap_info = ("ThreadId 173", 3, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 26}
    , self = 106
    , parent = Nothing
    , duration = 1.720008845000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:54:22.406963426 UTC
    , finish = 2025-09-03 12:54:24.126972271 UTC
    , thread_cap_info = ("ThreadId 187", 1, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 24}
    , self = 91
    , parent = Nothing
    , duration = 1.799083182000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:54:21.827873737 UTC
    , finish = 2025-09-03 12:54:23.626956919 UTC
    , thread_cap_info = ("ThreadId 144", 1, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 26}
    , self = 108
    , parent = Nothing
    , duration = 2.797512104000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:54:21.552405139 UTC
    , finish = 2025-09-03 12:54:24.349917243 UTC
    , thread_cap_info = ("ThreadId 57", 0, False)}
Fail : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = False}"
  total number 3
  max duration 1.599842390000
  min duration 0.662159889000
  total durat. 3.834952683000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 18}
    , self = 79
    , parent = Nothing
    , duration = 1.572950404000
    , status = Fail
    , start = 2025-09-03 12:54:21.626964603 UTC
    , finish = 2025-09-03 12:54:23.199915007 UTC
    , thread_cap_info = ("ThreadId 99", 1, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 20}
    , self = 80
    , parent = Nothing
    , duration = 1.599842390000
    , status = Fail
    , start = 2025-09-03 12:54:21.607857472 UTC
    , finish = 2025-09-03 12:54:23.207699862 UTC
    , thread_cap_info = ("ThreadId 93", 1, False)}
Except "AsyncCancelled" : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = False}"
  total number 4
  max duration 2.259288361000
  min duration 1.139283579000
  total durat. 7.207575165000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 16}
    , self = 76
    , parent = Nothing
    , duration = 1.139283579000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:54:21.767664202 UTC
    , finish = 2025-09-03 12:54:22.906947781 UTC
    , thread_cap_info = ("ThreadId 129", 1, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 24}
    , self = 85
    , parent = Nothing
    , duration = 1.754512244000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:54:21.552436783 UTC
    , finish = 2025-09-03 12:54:23.306949027 UTC
    , thread_cap_info = ("ThreadId 58", 1, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 22}
    , self = 90
    , parent = Nothing
    , duration = 2.054490981000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:54:21.552457352 UTC
    , finish = 2025-09-03 12:54:23.606948333 UTC
    , thread_cap_info = ("ThreadId 66", 1, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 26}
    , self = 102
    , parent = Nothing
    , duration = 2.259288361000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:54:21.767685953 UTC
    , finish = 2025-09-03 12:54:24.026974314 UTC
    , thread_cap_info = ("ThreadId 137", 1, False)}
**************************************************
F                                                        Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                                                        , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                                                        = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                                                        , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                                                        = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
F                                                        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F                                                        = 26} , self = 63 , parent = Nothing , duration = 0.662159889000 , status
F                                                        = Fail , start = 2025-09-03 12:54:21.550521412 UTC , finish = 2025-09-03
F                                                        12:54:22.212681301 UTC , thread_cap_info = ("ThreadId 22", 3, False)}
F                                                        
| E                                                      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| E                                                      , closure = Forward\n , start_strict_only = True\n , max_closure_length
| E                                                      = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| E                                                      , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| E                                                      max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| E                                                      [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| E                                                      string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| E                                                      , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| E                                                      = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| E                                                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| E                                                      = 26} , self = 108 , parent = Nothing , duration = 2.797512104000 , status
| E                                                      = Except "AsyncCancelled" , start = 2025-09-03 12:54:21.552405139 UTC ,
| E                                                      finish = 2025-09-03 12:54:24.349917243 UTC , thread_cap_info = ("ThreadId
| E                                                      57", 0, False)}
| E                                                      
| | E                                                    Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | E                                                    , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | E                                                    = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | E                                                    , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | E                                                    = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | E                                                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | E                                                    = 24} , self = 85 , parent = Nothing , duration = 1.754512244000 , status
| | E                                                    = Except "AsyncCancelled" , start = 2025-09-03 12:54:21.552436783 UTC ,
| | E                                                    finish = 2025-09-03 12:54:23.306949027 UTC , thread_cap_info = ("ThreadId
| | E                                                    58", 1, False)}
| | E                                                    
| | | E                                                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | E                                                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | E                                                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | E                                                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | E                                                  = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | E                                                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | E                                                  = 22} , self = 90 , parent = Nothing , duration = 2.054490981000 , status
| | | E                                                  = Except "AsyncCancelled" , start = 2025-09-03 12:54:21.552457352 UTC ,
| | | E                                                  finish = 2025-09-03 12:54:23.606948333 UTC , thread_cap_info = ("ThreadId
| | | E                                                  66", 1, False)}
| | | E                                                  
| | | | F                                                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                                                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                                                = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | F                                                = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | F                                                = 112} , self = 62 , parent = Nothing , duration = 0.599584157000 , status
| | | | F                                                = Fail , start = 2025-09-03 12:54:21.556566467 UTC , finish = 2025-09-03
| | | | F                                                12:54:22.156150624 UTC , thread_cap_info = ("ThreadId 81", 2, False)}
| | | | F                                                
| | | | | F                                              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F                                              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F                                              = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | F                                              = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | | F                                              = 112} , self = 54 , parent = Nothing , duration = 0.311329599000 , status
| | | | | F                                              = Fail , start = 2025-09-03 12:54:21.556571599 UTC , finish = 2025-09-03
| | | | | F                                              12:54:21.867901198 UTC , thread_cap_info = ("ThreadId 83", 2, False)}
| | | | | F                                              
| | | | | | F                                            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | F                                            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | F                                            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | F                                            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | F                                            = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | F                                            = 0 , alphabet_size = 2 , total_length = 24} , self = 68 , parent = Nothing
| | | | | | F                                            , duration = 0.788503703000 , status = Fail , start = 2025-09-03 12:54:21.592085053
| | | | | | F                                            UTC , finish = 2025-09-03 12:54:22.380588756 UTC , thread_cap_info = ("ThreadId
| | | | | | F                                            76", 1, False)}
| | | | | | F                                            
| | | | | | | F                                          Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | F                                          , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | F                                          = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | F                                          , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | F                                          = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | F                                          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | F                                          = 20} , self = 80 , parent = Nothing , duration = 1.599842390000 , status
| | | | | | | F                                          = Fail , start = 2025-09-03 12:54:21.607857472 UTC , finish = 2025-09-03
| | | | | | | F                                          12:54:23.207699862 UTC , thread_cap_info = ("ThreadId 93", 1, False)}
| | | | | | | F                                          
| | | | | | | | F                                        Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | F                                        , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | F                                        = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | F                                        , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | F                                        = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | F                                        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | F                                        = 18} , self = 79 , parent = Nothing , duration = 1.572950404000 , status
| | | | | | | | F                                        = Fail , start = 2025-09-03 12:54:21.626964603 UTC , finish = 2025-09-03
| | | | | | | | F                                        12:54:23.199915007 UTC , thread_cap_info = ("ThreadId 99", 1, False)}
| | | | | | | | F                                        
| | | | | | | | | E                                      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | E                                      , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | E                                      = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | E                                      , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | E                                      max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | E                                      [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | E                                      string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | E                                      , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | E                                      = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | E                                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | E                                      = 26} , self = 111 , parent = Nothing , duration = 2.722951247000 , status
| | | | | | | | | E                                      = Except "AsyncCancelled" , start = 2025-09-03 12:54:21.626982754 UTC ,
| | | | | | | | | E                                      finish = 2025-09-03 12:54:24.349934001 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | E                                      73", 1, False)}
| | | | | | | | | E                                      
| | | | | | | | | | F                                    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | F                                    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | F                                    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | F                                    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | F                                    = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | F                                    = 0 , alphabet_size = 2 , total_length = 24} , self = 71 , parent = Nothing
| | | | | | | | | | F                                    , duration = 0.884441272000 , status = Fail , start = 2025-09-03 12:54:21.686962384
| | | | | | | | | | F                                    UTC , finish = 2025-09-03 12:54:22.571403656 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | F                                    111", 1, False)}
| | | | | | | | | | F                                    
| | | | | | | | | | | F                                  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | F                                  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | F                                  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | F                                  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | F                                  = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | F                                  = 0 , alphabet_size = 4 , total_length = 112} , self = 70 , parent = Nothing
| | | | | | | | | | | F                                  , duration = 0.744809463000 , status = Fail , start = 2025-09-03 12:54:21.716841422
| | | | | | | | | | | F                                  UTC , finish = 2025-09-03 12:54:22.461650885 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | F                                  146", 3, False)}
| | | | | | | | | | | F                                  
| | | | | | | | | | | | F                                Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | F                                , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | F                                = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | F                                False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | F                                = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | F                                = 0 , alphabet_size = 4 , total_length = 112} , self = 69 , parent = Nothing
| | | | | | | | | | | | F                                , duration = 0.688108755000 , status = Fail , start = 2025-09-03 12:54:21.726952978
| | | | | | | | | | | | F                                UTC , finish = 2025-09-03 12:54:22.415061733 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | F                                148", 3, False)}
| | | | | | | | | | | | F                                
| | | | | | | | | | | | | F                              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | F                              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | F                              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | F                              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | F                              = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | F                              = 0 , alphabet_size = 2 , total_length = 22} , self = 104 , parent = Nothing
| | | | | | | | | | | | | F                              , duration = 2.346378479000 , status = Fail , start = 2025-09-03 12:54:21.727004666
| | | | | | | | | | | | | F                              UTC , finish = 2025-09-03 12:54:24.073383145 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | F                              118", 1, False)}
| | | | | | | | | | | | | F                              
| | | | | | | | | | | | | | E                            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | E                            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | E                            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | E                            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | E                            = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | E                            = 0 , alphabet_size = 2 , total_length = 18} , self = 112 , parent = Nothing
| | | | | | | | | | | | | | E                            , duration = 2.602728344000 , status = Except "AsyncCancelled" , start
| | | | | | | | | | | | | | E                            = 2025-09-03 12:54:21.747210897 UTC , finish = 2025-09-03 12:54:24.349939241
| | | | | | | | | | | | | | E                            UTC , thread_cap_info = ("ThreadId 127", 1, False)}
| | | | | | | | | | | | | | E                            
| | | | | | | | | | | | | | | E                          Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | | | | | | | | E                          , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | | | | | | | | E                          = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | | | | | | | | E                          , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | | | | | | | | E                          = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | E                          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | E                          = 16} , self = 76 , parent = Nothing , duration = 1.139283579000 , status
| | | | | | | | | | | | | | | E                          = Except "AsyncCancelled" , start = 2025-09-03 12:54:21.767664202 UTC ,
| | | | | | | | | | | | | | | E                          finish = 2025-09-03 12:54:22.906947781 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | E                          129", 1, False)}
| | | | | | | | | | | | | | | E                          
| | | | | | | | | | | | | | | | E                        Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | | | | | | | | | E                        , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | | | | | | | | | E                        = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | | | | | | | | | E                        , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | | | | | | | | | E                        = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | E                        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | E                        = 26} , self = 102 , parent = Nothing , duration = 2.259288361000 , status
| | | | | | | | | | | | | | | | E                        = Except "AsyncCancelled" , start = 2025-09-03 12:54:21.767685953 UTC ,
| | | | | | | | | | | | | | | | E                        finish = 2025-09-03 12:54:24.026974314 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | E                        137", 1, False)}
| | | | | | | | | | | | | | | | E                        
| | | | | | | | | | | | | | | | | E                      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | | E                      , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | | E                      = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | | E                      , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | | E                      max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | | E                      [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | | E                      string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | | E                      , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | | E                      = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | E                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | E                      = 24} , self = 91 , parent = Nothing , duration = 1.799083182000 , status
| | | | | | | | | | | | | | | | | E                      = Except "AsyncCancelled" , start = 2025-09-03 12:54:21.827873737 UTC ,
| | | | | | | | | | | | | | | | | E                      finish = 2025-09-03 12:54:23.626956919 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | E                      144", 1, False)}
| | | | | | | | | | | | | | | | | E                      
| | | | | F | | | | | | | | | | | |                      
| | | | | F | | | | | | | | | | | |                      Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | F | | | | | | | | | | | |                      , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | F | | | | | | | | | | | |                      = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | F | | | | | | | | | | | |                      False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | F | | | | | | | | | | | |                      = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | F | | | | | | | | | | | |                      = 0 , alphabet_size = 2 , total_length = 22} , self = 72 , parent = Nothing
| | | | | F | | | | | | | | | | | |                      , duration = 0.756143379000 , status = Fail , start = 2025-09-03 12:54:21.90765491
| | | | | F | | | | | | | | | | | |                      UTC , finish = 2025-09-03 12:54:22.663798289 UTC , thread_cap_info = ("ThreadId
| | | | | F | | | | | | | | | | | |                      151", 1, False)}
| | | | | F | | | | | | | | | | | |                      
| | | | | | | | | | | | | | | | | | E                    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | | | E                    , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | | | E                    = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | | | E                    , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | | | E                    max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | | | E                    [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | | | E                    string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | | | E                    , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | | | E                    = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | | E                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | | E                    = 20} , self = 105 , parent = Nothing , duration = 2.111000025000 , status
| | | | | | | | | | | | | | | | | | E                    = Except "AsyncCancelled" , start = 2025-09-03 12:54:21.962390278 UTC ,
| | | | | | | | | | | | | | | | | | E                    finish = 2025-09-03 12:54:24.073390303 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | E                    153", 1, False)}
| | | | | | | | | | | | | | | | | | E                    
| | | | | | | | | | | | | | | | | | | F                  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | | | | | | F                  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | | | | | | F                  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | | | | | | F                  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | | | | | | F                  = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | | | | | | F                  = 0 , alphabet_size = 2 , total_length = 20} , self = 92 , parent = Nothing
| | | | | | | | | | | | | | | | | | | F                  , duration = 1.679335028000 , status = Fail , start = 2025-09-03 12:54:21.962405411
| | | | | | | | | | | | | | | | | | | F                  UTC , finish = 2025-09-03 12:54:23.641740439 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | | F                  154", 1, False)}
| | | | | | | | | | | | | | | | | | | F                  
| | | | | | | | | | | | | | | | | | | | E                Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | | | | | | | E                , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | | | | | | | E                = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | | | | | | | E                False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | | | | | | | E                = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | | | | | | | E                = 0 , alphabet_size = 2 , total_length = 20} , self = 109 , parent = Nothing
| | | | | | | | | | | | | | | | | | | | E                , duration = 2.382963794000 , status = Except "AsyncCancelled" , start
| | | | | | | | | | | | | | | | | | | | E                = 2025-09-03 12:54:21.966953572 UTC , finish = 2025-09-03 12:54:24.349917366
| | | | | | | | | | | | | | | | | | | | E                UTC , thread_cap_info = ("ThreadId 156", 1, False)}
| | | | | | | | | | | | | | | | | | | | E                
| | | | | | | | | | | | | | | | | | | | | E              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | | | | | | | | E              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | | | | | | | | E              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | | | | | | | | E              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | | | | | | | | E              = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | | | | | | | | E              = 0 , alphabet_size = 2 , total_length = 18} , self = 113 , parent = Nothing
| | | | | | | | | | | | | | | | | | | | | E              , duration = 2.342504825000 , status = Except "AsyncCancelled" , start
| | | | | | | | | | | | | | | | | | | | | E              = 2025-09-03 12:54:22.007466468 UTC , finish = 2025-09-03 12:54:24.349971293
| | | | | | | | | | | | | | | | | | | | | E              UTC , thread_cap_info = ("ThreadId 158", 1, False)}
| | | | | | | | | | | | | | | | | | | | | E              
| | | | | | | | | | | | | | | | | | | | | | E            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | | | | | | | | | E            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | | | | | | | | | E            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | | | | | | | | | E            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | | | | | | | | | E            = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | | | | | | | | | E            = 0 , alphabet_size = 2 , total_length = 16} , self = 73 , parent = Nothing
| | | | | | | | | | | | | | | | | | | | | | E            , duration = 0.740071530000 , status = Except "AsyncCancelled" , start
| | | | | | | | | | | | | | | | | | | | | | E            = 2025-09-03 12:54:22.047742436 UTC , finish = 2025-09-03 12:54:22.787813966
| | | | | | | | | | | | | | | | | | | | | | E            UTC , thread_cap_info = ("ThreadId 162", 1, False)}
| | | | | | | | | | | | | | | | | | | | | | E            
| | | | | | | | | | | | | | | | | | | | | | | E          Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | | | | | | | | E          , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | | | | | | | | E          = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | | | | | | | | E          , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | | | | | | | | E          max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | | | | | | | | E          [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | | | | | | | | E          string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | | | | | | | | E          , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | | | | | | | | E          = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | | | | | | | E          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | | | | | | | E          = 24} , self = 98 , parent = Nothing , duration = 1.738928689000 , status
| | | | | | | | | | | | | | | | | | | | | | | E          = Except "AsyncCancelled" , start = 2025-09-03 12:54:22.148027699 UTC ,
| | | | | | | | | | | | | | | | | | | | | | | E          finish = 2025-09-03 12:54:23.886956388 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | | | | | | E          172", 1, False)}
| | | | | | | | | | | | | | | | | | | | | | | E          
| | | | F | | | | | | | | | | | | | | | | | | |          
F | | |   | | | | | | | | | | | | | | | | | | |          
E | | |   | | | | | | | | | | | | | | | | | | |          Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E | | |   | | | | | | | | | | | | | | | | | | |          , closure = Forward\n , start_strict_only = True\n , max_closure_length
E | | |   | | | | | | | | | | | | | | | | | | |          = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
E | | |   | | | | | | | | | | | | | | | | | | |          , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
E | | |   | | | | | | | | | | | | | | | | | | |          max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
E | | |   | | | | | | | | | | | | | | | | | | |          [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
E | | |   | | | | | | | | | | | | | | | | | | |          string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
E | | |   | | | | | | | | | | | | | | | | | | |          , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E | | |   | | | | | | | | | | | | | | | | | | |          = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
E | | |   | | | | | | | | | | | | | | | | | | |          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
E | | |   | | | | | | | | | | | | | | | | | | |          = 22} , self = 95 , parent = Nothing , duration = 1.520287469000 , status
E | | |   | | | | | | | | | | | | | | | | | | |          = Except "AsyncCancelled" , start = 2025-09-03 12:54:22.226947566 UTC ,
E | | |   | | | | | | | | | | | | | | | | | | |          finish = 2025-09-03 12:54:23.747235035 UTC , thread_cap_info = ("ThreadId
E | | |   | | | | | | | | | | | | | | | | | | |          173", 3, False)}
E | | |   | | | | | | | | | | | | | | | | | | |          
| | | | E | | | | | | | | | | | | | | | | | | |          Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | E | | | | | | | | | | | | | | | | | | |          , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | E | | | | | | | | | | | | | | | | | | |          = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | E | | | | | | | | | | | | | | | | | | |          , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | E | | | | | | | | | | | | | | | | | | |          max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | E | | | | | | | | | | | | | | | | | | |          [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | E | | | | | | | | | | | | | | | | | | |          string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | E | | | | | | | | | | | | | | | | | | |          , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | E | | | | | | | | | | | | | | | | | | |          = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | E | | | | | | | | | | | | | | | | | | |          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | E | | | | | | | | | | | | | | | | | | |          = 22} , self = 101 , parent = Nothing , duration = 1.779798953000 , status
| | | | E | | | | | | | | | | | | | | | | | | |          = Except "AsyncCancelled" , start = 2025-09-03 12:54:22.247150105 UTC ,
| | | | E | | | | | | | | | | | | | | | | | | |          finish = 2025-09-03 12:54:24.026949058 UTC , thread_cap_info = ("ThreadId
| | | | E | | | | | | | | | | | | | | | | | | |          174", 3, False)}
| | | | E | | | | | | | | | | | | | | | | | | |          
| | | | | | | | | | | | | | | | | | | | | | | | F        Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | | | | | | | | | | | F        , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | | | | | | | | | | | F        = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | | | | | | | | | | | F        False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | | | | | | | | | | | F        = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | | | | | | | | | | | F        = 0 , alphabet_size = 2 , total_length = 26} , self = 74 , parent = Nothing
| | | | | | | | | | | | | | | | | | | | | | | | F        , duration = 0.615951506000 , status = Fail , start = 2025-09-03 12:54:22.247170166
| | | | | | | | | | | | | | | | | | | | | | | | F        UTC , finish = 2025-09-03 12:54:22.863121672 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | | | | | | | F        180", 1, False)}
| | | | | | | | | | | | | | | | | | | | | | | | F        
| | | | | | | | | | | | | | | | | | | | | | | | | F      Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | | | | | | | | | | | | F      , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | | | | | | | | | | | | F      = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | | | | | | | | | | | | F      False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | | | | | | | | | | | | F      = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | | | | | | | | | | | | F      = 0 , alphabet_size = 2 , total_length = 26} , self = 75 , parent = Nothing
| | | | | | | | | | | | | | | | | | | | | | | | | F      , duration = 0.617424019000 , status = Fail , start = 2025-09-03 12:54:22.247181402
| | | | | | | | | | | | | | | | | | | | | | | | | F      UTC , finish = 2025-09-03 12:54:22.864605421 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | | | | | | | | F      182", 1, False)}
| | | | | | | | | | | | | | | | | | | | | | | | | F      
| | | | | | | | | | | | | | | | | | | | | | | | | | E    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | | | | | | | | | | | E    , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | | | | | | | | | | | E    = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | | | | | | | | | | | E    , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | | | | | | | | | | | E    max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | | | | | | | | | | | E    [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | | | | | | | | | | | E    string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | | | | | | | | | | | E    , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | | | | | | | | | | | E    = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | | | | | | | | | | E    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | | | | | | | | | | E    = 20} , self = 97 , parent = Nothing , duration = 1.519409132000 , status
| | | | | | | | | | | | | | | | | | | | | | | | | | E    = Except "AsyncCancelled" , start = 2025-09-03 12:54:22.32754142 UTC ,
| | | | | | | | | | | | | | | | | | | | | | | | | | E    finish = 2025-09-03 12:54:23.846950552 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | | | | | | | | | E    175", 3, False)}
| | | | | | | | | | | | | | | | | | | | | | | | | | E    
| | | | | | F | | | | | | | | | | | | | | | | | | | |    
| | | | | | E | | | | | | | | | | | | | | | | | | | |    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | E | | | | | | | | | | | | | | | | | | | |    , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | E | | | | | | | | | | | | | | | | | | | |    = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | E | | | | | | | | | | | | | | | | | | | |    , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | E | | | | | | | | | | | | | | | | | | | |    max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | E | | | | | | | | | | | | | | | | | | | |    [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | E | | | | | | | | | | | | | | | | | | | |    string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | E | | | | | | | | | | | | | | | | | | | |    , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | E | | | | | | | | | | | | | | | | | | | |    = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | E | | | | | | | | | | | | | | | | | | | |    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | E | | | | | | | | | | | | | | | | | | | |    = 26} , self = 106 , parent = Nothing , duration = 1.720008845000 , status
| | | | | | E | | | | | | | | | | | | | | | | | | | |    = Except "AsyncCancelled" , start = 2025-09-03 12:54:22.406963426 UTC ,
| | | | | | E | | | | | | | | | | | | | | | | | | | |    finish = 2025-09-03 12:54:24.126972271 UTC , thread_cap_info = ("ThreadId
| | | | | | E | | | | | | | | | | | | | | | | | | | |    187", 1, False)}
| | | | | | E | | | | | | | | | | | | | | | | | | | |    
| | | | | | | | | | | | F | | | | | | | | | | | | | |    
| | | | | | | | | | | | E | | | | | | | | | | | | | |    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | E | | | | | | | | | | | | | |    , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | E | | | | | | | | | | | | | |    = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | E | | | | | | | | | | | | | |    , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | E | | | | | | | | | | | | | |    max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | E | | | | | | | | | | | | | |    [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | E | | | | | | | | | | | | | |    string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | E | | | | | | | | | | | | | |    , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | E | | | | | | | | | | | | | |    = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | E | | | | | | | | | | | | | |    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | E | | | | | | | | | | | | | |    = 26} , self = 110 , parent = Nothing , duration = 1.922975774000 , status
| | | | | | | | | | | | E | | | | | | | | | | | | | |    = Except "AsyncCancelled" , start = 2025-09-03 12:54:22.426946945 UTC ,
| | | | | | | | | | | | E | | | | | | | | | | | | | |    finish = 2025-09-03 12:54:24.349922719 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | E | | | | | | | | | | | | | |    188", 1, False)}
| | | | | | | | | | | | E | | | | | | | | | | | | | |    
| | | | | | | | | | | | | | | | | | | | | | | | | | | E  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | | | | | | | | | | | | E  , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | | | | | | | | | | | | E  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | | | | | | | | | | | | E  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | | | | | | | | | | | | E  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | | | | | | | | | | | | E  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | | | | | | | | | | | | E  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | | | | | | | | | | | | E  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | | | | | | | | | | | | E  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | | | | | | | | | | | E  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | | | | | | | | | | | E  = 18} , self = 100 , parent = Nothing , duration = 1.520013962000 , status
| | | | | | | | | | | | | | | | | | | | | | | | | | | E  = Except "AsyncCancelled" , start = 2025-09-03 12:54:22.446948861 UTC ,
| | | | | | | | | | | | | | | | | | | | | | | | | | | E  finish = 2025-09-03 12:54:23.966962823 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | | | | | | | | | | E  176", 3, False)}
| | | | | | | | | | | | | | | | | | | | | | | | | | | E  
| | | | | | | | | | | F | | | | | | | | | | | | | | | |  
| | | | | | | | | | | E | | | | | | | | | | | | | | | |  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | E | | | | | | | | | | | | | | | |  , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | E | | | | | | | | | | | | | | | |  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | E | | | | | | | | | | | | | | | |  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | E | | | | | | | | | | | | | | | |  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | E | | | | | | | | | | | | | | | |  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | E | | | | | | | | | | | | | | | |  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | E | | | | | | | | | | | | | | | |  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | E | | | | | | | | | | | | | | | |  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | E | | | | | | | | | | | | | | | |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | E | | | | | | | | | | | | | | | |  = 18} , self = 107 , parent = Nothing , duration = 1.679892472000 , status
| | | | | | | | | | | E | | | | | | | | | | | | | | | |  = Except "AsyncCancelled" , start = 2025-09-03 12:54:22.46705267 UTC ,
| | | | | | | | | | | E | | | | | | | | | | | | | | | |  finish = 2025-09-03 12:54:24.146945142 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | E | | | | | | | | | | | | | | | |  177", 2, False)}
| | | | | | | | | | | E | | | | | | | | | | | | | | | |  
| | | | | | | | | | F | | | | | | | | | | | | | | | | |  
| | | | | F | | | |   | | | | | | | | | | | | | | | | |  
| | | | | E | | | |   | | | | | | | | | | | | | | | | |  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | E | | | |   | | | | | | | | | | | | | | | | |  , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | E | | | |   | | | | | | | | | | | | | | | | |  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | E | | | |   | | | | | | | | | | | | | | | | |  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | E | | | |   | | | | | | | | | | | | | | | | |  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | E | | | |   | | | | | | | | | | | | | | | | |  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | E | | | |   | | | | | | | | | | | | | | | | |  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | E | | | |   | | | | | | | | | | | | | | | | |  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | E | | | |   | | | | | | | | | | | | | | | | |  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | E | | | |   | | | | | | | | | | | | | | | | |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | E | | | |   | | | | | | | | | | | | | | | | |  = 16} , self = 86 , parent = Nothing , duration = 0.600473083000 , status
| | | | | E | | | |   | | | | | | | | | | | | | | | | |  = Except "AsyncCancelled" , start = 2025-09-03 12:54:22.726951828 UTC ,
| | | | | E | | | |   | | | | | | | | | | | | | | | | |  finish = 2025-09-03 12:54:23.327424911 UTC , thread_cap_info = ("ThreadId
| | | | | E | | | |   | | | | | | | | | | | | | | | | |  190", 2, False)}
| | | | | E | | | |   | | | | | | | | | | | | | | | | |  
| | | | | | | | | | E | | | | | | | | | | | | | | | | |  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | E | | | | | | | | | | | | | | | | |  , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | E | | | | | | | | | | | | | | | | |  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | E | | | | | | | | | | | | | | | | |  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | E | | | | | | | | | | | | | | | | |  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | E | | | | | | | | | | | | | | | | |  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | E | | | | | | | | | | | | | | | | |  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | E | | | | | | | | | | | | | | | | |  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | E | | | | | | | | | | | | | | | | |  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | E | | | | | | | | | | | | | | | | |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | E | | | | | | | | | | | | | | | | |  = 16} , self = 96 , parent = Nothing , duration = 1.099994180000 , status
| | | | | | | | | | E | | | | | | | | | | | | | | | | |  = Except "AsyncCancelled" , start = 2025-09-03 12:54:22.746956495 UTC ,
| | | | | | | | | | E | | | | | | | | | | | | | | | | |  finish = 2025-09-03 12:54:23.846950675 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | E | | | | | | | | | | | | | | | | |  191", 2, False)}
| | | | | | | | | | E | | | | | | | | | | | | | | | | |  
| | | | | | | | | | | | | | | | | | | | | | E | | | | |  
| | | | | | | | | | | | | | | | | | | | | |   | F | | |  
| | | | | | | | | | | | | | | | | | | | | |   |   F | |  
| | | | | | | | | | | | | | | E | | | | | |   |     | |  
| | | | | | | | | | | | | | | S | | | | | |   |     | |  Info { what = "Mirror" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | | | | | | | | | S | | | | | |   |     | |  = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | | | | | | | | | | | | S | | | | | |   |     | |  = 112} , self = 82 , parent = Nothing , duration = 0.105515000000 , status
| | | | | | | | | | | | | | | S | | | | | |   |     | |  = Success , start = 2025-09-03 12:54:23.16697892 UTC , finish = 2025-09-03
| | | | | | | | | | | | | | | S | | | | | |   |     | |  12:54:23.27249392 UTC , thread_cap_info = ("ThreadId 199", 3, False)}
| | | | | | | | | | | | | | | S | | | | | |   |     | |  
| | | | | | | | F | | | | | | | | | | | | |   |     | |  
| | | | | | | F   | | | | | | | | | | | | |   |     | |  
| | | | | | |     | | | | | | S | | | | | |   |     | |  
| | E | | | |     | | | | | |   | | | | | |   |     | |  
| |   | | E |     | | | | | |   | | | | | |   |     | |  
| |   E |   |     | | | | | |   | | | | | |   |     | |  
| |     |   |     | | | | | |   | E | | | |   |     | |  
| |     |   |     | | | | | |   |   | F | |   |     | |  
E |     |   |     | | | | | |   |   |   | |   |     | |  
F |     |   |     | | | | | |   |   |   | |   |     | |  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
F |     |   |     | | | | | |   |   |   | |   |     | |  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
F |     |   |     | | | | | |   |   |   | |   |     | |  = Size { num_rules = 28 , num_strict_rules = 24 , num_top_rules = 24 ,
F |     |   |     | | | | | |   |   |   | |   |     | |  num_weak_rules = 4 , alphabet_size = 6 , total_length = 664} , self = 99
F |     |   |     | | | | | |   |   |   | |   |     | |  , parent = Nothing , duration = 0.101153714000 , status = Fail , start
F |     |   |     | | | | | |   |   |   | |   |     | |  = 2025-09-03 12:54:23.806961822 UTC , finish = 2025-09-03 12:54:23.908115536
F |     |   |     | | | | | |   |   |   | |   |     | |  UTC , thread_cap_info = ("ThreadId 209", 3, False)}
F |     |   |     | | | | | |   |   |   | |   |     | |  
| |     |   |     | | | | | |   |   |   | |   |     E |  
| |     |   |     | E | | | |   |   |   | |   |       |  
| |     |   |     |   | | | |   |   |   | |   E       |  
F |     |   |     |   | | | |   |   |   | |           |  
  |     |   |     |   | | | |   |   |   | |           E  
  |     E   |     |   | | | |   |   |   | |              
  |         |     |   | | | |   E   |   | |              
  |         |     |   | | F |       |   | |              
  |         |     |   | |   |       E   | |              
  |         E     |   | |   |           | |              
  |               |   E |   |           | |              
  E               |     |   |           | |              
                  |     |   |           E |              
                  |     E   |             |              
                  E         |             |              
                            E             |              
                                          E              
