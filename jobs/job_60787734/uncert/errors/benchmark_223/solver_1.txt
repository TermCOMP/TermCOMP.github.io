last 2398 length 9691
last 4061 length 20732
CNF 2398 vars 9691 clauses
CNF 4061 vars 20732 clauses
last 4884 length 38495
last 3557 length 27136
CNF 4884 vars 38495 clauses
CNF 3557 vars 27136 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8711, clauses: 31311
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13919, clauses: 49728
last 8711 length 31311
last 13919 length 49728
CNF 8711 vars 31311 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 36214, clauses: 149211
CNF 13919 vars 49728 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 28210, clauses: 116449
last 36214 length 149211
last 28210 length 116449
CNF 28210 vars 116449 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13919, clauses: 49728, status: Satisfied, time: 0.544344904s
CNF 36214 vars 149211 clauses
last 2332 length 9439
CNF 2332 vars 9439 clauses
last 4027 length 20598
CNF 4027 vars 20598 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8711, clauses: 31311, status: Satisfied, time: 1.20261161s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13708, clauses: 48907
last 13708 length 48907
CNF 13708 vars 48907 clauses
last 2847 length 20298
CNF 2847 vars 20298 clauses
last 3847 length 28350
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13708, clauses: 48907, status: Satisfied, time: 0.392743235s
CNF 3847 vars 28350 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 35876, clauses: 147795
last 35876 length 147795
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8491, clauses: 30211
last 8491 length 30211
CNF 8491 vars 30211 clauses
CNF 35876 vars 147795 clauses
last 2266 length 9187
CNF 2266 vars 9187 clauses
last 3993 length 20464
CNF 3993 vars 20464 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 27871, clauses: 115016
last 27871 length 115016
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8491, clauses: 30211, status: Unsatisfied, time: 1.170628206s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13497, clauses: 48086
last 13497 length 48086
CNF 13497 vars 48086 clauses
CNF 27871 vars 115016 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17297, clauses: 67328
last 17297 length 67328
CNF 17297 vars 67328 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 35538, clauses: 146379
last 35538 length 146379
CNF 35538 vars 146379 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13497, clauses: 48086, status: Unsatisfied, time: 1.617892461s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 35538, clauses: 146379, status: Satisfied, time: 0.633681194s
last 2176 length 8843
CNF 2176 vars 8843 clauses
last 3928 length 20211
CNF 3928 vars 20211 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13087, clauses: 46528
last 13087 length 46528
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17297, clauses: 67328, status: Unsatisfied, time: 2.448293664s
CNF 13087 vars 46528 clauses
[Info] pool sizes (success) 16512 seen 7052 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
**************************************************
summary
**************************************************
SRS with 24 rules on 15 letters       looping derivation
from
  [B, b, a, a, a, b, a]
to
  [BA, BA, BA, B, B, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]
via 42 steps

**************************************************
proof
**************************************************
property Termination
has value Just False
for SRS
  [B, a] -> [BA] {- Input 0 -}
  [B, b] -> [B, B] {- Input 1 -}
  [BA, a] -> [BAA] {- Input 2 -}
  [BA, b] -> [BA, B] {- Input 3 -}
  [BAA, a] -> [BAA, A] {- Input 4 -}
  [BAA, b] -> [BAAB] {- Input 5 -}
  [BAAB, a] -> [BAABA] {- Input 6 -}
  [BAAB, b] -> [BAAB, B] {- Input 7 -}
  [BAABA, a] -> [BAABA, A] {- Input 8 -}
  [BAABA, b] -> [BAABAB] {- Input 9 -}
  [BAABAB, a] -> [BAABAB, A] {- Input 10 -}
  [BAABAB, b] -> [BAABABB] {- Input 11 -}
  [BAABABB, a] -> [BAABABB, A] {- Input 12 -}
  [BAABABB, b] -> [BAABABBB] {- Input 13 -}
  [BAABABBB, a] -> [BAABABBBA] {- Input 14 -}
  [BAABABBB, b] -> [BAABABBB, B] {- Input 15 -}
  [BAABABBBA, a] -> [BAABABBBAA] {- Input 16 -}
  [BAABABBBA, b] -> [BAABABBBA, B] {- Input 17 -}
  [BAABABBBAA] -> [a, b, a] {- Input 18 -}
  [A, a] -> [A, A] {- Input 19 -}
  [A, b] -> [AB] {- Input 20 -}
  [AB, a] -> [ABA] {- Input 21 -}
  [AB, b] -> [AB, B] {- Input 22 -}
  [ABA] -> [b, a, a, b, a, b, b, b, a, a] {- Input 23 -}
reason
  Nontermination
    Derive   { from = [B, b, a, a, a, b, a], via = [(Step   { rule = 1, position = 0}, [B, B, a, a, a, b, a]), (Step   { rule = 0, position = 1}, [B, BA, a, a, b, a]), (Step   { rule = 2, position = 1}, [B, BAA, a, b, a]), (Step   { rule = 4, position = 1}, [B, BAA, A, b, a]), (Step   { rule = 20, position = 2}, [B, BAA, AB, a]), (Step   { rule = 21, position = 2}, [B, BAA, ABA]), (Step   { rule = 23, position = 2}, [B, BAA, b, a, a, b, a, b, b, b, a, a]), (Step   { rule = 5, position = 1}, [B, BAAB, a, a, b, a, b, b, b, a, a]), (Step   { rule = 6, position = 1}, [B, BAABA, a, b, a, b, b, b, a, a]), (Step   { rule = 8, position = 1}, [B, BAABA, A, b, a, b, b, b, a, a]), (Step   { rule = 20, position = 2}, [B, BAABA, AB, a, b, b, b, a, a]), (Step   { rule = 21, position = 2}, [B, BAABA, ABA, b, b, b, a, a]), (Step   { rule = 23, position = 2}, [B, BAABA, b, a, a, b, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 9, position = 1}, [B, BAABAB, a, a, b, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 10, position = 1}, [B, BAABAB, A, a, b, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 19, position = 2}, [B, BAABAB, A, A, b, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 20, position = 3}, [B, BAABAB, A, AB, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 21, position = 3}, [B, BAABAB, A, ABA, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 23, position = 3}, [B, BAABAB, A, b, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 20, position = 2}, [B, BAABAB, AB, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 21, position = 2}, [B, BAABAB, ABA, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 23, position = 2}, [B, BAABAB, b, a, a, b, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 11, position = 1}, [B, BAABABB, a, a, b, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 12, position = 1}, [B, BAABABB, A, a, b, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 19, position = 2}, [B, BAABABB, A, A, b, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 20, position = 3}, [B, BAABABB, A, AB, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 21, position = 3}, [B, BAABABB, A, ABA, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 23, position = 3}, [B, BAABABB, A, b, a, a, b, a, b, b, b, a, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 20, position = 2}, [B, BAABABB, AB, a, a, b, a, b, b, b, a, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 21, position = 2}, [B, BAABABB, ABA, a, b, a, b, b, b, a, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 23, position = 2}, [B, BAABABB, b, a, a, b, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 13, position = 1}, [B, BAABABBB, a, a, b, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 14, position = 1}, [B, BAABABBBA, a, b, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 16, position = 1}, [B, BAABABBBAA, b, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 18, position = 1}, [B, a, b, a, b, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 0, position = 0}, [BA, b, a, b, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 3, position = 0}, [BA, B, a, b, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 0, position = 1}, [BA, BA, b, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 3, position = 1}, [BA, BA, B, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 0, position = 2}, [BA, BA, BA, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 3, position = 2}, [BA, BA, BA, B, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]), (Step   { rule = 1, position = 3}, [BA, BA, BA, B, B, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a])], to = [BA, BA, BA, B, B, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, a, b, a, b, b, b, a, a, b, b, b, a, a, b, b, b, a, a]}

**************************************************
skeleton: (24,15)\Loop{42}[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13778, clauses: 51637
last 13778 length 51637
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************CNF 13778 vars 51637 clauses

Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.378909202000
  min duration 0.143809040000
  total durat. 1.338946243000
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.328675462000
  min duration 3.328675462000
  total durat. 3.328675462000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 606
      , num_strict_rules = 606
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 192
      , total_length = 3960}
    , self = 105
    , parent = Nothing
    , duration = 3.328675462000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:12:02.149000642 UTC
    , finish = 2025-09-03 11:12:05.477676104 UTC
    , thread_cap_info = ("ThreadId 148", 3, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.387233308000
  min duration 0.173966121000
  total durat. 1.760109923000
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.319142012000
  min duration 3.319142012000
  total durat. 3.319142012000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 606
      , num_strict_rules = 606
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 192
      , total_length = 3960}
    , self = 106
    , parent = Nothing
    , duration = 3.319142012000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:12:02.167946039 UTC
    , finish = 2025-09-03 11:12:05.487088051 UTC
    , thread_cap_info = ("ThreadId 150", 3, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.499483864000
  min duration 2.499483864000
  total durat. 2.499483864000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 53
      , num_strict_rules = 29
      , num_top_rules = 29
      , num_weak_rules = 24
      , alphabet_size = 26
      , total_length = 188}
    , self = 103
    , parent = Nothing
    , duration = 2.499483864000
    , status = Success
    , start = 2025-09-03 11:12:02.949505758 UTC
    , finish = 2025-09-03 11:12:05.448989622 UTC
    , thread_cap_info = ("ThreadId 160", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 1.562339995000
  min duration 1.261260121000
  total durat. 4.168969857000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 54
      , num_strict_rules = 30
      , num_top_rules = 30
      , num_weak_rules = 24
      , alphabet_size = 26
      , total_length = 192}
    , self = 94
    , parent = Nothing
    , duration = 1.261260121000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:12:00.948575076 UTC
    , finish = 2025-09-03 11:12:02.209835197 UTC
    , thread_cap_info = ("ThreadId 129", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 55
      , num_strict_rules = 31
      , num_top_rules = 31
      , num_weak_rules = 24
      , alphabet_size = 26
      , total_length = 196}
    , self = 68
    , parent = Nothing
    , duration = 1.345369741000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:11:59.422663745 UTC
    , finish = 2025-09-03 11:12:00.768033486 UTC
    , thread_cap_info = ("ThreadId 93", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 9
      , num_top_rules = 9
      , num_weak_rules = 24
      , alphabet_size = 18
      , total_length = 138}
    , self = 80
    , parent = Nothing
    , duration = 1.562339995000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:11:59.727890005 UTC
    , finish = 2025-09-03 11:12:01.29023 UTC
    , thread_cap_info = ("ThreadId 101", 2, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 3.045153977000
  min duration 3.045153977000
  total durat. 3.045153977000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 32
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 24
      , alphabet_size = 18
      , total_length = 128}
    , self = 114
    , parent = Nothing
    , duration = 3.045153977000
    , status = Fail
    , start = 2025-09-03 11:12:03.208149418 UTC
    , finish = 2025-09-03 11:12:06.253303395 UTC
    , thread_cap_info = ("ThreadId 162", 2, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 1.487827699000
  min duration 0.888014811000
  total durat. 3.556429393000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 55
      , num_strict_rules = 31
      , num_top_rules = 31
      , num_weak_rules = 24
      , alphabet_size = 26
      , total_length = 196}
    , self = 62
    , parent = Nothing
    , duration = 1.180586883000
    , status = Success
    , start = 2025-09-03 11:11:59.416018502 UTC
    , finish = 2025-09-03 11:12:00.596605385 UTC
    , thread_cap_info = ("ThreadId 91", 2, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 9
      , num_top_rules = 9
      , num_weak_rules = 24
      , alphabet_size = 18
      , total_length = 138}
    , self = 76
    , parent = Nothing
    , duration = 1.487827699000
    , status = Success
    , start = 2025-09-03 11:11:59.64708256 UTC
    , finish = 2025-09-03 11:12:01.134910259 UTC
    , thread_cap_info = ("ThreadId 99", 2, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 2.302757621000
  min duration 1.330609629000
  total durat. 3.633367250000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 32
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 24
      , alphabet_size = 18
      , total_length = 128}
    , self = 101
    , parent = Nothing
    , duration = 1.330609629000
    , status = Fail
    , start = 2025-09-03 11:12:01.827154126 UTC
    , finish = 2025-09-03 11:12:03.157763755 UTC
    , thread_cap_info = ("ThreadId 139", 2, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 53
      , num_strict_rules = 29
      , num_top_rules = 29
      , num_weak_rules = 24
      , alphabet_size = 26
      , total_length = 188}
    , self = 102
    , parent = Nothing
    , duration = 2.302757621000
    , status = Fail
    , start = 2025-09-03 11:12:02.510988012 UTC
    , finish = 2025-09-03 11:12:04.813745633 UTC
    , thread_cap_info = ("ThreadId 158", 2, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 7.250523247000
  min duration 7.250523247000
  total durat. 7.250523247000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 24
      , num_strict_rules = 24
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 15
      , total_length = 92}
    , self = 115
    , parent = Nothing
    , duration = 7.250523247000
    , status = Fail
    , start = 2025-09-03 11:11:59.079419211 UTC
    , finish = 2025-09-03 11:12:06.329942458 UTC
    , thread_cap_info = ("ThreadId 35", 3, False)}
Success : "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize, epsilon_digits = 6}))\n , verbose = False\n , tracing = False}"
  total number 4
  max duration 2.393648675000
  min duration 0.002114661000
  total durat. 3.603877390000
  Info
    { what = "Weight\n  { modus = Pre (Or_Else Count (GLPK   { goal = Optimize, epsilon_digits = 6}))\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 5400
      , num_strict_rules = 5400
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 225
      , total_length = 31500}
    , self = 59
    , parent = Nothing
    , duration = 1.203923087000
    , status = Success
    , start = 2025-09-03 11:11:59.144416653 UTC
    , finish = 2025-09-03 11:12:00.34833974 UTC
    , thread_cap_info = ("ThreadId 55", 0, False)}
  Info
    { what = "Weight\n  { modus = Pre (Or_Else Count (GLPK   { goal = Optimize, epsilon_digits = 6}))\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 4950
      , num_strict_rules = 4950
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 225
      , total_length = 28800}
    , self = 88
    , parent = Nothing
    , duration = 2.393648675000
    , status = Success
    , start = 2025-09-03 11:11:59.465542307 UTC
    , finish = 2025-09-03 11:12:01.859190982 UTC
    , thread_cap_info = ("ThreadId 96", 3, False)}
**************************************************
F                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                , closure = Forward\n , start_strict_only = True\n , max_closure_length
F                = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                = True})" , input_size = Size { num_rules = 24 , num_strict_rules = 24
F                , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 15 , total_length
F                = 92} , self = 115 , parent = Nothing , duration = 7.250523247000 , status
F                = Fail , start = 2025-09-03 11:11:59.079419211 UTC , finish = 2025-09-03
F                11:12:06.329942458 UTC , thread_cap_info = ("ThreadId 35", 3, False)}
F                
| S              Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| S              epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| S              = Size { num_rules = 5400 , num_strict_rules = 5400 , num_top_rules = 0
| S              , num_weak_rules = 0 , alphabet_size = 225 , total_length = 31500} , self
| S              = 59 , parent = Nothing , duration = 1.203923087000 , status = Success
| S              , start = 2025-09-03 11:11:59.144416653 UTC , finish = 2025-09-03 11:12:00.34833974
| S              UTC , thread_cap_info = ("ThreadId 55", 0, False)}
| S              
| | S            Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | S            { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | S            = MSB_First}\n , max_size = Nothing\n , max_height = Just 2\n , initial
| | S            = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | S            = False}" , input_size = Size { num_rules = 23 , num_strict_rules = 23
| | S            , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 15 , total_length
| | S            = 88} , self = 41 , parent = Nothing , duration = 0.108663340000 , status
| | S            = Success , start = 2025-09-03 11:11:59.164979424 UTC , finish = 2025-09-03
| | S            11:11:59.273642764 UTC , thread_cap_info = ("ThreadId 70", 3, False)}
| | S            
| | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 55 , num_strict_rules
| | | F          = 31 , num_top_rules = 31 , num_weak_rules = 24 , alphabet_size = 26 ,
| | | F          total_length = 196} , self = 44 , parent = Nothing , duration = 0.212185032000
| | | F          , status = Fail , start = 2025-09-03 11:11:59.177362626 UTC , finish =
| | | F          2025-09-03 11:11:59.389547658 UTC , thread_cap_info = ("ThreadId 74", 2,
| | | F          False)}
| | | F          
| | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 55 , num_strict_rules
| | | | F        = 31 , num_top_rules = 31 , num_weak_rules = 24 , alphabet_size = 26 ,
| | | | F        total_length = 196} , self = 46 , parent = Nothing , duration = 0.212635421000
| | | | F        , status = Fail , start = 2025-09-03 11:11:59.203402244 UTC , finish =
| | | | F        2025-09-03 11:11:59.416037665 UTC , thread_cap_info = ("ThreadId 75", 2,
| | | | F        False)}
| | | | F        
| | | | | E      Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | E      epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | E      = Size { num_rules = 5175 , num_strict_rules = 5175 , num_top_rules = 0
| | | | | E      , num_weak_rules = 0 , alphabet_size = 225 , total_length = 30150} , self
| | | | | E      = 43 , parent = Nothing , duration = 0.109726543000 , status = Except "AsyncCancelled"
| | | | | E      , start = 2025-09-03 11:11:59.252922028 UTC , finish = 2025-09-03 11:11:59.362648571
| | | | | E      UTC , thread_cap_info = ("ThreadId 79", 3, False)}
| | | | | E      
| | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | | | | | F    = 9 , num_top_rules = 9 , num_weak_rules = 24 , alphabet_size = 18 , total_length
| | | | | | F    = 138} , self = 53 , parent = Nothing , duration = 0.378909202000 , status
| | | | | | F    = Fail , start = 2025-09-03 11:11:59.255393826 UTC , finish = 2025-09-03
| | | | | | F    11:11:59.634303028 UTC , thread_cap_info = ("ThreadId 80", 2, False)}
| | | | | | F    
| | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | | | | | | F  = 9 , num_top_rules = 9 , num_weak_rules = 24 , alphabet_size = 18 , total_length
| | | | | | | F  = 138} , self = 52 , parent = Nothing , duration = 0.294557270000 , status
| | | | | | | F  = Fail , start = 2025-09-03 11:11:59.255431749 UTC , finish = 2025-09-03
| | | | | | | F  11:11:59.549989019 UTC , thread_cap_info = ("ThreadId 81", 2, False)}
| | | | | | | F  
| | S | | | | |  
| |   | | E | |  
| |   F |   | |  
| | S   |   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S   |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S   |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S   |   | |  = 55 , num_strict_rules = 31 , num_top_rules = 31 , num_weak_rules = 24
| | S   |   | |  , alphabet_size = 26 , total_length = 196} , self = 62 , parent = Nothing
| | S   |   | |  , duration = 1.180586883000 , status = Success , start = 2025-09-03 11:11:59.416018502
| | S   |   | |  UTC , finish = 2025-09-03 11:12:00.596605385 UTC , thread_cap_info = ("ThreadId
| | S   |   | |  91", 2, False)}
| | S   |   | |  
| | |   F   | |  
| | | E     | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E     | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E     | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E     | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E     | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E     | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 55
| | | E     | |  , num_strict_rules = 31 , num_top_rules = 31 , num_weak_rules = 24 , alphabet_size
| | | E     | |  = 26 , total_length = 196} , self = 68 , parent = Nothing , duration =
| | | E     | |  1.345369741000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | E     | |  11:11:59.422663745 UTC , finish = 2025-09-03 11:12:00.768033486 UTC , thread_cap_info
| | | E     | |  = ("ThreadId 93", 2, False)}
| | | E     | |  
| | | | S   | |  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | S   | |  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | S   | |  = Size { num_rules = 4950 , num_strict_rules = 4950 , num_top_rules = 0
| | | | S   | |  , num_weak_rules = 0 , alphabet_size = 225 , total_length = 28800} , self
| | | | S   | |  = 88 , parent = Nothing , duration = 2.393648675000 , status = Success
| | | | S   | |  , start = 2025-09-03 11:11:59.465542307 UTC , finish = 2025-09-03 11:12:01.859190982
| | | | S   | |  UTC , thread_cap_info = ("ThreadId 96", 3, False)}
| | | | S   | |  
| | | | | F | |  Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | | | F | |  { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | | | F | |  = MSB_First}\n , max_size = Nothing\n , max_height = Just 3\n , initial
| | | | | F | |  = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | | | F | |  = False}" , input_size = Size { num_rules = 22 , num_strict_rules = 22
| | | | | F | |  , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 15 , total_length
| | | | | F | |  = 84} , self = 54 , parent = Nothing , duration = 0.137474114000 , status
| | | | | F | |  = Fail , start = 2025-09-03 11:11:59.548067414 UTC , finish = 2025-09-03
| | | | | F | |  11:11:59.685541528 UTC , thread_cap_info = ("ThreadId 98", 3, False)}
| | | | | F | |  
| | | | | | | F  
| | | | | | F    
| | | | | | S    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | S    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | S    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | S    = 33 , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 24 ,
| | | | | | S    alphabet_size = 18 , total_length = 138} , self = 76 , parent = Nothing
| | | | | | S    , duration = 1.487827699000 , status = Success , start = 2025-09-03 11:11:59.64708256
| | | | | | S    UTC , finish = 2025-09-03 11:12:01.134910259 UTC , thread_cap_info = ("ThreadId
| | | | | | S    99", 2, False)}
| | | | | | S    
| | | | | F |    
| | | | | F |    Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | | | F |    { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | | | F |    = MSB_First}\n , max_size = Nothing\n , max_height = Just 4\n , initial
| | | | | F |    = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | | | F |    = False}" , input_size = Size { num_rules = 22 , num_strict_rules = 22
| | | | | F |    , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 15 , total_length
| | | | | F |    = 84} , self = 55 , parent = Nothing , duration = 0.123910146000 , status
| | | | | F |    = Fail , start = 2025-09-03 11:11:59.687782522 UTC , finish = 2025-09-03
| | | | | F |    11:11:59.811692668 UTC , thread_cap_info = ("ThreadId 100", 3, False)}
| | | | | F |    
| | | | | | | E  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 33
| | | | | | | E  , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 24 , alphabet_size
| | | | | | | E  = 18 , total_length = 138} , self = 80 , parent = Nothing , duration =
| | | | | | | E  1.562339995000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | | | E  11:11:59.727890005 UTC , finish = 2025-09-03 11:12:01.29023 UTC , thread_cap_info
| | | | | | | E  = ("ThreadId 101", 2, False)}
| | | | | | | E  
| | | | | F | |  
| | | | | F | |  Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | | | F | |  { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | | | F | |  = MSB_First}\n , max_size = Nothing\n , max_height = Just 4\n , initial
| | | | | F | |  = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | | | F | |  = False}" , input_size = Size { num_rules = 22 , num_strict_rules = 22
| | | | | F | |  , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 15 , total_length
| | | | | F | |  = 84} , self = 57 , parent = Nothing , duration = 0.174667077000 , status
| | | | | F | |  = Fail , start = 2025-09-03 11:11:59.82898129 UTC , finish = 2025-09-03
| | | | | F | |  11:12:00.003648367 UTC , thread_cap_info = ("ThreadId 102", 3, False)}
| | | | | F | |  
| | | | | F | |  
| | | | | F | |  Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | | | F | |  { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | | | F | |  = MSB_First}\n , max_size = Nothing\n , max_height = Just 5\n , initial
| | | | | F | |  = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | | | F | |  = False}" , input_size = Size { num_rules = 22 , num_strict_rules = 22
| | | | | F | |  , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 15 , total_length
| | | | | F | |  = 84} , self = 58 , parent = Nothing , duration = 0.321288714000 , status
| | | | | F | |  = Fail , start = 2025-09-03 11:12:00.00708347 UTC , finish = 2025-09-03
| | | | | F | |  11:12:00.328372184 UTC , thread_cap_info = ("ThreadId 103", 3, False)}
| | | | | F | |  
| | | | | F | |  
| S | | |   | |  
| F | | |   | |  Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| F | | |   | |  { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| F | | |   | |  = MSB_First}\n , max_size = Nothing\n , max_height = Just 5\n , initial
| F | | |   | |  = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| F | | |   | |  = False}" , input_size = Size { num_rules = 22 , num_strict_rules = 22
| F | | |   | |  , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 15 , total_length
| F | | |   | |  = 84} , self = 67 , parent = Nothing , duration = 0.378225275000 , status
| F | | |   | |  = Fail , start = 2025-09-03 11:12:00.34836684 UTC , finish = 2025-09-03
| F | | |   | |  11:12:00.726592115 UTC , thread_cap_info = ("ThreadId 106", 3, False)}
| F | | |   | |  
| | S | |   | |  
| F   | |   | |  
| F   | |   | |  Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| F   | |   | |  { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| F   | |   | |  = MSB_First}\n , max_size = Nothing\n , max_height = Just 6\n , initial
| F   | |   | |  = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| F   | |   | |  = False}" , input_size = Size { num_rules = 22 , num_strict_rules = 22
| F   | |   | |  , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 15 , total_length
| F   | |   | |  = 84} , self = 78 , parent = Nothing , duration = 0.458016841000 , status
| F   | |   | |  = Fail , start = 2025-09-03 11:12:00.727089589 UTC , finish = 2025-09-03
| F   | |   | |  11:12:01.18510643 UTC , thread_cap_info = ("ThreadId 116", 3, False)}
| F   | |   | |  
| |   E |   | |  
| | F   |   | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F   |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F   |   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 54 , num_strict_rules
| | F   |   | |  = 30 , num_top_rules = 30 , num_weak_rules = 24 , alphabet_size = 26 ,
| | F   |   | |  total_length = 192} , self = 75 , parent = Nothing , duration = 0.173966121000
| | F   |   | |  , status = Fail , start = 2025-09-03 11:12:00.774575479 UTC , finish =
| | F   |   | |  2025-09-03 11:12:00.9485416 UTC , thread_cap_info = ("ThreadId 125", 2,
| | F   |   | |  False)}
| | F   |   | |  
| | | F |   | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F |   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 54 , num_strict_rules
| | | F |   | |  = 30 , num_top_rules = 30 , num_weak_rules = 24 , alphabet_size = 26 ,
| | | F |   | |  total_length = 192} , self = 74 , parent = Nothing , duration = 0.155511649000
| | | F |   | |  , status = Fail , start = 2025-09-03 11:12:00.790329747 UTC , finish =
| | | F |   | |  2025-09-03 11:12:00.945841396 UTC , thread_cap_info = ("ThreadId 124",
| | | F |   | |  2, False)}
| | | F |   | |  
| | | F |   | |  
| | | S |   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S |   | |  = 54 , num_strict_rules = 30 , num_top_rules = 30 , num_weak_rules = 24
| | | S |   | |  , alphabet_size = 26 , total_length = 192} , self = 87 , parent = Nothing
| | | S |   | |  , duration = 0.888014811000 , status = Success , start = 2025-09-03 11:12:00.945881902
| | | S |   | |  UTC , finish = 2025-09-03 11:12:01.833896713 UTC , thread_cap_info = ("ThreadId
| | | S |   | |  128", 2, False)}
| | | S |   | |  
| | F | |   | |  
| | E | |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | |   | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 54
| | E | |   | |  , num_strict_rules = 30 , num_top_rules = 30 , num_weak_rules = 24 , alphabet_size
| | E | |   | |  = 26 , total_length = 192} , self = 94 , parent = Nothing , duration =
| | E | |   | |  1.261260121000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | E | |   | |  11:12:00.948575076 UTC , finish = 2025-09-03 11:12:02.209835197 UTC , thread_cap_info
| | E | |   | |  = ("ThreadId 129", 2, False)}
| | E | |   | |  
| | | | |   S |  
| F | | |     |  
| F | | |     |  Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| F | | |     |  { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| F | | |     |  = MSB_First}\n , max_size = Nothing\n , max_height = Just 6\n , initial
| F | | |     |  = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| F | | |     |  = False}" , input_size = Size { num_rules = 22 , num_strict_rules = 22
| F | | |     |  , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 15 , total_length
| F | | |     |  = 84} , self = 85 , parent = Nothing , duration = 0.502269222000 , status
| F | | |     |  = Fail , start = 2025-09-03 11:12:01.18757997 UTC , finish = 2025-09-03
| F | | |     |  11:12:01.689849192 UTC , thread_cap_info = ("ThreadId 131", 3, False)}
| F | | |     |  
| | | | |     E  
| | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 32 , num_strict_rules
| | | | | F      = 8 , num_top_rules = 8 , num_weak_rules = 24 , alphabet_size = 18 , total_length
| | | | | F      = 128} , self = 86 , parent = Nothing , duration = 0.240936286000 , status
| | | | | F      = Fail , start = 2025-09-03 11:12:01.567886578 UTC , finish = 2025-09-03
| | | | | F      11:12:01.808822864 UTC , thread_cap_info = ("ThreadId 136", 2, False)}
| | | | | F      
| | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 32 , num_strict_rules
| | | | | | F    = 8 , num_top_rules = 8 , num_weak_rules = 24 , alphabet_size = 18 , total_length
| | | | | | F    = 128} , self = 90 , parent = Nothing , duration = 0.360002649000 , status
| | | | | | F    = Fail , start = 2025-09-03 11:12:01.587082624 UTC , finish = 2025-09-03
| | | | | | F    11:12:01.947085273 UTC , thread_cap_info = ("ThreadId 137", 2, False)}
| | | | | | F    
| F | | | | |    
|   | | | F |    
| F | | |   |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F | | |   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | | |   |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | | |   |    = 32 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 24 ,
| F | | |   |    alphabet_size = 18 , total_length = 128} , self = 101 , parent = Nothing
| F | | |   |    , duration = 1.330609629000 , status = Fail , start = 2025-09-03 11:12:01.827154126
| F | | |   |    UTC , finish = 2025-09-03 11:12:03.157763755 UTC , thread_cap_info = ("ThreadId
| F | | |   |    139", 2, False)}
| F | | |   |    
| | | S |   |    
| | |   S   |    
| | | F     |    Info { what = "Unlabel\n { accept_null_strict = True\n , produce_null_strict
| | | F     |    = False\n , verbose = False\n , tracing = False}" , input_size = Size {
| | | F     |    num_rules = 606 , num_strict_rules = 606 , num_top_rules = 0 , num_weak_rules
| | | F     |    = 0 , alphabet_size = 192 , total_length = 3960} , self = 91 , parent =
| | | F     |    Nothing , duration = 0.263272410000 , status = Fail , start = 2025-09-03
| | | F     |    11:12:01.859212724 UTC , finish = 2025-09-03 11:12:02.122485134 UTC , thread_cap_info
| | | F     |    = ("ThreadId 142", 3, False)}
| | | F     |    
| | | |     F    
| | | F          
| | | E          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | E          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E          = False\n , verbose = False}" , input_size = Size { num_rules = 606 , num_strict_rules
| | | E          = 606 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 192 ,
| | | E          total_length = 3960} , self = 105 , parent = Nothing , duration = 3.328675462000
| | | E          , status = Except "AsyncCancelled" , start = 2025-09-03 11:12:02.149000642
| | | E          UTC , finish = 2025-09-03 11:12:05.477676104 UTC , thread_cap_info = ("ThreadId
| | | E          148", 3, False)}
| | | E          
| | | | E        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | E        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | E        = False\n , verbose = False}" , input_size = Size { num_rules = 606 , num_strict_rules
| | | | E        = 606 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 192 ,
| | | | E        total_length = 3960} , self = 106 , parent = Nothing , duration = 3.319142012000
| | | | E        , status = Except "AsyncCancelled" , start = 2025-09-03 11:12:02.167946039
| | | | E        UTC , finish = 2025-09-03 11:12:05.487088051 UTC , thread_cap_info = ("ThreadId
| | | | E        150", 3, False)}
| | | | E        
| | E | |        
| | F | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | |        = False\n , verbose = False}" , input_size = Size { num_rules = 53 , num_strict_rules
| | F | |        = 29 , num_top_rules = 29 , num_weak_rules = 24 , alphabet_size = 26 ,
| | F | |        total_length = 188} , self = 99 , parent = Nothing , duration = 0.143809040000
| | F | |        , status = Fail , start = 2025-09-03 11:12:02.308402908 UTC , finish =
| | F | |        2025-09-03 11:12:02.452211948 UTC , thread_cap_info = ("ThreadId 155",
| | F | |        2, False)}
| | F | |        
| | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 53 , num_strict_rules
| | | | | F      = 29 , num_top_rules = 29 , num_weak_rules = 24 , alphabet_size = 26 ,
| | | | | F      total_length = 188} , self = 100 , parent = Nothing , duration = 0.387233308000
| | | | | F      , status = Fail , start = 2025-09-03 11:12:02.347181363 UTC , finish =
| | | | | F      2025-09-03 11:12:02.734414671 UTC , thread_cap_info = ("ThreadId 156",
| | | | | F      2, False)}
| | | | | F      
| | F | | |      
| | F | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | | |      = 53 , num_strict_rules = 29 , num_top_rules = 29 , num_weak_rules = 24
| | F | | |      , alphabet_size = 26 , total_length = 188} , self = 102 , parent = Nothing
| | F | | |      , duration = 2.302757621000 , status = Fail , start = 2025-09-03 11:12:02.510988012
| | F | | |      UTC , finish = 2025-09-03 11:12:04.813745633 UTC , thread_cap_info = ("ThreadId
| | F | | |      158", 2, False)}
| | F | | |      
| | | | | F      
| | | | | S      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | S      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | S      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | S      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | S      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | S      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 53
| | | | | S      , num_strict_rules = 29 , num_top_rules = 29 , num_weak_rules = 24 , alphabet_size
| | | | | S      = 26 , total_length = 188} , self = 103 , parent = Nothing , duration =
| | | | | S      2.499483864000 , status = Success , start = 2025-09-03 11:12:02.949505758
| | | | | S      UTC , finish = 2025-09-03 11:12:05.448989622 UTC , thread_cap_info = ("ThreadId
| | | | | S      160", 2, False)}
| | | | | S      
| F | | | |      
| F | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| F | | | |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F | | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 32
| F | | | |      , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 24 , alphabet_size
| F | | | |      = 18 , total_length = 128} , self = 114 , parent = Nothing , duration =
| F | | | |      3.045153977000 , status = Fail , start = 2025-09-03 11:12:03.208149418
| F | | | |      UTC , finish = 2025-09-03 11:12:06.253303395 UTC , thread_cap_info = ("ThreadId
| F | | | |      162", 2, False)}
| F | | | |      
| | F | | |      
| | E | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | E | | |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | E | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | E | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 53
| | E | | |      , num_strict_rules = 29 , num_top_rules = 29 , num_weak_rules = 24 , alphabet_size
| | E | | |      = 26 , total_length = 188} , self = 107 , parent = Nothing , duration =
| | E | | |      0.673186360000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | E | | |      11:12:04.830376172 UTC , finish = 2025-09-03 11:12:05.503562532 UTC , thread_cap_info
| | E | | |      = ("ThreadId 166", 2, False)}
| | E | | |      
| | | | | S      
| | | E |        
| | |   E        
| | E            
| | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F            = False\n , verbose = False}" , input_size = Size { num_rules = 51 , num_strict_rules
| | F            = 27 , num_top_rules = 27 , num_weak_rules = 24 , alphabet_size = 26 ,
| | F            total_length = 181} , self = 112 , parent = Nothing , duration = 0.207595034000
| | F            , status = Fail , start = 2025-09-03 11:12:05.511430433 UTC , finish =
| | F            2025-09-03 11:12:05.719025467 UTC , thread_cap_info = ("ThreadId 174",
| | F            2, False)}
| | F            
| | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 51 , num_strict_rules
| | | F          = 27 , num_top_rules = 27 , num_weak_rules = 24 , alphabet_size = 26 ,
| | | F          total_length = 181} , self = 113 , parent = Nothing , duration = 0.331715154000
| | | F          , status = Fail , start = 2025-09-03 11:12:05.532840459 UTC , finish =
| | | F          2025-09-03 11:12:05.864555613 UTC , thread_cap_info = ("ThreadId 175",
| | | F          2, False)}
| | | F          
| | F |          
| |   F          
| F              
F                
S                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
S                , closure = Forward\n , start_strict_only = True\n , max_closure_length
S                = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
S                , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
S                max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
S                [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
S                string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
S                , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
S                = True})" , input_size = Size { num_rules = 24 , num_strict_rules = 24
S                , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 15 , total_length
S                = 92} , self = 116 , parent = Nothing , duration = 0.565935194000 , status
S                = Success , start = 2025-09-03 11:12:06.329984084 UTC , finish = 2025-09-03
S                11:12:06.895919278 UTC , thread_cap_info = ("ThreadId 182", 3, False)}
S                
S                
