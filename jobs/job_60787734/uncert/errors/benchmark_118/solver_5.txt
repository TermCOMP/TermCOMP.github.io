Input TRS:
    1: B(a(x1)) -> BA(x1)
    2: B(b(x1)) -> B(B(x1))
    3: BA(a(x1)) -> BAA(x1)
    4: BA(b(x1)) -> BA(B(x1))
    5: BAA(a(x1)) -> BAAA(x1)
    6: BAA(b(x1)) -> BAA(B(x1))
    7: BAAA(a(x1)) -> BAAAA(x1)
    8: BAAA(b(x1)) -> BAAA(B(x1))
    9: BAAAA(a(x1)) -> BAAAAA(x1)
    10: BAAAA(b(x1)) -> BAAAA(B(x1))
    11: BAAAAA(a(x1)) -> BAAAAAA(x1)
    12: BAAAAA(b(x1)) -> BAAAAA(B(x1))
    13: BAAAAAA(a(x1)) -> BAAAAAAA(x1)
    14: BAAAAAA(b(x1)) -> BAAAAAA(B(x1))
    15: BAAAAAAA(a(x1)) -> BAAAAAAA(A(x1))
    16: BAAAAAAA(b(x1)) -> BAAAAAAAB(x1)
    17: BAAAAAAAB(a(x1)) -> BAAAAAAABA(x1)
    18: BAAAAAAAB(b(x1)) -> BAAAAAAAB(B(x1))
    19: BAAAAAAABA(x1) -> a(b(a(a(a(a(x1))))))
    20: A(a(x1)) -> A(A(x1))
    21: A(b(x1)) -> AB(x1)
    22: AB(a(x1)) -> ABA(x1)
    23: AB(b(x1)) -> AB(B(x1))
    24: ABA(a(x1)) -> ABAA(x1)
    25: ABA(b(x1)) -> ABA(B(x1))
    26: ABAA(a(x1)) -> ABAAA(x1)
    27: ABAA(b(x1)) -> ABAA(B(x1))
    28: ABAAA(a(x1)) -> ABAAAA(x1)
    29: ABAAA(b(x1)) -> ABAAA(B(x1))
    30: ABAAAA(x1) -> b(a(a(a(a(a(a(a(b(a(x1))))))))))
Number of strict rules: 30
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #B(b(x1)) -> #B(B(x1))
   #2: #B(b(x1)) -> #B(x1)
   #3: #ABAAA(b(x1)) -> #ABAAA(B(x1))
   #4: #ABAAA(b(x1)) -> #B(x1)
   #5: #BAA(b(x1)) -> #BAA(B(x1))
   #6: #BAA(b(x1)) -> #B(x1)
   #7: #BAAAAAA(a(x1)) -> #BAAAAAAA(x1)
   #8: #BAAAA(a(x1)) -> #BAAAAA(x1)
   #9: #BAAAAA(a(x1)) -> #BAAAAAA(x1)
   #10: #ABA(a(x1)) -> #ABAA(x1)
   #11: #AB(b(x1)) -> #AB(B(x1))
   #12: #AB(b(x1)) -> #B(x1)
   #13: #BAAAAA(b(x1)) -> #BAAAAA(B(x1))
   #14: #BAAAAA(b(x1)) -> #B(x1)
   #15: #BAAAAAA(b(x1)) -> #BAAAAAA(B(x1))
   #16: #BAAAAAA(b(x1)) -> #B(x1)
   #17: #ABA(b(x1)) -> #ABA(B(x1))
   #18: #ABA(b(x1)) -> #B(x1)
   #19: #A(a(x1)) -> #A(A(x1))
   #20: #A(a(x1)) -> #A(x1)
   #21: #BAAA(a(x1)) -> #BAAAA(x1)
   #22: #BAAAA(b(x1)) -> #BAAAA(B(x1))
   #23: #BAAAA(b(x1)) -> #B(x1)
   #24: #BAA(a(x1)) -> #BAAA(x1)
   #25: #ABAAA(a(x1)) -> #ABAAAA(x1)
   #26: #AB(a(x1)) -> #ABA(x1)
   #27: #ABAA(b(x1)) -> #ABAA(B(x1))
   #28: #ABAA(b(x1)) -> #B(x1)
   #29: #BAAAAAAAB(a(x1)) -> #BAAAAAAABA(x1)
   #30: #ABAA(a(x1)) -> #ABAAA(x1)
   #31: #A(b(x1)) -> #AB(x1)
   #32: #BAAAAAAA(b(x1)) -> #BAAAAAAAB(x1)
   #33: #BA(a(x1)) -> #BAA(x1)
   #34: #B(a(x1)) -> #BA(x1)
   #35: #BAAA(b(x1)) -> #BAAA(B(x1))
   #36: #BAAA(b(x1)) -> #B(x1)
   #37: #BAAAAAAA(a(x1)) -> #BAAAAAAA(A(x1))
   #38: #BAAAAAAA(a(x1)) -> #A(x1)
   #39: #BA(b(x1)) -> #BA(B(x1))
   #40: #BA(b(x1)) -> #B(x1)
   #41: #BAAAAAAAB(b(x1)) -> #BAAAAAAAB(B(x1))
   #42: #BAAAAAAAB(b(x1)) -> #B(x1)
Number of SCCs: 1, DPs: 38, edges: 86
	SCC { #1 #2 #4..24 #26..28 #30..40 #42 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: x1_2; x1_2
  #BA(x1)	weight: (/ 1 64) + x1_2; 0
  ABAA(x1)	weight: (/ 1 32) + x1_2; x1_2
BAAAAAAA(x1)	weight: x1_2; x1_2
#BAAAAAAA(x1)	weight: (/ 1 64) + x1_2; 0
#BAAAAAA(x1)	weight: (/ 1 64) + x1_2; 0
#BAAA(x1)	weight: (/ 1 64) + x1_2; 0
     b(x1)	weight: (/ 1 32) + x1_1; x1_1
   #B(x1)	weight: (/ 1 64) + x1_1; 0
#ABAAA(x1)	weight: (/ 1 64) + x1_2; 0
  BAAA(x1)	weight: x1_2; x1_2
#BAAAAAAAB(x1)	weight: x1_1; 0
#ABAAAA(x1)	weight: 0; 0
    AB(x1)	weight: (/ 1 32) + x1_1; x1_1
 BAAAA(x1)	weight: x1_2; x1_2
 ABAAA(x1)	weight: (/ 1 32) + x1_2; x1_2
 #ABA(x1)	weight: (/ 1 64) + x1_2; 0
   BAA(x1)	weight: x1_2; x1_2
BAAAAA(x1)	weight: x1_2; x1_2
ABAAAA(x1)	weight: (/ 1 32) + x1_2; x1_2
     B(x1)	weight: (/ 1 64) + x1_1; x1_1
#BAAAA(x1)	weight: (/ 1 64) + x1_2; 0
     A(x1)	weight: (/ 1 32) + x1_2; x1_2
#BAAAAAAABA(x1)	weight: 0; 0
BAAAAAAABA(x1)	weight: x1_2; x1_2
   #A(x1)	weight: (/ 1 64) + x1_2; 0
   ABA(x1)	weight: (/ 1 32) + x1_2; x1_2
#BAAAAA(x1)	weight: (/ 1 64) + x1_2; 0
BAAAAAAAB(x1)	weight: x1_1; x1_1
 #BAA(x1)	weight: (/ 1 64) + x1_2; 0
BAAAAAA(x1)	weight: x1_2; x1_2
  #AB(x1)	weight: (/ 1 64) + x1_1; 0
#ABAA(x1)	weight: (/ 1 64) + x1_2; 0
    BA(x1)	weight: x1_2; x1_2
    Usable rules: { 1..30 }
    Removed DPs: #1 #2 #11 #12 #32 #42
Number of SCCs: 1, DPs: 31, edges: 51
	SCC { #4..10 #13..24 #26..28 #30 #31 #33..36 #38..40 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
