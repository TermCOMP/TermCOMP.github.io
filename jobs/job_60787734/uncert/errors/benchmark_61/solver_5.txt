Input TRS:
    1: A(a(x1)) -> A(A(x1))
    2: A(b(x1)) -> AB(x1)
    3: AB(a(x1)) -> ABA(x1)
    4: AB(b(x1)) -> AB(B(x1))
    5: ABA(a(x1)) -> ABA(A(x1))
    6: ABA(b(x1)) -> ABAB(x1)
    7: ABAB(a(x1)) -> ABABA(x1)
    8: ABAB(b(x1)) -> ABAB(B(x1))
    9: ABABA(a(x1)) -> ABABAA(x1)
    10: ABABA(b(x1)) -> ABABA(B(x1))
    11: ABABAA(a(x1)) -> ABABAA(A(x1))
    12: ABABAA(b(x1)) -> ABABAAB(x1)
    13: ABABAAB(a(x1)) -> ABABAABA(x1)
    14: ABABAAB(b(x1)) -> ABABAAB(B(x1))
    15: ABABAABA(a(x1)) -> ABABAABA(A(x1))
    16: ABABAABA(b(x1)) -> ABABAABAB(x1)
    17: ABABAABAB(a(x1)) -> ABABAABABA(x1)
    18: ABABAABAB(b(x1)) -> ABABAABAB(B(x1))
    19: ABABAABABA(x1) -> b(a(b(a(a(x1)))))
    20: B(a(x1)) -> BA(x1)
    21: B(b(x1)) -> B(B(x1))
    22: BA(a(x1)) -> BA(A(x1))
    23: BA(b(x1)) -> BAB(x1)
    24: BAB(a(x1)) -> BABA(x1)
    25: BAB(b(x1)) -> BAB(B(x1))
    26: BABA(a(x1)) -> BABAA(x1)
    27: BABA(b(x1)) -> BABA(B(x1))
    28: BABAA(x1) -> a(b(a(b(a(a(b(a(b(a(x1))))))))))
Number of strict rules: 28
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #A(b(x1)) -> #AB(x1)
   #2: #ABA(b(x1)) -> #ABAB(x1)
   #3: #ABABAAB(a(x1)) -> #ABABAABA(x1)
   #4: #ABABA(a(x1)) -> #ABABAA(x1)
   #5: #ABABAA(a(x1)) -> #ABABAA(A(x1))
   #6: #ABABAA(a(x1)) -> #A(x1)
   #7: #BAB(a(x1)) -> #BABA(x1)
   #8: #BA(b(x1)) -> #BAB(x1)
   #9: #ABABAA(b(x1)) -> #ABABAAB(x1)
   #10: #ABABAAB(b(x1)) -> #ABABAAB(B(x1))
   #11: #ABABAAB(b(x1)) -> #B(x1)
   #12: #BAB(b(x1)) -> #BAB(B(x1))
   #13: #BAB(b(x1)) -> #B(x1)
   #14: #B(a(x1)) -> #BA(x1)
   #15: #ABAB(a(x1)) -> #ABABA(x1)
   #16: #ABABA(b(x1)) -> #ABABA(B(x1))
   #17: #ABABA(b(x1)) -> #B(x1)
   #18: #ABA(a(x1)) -> #ABA(A(x1))
   #19: #ABA(a(x1)) -> #A(x1)
   #20: #BA(a(x1)) -> #BA(A(x1))
   #21: #BA(a(x1)) -> #A(x1)
   #22: #BABA(b(x1)) -> #BABA(B(x1))
   #23: #BABA(b(x1)) -> #B(x1)
   #24: #ABABAABAB(a(x1)) -> #ABABAABABA(x1)
   #25: #BABA(a(x1)) -> #BABAA(x1)
   #26: #B(b(x1)) -> #B(B(x1))
   #27: #B(b(x1)) -> #B(x1)
   #28: #ABABAABA(b(x1)) -> #ABABAABAB(x1)
   #29: #AB(a(x1)) -> #ABA(x1)
   #30: #A(a(x1)) -> #A(A(x1))
   #31: #A(a(x1)) -> #A(x1)
   #32: #ABAB(b(x1)) -> #ABAB(B(x1))
   #33: #ABAB(b(x1)) -> #B(x1)
   #34: #ABABAABA(a(x1)) -> #ABABAABA(A(x1))
   #35: #ABABAABA(a(x1)) -> #A(x1)
   #36: #AB(b(x1)) -> #AB(B(x1))
   #37: #AB(b(x1)) -> #B(x1)
   #38: #ABABAABAB(b(x1)) -> #ABABAABAB(B(x1))
   #39: #ABABAABAB(b(x1)) -> #B(x1)
Number of SCCs: 1, DPs: 35, edges: 79
	SCC { #1..21 #23 #26..37 #39 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: 0; x1_2
#ABABAABAB(x1)	weight: x1_1 + x1_2; 0
  #BA(x1)	weight: (/ 1 32) + x1_2; 0
#ABABAAB(x1)	weight: (/ 1 32) + x1_2; 0
ABABAA(x1)	weight: (/ 1 16) + x1_2; x1_2
#BABAA(x1)	weight: 0; 0
  ABAB(x1)	weight: (/ 1 16) + x1_2; x1_2
#ABABA(x1)	weight: (/ 1 32) + x1_2; 0
     b(x1)	weight: (/ 1 16); x1_1 + x1_2
   #B(x1)	weight: (/ 1 32) + x1_2; 0
#ABABAABA(x1)	weight: (/ 1 32) + x1_2; 0
#BABA(x1)	weight: (/ 1 32) + x1_2; 0
#ABABAA(x1)	weight: (/ 1 32) + x1_2; 0
#ABAB(x1)	weight: (/ 1 32) + x1_2; 0
    AB(x1)	weight: (/ 1 16) + x1_2; x1_2
 #ABA(x1)	weight: (/ 1 32) + x1_2; 0
ABABAABABA(x1)	weight: (/ 1 16) + x1_2; x1_2
   BAB(x1)	weight: x1_2; x1_2
ABABAABA(x1)	weight: (/ 1 16) + x1_2; x1_2
     B(x1)	weight: (/ 1 32) + x1_2; x1_2
 #BAB(x1)	weight: (/ 1 32) + x1_2; 0
#ABABAABABA(x1)	weight: 0; 0
     A(x1)	weight: (/ 1 16) + x1_2; x1_2
 BABAA(x1)	weight: 0; x1_2
   #A(x1)	weight: (/ 1 32) + x1_2; 0
   ABA(x1)	weight: (/ 1 16) + x1_2; x1_2
ABABAABAB(x1)	weight: (/ 1 16) + x1_2; x1_2
ABABAAB(x1)	weight: (/ 1 16) + x1_2; x1_2
 ABABA(x1)	weight: (/ 1 16) + x1_2; x1_2
  BABA(x1)	weight: x1_2; x1_2
  #AB(x1)	weight: (/ 1 32) + x1_2; 0
    BA(x1)	weight: (/ 1 32) + x1_2; x1_2
    Usable rules: { 1..28 }
    Removed DPs: #28 #39
Number of SCCs: 1, DPs: 32, edges: 72
	SCC { #1..21 #23 #26 #27 #29..33 #35..37 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: x1_2; x1_2
#ABABAABAB(x1)	weight: 0; 0
  #BA(x1)	weight: x1_2; 0
#ABABAAB(x1)	weight: x1_1; 0
ABABAA(x1)	weight: (/ 1 16) + x1_2; x1_2
#BABAA(x1)	weight: 0; 0
  ABAB(x1)	weight: (/ 1 16) + x1_1; x1_1
#ABABA(x1)	weight: x1_2; 0
     b(x1)	weight: (/ 1 16) + x1_1; x1_1
   #B(x1)	weight: x1_1; 0
#ABABAABA(x1)	weight: x1_2; 0
#BABA(x1)	weight: x1_2; 0
#ABABAA(x1)	weight: x1_2; 0
#ABAB(x1)	weight: x1_1; 0
    AB(x1)	weight: (/ 1 16) + x1_1; x1_1
 #ABA(x1)	weight: x1_2; 0
ABABAABABA(x1)	weight: (/ 1 16) + x1_2; x1_2
   BAB(x1)	weight: x1_1; x1_1
ABABAABA(x1)	weight: (/ 1 16) + x1_2; x1_2
     B(x1)	weight: (/ 1 32) + x1_1; x1_1
 #BAB(x1)	weight: x1_1; 0
#ABABAABABA(x1)	weight: 0; 0
     A(x1)	weight: (/ 1 16) + x1_2; x1_2
 BABAA(x1)	weight: x1_2; x1_2
   #A(x1)	weight: x1_2; 0
   ABA(x1)	weight: (/ 1 16) + x1_2; x1_2
ABABAABAB(x1)	weight: (/ 1 16) + x1_1; x1_1
ABABAAB(x1)	weight: (/ 1 16) + x1_1; x1_1
 ABABA(x1)	weight: (/ 1 16) + x1_2; x1_2
  BABA(x1)	weight: x1_2; x1_2
  #AB(x1)	weight: x1_1; 0
    BA(x1)	weight: x1_2; x1_2
    Usable rules: { 1..28 }
    Removed DPs: #10..13 #26 #27 #32 #33 #36 #37
Number of SCCs: 1, DPs: 22, edges: 40
	SCC { #1..9 #14..21 #23 #29..31 #35 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
