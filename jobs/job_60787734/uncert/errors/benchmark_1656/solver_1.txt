Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5728, clauses: 25096
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5280, clauses: 21416
last 5728 length 25096
last 5280 length 21416
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16649, clauses: 70032
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16762, clauses: 70545
CNF 5728 vars 25096 clauses
last 16649 length 70032
CNF 5280 vars 21416 clauses
last 16762 length 70545
CNF 16649 vars 70032 clauses
CNF 16762 vars 70545 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5728, clauses: 25096, status: Satisfied, time: 0.65080218s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5280, clauses: 21416, status: Unsatisfied, time: 0.600563958s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10373, clauses: 44360
last 10373 length 44360
CNF 10373 vars 44360 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16762, clauses: 70545, status: Satisfied, time: 2.936524064s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5074, clauses: 21649
last 5074 length 21649
CNF 5074 vars 21649 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5074, clauses: 21649, status: Satisfied, time: 0.367732526s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15341, clauses: 64484
last 15341 length 64484
CNF 15341 vars 64484 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4840, clauses: 21073
last 4840 length 21073
CNF 4840 vars 21073 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4840, clauses: 21073, status: Unsatisfied, time: 0.450687312s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16084, clauses: 67747
last 16084 length 67747
CNF 16084 vars 67747 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9872, clauses: 42583
last 9872 length 42583
CNF 9872 vars 42583 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4863, clauses: 20522
last 4863 length 20522
CNF 4863 vars 20522 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15003, clauses: 63058
last 15003 length 63058
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4863, clauses: 20522, status: Unsatisfied, time: 0.516747527s
CNF 15003 vars 63058 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15003, clauses: 63058, status: Satisfied, time: 0.35947547s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9334, clauses: 39948
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9872, clauses: 42583, status: Unsatisfied, time: 3.859807017s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4429, clauses: 18322
last 4429 length 18322
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7994, clauses: 36897
last 7994 length 36897
CNF 4429 vars 18322 clauses
CNF 7994 vars 36897 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4429, clauses: 18322, status: Unsatisfied, time: 0.375701657s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14618, clauses: 61437
last 14618 length 61437
CNF 14618 vars 61437 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9010, clauses: 38505
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7994, clauses: 36897, status: Satisfied, time: 0.652028562s
last 9010 length 38505
CNF 9010 vars 38505 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9010, clauses: 38505, status: Unsatisfied, time: 0.701212769s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7314, clauses: 32097
last 7314 length 32097
CNF 7314 vars 32097 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14618, clauses: 61437, status: Unsatisfied, time: 2.105696612s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7314, clauses: 32097, status: Satisfied, time: 0.81445637s
**************************************************
summary
**************************************************
SRS with 1 rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 4 rules on 4 letters       DP
SRS with 34 strict rules and 4 weak rules on 6 letters       EDG
SRS with 14 strict rules and 4 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 11 strict rules and 4 weak rules on 6 letters       EDG
SRS with 11 strict rules and 4 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 10 strict rules and 4 weak rules on 6 letters       EDG
SRS with 10 strict rules and 4 weak rules on 6 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 8 strict rules and 4 weak rules on 6 letters       EDG
SRS with 8 strict rules and 4 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 4 weak rules on 4 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, a, b, a, b, a, a, b, a, b, a] -> [ a , b , a , a , b , a , b , a , a , b , a , b , a , b ] {- Input 0 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] -> [ [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] -> [ [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] -> [ [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] -> [ [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- Semlab 1 (Concon 1 (Input 0)) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 3) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 8) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 14) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 2) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 7) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] ] {- DP (Top 12) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 5) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 10) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 3) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 8) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 2) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 7) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 5) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 10) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, b] , [b, b] ] {- DP (Top 12) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 3) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 8) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 14) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 2) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 7) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] ] {- DP (Top 12) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 5) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 10) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 3) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 8) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 2) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 7) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 5) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 10) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, b] , [b, b] ] {- DP (Top 12) (Semlab 1 (Concon 1 (Input 0))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 3) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 8) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 14) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 3) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] ] {- DP (Top 12) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 8) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 5) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 14) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] ] {- DP (Top 12) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 5) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 10) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 10) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [a, b]
  , Wk  / 0A  0A 0A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, a]
  , Wk  / 0A  0A  0A  - \
        | -3A 0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [b, b]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [a, a]#
  , Wk  / 13A 14A 14A - \
        | 13A 14A 14A - |
        | 13A 14A 14A - |
        \ -   -   -   - / )
  ( [b, a]#
  , Wk  / 11A 13A 14A - \
        | 11A 13A 14A - |
        | 11A 13A 14A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 3) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 8) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 14) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 3) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] ] {- DP (Top 12) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 8) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 14) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] ] {- DP (Top 12) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 10) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 10) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 3) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 8) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 14) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 3) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] ] {- DP (Top 12) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 8) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 10) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 14) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] ] {- DP (Top 12) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 10) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [a, b]
  , Wk  / 0A  0A 3A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, a]
  , Wk  / 0A  0A  0A  - \
        | -3A 0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [b, b]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [a, a]#
  , Wk  / 16A 16A 19A - \
        | 16A 16A 19A - |
        | 16A 16A 19A - |
        \ -   -   -   - / )
  ( [b, a]#
  , Wk  / 19A 19A 19A - \
        | 19A 19A 19A - |
        | 19A 19A 19A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 3) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 8) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 14) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 3) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] ] {- DP (Top 12) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 8) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 10) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 14) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] ] {- DP (Top 12) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 10) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 3) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 8) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 14) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 3) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] ] {- DP (Top 12) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 8) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 10) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 14) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] ] {- DP (Top 12) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 10) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
reason
  ( [a, a]
  , Wk  / -   -  1A \
        | -1A 0A 1A |
        \ -   -  0A / )
  ( [a, b]
  , Wk  / -1A -1A 0A  \
        | -   -1A -1A |
        \ -   -   0A  / )
  ( [b, a]
  , Wk  / -  2A 0A \
        | 0A -  -  |
        \ -  -  0A / )
  ( [b, b]
  , Wk  / - - 0A \
        | - - -  |
        \ - - 0A / )
  ( [a, a]#
  , Wk  / -1A - 0A \
        | -   - -  |
        \ -   - 0A / )
  ( [b, a]#
  , Wk  / -1A - 1A \
        | -   - -  |
        \ -   - 0A / )
   property Termination
has value Just True
for SRS
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 8) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 14) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] ] {- DP (Top 12) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 8) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 10) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 14) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] ] {- DP (Top 12) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 10) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 8) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 14) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 8) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] ] {- DP (Top 12) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 14) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] ] {- DP (Top 12) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 10) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 10) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A  0A 4A - \
        | 0A  0A  0A 0A - |
        | -4A -4A 0A 0A - |
        | -4A -4A 0A 0A - |
        \ -   -   -  -  - / )
  ( [a, b]
  , Wk  / 0A  0A  0A 0A - \
        | 0A  0A  0A 0A - |
        | -4A 0A  0A 0A - |
        | -4A -4A 0A 0A - |
        \ -   -   -  -  - / )
  ( [b, a]
  , Wk  / 0A  0A  0A  0A - \
        | -4A 0A  0A  0A - |
        | -4A -4A 0A  0A - |
        | -4A -4A -4A 0A - |
        \ -   -   -   -  - / )
  ( [b, b]
  , Wk  / 0A 0A 0A 0A - \
        | 0A 0A 0A 0A - |
        | 0A 0A 0A 0A - |
        | 0A 0A 0A 0A - |
        \ -  -  -  -  - / )
  ( [a, a]#
  , Wk  / 1A 1A 1A 1A - \
        | 1A 1A 1A 1A - |
        | 1A 1A 1A 1A - |
        | 1A 1A 1A 1A - |
        \ -  -  -  -  - / )
  ( [b, a]#
  , Wk  / 1A 1A 1A 1A - \
        | 1A 1A 1A 1A - |
        | 1A 1A 1A 1A - |
        | 1A 1A 1A 1A - |
        \ -  -  -  -  - / )
   property Termination
has value Just True
for SRS
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
reason
  EDG

**************************************************
skeleton: (1,2)\TileAllAll{2}(4,4)\Deepee(34/4,6)\EDG(14/4,6)\Matrix{\Arctic}{3}\EDG(11/4,6)\Matrix{\Arctic}{3}\EDG(10/4,6)\Matrix{\ArcticBZ}{3}\EDG(8/4,6)\Matrix{\Arctic}{4}(0/4,4)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 3.774245587000
  min duration 3.059784235000
  total durat. 19.195930836000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 10
      , num_top_rules = 10
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 342}
    , self = 76
    , parent = Nothing
    , duration = 3.059784235000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:37:18.615975549 UTC
    , finish = 2025-09-03 12:37:21.675759784 UTC
    , thread_cap_info = ("ThreadId 127", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 10
      , num_top_rules = 10
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 298}
    , self = 106
    , parent = Nothing
    , duration = 3.063557895000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:37:27.175779523 UTC
    , finish = 2025-09-03 12:37:30.239337418 UTC
    , thread_cap_info = ("ThreadId 172", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 15
      , num_strict_rules = 11
      , num_top_rules = 11
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 326}
    , self = 95
    , parent = Nothing
    , duration = 3.077143678000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:37:22.758620143 UTC
    , finish = 2025-09-03 12:37:25.835763821 UTC
    , thread_cap_info = ("ThreadId 151", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 293}
    , self = 103
    , parent = Nothing
    , duration = 3.099845998000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:37:25.657194095 UTC
    , finish = 2025-09-03 12:37:28.757040093 UTC
    , thread_cap_info = ("ThreadId 160", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 14
      , num_top_rules = 14
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 400}
    , self = 74
    , parent = Nothing
    , duration = 3.121353443000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:37:18.474418425 UTC
    , finish = 2025-09-03 12:37:21.595771868 UTC
    , thread_cap_info = ("ThreadId 122", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 248}
    , self = 117
    , parent = Nothing
    , duration = 3.774245587000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:37:31.444067746 UTC
    , finish = 2025-09-03 12:37:35.218313333 UTC
    , thread_cap_info = ("ThreadId 193", 2, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.339009357000
  min duration 3.339009357000
  total durat. 3.339009357000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 112}
    , self = 72
    , parent = Nothing
    , duration = 3.339009357000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:18.197110131 UTC
    , finish = 2025-09-03 12:37:21.536119488 UTC
    , thread_cap_info = ("ThreadId 95", 1, False)}
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 3.757919643000
  min duration 3.018263660000
  total durat. 19.072823748000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 10
      , num_top_rules = 10
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 298}
    , self = 107
    , parent = Nothing
    , duration = 3.018263660000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:37:27.237501544 UTC
    , finish = 2025-09-03 12:37:30.255765204 UTC
    , thread_cap_info = ("ThreadId 173", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 10
      , num_top_rules = 10
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 342}
    , self = 77
    , parent = Nothing
    , duration = 3.039983130000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:37:18.635798357 UTC
    , finish = 2025-09-03 12:37:21.675781487 UTC
    , thread_cap_info = ("ThreadId 128", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 15
      , num_strict_rules = 11
      , num_top_rules = 11
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 326}
    , self = 94
    , parent = Nothing
    , duration = 3.058005613000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:37:22.738846435 UTC
    , finish = 2025-09-03 12:37:25.796852048 UTC
    , thread_cap_info = ("ThreadId 152", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 293}
    , self = 104
    , parent = Nothing
    , duration = 3.079601619000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:37:25.716173987 UTC
    , finish = 2025-09-03 12:37:28.795775606 UTC
    , thread_cap_info = ("ThreadId 161", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 14
      , num_top_rules = 14
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 400}
    , self = 75
    , parent = Nothing
    , duration = 3.119050083000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:37:18.476740055 UTC
    , finish = 2025-09-03 12:37:21.595790138 UTC
    , thread_cap_info = ("ThreadId 123", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 248}
    , self = 118
    , parent = Nothing
    , duration = 3.757919643000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:37:31.460414221 UTC
    , finish = 2025-09-03 12:37:35.218333864 UTC
    , thread_cap_info = ("ThreadId 194", 2, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.353916663000
  min duration 3.353916663000
  total durat. 3.353916663000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 112}
    , self = 73
    , parent = Nothing
    , duration = 3.353916663000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:18.222505117 UTC
    , finish = 2025-09-03 12:37:21.57642178 UTC
    , thread_cap_info = ("ThreadId 97", 1, False)}
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 6
  max duration 6.863934114000
  min duration 0.325898263000
  total durat. 11.092407499000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 24}
    , self = 70
    , parent = Nothing
    , duration = 2.613243909000
    , status = Fail
    , start = 2025-09-03 12:37:18.157566433 UTC
    , finish = 2025-09-03 12:37:20.770810342 UTC
    , thread_cap_info = ("ThreadId 80", 0, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 26}
    , self = 86
    , parent = Nothing
    , duration = 6.863934114000
    , status = Fail
    , start = 2025-09-03 12:37:18.295774014 UTC
    , finish = 2025-09-03 12:37:25.159708128 UTC
    , thread_cap_info = ("ThreadId 103", 0, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 3.473880061000
  min duration 1.148091223000
  total durat. 4.621971284000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 10
      , num_top_rules = 10
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 298}
    , self = 109
    , parent = Nothing
    , duration = 1.148091223000
    , status = Success
    , start = 2025-09-03 12:37:30.276009106 UTC
    , finish = 2025-09-03 12:37:31.424100329 UTC
    , thread_cap_info = ("ThreadId 185", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 10
      , num_top_rules = 10
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 342}
    , self = 87
    , parent = Nothing
    , duration = 3.473880061000
    , status = Success
    , start = 2025-09-03 12:37:21.755774674 UTC
    , finish = 2025-09-03 12:37:25.229654735 UTC
    , thread_cap_info = ("ThreadId 142", 2, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.666146094000
  min duration 2.666146094000
  total durat. 2.666146094000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 248}
    , self = 128
    , parent = Nothing
    , duration = 2.666146094000
    , status = Fail
    , start = 2025-09-03 12:37:35.258357813 UTC
    , finish = 2025-09-03 12:37:37.924503907 UTC
    , thread_cap_info = ("ThreadId 199", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 7.346022735000
  min duration 1.023197100000
  total durat. 9.450537815000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 15
      , num_strict_rules = 11
      , num_top_rules = 11
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 326}
    , self = 98
    , parent = Nothing
    , duration = 1.023197100000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:25.895764147 UTC
    , finish = 2025-09-03 12:37:26.918961247 UTC
    , thread_cap_info = ("ThreadId 165", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 14
      , num_top_rules = 14
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 400}
    , self = 80
    , parent = Nothing
    , duration = 1.081317980000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:21.656207509 UTC
    , finish = 2025-09-03 12:37:22.737525489 UTC
    , thread_cap_info = ("ThreadId 139", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 293}
    , self = 122
    , parent = Nothing
    , duration = 7.346022735000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:28.85592479 UTC
    , finish = 2025-09-03 12:37:36.201947525 UTC
    , thread_cap_info = ("ThreadId 177", 2, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 4.414930345000
  min duration 1.055139174000
  total durat. 5.470069519000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 248}
    , self = 127
    , parent = Nothing
    , duration = 1.055139174000
    , status = Fail
    , start = 2025-09-03 12:37:35.814763534 UTC
    , finish = 2025-09-03 12:37:36.869902708 UTC
    , thread_cap_info = ("ThreadId 202", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 293}
    , self = 116
    , parent = Nothing
    , duration = 4.414930345000
    , status = Fail
    , start = 2025-09-03 12:37:29.595800956 UTC
    , finish = 2025-09-03 12:37:34.010731301 UTC
    , thread_cap_info = ("ThreadId 180", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 2.562962901000
  min duration 0.360371268000
  total durat. 2.923334169000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 10
      , num_top_rules = 10
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 342}
    , self = 89
    , parent = Nothing
    , duration = 2.562962901000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:22.836808932 UTC
    , finish = 2025-09-03 12:37:25.399771833 UTC
    , thread_cap_info = ("ThreadId 153", 2, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.079618580000
  min duration 0.631237381000
  total durat. 1.710855961000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 14
      , num_top_rules = 14
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 400}
    , self = 78
    , parent = Nothing
    , duration = 1.079618580000
    , status = Success
    , start = 2025-09-03 12:37:21.636006535 UTC
    , finish = 2025-09-03 12:37:22.715625115 UTC
    , thread_cap_info = ("ThreadId 138", 2, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 1.051729683000
  min duration 0.564169278000
  total durat. 3.131014370000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 10
      , num_top_rules = 10
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 342}
    , self = 85
    , parent = Nothing
    , duration = 1.051729683000
    , status = Fail
    , start = 2025-09-03 12:37:21.735773309 UTC
    , finish = 2025-09-03 12:37:22.787502992 UTC
    , thread_cap_info = ("ThreadId 141", 2, False)}
Success : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 2.120037702000
  min duration 1.435862076000
  total durat. 3.555899778000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 248}
    , self = 129
    , parent = Nothing
    , duration = 1.435862076000
    , status = Success
    , start = 2025-09-03 12:37:36.918777734 UTC
    , finish = 2025-09-03 12:37:38.35463981 UTC
    , thread_cap_info = ("ThreadId 211", 2, False)}
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 293}
    , self = 120
    , parent = Nothing
    , duration = 2.120037702000
    , status = Success
    , start = 2025-09-03 12:37:34.055806409 UTC
    , finish = 2025-09-03 12:37:36.175844111 UTC
    , thread_cap_info = ("ThreadId 195", 2, False)}
Fail : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = False}"
  total number 3
  max duration 3.009146757000
  min duration 0.496892590000
  total durat. 5.755107839000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 24}
    , self = 69
    , parent = Nothing
    , duration = 2.249068492000
    , status = Fail
    , start = 2025-09-03 12:37:18.097354381 UTC
    , finish = 2025-09-03 12:37:20.346422873 UTC
    , thread_cap_info = ("ThreadId 63", 0, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 26}
    , self = 71
    , parent = Nothing
    , duration = 3.009146757000
    , status = Fail
    , start = 2025-09-03 12:37:18.131955469 UTC
    , finish = 2025-09-03 12:37:21.141102226 UTC
    , thread_cap_info = ("ThreadId 71", 0, False)}
**************************************************
F                      Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                      , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                      = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                      , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                      = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
F                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F                      = 26} , self = 61 , parent = Nothing , duration = 0.496892590000 , status
F                      = Fail , start = 2025-09-03 12:37:18.080302165 UTC , finish = 2025-09-03
F                      12:37:18.577194755 UTC , thread_cap_info = ("ThreadId 22", 3, False)}
F                      
| F                    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F                    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F                    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F                    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F                    = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| F                    = 0 , alphabet_size = 4 , total_length = 112} , self = 45 , parent = Nothing
| F                    , duration = 0.325898263000 , status = Fail , start = 2025-09-03 12:37:18.081059232
| F                    UTC , finish = 2025-09-03 12:37:18.406957495 UTC , thread_cap_info = ("ThreadId
| F                    50", 2, False)}
| F                    
| | F                  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | F                  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | F                  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | F                  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | F                  = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| | F                  = 0 , alphabet_size = 4 , total_length = 112} , self = 46 , parent = Nothing
| | F                  , duration = 0.378081693000 , status = Fail , start = 2025-09-03 12:37:18.081063778
| | F                  UTC , finish = 2025-09-03 12:37:18.459145471 UTC , thread_cap_info = ("ThreadId
| | F                  52", 2, False)}
| | F                  
| | | F                Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | F                , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | F                = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | F                , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | F                = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | F                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | F                = 24} , self = 69 , parent = Nothing , duration = 2.249068492000 , status
| | | F                = Fail , start = 2025-09-03 12:37:18.097354381 UTC , finish = 2025-09-03
| | | F                12:37:20.346422873 UTC , thread_cap_info = ("ThreadId 63", 0, False)}
| | | F                
| | | | F              Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | F              , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | F              = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | F              , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | F              = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | F              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | F              = 26} , self = 71 , parent = Nothing , duration = 3.009146757000 , status
| | | | F              = Fail , start = 2025-09-03 12:37:18.131955469 UTC , finish = 2025-09-03
| | | | F              12:37:21.141102226 UTC , thread_cap_info = ("ThreadId 71", 0, False)}
| | | | F              
| | | | | F            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | F            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | F            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | F            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | F            = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | F            = 0 , alphabet_size = 2 , total_length = 24} , self = 60 , parent = Nothing
| | | | | F            , duration = 0.425179358000 , status = Fail , start = 2025-09-03 12:37:18.135851398
| | | | | F            UTC , finish = 2025-09-03 12:37:18.561030756 UTC , thread_cap_info = ("ThreadId
| | | | | F            78", 0, False)}
| | | | | F            
| | | | | | F          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | F          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | F          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | F          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | F          = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | F          = 0 , alphabet_size = 2 , total_length = 24} , self = 70 , parent = Nothing
| | | | | | F          , duration = 2.613243909000 , status = Fail , start = 2025-09-03 12:37:18.157566433
| | | | | | F          UTC , finish = 2025-09-03 12:37:20.770810342 UTC , thread_cap_info = ("ThreadId
| | | | | | F          80", 0, False)}
| | | | | | F          
| | | | | | | E        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | E        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | E        = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | E        = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | | | | E        = 112} , self = 72 , parent = Nothing , duration = 3.339009357000 , status
| | | | | | | E        = Except "AsyncCancelled" , start = 2025-09-03 12:37:18.197110131 UTC ,
| | | | | | | E        finish = 2025-09-03 12:37:21.536119488 UTC , thread_cap_info = ("ThreadId
| | | | | | | E        95", 1, False)}
| | | | | | | E        
| | | | | | | | E      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | E      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | E      = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | | E      = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | | | | | E      = 112} , self = 73 , parent = Nothing , duration = 3.353916663000 , status
| | | | | | | | E      = Except "AsyncCancelled" , start = 2025-09-03 12:37:18.222505117 UTC ,
| | | | | | | | E      finish = 2025-09-03 12:37:21.57642178 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E      97", 1, False)}
| | | | | | | | E      
| | | | | | | | | F    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | F    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | F    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | F    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | F    = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | F    = 0 , alphabet_size = 2 , total_length = 26} , self = 66 , parent = Nothing
| | | | | | | | | F    , duration = 0.486070162000 , status = Fail , start = 2025-09-03 12:37:18.277996524
| | | | | | | | | F    UTC , finish = 2025-09-03 12:37:18.764066686 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | F    101", 0, False)}
| | | | | | | | | F    
| | | | | | | | | | F  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | F  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | F  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | F  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | F  = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | F  = 0 , alphabet_size = 2 , total_length = 26} , self = 86 , parent = Nothing
| | | | | | | | | | F  , duration = 6.863934114000 , status = Fail , start = 2025-09-03 12:37:18.295774014
| | | | | | | | | | F  UTC , finish = 2025-09-03 12:37:25.159708128 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | F  103", 0, False)}
| | | | | | | | | | F  
| F | | | | | | | | |  
|   F | | | | | | | |  
| E   | | | | | | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| E   | | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E   | | | | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| E   | | | | | | | |  = 14 , num_top_rules = 14 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| E   | | | | | | | |  = 400} , self = 74 , parent = Nothing , duration = 3.121353443000 , status
| E   | | | | | | | |  = Except "<<timeout>>" , start = 2025-09-03 12:37:18.474418425 UTC , finish
| E   | | | | | | | |  = 2025-09-03 12:37:21.595771868 UTC , thread_cap_info = ("ThreadId 122",
| E   | | | | | | | |  2, False)}
| E   | | | | | | | |  
| | E | | | | | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | E | | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E | | | | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | E | | | | | | | |  = 14 , num_top_rules = 14 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | E | | | | | | | |  = 400} , self = 75 , parent = Nothing , duration = 3.119050083000 , status
| | E | | | | | | | |  = Except "<<timeout>>" , start = 2025-09-03 12:37:18.476740055 UTC , finish
| | E | | | | | | | |  = 2025-09-03 12:37:21.595790138 UTC , thread_cap_info = ("ThreadId 123",
| | E | | | | | | | |  2, False)}
| | E | | | | | | | |  
| | | | | F | | | | |  
F | | | |   | | | | |  
E | | | |   | | | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
E | | | |   | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
E | | | |   | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
E | | | |   | | | | |  = 10 , num_top_rules = 10 , num_weak_rules = 4 , alphabet_size = 6 , total_length
E | | | |   | | | | |  = 342} , self = 76 , parent = Nothing , duration = 3.059784235000 , status
E | | | |   | | | | |  = Except "<<timeout>>" , start = 2025-09-03 12:37:18.615975549 UTC , finish
E | | | |   | | | | |  = 2025-09-03 12:37:21.675759784 UTC , thread_cap_info = ("ThreadId 127",
E | | | |   | | | | |  2, False)}
E | | | |   | | | | |  
| | | | | E | | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | E | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | E | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | E | | | | |  = 10 , num_top_rules = 10 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | | | E | | | | |  = 342} , self = 77 , parent = Nothing , duration = 3.039983130000 , status
| | | | | E | | | | |  = Except "<<timeout>>" , start = 2025-09-03 12:37:18.635798357 UTC , finish
| | | | | E | | | | |  = 2025-09-03 12:37:21.675781487 UTC , thread_cap_info = ("ThreadId 128",
| | | | | E | | | | |  2, False)}
| | | | | E | | | | |  
| | | | | | | | | F |  
| | | F | | | | |   |  
| | |   | | F | |   |  
| | |   F |   | |   |  
| | |     |   E |   |  
| | |     |     E   |  
| E |     |         |  
|   E     |         |  
| S       |         |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S       |         |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S       |         |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S       |         |  = 18 , num_strict_rules = 14 , num_top_rules = 14 , num_weak_rules = 4
| S       |         |  , alphabet_size = 6 , total_length = 400} , self = 78 , parent = Nothing
| S       |         |  , duration = 1.079618580000 , status = Success , start = 2025-09-03 12:37:21.636006535
| S       |         |  UTC , finish = 2025-09-03 12:37:22.715625115 UTC , thread_cap_info = ("ThreadId
| S       |         |  138", 2, False)}
| S       |         |  
| | E     |         |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E     |         |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E     |         |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E     |         |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E     |         |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E     |         |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 18
| | E     |         |  , num_strict_rules = 14 , num_top_rules = 14 , num_weak_rules = 4 , alphabet_size
| | E     |         |  = 6 , total_length = 400} , self = 80 , parent = Nothing , duration = 1.081317980000
| | E     |         |  , status = Except "AsyncCancelled" , start = 2025-09-03 12:37:21.656207509
| | E     |         |  UTC , finish = 2025-09-03 12:37:22.737525489 UTC , thread_cap_info = ("ThreadId
| | E     |         |  139", 2, False)}
| | E     |         |  
E | |     |         |  
  | |     E         |  
F | |               |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F | |               |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | |               |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | |               |  = 14 , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 4
F | |               |  , alphabet_size = 6 , total_length = 342} , self = 85 , parent = Nothing
F | |               |  , duration = 1.051729683000 , status = Fail , start = 2025-09-03 12:37:21.735773309
F | |               |  UTC , finish = 2025-09-03 12:37:22.787502992 UTC , thread_cap_info = ("ThreadId
F | |               |  141", 2, False)}
F | |               |  
| | | S             |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | S             |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S             |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S             |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S             |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S             |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
| | | S             |  , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 4 , alphabet_size
| | | S             |  = 6 , total_length = 342} , self = 87 , parent = Nothing , duration = 3.473880061000
| | | S             |  , status = Success , start = 2025-09-03 12:37:21.755774674 UTC , finish
| | | S             |  = 2025-09-03 12:37:25.229654735 UTC , thread_cap_info = ("ThreadId 142",
| | | S             |  2, False)}
| | | S             |  
| S | |             |  
|   E |             |  
| E   |             |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| E   |             |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E   |             |  = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| E   |             |  = 11 , num_top_rules = 11 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| E   |             |  = 326} , self = 94 , parent = Nothing , duration = 3.058005613000 , status
| E   |             |  = Except "<<timeout>>" , start = 2025-09-03 12:37:22.738846435 UTC , finish
| E   |             |  = 2025-09-03 12:37:25.796852048 UTC , thread_cap_info = ("ThreadId 152",
| E   |             |  2, False)}
| E   |             |  
| | E |             |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | E |             |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E |             |  = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | E |             |  = 11 , num_top_rules = 11 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | E |             |  = 326} , self = 95 , parent = Nothing , duration = 3.077143678000 , status
| | E |             |  = Except "<<timeout>>" , start = 2025-09-03 12:37:22.758620143 UTC , finish
| | E |             |  = 2025-09-03 12:37:25.835763821 UTC , thread_cap_info = ("ThreadId 151",
| | E |             |  2, False)}
| | E |             |  
F | | |             |  
E | | |             |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E | | |             |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E | | |             |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E | | |             |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | |             |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | |             |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
E | | |             |  , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 4 , alphabet_size
E | | |             |  = 6 , total_length = 342} , self = 89 , parent = Nothing , duration = 2.562962901000
E | | |             |  , status = Except "AsyncCancelled" , start = 2025-09-03 12:37:22.836808932
E | | |             |  UTC , finish = 2025-09-03 12:37:25.399771833 UTC , thread_cap_info = ("ThreadId
E | | |             |  153", 2, False)}
E | | |             |  
| | | |             F  
| | | S                
E | |                  
E | |                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
E | |                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
E | |                  = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
E | |                  = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size = 6 , total_length
E | |                  = 293} , self = 103 , parent = Nothing , duration = 3.099845998000 , status
E | |                  = Except "<<timeout>>" , start = 2025-09-03 12:37:25.657194095 UTC , finish
E | |                  = 2025-09-03 12:37:28.757040093 UTC , thread_cap_info = ("ThreadId 160",
E | |                  2, False)}
E | |                  
| | | E                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | E                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E                = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | E                = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | E                = 293} , self = 104 , parent = Nothing , duration = 3.079601619000 , status
| | | E                = Except "<<timeout>>" , start = 2025-09-03 12:37:25.716173987 UTC , finish
| | | E                = 2025-09-03 12:37:28.795775606 UTC , thread_cap_info = ("ThreadId 161",
| | | E                2, False)}
| | | E                
| E | |                
|   E |                
| S   |                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S   |                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S   |                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S   |                = 15 , num_strict_rules = 11 , num_top_rules = 11 , num_weak_rules = 4
| S   |                , alphabet_size = 6 , total_length = 326} , self = 96 , parent = Nothing
| S   |                , duration = 0.631237381000 , status = Success , start = 2025-09-03 12:37:25.87579128
| S   |                UTC , finish = 2025-09-03 12:37:26.507028661 UTC , thread_cap_info = ("ThreadId
| S   |                164", 2, False)}
| S   |                
| | E |                Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E |                = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E |                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E |                , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E |                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E |                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 15
| | E |                , num_strict_rules = 11 , num_top_rules = 11 , num_weak_rules = 4 , alphabet_size
| | E |                = 6 , total_length = 326} , self = 98 , parent = Nothing , duration = 1.023197100000
| | E |                , status = Except "AsyncCancelled" , start = 2025-09-03 12:37:25.895764147
| | E |                UTC , finish = 2025-09-03 12:37:26.918961247 UTC , thread_cap_info = ("ThreadId
| | E |                165", 2, False)}
| | E |                
| S | |                
|   E |                
| E   |                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| E   |                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E   |                = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| E   |                = 10 , num_top_rules = 10 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| E   |                = 298} , self = 106 , parent = Nothing , duration = 3.063557895000 , status
| E   |                = Except "<<timeout>>" , start = 2025-09-03 12:37:27.175779523 UTC , finish
| E   |                = 2025-09-03 12:37:30.239337418 UTC , thread_cap_info = ("ThreadId 172",
| E   |                2, False)}
| E   |                
| | E |                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | E |                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E |                = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | E |                = 10 , num_top_rules = 10 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | E |                = 298} , self = 107 , parent = Nothing , duration = 3.018263660000 , status
| | E |                = Except "<<timeout>>" , start = 2025-09-03 12:37:27.237501544 UTC , finish
| | E |                = 2025-09-03 12:37:30.255765204 UTC , thread_cap_info = ("ThreadId 173",
| | E |                2, False)}
| | E |                
E | | |                
  | | E                
F | |                  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F | |                  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | |                  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | |                  = 12 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 4 ,
F | |                  alphabet_size = 6 , total_length = 293} , self = 105 , parent = Nothing
F | |                  , duration = 0.710277252000 , status = Fail , start = 2025-09-03 12:37:28.836180425
F | |                  UTC , finish = 2025-09-03 12:37:29.546457677 UTC , thread_cap_info = ("ThreadId
F | |                  176", 2, False)}
F | |                  
| | | E                Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E                = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E                , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | E                , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size
| | | E                = 6 , total_length = 293} , self = 122 , parent = Nothing , duration =
| | | E                7.346022735000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | E                12:37:28.85592479 UTC , finish = 2025-09-03 12:37:36.201947525 UTC , thread_cap_info
| | | E                = ("ThreadId 177", 2, False)}
| | | E                
F | | |                
F | | |                Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
F | | |                = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F | | |                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F | | |                , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F | | |                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F | | |                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
F | | |                , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size
F | | |                = 6 , total_length = 293} , self = 116 , parent = Nothing , duration =
F | | |                4.414930345000 , status = Fail , start = 2025-09-03 12:37:29.595800956
F | | |                UTC , finish = 2025-09-03 12:37:34.010731301 UTC , thread_cap_info = ("ThreadId
F | | |                180", 2, False)}
F | | |                
| E | |                
|   E |                
| F   |                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F   |                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F   |                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F   |                = 14 , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 4
| F   |                , alphabet_size = 6 , total_length = 298} , self = 108 , parent = Nothing
| F   |                , duration = 0.804838157000 , status = Fail , start = 2025-09-03 12:37:30.269500025
| F   |                UTC , finish = 2025-09-03 12:37:31.074338182 UTC , thread_cap_info = ("ThreadId
| F   |                184", 2, False)}
| F   |                
| | S |                Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | S |                = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | S |                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S |                , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S |                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S |                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
| | S |                , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 4 , alphabet_size
| | S |                = 6 , total_length = 298} , self = 109 , parent = Nothing , duration =
| | S |                1.148091223000 , status = Success , start = 2025-09-03 12:37:30.276009106
| | S |                UTC , finish = 2025-09-03 12:37:31.424100329 UTC , thread_cap_info = ("ThreadId
| | S |                185", 2, False)}
| | S |                
| F | |                
| E | |                Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| E | |                = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| E | |                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| E | |                , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | |                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | |                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
| E | |                , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 4 , alphabet_size
| E | |                = 6 , total_length = 298} , self = 111 , parent = Nothing , duration =
| E | |                0.360371268000 , status = Except "AsyncCancelled" , start = 2025-09-03
| E | |                12:37:31.079668095 UTC , finish = 2025-09-03 12:37:31.440039363 UTC , thread_cap_info
| E | |                = ("ThreadId 188", 2, False)}
| E | |                
| | S |                
| E   |                
| E   |                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| E   |                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E   |                = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| E   |                = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| E   |                = 248} , self = 117 , parent = Nothing , duration = 3.774245587000 , status
| E   |                = Except "<<timeout>>" , start = 2025-09-03 12:37:31.444067746 UTC , finish
| E   |                = 2025-09-03 12:37:35.218313333 UTC , thread_cap_info = ("ThreadId 193",
| E   |                2, False)}
| E   |                
| | E |                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | E |                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E |                = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | E |                = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | E |                = 248} , self = 118 , parent = Nothing , duration = 3.757919643000 , status
| | E |                = Except "<<timeout>>" , start = 2025-09-03 12:37:31.460414221 UTC , finish
| | E |                = 2025-09-03 12:37:35.218333864 UTC , thread_cap_info = ("ThreadId 194",
| | E |                2, False)}
| | E |                
F | | |                
S | | |                Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
S | | |                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | | |                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | | |                = 12 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 4 ,
S | | |                alphabet_size = 6 , total_length = 293} , self = 120 , parent = Nothing
S | | |                , duration = 2.120037702000 , status = Success , start = 2025-09-03 12:37:34.055806409
S | | |                UTC , finish = 2025-09-03 12:37:36.175844111 UTC , thread_cap_info = ("ThreadId
S | | |                195", 2, False)}
S | | |                
| E | |                
|   E |                
| F   |                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F   |                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F   |                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F   |                = 12 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 4 ,
| F   |                alphabet_size = 6 , total_length = 248} , self = 119 , parent = Nothing
| F   |                , duration = 0.564169278000 , status = Fail , start = 2025-09-03 12:37:35.236769867
| F   |                UTC , finish = 2025-09-03 12:37:35.800939145 UTC , thread_cap_info = ("ThreadId
| F   |                198", 2, False)}
| F   |                
| | F |                Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | F |                = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | F |                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | F |                , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F |                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F |                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | F |                , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size
| | F |                = 6 , total_length = 248} , self = 128 , parent = Nothing , duration =
| | F |                2.666146094000 , status = Fail , start = 2025-09-03 12:37:35.258357813
| | F |                UTC , finish = 2025-09-03 12:37:37.924503907 UTC , thread_cap_info = ("ThreadId
| | F |                199", 2, False)}
| | F |                
| F | |                
| F | |                Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| F | |                = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F | |                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F | |                , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | |                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | |                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| F | |                , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size
| F | |                = 6 , total_length = 248} , self = 127 , parent = Nothing , duration =
| F | |                1.055139174000 , status = Fail , start = 2025-09-03 12:37:35.814763534
| F | |                UTC , finish = 2025-09-03 12:37:36.869902708 UTC , thread_cap_info = ("ThreadId
| F | |                202", 2, False)}
| F | |                
S | | |                
  | | E                
  F |                  
S   |                  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
S   |                  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S   |                  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S   |                  = 12 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 4 ,
S   |                  alphabet_size = 6 , total_length = 248} , self = 129 , parent = Nothing
S   |                  , duration = 1.435862076000 , status = Success , start = 2025-09-03 12:37:36.918777734
S   |                  UTC , finish = 2025-09-03 12:37:38.35463981 UTC , thread_cap_info = ("ThreadId
S   |                  211", 2, False)}
S   |                  
|   F                  
| E                    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| E                    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| E                    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| E                    , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E                    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E                    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| E                    , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size
| E                    = 6 , total_length = 248} , self = 131 , parent = Nothing , duration =
| E                    0.518018422000 , status = Except "AsyncCancelled" , start = 2025-09-03
| E                    12:37:37.978070585 UTC , finish = 2025-09-03 12:37:38.496089007 UTC , thread_cap_info
| E                    = ("ThreadId 213", 2, False)}
| E                    
S |                    
  E                    
