last 2300 length 9091
last 2567 length 10601
CNF 2300 vars 9091 clauses
CNF 2567 vars 10601 clauses
last 2603 length 13129
last 1928 length 8919
CNF 1928 vars 8919 clauses
CNF 2603 vars 13129 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8820, clauses: 31673
last 8820 length 31673
CNF 8820 vars 31673 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13814, clauses: 49377
last 13814 length 49377
CNF 13814 vars 49377 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8820, clauses: 31673, status: Satisfied, time: 0.367347269s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13814, clauses: 49377, status: Satisfied, time: 0.291825672s
last 2437 length 13674
CNF 2437 vars 13674 clauses
last 1546 length 6251
last 2090 length 10965
CNF 2090 vars 10965 clauses
CNF 1546 vars 6251 clauses
last 2059 length 8669
CNF 2059 vars 8669 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8380, clauses: 29662
last 8380 length 29662
CNF 8380 vars 29662 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10169, clauses: 35784
last 10169 length 35784
CNF 10169 vars 35784 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8380, clauses: 29662, status: Satisfied, time: 0.302627086s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10169, clauses: 35784, status: Satisfied, time: 0.365005284s
last 2429 length 13644
CNF 2429 vars 13644 clauses
last 1118 length 4653
last 2082 length 10935
CNF 1118 vars 4653 clauses
last 1611 length 6979
CNF 2082 vars 10935 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8274, clauses: 29273
CNF 1611 vars 6979 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6905, clauses: 23985
last 8274 length 29273
last 6905 length 23985
CNF 8274 vars 29273 clauses
CNF 6905 vars 23985 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 27241, clauses: 112358
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6905, clauses: 23985, status: Satisfied, time: 0.626302162s
last 27241 length 112358
CNF 27241 vars 112358 clauses
last 1873 length 7961
last 1402 length 5709
CNF 1873 vars 7961 clauses
CNF 1402 vars 5709 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8274, clauses: 29273, status: Unsatisfied, time: 1.466703141s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8887, clauses: 31153
last 8887 length 31153
CNF 8887 vars 31153 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8887, clauses: 31153, status: Satisfied, time: 0.32784536s
last 1336 length 5457
CNF 1336 vars 5457 clauses
last 1839 length 7827
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16879, clauses: 65623
CNF 1839 vars 7827 clauses
last 16879 length 65623
CNF 16879 vars 65623 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8676, clauses: 30332
last 8676 length 30332
CNF 8676 vars 30332 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8676, clauses: 30332, status: Unsatisfied, time: 1.136263381s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 27938, clauses: 115077
last 27938 length 115077
CNF 27938 vars 115077 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17309, clauses: 66966
last 17309 length 66966
CNF 17309 vars 66966 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16879, clauses: 65623, status: Unsatisfied, time: 4.826063791s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13405, clauses: 50063
last 13405 length 50063
CNF 13405 vars 50063 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17309, clauses: 66966, status: Unsatisfied, time: 3.788446095s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14042, clauses: 51863
last 14042 length 51863
CNF 14042 vars 51863 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14042, clauses: 51863, status: Unsatisfied, time: 2.226305132s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 47977, clauses: 190074
last 47977 length 190074
CNF 47977 vars 190074 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 26420, clauses: 97084
last 26420 length 97084
CNF 26420 vars 97084 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 48799, clauses: 192285
last 48799 length 192285
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13405, clauses: 50063, status: Unsatisfied, time: 6.803095529s
CNF 48799 vars 192285 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 25172, clauses: 93530
last 25172 length 93530
CNF 25172 vars 93530 clauses
[Info] pool sizes (success) 4699 seen 2270 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
**************************************************
summary
**************************************************
SRS with 24 rules on 15 letters       looping derivation
from
  [BA, A, ABA, b, a, b, a]
to
  [BABA, BA, A, ABA, b, a, b, a, a, a, b, a, a, a, b, a]
via 28 steps

**************************************************
proof
**************************************************
property Termination
has value Just False
for SRS
  [B, a] -> [BA] {- Input 0 -}
  [B, b] -> [B, B] {- Input 1 -}
  [BA, a] -> [BA, A] {- Input 2 -}
  [BA, b] -> [BAB] {- Input 3 -}
  [BAB, a] -> [BABA] {- Input 4 -}
  [BAB, b] -> [BAB, B] {- Input 5 -}
  [BABA, a] -> [BABAA] {- Input 6 -}
  [BABA, b] -> [BABA, B] {- Input 7 -}
  [BABAA, a] -> [BABAAA] {- Input 8 -}
  [BABAA, b] -> [BABAA, B] {- Input 9 -}
  [BABAAA, a] -> [BABAAA, A] {- Input 10 -}
  [BABAAA, b] -> [BABAAAB] {- Input 11 -}
  [BABAAAB, a] -> [BABAAABA] {- Input 12 -}
  [BABAAAB, b] -> [BABAAAB, B] {- Input 13 -}
  [BABAAABA] -> [a, b, a, b, a] {- Input 14 -}
  [A, a] -> [A, A] {- Input 15 -}
  [A, b] -> [AB] {- Input 16 -}
  [AB, a] -> [ABA] {- Input 17 -}
  [AB, b] -> [AB, B] {- Input 18 -}
  [ABA, a] -> [ABA, A] {- Input 19 -}
  [ABA, b] -> [ABAB] {- Input 20 -}
  [ABAB, a] -> [ABABA] {- Input 21 -}
  [ABAB, b] -> [ABAB, B] {- Input 22 -}
  [ABABA] -> [b, a, b, a, a, a, b, a] {- Input 23 -}
reason
  Nontermination
    Derive   { from = [BA, A, ABA, b, a, b, a], via = [(Step   { rule = 20, position = 2}, [BA, A, ABAB, a, b, a]), (Step   { rule = 21, position = 2}, [BA, A, ABABA, b, a]), (Step   { rule = 23, position = 2}, [BA, A, b, a, b, a, a, a, b, a, b, a]), (Step   { rule = 16, position = 1}, [BA, AB, a, b, a, a, a, b, a, b, a]), (Step   { rule = 17, position = 1}, [BA, ABA, b, a, a, a, b, a, b, a]), (Step   { rule = 20, position = 1}, [BA, ABAB, a, a, a, b, a, b, a]), (Step   { rule = 21, position = 1}, [BA, ABABA, a, a, b, a, b, a]), (Step   { rule = 23, position = 1}, [BA, b, a, b, a, a, a, b, a, a, a, b, a, b, a]), (Step   { rule = 3, position = 0}, [BAB, a, b, a, a, a, b, a, a, a, b, a, b, a]), (Step   { rule = 4, position = 0}, [BABA, b, a, a, a, b, a, a, a, b, a, b, a]), (Step   { rule = 7, position = 0}, [BABA, B, a, a, a, b, a, a, a, b, a, b, a]), (Step   { rule = 0, position = 1}, [BABA, BA, a, a, b, a, a, a, b, a, b, a]), (Step   { rule = 2, position = 1}, [BABA, BA, A, a, b, a, a, a, b, a, b, a]), (Step   { rule = 15, position = 2}, [BABA, BA, A, A, b, a, a, a, b, a, b, a]), (Step   { rule = 16, position = 3}, [BABA, BA, A, AB, a, a, a, b, a, b, a]), (Step   { rule = 17, position = 3}, [BABA, BA, A, ABA, a, a, b, a, b, a]), (Step   { rule = 19, position = 3}, [BABA, BA, A, ABA, A, a, b, a, b, a]), (Step   { rule = 15, position = 4}, [BABA, BA, A, ABA, A, A, b, a, b, a]), (Step   { rule = 16, position = 5}, [BABA, BA, A, ABA, A, AB, a, b, a]), (Step   { rule = 17, position = 5}, [BABA, BA, A, ABA, A, ABA, b, a]), (Step   { rule = 20, position = 5}, [BABA, BA, A, ABA, A, ABAB, a]), (Step   { rule = 21, position = 5}, [BABA, BA, A, ABA, A, ABABA]), (Step   { rule = 23, position = 5}, [BABA, BA, A, ABA, A, b, a, b, a, a, a, b, a]), (Step   { rule = 16, position = 4}, [BABA, BA, A, ABA, AB, a, b, a, a, a, b, a]), (Step   { rule = 17, position = 4}, [BABA, BA, A, ABA, ABA, b, a, a, a, b, a]), (Step   { rule = 20, position = 4}, [BABA, BA, A, ABA, ABAB, a, a, a, b, a]), (Step   { rule = 21, position = 4}, [BABA, BA, A, ABA, ABABA, a, a, b, a]), (Step   { rule = 23, position = 4}, [BABA, BA, A, ABA, b, a, b, a, a, a, b, a, a, a, b, a])], to = [BABA, BA, A, ABA, b, a, b, a, a, a, b, a, a, a, b, a]}

**************************************************
skeleton: (24,15)\Loop{28}[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 0.338622404000
  min duration 0.075811784000
  total durat. 1.189697259000
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.076881313000
  min duration 3.076881313000
  total durat. 3.076881313000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 300
      , num_strict_rules = 300
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 141
      , total_length = 1980}
    , self = 124
    , parent = Nothing
    , duration = 3.076881313000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:14:06.749736915 UTC
    , finish = 2025-09-03 11:14:09.826618228 UTC
    , thread_cap_info = ("ThreadId 135", 0, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 0.449603075000
  min duration 0.062756207000
  total durat. 1.354752772000
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.079893126000
  min duration 3.079893126000
  total durat. 3.079893126000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 300
      , num_strict_rules = 300
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 141
      , total_length = 1980}
    , self = 125
    , parent = Nothing
    , duration = 3.079893126000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:14:06.758150585 UTC
    , finish = 2025-09-03 11:14:09.838043711 UTC
    , thread_cap_info = ("ThreadId 137", 0, False)}
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 3
  max duration 13.917621758000
  min duration 0.082265541000
  total durat. 14.121914228000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 366
      , num_strict_rules = 366
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 155
      , total_length = 2430}
    , self = 133
    , parent = Nothing
    , duration = 13.917621758000
    , status = Fail
    , start = 2025-09-03 11:14:06.495880135 UTC
    , finish = 2025-09-03 11:14:20.413501893 UTC
    , thread_cap_info = ("ThreadId 128", 3, False)}
Except "<<timeout>>" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 9.078429664000
  min duration 9.061358489000
  total durat. 18.139788153000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 31
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 24
      , alphabet_size = 18
      , total_length = 125}
    , self = 130
    , parent = Nothing
    , duration = 9.061358489000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 11:14:07.396805154 UTC
    , finish = 2025-09-03 11:14:16.458163643 UTC
    , thread_cap_info = ("ThreadId 157", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 32
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 24
      , alphabet_size = 20
      , total_length = 118}
    , self = 132
    , parent = Nothing
    , duration = 9.078429664000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 11:14:09.926979709 UTC
    , finish = 2025-09-03 11:14:19.005409373 UTC
    , thread_cap_info = ("ThreadId 187", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 6
  max duration 0.962860870000
  min duration 0.601070411000
  total durat. 4.688964658000
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 5.690562429000
  min duration 4.467793784000
  total durat. 10.158356213000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 32
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 24
      , alphabet_size = 20
      , total_length = 118}
    , self = 129
    , parent = Nothing
    , duration = 4.467793784000
    , status = Fail
    , start = 2025-09-03 11:14:11.261615162 UTC
    , finish = 2025-09-03 11:14:15.729408946 UTC
    , thread_cap_info = ("ThreadId 189", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 31
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 24
      , alphabet_size = 18
      , total_length = 125}
    , self = 128
    , parent = Nothing
    , duration = 5.690562429000
    , status = Fail
    , start = 2025-09-03 11:14:08.980163493 UTC
    , finish = 2025-09-03 11:14:14.670725922 UTC
    , thread_cap_info = ("ThreadId 172", 2, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.961895014000
  min duration 0.580440604000
  total durat. 4.758512775000
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.807740636000
  min duration 1.478338728000
  total durat. 3.286079364000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 32
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 24
      , alphabet_size = 20
      , total_length = 118}
    , self = 127
    , parent = Nothing
    , duration = 1.478338728000
    , status = Fail
    , start = 2025-09-03 11:14:09.777459926 UTC
    , finish = 2025-09-03 11:14:11.255798654 UTC
    , thread_cap_info = ("ThreadId 182", 2, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 31
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 24
      , alphabet_size = 18
      , total_length = 125}
    , self = 115
    , parent = Nothing
    , duration = 1.807740636000
    , status = Fail
    , start = 2025-09-03 11:14:07.125023029 UTC
    , finish = 2025-09-03 11:14:08.932763665 UTC
    , thread_cap_info = ("ThreadId 153", 2, False)}
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 7.399677085000
  min duration 2.861818712000
  total durat. 10.261495797000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 32
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 24
      , alphabet_size = 20
      , total_length = 118}
    , self = 131
    , parent = Nothing
    , duration = 2.861818712000
    , status = Fail
    , start = 2025-09-03 11:14:15.741281911 UTC
    , finish = 2025-09-03 11:14:18.603100623 UTC
    , thread_cap_info = ("ThreadId 194", 2, False)}
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 31
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 24
      , alphabet_size = 18
      , total_length = 125}
    , self = 134
    , parent = Nothing
    , duration = 7.399677085000
    , status = Fail
    , start = 2025-09-03 11:14:14.670760508 UTC
    , finish = 2025-09-03 11:14:22.070437593 UTC
    , thread_cap_info = ("ThreadId 192", 2, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 19.812341405000
  min duration 19.812341405000
  total durat. 19.812341405000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 24
      , num_strict_rules = 24
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 15
      , total_length = 92}
    , self = 135
    , parent = Nothing
    , duration = 19.812341405000
    , status = Fail
    , start = 2025-09-03 11:14:04.8955675 UTC
    , finish = 2025-09-03 11:14:24.707908905 UTC
    , thread_cap_info = ("ThreadId 26", 3, False)}
Success : "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize, epsilon_digits = 6}))\n , verbose = False\n , tracing = False}"
  total number 6
  max duration 1.306055195000
  min duration 0.001746621000
  total durat. 2.420950611000
  Info
    { what = "Weight\n  { modus = Pre (Or_Else Count (GLPK   { goal = Optimize, epsilon_digits = 6}))\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 5400
      , num_strict_rules = 5400
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 225
      , total_length = 31500}
    , self = 72
    , parent = Nothing
    , duration = 1.088923838000
    , status = Success
    , start = 2025-09-03 11:14:04.979016077 UTC
    , finish = 2025-09-03 11:14:06.067939915 UTC
    , thread_cap_info = ("ThreadId 54", 3, False)}
  Info
    { what = "Weight\n  { modus = Pre (Or_Else Count (GLPK   { goal = Optimize, epsilon_digits = 6}))\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 4050
      , num_strict_rules = 4050
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 225
      , total_length = 23400}
    , self = 83
    , parent = Nothing
    , duration = 1.306055195000
    , status = Success
    , start = 2025-09-03 11:14:05.189755638 UTC
    , finish = 2025-09-03 11:14:06.495810833 UTC
    , thread_cap_info = ("ThreadId 88", 0, False)}
**************************************************
F                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                , closure = Forward\n , start_strict_only = True\n , max_closure_length
F                = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                = True})" , input_size = Size { num_rules = 24 , num_strict_rules = 24
F                , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 15 , total_length
F                = 92} , self = 135 , parent = Nothing , duration = 19.812341405000 , status
F                = Fail , start = 2025-09-03 11:14:04.8955675 UTC , finish = 2025-09-03
F                11:14:24.707908905 UTC , thread_cap_info = ("ThreadId 26", 3, False)}
F                
| S              Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| S              , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| S              , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| S              = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| S              , cpf = False}" , input_size = Size { num_rules = 24 , num_strict_rules
| S              = 24 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 15 , total_length
| S              = 92} , self = 22 , parent = Nothing , duration = 0.102241227000 , status
| S              = Success , start = 2025-09-03 11:14:04.895622422 UTC , finish = 2025-09-03
| S              11:14:04.997863649 UTC , thread_cap_info = ("ThreadId 38", 0, False)}
| S              
| | S            Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | S            { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | S            = MSB_First}\n , max_size = Nothing\n , max_height = Just 2\n , initial
| | S            = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | S            = False}" , input_size = Size { num_rules = 24 , num_strict_rules = 24
| | S            , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 15 , total_length
| | S            = 92} , self = 23 , parent = Nothing , duration = 0.104220131000 , status
| | S            = Success , start = 2025-09-03 11:14:04.895669582 UTC , finish = 2025-09-03
| | S            11:14:04.999889713 UTC , thread_cap_info = ("ThreadId 42", 0, False)}
| | S            
| | | F          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | F          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | F          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | F          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | F          = Size { num_rules = 24 , num_strict_rules = 24 , num_top_rules = 0 , num_weak_rules
| | | F          = 0 , alphabet_size = 15 , total_length = 92} , self = 24 , parent = Nothing
| | | F          , duration = 0.122026929000 , status = Fail , start = 2025-09-03 11:14:04.900273699
| | | F          UTC , finish = 2025-09-03 11:14:05.022300628 UTC , thread_cap_info = ("ThreadId
| | | F          50", 2, False)}
| | | F          
| | | | S        Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | S        epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | S        = Size { num_rules = 5400 , num_strict_rules = 5400 , num_top_rules = 0
| | | | S        , num_weak_rules = 0 , alphabet_size = 225 , total_length = 31500} , self
| | | | S        = 72 , parent = Nothing , duration = 1.088923838000 , status = Success
| | | | S        , start = 2025-09-03 11:14:04.979016077 UTC , finish = 2025-09-03 11:14:06.067939915
| | | | S        UTC , thread_cap_info = ("ThreadId 54", 3, False)}
| | | | S        
| S | | |        
| E | | |        Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| E | | |        epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| E | | |        = Size { num_rules = 5400 , num_strict_rules = 5400 , num_top_rules = 0
| E | | |        , num_weak_rules = 0 , alphabet_size = 225 , total_length = 31500} , self
| E | | |        = 41 , parent = Nothing , duration = 0.132130935000 , status = Except "AsyncCancelled"
| E | | |        , start = 2025-09-03 11:14:04.99789544 UTC , finish = 2025-09-03 11:14:05.130026375
| E | | |        UTC , thread_cap_info = ("ThreadId 55", 0, False)}
| E | | |        
| | S | |        
| |   F |        
| | F   |        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F   |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F   |        = False\n , verbose = False}" , input_size = Size { num_rules = 55 , num_strict_rules
| | F   |        = 31 , num_top_rules = 31 , num_weak_rules = 24 , alphabet_size = 26 ,
| | F   |        total_length = 196} , self = 43 , parent = Nothing , duration = 0.113866771000
| | F   |        , status = Fail , start = 2025-09-03 11:14:05.039142718 UTC , finish =
| | F   |        2025-09-03 11:14:05.153009489 UTC , thread_cap_info = ("ThreadId 68", 2,
| | F   |        False)}
| | F   |        
| | | F |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F |        = False\n , verbose = False}" , input_size = Size { num_rules = 34 , num_strict_rules
| | | F |        = 10 , num_top_rules = 10 , num_weak_rules = 24 , alphabet_size = 18 ,
| | | F |        total_length = 140} , self = 47 , parent = Nothing , duration = 0.102083297000
| | | F |        , status = Fail , start = 2025-09-03 11:14:05.100653483 UTC , finish =
| | | F |        2025-09-03 11:14:05.20273678 UTC , thread_cap_info = ("ThreadId 80", 2,
| | | F |        False)}
| | | F |        
| | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 34 , num_strict_rules
| | | | | F      = 10 , num_top_rules = 10 , num_weak_rules = 24 , alphabet_size = 18 ,
| | | | | F      total_length = 140} , self = 49 , parent = Nothing , duration = 0.123477032000
| | | | | F      , status = Fail , start = 2025-09-03 11:14:05.118024351 UTC , finish =
| | | | | F      2025-09-03 11:14:05.241501383 UTC , thread_cap_info = ("ThreadId 81", 2,
| | | | | F      False)}
| | | | | F      
| E | | | |      
| S | | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | | | |      = 55 , num_strict_rules = 31 , num_top_rules = 31 , num_weak_rules = 24
| S | | | |      , alphabet_size = 26 , total_length = 196} , self = 62 , parent = Nothing
| S | | | |      , duration = 0.822330793000 , status = Success , start = 2025-09-03 11:14:05.146324667
| S | | | |      UTC , finish = 2025-09-03 11:14:05.96865546 UTC , thread_cap_info = ("ThreadId
| S | | | |      83", 2, False)}
| S | | | |      
| | F | | |      
| | E | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 55
| | E | | |      , num_strict_rules = 31 , num_top_rules = 31 , num_weak_rules = 24 , alphabet_size
| | E | | |      = 26 , total_length = 196} , self = 67 , parent = Nothing , duration =
| | E | | |      0.839606626000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | E | | |      11:14:05.179092121 UTC , finish = 2025-09-03 11:14:06.018698747 UTC , thread_cap_info
| | E | | |      = ("ThreadId 87", 2, False)}
| | E | | |      
| | | | | | S    Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | | S    epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | | S    = Size { num_rules = 4050 , num_strict_rules = 4050 , num_top_rules = 0
| | | | | | S    , num_weak_rules = 0 , alphabet_size = 225 , total_length = 23400} , self
| | | | | | S    = 83 , parent = Nothing , duration = 1.306055195000 , status = Success
| | | | | | S    , start = 2025-09-03 11:14:05.189755638 UTC , finish = 2025-09-03 11:14:06.495810833
| | | | | | S    UTC , thread_cap_info = ("ThreadId 88", 0, False)}
| | | | | | S    
| | | F | | |    
| | | F | | |    Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | F | | |    { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | F | | |    = MSB_First}\n , max_size = Nothing\n , max_height = Just 3\n , initial
| | | F | | |    = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | F | | |    = False}" , input_size = Size { num_rules = 18 , num_strict_rules = 18
| | | F | | |    , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 15 , total_length
| | | F | | |    = 68} , self = 50 , parent = Nothing , duration = 0.104286774000 , status
| | | F | | |    = Fail , start = 2025-09-03 11:14:05.220075904 UTC , finish = 2025-09-03
| | | F | | |    11:14:05.324362678 UTC , thread_cap_info = ("ThreadId 89", 0, False)}
| | | F | | |    
| | | | | F |    
| | | | | S |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S |    = 34 , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 24
| | | | | S |    , alphabet_size = 18 , total_length = 140} , self = 57 , parent = Nothing
| | | | | S |    , duration = 0.580440604000 , status = Success , start = 2025-09-03 11:14:05.285732402
| | | | | S |    UTC , finish = 2025-09-03 11:14:05.866173006 UTC , thread_cap_info = ("ThreadId
| | | | | S |    90", 2, False)}
| | | | | S |    
| | | F | | |    
| | | E | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E | | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 34
| | | E | | |    , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 24 , alphabet_size
| | | E | | |    = 18 , total_length = 140} , self = 61 , parent = Nothing , duration =
| | | E | | |    0.601070411000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | E | | |    11:14:05.358192635 UTC , finish = 2025-09-03 11:14:05.959263046 UTC , thread_cap_info
| | | E | | |    = ("ThreadId 91", 2, False)}
| | | E | | |    
| | | | | | | F  Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | | | | | F  { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | | | | | F  = MSB_First}\n , max_size = Nothing\n , max_height = Just 5\n , initial
| | | | | | | F  = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | | | | | F  = False}" , input_size = Size { num_rules = 18 , num_strict_rules = 18
| | | | | | | F  , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 15 , total_length
| | | | | | | F  = 68} , self = 56 , parent = Nothing , duration = 0.162091034000 , status
| | | | | | | F  = Fail , start = 2025-09-03 11:14:05.632821897 UTC , finish = 2025-09-03
| | | | | | | F  11:14:05.794912931 UTC , thread_cap_info = ("ThreadId 96", 0, False)}
| | | | | | | F  
| | | | | | | F  
| | | | | | | F  Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | | | | | F  { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | | | | | F  = MSB_First}\n , max_size = Nothing\n , max_height = Just 6\n , initial
| | | | | | | F  = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | | | | | F  = False}" , input_size = Size { num_rules = 18 , num_strict_rules = 18
| | | | | | | F  , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 15 , total_length
| | | | | | | F  = 68} , self = 59 , parent = Nothing , duration = 0.120013813000 , status
| | | | | | | F  = Fail , start = 2025-09-03 11:14:05.818110907 UTC , finish = 2025-09-03
| | | | | | | F  11:14:05.93812472 UTC , thread_cap_info = ("ThreadId 98", 0, False)}
| | | | | | | F  
| | | | | S | |  
| | | | |   | F  
| | | | | F |    Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | | | F |    { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | | | F |    = MSB_First}\n , max_size = Nothing\n , max_height = Just 6\n , initial
| | | | | F |    = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | | | F |    = False}" , input_size = Size { num_rules = 18 , num_strict_rules = 18
| | | | | F |    , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 15 , total_length
| | | | | F |    = 68} , self = 76 , parent = Nothing , duration = 0.166446813000 , status
| | | | | F |    = Fail , start = 2025-09-03 11:14:05.959258016 UTC , finish = 2025-09-03
| | | | | F |    11:14:06.125704829 UTC , thread_cap_info = ("ThreadId 100", 0, False)}
| | | | | F |    
| | | E | | |    
| S |   | | |    
|   E   | | |    
| F     | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F     | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F     | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 32 , num_strict_rules
| F     | | |    = 8 , num_top_rules = 8 , num_weak_rules = 24 , alphabet_size = 18 , total_length
| F     | | |    = 127} , self = 77 , parent = Nothing , duration = 0.119033782000 , status
| F     | | |    = Fail , start = 2025-09-03 11:14:06.039014166 UTC , finish = 2025-09-03
| F     | | |    11:14:06.158047948 UTC , thread_cap_info = ("ThreadId 106", 2, False)}
| F     | | |    
| |     S | |    
| | F     | |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F     | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F     | |    = False\n , verbose = False}" , input_size = Size { num_rules = 38 , num_strict_rules
| | F     | |    = 14 , num_top_rules = 14 , num_weak_rules = 24 , alphabet_size = 22 ,
| | F     | |    total_length = 138} , self = 79 , parent = Nothing , duration = 0.145747381000
| | F     | |    , status = Fail , start = 2025-09-03 11:14:06.09530082 UTC , finish = 2025-09-03
| | F     | |    11:14:06.241048201 UTC , thread_cap_info = ("ThreadId 113", 2, False)}
| | F     | |    
| | | S   | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S   | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S   | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S   | |    = 32 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 24 ,
| | | S   | |    alphabet_size = 18 , total_length = 127} , self = 88 , parent = Nothing
| | | S   | |    , duration = 0.727084987000 , status = Success , start = 2025-09-03 11:14:06.115410163
| | | S   | |    UTC , finish = 2025-09-03 11:14:06.84249515 UTC , thread_cap_info = ("ThreadId
| | | S   | |    115", 2, False)}
| | | S   | |    
| | | |   F |    
| F | |     |    
| E | |     |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E | |     |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E | |     |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | |     |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | |     |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | |     |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 32
| E | |     |    , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 24 , alphabet_size
| E | |     |    = 18 , total_length = 127} , self = 90 , parent = Nothing , duration =
| E | |     |    0.804822820000 , status = Except "AsyncCancelled" , start = 2025-09-03
| E | |     |    11:14:06.174946845 UTC , finish = 2025-09-03 11:14:06.979769665 UTC , thread_cap_info
| E | |     |    = ("ThreadId 118", 2, False)}
| E | |     |    
| | | | S   |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S   |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S   |    = 38 , num_strict_rules = 14 , num_top_rules = 14 , num_weak_rules = 24
| | | | S   |    , alphabet_size = 22 , total_length = 138} , self = 91 , parent = Nothing
| | | | S   |    , duration = 0.812281702000 , status = Success , start = 2025-09-03 11:14:06.178622812
| | | | S   |    UTC , finish = 2025-09-03 11:14:06.990904514 UTC , thread_cap_info = ("ThreadId
| | | | S   |    119", 2, False)}
| | | | S   |    
| | F | |   |    
| | E | |   |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | |   |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | |   |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | |   |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | |   |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | |   |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 38
| | E | |   |    , num_strict_rules = 14 , num_top_rules = 14 , num_weak_rules = 24 , alphabet_size
| | E | |   |    = 22 , total_length = 138} , self = 95 , parent = Nothing , duration =
| | E | |   |    0.639810496000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | E | |   |    11:14:06.399918164 UTC , finish = 2025-09-03 11:14:07.03972866 UTC , thread_cap_info
| | E | |   |    = ("ThreadId 120", 2, False)}
| | E | |   |    
| | | | |   S    
| | | | | F      Info { what = "Unlabel\n { accept_null_strict = True\n , produce_null_strict
| | | | | F      = False\n , verbose = False\n , tracing = False}" , input_size = Size {
| | | | | F      num_rules = 300 , num_strict_rules = 300 , num_top_rules = 0 , num_weak_rules
| | | | | F      = 0 , alphabet_size = 141 , total_length = 1980} , self = 85 , parent =
| | | | | F      Nothing , duration = 0.240772004000 , status = Fail , start = 2025-09-03
| | | | | F      11:14:06.495833203 UTC , finish = 2025-09-03 11:14:06.736605207 UTC , thread_cap_info
| | | | | F      = ("ThreadId 127", 0, False)}
| | | | | F      
| | | | | | F    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | F    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | F    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | F    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | F    = Size { num_rules = 366 , num_strict_rules = 366 , num_top_rules = 0 ,
| | | | | | F    num_weak_rules = 0 , alphabet_size = 155 , total_length = 2430} , self
| | | | | | F    = 133 , parent = Nothing , duration = 13.917621758000 , status = Fail ,
| | | | | | F    start = 2025-09-03 11:14:06.495880135 UTC , finish = 2025-09-03 11:14:20.413501893
| | | | | | F    UTC , thread_cap_info = ("ThreadId 128", 3, False)}
| | | | | | F    
| | | | | F |    
| | | | | E |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | E |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | E |    = False\n , verbose = False}" , input_size = Size { num_rules = 300 , num_strict_rules
| | | | | E |    = 300 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 141 ,
| | | | | E |    total_length = 1980} , self = 124 , parent = Nothing , duration = 3.076881313000
| | | | | E |    , status = Except "AsyncCancelled" , start = 2025-09-03 11:14:06.749736915
| | | | | E |    UTC , finish = 2025-09-03 11:14:09.826618228 UTC , thread_cap_info = ("ThreadId
| | | | | E |    135", 0, False)}
| | | | | E |    
| | | | | | | E  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | E  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | E  = False\n , verbose = False}" , input_size = Size { num_rules = 300 , num_strict_rules
| | | | | | | E  = 300 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 141 ,
| | | | | | | E  total_length = 1980} , self = 125 , parent = Nothing , duration = 3.079893126000
| | | | | | | E  , status = Except "AsyncCancelled" , start = 2025-09-03 11:14:06.758150585
| | | | | | | E  UTC , finish = 2025-09-03 11:14:09.838043711 UTC , thread_cap_info = ("ThreadId
| | | | | | | E  137", 0, False)}
| | | | | | | E  
| | | S | | | |  
| E |   | | | |  
|   |   S | | |  
|   E     | | |  
| F       | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F       | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F       | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 31 , num_strict_rules
| F       | | |  = 7 , num_top_rules = 7 , num_weak_rules = 24 , alphabet_size = 18 , total_length
| F       | | |  = 125} , self = 104 , parent = Nothing , duration = 0.338622404000 , status
| F       | | |  = Fail , start = 2025-09-03 11:14:07.058153515 UTC , finish = 2025-09-03
| F       | | |  11:14:07.396775919 UTC , thread_cap_info = ("ThreadId 145", 2, False)}
| F       | | |  
| | F     | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F     | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F     | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 25 , num_strict_rules
| | F     | | |  = 1 , num_top_rules = 1 , num_weak_rules = 24 , alphabet_size = 16 , total_length
| | F     | | |  = 96} , self = 103 , parent = Nothing , duration = 0.219570310000 , status
| | F     | | |  = Fail , start = 2025-09-03 11:14:07.099977442 UTC , finish = 2025-09-03
| | F     | | |  11:14:07.319547752 UTC , thread_cap_info = ("ThreadId 150", 2, False)}
| | F     | | |  
| | | F   | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F   | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F   | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 25 , num_strict_rules
| | | F   | | |  = 1 , num_top_rules = 1 , num_weak_rules = 24 , alphabet_size = 16 , total_length
| | | F   | | |  = 96} , self = 105 , parent = Nothing , duration = 0.449603075000 , status
| | | F   | | |  = Fail , start = 2025-09-03 11:14:07.111562091 UTC , finish = 2025-09-03
| | | F   | | |  11:14:07.561165166 UTC , thread_cap_info = ("ThreadId 151", 2, False)}
| | | F   | | |  
| | | | F | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F | | |  = 31 , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 24 ,
| | | | F | | |  alphabet_size = 18 , total_length = 125} , self = 115 , parent = Nothing
| | | | F | | |  , duration = 1.807740636000 , status = Fail , start = 2025-09-03 11:14:07.125023029
| | | | F | | |  UTC , finish = 2025-09-03 11:14:08.932763665 UTC , thread_cap_info = ("ThreadId
| | | | F | | |  153", 2, False)}
| | | | F | | |  
| | F | | | | |  
| | S | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S | | | | |  = 25 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 24 ,
| | S | | | | |  alphabet_size = 16 , total_length = 96} , self = 106 , parent = Nothing
| | S | | | | |  , duration = 0.961895014000 , status = Success , start = 2025-09-03 11:14:07.319586754
| | S | | | | |  UTC , finish = 2025-09-03 11:14:08.281481768 UTC , thread_cap_info = ("ThreadId
| | S | | | | |  155", 2, False)}
| | S | | | | |  
| F | | | | | |  
| E | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 31
| E | | | | | |  , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 24 , alphabet_size
| E | | | | | |  = 18 , total_length = 125} , self = 130 , parent = Nothing , duration =
| E | | | | | |  9.061358489000 , status = Except "<<timeout>>" , start = 2025-09-03 11:14:07.396805154
| E | | | | | |  UTC , finish = 2025-09-03 11:14:16.458163643 UTC , thread_cap_info = ("ThreadId
| E | | | | | |  157", 2, False)}
| E | | | | | |  
| | | F | | | |  
| | | E | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 25
| | | E | | | |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 24 , alphabet_size
| | | E | | | |  = 16 , total_length = 96} , self = 108 , parent = Nothing , duration =
| | | E | | | |  0.840793435000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | E | | | |  11:14:07.578083675 UTC , finish = 2025-09-03 11:14:08.41887711 UTC , thread_cap_info
| | | E | | | |  = ("ThreadId 158", 2, False)}
| | | E | | | |  
| | S | | | | |  
| |   E | | | |  
| | F   | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F   | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F   | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | F   | | | |  = 9 , num_top_rules = 9 , num_weak_rules = 24 , alphabet_size = 20 , total_length
| | F   | | | |  = 122} , self = 114 , parent = Nothing , duration = 0.174609219000 , status
| | F   | | | |  = Fail , start = 2025-09-03 11:14:08.430507692 UTC , finish = 2025-09-03
| | F   | | | |  11:14:08.605116911 UTC , thread_cap_info = ("ThreadId 167", 2, False)}
| | F   | | | |  
| | | F | | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | | F | | | |  = 9 , num_top_rules = 9 , num_weak_rules = 24 , alphabet_size = 20 , total_length
| | | F | | | |  = 122} , self = 113 , parent = Nothing , duration = 0.141469815000 , status
| | | F | | | |  = Fail , start = 2025-09-03 11:14:08.463634436 UTC , finish = 2025-09-03
| | | F | | | |  11:14:08.605104251 UTC , thread_cap_info = ("ThreadId 166", 2, False)}
| | | F | | | |  
| | | F | | | |  
| | F   | | | |  
| | S   | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S   | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S   | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S   | | | |  = 33 , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 24 ,
| | S   | | | |  alphabet_size = 20 , total_length = 122} , self = 116 , parent = Nothing
| | S   | | | |  , duration = 0.854479675000 , status = Success , start = 2025-09-03 11:14:08.605138147
| | S   | | | |  UTC , finish = 2025-09-03 11:14:09.459617822 UTC , thread_cap_info = ("ThreadId
| | S   | | | |  170", 2, False)}
| | S   | | | |  
| | | E | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 33
| | | E | | | |  , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 24 , alphabet_size
| | | E | | | |  = 20 , total_length = 122} , self = 118 , parent = Nothing , duration =
| | | E | | | |  0.962860870000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | E | | | |  11:14:08.621369748 UTC , finish = 2025-09-03 11:14:09.584230618 UTC , thread_cap_info
| | | E | | | |  = ("ThreadId 171", 2, False)}
| | | E | | | |  
| | | | F | | |  
| | | | F | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | F | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | F | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | F | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 31
| | | | F | | |  , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 24 , alphabet_size
| | | | F | | |  = 18 , total_length = 125} , self = 128 , parent = Nothing , duration =
| | | | F | | |  5.690562429000 , status = Fail , start = 2025-09-03 11:14:08.980163493
| | | | F | | |  UTC , finish = 2025-09-03 11:14:14.670725922 UTC , thread_cap_info = ("ThreadId
| | | | F | | |  172", 2, False)}
| | | | F | | |  
| | S | | | | |  
| |   E | | | |  
| | F   | | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F   | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F   | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 32 , num_strict_rules
| | F   | | | |  = 8 , num_top_rules = 8 , num_weak_rules = 24 , alphabet_size = 20 , total_length
| | F   | | | |  = 118} , self = 123 , parent = Nothing , duration = 0.111044382000 , status
| | F   | | | |  = Fail , start = 2025-09-03 11:14:09.666373724 UTC , finish = 2025-09-03
| | F   | | | |  11:14:09.777418106 UTC , thread_cap_info = ("ThreadId 178", 2, False)}
| | F   | | | |  
| | | F | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 32 , num_strict_rules
| | | F | | | |  = 8 , num_top_rules = 8 , num_weak_rules = 24 , alphabet_size = 20 , total_length
| | | F | | | |  = 118} , self = 126 , parent = Nothing , duration = 0.221560988000 , status
| | | F | | | |  = Fail , start = 2025-09-03 11:14:09.682717927 UTC , finish = 2025-09-03
| | | F | | | |  11:14:09.904278915 UTC , thread_cap_info = ("ThreadId 179", 2, False)}
| | | F | | | |  
| | F | | | | |  
| | F | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | | | | |  = 32 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 24 ,
| | F | | | | |  alphabet_size = 20 , total_length = 118} , self = 127 , parent = Nothing
| | F | | | | |  , duration = 1.478338728000 , status = Fail , start = 2025-09-03 11:14:09.777459926
| | F | | | | |  UTC , finish = 2025-09-03 11:14:11.255798654 UTC , thread_cap_info = ("ThreadId
| | F | | | | |  182", 2, False)}
| | F | | | | |  
| | | | | E | |  
| | | | |   | E  
| | | F |   |    
| | | E |   |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E |   |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E |   |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E |   |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E |   |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E |   |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 32
| | | E |   |    , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 24 , alphabet_size
| | | E |   |    = 20 , total_length = 118} , self = 132 , parent = Nothing , duration =
| | | E |   |    9.078429664000 , status = Except "<<timeout>>" , start = 2025-09-03 11:14:09.926979709
| | | E |   |    UTC , finish = 2025-09-03 11:14:19.005409373 UTC , thread_cap_info = ("ThreadId
| | | E |   |    187", 2, False)}
| | | E |   |    
| | F | |   |    
| | F | |   |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | F | |   |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F | |   |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F | |   |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F | |   |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F | |   |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 32
| | F | |   |    , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 24 , alphabet_size
| | F | |   |    = 20 , total_length = 118} , self = 129 , parent = Nothing , duration =
| | F | |   |    4.467793784000 , status = Fail , start = 2025-09-03 11:14:11.261615162
| | F | |   |    UTC , finish = 2025-09-03 11:14:15.729408946 UTC , thread_cap_info = ("ThreadId
| | F | |   |    189", 2, False)}
| | F | |   |    
| | | | F   |    
| | | | F   |    Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F   |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F   |    = 31 , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 24 ,
| | | | F   |    alphabet_size = 18 , total_length = 125} , self = 134 , parent = Nothing
| | | | F   |    , duration = 7.399677085000 , status = Fail , start = 2025-09-03 11:14:14.670760508
| | | | F   |    UTC , finish = 2025-09-03 11:14:22.070437593 UTC , thread_cap_info = ("ThreadId
| | | | F   |    192", 2, False)}
| | | | F   |    
| | F | |   |    
| | F | |   |    Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | F | |   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | |   |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | |   |    = 32 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 24 ,
| | F | |   |    alphabet_size = 20 , total_length = 118} , self = 131 , parent = Nothing
| | F | |   |    , duration = 2.861818712000 , status = Fail , start = 2025-09-03 11:14:15.741281911
| | F | |   |    UTC , finish = 2025-09-03 11:14:18.603100623 UTC , thread_cap_info = ("ThreadId
| | F | |   |    194", 2, False)}
| | F | |   |    
| E | | |   |    
|   F | |   |    
|     E |   |    
|       |   F    
|       F        
F                
S                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
S                , closure = Forward\n , start_strict_only = True\n , max_closure_length
S                = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
S                , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
S                max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
S                [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
S                string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
S                , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
S                = True})" , input_size = Size { num_rules = 24 , num_strict_rules = 24
S                , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 15 , total_length
S                = 92} , self = 136 , parent = Nothing , duration = 0.145413340000 , status
S                = Success , start = 2025-09-03 11:14:24.717582235 UTC , finish = 2025-09-03
S                11:14:24.862995575 UTC , thread_cap_info = ("ThreadId 206", 3, False)}
S                
S                
