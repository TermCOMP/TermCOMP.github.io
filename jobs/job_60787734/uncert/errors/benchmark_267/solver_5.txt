Input TRS:
    1: B(a(x1)) -> BA(x1)
    2: B(b(x1)) -> B(B(x1))
    3: BA(a(x1)) -> BA(A(x1))
    4: BA(b(x1)) -> BAB(x1)
    5: BAB(a(x1)) -> BAB(A(x1))
    6: BAB(b(x1)) -> BABB(x1)
    7: BABB(a(x1)) -> BABB(A(x1))
    8: BABB(b(x1)) -> BABBB(x1)
    9: BABBB(a(x1)) -> BABBBA(x1)
    10: BABBB(b(x1)) -> BABBB(B(x1))
    11: BABBBA(a(x1)) -> BABBBA(A(x1))
    12: BABBBA(b(x1)) -> BABBBAB(x1)
    13: BABBBAB(a(x1)) -> BABBBABA(x1)
    14: BABBBAB(b(x1)) -> BABBBAB(B(x1))
    15: BABBBABA(a(x1)) -> BABBBABA(A(x1))
    16: BABBBABA(b(x1)) -> BABBBABAB(x1)
    17: BABBBABAB(a(x1)) -> BABBBABABA(x1)
    18: BABBBABAB(b(x1)) -> BABBBABAB(B(x1))
    19: BABBBABABA(x1) -> a(b(b(b(a(x1)))))
    20: A(a(x1)) -> A(A(x1))
    21: A(b(x1)) -> AB(x1)
    22: AB(a(x1)) -> AB(A(x1))
    23: AB(b(x1)) -> ABB(x1)
    24: ABB(a(x1)) -> ABB(A(x1))
    25: ABB(b(x1)) -> ABBB(x1)
    26: ABBB(a(x1)) -> ABBBA(x1)
    27: ABBB(b(x1)) -> ABBB(B(x1))
    28: ABBBA(x1) -> b(a(b(b(b(a(b(a(b(a(x1))))))))))
Number of strict rules: 28
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #B(b(x1)) -> #B(B(x1))
   #2: #B(b(x1)) -> #B(x1)
   #3: #BAB(b(x1)) -> #BABB(x1)
   #4: #BABBBAB(a(x1)) -> #BABBBABA(x1)
   #5: #BABBB(a(x1)) -> #BABBBA(x1)
   #6: #BABBBA(a(x1)) -> #BABBBA(A(x1))
   #7: #BABBBA(a(x1)) -> #A(x1)
   #8: #ABB(a(x1)) -> #ABB(A(x1))
   #9: #ABB(a(x1)) -> #A(x1)
   #10: #AB(b(x1)) -> #ABB(x1)
   #11: #BABBBA(b(x1)) -> #BABBBAB(x1)
   #12: #BABBBAB(b(x1)) -> #BABBBAB(B(x1))
   #13: #BABBBAB(b(x1)) -> #B(x1)
   #14: #ABB(b(x1)) -> #ABBB(x1)
   #15: #A(a(x1)) -> #A(A(x1))
   #16: #A(a(x1)) -> #A(x1)
   #17: #BABB(a(x1)) -> #BABB(A(x1))
   #18: #BABB(a(x1)) -> #A(x1)
   #19: #BABBB(b(x1)) -> #BABBB(B(x1))
   #20: #BABBB(b(x1)) -> #B(x1)
   #21: #BAB(a(x1)) -> #BAB(A(x1))
   #22: #BAB(a(x1)) -> #A(x1)
   #23: #AB(a(x1)) -> #AB(A(x1))
   #24: #AB(a(x1)) -> #A(x1)
   #25: #ABBB(b(x1)) -> #ABBB(B(x1))
   #26: #ABBB(b(x1)) -> #B(x1)
   #27: #BABBBABAB(a(x1)) -> #BABBBABABA(x1)
   #28: #ABBB(a(x1)) -> #ABBBA(x1)
   #29: #A(b(x1)) -> #AB(x1)
   #30: #BABBBABA(b(x1)) -> #BABBBABAB(x1)
   #31: #BA(a(x1)) -> #BA(A(x1))
   #32: #BA(a(x1)) -> #A(x1)
   #33: #B(a(x1)) -> #BA(x1)
   #34: #BABB(b(x1)) -> #BABBB(x1)
   #35: #BABBBABA(a(x1)) -> #BABBBABA(A(x1))
   #36: #BABBBABA(a(x1)) -> #A(x1)
   #37: #BA(b(x1)) -> #BAB(x1)
   #38: #BABBBABAB(b(x1)) -> #BABBBABAB(B(x1))
   #39: #BABBBABAB(b(x1)) -> #B(x1)
Number of SCCs: 1, DPs: 35, edges: 79
	SCC { #1..24 #26 #29..37 #39 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: x1_1 + x1_2; (/ 1 16)
BABBBA(x1)	weight: x1_1; (/ 1 16) + x1_1
  #BA(x1)	weight: x1_1; x1_1
 ABBBA(x1)	weight: x1_1 + x1_2; 0
#ABBBA(x1)	weight: 0; 0
BABBBAB(x1)	weight: x1_1; (/ 1 16) + x1_1
     b(x1)	weight: x1_1; 0
   #B(x1)	weight: x1_1; x1_1
 BABBB(x1)	weight: x1_1; (/ 1 16) + x1_1
#ABBB(x1)	weight: x1_1; x1_1
    AB(x1)	weight: x1_1; (/ 1 32)
   ABB(x1)	weight: x1_1; 0
#BABBBAB(x1)	weight: x1_1; x1_1
BABBBABA(x1)	weight: x1_1; (/ 1 16) + x1_1
BABBBABABA(x1)	weight: x1_1 + x1_2; (/ 1 16)
   BAB(x1)	weight: x1_1; (/ 1 16) + x1_1
     B(x1)	weight: x1_1; (/ 1 16) + x1_1
 #BAB(x1)	weight: x1_1; x1_1
#BABBBABAB(x1)	weight: x1_1; x1_1
     A(x1)	weight: x1_1; (/ 1 32)
#BABBBA(x1)	weight: x1_1 + x1_2; x1_1
   #A(x1)	weight: x1_1; x1_1
BABBBABAB(x1)	weight: x1_1; (/ 1 16) + x1_1
#BABB(x1)	weight: x1_1; x1_1
#BABBBABABA(x1)	weight: 0; 0
#BABBBABA(x1)	weight: x1_1; x1_1
  BABB(x1)	weight: x1_1; (/ 1 16) + x1_1
  ABBB(x1)	weight: x1_1; 0
 #ABB(x1)	weight: x1_1; x1_1
  #AB(x1)	weight: x1_1; x1_1
    BA(x1)	weight: x1_1; (/ 1 16) + x1_1
#BABBB(x1)	weight: x1_1; x1_1
    Usable rules: { 1..28 }
    Removed DPs: #6 #7
Number of SCCs: 1, DPs: 33, edges: 73
	SCC { #1..5 #8..24 #26 #29..37 #39 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: x1_1 + x1_2; (/ 1 16)
BABBBA(x1)	weight: x1_1; (/ 1 16)
  #BA(x1)	weight: x1_1; x1_1
 ABBBA(x1)	weight: x1_1 + x1_2; 0
#ABBBA(x1)	weight: 0; 0
BABBBAB(x1)	weight: x1_1; (/ 1 16)
     b(x1)	weight: x1_1; 0
   #B(x1)	weight: x1_1; x1_1
 BABBB(x1)	weight: x1_1; (/ 1 16)
#ABBB(x1)	weight: x1_1; x1_1
    AB(x1)	weight: x1_1; (/ 1 32)
   ABB(x1)	weight: x1_1; 0
#BABBBAB(x1)	weight: x1_1; x1_1
BABBBABA(x1)	weight: x1_1; (/ 1 16)
BABBBABABA(x1)	weight: x1_1 + x1_2; (/ 1 16)
   BAB(x1)	weight: x1_1; (/ 1 16)
     B(x1)	weight: x1_1; (/ 1 16)
 #BAB(x1)	weight: x1_1; x1_1
#BABBBABAB(x1)	weight: x1_1; x1_1
     A(x1)	weight: x1_1; (/ 1 32)
#BABBBA(x1)	weight: x1_1 + x1_2; x1_1
   #A(x1)	weight: x1_1 + x1_2; x1_1
BABBBABAB(x1)	weight: x1_1; (/ 1 16)
#BABB(x1)	weight: x1_1; x1_1
#BABBBABABA(x1)	weight: 0; 0
#BABBBABA(x1)	weight: x1_1; x1_1
  BABB(x1)	weight: x1_1; (/ 1 16)
  ABBB(x1)	weight: x1_1; 0
 #ABB(x1)	weight: x1_1; x1_1
  #AB(x1)	weight: x1_1; x1_1
    BA(x1)	weight: x1_1; (/ 1 16)
#BABBB(x1)	weight: x1_1; x1_1
    Usable rules: { 1..28 }
    Removed DPs: #15 #16
Number of SCCs: 1, DPs: 31, edges: 57
	SCC { #1..5 #8..14 #17..24 #26 #29..37 #39 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: x1_1 + x1_2; (/ 1 16)
BABBBA(x1)	weight: x1_1; (/ 1 16)
  #BA(x1)	weight: x1_1 + x1_2; x1_1
 ABBBA(x1)	weight: x1_1 + x1_2; 0
#ABBBA(x1)	weight: 0; 0
BABBBAB(x1)	weight: x1_1; (/ 1 16)
     b(x1)	weight: x1_1; 0
   #B(x1)	weight: x1_1; x1_1
 BABBB(x1)	weight: x1_1; (/ 1 16)
#ABBB(x1)	weight: x1_1; x1_1
    AB(x1)	weight: x1_1; (/ 1 32)
   ABB(x1)	weight: x1_1; 0
#BABBBAB(x1)	weight: x1_1; x1_1
BABBBABA(x1)	weight: x1_1; (/ 1 16)
BABBBABABA(x1)	weight: x1_1 + x1_2; (/ 1 16)
   BAB(x1)	weight: x1_1; (/ 1 16)
     B(x1)	weight: x1_1; (/ 1 16)
 #BAB(x1)	weight: x1_1; x1_1
#BABBBABAB(x1)	weight: x1_1; x1_1
     A(x1)	weight: x1_1; (/ 1 32)
#BABBBA(x1)	weight: x1_1 + x1_2; x1_1
   #A(x1)	weight: x1_1 + x1_2; x1_1
BABBBABAB(x1)	weight: x1_1; (/ 1 16)
#BABB(x1)	weight: x1_1; x1_1
#BABBBABABA(x1)	weight: 0; 0
#BABBBABA(x1)	weight: x1_1; x1_1
  BABB(x1)	weight: x1_1; (/ 1 16)
  ABBB(x1)	weight: x1_1; 0
 #ABB(x1)	weight: x1_1; x1_1
  #AB(x1)	weight: x1_1; x1_1
    BA(x1)	weight: x1_1; (/ 1 16)
#BABBB(x1)	weight: x1_1; x1_1
    Usable rules: { 1..28 }
    Removed DPs: #31 #32
Number of SCCs: 1, DPs: 29, edges: 53
	SCC { #1..5 #8..14 #17..24 #26 #29 #30 #33..37 #39 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: x1_1 + x1_2; (/ 1 16)
BABBBA(x1)	weight: x1_1; (/ 1 16)
  #BA(x1)	weight: x1_1 + x1_2; x1_1
 ABBBA(x1)	weight: x1_1 + x1_2; 0
#ABBBA(x1)	weight: 0; 0
BABBBAB(x1)	weight: x1_1; (/ 1 16)
     b(x1)	weight: x1_1; 0
   #B(x1)	weight: x1_1; x1_1
 BABBB(x1)	weight: x1_1; (/ 1 16)
#ABBB(x1)	weight: x1_1; x1_1
    AB(x1)	weight: x1_1; (/ 1 32)
   ABB(x1)	weight: x1_1; 0
#BABBBAB(x1)	weight: x1_1; x1_1
BABBBABA(x1)	weight: x1_1; (/ 1 16)
BABBBABABA(x1)	weight: x1_1 + x1_2; (/ 1 16)
   BAB(x1)	weight: x1_1; (/ 1 16)
     B(x1)	weight: x1_1; (/ 1 16)
 #BAB(x1)	weight: x1_1; x1_1
#BABBBABAB(x1)	weight: x1_1; x1_1
     A(x1)	weight: x1_1; (/ 1 32)
#BABBBA(x1)	weight: x1_1 + x1_2; x1_1
   #A(x1)	weight: x1_1 + x1_2; x1_1
BABBBABAB(x1)	weight: x1_1; (/ 1 16)
#BABB(x1)	weight: x1_1; x1_1
#BABBBABABA(x1)	weight: 0; 0
#BABBBABA(x1)	weight: x1_1 + x1_2; x1_1
  BABB(x1)	weight: x1_1; (/ 1 16)
  ABBB(x1)	weight: x1_1; 0
 #ABB(x1)	weight: x1_1; x1_1
  #AB(x1)	weight: x1_1; x1_1
    BA(x1)	weight: x1_1; (/ 1 16)
#BABBB(x1)	weight: x1_1; x1_1
    Usable rules: { 1..28 }
    Removed DPs: #35 #36
Number of SCCs: 1, DPs: 27, edges: 49
	SCC { #1..5 #8..14 #17..24 #26 #29 #30 #33 #34 #37 #39 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
