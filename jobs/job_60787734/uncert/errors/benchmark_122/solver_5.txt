Input TRS:
    1: B(a(x1)) -> BA(x1)
    2: B(b(x1)) -> B(B(x1))
    3: BA(a(x1)) -> BAA(x1)
    4: BA(b(x1)) -> BA(B(x1))
    5: BAA(a(x1)) -> BAAA(x1)
    6: BAA(b(x1)) -> BAA(B(x1))
    7: BAAA(a(x1)) -> BAAAA(x1)
    8: BAAA(b(x1)) -> BAAA(B(x1))
    9: BAAAA(a(x1)) -> BAAAAA(x1)
    10: BAAAA(b(x1)) -> BAAAA(B(x1))
    11: BAAAAA(a(x1)) -> BAAAAAA(x1)
    12: BAAAAA(b(x1)) -> BAAAAA(B(x1))
    13: BAAAAAA(a(x1)) -> BAAAAAA(A(x1))
    14: BAAAAAA(b(x1)) -> BAAAAAAB(x1)
    15: BAAAAAAB(a(x1)) -> BAAAAAABA(x1)
    16: BAAAAAAB(b(x1)) -> BAAAAAAB(B(x1))
    17: BAAAAAABA(a(x1)) -> BAAAAAABAA(x1)
    18: BAAAAAABA(b(x1)) -> BAAAAAABA(B(x1))
    19: BAAAAAABAA(x1) -> a(b(a(a(a(x1)))))
    20: A(a(x1)) -> A(A(x1))
    21: A(b(x1)) -> AB(x1)
    22: AB(a(x1)) -> ABA(x1)
    23: AB(b(x1)) -> AB(B(x1))
    24: ABA(a(x1)) -> ABAA(x1)
    25: ABA(b(x1)) -> ABA(B(x1))
    26: ABAA(a(x1)) -> ABAAA(x1)
    27: ABAA(b(x1)) -> ABAA(B(x1))
    28: ABAAA(x1) -> b(a(a(a(a(a(a(b(a(a(x1))))))))))
Number of strict rules: 28
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #B(b(x1)) -> #B(B(x1))
   #2: #B(b(x1)) -> #B(x1)
   #3: #BAA(b(x1)) -> #BAA(B(x1))
   #4: #BAA(b(x1)) -> #B(x1)
   #5: #BAAAAAA(a(x1)) -> #BAAAAAA(A(x1))
   #6: #BAAAAAA(a(x1)) -> #A(x1)
   #7: #BAAAA(a(x1)) -> #BAAAAA(x1)
   #8: #BAAAAA(a(x1)) -> #BAAAAAA(x1)
   #9: #ABA(a(x1)) -> #ABAA(x1)
   #10: #AB(b(x1)) -> #AB(B(x1))
   #11: #AB(b(x1)) -> #B(x1)
   #12: #BAAAAA(b(x1)) -> #BAAAAA(B(x1))
   #13: #BAAAAA(b(x1)) -> #B(x1)
   #14: #BAAAAAA(b(x1)) -> #BAAAAAAB(x1)
   #15: #ABA(b(x1)) -> #ABA(B(x1))
   #16: #ABA(b(x1)) -> #B(x1)
   #17: #A(a(x1)) -> #A(A(x1))
   #18: #A(a(x1)) -> #A(x1)
   #19: #BAAA(a(x1)) -> #BAAAA(x1)
   #20: #BAAAA(b(x1)) -> #BAAAA(B(x1))
   #21: #BAAAA(b(x1)) -> #B(x1)
   #22: #BAA(a(x1)) -> #BAAA(x1)
   #23: #AB(a(x1)) -> #ABA(x1)
   #24: #ABAA(b(x1)) -> #ABAA(B(x1))
   #25: #ABAA(b(x1)) -> #B(x1)
   #26: #BAAAAAABA(a(x1)) -> #BAAAAAABAA(x1)
   #27: #ABAA(a(x1)) -> #ABAAA(x1)
   #28: #A(b(x1)) -> #AB(x1)
   #29: #BAAAAAAB(b(x1)) -> #BAAAAAAB(B(x1))
   #30: #BAAAAAAB(b(x1)) -> #B(x1)
   #31: #BA(a(x1)) -> #BAA(x1)
   #32: #B(a(x1)) -> #BA(x1)
   #33: #BAAA(b(x1)) -> #BAAA(B(x1))
   #34: #BAAA(b(x1)) -> #B(x1)
   #35: #BAAAAAAB(a(x1)) -> #BAAAAAABA(x1)
   #36: #BA(b(x1)) -> #BA(B(x1))
   #37: #BA(b(x1)) -> #B(x1)
   #38: #BAAAAAABA(b(x1)) -> #BAAAAAABA(B(x1))
   #39: #BAAAAAABA(b(x1)) -> #B(x1)
Number of SCCs: 1, DPs: 35, edges: 79
	SCC { #1..23 #25 #28..37 #39 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: x1_2; x1_2
  #BA(x1)	weight: x1_2; 0
  ABAA(x1)	weight: (/ 1 16) + x1_2; x1_2
#BAAAAAA(x1)	weight: x1_2; 0
#BAAA(x1)	weight: x1_2; 0
     b(x1)	weight: (/ 1 16) + x1_1; x1_1
   #B(x1)	weight: x1_1; 0
#ABAAA(x1)	weight: 0; 0
  BAAA(x1)	weight: x1_2; x1_2
#BAAAAAABAA(x1)	weight: 0; 0
    AB(x1)	weight: (/ 1 16) + x1_1; x1_1
 BAAAA(x1)	weight: x1_2; x1_2
#BAAAAAABA(x1)	weight: x1_2; 0
 ABAAA(x1)	weight: (/ 1 16) + x1_2; x1_2
 #ABA(x1)	weight: x1_2; 0
   BAA(x1)	weight: x1_2; x1_2
BAAAAA(x1)	weight: x1_2; x1_2
#BAAAAAAB(x1)	weight: x1_1; 0
BAAAAAABAA(x1)	weight: x1_2; x1_2
     B(x1)	weight: (/ 1 32) + x1_1; x1_1
#BAAAA(x1)	weight: x1_2; 0
     A(x1)	weight: (/ 1 16) + x1_2; x1_2
   #A(x1)	weight: x1_2; 0
   ABA(x1)	weight: (/ 1 16) + x1_2; x1_2
BAAAAAABA(x1)	weight: x1_2; x1_2
#BAAAAA(x1)	weight: x1_2; 0
BAAAAAAB(x1)	weight: x1_1; x1_1
 #BAA(x1)	weight: x1_2; 0
BAAAAAA(x1)	weight: x1_2; x1_2
  #AB(x1)	weight: x1_1; 0
#ABAA(x1)	weight: x1_2; 0
    BA(x1)	weight: x1_2; x1_2
    Usable rules: { 1..28 }
    Removed DPs: #1 #2 #10 #11 #29 #30
Number of SCCs: 1, DPs: 29, edges: 47
	SCC { #3..9 #12..23 #25 #28 #31..37 #39 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
