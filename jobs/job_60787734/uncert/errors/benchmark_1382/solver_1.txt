last 481 length 1926
last 4103 length 18437
last 573 length 2269
CNF 481 vars 1926 clauses
CNF 4103 vars 18437 clauses
CNF 573 vars 2269 clauses
last 505 length 2092
last 3856 length 19804
CNF 3856 vars 19804 clauses
last 480 length 1934
CNF 505 vars 2092 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2384, clauses: 8616
last 2384 length 8616
CNF 480 vars 1934 clauses
CNF 2384 vars 8616 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1976, clauses: 7083
last 1976 length 7083
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6510, clauses: 26872
last 6510 length 26872
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2384, clauses: 8616, status: Unsatisfied, time: 0.065971447s
CNF 1976 vars 7083 clauses
CNF 6510 vars 26872 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6510, clauses: 26872, status: Satisfied, time: 0.048951023s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6088, clauses: 25201
last 6088 length 25201
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4127, clauses: 16486
last 4127 length 16486
CNF 6088 vars 25201 clauses
last 523 length 2079
last 476 length 1909
CNF 476 vars 1909 clauses
CNF 523 vars 2079 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1976, clauses: 7083, status: Unsatisfied, time: 0.124176989s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2278, clauses: 8191
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6088, clauses: 25201, status: Satisfied, time: 0.060878086s
last 2278 length 8191
last 475 length 1970
last 410 length 1666
CNF 410 vars 1666 clauses
CNF 2278 vars 8191 clauses
CNF 475 vars 1970 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1763, clauses: 6258
last 1763 length 6258
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6464, clauses: 26696
last 6464 length 26696
CNF 6464 vars 26696 clauses
CNF 1763 vars 6258 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2278, clauses: 8191, status: Unsatisfied, time: 0.079574874s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6464, clauses: 26696, status: Satisfied, time: 0.028552674s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1763, clauses: 6258, status: Unsatisfied, time: 0.067711847s
last 492 length 1962
last 460 length 1851
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5748, clauses: 23781
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3542, clauses: 14172
CNF 492 vars 1962 clauses
last 5748 length 23781
last 3542 length 14172
CNF 460 vars 1851 clauses
CNF 5748 vars 23781 clauses
CNF 3542 vars 14172 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5748, clauses: 23781, status: Satisfied, time: 0.042363865s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2172, clauses: 7766
last 2172 length 7766
CNF 2172 vars 7766 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6418, clauses: 26520
last 6418 length 26520
CNF 6418 vars 26520 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2172, clauses: 7766, status: Unsatisfied, time: 0.118582534s
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       context
SRS with 5 rules on 3 letters       mirror
SRS with 5 rules on 3 letters       DP
SRS with 4 strict rules and 5 weak rules on 5 letters       weights
SRS with 2 strict rules and 5 weak rules on 4 letters       EDG
SRS with 2 strict rules and 5 weak rules on 4 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 5 weak rules on 4 letters       EDG
SRS with 1 strict rules and 5 weak rules on 4 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 5 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b] -> [] {- Input 0 -}
  [a, c] -> [b, c, c, a] {- Input 1 -}
  [b, c] -> [a, b] {- Input 2 -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, a, b] -> [a] {- Input 0 -}
  [b, a, b] -> [b] {- Input 0 -}
  [c, a, b] -> [c] {- Input 0 -}
  [a, c] -> [b, c, c, a] {- Input 1 -}
  [b, c] -> [a, b] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [b, a, a] -> [a] {- Mirror (Input 0) -}
  [b, a, b] -> [b] {- Mirror (Input 0) -}
  [b, a, c] -> [c] {- Mirror (Input 0) -}
  [c, a] -> [a, c, c, b] {- Mirror (Input 1) -}
  [c, b] -> [b, a] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [b, a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [c, a] ->= [a, c, c, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, b] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
  [c#, a] |-> [b#] {- DP (Top 3) (Mirror (Input 1)) -}
  [c#, a] |-> [c#, b] {- DP (Top 2) (Mirror (Input 1)) -}
  [c#, a] |-> [c#, c, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [c#, b] |-> [b#, a] {- DP (Top 0) (Mirror (Input 2)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (b#, 0/1)
  (c#, 1/1)
   property Termination
has value Just True
for SRS
  [b, a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [c, a] ->= [a, c, c, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, b] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
  [c#, a] |-> [c#, b] {- DP (Top 2) (Mirror (Input 1)) -}
  [c#, a] |-> [c#, c, b] {- DP (Top 1) (Mirror (Input 1)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [c#, a] |-> [c#, b] {- DP (Top 2) (Mirror (Input 1)) -}
  [c#, a] |-> [c#, c, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [b, a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [c, a] ->= [a, c, c, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, b] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 0A 0A 1A \
        | 1A 1A 1A |
        \ -  -  0A / )
  ( b
  , Wk  / -   -1A 0A \
        | -1A -1A -  |
        \ -   -   0A / )
  ( c
  , Wk  / -  1A 1A \
        | 0A 1A -  |
        \ -  -  0A / )
  ( c#
  , Wk  / 0A - 0A \
        | -  - -  |
        \ -  - 0A / )
   property Termination
has value Just True
for SRS
  [c#, a] |-> [c#, c, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [b, a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [c, a] ->= [a, c, c, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, b] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [c#, a] |-> [c#, c, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [b, a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [c, a] ->= [a, c, c, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, b] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / - 1A 1A \
        | - 1A 1A |
        \ - -  0A / )
  ( b
  , Wk  / - -1A 0A \
        | - -1A -  |
        \ - -   0A / )
  ( c
  , Wk  / 0A 1A -   \
        | 0A 1A -2A |
        \ -  -  0A  / )
  ( c#
  , Wk  / 0A - 0A \
        | -  - -  |
        \ -  - 0A / )
   property Termination
has value Just True
for SRS
  [b, a, a] ->= [a] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, b] ->= [b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, c] ->= [c] {- DP Nontop (Mirror (Input 0)) -}
  [c, a] ->= [a, c, c, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, b] ->= [b, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG

**************************************************
skeleton: (3,3)\Context\Mirror(5,3)\Deepee(4/5,5)\Weight\EDG(2/5,4)\Matrix{\ArcticBZ}{3}\EDG(1/5,4)\Matrix{\ArcticBZ}{3}(0/5,3)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************

**************************************************
F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F          = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
F          = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
F          = 162} , self = 64 , parent = Nothing , duration = 0.102221205000 , status
F          = Fail , start = 2025-09-03 11:43:30.395566829 UTC , finish = 2025-09-03
F          11:43:30.497788034 UTC , thread_cap_info = ("ThreadId 60", 2, False)}
F          
| F        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F        = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| F        = 5 , total_length = 38} , self = 66 , parent = Nothing , duration = 0.124932582000
| F        , status = Fail , start = 2025-09-03 11:43:30.452247413 UTC , finish =
| F        2025-09-03 11:43:30.577179995 UTC , thread_cap_info = ("ThreadId 88", 3,
| F        False)}
| F        
| | F      Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | F      , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | F      = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | F      False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | F      = Size { num_rules = 27 , num_strict_rules = 27 , num_top_rules = 0 , num_weak_rules
| | F      = 0 , alphabet_size = 9 , total_length = 162} , self = 84 , parent = Nothing
| | F      , duration = 0.258025424000 , status = Fail , start = 2025-09-03 11:43:30.456186004
| | F      UTC , finish = 2025-09-03 11:43:30.714211428 UTC , thread_cap_info = ("ThreadId
| | F      98", 1, False)}
| | F      
| | | S    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | S    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | S    , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | S    = 5 , total_length = 38} , self = 67 , parent = Nothing , duration = 0.167927563000
| | | S    , status = Success , start = 2025-09-03 11:43:30.459976684 UTC , finish
| | | S    = 2025-09-03 11:43:30.627904247 UTC , thread_cap_info = ("ThreadId 91",
| | | S    3, False)}
| | | S    
F | | |    
F | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | |    = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
F | | |    = 4 , total_length = 31} , self = 76 , parent = Nothing , duration = 0.187711433000
F | | |    , status = Fail , start = 2025-09-03 11:43:30.498438523 UTC , finish =
F | | |    2025-09-03 11:43:30.686149956 UTC , thread_cap_info = ("ThreadId 106",
F | | |    3, False)}
F | | |    
| | | | S  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | S  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | S  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | S  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | S  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | S  = 4 , total_length = 31} , self = 77 , parent = Nothing , duration = 0.191200567000
| | | | S  , status = Success , start = 2025-09-03 11:43:30.498441037 UTC , finish
| | | | S  = 2025-09-03 11:43:30.689641604 UTC , thread_cap_info = ("ThreadId 107",
| | | | S  3, False)}
| | | | S  
| F | | |  
|   | S |  
| F |   |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F |   |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F |   |  = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| F |   |  = 5 , total_length = 35} , self = 86 , parent = Nothing , duration = 0.117616160000
| F |   |  , status = Fail , start = 2025-09-03 11:43:30.651136224 UTC , finish =
| F |   |  2025-09-03 11:43:30.768752384 UTC , thread_cap_info = ("ThreadId 122",
| F |   |  3, False)}
| F |   |  
| | | S |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | S |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | S |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | S |  = 5 , total_length = 35} , self = 87 , parent = Nothing , duration = 0.112626454000
| | | S |  , status = Success , start = 2025-09-03 11:43:30.656846666 UTC , finish
| | | S |  = 2025-09-03 11:43:30.76947312 UTC , thread_cap_info = ("ThreadId 123",
| | | S |  3, False)}
| | | S |  
F | | | |  
  | | | S  
F | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | |    = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
F | | |    = 4 , total_length = 27} , self = 94 , parent = Nothing , duration = 0.102779224000
F | | |    , status = Fail , start = 2025-09-03 11:43:30.701853248 UTC , finish =
F | | |    2025-09-03 11:43:30.804632472 UTC , thread_cap_info = ("ThreadId 133",
F | | |    3, False)}
F | | |    
| | F |    
| | S |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | S |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | S |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | S |    , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | S |    = 4 , total_length = 27} , self = 97 , parent = Nothing , duration = 0.168427383000
| | S |    , status = Success , start = 2025-09-03 11:43:30.728958077 UTC , finish
| | S |    = 2025-09-03 11:43:30.89738546 UTC , thread_cap_info = ("ThreadId 134",
| | S |    3, False)}
| | S |    
| F | |    
|   | S    
F   |      
E   |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E   |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E   |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E   |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E   |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E   |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
E   |      , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
E   |      = 4 , total_length = 27} , self = 99 , parent = Nothing , duration = 0.197955799000
E   |      , status = Except "AsyncCancelled" , start = 2025-09-03 11:43:30.804671105
E   |      UTC , finish = 2025-09-03 11:43:31.002626904 UTC , thread_cap_info = ("ThreadId
E   |      144", 3, False)}
E   |      
| F |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F |      = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| F |      = 5 , total_length = 32} , self = 101 , parent = Nothing , duration = 0.157083768000
| F |      , status = Fail , start = 2025-09-03 11:43:30.858964751 UTC , finish =
| F |      2025-09-03 11:43:31.016048519 UTC , thread_cap_info = ("ThreadId 149",
| F |      3, False)}
| F |      
| | S      
E |        
  F        
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3977, clauses: 15914
last 3977 length 15914
CNF 3977 vars 15914 clauses
