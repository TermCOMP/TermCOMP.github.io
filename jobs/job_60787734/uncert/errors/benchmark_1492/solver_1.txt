last 779 length 3378
last 976 length 4152
CNF 779 vars 3378 clauses
last 1381 length 5958
last 1381 length 5759
CNF 1381 vars 5759 clauses
CNF 976 vars 4152 clauses
CNF 1381 vars 5958 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1801, clauses: 6568
last 1801 length 6568
CNF 1801 vars 6568 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2625, clauses: 9872
last 2625 length 9872
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1801, clauses: 6568, status: Unsatisfied, time: 0.083725626s
last 3878 length 16831
CNF 2625 vars 9872 clauses
CNF 3878 vars 16831 clauses
last 3238 length 13947
CNF 3238 vars 13947 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2625, clauses: 9872, status: Unsatisfied, time: 0.164449534s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4086, clauses: 16914
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6771, clauses: 28375
last 6771 length 28375
last 4872 length 21892
last 4086 length 16914
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8944, clauses: 37537
CNF 6771 vars 28375 clauses
CNF 4872 vars 21892 clauses
last 3839 length 16975
last 4547 length 19425
CNF 4086 vars 16914 clauses
last 5900 length 26205
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5433, clauses: 22655
last 8944 length 37537
CNF 4547 vars 19425 clauses
CNF 3839 vars 16975 clauses
CNF 5900 vars 26205 clauses
last 5433 length 22655
CNF 8944 vars 37537 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5481, clauses: 20657
CNF 5433 vars 22655 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7025, clauses: 27333
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6771, clauses: 28375, status: Unsatisfied, time: 0.478869502s
last 5481 length 20657
last 7025 length 27333
CNF 5481 vars 20657 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4086, clauses: 16914, status: Unsatisfied, time: 1.124276865s
CNF 7025 vars 27333 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2977, clauses: 11440
last 2977 length 11440
CNF 2977 vars 11440 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7025, clauses: 27333, status: Satisfied, time: 0.722132016s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5481, clauses: 20657, status: Satisfied, time: 1.023350357s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2977, clauses: 11440, status: Unsatisfied, time: 0.391143655s
last 5900 length 26205
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5599, clauses: 21334
last 5599 length 21334
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11851, clauses: 51245
last 11851 length 51245
CNF 5599 vars 21334 clauses
CNF 5900 vars 26205 clauses
CNF 11851 vars 51245 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5433, clauses: 22655, status: Unsatisfied, time: 1.938875086s
last 4872 length 21892
last 4183 length 17834
last 3397 length 15151
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8944, clauses: 37537, status: Unsatisfied, time: 2.262054571s
CNF 4872 vars 21892 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4329, clauses: 17193
CNF 4183 vars 17834 clauses
CNF 3397 vars 15151 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7025, clauses: 27333
last 4329 length 17193
last 7025 length 27333
CNF 4329 vars 17193 clauses
CNF 7025 vars 27333 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7025, clauses: 27333, status: Satisfied, time: 0.27618181s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5286, clauses: 19730
last 5286 length 19730
CNF 5286 vars 19730 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4329, clauses: 17193, status: Unsatisfied, time: 0.57962095s
**************************************************
summary
**************************************************
SRS with 3 rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 12 rules on 4 letters       DP
SRS with 48 strict rules and 12 weak rules on 8 letters       weights
SRS with 12 strict rules and 12 weak rules on 8 letters       EDG
2 sub-proofs
  1 SRS with 6 strict rules and 12 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 2 strict rules and 12 weak rules on 6 letters       weights
  SRS with 0 strict rules and 12 weak rules on 4 letters       EDG

  2 SRS with 6 strict rules and 12 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 2 strict rules and 12 weak rules on 6 letters       weights
  SRS with 0 strict rules and 12 weak rules on 4 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a, a, a] -> [a, b, b, a] {- Input 0 -}
  [b, b, b, a] -> [a, a, b, a] {- Input 1 -}
  [a, b, b, a] -> [b, a, a, b] {- Input 2 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, a], [a, a], [a, a], [a, a]] -> [ [a, a] , [a, b] , [b, b] , [b, a] , [ a , a ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, a], [a, a], [a, a], [a, b]] -> [ [a, a] , [a, b] , [b, b] , [b, a] , [ a , b ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[b, a], [a, a], [a, a], [a, a], [a, a]] -> [ [b, a] , [a, b] , [b, b] , [b, a] , [ a , a ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, a], [a, a], [a, a], [a, b]] -> [ [b, a] , [a, b] , [b, b] , [b, a] , [ a , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, b], [b, b], [b, b], [b, a], [a, a]] -> [ [a, a] , [a, a] , [a, b] , [b, a] , [ a , a ] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b], [b, b], [b, b], [b, a], [a, b]] -> [ [a, a] , [a, a] , [a, b] , [b, a] , [ a , b ] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, b], [b, b], [b, b], [b, a], [a, a]] -> [ [b, a] , [a, a] , [a, b] , [b, a] , [ a , a ] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, b], [b, b], [b, b], [b, a], [a, b]] -> [ [b, a] , [a, a] , [a, b] , [b, a] , [ a , b ] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[a, a], [a, b], [b, b], [b, a], [a, a]] -> [ [a, b] , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, a], [a, b], [b, b], [b, a], [a, b]] -> [ [a, b] , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, a]] -> [ [b, b] , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [b, b] , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- Semlab 1 (Concon 1 (Input 2)) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [[a, a], [a, a], [a, a], [a, a], [a, a]] ->= [ [a, a] , [a, b] , [b, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, a], [a, a], [a, a], [a, b]] ->= [ [a, a] , [a, b] , [b, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, a], [a, a]] ->= [ [b, a] , [a, b] , [b, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, a], [a, b]] ->= [ [b, a] , [a, b] , [b, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, b], [b, b], [b, b], [b, a], [a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, b], [b, b], [b, a], [a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, b], [b, b], [b, b], [b, a], [a, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, b], [b, b], [b, a], [a, b]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[a, a], [a, b], [b, b], [b, a], [a, a]] ->= [ [a, b] , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, a], [a, b], [b, b], [b, a], [a, b]] ->= [ [a, b] , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[b, a], [a, b], [b, b], [b, a], [a, a]] ->= [ [b, b] , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, a], [a, b], [b, b], [b, a], [a, b]] ->= [ [b, b] , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
  [[a, a]#, [a, a], [a, a], [a, a], [a, a]] |-> [ [a, a]# , [a, b] , [b, b] , [b, a] , [ a , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a]#, [a, a], [a, a], [a, a], [a, a]] |-> [ [a, b]# , [b, b] , [b, a] , [ a , a ] ] {- DP (Top 1) (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a]#, [a, a], [a, a], [a, a], [a, a]] |-> [ [b, a]# , [ a , a ] ] {- DP (Top 3) (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a]#, [a, a], [a, a], [a, a], [a, a]] |-> [ [b, b]# , [b, a] , [ a , a ] ] {- DP (Top 2) (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a]#, [a, a], [a, a], [a, a], [a, b]] |-> [ [a, a]# , [a, b] , [b, b] , [b, a] , [ a , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a]#, [a, a], [a, a], [a, a], [a, b]] |-> [ [a, b]# , [b, b] , [b, a] , [ a , b ] ] {- DP (Top 1) (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a]#, [a, a], [a, a], [a, a], [a, b]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 3) (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a]#, [a, a], [a, a], [a, a], [a, b]] |-> [ [b, b]# , [b, a] , [ a , b ] ] {- DP (Top 2) (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a]#, [a, b], [b, b], [b, a], [a, a]] |-> [ [a, a]# , [a, b] , [ b , a ] ] {- DP (Top 2) (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, a]#, [a, b], [b, b], [b, a], [a, a]] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 3) (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, a]#, [a, b], [b, b], [b, a], [a, a]] |-> [ [a, b]# , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, a]#, [a, b], [b, b], [b, a], [a, a]] |-> [ [ b , a ]# ] {- DP (Top 4) (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, a]#, [a, b], [b, b], [b, a], [a, a]] |-> [ [b, a]# , [a, a] , [a, b] , [ b , a ] ] {- DP (Top 1) (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, a]#, [a, b], [b, b], [b, a], [a, b]] |-> [ [a, a]# , [a, b] , [ b , b ] ] {- DP (Top 2) (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, a]#, [a, b], [b, b], [b, a], [a, b]] |-> [ [a, b]# , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, a]#, [a, b], [b, b], [b, a], [a, b]] |-> [ [a, b]# , [ b , b ] ] {- DP (Top 3) (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, a]#, [a, b], [b, b], [b, a], [a, b]] |-> [ [b, a]# , [a, a] , [a, b] , [ b , b ] ] {- DP (Top 1) (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, a]#, [a, b], [b, b], [b, a], [a, b]] |-> [ [ b , b ]# ] {- DP (Top 4) (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, b]#, [b, b], [b, b], [b, a], [a, a]] |-> [ [a, a]# , [a, a] , [a, b] , [b, a] , [ a , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b]#, [b, b], [b, b], [b, a], [a, a]] |-> [ [a, a]# , [a, b] , [b, a] , [ a , a ] ] {- DP (Top 1) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b]#, [b, b], [b, b], [b, a], [a, a]] |-> [ [a, b]# , [b, a] , [ a , a ] ] {- DP (Top 2) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b]#, [b, b], [b, b], [b, a], [a, b]] |-> [ [a, a]# , [a, a] , [a, b] , [b, a] , [ a , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b]#, [b, b], [b, b], [b, a], [a, b]] |-> [ [a, a]# , [a, b] , [b, a] , [ a , b ] ] {- DP (Top 1) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, b]#, [b, b], [b, b], [b, a], [a, b]] |-> [ [a, b]# , [b, a] , [ a , b ] ] {- DP (Top 2) (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, a]#, [a, a], [a, a], [a, a], [a, a]] |-> [ [a, b]# , [b, b] , [b, a] , [ a , a ] ] {- DP (Top 1) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a]#, [a, a], [a, a], [a, a], [a, a]] |-> [ [b, a]# , [ a , a ] ] {- DP (Top 3) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a]#, [a, a], [a, a], [a, a], [a, a]] |-> [ [b, a]# , [a, b] , [b, b] , [b, a] , [ a , a ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a]#, [a, a], [a, a], [a, a], [a, a]] |-> [ [b, b]# , [b, a] , [ a , a ] ] {- DP (Top 2) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a]#, [a, a], [a, a], [a, a], [a, b]] |-> [ [a, b]# , [b, b] , [b, a] , [ a , b ] ] {- DP (Top 1) (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a]#, [a, a], [a, a], [a, a], [a, b]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 3) (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a]#, [a, a], [a, a], [a, a], [a, b]] |-> [ [b, a]# , [a, b] , [b, b] , [b, a] , [ a , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a]#, [a, a], [a, a], [a, a], [a, b]] |-> [ [b, b]# , [b, a] , [ a , b ] ] {- DP (Top 2) (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a]#, [a, b], [b, b], [b, a], [a, a]] |-> [ [a, a]# , [a, b] , [ b , a ] ] {- DP (Top 2) (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, a]#, [a, b], [b, b], [b, a], [a, a]] |-> [ [a, b]# , [ b , a ] ] {- DP (Top 3) (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, a]#, [a, b], [b, b], [b, a], [a, a]] |-> [ [ b , a ]# ] {- DP (Top 4) (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, a]#, [a, b], [b, b], [b, a], [a, a]] |-> [ [b, a]# , [a, a] , [a, b] , [ b , a ] ] {- DP (Top 1) (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, a]#, [a, b], [b, b], [b, a], [a, a]] |-> [ [b, b]# , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, a]#, [a, b], [b, b], [b, a], [a, b]] |-> [ [a, a]# , [a, b] , [ b , b ] ] {- DP (Top 2) (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, a]#, [a, b], [b, b], [b, a], [a, b]] |-> [ [a, b]# , [ b , b ] ] {- DP (Top 3) (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, a]#, [a, b], [b, b], [b, a], [a, b]] |-> [ [b, a]# , [a, a] , [a, b] , [ b , b ] ] {- DP (Top 1) (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, a]#, [a, b], [b, b], [b, a], [a, b]] |-> [ [ b , b ]# ] {- DP (Top 4) (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, a]#, [a, b], [b, b], [b, a], [a, b]] |-> [ [b, b]# , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, b]#, [b, b], [b, b], [b, a], [a, a]] |-> [ [a, a]# , [a, b] , [b, a] , [ a , a ] ] {- DP (Top 1) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b]#, [b, b], [b, b], [b, a], [a, a]] |-> [ [a, b]# , [b, a] , [ a , a ] ] {- DP (Top 2) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b]#, [b, b], [b, b], [b, a], [a, a]] |-> [ [b, a]# , [a, a] , [a, b] , [b, a] , [ a , a ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b]#, [b, b], [b, b], [b, a], [a, b]] |-> [ [a, a]# , [a, b] , [b, a] , [ a , b ] ] {- DP (Top 1) (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, b]#, [b, b], [b, b], [b, a], [a, b]] |-> [ [a, b]# , [b, a] , [ a , b ] ] {- DP (Top 2) (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, b]#, [b, b], [b, b], [b, a], [a, b]] |-> [ [b, a]# , [a, a] , [a, b] , [b, a] , [ a , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 1))) -}
reason
  ([a, a], 2/1)
  ([a, b], 2/1)
  ([b, a], 2/1)
  ([b, b], 2/1)
  ([a, a]#, 1/1)
  ([a, b]#, 1/1)
  ([b, a]#, 1/1)
  ([b, b]#, 1/1)
   property Termination
has value Just True
for SRS
  [[a, a], [a, a], [a, a], [a, a], [a, a]] ->= [ [a, a] , [a, b] , [b, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, a], [a, a], [a, a], [a, b]] ->= [ [a, a] , [a, b] , [b, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, a], [a, a]] ->= [ [b, a] , [a, b] , [b, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, a], [a, b]] ->= [ [b, a] , [a, b] , [b, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, b], [b, b], [b, b], [b, a], [a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, b], [b, b], [b, a], [a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, b], [b, b], [b, b], [b, a], [a, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, b], [b, b], [b, a], [a, b]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[a, a], [a, b], [b, b], [b, a], [a, a]] ->= [ [a, b] , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, a], [a, b], [b, b], [b, a], [a, b]] ->= [ [a, b] , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[b, a], [a, b], [b, b], [b, a], [a, a]] ->= [ [b, b] , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, a], [a, b], [b, b], [b, a], [a, b]] ->= [ [b, b] , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
  [[a, a]#, [a, a], [a, a], [a, a], [a, a]] |-> [ [a, a]# , [a, b] , [b, b] , [b, a] , [ a , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a]#, [a, a], [a, a], [a, a], [a, b]] |-> [ [a, a]# , [a, b] , [b, b] , [b, a] , [ a , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a]#, [a, b], [b, b], [b, a], [a, a]] |-> [ [a, b]# , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, a]#, [a, b], [b, b], [b, a], [a, b]] |-> [ [a, b]# , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, b]#, [b, b], [b, b], [b, a], [a, a]] |-> [ [a, a]# , [a, a] , [a, b] , [b, a] , [ a , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b]#, [b, b], [b, b], [b, a], [a, b]] |-> [ [a, a]# , [a, a] , [a, b] , [b, a] , [ a , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, a]#, [a, a], [a, a], [a, a], [a, a]] |-> [ [b, a]# , [a, b] , [b, b] , [b, a] , [ a , a ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a]#, [a, a], [a, a], [a, a], [a, b]] |-> [ [b, a]# , [a, b] , [b, b] , [b, a] , [ a , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a]#, [a, b], [b, b], [b, a], [a, a]] |-> [ [b, b]# , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, a]#, [a, b], [b, b], [b, a], [a, b]] |-> [ [b, b]# , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, b]#, [b, b], [b, b], [b, a], [a, a]] |-> [ [b, a]# , [a, a] , [a, b] , [b, a] , [ a , a ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b]#, [b, b], [b, b], [b, a], [a, b]] |-> [ [b, a]# , [a, a] , [a, b] , [b, a] , [ a , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 1))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, a]#, [a, a], [a, a], [a, a], [a, a]] |-> [ [a, a]# , [a, b] , [b, b] , [b, a] , [ a , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a]#, [a, a], [a, a], [a, a], [a, b]] |-> [ [a, a]# , [a, b] , [b, b] , [b, a] , [ a , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a]#, [a, b], [b, b], [b, a], [a, a]] |-> [ [a, b]# , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, b]#, [b, b], [b, b], [b, a], [a, a]] |-> [ [a, a]# , [a, a] , [a, b] , [b, a] , [ a , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, a]#, [a, b], [b, b], [b, a], [a, b]] |-> [ [a, b]# , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, b]#, [b, b], [b, b], [b, a], [a, b]] |-> [ [a, a]# , [a, a] , [a, b] , [b, a] , [ a , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a], [a, a], [a, a], [a, a], [a, a]] ->= [ [a, a] , [a, b] , [b, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, a], [a, a], [a, a], [a, b]] ->= [ [a, a] , [a, b] , [b, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, a], [a, a]] ->= [ [b, a] , [a, b] , [b, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, a], [a, b]] ->= [ [b, a] , [a, b] , [b, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, b], [b, b], [b, b], [b, a], [a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, b], [b, b], [b, a], [a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, b], [b, b], [b, b], [b, a], [a, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, b], [b, b], [b, a], [a, b]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[a, a], [a, b], [b, b], [b, a], [a, a]] ->= [ [a, b] , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, a], [a, b], [b, b], [b, a], [a, b]] ->= [ [a, b] , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[b, a], [a, b], [b, b], [b, a], [a, a]] ->= [ [b, b] , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, a], [a, b], [b, b], [b, a], [a, b]] ->= [ [b, b] , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
reason
  ( [a, a]
  , Wk  / 3A 3A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [a, b]
  , Wk  / 0A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [b, a]
  , Wk  / 0A  0A  3A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, b]
  , Wk  / 3A 6A 6A - \
        | 0A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( [a, a]#
  , Wk  / 10A 10A 10A - \
        | 10A 10A 10A - |
        | 10A 10A 10A - |
        \ -   -   -   - / )
  ( [a, b]#
  , Wk  / 10A 13A 13A - \
        | 10A 13A 13A - |
        | 10A 13A 13A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [[a, a]#, [a, b], [b, b], [b, a], [a, a]] |-> [ [a, b]# , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, a]#, [a, b], [b, b], [b, a], [a, b]] |-> [ [a, b]# , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, a], [a, a], [a, a], [a, a], [a, a]] ->= [ [a, a] , [a, b] , [b, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, a], [a, a], [a, a], [a, b]] ->= [ [a, a] , [a, b] , [b, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, a], [a, a]] ->= [ [b, a] , [a, b] , [b, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, a], [a, b]] ->= [ [b, a] , [a, b] , [b, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, b], [b, b], [b, b], [b, a], [a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, b], [b, b], [b, a], [a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, b], [b, b], [b, b], [b, a], [a, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, b], [b, b], [b, a], [a, b]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15212, clauses: 66509
  last 15212 length 66509
[[a, a], [a, b], [b, b], [b, a], [a, a]] ->= [ [a, b] , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, a], [a, b], [b, b], [b, a], [a, b]] ->= [ [a, b] , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[b, a], [a, b], [b, b], [b, a], [a, a]] ->= [ [b, b] , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, a], [a, b], [b, b], [b, a], [a, b]] ->= [ [b, b] , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([a, a]#, 1/1)
  ([a, b]#, 0/1)
   property Termination
has value Just True
for SRS
  [[a, a], [a, a], [a, a], [a, a], [a, a]] ->= [ [a, a] , [a, b] , [b, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, a], [a, a], [a, a], [a, b]] ->= [ [a, a] , [a, b] , [b, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, a], [a, a]] ->= [ [b, a] , [a, b] , [b, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, a], [a, b]] ->= [ [b, a] , [a, b] , [b, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, b], [b, b], [b, b], [b, a], [a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, b], [b, b], [b, a], [a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, b], [b, b], [b, b], [b, a], [a, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, b], [b, b], [b, a], [a, b]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[a, a], [a, b], [b, b], [b, a], [a, a]] ->= [ [a, b] , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, a], [a, b], [b, b], [b, a], [a, b]] ->= [ [a, b] , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[b, a], [a, b], [b, b], [b, a], [a, a]] ->= [ [b, b] , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, a], [a, b], [b, b], [b, a], [a, b]] ->= [ [b, b] , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [[b, a]#, [a, a], [a, a], [a, a], [a, a]] |-> [ [b, a]# , [a, b] , [b, b] , [b, a] , [ a , a ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a]#, [a, a], [a, a], [a, a], [a, b]] |-> [ [b, a]# , [a, b] , [b, b] , [b, a] , [ a , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, a]#, [a, b], [b, b], [b, a], [a, a]] |-> [ [b, b]# , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, b]#, [b, b], [b, b], [b, a], [a, a]] |-> [ [b, a]# , [a, a] , [a, b] , [b, a] , [ a , a ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, a]#, [a, b], [b, b], [b, a], [a, b]] |-> [ [b, b]# , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, b]#, [b, b], [b, b], [b, a], [a, b]] |-> [ [b, a]# , [a, a] , [a, b] , [b, a] , [ a , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 1))) -}
  [[a, a], [a, a], [a, a], [a, a], [a, a]] ->= [ [a, a] , [a, b] , [b, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, a], [a, a], [a, a], [a, b]] ->= [ [a, a] , [a, b] , [b, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, a], [a, a]] ->= [ [b, a] , [a, b] , [b, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, a], [a, b]] ->= [ [b, a] , [a, b] , [b, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, b], [b, b], [b, b], [b, a], [a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, b], [b, b], [b, a], [a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, b], [b, b], [b, b], [b, a], [a, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, b], [b, b], [b, a], [a, b]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[a, a], [a, b], [b, b], [b, a], [a, a]] ->= [ [a, b] , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, a], [a, b], [b, b], [b, a], [a, b]] ->= [ [a, b] , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[b, a], [a, b], [b, b], [b, a], [a, a]] ->= [ [b, b] , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, a], [a, b], [b, b], [b, a], [a, b]] ->= [ [b, b] , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
reason
  ( [a, a]
  , Wk  / 3A 3A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [a, b]
  , Wk  / 0A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [b, a]
  , Wk  / 0A  0A  3A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, b]
  , Wk  / 3A 6A 6A - \
        | 0A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( [b, a]#
  , Wk  / 10A 10A 10A - \
        | 10A 10A 10A - |
        | 10A 10A 10A - |
        \ -   -   -   - / )
  ( [b, b]#
  , Wk  / 10A 13A 13A - \
        | 10A 13A 13A - |
        | 10A 13A 13A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [[b, a]#, [a, b], [b, b], [b, a], [a, a]] |-> [ [b, b]# , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, a]#, [a, b], [b, b], [b, a], [a, b]] |-> [ [b, b]# , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 2))) -}
  [[a, a], [a, a], [a, a], [a, a], [a, a]] ->= [ [a, a] , [a, b] , [b, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, a], [a, a], [a, a], [a, b]] ->= [ [a, a] , [a, b] , [b, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, a], [a, a]] ->= [ [b, a] , [a, b] , [b, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, a], [a, b]] ->= [ [b, a] , [a, b] , [b, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, b], [b, b], [b, b], [b, a], [a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, b], [b, b], [b, a], [a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, b], [b, b], [b, b], [b, a], [a, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, b], [b, b], [b, a], [a, b]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[a, a], [a, b], [b, b], [b, a], [a, a]] ->= [ [a, b] , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, a], [a, b], [b, b], [b, a], [a, b]] ->= [ [a, b] , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[b, a], [a, b], [b, b], [b, a], [a, a]] ->= [ [b, b] , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, a], [a, b], [b, b], [b, a], [a, b]] ->= [ [b, b] , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, a]#, 1/1)
  ([b, b]#, 0/1)
   property Termination
has value Just True
for SRS
  [[a, a], [a, a], [a, a], [a, a], [a, a]] ->= [ [a, a] , [a, b] , [b, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, a], [a, a], [a, a], [a, a], [a, b]] ->= [ [a, a] , [a, b] , [b, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, a], [a, a]] ->= [ [b, a] , [a, b] , [b, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, a], [a, a], [a, a], [a, a], [a, b]] ->= [ [b, a] , [a, b] , [b, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, b], [b, b], [b, b], [b, a], [a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, b], [b, b], [b, a], [a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, b], [b, b], [b, b], [b, a], [a, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [ a , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [b, b], [b, b], [b, a], [a, b]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[a, a], [a, b], [b, b], [b, a], [a, a]] ->= [ [a, b] , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, a], [a, b], [b, b], [b, a], [a, b]] ->= [ [a, b] , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[b, a], [a, b], [b, b], [b, a], [a, a]] ->= [ [b, b] , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, a], [a, b], [b, b], [b, a], [a, b]] ->= [ [b, b] , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 2))) -}
reason
  EDG

**************************************************
skeleton: (3,2)\TileAllAll{2}(12,4)\Deepee(48/12,8)\Weight(12/12,8)\EDG[(6/12,6)\Matrix{\Arctic}{3}(2/12,6)\Weight(0/12,4)\EDG[],(6/12,6)\Matrix{\Arctic}{3}(2/12,6)\Weight(0/12,4)\EDG[]]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.709538075000
  min duration 0.086247579000
  total durat. 2.623064391000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.959551964000
  min duration 0.053588694000
  total durat. 2.906693918000
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 2.713222308000
  min duration 0.986611654000
  total durat. 3.699833962000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 48}
    , self = 108
    , parent = Nothing
    , duration = 2.713222308000
    , status = Fail
    , start = 2025-09-03 12:02:09.638569283 UTC
    , finish = 2025-09-03 12:02:12.351791591 UTC
    , thread_cap_info = ("ThreadId 99", 3, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 1.203699119000
  min duration 0.452304282000
  total durat. 2.787032605000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 12
      , alphabet_size = 6
      , total_length = 180}
    , self = 94
    , parent = Nothing
    , duration = 1.131029204000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:02:10.344954001 UTC
    , finish = 2025-09-03 12:02:11.475983205 UTC
    , thread_cap_info = ("ThreadId 142", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 12
      , alphabet_size = 5
      , total_length = 140}
    , self = 100
    , parent = Nothing
    , duration = 1.203699119000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:02:10.281542047 UTC
    , finish = 2025-09-03 12:02:11.485241166 UTC
    , thread_cap_info = ("ThreadId 140", 2, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 2.118281095000
  min duration 1.264366961000
  total durat. 3.382648056000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 3
      , alphabet_size = 3
      , total_length = 32}
    , self = 90
    , parent = Nothing
    , duration = 1.264366961000
    , status = Fail
    , start = 2025-09-03 12:02:09.758526252 UTC
    , finish = 2025-09-03 12:02:11.022893213 UTC
    , thread_cap_info = ("ThreadId 120", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 48}
    , self = 107
    , parent = Nothing
    , duration = 2.118281095000
    , status = Fail
    , start = 2025-09-03 12:02:09.905181212 UTC
    , finish = 2025-09-03 12:02:12.023462307 UTC
    , thread_cap_info = ("ThreadId 128", 3, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 1.369221005000
  min duration 0.837820518000
  total durat. 3.444348410000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 12
      , alphabet_size = 6
      , total_length = 180}
    , self = 91
    , parent = Nothing
    , duration = 1.237306887000
    , status = Success
    , start = 2025-09-03 12:02:10.074349256 UTC
    , finish = 2025-09-03 12:02:11.311656143 UTC
    , thread_cap_info = ("ThreadId 138", 3, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 12
      , alphabet_size = 5
      , total_length = 140}
    , self = 93
    , parent = Nothing
    , duration = 1.369221005000
    , status = Success
    , start = 2025-09-03 12:02:10.097458734 UTC
    , finish = 2025-09-03 12:02:11.466679739 UTC
    , thread_cap_info = ("ThreadId 139", 2, False)}
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.000902134000
  min duration 0.912320362000
  total durat. 1.913222496000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 48}
    , self = 117
    , parent = Nothing
    , duration = 1.000902134000
    , status = Fail
    , start = 2025-09-03 12:02:12.027814677 UTC
    , finish = 2025-09-03 12:02:13.028716811 UTC
    , thread_cap_info = ("ThreadId 164", 3, False)}
**************************************************
F                      Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                      , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                      = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                      , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                      = False}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F                      = 24} , self = 59 , parent = Nothing , duration = 0.167510816000 , status
F                      = Fail , start = 2025-09-03 12:02:09.47213407 UTC , finish = 2025-09-03
F                      12:02:09.639644886 UTC , thread_cap_info = ("ThreadId 22", 2, False)}
F                      
| F                    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| F                    , closure = Backward\n , start_strict_only = True\n , max_closure_length
| F                    = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| F                    Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| F                    8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| F                    = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| F                    ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| F                    1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| F                    = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| F                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| F                    = 24} , self = 69 , parent = Nothing , duration = 0.226826583000 , status
| F                    = Fail , start = 2025-09-03 12:02:09.472166 UTC , finish = 2025-09-03 12:02:09.698992583
| F                    UTC , thread_cap_info = ("ThreadId 34", 0, False)}
| F                    
| | F                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | F                  , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | F                  = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | F                  Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | F                  8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | F                  = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | F                  ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | F                  1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | F                  = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| | F                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | F                  = 24} , self = 81 , parent = Nothing , duration = 0.397197282000 , status
| | F                  = Fail , start = 2025-09-03 12:02:09.472198424 UTC , finish = 2025-09-03
| | F                  12:02:09.869395706 UTC , thread_cap_info = ("ThreadId 38", 1, False)}
| | F                  
| | | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | F                = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size = 3 , total_length
| | | F                = 32} , self = 53 , parent = Nothing , duration = 0.104837977000 , status
| | | F                = Fail , start = 2025-09-03 12:02:09.512040447 UTC , finish = 2025-09-03
| | | F                12:02:09.616878424 UTC , thread_cap_info = ("ThreadId 70", 3, False)}
| | | F                
| | | | F              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F              = 4 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | | | F              = 3 , total_length = 32} , self = 70 , parent = Nothing , duration = 0.112878451000
| | | | F              , status = Fail , start = 2025-09-03 12:02:09.589524218 UTC , finish =
| | | | F              2025-09-03 12:02:09.702402669 UTC , thread_cap_info = ("ThreadId 89", 3,
| | | | F              False)}
| | | | F              
| | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | F            = 12 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | | F            = 120} , self = 73 , parent = Nothing , duration = 0.194486706000 , status
| | | | | F            = Fail , start = 2025-09-03 12:02:09.599661951 UTC , finish = 2025-09-03
| | | | | F            12:02:09.794148657 UTC , thread_cap_info = ("ThreadId 92", 1, False)}
| | | | | F            
| | | F | |            
| | | F | |            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F | |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F | |            = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | F | |            = 12 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | F | |            = 120} , self = 76 , parent = Nothing , duration = 0.214269713000 , status
| | | F | |            = Fail , start = 2025-09-03 12:02:09.619149133 UTC , finish = 2025-09-03
| | | F | |            12:02:09.833418846 UTC , thread_cap_info = ("ThreadId 94", 1, False)}
| | | F | |            
| | | | | | F          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | F          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | F          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | F          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | F          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | F          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | | F          , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | | | | | F          = 3 , total_length = 32} , self = 89 , parent = Nothing , duration = 0.986611654000
| | | | | | F          , status = Fail , start = 2025-09-03 12:02:09.619162595 UTC , finish =
| | | | | | F          2025-09-03 12:02:10.605774249 UTC , thread_cap_info = ("ThreadId 98", 3,
| | | | | | F          False)}
| | | | | | F          
| | | | | | | F        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | F        = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | | | | | F        = 4 , total_length = 48} , self = 79 , parent = Nothing , duration = 0.243664256000
| | | | | | | F        , status = Fail , start = 2025-09-03 12:02:09.619893513 UTC , finish =
| | | | | | | F        2025-09-03 12:02:09.863557769 UTC , thread_cap_info = ("ThreadId 97", 3,
| | | | | | | F        False)}
| | | | | | | F        
| | | | | | | | F      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | F      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | F      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | F      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | F      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | F      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | | | | | F      , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | | | | | | F      = 4 , total_length = 48} , self = 108 , parent = Nothing , duration = 2.713222308000
| | | | | | | | F      , status = Fail , start = 2025-09-03 12:02:09.638569283 UTC , finish =
| | | | | | | | F      2025-09-03 12:02:12.351791591 UTC , thread_cap_info = ("ThreadId 99", 3,
| | | | | | | | F      False)}
| | | | | | | | F      
F | | | | | | | |      
F | | | | | | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | | | | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | | | | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
F | | | | | | | |      = 6 , num_top_rules = 6 , num_weak_rules = 12 , alphabet_size = 6 , total_length
F | | | | | | | |      = 180} , self = 88 , parent = Nothing , duration = 0.678114668000 , status
F | | | | | | | |      = Fail , start = 2025-09-03 12:02:09.648686238 UTC , finish = 2025-09-03
F | | | | | | | |      12:02:10.326800906 UTC , thread_cap_info = ("ThreadId 111", 2, False)}
F | | | | | | | |      
| | | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | | | | | | | F    = 6 , num_top_rules = 6 , num_weak_rules = 12 , alphabet_size = 6 , total_length
| | | | | | | | | F    = 180} , self = 85 , parent = Nothing , duration = 0.404916571000 , status
| | | | | | | | | F    = Fail , start = 2025-09-03 12:02:09.658521566 UTC , finish = 2025-09-03
| | | | | | | | | F    12:02:10.063438137 UTC , thread_cap_info = ("ThreadId 112", 2, False)}
| | | | | | | | | F    
| F | | | | | | | |    
|   | | F | | | | |    
| F | |   | | | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| F | |   | | | | |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F | |   | | | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F | |   | | | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | |   | | | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | |   | | | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| F | |   | | | | |    , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| F | |   | | | | |    = 3 , total_length = 32} , self = 90 , parent = Nothing , duration = 1.264366961000
| F | |   | | | | |    , status = Fail , start = 2025-09-03 12:02:09.758526252 UTC , finish =
| F | |   | | | | |    2025-09-03 12:02:11.022893213 UTC , thread_cap_info = ("ThreadId 120",
| F | |   | | | | |    3, False)}
| F | |   | | | | |    
| | | | F | | | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | F | | | | |    = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | | | F | | | | |    = 140} , self = 86 , parent = Nothing , duration = 0.334494085000 , status
| | | | F | | | | |    = Fail , start = 2025-09-03 12:02:09.762931955 UTC , finish = 2025-09-03
| | | | F | | | | |    12:02:10.09742604 UTC , thread_cap_info = ("ThreadId 118", 2, False)}
| | | | F | | | | |    
| | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | | | | | | F  = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | | | | | | | | | F  = 140} , self = 87 , parent = Nothing , duration = 0.502162019000 , status
| | | | | | | | | | F  = Fail , start = 2025-09-03 12:02:09.779355203 UTC , finish = 2025-09-03
| | | | | | | | | | F  12:02:10.281517222 UTC , thread_cap_info = ("ThreadId 119", 2, False)}
| | | | | | | | | | F  
| | | | | F | | | | |  
| | | F |   | | | | |  
| | |   |   | F | | |  
| | F   |   |   | | |  
| | F   |   |   | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | F   |   |   | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F   |   |   | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F   |   |   | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F   |   |   | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F   |   |   | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | F   |   |   | | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | F   |   |   | | |  = 4 , total_length = 48} , self = 107 , parent = Nothing , duration = 2.118281095000
| | F   |   |   | | |  , status = Fail , start = 2025-09-03 12:02:09.905181212 UTC , finish =
| | F   |   |   | | |  2025-09-03 12:02:12.023462307 UTC , thread_cap_info = ("ThreadId 128",
| | F   |   |   | | |  3, False)}
| | F   |   |   | | |  
| | |   |   |   | F |  
| | | S |   |   |   |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S |   |   |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S |   |   |   |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S |   |   |   |  = 18 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 12 ,
| | | S |   |   |   |  alphabet_size = 6 , total_length = 180} , self = 91 , parent = Nothing
| | | S |   |   |   |  , duration = 1.237306887000 , status = Success , start = 2025-09-03 12:02:10.074349256
| | | S |   |   |   |  UTC , finish = 2025-09-03 12:02:11.311656143 UTC , thread_cap_info = ("ThreadId
| | | S |   |   |   |  138", 3, False)}
| | | S |   |   |   |  
| | | | F   |   |   |  
| | | | S   |   |   |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S   |   |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S   |   |   |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S   |   |   |  = 14 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 12 ,
| | | | S   |   |   |  alphabet_size = 5 , total_length = 140} , self = 93 , parent = Nothing
| | | | S   |   |   |  , duration = 1.369221005000 , status = Success , start = 2025-09-03 12:02:10.097458734
| | | | S   |   |   |  UTC , finish = 2025-09-03 12:02:11.466679739 UTC , thread_cap_info = ("ThreadId
| | | | S   |   |   |  139", 2, False)}
| | | | S   |   |   |  
| | | | |   |   |   F  
| | | | | E |   |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E |   |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E |   |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E |   |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E |   |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E |   |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
| | | | | E |   |      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size
| | | | | E |   |      = 5 , total_length = 140} , self = 100 , parent = Nothing , duration =
| | | | | E |   |      1.203699119000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | E |   |      12:02:10.281542047 UTC , finish = 2025-09-03 12:02:11.485241166 UTC , thread_cap_info
| | | | | E |   |      = ("ThreadId 140", 2, False)}
| | | | | E |   |      
F | | | | | |   |      
E | | | | | |   |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E | | | | | |   |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | | | | | |   |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | | | | | |   |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | | | | |   |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | | | | |   |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 18
E | | | | | |   |      , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 12 , alphabet_size
E | | | | | |   |      = 6 , total_length = 180} , self = 94 , parent = Nothing , duration = 1.131029204000
E | | | | | |   |      , status = Except "AsyncCancelled" , start = 2025-09-03 12:02:10.344954001
E | | | | | |   |      UTC , finish = 2025-09-03 12:02:11.475983205 UTC , thread_cap_info = ("ThreadId
E | | | | | |   |      142", 2, False)}
E | | | | | |   |      
| | | | | | F   |      
| | | | | | F   |      Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F   |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F   |      = 4 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | | | | | F   |      = 3 , total_length = 32} , self = 101 , parent = Nothing , duration = 0.912320362000
| | | | | | F   |      , status = Fail , start = 2025-09-03 12:02:10.622318101 UTC , finish =
| | | | | | F   |      2025-09-03 12:02:11.534638463 UTC , thread_cap_info = ("ThreadId 143",
| | | | | | F   |      3, False)}
| | | | | | F   |      
| F | | | | |   |      
|   | S | | |   |      
|   |   S | |   |      
E   |     | |   |      
    |     E |   |      
F   |       |   |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F   |       |   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F   |       |   |      = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
F   |       |   |      = 6 , num_top_rules = 6 , num_weak_rules = 12 , alphabet_size = 6 , total_length
F   |       |   |      = 180} , self = 109 , parent = Nothing , duration = 0.959551964000 , status
F   |       |   |      = Fail , start = 2025-09-03 12:02:11.491814081 UTC , finish = 2025-09-03
F   |       |   |      12:02:12.451366045 UTC , thread_cap_info = ("ThreadId 154", 2, False)}
F   |       |   |      
| F |       |   |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F |       |   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F |       |   |      = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| F |       |   |      = 6 , num_top_rules = 6 , num_weak_rules = 12 , alphabet_size = 6 , total_length
| F |       |   |      = 180} , self = 106 , parent = Nothing , duration = 0.515345301000 , status
| F |       |   |      = Fail , start = 2025-09-03 12:02:11.498509205 UTC , finish = 2025-09-03
| F |       |   |      12:02:12.013854506 UTC , thread_cap_info = ("ThreadId 153", 2, False)}
| F |       |   |      
| | |       F   |      
| | | F         |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F         |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F         |      = False\n , verbose = False}" , input_size = Size { num_rules = 13 , num_strict_rules
| | | F         |      = 1 , num_top_rules = 1 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | | F         |      = 130} , self = 110 , parent = Nothing , duration = 0.709538075000 , status
| | | F         |      = Fail , start = 2025-09-03 12:02:11.747925584 UTC , finish = 2025-09-03
| | | F         |      12:02:12.457463659 UTC , thread_cap_info = ("ThreadId 159", 2, False)}
| | | F         |      
| | | | F       |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F       |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F       |      = False\n , verbose = False}" , input_size = Size { num_rules = 13 , num_strict_rules
| | | | F       |      = 1 , num_top_rules = 1 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | | | F       |      = 130} , self = 111 , parent = Nothing , duration = 0.699384133000 , status
| | | | F       |      = Fail , start = 2025-09-03 12:02:11.802307122 UTC , finish = 2025-09-03
| | | | F       |      12:02:12.501691255 UTC , thread_cap_info = ("ThreadId 161", 2, False)}
| | | | F       |      
| F | | |       |      
|   F | |       |      
| F   | |       |      Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| F   | |       |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F   | |       |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F   | |       |      = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| F   | |       |      = 4 , total_length = 48} , self = 117 , parent = Nothing , duration = 1.000902134000
| F   | |       |      , status = Fail , start = 2025-09-03 12:02:12.027814677 UTC , finish =
| F   | |       |      2025-09-03 12:02:13.028716811 UTC , thread_cap_info = ("ThreadId 164",
| F   | |       |      3, False)}
| F   | |       |      
| | S | |       |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S | |       |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S | |       |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S | |       |      = 18 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 12 ,
| | S | |       |      alphabet_size = 6 , total_length = 180} , self = 112 , parent = Nothing
| | S | |       |      , duration = 0.837820518000 , status = Success , start = 2025-09-03 12:02:12.027819971
| | S | |       |      UTC , finish = 2025-09-03 12:02:12.865640489 UTC , thread_cap_info = ("ThreadId
| | S | |       |      165", 2, False)}
| | S | |       |      
| | | | |       F      
F | | | |              
  | | F |              
E | |   |              Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E | |   |              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | |   |              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | |   |              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | |   |              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | |   |              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 18
E | |   |              , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 12 , alphabet_size
E | |   |              = 6 , total_length = 180} , self = 114 , parent = Nothing , duration =
E | |   |              0.452304282000 , status = Except "AsyncCancelled" , start = 2025-09-03
E | |   |              12:02:12.458638542 UTC , finish = 2025-09-03 12:02:12.910942824 UTC , thread_cap_info
E | |   |              = ("ThreadId 170", 3, False)}
E | |   |              
| | |   F              
| | S                  
E |                    
  F                    
