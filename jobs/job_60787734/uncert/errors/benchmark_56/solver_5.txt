Input TRS:
    1: A(a(x1)) -> A(A(x1))
    2: A(b(x1)) -> AB(x1)
    3: AB(a(x1)) -> ABA(x1)
    4: AB(b(x1)) -> AB(B(x1))
    5: ABA(a(x1)) -> ABA(A(x1))
    6: ABA(b(x1)) -> ABAB(x1)
    7: ABAB(a(x1)) -> ABABA(x1)
    8: ABAB(b(x1)) -> ABAB(B(x1))
    9: ABABA(a(x1)) -> ABABAA(x1)
    10: ABABA(b(x1)) -> ABABA(B(x1))
    11: ABABAA(a(x1)) -> ABABAAA(x1)
    12: ABABAA(b(x1)) -> ABABAA(B(x1))
    13: ABABAAA(a(x1)) -> ABABAAAA(x1)
    14: ABABAAA(b(x1)) -> ABABAAA(B(x1))
    15: ABABAAAA(a(x1)) -> ABABAAAA(A(x1))
    16: ABABAAAA(b(x1)) -> ABABAAAAB(x1)
    17: ABABAAAAB(a(x1)) -> ABABAAAABA(x1)
    18: ABABAAAAB(b(x1)) -> ABABAAAAB(B(x1))
    19: ABABAAAABA(x1) -> b(a(a(a(b(a(a(x1)))))))
    20: B(a(x1)) -> BA(x1)
    21: B(b(x1)) -> B(B(x1))
    22: BA(a(x1)) -> BAA(x1)
    23: BA(b(x1)) -> BA(B(x1))
    24: BAA(a(x1)) -> BAAA(x1)
    25: BAA(b(x1)) -> BAA(B(x1))
    26: BAAA(a(x1)) -> BAAA(A(x1))
    27: BAAA(b(x1)) -> BAAAB(x1)
    28: BAAAB(a(x1)) -> BAAABA(x1)
    29: BAAAB(b(x1)) -> BAAAB(B(x1))
    30: BAAABA(a(x1)) -> BAAABAA(x1)
    31: BAAABA(b(x1)) -> BAAABA(B(x1))
    32: BAAABAA(x1) -> a(b(a(b(a(a(a(a(b(a(x1))))))))))
Number of strict rules: 32
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #A(b(x1)) -> #AB(x1)
   #2: #BAAAB(b(x1)) -> #BAAAB(B(x1))
   #3: #BAAAB(b(x1)) -> #B(x1)
   #4: #ABA(b(x1)) -> #ABAB(x1)
   #5: #ABABAAA(a(x1)) -> #ABABAAAA(x1)
   #6: #ABABA(a(x1)) -> #ABABAA(x1)
   #7: #ABABAA(a(x1)) -> #ABABAAA(x1)
   #8: #BAA(a(x1)) -> #BAAA(x1)
   #9: #BA(b(x1)) -> #BA(B(x1))
   #10: #BA(b(x1)) -> #B(x1)
   #11: #ABABAA(b(x1)) -> #ABABAA(B(x1))
   #12: #ABABAA(b(x1)) -> #B(x1)
   #13: #BAAABA(b(x1)) -> #BAAABA(B(x1))
   #14: #BAAABA(b(x1)) -> #B(x1)
   #15: #ABABAAA(b(x1)) -> #ABABAAA(B(x1))
   #16: #ABABAAA(b(x1)) -> #B(x1)
   #17: #BAAABA(a(x1)) -> #BAAABAA(x1)
   #18: #BAA(b(x1)) -> #BAA(B(x1))
   #19: #BAA(b(x1)) -> #B(x1)
   #20: #B(a(x1)) -> #BA(x1)
   #21: #ABAB(a(x1)) -> #ABABA(x1)
   #22: #ABABA(b(x1)) -> #ABABA(B(x1))
   #23: #ABABA(b(x1)) -> #B(x1)
   #24: #ABA(a(x1)) -> #ABA(A(x1))
   #25: #ABA(a(x1)) -> #A(x1)
   #26: #BAAAB(a(x1)) -> #BAAABA(x1)
   #27: #BA(a(x1)) -> #BAA(x1)
   #28: #BAAA(b(x1)) -> #BAAAB(x1)
   #29: #ABABAAAAB(a(x1)) -> #ABABAAAABA(x1)
   #30: #BAAA(a(x1)) -> #BAAA(A(x1))
   #31: #BAAA(a(x1)) -> #A(x1)
   #32: #B(b(x1)) -> #B(B(x1))
   #33: #B(b(x1)) -> #B(x1)
   #34: #ABABAAAA(b(x1)) -> #ABABAAAAB(x1)
   #35: #AB(a(x1)) -> #ABA(x1)
   #36: #A(a(x1)) -> #A(A(x1))
   #37: #A(a(x1)) -> #A(x1)
   #38: #ABAB(b(x1)) -> #ABAB(B(x1))
   #39: #ABAB(b(x1)) -> #B(x1)
   #40: #ABABAAAA(a(x1)) -> #ABABAAAA(A(x1))
   #41: #ABABAAAA(a(x1)) -> #A(x1)
   #42: #AB(b(x1)) -> #AB(B(x1))
   #43: #AB(b(x1)) -> #B(x1)
   #44: #ABABAAAAB(b(x1)) -> #ABABAAAAB(B(x1))
   #45: #ABABAAAAB(b(x1)) -> #B(x1)
Number of SCCs: 1, DPs: 41, edges: 93
	SCC { #1..12 #14..16 #18..28 #30..43 #45 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: 0; x1_2
  #BA(x1)	weight: (/ 1 16) + x1_2; x1_2
 BAAAB(x1)	weight: 0; x1_2
ABABAA(x1)	weight: (/ 1 8) + x1_2; x1_2
  ABAB(x1)	weight: (/ 1 8) + x1_2; x1_2
#ABABA(x1)	weight: (/ 1 16) + x1_2; x1_2
#BAAA(x1)	weight: (/ 1 16) + x1_2; x1_2
     b(x1)	weight: (/ 1 8); x1_1 + x1_2
   #B(x1)	weight: (/ 1 16) + x1_1 + x1_2; x1_2
  BAAA(x1)	weight: 0; x1_2
ABABAAAA(x1)	weight: (/ 1 8) + x1_2; x1_2
#ABABAA(x1)	weight: (/ 1 16) + x1_2; x1_2
#ABAB(x1)	weight: (/ 1 16) + x1_2; x1_2
    AB(x1)	weight: (/ 1 8) + x1_2; x1_2
ABABAAA(x1)	weight: (/ 1 8) + x1_2; x1_2
BAAABA(x1)	weight: 0; x1_2
#ABABAAAABA(x1)	weight: 0; 0
#BAAABAA(x1)	weight: 0; 0
#ABABAAAAB(x1)	weight: x1_1 + x1_2; x1_1 + x1_2
 #ABA(x1)	weight: (/ 1 16) + x1_2; x1_2
   BAA(x1)	weight: 0; x1_2
     B(x1)	weight: 0; x1_2
#BAAAB(x1)	weight: (/ 1 16) + x1_1 + x1_2; x1_1 + x1_2
     A(x1)	weight: (/ 1 8) + x1_2; x1_2
   #A(x1)	weight: (/ 1 16) + x1_2; x1_2
   ABA(x1)	weight: (/ 1 8) + x1_2; x1_2
#ABABAAA(x1)	weight: (/ 1 16) + x1_2; x1_2
#ABABAAAA(x1)	weight: (/ 1 16) + x1_2; x1_2
 ABABA(x1)	weight: (/ 1 8) + x1_2; x1_2
BAAABAA(x1)	weight: 0; x1_2
ABABAAAAB(x1)	weight: (/ 1 8) + x1_2; x1_1 + x1_2
ABABAAAABA(x1)	weight: (/ 1 8) + x1_2; x1_2
 #BAA(x1)	weight: (/ 1 16) + x1_2; x1_2
  #AB(x1)	weight: (/ 1 16) + x1_2; x1_2
#BAAABA(x1)	weight: (/ 1 16) + x1_2; x1_2
    BA(x1)	weight: 0; x1_2
    Usable rules: { 1..32 }
    Removed DPs: #2 #3 #32..34 #45
Number of SCCs: 1, DPs: 34, edges: 60
	SCC { #1 #4..12 #14..16 #18..28 #30 #31 #35..39 #41..43 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: x1_1; x1_1
  #BA(x1)	weight: x1_1; 0
 BAAAB(x1)	weight: x1_2; x1_2
ABABAA(x1)	weight: x1_1; (/ 1 16) + x1_1
  ABAB(x1)	weight: x1_2; (/ 1 16) + x1_2
#ABABA(x1)	weight: x1_1; 0
#BAAA(x1)	weight: x1_1; 0
     b(x1)	weight: x1_2; (/ 1 16) + x1_2
   #B(x1)	weight: x1_2; 0
  BAAA(x1)	weight: x1_1; x1_1
ABABAAAA(x1)	weight: x1_1; (/ 1 16) + x1_1
#ABABAA(x1)	weight: x1_1; 0
#ABAB(x1)	weight: x1_2; 0
    AB(x1)	weight: x1_2; (/ 1 16) + x1_2
ABABAAA(x1)	weight: x1_1; (/ 1 16) + x1_1
BAAABA(x1)	weight: x1_1; x1_1
#ABABAAAABA(x1)	weight: 0; 0
#BAAABAA(x1)	weight: 0; 0
#ABABAAAAB(x1)	weight: 0; 0
 #ABA(x1)	weight: x1_1; 0
   BAA(x1)	weight: x1_1; x1_1
     B(x1)	weight: x1_2; (/ 1 32) + x1_2
#BAAAB(x1)	weight: x1_2; 0
     A(x1)	weight: x1_1; (/ 1 16) + x1_1
   #A(x1)	weight: x1_1; 0
   ABA(x1)	weight: x1_1; (/ 1 16) + x1_1
#ABABAAA(x1)	weight: x1_1; 0
#ABABAAAA(x1)	weight: x1_1; 0
 ABABA(x1)	weight: x1_1; (/ 1 16) + x1_1
BAAABAA(x1)	weight: x1_1; x1_1
ABABAAAAB(x1)	weight: x1_2; (/ 1 16) + x1_2
ABABAAAABA(x1)	weight: x1_1; (/ 1 16) + x1_1
 #BAA(x1)	weight: x1_1; 0
  #AB(x1)	weight: x1_2; 0
#BAAABA(x1)	weight: x1_1; 0
    BA(x1)	weight: x1_1; x1_1
    Usable rules: { 1..32 }
    Removed DPs: #38 #39 #42 #43
Number of SCCs: 1, DPs: 30, edges: 52
	SCC { #1 #4..12 #14..16 #18..28 #30 #31 #35..37 #41 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
