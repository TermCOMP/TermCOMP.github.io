last 4078 length 25582
CNF 4078 vars 25582 clauses
last 4226 length 21530
CNF 4226 vars 21530 clauses
last 9953 length 54840
CNF 9953 vars 54840 clauses
last 17845 length 90180
last 14083 length 66189
CNF 17845 vars 90180 clauses
CNF 14083 vars 66189 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13025, clauses: 55977
last 13025 length 55977
CNF 13025 vars 55977 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13025, clauses: 55977, status: Satisfied, time: 0.417447207s
last 24838 length 117184
CNF 24838 vars 117184 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15117, clauses: 65846
last 15117 length 65846
CNF 15117 vars 65846 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15117, clauses: 65846, status: Satisfied, time: 0.236010159s
last 9602 length 53661
CNF 9602 vars 53661 clauses
last 16906 length 86496
**************************************************
summary
**************************************************
SRS with 4 rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 16 rules on 4 letters       mirror
SRS with 16 rules on 4 letters       DP
SRS with 56 strict rules and 16 weak rules on 8 letters       EDG
SRS with 56 strict rules and 16 weak rules on 8 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 3 strict rules and 16 weak rules on 6 letters       weights
SRS with 1 strict rules and 16 weak rules on 5 letters       EDG
SRS with 1 strict rules and 16 weak rules on 5 letters       Usable
SRS with 1 rules on 4 letters       weights
SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a, a, b, b] -> [b, b, a, b, b, a, a, a] {- Input 0 -}
  [b, b, a] -> [] {- Input 1 -}
  [a] -> [b, b, b] {- Input 2 -}
  [a] -> [b] {- Input 3 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, a], [a, a], [a, b], [b, b], [b, a]] -> [ [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, a] , [ a , a ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, a], [a, a], [a, b], [b, b], [b, b]] -> [ [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, a] , [ a , b ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[b, a], [a, a], [a, a], [a, b], [b, b], [b, a]] -> [ [b, b] , [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, a] , [ a , a ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, a], [a, a], [a, b], [b, b], [b, b]] -> [ [b, b] , [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, a] , [a, a] , [ a , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, b], [b, b], [b, a], [a, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b], [b, b], [b, a], [a, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, b], [b, b], [b, a], [a, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, b], [b, b], [b, a], [a, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[a, a], [a, a]] -> [ [a, b] , [b, b] , [b, b] , [b, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, a], [a, b]] -> [ [a, b] , [b, b] , [b, b] , [b, b] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[b, a], [a, a]] -> [ [b, b] , [b, b] , [b, b] , [b, a] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, a], [a, b]] -> [ [b, b] , [b, b] , [b, b] , [b, b] ] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[a, a], [a, a]] -> [[a, b], [b, a]] {- Semlab 0 (Concon 0 (Input 3)) -}
  [[a, a], [a, b]] -> [[a, b], [b, b]] {- Semlab 0 (Concon 1 (Input 3)) -}
  [[b, a], [a, a]] -> [[b, b], [b, a]] {- Semlab 1 (Concon 0 (Input 3)) -}
  [[b, a], [a, b]] -> [[b, b], [b, b]] {- Semlab 1 (Concon 1 (Input 3)) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [[b, a], [b, b], [a, b], [a, a], [a, a], [a, a]] -> [ [a, a] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 0 (Input 0))) -}
  [[b, b], [b, b], [a, b], [a, a], [a, a], [a, a]] -> [ [a, b] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, a], [b, b], [a, b], [a, a], [a, a], [b, a]] -> [ [a, a] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, b], [b, b], [a, b], [a, a], [a, a], [b, a]] -> [ [a, b] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, a], [b, a], [b, b], [a, b]] -> [ [ a , a ] ] {- Mirror (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, a], [b, b], [a, b]] -> [ [ a , b ] ] {- Mirror (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a], [b, a], [b, b], [b, b]] -> [ [ b , a ] ] {- Mirror (Semlab 1 (Concon 0 (Input 1))) -}
  [[a, b], [b, a], [b, b], [b, b]] -> [ [ b , b ] ] {- Mirror (Semlab 1 (Concon 1 (Input 1))) -}
  [[a, a], [a, a]] -> [ [b, a] , [b, b] , [b, b] , [a, b] ] {- Mirror (Semlab 0 (Concon 0 (Input 2))) -}
  [[a, b], [a, a]] -> [ [b, b] , [b, b] , [b, b] , [a, b] ] {- Mirror (Semlab 0 (Concon 1 (Input 2))) -}
  [[a, a], [b, a]] -> [ [b, a] , [b, b] , [b, b] , [b, b] ] {- Mirror (Semlab 1 (Concon 0 (Input 2))) -}
  [[a, b], [b, a]] -> [ [b, b] , [b, b] , [b, b] , [b, b] ] {- Mirror (Semlab 1 (Concon 1 (Input 2))) -}
  [[a, a], [a, a]] -> [ [b, a] , [a, b] ] {- Mirror (Semlab 0 (Concon 0 (Input 3))) -}
  [[a, b], [a, a]] -> [ [b, b] , [a, b] ] {- Mirror (Semlab 0 (Concon 1 (Input 3))) -}
  [[a, a], [b, a]] -> [ [b, a] , [b, b] ] {- Mirror (Semlab 1 (Concon 0 (Input 3))) -}
  [[a, b], [b, a]] -> [ [b, b] , [b, b] ] {- Mirror (Semlab 1 (Concon 1 (Input 3))) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [[b, a], [b, b], [a, b], [a, a], [a, a], [a, a]] ->= [ [a, a] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, b], [b, b], [a, b], [a, a], [a, a], [a, a]] ->= [ [a, b] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, a], [b, b], [a, b], [a, a], [a, a], [b, a]] ->= [ [a, a] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, b], [b, b], [a, b], [a, a], [a, a], [b, a]] ->= [ [a, b] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a], [b, b], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, a], [b, a], [b, b], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, a], [a, a]] ->= [ [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[a, b], [a, a]] ->= [ [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[a, a], [b, a]] ->= [ [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[a, b], [b, a]] ->= [ [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[a, b], [a, a]] ->= [ [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[a, a], [b, a]] ->= [ [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[a, b], [b, a]] ->= [ [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[a, a]#, [a, a]] |-> [ [ a , b ]# ] {- Many [ DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 3)))) , DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 2)))) ] -}
  [[a, a]#, [a, a]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[a, a]#, [a, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[a, a]#, [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[a, a]#, [a, a]] |-> [ [b, b]# , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[a, a]#, [b, a]] |-> [ [b, a]# , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[a, a]#, [b, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[a, a]#, [b, a]] |-> [ [ b , b ]# ] {- Many [ DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 3)))) , DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 2)))) ] -}
  [[a, a]#, [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[a, a]#, [b, a]] |-> [ [b, b]# , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[a, a]#, [b, a], [b, b], [a, b]] |-> [ [ a , a ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, a]#, [b, a], [b, b], [b, b]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- Many [ DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 3)))) , DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 2)))) ] -}
  [[a, b]#, [a, a]] |-> [ [b, b]# , [ a , b ] ] {- Many [ DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 3)))) , DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 2)))) ] -}
  [[a, b]#, [a, a]] |-> [ [b, b]# , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[a, b]#, [a, a]] |-> [ [b, b]# , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[a, b]#, [b, a]] |-> [ [ b , b ]# ] {- Many [ DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 3)))) , DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 2)))) ] -}
  [[a, b]#, [b, a]] |-> [ [b, b]# , [ b , b ] ] {- Many [ DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 3)))) , DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 2)))) ] -}
  [[a, b]#, [b, a]] |-> [ [b, b]# , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[a, b]#, [b, a]] |-> [ [b, b]# , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [a, a]# , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [a, a]# , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 8) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [a, b]# , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [b, a]# , [b, b] , [ a , b ] ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [b, a]# , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 7) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [b, b]# , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [a, a]# , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [a, a]# , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [a, b]# , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [b, a]# , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [b, a]# , [b, b] , [ b , b ] ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 8) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [b, b]# , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 7) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [a, a]# , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 8) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [a, b]# , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [a, b]# , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [b, a]# , [b, b] , [ a , b ] ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [b, a]# , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 7) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [b, b]# , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [a, a]# , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [a, b]# , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [a, b]# , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [b, a]# , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [b, a]# , [b, b] , [ b , b ] ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 8) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [b, b]# , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 7) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, a]#, [a, a]] |-> [ [ a , b ]# ] {- Many [ DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 3)))) , DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 2)))) ] -}
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- Many [ DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 3)))) , DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 2)))) ] -}
  [[a, b]#, [a, a]] |-> [ [b, b]# , [ a , b ] ] {- Many [ DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 3)))) , DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 2)))) ] -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [a, a]# , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a]#, [a, a]] |-> [ [b, a]# , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [a, a]# , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, a]#, [a, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [a, a]# , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, a]#, [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a]#, [a, a]] |-> [ [b, b]# , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 8) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [a, a]] |-> [ [b, b]# , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [a, b]# , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [a, a]] |-> [ [b, b]# , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [a, b]# , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [b, a]] |-> [ [ b , b ]# ] {- Many [ DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 3)))) , DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 2)))) ] -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [b, a]# , [b, b] , [ a , b ] ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, a]#, [b, a]] |-> [ [b, a]# , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 8) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b]#, [b, a]] |-> [ [b, b]# , [ b , b ] ] {- Many [ DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 3)))) , DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 2)))) ] -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [b, a]# , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [a, b]# , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b]#, [b, a]] |-> [ [b, b]# , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 7) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [b, b]# , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [a, a]# , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, a]#, [b, a]] |-> [ [b, a]# , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [b, a]# , [b, b] , [ a , b ] ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [b, a]# , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 7) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, a]#, [b, a]] |-> [ [ b , b ]# ] {- Many [ DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 3)))) , DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 2)))) ] -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [a, b]# , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, b]#, [b, a]] |-> [ [b, b]# , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [a, b]# , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [b, a]# , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [b, b]# , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [b, a]# , [b, b] , [ b , b ] ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [a, a]# , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a]#, [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 8) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [b, b]# , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 7) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, a]#, [b, a]] |-> [ [b, b]# , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[a, a]#, [b, a], [b, b], [a, b]] |-> [ [ a , a ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, a]#, [b, a], [b, b], [b, b]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [a, a]# , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [a, a]# , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [a, b]# , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [b, a]# , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [b, a]# , [b, b] , [ b , b ] ] {- DP (Top 6) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 8) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [b, b]# , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 7) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a], [b, b], [a, b], [a, a], [a, a], [a, a]] ->= [ [a, a] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, b], [b, b], [a, b], [a, a], [a, a], [a, a]] ->= [ [a, b] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, a], [b, b], [a, b], [a, a], [a, a], [b, a]] ->= [ [a, a] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, b], [b, b], [a, b], [a, a], [a, a], [b, a]] ->= [ [a, b] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a], [b, b], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, a], [b, a], [b, b], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, a], [a, a]] ->= [ [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[a, b], [a, a]] ->= [ [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[a, a], [b, a]] ->= [ [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[a, b], [b, a]] ->= [ [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[a, b], [a, a]] ->= [ [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[a, a], [b, a]] ->= [ [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[a, b], [b, a]] ->= [ [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
reason
  ( [a, a]
  , Wk  / 0A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [a, b]
  , Wk  / 0A  3A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, a]
  , Wk  / 0A  0A  3A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, b]
  , Wk  / 0A  0A  3A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [a, a]#
  , Wk  / 4A 4A 6A - \
        | 4A 4A 6A - |
        | 4A 4A 6A - |
        \ -  -  -  - / )
  ( [a, b]#
  , Wk  / 2A 2A 3A - \
        | 2A 2A 3A - |
        | 2A 2A 3A - |
        \ -  -  -  - / )
  ( [b, a]#
  , Wk  / 1A 1A 1A - \
        | 1A 1A 1A - |
        | 1A 1A 1A - |
        \ -  -  -  - / )
  ( [b, b]#
  , Wk  / 1A 1A 1A - \
        | 1A 1A 1A - |
        | 1A 1A 1A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [a, a]] |-> [ [a, a]# , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, a]#, [b, b], [a, b], [a, a], [a, a], [b, a]] |-> [ [a, a]# , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a]#, [b, a], [b, b], [a, b]] |-> [ [ a , a ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a], [b, b], [a, b], [a, a], [a, a], [a, a]] ->= [ [a, a] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, b], [b, b], [a, b], [a, a], [a, a], [a, a]] ->= [ [a, b] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, a], [b, b], [a, b], [a, a], [a, a], [b, a]] ->= [ [a, a] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, b], [b, b], [a, b], [a, a], [a, a], [b, a]] ->= [ [a, b] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a], [b, b], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, a], [b, a], [b, b], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, a], [a, a]] ->= [ [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[a, b], [a, a]] ->= [ [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[a, a], [b, a]] ->= [ [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[a, b], [b, a]] ->= [ [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[a, b], [a, a]] ->= [ [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[a, a], [b, a]] ->= [ [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[a, b], [b, a]] ->= [ [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([a, a]#, 0/1)
  ([b, a]#, 1/1)
   property Termination
has value Just True
for SRS
  [[a, a]#, [b, a], [b, b], [a, b]] |-> [ [ a , a ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a], [b, b], [a, b], [a, a], [a, a], [a, a]] ->= [ [a, a] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, b], [b, b], [a, b], [a, a], [a, a], [a, a]] ->= [ [a, b] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, a], [b, b], [a, b], [a, a], [a, a], [b, a]] ->= [ [a, a] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, b], [b, b], [a, b], [a, a], [a, a], [b, a]] ->= [ [a, b] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a], [b, b], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, a], [b, a], [b, b], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, a], [a, a]] ->= [ [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[a, b], [a, a]] ->= [ [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[a, a], [b, a]] ->= [ [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[a, b], [b, a]] ->= [ [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[a, b], [a, a]] ->= [ [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[a, a], [b, a]] ->= [ [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[a, b], [b, a]] ->= [ [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, a]#, [b, a], [b, b], [a, b]] |-> [ [ a , a ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a], [b, b], [a, b], [a, a], [a, a], [a, a]] ->= [ [a, a] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, b], [b, b], [a, b], [a, a], [a, a], [a, a]] ->= [ [a, b] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, a], [b, b], [a, b], [a, a], [a, a], [b, a]] ->= [ [a, a] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, b], [b, b], [a, b], [a, a], [a, a], [b, a]] ->= [ [a, b] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a], [b, b], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, a], [b, a], [b, b], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, a], [a, a]] ->= [ [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[a, b], [a, a]] ->= [ [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[a, a], [b, a]] ->= [ [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[a, b], [b, a]] ->= [ [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[a, b], [a, a]] ->= [ [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[a, a], [b, a]] ->= [ [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[a, b], [b, a]] ->= [ [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
reason
  remove un-usable
    SRS
      [[b, a], [b, b], [a, b], [a, a], [a, a], [a, a]] ->= [ [a, a] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
      [[b, b], [b, b], [a, b], [a, a], [a, a], [a, a]] ->= [ [a, b] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
      [[b, a], [b, b], [a, b], [a, a], [a, a], [b, a]] ->= [ [a, a] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
      [[b, b], [b, b], [a, b], [a, a], [a, a], [b, a]] ->= [ [a, b] , [a, a] , [a, a] , [b, a] , [b, b] , [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
      [[a, a], [b, a], [b, b], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
      [[a, b], [b, a], [b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
      [[a, a], [b, a], [b, b], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
      [[a, b], [b, a], [b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
      [[a, a], [a, a]] ->= [ [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
      [[a, b], [a, a]] ->= [ [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
      [[a, a], [b, a]] ->= [ [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
      [[a, b], [b, a]] ->= [ [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
      [[a, a], [a, a]] ->= [ [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
      [[a, b], [a, a]] ->= [ [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
      [[a, a], [b, a]] ->= [ [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
      [[a, b], [b, a]] ->= [ [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
   property Termination
has value Just True
for SRS
  [[a, a]#, [b, a], [b, b], [a, b]] |-> [ [ a , a ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
reason
  ([a, b], 1/1)
  ([b, a], 1/1)
  ([b, b], 1/1)
  ([a, a]#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: (4,2)\TileAllAll{2}\Mirror(16,4)\Deepee\EDG(56/16,8)\Matrix{\Arctic}{3}(3/16,6)\Weight\EDG(1/16,5)\Usable(1,4)\Weight(0,0)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 2.958096355000
  min duration 0.228159083000
  total durat. 5.007582155000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 60
      , num_strict_rules = 44
      , num_top_rules = 44
      , num_weak_rules = 16
      , alphabet_size = 7
      , total_length = 494}
    , self = 65
    , parent = Nothing
    , duration = 1.821326717000
    , status = Fail
    , start = 2025-09-03 13:46:10.504434328 UTC
    , finish = 2025-09-03 13:46:12.325761045 UTC
    , thread_cap_info = ("ThreadId 98", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 72
      , num_strict_rules = 56
      , num_top_rules = 56
      , num_weak_rules = 16
      , alphabet_size = 8
      , total_length = 606}
    , self = 71
    , parent = Nothing
    , duration = 2.958096355000
    , status = Fail
    , start = 2025-09-03 13:46:10.610934309 UTC
    , finish = 2025-09-03 13:46:13.569030664 UTC
    , thread_cap_info = ("ThreadId 100", 2, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 1.643680771000
  min duration 0.182348435000
  total durat. 2.967640530000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 60
      , num_strict_rules = 44
      , num_top_rules = 44
      , num_weak_rules = 16
      , alphabet_size = 7
      , total_length = 494}
    , self = 63
    , parent = Nothing
    , duration = 1.141611324000
    , status = Fail
    , start = 2025-09-03 13:46:10.52442442 UTC
    , finish = 2025-09-03 13:46:11.666035744 UTC
    , thread_cap_info = ("ThreadId 99", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 72
      , num_strict_rules = 56
      , num_top_rules = 56
      , num_weak_rules = 16
      , alphabet_size = 8
      , total_length = 606}
    , self = 64
    , parent = Nothing
    , duration = 1.643680771000
    , status = Fail
    , start = 2025-09-03 13:46:10.624419663 UTC
    , finish = 2025-09-03 13:46:12.268100434 UTC
    , thread_cap_info = ("ThreadId 101", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.939977916000
  min duration 0.340240705000
  total durat. 1.280218621000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.350261507000
  min duration 1.270051125000
  total durat. 2.620312632000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 60
      , num_strict_rules = 44
      , num_top_rules = 44
      , num_weak_rules = 16
      , alphabet_size = 7
      , total_length = 494}
    , self = 66
    , parent = Nothing
    , duration = 1.270051125000
    , status = Success
    , start = 2025-09-03 13:46:11.744422808 UTC
    , finish = 2025-09-03 13:46:13.014473933 UTC
    , thread_cap_info = ("ThreadId 103", 2, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 72
      , num_strict_rules = 56
      , num_top_rules = 56
      , num_weak_rules = 16
      , alphabet_size = 8
      , total_length = 606}
    , self = 74
    , parent = Nothing
    , duration = 1.350261507000
    , status = Success
    , start = 2025-09-03 13:46:12.364421304 UTC
    , finish = 2025-09-03 13:46:13.714682811 UTC
    , thread_cap_info = ("ThreadId 106", 2, False)}
**************************************************
F        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F        , closure = Forward\n , start_strict_only = True\n , max_closure_length
F        = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F        Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F        8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F        = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F        ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F        1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F        = True})" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
F        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F        = 22} , self = 39 , parent = Nothing , duration = 0.247288633000 , status
F        = Fail , start = 2025-09-03 13:46:09.888431246 UTC , finish = 2025-09-03
F        13:46:10.135719879 UTC , thread_cap_info = ("ThreadId 35", 2, False)}
F        
| F      Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F      , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F      = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F      False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F      = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| F      = 0 , alphabet_size = 2 , total_length = 22} , self = 38 , parent = Nothing
| F      , duration = 0.243473328000 , status = Fail , start = 2025-09-03 13:46:09.88847627
| F      UTC , finish = 2025-09-03 13:46:10.131949598 UTC , thread_cap_info = ("ThreadId
| F      48", 1, False)}
| F      
| | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F    = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | F    = 16 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | F    = 120} , self = 37 , parent = Nothing , duration = 0.228159083000 , status
| | F    = Fail , start = 2025-09-03 13:46:09.898759748 UTC , finish = 2025-09-03
| | F    13:46:10.126918831 UTC , thread_cap_info = ("ThreadId 60", 3, False)}
| | F    
| | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | F  = 16 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | F  = 120} , self = 35 , parent = Nothing , duration = 0.182348435000 , status
| | | F  = Fail , start = 2025-09-03 13:46:09.904407942 UTC , finish = 2025-09-03
| | | F  13:46:10.086756377 UTC , thread_cap_info = ("ThreadId 62", 3, False)}
| | | F  
| | | F  
| | F    
| F      
F        
F        Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
F        , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
F        = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
F        False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
F        = Size { num_rules = 16 , num_strict_rules = 16 , num_top_rules = 0 , num_weak_rules
F        = 0 , alphabet_size = 4 , total_length = 120} , self = 49 , parent = Nothing
F        , duration = 0.133571056000 , status = Fail , start = 2025-09-03 13:46:10.224655785
F        UTC , finish = 2025-09-03 13:46:10.358226841 UTC , thread_cap_info = ("ThreadId
F        80", 2, False)}
F        
F        
F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F        = False\n , verbose = False}" , input_size = Size { num_rules = 60 , num_strict_rules
F        = 44 , num_top_rules = 44 , num_weak_rules = 16 , alphabet_size = 7 , total_length
F        = 494} , self = 65 , parent = Nothing , duration = 1.821326717000 , status
F        = Fail , start = 2025-09-03 13:46:10.504434328 UTC , finish = 2025-09-03
F        13:46:12.325761045 UTC , thread_cap_info = ("ThreadId 98", 2, False)}
F        
| F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F      = False\n , verbose = False}" , input_size = Size { num_rules = 60 , num_strict_rules
| F      = 44 , num_top_rules = 44 , num_weak_rules = 16 , alphabet_size = 7 , total_length
| F      = 494} , self = 63 , parent = Nothing , duration = 1.141611324000 , status
| F      = Fail , start = 2025-09-03 13:46:10.52442442 UTC , finish = 2025-09-03
| F      13:46:11.666035744 UTC , thread_cap_info = ("ThreadId 99", 2, False)}
| F      
| | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F    = False\n , verbose = False}" , input_size = Size { num_rules = 72 , num_strict_rules
| | F    = 56 , num_top_rules = 56 , num_weak_rules = 16 , alphabet_size = 8 , total_length
| | F    = 606} , self = 71 , parent = Nothing , duration = 2.958096355000 , status
| | F    = Fail , start = 2025-09-03 13:46:10.610934309 UTC , finish = 2025-09-03
| | F    13:46:13.569030664 UTC , thread_cap_info = ("ThreadId 100", 2, False)}
| | F    
| | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 72 , num_strict_rules
| | | F  = 56 , num_top_rules = 56 , num_weak_rules = 16 , alphabet_size = 8 , total_length
| | | F  = 606} , self = 64 , parent = Nothing , duration = 1.643680771000 , status
| | | F  = Fail , start = 2025-09-03 13:46:10.624419663 UTC , finish = 2025-09-03
| | | F  13:46:12.268100434 UTC , thread_cap_info = ("ThreadId 101", 2, False)}
| | | F  
| F | |  
| S | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | |  = 60 , num_strict_rules = 44 , num_top_rules = 44 , num_weak_rules = 16
| S | |  , alphabet_size = 7 , total_length = 494} , self = 66 , parent = Nothing
| S | |  , duration = 1.270051125000 , status = Success , start = 2025-09-03 13:46:11.744422808
| S | |  UTC , finish = 2025-09-03 13:46:13.014473933 UTC , thread_cap_info = ("ThreadId
| S | |  103", 2, False)}
| S | |  
| | | F  
F | |    
S | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | |    = 72 , num_strict_rules = 56 , num_top_rules = 56 , num_weak_rules = 16
S | |    , alphabet_size = 8 , total_length = 606} , self = 74 , parent = Nothing
S | |    , duration = 1.350261507000 , status = Success , start = 2025-09-03 13:46:12.364421304
S | |    UTC , finish = 2025-09-03 13:46:13.714682811 UTC , thread_cap_info = ("ThreadId
S | |    106", 2, False)}
S | |    
| | | E  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 60
| | | E  , num_strict_rules = 44 , num_top_rules = 44 , num_weak_rules = 16 , alphabet_size
| | | E  = 7 , total_length = 494} , self = 68 , parent = Nothing , duration = 0.939977916000
| | | E  , status = Except "AsyncCancelled" , start = 2025-09-03 13:46:12.464431789
| | | E  UTC , finish = 2025-09-03 13:46:13.404409705 UTC , thread_cap_info = ("ThreadId
| | | E  107", 2, False)}
| | | E  
| S | |  
|   | E  
|   F    
| E      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 72
| E      , num_strict_rules = 56 , num_top_rules = 56 , num_weak_rules = 16 , alphabet_size
| E      = 8 , total_length = 606} , self = 76 , parent = Nothing , duration = 0.340240705000
| E      , status = Except "AsyncCancelled" , start = 2025-09-03 13:46:13.624439401
| E      UTC , finish = 2025-09-03 13:46:13.964680106 UTC , thread_cap_info = ("ThreadId
| E      115", 2, False)}
| E      
S |      
  E      
