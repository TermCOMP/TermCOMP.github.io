last 2906 length 15701
CNF 2906 vars 15701 clauses
last 2977 length 13896
CNF 2977 vars 13896 clauses
last 919 length 3727
last 1032 length 4278
CNF 919 vars 3727 clauses
last 1231 length 4970
last 1413 length 5691
CNF 1032 vars 4278 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2922, clauses: 11186
CNF 1231 vars 4970 clauses
CNF 1413 vars 5691 clauses
last 2922 length 11186
CNF 2922 vars 11186 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2922, clauses: 11186, status: Satisfied, time: 0.038440045s
last 1132 length 4591
CNF 1132 vars 4591 clauses
last 856 length 3500
CNF 856 vars 3500 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2933, clauses: 11550
last 2933 length 11550
CNF 2933 vars 11550 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2711, clauses: 10275
last 2711 length 10275
CNF 2711 vars 10275 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2933, clauses: 11550, status: Satisfied, time: 0.056515001s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2711, clauses: 10275, status: Satisfied, time: 0.036103581s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7828, clauses: 32717
last 761 length 3105
last 981 length 4005
CNF 981 vars 4005 clauses
CNF 761 vars 3105 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2395, clauses: 8977
last 2395 length 8977
CNF 2395 vars 8977 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2395, clauses: 8977, status: Unsatisfied, time: 0.104948688s
last 1260 length 5068
CNF 1260 vars 5068 clauses
last 904 length 3732
CNF 904 vars 3732 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6906, clauses: 28823
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4262, clauses: 17633
last 6906 length 28823
last 4262 length 17633
CNF 4262 vars 17633 clauses
CNF 6906 vars 28823 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2608, clauses: 10225
last 2608 length 10225
CNF 2608 vars 10225 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2608, clauses: 10225, status: Satisfied, time: 0.094006407s
last 747 length 3008
CNF 747 vars 3008 clauses
last 1077 length 4305
last 7799 length 33155
last 9760 length 44091
CNF 1077 vars 4305 clauses
CNF 7799 vars 33155 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4262, clauses: 17633, status: Unsatisfied, time: 0.792659094s
CNF 9760 vars 44091 clauses
last 16573 length 74762
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2397, clauses: 9224
last 13792 length 61182
CNF 16573 vars 74762 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3946, clauses: 15899
last 2397 length 9224
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6118, clauses: 25421
CNF 13792 vars 61182 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11007, clauses: 46400
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6906, clauses: 28823, status: Unsatisfied, time: 1.13306362s
last 3946 length 15899
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11207, clauses: 48414
last 6118 length 25421
CNF 2397 vars 9224 clauses
last 11007 length 46400
CNF 3946 vars 15899 clauses
last 11207 length 48414
CNF 6118 vars 25421 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 26547, clauses: 111430
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2397, clauses: 9224, status: Satisfied, time: 0.748067123s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11328, clauses: 48977
CNF 11007 vars 46400 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 28240, clauses: 118831
last 26547 length 111430
CNF 11207 vars 48414 clauses
last 11328 length 48977
last 28240 length 118831
**************************************************
summary
**************************************************
SRS with 2 rules on 2 letters       DP
SRS with 8 strict rules and 2 weak rules on 4 letters       EDG
SRS with 8 strict rules and 2 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 7 strict rules and 2 weak rules on 4 letters       EDG
SRS with 7 strict rules and 2 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 6 strict rules and 2 weak rules on 4 letters       EDG
SRS with 6 strict rules and 2 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 3 strict rules and 2 weak rules on 4 letters       weights
SRS with 0 strict rules and 2 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a, b, a] -> [a, b, b, b] {- Input 0 -}
  [b, b, b] -> [b, a, a, a] {- Input 1 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a, b, a] ->= [a, b, b, b] {- DP Nontop (Input 0) -}
  [b, b, b] ->= [b, a, a, a] {- DP Nontop (Input 1) -}
  [a#, a, b, a] |-> [a#, b, b, b] {- DP (Top 0) (Input 0) -}
  [a#, a, b, a] |-> [b#] {- DP (Top 3) (Input 0) -}
  [a#, a, b, a] |-> [b#, b] {- DP (Top 2) (Input 0) -}
  [a#, a, b, a] |-> [b#, b, b] {- DP (Top 1) (Input 0) -}
  [b#, b, b] |-> [a#] {- DP (Top 3) (Input 1) -}
  [b#, b, b] |-> [a#, a] {- DP (Top 2) (Input 1) -}
  [b#, b, b] |-> [a#, a, a] {- DP (Top 1) (Input 1) -}
  [b#, b, b] |-> [b#, a, a, a] {- DP (Top 0) (Input 1) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a, b, a] |-> [a#, b, b, b] {- DP (Top 0) (Input 0) -}
  [a#, a, b, a] |-> [b#] {- DP (Top 3) (Input 0) -}
  [b#, b, b] |-> [a#] {- DP (Top 3) (Input 1) -}
  [a#, a, b, a] |-> [b#, b] {- DP (Top 2) (Input 0) -}
  [b#, b, b] |-> [a#, a] {- DP (Top 2) (Input 1) -}
  [a#, a, b, a] |-> [b#, b, b] {- DP (Top 1) (Input 0) -}
  [b#, b, b] |-> [a#, a, a] {- DP (Top 1) (Input 1) -}
  [b#, b, b] |-> [b#, a, a, a] {- DP (Top 0) (Input 1) -}
  [a, a, b, a] ->= [a, b, b, b] {- DP Nontop (Input 0) -}
  [b, b, b] ->= [b, a, a, a] {- DP Nontop (Input 1) -}
reason
  ( a
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( b
  , Wk  / 0A  0A 0A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( a#
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 3A 3A 3A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 1A 3A 3A - \
        | 1A 3A 3A - |
        | 1A 3A 3A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [a#, a, b, a] |-> [a#, b, b, b] {- DP (Top 0) (Input 0) -}
  [a#, a, b, a] |-> [b#] {- DP (Top 3) (Input 0) -}
  [b#, b, b] |-> [a#] {- DP (Top 3) (Input 1) -}
  [a#, a, b, a] |-> [b#, b] {- DP (Top 2) (Input 0) -}
  [b#, b, b] |-> [a#, a] {- DP (Top 2) (Input 1) -}
  [a#, a, b, a] |-> [b#, b, b] {- DP (Top 1) (Input 0) -}
  [b#, b, b] |-> [a#, a, a] {- DP (Top 1) (Input 1) -}
  [a, a, b, a] ->= [a, b, b, b] {- DP Nontop (Input 0) -}
  [b, b, b] ->= [b, a, a, a] {- DP Nontop (Input 1) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a, b, a] |-> [a#, b, b, b] {- DP (Top 0) (Input 0) -}
  [a#, a, b, a] |-> [b#] {- DP (Top 3) (Input 0) -}
  [b#, b, b] |-> [a#] {- DP (Top 3) (Input 1) -}
  [a#, a, b, a] |-> [b#, b] {- DP (Top 2) (Input 0) -}
  [b#, b, b] |-> [a#, a] {- DP (Top 2) (Input 1) -}
  [a#, a, b, a] |-> [b#, b, b] {- DP (Top 1) (Input 0) -}
  [b#, b, b] |-> [a#, a, a] {- DP (Top 1) (Input 1) -}
  [a, a, b, a] ->= [a, b, b, b] {- DP Nontop (Input 0) -}
  [b, b, b] ->= [b, a, a, a] {- DP Nontop (Input 1) -}
reason
  ( a
  , Wk  / 0A  0A  0A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( b
  , Wk  / 0A  0A  3A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( a#
  , Wk  / 4A 6A 6A - \
        | 4A 6A 6A - |
        | 4A 6A 6A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 6A 6A 7A - \
        | 6A 6A 7A - |
        | 6A 6A 7A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [a#, a, b, a] |-> [b#] {- DP (Top 3) (Input 0) -}
  [b#, b, b] |-> [a#] {- DP (Top 3) (Input 1) -}
  [a#, a, b, a] |-> [b#, b] {- DP (Top 2) (Input 0) -}
  [b#, b, b] |-> [a#, a] {- DP (Top 2) (Input 1) -}
  [a#, a, b, a] |-> [b#, b, b] {- DP (Top 1) (Input 0) -}
  [b#, b, b] |-> [a#, a, a] {- DP (Top 1) (Input 1) -}
  [a, a, b, a] ->= [a, b, b, b] {- DP Nontop (Input 0) -}
  [b, b, b] ->= [b, a, a, a] {- DP Nontop (Input 1) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a, b, a] |-> [b#] {- DP (Top 3) (Input 0) -}
  [b#, b, b] |-> [a#] {- DP (Top 3) (Input 1) -}
  [a#, a, b, a] |-> [b#, b] {- DP (Top 2) (Input 0) -}
  [b#, b, b] |-> [a#, a] {- DP (Top 2) (Input 1) -}
  [a#, a, b, a] |-> [b#, b, b] {- DP (Top 1) (Input 0) -}
  [b#, b, b] |-> [a#, a, a] {- DP (Top 1) (Input 1) -}
  [a, a, b, a] ->= [a, b, b, b] {- DP Nontop (Input 0) -}
  [b, b, b] ->= [b, a, a, a] {- DP Nontop (Input 1) -}
reason
  ( a
  , Wk  / 0A  0A  3A - \
        | 0A  0A  3A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( b
  , Wk  / 0A  0A 3A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( a#
  , Wk  / 16A 16A 17A - \
        | 16A 16A 17A - |
        | 16A 16A 17A - |
        \ -   -   -   - / )
  ( b#
  , Wk  / 13A 16A 16A - \
        | 13A 16A 16A - |
        | 13A 16A 16A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [b#, b, b] |-> [a#] {- DP (Top 3) (Input 1) -}
  [b#, b, b] |-> [a#, a] {- DP (Top 2) (Input 1) -}
  [b#, b, b] |-> [a#, a, a] {- DP (Top 1) (Input 1) -}
  [a, a, b, a] ->= [a, b, b, b] {- DP Nontop (Input 0) -}
  [b, b, b] ->= [b, a, a, a] {- DP Nontop (Input 1) -}
reason
  (a, 0/1)
  (b, 0/1)
  (a#, 0/1)
  (b#, 1/1)
   property Termination
has value Just True
for SRS
  [a, a, b, a] ->= [a, b, b, b] {- DP Nontop (Input 0) -}
  [b, b, b] ->= [b, a, a, a] {- DP Nontop (Input 1) -}
reason
  EDG

**************************************************
skeleton: (2,2)\Deepee\EDG(8/2,4)\Matrix{\Arctic}{3}\EDG(7/2,4)\Matrix{\Arctic}{3}\EDG(6/2,4)\Matrix{\Arctic}{3}(3/2,4)\Weight(0/2,2)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 1.464248932000
  min duration 0.015692022000
  total durat. 3.505606628000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 48
      , num_strict_rules = 40
      , num_top_rules = 40
      , num_weak_rules = 8
      , alphabet_size = 8
      , total_length = 376}
    , self = 123
    , parent = Nothing
    , duration = 1.339115427000
    , status = Fail
    , start = 2025-09-03 13:30:28.175925583 UTC
    , finish = 2025-09-03 13:30:29.51504101 UTC
    , thread_cap_info = ("ThreadId 142", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 40
      , num_strict_rules = 32
      , num_top_rules = 32
      , num_weak_rules = 8
      , alphabet_size = 8
      , total_length = 332}
    , self = 124
    , parent = Nothing
    , duration = 1.464248932000
    , status = Fail
    , start = 2025-09-03 13:30:28.25546419 UTC
    , finish = 2025-09-03 13:30:29.719713122 UTC
    , thread_cap_info = ("ThreadId 150", 1, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 1.045624334000
  min duration 0.021051637000
  total durat. 2.323021652000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 48
      , num_strict_rules = 40
      , num_top_rules = 40
      , num_weak_rules = 8
      , alphabet_size = 8
      , total_length = 376}
    , self = 122
    , parent = Nothing
    , duration = 1.045624334000
    , status = Fail
    , start = 2025-09-03 13:30:28.193660584 UTC
    , finish = 2025-09-03 13:30:29.239284918 UTC
    , thread_cap_info = ("ThreadId 143", 1, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.627284950000
  min duration 1.627284950000
  total durat. 1.627284950000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 41}
    , self = 125
    , parent = Nothing
    , duration = 1.627284950000
    , status = Fail
    , start = 2025-09-03 13:30:28.20637035 UTC
    , finish = 2025-09-03 13:30:29.8336553 UTC
    , thread_cap_info = ("ThreadId 148", 3, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 5
  max duration 0.974546387000
  min duration 0.071707244000
  total durat. 1.573651427000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 1.154374768000
  min duration 0.086722036000
  total durat. 1.697266371000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 48}
    , self = 126
    , parent = Nothing
    , duration = 1.154374768000
    , status = Success
    , start = 2025-09-03 13:30:29.014791656 UTC
    , finish = 2025-09-03 13:30:30.169166424 UTC
    , thread_cap_info = ("ThreadId 173", 0, False)}
**************************************************
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11007, clauses: 46400, status: Satisfied, time: 0.402190023s
F                Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
F                , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
F                = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
F                False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
F                = Size { num_rules = 8 , num_strict_rules = 8 , num_top_rules = 0 , num_weak_rules
F                = 0 , alphabet_size = 4 , total_length = 76} , self = 82 , parent = Nothing
F                , duration = 0.549086992000 , status = Fail , start = 2025-09-03 13:30:27.619179223
F                UTC , finish = 2025-09-03 13:30:28.168266215 UTC , thread_cap_info = ("ThreadId
F                54", 1, False)}
F                
| F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F              = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| F              = 8 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| F              = 76} , self = 60 , parent = Nothing , duration = 0.101145866000 , status
| F              = Fail , start = 2025-09-03 13:30:27.703681475 UTC , finish = 2025-09-03
| F              13:30:27.804827341 UTC , thread_cap_info = ("ThreadId 75", 0, False)}
| F              
| F              
| F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F              = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| F              = 8 , num_top_rules = 8 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| F              = 63} , self = 68 , parent = Nothing , duration = 0.152940411000 , status
| F              = Fail , start = 2025-09-03 13:30:27.805189946 UTC , finish = 2025-09-03
| F              13:30:27.958130357 UTC , thread_cap_info = ("ThreadId 97", 0, False)}
| F              
| | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F            = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | F            = 6 , num_top_rules = 6 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | F            = 54} , self = 66 , parent = Nothing , duration = 0.135477003000 , status
| | F            = Fail , start = 2025-09-03 13:30:27.805193111 UTC , finish = 2025-09-03
| | F            13:30:27.940670114 UTC , thread_cap_info = ("ThreadId 100", 3, False)}
| | F            
| | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | F          = 8 , num_top_rules = 8 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | F          = 63} , self = 67 , parent = Nothing , duration = 0.142150931000 , status
| | | F          = Fail , start = 2025-09-03 13:30:27.814246169 UTC , finish = 2025-09-03
| | | F          13:30:27.9563971 UTC , thread_cap_info = ("ThreadId 101", 0, False)}
| | | F          
| | | | S        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S        = 8 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 2 , alphabet_size
| | | | S        = 4 , total_length = 54} , self = 69 , parent = Nothing , duration = 0.134232971000
| | | | S        , status = Success , start = 2025-09-03 13:30:27.843514531 UTC , finish
| | | | S        = 2025-09-03 13:30:27.977747502 UTC , thread_cap_info = ("ThreadId 105",
| | | | S        3, False)}
| | | | S        
| | F | |        
| |   F |        
| F     |        
|       S        
| S              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S              = 10 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 2 ,
| S              alphabet_size = 4 , total_length = 63} , self = 78 , parent = Nothing ,
| S              duration = 0.150097993000 , status = Success , start = 2025-09-03 13:30:27.993665694
| S              UTC , finish = 2025-09-03 13:30:28.143763687 UTC , thread_cap_info = ("ThreadId
| S              110", 0, False)}
| S              
| | E            Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | E            , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 2 , alphabet_size
| | E            = 4 , total_length = 63} , self = 103 , parent = Nothing , duration = 0.199652753000
| | E            , status = Except "AsyncCancelled" , start = 2025-09-03 13:30:28.014125308
| | E            UTC , finish = 2025-09-03 13:30:28.213778061 UTC , thread_cap_info = ("ThreadId
| | E            111", 0, False)}
| | E            
| S |            
F   |            
F   |            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F   |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F   |            = False\n , verbose = False}" , input_size = Size { num_rules = 48 , num_strict_rules
F   |            = 40 , num_top_rules = 40 , num_weak_rules = 8 , alphabet_size = 8 , total_length
F   |            = 376} , self = 123 , parent = Nothing , duration = 1.339115427000 , status
F   |            = Fail , start = 2025-09-03 13:30:28.175925583 UTC , finish = 2025-09-03
F   |            13:30:29.51504101 UTC , thread_cap_info = ("ThreadId 142", 1, False)}
F   |            
| F |            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F |            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F |            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F |            = 6 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 2 , alphabet_size
| F |            = 4 , total_length = 41} , self = 107 , parent = Nothing , duration = 0.129322084000
| F |            , status = Fail , start = 2025-09-03 13:30:28.184333558 UTC , finish =
| F |            2025-09-03 13:30:28.313655642 UTC , thread_cap_info = ("ThreadId 147",
| F |            3, False)}
| F |            
| | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 48 , num_strict_rules
| | | F          = 40 , num_top_rules = 40 , num_weak_rules = 8 , alphabet_size = 8 , total_length
| | | F          = 376} , self = 122 , parent = Nothing , duration = 1.045624334000 , status
| | | F          = Fail , start = 2025-09-03 13:30:28.193660584 UTC , finish = 2025-09-03
| | | F          13:30:29.239284918 UTC , thread_cap_info = ("ThreadId 143", 1, False)}
| | | F          
| | | | F        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | F        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | F        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | F        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | F        , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 2 , alphabet_size
| | | | F        = 4 , total_length = 41} , self = 125 , parent = Nothing , duration = 1.627284950000
| | | | F        , status = Fail , start = 2025-09-03 13:30:28.20637035 UTC , finish = 2025-09-03
| | | | F        13:30:29.8336553 UTC , thread_cap_info = ("ThreadId 148", 3, False)}
| | | | F        
| | E | |        
| | F | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | |        = False\n , verbose = False}" , input_size = Size { num_rules = 40 , num_strict_rules
| | F | |        = 32 , num_top_rules = 32 , num_weak_rules = 8 , alphabet_size = 8 , total_length
| | F | |        = 332} , self = 124 , parent = Nothing , duration = 1.464248932000 , status
| | F | |        = Fail , start = 2025-09-03 13:30:28.25546419 UTC , finish = 2025-09-03
| | F | |        13:30:29.719713122 UTC , thread_cap_info = ("ThreadId 150", 1, False)}
| | F | |        
| | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 40 , num_strict_rules
| | | | | F      = 32 , num_top_rules = 32 , num_weak_rules = 8 , alphabet_size = 8 , total_length
| | | | | F      = 332} , self = 121 , parent = Nothing , duration = 0.905958549000 , status
| | | | | F      = Fail , start = 2025-09-03 13:30:28.309958632 UTC , finish = 2025-09-03
| | | | | F      13:30:29.215917181 UTC , thread_cap_info = ("ThreadId 151", 1, False)}
| | | | | F      
| F | | | |      
| F | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| F | | | |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F | | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| F | | | |      , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 2 , alphabet_size
| F | | | |      = 4 , total_length = 41} , self = 120 , parent = Nothing , duration = 0.888453329000
| F | | | |      , status = Fail , start = 2025-09-03 13:30:28.313687135 UTC , finish =
| F | | | |      2025-09-03 13:30:29.202140464 UTC , thread_cap_info = ("ThreadId 157",
| F | | | |      3, False)}
| F | | | |      
| | | | | | S    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | S    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | S    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | S    = 9 , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 2 , alphabet_size
| | | | | | S    = 4 , total_length = 56} , self = 111 , parent = Nothing , duration = 0.171838603000
| | | | | | S    , status = Success , start = 2025-09-03 13:30:28.373684079 UTC , finish
| | | | | | S    = 2025-09-03 13:30:28.545522682 UTC , thread_cap_info = ("ThreadId 160",
| | | | | | S    0, False)}
| | | | | | S    
| | | | | | | E  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | | | | E  , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 2 , alphabet_size
| | | | | | | E  = 4 , total_length = 56} , self = 113 , parent = Nothing , duration = 0.231149505000
| | | | | | | E  , status = Except "AsyncCancelled" , start = 2025-09-03 13:30:28.42351769
| | | | | | | E  UTC , finish = 2025-09-03 13:30:28.654667195 UTC , thread_cap_info = ("ThreadId
| | | | | | | E  163", 0, False)}
| | | | | | | E  
| | | | | | S |  
| | | | | |   E  
| | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | F    = 6 , num_top_rules = 6 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | | | | F    = 48} , self = 119 , parent = Nothing , duration = 0.210622788000 , status
| | | | | | F    = Fail , start = 2025-09-03 13:30:28.948146341 UTC , finish = 2025-09-03
| | | | | | F    13:30:29.158769129 UTC , thread_cap_info = ("ThreadId 169", 0, False)}
| | | | | | F    
| | | | | | | S  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | S  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | S  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | S  = 8 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 2 , alphabet_size
| | | | | | | S  = 4 , total_length = 48} , self = 126 , parent = Nothing , duration = 1.154374768000
| | | | | | | S  , status = Success , start = 2025-09-03 13:30:29.014791656 UTC , finish
| | | | | | | S  = 2025-09-03 13:30:30.169166424 UTC , thread_cap_info = ("ThreadId 173",
| | | | | | | S  0, False)}
| | | | | | | S  
| | | | | | F |  
| | | | | | E |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | | | E |  , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 2 , alphabet_size
| | | | | | E |  = 4 , total_length = 48} , self = 128 , parent = Nothing , duration = 0.974546387000
| | | | | | E |  , status = Except "AsyncCancelled" , start = 2025-09-03 13:30:29.194938837
| | | | | | E |  UTC , finish = 2025-09-03 13:30:30.169485224 UTC , thread_cap_info = ("ThreadId
| | | | | | E |  176", 0, False)}
| | | | | | E |  
| F | | | | | |  
|   | | | F | |  
|   | F |   | |  
F   |   |   | |  
    F   |   | |  
        F   | |  
            | S  
            E    
