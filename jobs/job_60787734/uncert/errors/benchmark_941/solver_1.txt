last 1667 length 7665
last 1734 length 7879
CNF 1734 vars 7879 clauses
CNF 1667 vars 7665 clauses
last 672 length 2722
last 623 length 2639
last 623 length 2639
last 672 length 2722
CNF 672 vars 2722 clauses
CNF 623 vars 2639 clauses
CNF 623 vars 2639 clauses
CNF 672 vars 2722 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1826, clauses: 6873
last 1826 length 6873
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1826, clauses: 6873
last 1826 length 6873
CNF 1826 vars 6873 clauses
CNF 1826 vars 6873 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1826, clauses: 6873, status: Unsatisfied, time: 0.119054359s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1826, clauses: 6873, status: Unsatisfied, time: 0.162051281s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5405, clauses: 22505
last 4497 length 19864
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3387, clauses: 13895
last 5405 length 22505
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5405, clauses: 22505
last 7536 length 35013
last 5962 length 26324
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3387, clauses: 13895
CNF 4497 vars 19864 clauses
last 9942 length 45672
last 3387 length 13895
last 5405 length 22505
CNF 5405 vars 22505 clauses
CNF 7536 vars 35013 clauses
last 3387 length 13895
CNF 5962 vars 26324 clauses
CNF 9942 vars 45672 clauses
CNF 5405 vars 22505 clauses
CNF 3387 vars 13895 clauses
CNF 3387 vars 13895 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3387, clauses: 13895, status: Unsatisfied, time: 0.517289212s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5405, clauses: 22505, status: Unsatisfied, time: 0.697877935s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5730, clauses: 22721
last 5730 length 22721
CNF 5730 vars 22721 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5405, clauses: 22505, status: Unsatisfied, time: 0.582658116s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3387, clauses: 13895, status: Unsatisfied, time: 0.604452006s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17056, clauses: 71509
last 17056 length 71509
CNF 17056 vars 71509 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3009, clauses: 12084
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3009, clauses: 12084
last 3009 length 12084
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7100, clauses: 28857
last 3009 length 12084
CNF 3009 vars 12084 clauses
[Info] pool sizes (success) 103989 seen 69382 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 7100 length 28857
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9235, clauses: 39613
CNF 3009 vars 12084 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9235, clauses: 39613
**************************************************Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 19163, clauses: 80269

CNF 7100 vars 28857 clauses
last 9235 length 39613
last 9235 length 39613
last 19163 length 80269
summary
**************************************************
SRS with 2 rules on 2 letters       looping derivation
from
  [a, a, a, a, b, b, b, b, b, b, a, b, b, b]
to
  [b, b, b, b, b, b, b, b, b, a, a, a, a, b, b, b, b, b, b, a, b, b, b]
via 18 steps

**************************************************
proof
**************************************************
property Termination
has value Just False
for SRS
  [a, a, b, b] -> [b, b, b, a, a, a] {- Input 0 -}
  [a] -> [] {- Input 1 -}
reason
  Nontermination
    Derive   { from = [a, a, a, a, b, b, b, b, b, b, a, b, b, b], via = [(Step   { rule = 0, position = 2}, [a, a, b, b, b, a, a, a, b, b, b, b, a, b, b, b]), (Step   { rule = 1, position = 5}, [a, a, b, b, b, a, a, b, b, b, b, a, b, b, b]), (Step   { rule = 0, position = 5}, [a, a, b, b, b, b, b, b, a, a, a, b, b, a, b, b, b]), (Step   { rule = 0, position = 9}, [a, a, b, b, b, b, b, b, a, b, b, b, a, a, a, a, b, b, b]), (Step   { rule = 0, position = 14}, [a, a, b, b, b, b, b, b, a, b, b, b, a, a, b, b, b, a, a, a, b]), (Step   { rule = 1, position = 17}, [a, a, b, b, b, b, b, b, a, b, b, b, a, a, b, b, b, a, a, b]), (Step   { rule = 1, position = 17}, [a, a, b, b, b, b, b, b, a, b, b, b, a, a, b, b, b, a, b]), (Step   { rule = 1, position = 17}, [a, a, b, b, b, b, b, b, a, b, b, b, a, a, b, b, b, b]), (Step   { rule = 0, position = 12}, [a, a, b, b, b, b, b, b, a, b, b, b, b, b, b, a, a, a, b, b]), (Step   { rule = 0, position = 16}, [a, a, b, b, b, b, b, b, a, b, b, b, b, b, b, a, b, b, b, a, a, a]), (Step   { rule = 1, position = 19}, [a, a, b, b, b, b, b, b, a, b, b, b, b, b, b, a, b, b, b, a, a]), (Step   { rule = 1, position = 19}, [a, a, b, b, b, b, b, b, a, b, b, b, b, b, b, a, b, b, b, a]), (Step   { rule = 1, position = 19}, [a, a, b, b, b, b, b, b, a, b, b, b, b, b, b, a, b, b, b]), (Step   { rule = 0, position = 0}, [b, b, b, a, a, a, b, b, b, b, a, b, b, b, b, b, b, a, b, b, b]), (Step   { rule = 1, position = 3}, [b, b, b, a, a, b, b, b, b, a, b, b, b, b, b, b, a, b, b, b]), (Step   { rule = 0, position = 3}, [b, b, b, b, b, b, a, a, a, b, b, a, b, b, b, b, b, b, a, b, b, b]), (Step   { rule = 1, position = 6}, [b, b, b, b, b, b, a, a, b, b, a, b, b, b, b, b, b, a, b, b, b]), (Step   { rule = 0, position = 6}, [b, b, b, b, b, b, b, b, b, a, a, a, a, b, b, b, b, b, b, a, b, b, b])], to = [b, b, b, b, b, b, b, b, b, a, a, a, a, b, b, b, b, b, b, a, b, b, b]}

**************************************************
skeleton: (2,2)\Loop{18}[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.693685688000
  min duration 0.040574710000
  total durat. 1.486160233000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.691634052000
  min duration 0.015273841000
  total durat. 1.389632772000
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.982201035000
  min duration 0.980538253000
  total durat. 1.962739288000
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.789463023000
  min duration 0.736856209000
  total durat. 1.526319232000
Success : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.440758983000
  min duration 1.440758983000
  total durat. 1.440758983000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 2
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 11}
    , self = 93
    , parent = Nothing
    , duration = 1.440758983000
    , status = Success
    , start = 2025-09-03 13:34:21.236618138 UTC
    , finish = 2025-09-03 13:34:22.677377121 UTC
    , thread_cap_info = ("ThreadId 128", 1, False)}
**************************************************
F                    Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                    , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                    = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                    , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                    = False}" , input_size = Size { num_rules = 2 , num_strict_rules = 2 ,
F                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F                    = 11} , self = 86 , parent = Nothing , duration = 0.712415738000 , status
F                    = Fail , start = 2025-09-03 13:34:20.845598939 UTC , finish = 2025-09-03
F                    13:34:21.558014677 UTC , thread_cap_info = ("ThreadId 22", 1, False)}
F                    
| F                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| F                  , closure = Backward\n , start_strict_only = True\n , max_closure_length
| F                  = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| F                  Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| F                  8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| F                  = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| F                  ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| F                  1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| F                  = True})" , input_size = Size { num_rules = 2 , num_strict_rules = 2 ,
| F                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| F                  = 11} , self = 82 , parent = Nothing , duration = 0.306236376000 , status
| F                  = Fail , start = 2025-09-03 13:34:20.853761768 UTC , finish = 2025-09-03
| F                  13:34:21.159998144 UTC , thread_cap_info = ("ThreadId 42", 1, False)}
| F                  
| | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                = False\n , verbose = False}" , input_size = Size { num_rules = 21 , num_strict_rules
| | F                = 13 , num_top_rules = 13 , num_weak_rules = 8 , alphabet_size = 6 , total_length
| | F                = 157} , self = 85 , parent = Nothing , duration = 0.629806989000 , status
| | F                = Fail , start = 2025-09-03 13:34:20.927669959 UTC , finish = 2025-09-03
| | F                13:34:21.557476948 UTC , thread_cap_info = ("ThreadId 94", 3, False)}
| | F                
| | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 21 , num_strict_rules
| | | F              = 13 , num_top_rules = 13 , num_weak_rules = 8 , alphabet_size = 6 , total_length
| | | F              = 157} , self = 84 , parent = Nothing , duration = 0.566689026000 , status
| | | F              = Fail , start = 2025-09-03 13:34:20.934774907 UTC , finish = 2025-09-03
| | | F              13:34:21.501463933 UTC , thread_cap_info = ("ThreadId 95", 0, False)}
| | | F              
| | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 28 , num_strict_rules
| | | | F            = 20 , num_top_rules = 20 , num_weak_rules = 8 , alphabet_size = 7 , total_length
| | | | F            = 210} , self = 87 , parent = Nothing , duration = 0.691634052000 , status
| | | | F            = Fail , start = 2025-09-03 13:34:20.935128354 UTC , finish = 2025-09-03
| | | | F            13:34:21.626762406 UTC , thread_cap_info = ("ThreadId 117", 3, False)}
| | | | F            
| | | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 28 , num_strict_rules
| | | | | F          = 20 , num_top_rules = 20 , num_weak_rules = 8 , alphabet_size = 7 , total_length
| | | | | F          = 210} , self = 88 , parent = Nothing , duration = 0.693685688000 , status
| | | | | F          = Fail , start = 2025-09-03 13:34:20.936607516 UTC , finish = 2025-09-03
| | | | | F          13:34:21.630293204 UTC , thread_cap_info = ("ThreadId 116", 3, False)}
| | | | | F          
| | | | | | F        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | F        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | F        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | F        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | F        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | F        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | | | F        , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | | | | F        = 3 , total_length = 34} , self = 90 , parent = Nothing , duration = 0.980538253000
| | | | | | F        , status = Fail , start = 2025-09-03 13:34:20.973655792 UTC , finish =
| | | | | | F        2025-09-03 13:34:21.954194045 UTC , thread_cap_info = ("ThreadId 123",
| | | | | | F        2, False)}
| | | | | | F        
| | | | | | | F      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | F      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | F      = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | | | | | F      = 3 , total_length = 34} , self = 83 , parent = Nothing , duration = 0.225830796000
| | | | | | | F      , status = Fail , start = 2025-09-03 13:34:20.976955108 UTC , finish =
| | | | | | | F      2025-09-03 13:34:21.202785904 UTC , thread_cap_info = ("ThreadId 122",
| | | | | | | F      2, False)}
| | | | | | | F      
| | | | | | | | F    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | F    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | F    = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | | | | | | F    = 3 , total_length = 34} , self = 81 , parent = Nothing , duration = 0.162529967000
| | | | | | | | F    , status = Fail , start = 2025-09-03 13:34:20.996894448 UTC , finish =
| | | | | | | | F    2025-09-03 13:34:21.159424415 UTC , thread_cap_info = ("ThreadId 124",
| | | | | | | | F    2, False)}
| | | | | | | | F    
| | | | | | | | | F  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | | F  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | | F  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | | F  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | F  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | F  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | | | | | | F  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | | | | | | | F  = 3 , total_length = 34} , self = 91 , parent = Nothing , duration = 0.982201035000
| | | | | | | | | F  , status = Fail , start = 2025-09-03 13:34:21.040940698 UTC , finish =
| | | | | | | | | F  2025-09-03 13:34:22.023141733 UTC , thread_cap_info = ("ThreadId 125",
| | | | | | | | | F  2, False)}
| | | | | | | | | F  
| | | | | | | | F |  
| F | | | | | |   |  
|   | | | | | F   |  
| F | | | | |     |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| F | | | | |     |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F | | | | |     |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F | | | | |     |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | | | | |     |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | | | | |     |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| F | | | | |     |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| F | | | | |     |  = 3 , total_length = 34} , self = 89 , parent = Nothing , duration = 0.736856209000
| F | | | | |     |  , status = Fail , start = 2025-09-03 13:34:21.217310964 UTC , finish =
| F | | | | |     |  2025-09-03 13:34:21.954167173 UTC , thread_cap_info = ("ThreadId 129",
| F | | | | |     |  2, False)}
| F | | | | |     |  
| | | | | | | S   |  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | S   |  , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | S   |  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | S   |  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | S   |  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | S   |  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | S   |  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | S   |  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | S   |  = True})" , input_size = Size { num_rules = 2 , num_strict_rules = 2 ,
| | | | | | | S   |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | S   |  = 11} , self = 93 , parent = Nothing , duration = 1.440758983000 , status
| | | | | | | S   |  = Success , start = 2025-09-03 13:34:21.236618138 UTC , finish = 2025-09-03
| | | | | | | S   |  13:34:22.677377121 UTC , thread_cap_info = ("ThreadId 128", 1, False)}
| | | | | | | S   |  
| | | | | | | | F |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | | | | F |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | | F |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | | F |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | F |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | F |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | | | | | F |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | | | | | | F |  = 3 , total_length = 34} , self = 92 , parent = Nothing , duration = 0.789463023000
| | | | | | | | F |  , status = Fail , start = 2025-09-03 13:34:21.256118299 UTC , finish =
| | | | | | | | F |  2025-09-03 13:34:22.045581322 UTC , thread_cap_info = ("ThreadId 130",
| | | | | | | | F |  2, False)}
| | | | | | | | F |  
| | | F | | | | | |  
| | F   | | | | | |  
F |     | | | | | |  
  |     F | | | | |  
  |       F | | | |  
  F         | | | |  
            F | | |  
              | | F  
              | F    
              S      
