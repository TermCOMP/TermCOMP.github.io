last 3216 length 16602
CNF 3216 vars 16602 clauses
last 3355 length 22172
CNF 3355 vars 22172 clauses
last 694 length 2813
CNF 694 vars 2813 clauses
last 858 length 3921
CNF 858 vars 3921 clauses
last 929 length 3932
last 5907 length 27355
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2417, clauses: 8751
CNF 5907 vars 27355 clauses
CNF 929 vars 3932 clauses
last 1241 length 5704
last 3858 length 17013
last 2417 length 8751
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7932, clauses: 33023
last 16027 length 136390
last 22718 length 131917
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7323, clauses: 28112
CNF 2417 vars 8751 clauses
CNF 1241 vars 5704 clauses
last 7932 length 33023
CNF 3858 vars 17013 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2796, clauses: 10220
CNF 16027 vars 136390 clauses
last 7323 length 28112
CNF 22718 vars 131917 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2417, clauses: 8751, status: Unsatisfied, time: 0.464797449s
CNF 7932 vars 33023 clauses
last 2796 length 10220
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9724, clauses: 40621
CNF 7323 vars 28112 clauses
CNF 2796 vars 10220 clauses
last 9724 length 40621
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 22766, clauses: 95144
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4962, clauses: 20042
last 22766 length 95144
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13289, clauses: 55371
last 4962 length 20042
CNF 9724 vars 40621 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2796, clauses: 10220, status: Unsatisfied, time: 0.602821735s
last 13289 length 55371
CNF 22766 vars 95144 clauses
CNF 4962 vars 20042 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7932, clauses: 33023, status: Unsatisfied, time: 1.026214574s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6042, clauses: 24426
last 6042 length 24426
CNF 6042 vars 24426 clauses
CNF 13289 vars 55371 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3988, clauses: 15195
last 3988 length 15195
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 29774, clauses: 123925
last 29774 length 123925
CNF 3988 vars 15195 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4962, clauses: 20042, status: Unsatisfied, time: 1.120176836s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13289, clauses: 55371, status: Satisfied, time: 0.807509928s
CNF 29774 vars 123925 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3988, clauses: 15195, status: Unsatisfied, time: 0.305463085s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7323, clauses: 28112, status: Satisfied, time: 1.985055537s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7448, clauses: 28116
last 7448 length 28116
CNF 7448 vars 28116 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13926, clauses: 58517
last 13926 length 58517
CNF 13926 vars 58517 clauses
last 2541 length 11616
CNF 2541 vars 11616 clauses
last 3001 length 15327
CNF 3001 vars 15327 clauses
last 6830 length 47708
CNF 6830 vars 47708 clauses
last 8683 length 79410
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6042, clauses: 24426, status: Unsatisfied, time: 1.91885591s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5389, clauses: 19864
last 5389 length 19864
CNF 5389 vars 19864 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4597, clauses: 17637
last 4597 length 17637
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7448, clauses: 28116, status: Unsatisfied, time: 1.226609719s
CNF 4597 vars 17637 clauses
CNF 8683 vars 79410 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9724, clauses: 40621, status: Unsatisfied, time: 3.445156956s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5803, clauses: 20995
last 5803 length 20995
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4597, clauses: 17637, status: Unsatisfied, time: 0.842277925s
CNF 5803 vars 20995 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5389, clauses: 19864, status: Unsatisfied, time: 1.486489639s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 19066, clauses: 79923
last 19066 length 79923
CNF 19066 vars 79923 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8634, clauses: 32688
last 8634 length 32688
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5803, clauses: 20995, status: Satisfied, time: 0.767394697s
CNF 8634 vars 32688 clauses
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17016, clauses: 79387
last 17016 length 79387
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17162, clauses: 71845
last 17162 length 71845
CNF 17162 vars 71845 clauses
CNF 17016 vars 79387 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11743, clauses: 49375
last 11743 length 49375
CNF 11743 vars 49375 clauses
last 6830 length 47708
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17016, clauses: 79387, status: Satisfied, time: 0.892786855s
CNF 6830 vars 47708 clauses
last 611 length 2635
CNF 611 vars 2635 clauses
last 893 length 3897
last 8683 length 79410
CNF 893 vars 3897 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2279, clauses: 8133
last 2279 length 8133
CNF 2279 vars 8133 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8634, clauses: 32688, status: Unsatisfied, time: 1.450793764s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2279, clauses: 8133, status: Unsatisfied, time: 0.164562987s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5803, clauses: 20995
last 5803 length 20995
CNF 8683 vars 79410 clauses
CNF 5803 vars 20995 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8172, clauses: 34065
last 8172 length 34065
CNF 8172 vars 34065 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5046, clauses: 20374
last 5046 length 20374
CNF 5046 vars 20374 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5803, clauses: 20995, status: Satisfied, time: 1.503593419s
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 27 rules on 9 letters       weights
SRS with 15 rules on 8 letters       mirror
SRS with 15 rules on 8 letters       DP
SRS with 48 strict rules and 15 weak rules on 15 letters       weights
SRS with 46 strict rules and 15 weak rules on 14 letters       EDG
SRS with 46 strict rules and 15 weak rules on 14 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 14 strict rules and 15 weak rules on 14 letters       weights
SRS with 8 strict rules and 15 weak rules on 12 letters       EDG
2 sub-proofs
  1 SRS with 4 strict rules and 15 weak rules on 10 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 2 strict rules and 15 weak rules on 10 letters       weights
  SRS with 1 strict rules and 15 weak rules on 9 letters       EDG
  SRS with 1 strict rules and 15 weak rules on 9 letters       Usable
  SRS with 1 rules on 2 letters       weights
  SRS with 0 rules on 0 letters       EDG

  2 SRS with 4 strict rules and 15 weak rules on 10 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 2 strict rules and 15 weak rules on 10 letters       weights
  SRS with 1 strict rules and 15 weak rules on 9 letters       EDG
  SRS with 1 strict rules and 15 weak rules on 9 letters       Usable
  SRS with 1 rules on 2 letters       weights
  SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [a, b] -> [] {- Input 1 -}
  [a, c, c] -> [c, b, c, a, c, a] {- Input 2 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, a], [a, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[b, a], [a, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[c, a], [a, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[c, a], [a, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[c, a], [a, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[a, a], [a, b], [b, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, a], [a, b], [b, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, a], [a, b], [b, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, a], [a, b], [b, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, a], [a, b], [b, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, a], [a, b], [b, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[c, a], [a, b], [b, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[c, a], [a, b], [b, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[c, a], [a, b], [b, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, a], [a, c], [c, c], [c, a]] -> [ [a, c] , [c, b] , [b, c] , [c, a] , [a, c] , [c, a] , [ a , a ] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, a], [a, c], [c, c], [c, b]] -> [ [a, c] , [c, b] , [b, c] , [c, a] , [a, c] , [c, a] , [ a , b ] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, a], [a, c], [c, c], [c, c]] -> [ [a, c] , [c, b] , [b, c] , [c, a] , [a, c] , [c, a] , [ a , c ] ] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, a], [a, c], [c, c], [c, a]] -> [ [b, c] , [c, b] , [b, c] , [c, a] , [a, c] , [c, a] , [ a , a ] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, a], [a, c], [c, c], [c, b]] -> [ [b, c] , [c, b] , [b, c] , [c, a] , [a, c] , [c, a] , [ a , b ] ] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[b, a], [a, c], [c, c], [c, c]] -> [ [b, c] , [c, b] , [b, c] , [c, a] , [a, c] , [c, a] , [ a , c ] ] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[c, a], [a, c], [c, c], [c, a]] -> [ [c, c] , [c, b] , [b, c] , [c, a] , [a, c] , [c, a] , [ a , a ] ] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[c, a], [a, c], [c, c], [c, b]] -> [ [c, c] , [c, b] , [b, c] , [c, a] , [a, c] , [c, a] , [ a , b ] ] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[c, a], [a, c], [c, c], [c, c]] -> [ [c, c] , [c, b] , [b, c] , [c, a] , [a, c] , [c, a] , [ a , c ] ] {- Semlab 2 (Concon 2 (Input 2)) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 2/1)
  ([b, b], 1/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, a], [a, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[b, a], [a, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[c, a], [a, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[c, a], [a, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[c, a], [a, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[a, a], [a, b], [b, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[c, a], [a, b], [b, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, a], [a, c], [c, c], [c, a]] -> [ [a, c] , [c, b] , [b, c] , [c, a] , [a, c] , [c, a] , [ a , a ] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, a], [a, c], [c, c], [c, b]] -> [ [a, c] , [c, b] , [b, c] , [c, a] , [a, c] , [c, a] , [ a , b ] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, a], [a, c], [c, c], [c, c]] -> [ [a, c] , [c, b] , [b, c] , [c, a] , [a, c] , [c, a] , [ a , c ] ] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[c, a], [a, c], [c, c], [c, a]] -> [ [c, c] , [c, b] , [b, c] , [c, a] , [a, c] , [c, a] , [ a , a ] ] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[c, a], [a, c], [c, c], [c, b]] -> [ [c, c] , [c, b] , [b, c] , [c, a] , [a, c] , [c, a] , [ a , b ] ] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[c, a], [a, c], [c, c], [c, c]] -> [ [c, c] , [c, b] , [b, c] , [c, a] , [a, c] , [c, a] , [ a , c ] ] {- Semlab 2 (Concon 2 (Input 2)) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] -> [[a, a]] {- Mirror (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, b], [a, a]] -> [[a, b]] {- Mirror (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, c], [a, a]] -> [[a, c]] {- Mirror (Semlab 0 (Concon 2 (Input 0))) -}
  [[a, a], [b, a]] -> [[b, a]] {- Mirror (Semlab 1 (Concon 0 (Input 0))) -}
  [[a, a], [c, a]] -> [[c, a]] {- Mirror (Semlab 2 (Concon 0 (Input 0))) -}
  [[a, b], [c, a]] -> [[c, b]] {- Mirror (Semlab 2 (Concon 1 (Input 0))) -}
  [[a, c], [c, a]] -> [[c, c]] {- Mirror (Semlab 2 (Concon 2 (Input 0))) -}
  [[b, c], [a, b], [a, a]] -> [ [ a , c ] ] {- Mirror (Semlab 0 (Concon 2 (Input 1))) -}
  [[b, c], [a, b], [c, a]] -> [ [ c , c ] ] {- Mirror (Semlab 2 (Concon 2 (Input 1))) -}
  [[c, a], [c, c], [a, c], [a, a]] -> [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- Mirror (Semlab 0 (Concon 0 (Input 2))) -}
  [[c, b], [c, c], [a, c], [a, a]] -> [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- Mirror (Semlab 0 (Concon 1 (Input 2))) -}
  [[c, c], [c, c], [a, c], [a, a]] -> [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- Mirror (Semlab 0 (Concon 2 (Input 2))) -}
  [[c, a], [c, c], [a, c], [c, a]] -> [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- Mirror (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, b], [c, c], [a, c], [c, a]] -> [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- Mirror (Semlab 2 (Concon 1 (Input 2))) -}
  [[c, c], [c, c], [a, c], [c, a]] -> [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- Mirror (Semlab 2 (Concon 2 (Input 2))) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [c, a]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [c, a]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [a, a]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [b, c]# , [c, b] , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [a, a]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [b, c]# , [c, b] , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 6) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [a, b]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [b, c]# , [c, b] , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [a, b]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [b, c]# , [c, b] , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 6) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [b, c]# , [c, b] , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [b, c]# , [c, b] , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 6) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
  ([a, a]#, 0/1)
  ([a, b]#, 1/1)
  ([a, c]#, 1/1)
  ([b, c]#, 1/1)
  ([c, a]#, 1/1)
  ([c, b]#, 1/1)
  ([c, c]#, 1/1)
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [c, a]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [c, a]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [b, c]# , [c, b] , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [b, c]# , [c, b] , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 6) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [a, b]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [b, c]# , [c, b] , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [a, b]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [b, c]# , [c, b] , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 6) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [b, c]# , [c, b] , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [b, c]# , [c, b] , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 6) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [c, a]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [a, b]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [c, a]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [b, c]# , [c, b] , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 6) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [b, c]# , [c, b] , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [b, c]# , [c, b] , [ a , c ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [b, c]# , [c, b] , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 6) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [c, a]# , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [a, b]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [b, c]# , [c, b] , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 6) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [b, c]# , [c, b] , [ c , c ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [c, a]# , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 6) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  ( [a, a]
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [a, b]
  , Wk  / 0A  0A  0A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [a, c]
  , Wk  / 0A  0A  0A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, a]
  , Wk  / 21A 21A 21A - \
        | 21A 21A 21A - |
        | 21A 21A 21A - |
        \ -   -   -   - / )
  ( [b, c]
  , Wk  / 0A  0A  3A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [c, a]
  , Wk  / 0A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [c, b]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [c, c]
  , Wk  / 0A 3A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [a, b]#
  , Wk  / 14A 14A 14A - \
        | 14A 14A 14A - |
        | 14A 14A 14A - |
        \ -   -   -   - / )
  ( [a, c]#
  , Wk  / 13A 13A 13A - \
        | 13A 13A 13A - |
        | 13A 13A 13A - |
        \ -   -   -   - / )
  ( [b, c]#
  , Wk  / 10A 13A 13A - \
        | 10A 13A 13A - |
        | 10A 13A 13A - |
        \ -   -   -   - / )
  ( [c, a]#
  , Wk  / 13A 13A 13A - \
        | 13A 13A 13A - |
        | 13A 13A 13A - |
        \ -   -   -   - / )
  ( [c, b]#
  , Wk  / 14A 16A 16A - \
        | 14A 16A 16A - |
        | 14A 16A 16A - |
        \ -   -   -   - / )
  ( [c, c]#
  , Wk  / 13A 13A 13A - \
        | 13A 13A 13A - |
        | 13A 13A 13A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [c, a]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [a, b]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [c, a]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [c, b]# , [ a , c ] ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [a, b]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [c, b]# , [ c , c ] ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
  ([a, b]#, 0/1)
  ([a, c]#, 1/1)
  ([b, c]#, 2/1)
  ([c, a]#, 2/1)
  ([c, b]#, 0/1)
  ([c, c]#, 1/1)
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [c, a]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [a, b]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [c, a]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [a, b]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [c, a]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[c, b]#, [c, c], [a, c], [a, a]] |-> [ [a, b]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, b]#, [c, c], [a, c], [c, a]] |-> [ [a, b]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A  3A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [a, b]
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 3A 3A 3A - |
        \ -  -  -  - / )
  ( [a, c]
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [b, a]
  , Wk  / 18A 21A 21A - \
        | 18A 18A 21A - |
        | 15A 18A 18A - |
        \ -   -   -   - / )
  ( [b, c]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [c, a]
  , Wk  / 0A  0A  0A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [c, b]
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [c, c]
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [a, b]#
  , Wk  / 4A 4A 5A - \
        | 4A 4A 5A - |
        | 4A 4A 5A - |
        \ -  -  -  - / )
  ( [c, b]#
  , Wk  / 2A 3A 5A - \
        | 2A 3A 5A - |
        | 2A 3A 5A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [c, a]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
  ([a, b]#, 1/1)
  ([c, b]#, 0/1)
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  remove un-usable
    SRS
      [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
      [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
      [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
      [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
      [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
      [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
      [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
      [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
      [[b, c], [a, b], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
      [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
      [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
      [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
      [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
      [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
      [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
reason
  ([a, a], 1/1)
  ([a, b]#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

property Termination
has value Just True
for SRS
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [c, a]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[c, c]#, [c, c], [a, c], [a, a]] |-> [ [a, c]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, c]#, [c, c], [a, c], [c, a]] |-> [ [a, c]# , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A  3A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [a, b]
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 3A 3A 3A - |
        \ -  -  -  - / )
  ( [a, c]
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [b, a]
  , Wk  / 18A 21A 21A - \
        | 18A 18A 21A - |
        | 15A 18A 18A - |
        \ -   -   -   - / )
  ( [b, c]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [c, a]
  , Wk  / 0A  0A  0A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [c, b]
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [c, c]
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [a, c]#
  , Wk  / 4A 4A 5A - \
        | 4A 4A 5A - |
        | 4A 4A 5A - |
        \ -  -  -  - / )
  ( [c, c]#
  , Wk  / 2A 3A 5A - \
        | 2A 3A 5A - |
        | 2A 3A 5A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [c, a]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
  ([a, c]#, 1/1)
  ([c, c]#, 0/1)
   property Termination
has value Just True
for SRS
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
reason
  remove un-usable
    SRS
      [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
      [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
      [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
      [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
      [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
      [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
      [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
      [[b, c], [a, b], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
      [[b, c], [a, b], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
      [[c, a], [c, c], [a, c], [a, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
      [[c, b], [c, c], [a, c], [a, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
      [[c, c], [c, c], [a, c], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
      [[c, a], [c, c], [a, c], [c, a]] ->= [ [a, a] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
      [[c, b], [c, c], [a, c], [c, a]] ->= [ [a, b] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
      [[c, c], [c, c], [a, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [c, a] , [b, c] , [c, b] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
   property Termination
has value Just True
for SRS
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
reason
  ([a, a], 1/1)
  ([a, c]#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: (3,3)\TileAllAll{2}(27,9)\Weight\Mirror(15,8)\Deepee(48/15,15)\Weight\EDG(46/15,14)\Matrix{\Arctic}{3}(14/15,14)\Weight(8/15,12)\EDG[(4/15,10)\Matrix{\Arctic}{3}(2/15,10)\Weight\EDG(1/15,9)\Usable(1,2)\Weight(0,0)\EDG[],(4/15,10)\Matrix{\Arctic}{3}(2/15,10)\Weight\EDG(1/15,9)\Usable(1,2)\Weight(0,0)\EDG[]]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8172, clauses: 34065, status: Unsatisfied, time: 0.9056208s

Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 1.179140740000
  min duration 0.041225502000
  total durat. 4.723789572000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 61
      , num_strict_rules = 46
      , num_top_rules = 46
      , num_weak_rules = 15
      , alphabet_size = 14
      , total_length = 429}
    , self = 87
    , parent = Nothing
    , duration = 1.171336802000
    , status = Fail
    , start = 2025-09-03 11:02:33.673107585 UTC
    , finish = 2025-09-03 11:02:34.844444387 UTC
    , thread_cap_info = ("ThreadId 98", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 19
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 15
      , alphabet_size = 10
      , total_length = 123}
    , self = 111
    , parent = Nothing
    , duration = 1.179140740000
    , status = Fail
    , start = 2025-09-03 11:02:36.503988276 UTC
    , finish = 2025-09-03 11:02:37.683129016 UTC
    , thread_cap_info = ("ThreadId 156", 0, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 2.199425928000
  min duration 0.041048485000
  total durat. 6.679200124000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 19
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 15
      , alphabet_size = 10
      , total_length = 123}
    , self = 138
    , parent = Nothing
    , duration = 1.511691524000
    , status = Fail
    , start = 2025-09-03 11:02:39.750935092 UTC
    , finish = 2025-09-03 11:02:41.262626616 UTC
    , thread_cap_info = ("ThreadId 192", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 19
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 15
      , alphabet_size = 10
      , total_length = 123}
    , self = 114
    , parent = Nothing
    , duration = 2.199425928000
    , status = Fail
    , start = 2025-09-03 11:02:36.503990676 UTC
    , finish = 2025-09-03 11:02:38.703416604 UTC
    , thread_cap_info = ("ThreadId 157", 0, False)}
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 4
  max duration 0.895034509000
  min duration 0.175657204000
  total durat. 2.019908118000
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 3.928198818000
  min duration 1.666719796000
  total durat. 5.594918614000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 40}
    , self = 89
    , parent = Nothing
    , duration = 1.666719796000
    , status = Fail
    , start = 2025-09-03 11:02:33.941854379 UTC
    , finish = 2025-09-03 11:02:35.608574175 UTC
    , thread_cap_info = ("ThreadId 122", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 48}
    , self = 113
    , parent = Nothing
    , duration = 3.928198818000
    , status = Fail
    , start = 2025-09-03 11:02:34.483955541 UTC
    , finish = 2025-09-03 11:02:38.412154359 UTC
    , thread_cap_info = ("ThreadId 132", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 4
  max duration 2.001585279000
  min duration 0.879397380000
  total durat. 5.948323182000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 19
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 15
      , alphabet_size = 10
      , total_length = 123}
    , self = 141
    , parent = Nothing
    , duration = 1.412345128000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:02:41.262666002 UTC
    , finish = 2025-09-03 11:02:42.67501113 UTC
    , thread_cap_info = ("ThreadId 211", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 61
      , num_strict_rules = 46
      , num_top_rules = 46
      , num_weak_rules = 15
      , alphabet_size = 14
      , total_length = 429}
    , self = 96
    , parent = Nothing
    , duration = 1.654995395000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:02:34.848255944 UTC
    , finish = 2025-09-03 11:02:36.503251339 UTC
    , thread_cap_info = ("ThreadId 139", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 13
      , num_top_rules = 13
      , num_weak_rules = 14
      , alphabet_size = 9
      , total_length = 177}
    , self = 101
    , parent = Nothing
    , duration = 2.001585279000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:02:34.568460512 UTC
    , finish = 2025-09-03 11:02:36.570045791 UTC
    , thread_cap_info = ("ThreadId 134", 0, False)}
Success : "Matrix\n { monotone = Weak\n , domain = Arctic\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.587131536000
  min duration 2.587131536000
  total durat. 2.587131536000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Arctic\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 5\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 40}
    , self = 126
    , parent = Nothing
    , duration = 2.587131536000
    , status = Success
    , start = 2025-09-03 11:02:37.944125038 UTC
    , finish = 2025-09-03 11:02:40.531256574 UTC
    , thread_cap_info = ("ThreadId 176", 2, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 2.095436237000
  min duration 1.390814612000
  total durat. 3.486250849000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 40}
    , self = 90
    , parent = Nothing
    , duration = 1.390814612000
    , status = Fail
    , start = 2025-09-03 11:02:34.838443835 UTC
    , finish = 2025-09-03 11:02:36.229258447 UTC
    , thread_cap_info = ("ThreadId 137", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 48}
    , self = 110
    , parent = Nothing
    , duration = 2.095436237000
    , status = Fail
    , start = 2025-09-03 11:02:35.505385086 UTC
    , finish = 2025-09-03 11:02:37.600821323 UTC
    , thread_cap_info = ("ThreadId 143", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 4.324133899000
  min duration 4.324133899000
  total durat. 4.324133899000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 40}
    , self = 128
    , parent = Nothing
    , duration = 4.324133899000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:02:36.250086057 UTC
    , finish = 2025-09-03 11:02:40.574219956 UTC
    , thread_cap_info = ("ThreadId 149", 2, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 2.293274845000
  min duration 1.596302517000
  total durat. 7.535222611000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 61
      , num_strict_rules = 46
      , num_top_rules = 46
      , num_weak_rules = 15
      , alphabet_size = 14
      , total_length = 429}
    , self = 91
    , parent = Nothing
    , duration = 1.596302517000
    , status = Success
    , start = 2025-09-03 11:02:34.675587007 UTC
    , finish = 2025-09-03 11:02:36.271889524 UTC
    , thread_cap_info = ("ThreadId 136", 0, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 19
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 15
      , alphabet_size = 10
      , total_length = 123}
    , self = 117
    , parent = Nothing
    , duration = 1.690311318000
    , status = Success
    , start = 2025-09-03 11:02:37.773386027 UTC
    , finish = 2025-09-03 11:02:39.463697345 UTC
    , thread_cap_info = ("ThreadId 174", 0, False)}
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 21104, clauses: 98895
last 21104 length 98895
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 19
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 15
      , alphabet_size = 10
      , total_length = 123}
    , self = 139
    , parent = Nothing
    , duration = 1.955333931000
    , status = Success
    , start = 2025-09-03 11:02:40.655718728 UTC
    , finish = 2025-09-03 11:02:42.611052659 UTC
    , thread_cap_info = ("ThreadId 204", 0, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 13
      , num_top_rules = 13
      , num_weak_rules = 14
      , alphabet_size = 9
      , total_length = 177}
    , self = 94
    , parent = Nothing
    , duration = 2.293274845000
    , status = Success
    , start = 2025-09-03 11:02:34.192997768 UTC
    , finish = 2025-09-03 11:02:36.486272613 UTC
    , thread_cap_info = ("ThreadId 125", 0, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 1.859045453000
  min duration 0.331005028000
  total durat. 4.199163362000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 48}
    , self = 88
    , parent = Nothing
    , duration = 1.109169040000
    , status = Fail
    , start = 2025-09-03 11:02:34.396155522 UTC
    , finish = 2025-09-03 11:02:35.505324562 UTC
    , thread_cap_info = ("ThreadId 126", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 17
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 14
      , alphabet_size = 8
      , total_length = 116}
    , self = 116
    , parent = Nothing
    , duration = 1.859045453000
    , status = Fail
    , start = 2025-09-03 11:02:37.287394978 UTC
    , finish = 2025-09-03 11:02:39.146440431 UTC
    , thread_cap_info = ("ThreadId 168", 2, False)}
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.090641697000
  min duration 0.704771493000
  total durat. 1.795413190000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 48}
    , self = 115
    , parent = Nothing
    , duration = 1.090641697000
    , status = Fail
    , start = 2025-09-03 11:02:37.646859518 UTC
    , finish = 2025-09-03 11:02:38.737501215 UTC
    , thread_cap_info = ("ThreadId 172", 2, False)}
Fail : "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 2.121115532000
  min duration 1.553096660000
  total durat. 3.674212192000
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 40}
    , self = 112
    , parent = Nothing
    , duration = 1.553096660000
    , status = Fail
    , start = 2025-09-03 11:02:36.387033315 UTC
    , finish = 2025-09-03 11:02:37.940129975 UTC
    , thread_cap_info = ("ThreadId 151", 2, False)}
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 48}
    , self = 136
    , parent = Nothing
    , duration = 2.121115532000
    , status = Fail
    , start = 2025-09-03 11:02:38.782829572 UTC
    , finish = 2025-09-03 11:02:40.903945104 UTC
    , thread_cap_info = ("ThreadId 180", 2, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 9.957478211000
  min duration 9.957478211000
  total durat. 9.957478211000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 146
    , parent = Nothing
    , duration = 9.957478211000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:02:32.732683427 UTC
    , finish = 2025-09-03 11:02:42.690161638 UTC
    , thread_cap_info = ("ThreadId 69", 2, False)}
**************************************************
F                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                  = False}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F                  = 12} , self = 49 , parent = Nothing , duration = 0.364627405000 , status
F                  = Fail , start = 2025-09-03 11:02:32.724793815 UTC , finish = 2025-09-03
F                  11:02:33.08942122 UTC , thread_cap_info = ("ThreadId 22", 2, False)}
F                  
| F                Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F                , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F                = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F                False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F                = Size { num_rules = 15 , num_strict_rules = 15 , num_top_rules = 0 , num_weak_rules
| F                = 0 , alphabet_size = 8 , total_length = 95} , self = 47 , parent = Nothing
| F                , duration = 0.268709664000 , status = Fail , start = 2025-09-03 11:02:32.726606098
| F                UTC , finish = 2025-09-03 11:02:32.995315762 UTC , thread_cap_info = ("ThreadId
| F                54", 0, False)}
| F                
| | F              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | F              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | F              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | F              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | F              = Size { num_rules = 15 , num_strict_rules = 15 , num_top_rules = 0 , num_weak_rules
| | F              = 0 , alphabet_size = 8 , total_length = 95} , self = 51 , parent = Nothing
| | F              , duration = 0.895034509000 , status = Fail , start = 2025-09-03 11:02:32.726613093
| | F              UTC , finish = 2025-09-03 11:02:33.621647602 UTC , thread_cap_info = ("ThreadId
| | F              56", 0, False)}
| | F              
| | | E            Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | E            , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | E            = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | E            , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | E            max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | E            [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | E            string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | E            , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | E            = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| | | E            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | | E            = 12} , self = 146 , parent = Nothing , duration = 9.957478211000 , status
| | | E            = Except "AsyncCancelled" , start = 2025-09-03 11:02:32.732683427 UTC ,
| | | E            finish = 2025-09-03 11:02:42.690161638 UTC , thread_cap_info = ("ThreadId
| | | E            69", 2, False)}
| | | E            
| | | | F          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | F          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | F          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | F          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | F          = Size { num_rules = 3 , num_strict_rules = 3 , num_top_rules = 0 , num_weak_rules
| | | | F          = 0 , alphabet_size = 3 , total_length = 12} , self = 50 , parent = Nothing
| | | | F          , duration = 0.175657204000 , status = Fail , start = 2025-09-03 11:02:32.989738487
| | | | F          UTC , finish = 2025-09-03 11:02:33.165395691 UTC , thread_cap_info = ("ThreadId
| | | | F          83", 2, False)}
| | | | F          
| F | | |          
| F | | |          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F | | |          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F | | |          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F | | |          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F | | |          = Size { num_rules = 3 , num_strict_rules = 3 , num_top_rules = 0 , num_weak_rules
| F | | |          = 0 , alphabet_size = 3 , total_length = 12} , self = 63 , parent = Nothing
| F | | |          , duration = 0.680506741000 , status = Fail , start = 2025-09-03 11:02:33.001316535
| F | | |          UTC , finish = 2025-09-03 11:02:33.681823276 UTC , thread_cap_info = ("ThreadId
| F | | |          85", 0, False)}
| F | | |          
F | | | |          
  | | | F          
  | F |            
F |   |            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F |   |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F |   |            = False\n , verbose = False}" , input_size = Size { num_rules = 61 , num_strict_rules
F |   |            = 46 , num_top_rules = 46 , num_weak_rules = 15 , alphabet_size = 14 ,
F |   |            total_length = 429} , self = 87 , parent = Nothing , duration = 1.171336802000
F |   |            , status = Fail , start = 2025-09-03 11:02:33.673107585 UTC , finish =
F |   |            2025-09-03 11:02:34.844444387 UTC , thread_cap_info = ("ThreadId 98", 0,
F |   |            False)}
F |   |            
| | F |            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F |            = False\n , verbose = False}" , input_size = Size { num_rules = 61 , num_strict_rules
| | F |            = 46 , num_top_rules = 46 , num_weak_rules = 15 , alphabet_size = 14 ,
| | F |            total_length = 429} , self = 85 , parent = Nothing , duration = 0.993975969000
| | F |            , status = Fail , start = 2025-09-03 11:02:33.681568342 UTC , finish =
| | F |            2025-09-03 11:02:34.675544311 UTC , thread_cap_info = ("ThreadId 99", 0,
| | F |            False)}
| | F |            
| F | |            
| F | |            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F | |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | |            = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| F | |            = 13 , num_top_rules = 13 , num_weak_rules = 14 , alphabet_size = 9 , total_length
| F | |            = 177} , self = 81 , parent = Nothing , duration = 0.471627793000 , status
| F | |            = Fail , start = 2025-09-03 11:02:33.721341415 UTC , finish = 2025-09-03
| F | |            11:02:34.192969208 UTC , thread_cap_info = ("ThreadId 107", 0, False)}
| F | |            
| | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | F          = 13 , num_top_rules = 13 , num_weak_rules = 14 , alphabet_size = 9 , total_length
| | | | F          = 177} , self = 84 , parent = Nothing , duration = 0.823079614000 , status
| | | | F          = Fail , start = 2025-09-03 11:02:33.74197254 UTC , finish = 2025-09-03
| | | | F          11:02:34.565052154 UTC , thread_cap_info = ("ThreadId 108", 0, False)}
| | | | F          
| | | | | F        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F        = 9 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | | | | F        = 4 , total_length = 40} , self = 86 , parent = Nothing , duration = 0.899943841000
| | | | | F        , status = Fail , start = 2025-09-03 11:02:33.901359014 UTC , finish =
| | | | | F        2025-09-03 11:02:34.801302855 UTC , thread_cap_info = ("ThreadId 118",
| | | | | F        2, False)}
| | | | | F        
| | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | | F      = 3 , num_top_rules = 3 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | | | | | F      = 48} , self = 82 , parent = Nothing , duration = 0.441749396000 , status
| | | | | | F      = Fail , start = 2025-09-03 11:02:33.921354679 UTC , finish = 2025-09-03
| | | | | | F      11:02:34.363104075 UTC , thread_cap_info = ("ThreadId 120", 2, False)}
| | | | | | F      
| | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | | | F    = 3 , num_top_rules = 3 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | | | | | | F    = 48} , self = 83 , parent = Nothing , duration = 0.550677443000 , status
| | | | | | | F    = Fail , start = 2025-09-03 11:02:33.929822175 UTC , finish = 2025-09-03
| | | | | | | F    11:02:34.480499618 UTC , thread_cap_info = ("ThreadId 121", 2, False)}
| | | | | | | F    
| | | | | | | | F  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | F  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | F  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | F  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | F  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | F  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | | | | | F  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | | | | | | | F  = 4 , total_length = 40} , self = 89 , parent = Nothing , duration = 1.666719796000
| | | | | | | | F  , status = Fail , start = 2025-09-03 11:02:33.941854379 UTC , finish =
| | | | | | | | F  2025-09-03 11:02:35.608574175 UTC , thread_cap_info = ("ThreadId 122",
| | | | | | | | F  2, False)}
| | | | | | | | F  
| F | | | | | | |  
| S | | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | | | | | | |  = 27 , num_strict_rules = 13 , num_top_rules = 13 , num_weak_rules = 14
| S | | | | | | |  , alphabet_size = 9 , total_length = 177} , self = 94 , parent = Nothing
| S | | | | | | |  , duration = 2.293274845000 , status = Success , start = 2025-09-03 11:02:34.192997768
| S | | | | | | |  UTC , finish = 2025-09-03 11:02:36.486272613 UTC , thread_cap_info = ("ThreadId
| S | | | | | | |  125", 0, False)}
| S | | | | | | |  
| | | | | | F | |  
| | | | | | F | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F | |  = 10 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 7 ,
| | | | | | F | |  alphabet_size = 4 , total_length = 48} , self = 88 , parent = Nothing ,
| | | | | | F | |  duration = 1.109169040000 , status = Fail , start = 2025-09-03 11:02:34.396155522
| | | | | | F | |  UTC , finish = 2025-09-03 11:02:35.505324562 UTC , thread_cap_info = ("ThreadId
| | | | | | F | |  126", 1, False)}
| | | | | | F | |  
| | | | | | | F |  
| | | | | | | F |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | F |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | F |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | F |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | F |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | F |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | | | | F |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 7 , alphabet_size
| | | | | | | F |  = 4 , total_length = 48} , self = 113 , parent = Nothing , duration = 3.928198818000
| | | | | | | F |  , status = Fail , start = 2025-09-03 11:02:34.483955541 UTC , finish =
| | | | | | | F |  2025-09-03 11:02:38.412154359 UTC , thread_cap_info = ("ThreadId 132",
| | | | | | | F |  2, False)}
| | | | | | | F |  
| | | | F | | | |  
| | | | E | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 27
| | | | E | | | |  , num_strict_rules = 13 , num_top_rules = 13 , num_weak_rules = 14 , alphabet_size
| | | | E | | | |  = 9 , total_length = 177} , self = 101 , parent = Nothing , duration =
| | | | E | | | |  2.001585279000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | E | | | |  11:02:34.568460512 UTC , finish = 2025-09-03 11:02:36.570045791 UTC , thread_cap_info
| | | | E | | | |  = ("ThreadId 134", 0, False)}
| | | | E | | | |  
| | F | | | | | |  
| | S | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S | | | | | |  = 61 , num_strict_rules = 46 , num_top_rules = 46 , num_weak_rules = 15
| | S | | | | | |  , alphabet_size = 14 , total_length = 429} , self = 91 , parent = Nothing
| | S | | | | | |  , duration = 1.596302517000 , status = Success , start = 2025-09-03 11:02:34.675587007
| | S | | | | | |  UTC , finish = 2025-09-03 11:02:36.271889524 UTC , thread_cap_info = ("ThreadId
| | S | | | | | |  136", 0, False)}
| | S | | | | | |  
| | | | | F | | |  
| | | | | F | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | F | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | F | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | F | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | | F | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | | | | F | | |  = 4 , total_length = 40} , self = 90 , parent = Nothing , duration = 1.390814612000
| | | | | F | | |  , status = Fail , start = 2025-09-03 11:02:34.838443835 UTC , finish =
| | | | | F | | |  2025-09-03 11:02:36.229258447 UTC , thread_cap_info = ("ThreadId 137",
| | | | | F | | |  2, False)}
| | | | | F | | |  
F | | | | | | | |  
E | | | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E | | | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 61
E | | | | | | | |  , num_strict_rules = 46 , num_top_rules = 46 , num_weak_rules = 15 , alphabet_size
E | | | | | | | |  = 14 , total_length = 429} , self = 96 , parent = Nothing , duration =
E | | | | | | | |  1.654995395000 , status = Except "AsyncCancelled" , start = 2025-09-03
E | | | | | | | |  11:02:34.848255944 UTC , finish = 2025-09-03 11:02:36.503251339 UTC , thread_cap_info
E | | | | | | | |  = ("ThreadId 139", 0, False)}
E | | | | | | | |  
| | | | | | F | |  
| | | | | | F | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | | F | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | F | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | F | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | F | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | F | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | | | F | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 7 , alphabet_size
| | | | | | F | |  = 4 , total_length = 48} , self = 110 , parent = Nothing , duration = 2.095436237000
| | | | | | F | |  , status = Fail , start = 2025-09-03 11:02:35.505385086 UTC , finish =
| | | | | | F | |  2025-09-03 11:02:37.600821323 UTC , thread_cap_info = ("ThreadId 143",
| | | | | | F | |  2, False)}
| | | | | | F | |  
| | | | | | | | F  
| | | | | | | | F  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | F  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | F  = 9 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | | | | | | | F  = 4 , total_length = 40} , self = 93 , parent = Nothing , duration = 0.704771493000
| | | | | | | | F  , status = Fail , start = 2025-09-03 11:02:35.676198831 UTC , finish =
| | | | | | | | F  2025-09-03 11:02:36.380970324 UTC , thread_cap_info = ("ThreadId 145",
| | | | | | | | F  2, False)}
| | | | | | | | F  
| | | | | F | | |  
| | | | | E | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | E | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | E | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | E | | |  , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | | E | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | | | | E | | |  = 4 , total_length = 40} , self = 128 , parent = Nothing , duration = 4.324133899000
| | | | | E | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:02:36.250086057
| | | | | E | | |  UTC , finish = 2025-09-03 11:02:40.574219956 UTC , thread_cap_info = ("ThreadId
| | | | | E | | |  149", 2, False)}
| | | | | E | | |  
| | S | | | | | |  
| |   | | | | | F  
| | F | | | | |    Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
| | F | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | | | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | | | | |    = 9 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | F | | | | |    = 4 , total_length = 40} , self = 112 , parent = Nothing , duration = 1.553096660000
| | F | | | | |    , status = Fail , start = 2025-09-03 11:02:36.387033315 UTC , finish =
| | F | | | | |    2025-09-03 11:02:37.940129975 UTC , thread_cap_info = ("ThreadId 151",
| | F | | | | |    2, False)}
| | F | | | | |    
| S | | | | | |    
E   | | | | | |    
F   | | | | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F   | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F   | | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 19 , num_strict_rules
F   | | | | | |    = 4 , num_top_rules = 4 , num_weak_rules = 15 , alphabet_size = 10 , total_length
F   | | | | | |    = 123} , self = 111 , parent = Nothing , duration = 1.179140740000 , status
F   | | | | | |    = Fail , start = 2025-09-03 11:02:36.503988276 UTC , finish = 2025-09-03
F   | | | | | |    11:02:37.683129016 UTC , thread_cap_info = ("ThreadId 156", 0, False)}
F   | | | | | |    
| F | | | | | |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 19 , num_strict_rules
| F | | | | | |    = 4 , num_top_rules = 4 , num_weak_rules = 15 , alphabet_size = 10 , total_length
| F | | | | | |    = 123} , self = 114 , parent = Nothing , duration = 2.199425928000 , status
| F | | | | | |    = Fail , start = 2025-09-03 11:02:36.503990676 UTC , finish = 2025-09-03
| F | | | | | |    11:02:38.703416604 UTC , thread_cap_info = ("ThreadId 157", 0, False)}
| F | | | | | |    
| | | | E | | |    
| | | | F | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 17 , num_strict_rules
| | | | F | | |    = 3 , num_top_rules = 3 , num_weak_rules = 14 , alphabet_size = 8 , total_length
| | | | F | | |    = 116} , self = 109 , parent = Nothing , duration = 0.415008459000 , status
| | | | F | | |    = Fail , start = 2025-09-03 11:02:36.866188101 UTC , finish = 2025-09-03
| | | | F | | |    11:02:37.28119656 UTC , thread_cap_info = ("ThreadId 163", 0, False)}
| | | | F | | |    
| | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 17 , num_strict_rules
| | | | | | | | F  = 3 , num_top_rules = 3 , num_weak_rules = 14 , alphabet_size = 8 , total_length
| | | | | | | | F  = 116} , self = 108 , parent = Nothing , duration = 0.311543489000 , status
| | | | | | | | F  = Fail , start = 2025-09-03 11:02:36.904410026 UTC , finish = 2025-09-03
| | | | | | | | F  11:02:37.215953515 UTC , thread_cap_info = ("ThreadId 164", 0, False)}
| | | | | | | | F  
| | | | | | | | F  
| | | | F | | |    
| | | | F | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F | | |    = 17 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 14 ,
| | | | F | | |    alphabet_size = 8 , total_length = 116} , self = 116 , parent = Nothing
| | | | F | | |    , duration = 1.859045453000 , status = Fail , start = 2025-09-03 11:02:37.287394978
| | | | F | | |    UTC , finish = 2025-09-03 11:02:39.146440431 UTC , thread_cap_info = ("ThreadId
| | | | F | | |    168", 2, False)}
| | | | F | | |    
| | | | | | F |    
| | | | | | F |    Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F |    = 10 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 7 ,
| | | | | | F |    alphabet_size = 4 , total_length = 48} , self = 115 , parent = Nothing
| | | | | | F |    , duration = 1.090641697000 , status = Fail , start = 2025-09-03 11:02:37.646859518
| | | | | | F |    UTC , finish = 2025-09-03 11:02:38.737501215 UTC , thread_cap_info = ("ThreadId
| | | | | | F |    172", 2, False)}
| | | | | | F |    
F | | | | | | |    
S | | | | | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | | | | | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | | | | | | |    = 19 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 15 ,
S | | | | | | |    alphabet_size = 10 , total_length = 123} , self = 117 , parent = Nothing
S | | | | | | |    , duration = 1.690311318000 , status = Success , start = 2025-09-03 11:02:37.773386027
S | | | | | | |    UTC , finish = 2025-09-03 11:02:39.463697345 UTC , thread_cap_info = ("ThreadId
S | | | | | | |    174", 0, False)}
S | | | | | | |    
| | F | | | | |    
| | S | | | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = Arctic\n , method
| | S | | | | |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | S | | | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S | | | | |    , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S | | | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S | | | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | S | | | | |    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | S | | | | |    = 4 , total_length = 40} , self = 126 , parent = Nothing , duration = 2.587131536000
| | S | | | | |    , status = Success , start = 2025-09-03 11:02:37.944125038 UTC , finish
| | S | | | | |    = 2025-09-03 11:02:40.531256574 UTC , thread_cap_info = ("ThreadId 176",
| | S | | | | |    2, False)}
| | S | | | | |    
| | | | | | | F    
| F | | | | |      
|   | | | | F      
| E | | | |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E | | | |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E | | | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | | | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | | | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | | | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 19
| E | | | |        , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 15 , alphabet_size
| E | | | |        = 10 , total_length = 123} , self = 119 , parent = Nothing , duration =
| E | | | |        0.879397380000 , status = Except "AsyncCancelled" , start = 2025-09-03
| E | | | |        11:02:38.741903171 UTC , finish = 2025-09-03 11:02:39.621300551 UTC , thread_cap_info
| E | | | |        = ("ThreadId 179", 0, False)}
| E | | | |        
| | | | | | F      Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F      = 10 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 7 ,
| | | | | | F      alphabet_size = 4 , total_length = 48} , self = 136 , parent = Nothing
| | | | | | F      , duration = 2.121115532000 , status = Fail , start = 2025-09-03 11:02:38.782829572
| | | | | | F      UTC , finish = 2025-09-03 11:02:40.903945104 UTC , thread_cap_info = ("ThreadId
| | | | | | F      180", 2, False)}
| | | | | | F      
| | | | F | |      
S | | |   | |      
  E | |   | |      
F   | |   | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F   | |   | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F   | |   | |      = False\n , verbose = False}" , input_size = Size { num_rules = 19 , num_strict_rules
F   | |   | |      = 4 , num_top_rules = 4 , num_weak_rules = 15 , alphabet_size = 10 , total_length
F   | |   | |      = 123} , self = 133 , parent = Nothing , duration = 0.880352326000 , status
F   | |   | |      = Fail , start = 2025-09-03 11:02:39.73819413 UTC , finish = 2025-09-03
F   | |   | |      11:02:40.618546456 UTC , thread_cap_info = ("ThreadId 191", 0, False)}
F   | |   | |      
| F | |   | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F | |   | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | |   | |      = False\n , verbose = False}" , input_size = Size { num_rules = 19 , num_strict_rules
| F | |   | |      = 4 , num_top_rules = 4 , num_weak_rules = 15 , alphabet_size = 10 , total_length
| F | |   | |      = 123} , self = 138 , parent = Nothing , duration = 1.511691524000 , status
| F | |   | |      = Fail , start = 2025-09-03 11:02:39.750935092 UTC , finish = 2025-09-03
| F | |   | |      11:02:41.262626616 UTC , thread_cap_info = ("ThreadId 192", 0, False)}
| F | |   | |      
| | S |   | |      
| |   |   E |      
| | F |     |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F |     |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F |     |      = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | F |     |      = 1 , num_top_rules = 1 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | F |     |      = 36} , self = 135 , parent = Nothing , duration = 0.182391830000 , status
| | F |     |      = Fail , start = 2025-09-03 11:02:40.574400601 UTC , finish = 2025-09-03
| | F |     |      11:02:40.756792431 UTC , thread_cap_info = ("ThreadId 200", 2, False)}
| | F |     |      
F | | |     |      
F | | |     |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F | | |     |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | |     |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | |     |      = 8 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 7 , alphabet_size
F | | |     |      = 4 , total_length = 36} , self = 137 , parent = Nothing , duration = 0.331005028000
F | | |     |      , status = Fail , start = 2025-09-03 11:02:40.646623203 UTC , finish =
F | | |     |      2025-09-03 11:02:40.977628231 UTC , thread_cap_info = ("ThreadId 202",
F | | |     |      2, False)}
F | | |     |      
| | | | S   |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S   |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S   |      = 19 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 15 ,
| | | | S   |      alphabet_size = 10 , total_length = 123} , self = 139 , parent = Nothing
| | | | S   |      , duration = 1.955333931000 , status = Success , start = 2025-09-03 11:02:40.655718728
| | | | S   |      UTC , finish = 2025-09-03 11:02:42.611052659 UTC , thread_cap_info = ("ThreadId
| | | | S   |      204", 0, False)}
| | | | S   |      
| | F | |   |      
| |   | |   F      
F |   | |          
  F   | |          
E     | |          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E     | |          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E     | |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E     | |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E     | |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E     | |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 19
E     | |          , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 15 , alphabet_size
E     | |          = 10 , total_length = 123} , self = 141 , parent = Nothing , duration =
E     | |          1.412345128000 , status = Except "AsyncCancelled" , start = 2025-09-03
E     | |          11:02:41.262666002 UTC , finish = 2025-09-03 11:02:42.67501113 UTC , thread_cap_info
E     | |          = ("ThreadId 211", 0, False)}
E     | |          
|     | S          
E     |            
      E            
