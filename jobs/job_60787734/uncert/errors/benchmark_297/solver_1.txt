last 2352 length 10556
CNF 2352 vars 10556 clauses
last 2670 length 12136
CNF 2670 vars 12136 clauses
last 2930 length 13253
CNF 2930 vars 13253 clauses
last 3664 length 16229
CNF 3664 vars 16229 clauses
last 3308 length 14857
CNF 3308 vars 14857 clauses
last 4379 length 20264
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4668, clauses: 17246
last 4668 length 17246
CNF 4379 vars 20264 clauses
CNF 4668 vars 17246 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4668, clauses: 17246, status: Satisfied, time: 0.048119464s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5310, clauses: 20387
last 5310 length 20387
CNF 5310 vars 20387 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5310, clauses: 20387, status: Satisfied, time: 0.056651941s
last 3308 length 14857
last 2930 length 13253
CNF 3308 vars 14857 clauses
CNF 2930 vars 13253 clauses
last 3664 length 16229
last 4379 length 20264
CNF 3664 vars 16229 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4668, clauses: 17246
CNF 4379 vars 20264 clauses
last 636 length 2777
last 904 length 3925
last 4668 length 17246
last 868 length 3676
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5310, clauses: 20387
last 1152 length 5030
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 19153, clauses: 80849
CNF 636 vars 2777 clauses
CNF 904 vars 3925 clauses
CNF 868 vars 3676 clauses
CNF 4668 vars 17246 clauses
last 5310 length 20387
CNF 1152 vars 5030 clauses
last 19153 length 80849
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 19870, clauses: 83835
CNF 5310 vars 20387 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1633, clauses: 5926
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2153, clauses: 7932
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4668, clauses: 17246, status: Satisfied, time: 0.387170967s
last 19870 length 83835
CNF 19153 vars 80849 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6141, clauses: 25721
last 1633 length 5926
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7396, clauses: 30961
last 2153 length 7932
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5310, clauses: 20387, status: Satisfied, time: 0.388298222s
last 6141 length 25721
CNF 19870 vars 83835 clauses
last 7396 length 30961
CNF 1633 vars 5926 clauses
**************************************************CNF 2153 vars 7932 clauses

CNF 6141 vars 25721 clauses
CNF 7396 vars 30961 clauses
summaryMatrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2153, clauses: 7932, status: Satisfied, time: 0.141002434s

**************************************************
SRS with 2 rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 8 rules on 4 letters       DP
SRS with 24 strict rules and 8 weak rules on Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1633, clauses: 5926, status: Satisfied, time: 0.141612646s
6 letters       weights
SRS with 4 strict rules and 8 weak rules on 6 letters       EDG
2 sub-proofs
  1 SRS with 2 strict rules and 8 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 8 weak rules on 4 letters       EDG

  2 SRS with 2 strict rules and 8 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 8 weak rules on 4 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [0, 0, 0, 0] -> [1, 0, 0, 1] {- Input 0 -}
  [0, 1, 0, 1] -> [0, 0, 1, 0] {- Input 1 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]] -> [ [0, 1] , [1, 0] , [0, 0] , [0, 1] , [ 1 , 0 ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[0, 0], [0, 0], [0, 0], [0, 0], [0, 1]] -> [ [0, 1] , [1, 0] , [0, 0] , [0, 1] , [ 1 , 1 ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[1, 0], [0, 0], [0, 0], [0, 0], [0, 0]] -> [ [1, 1] , [1, 0] , [0, 0] , [0, 1] , [ 1 , 0 ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[1, 0], [0, 0], [0, 0], [0, 0], [0, 1]] -> [ [1, 1] , [1, 0] , [0, 0] , [0, 1] , [ 1 , 1 ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[0, 0], [0, 1], [1, 0], [0, 1], [1, 0]] -> [ [0, 0] , [0, 0] , [0, 1] , [1, 0] , [ 0 , 0 ] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[0, 0], [0, 1], [1, 0], [0, 1], [1, 1]] -> [ [0, 0] , [0, 0] , [0, 1] , [1, 0] , [ 0 , 1 ] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[1, 0], [0, 1], [1, 0], [0, 1], [1, 0]] -> [ [1, 0] , [0, 0] , [0, 1] , [1, 0] , [ 0 , 0 ] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[1, 0], [0, 1], [1, 0], [0, 1], [1, 1]] -> [ [1, 0] , [0, 0] , [0, 1] , [1, 0] , [ 0 , 1 ] ] {- Semlab 1 (Concon 1 (Input 1)) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]] ->= [ [0, 1] , [1, 0] , [0, 0] , [0, 1] , [ 1 , 0 ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[0, 0], [0, 0], [0, 0], [0, 0], [0, 1]] ->= [ [0, 1] , [1, 0] , [0, 0] , [0, 1] , [ 1 , 1 ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[1, 0], [0, 0], [0, 0], [0, 0], [0, 0]] ->= [ [1, 1] , [1, 0] , [0, 0] , [0, 1] , [ 1 , 0 ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[1, 0], [0, 0], [0, 0], [0, 0], [0, 1]] ->= [ [1, 1] , [1, 0] , [0, 0] , [0, 1] , [ 1 , 1 ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[0, 0], [0, 1], [1, 0], [0, 1], [1, 0]] ->= [ [0, 0] , [0, 0] , [0, 1] , [1, 0] , [ 0 , 0 ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[0, 0], [0, 1], [1, 0], [0, 1], [1, 1]] ->= [ [0, 0] , [0, 0] , [0, 1] , [1, 0] , [ 0 , 1 ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[1, 0], [0, 1], [1, 0], [0, 1], [1, 0]] ->= [ [1, 0] , [0, 0] , [0, 1] , [1, 0] , [ 0 , 0 ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[1, 0], [0, 1], [1, 0], [0, 1], [1, 1]] ->= [ [1, 0] , [0, 0] , [0, 1] , [1, 0] , [ 0 , 1 ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[1, 0]#, [0, 1], [1, 0], [0, 1], [1, 1]] |-> [ [1, 0]# , [ 0 , 1 ] ] {- DP (Top 3) (Semlab 1 (Concon 1 (Input 1))) -}
  [[1, 0]#, [0, 1], [1, 0], [0, 1], [1, 1]] |-> [ [1, 0]# , [0, 0] , [0, 1] , [1, 0] , [ 0 , 1 ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 1))) -}
  [[1, 0]#, [0, 1], [1, 0], [0, 1], [1, 1]] |-> [ [0, 0]# , [0, 1] , [1, 0] , [ 0 , 1 ] ] {- DP (Top 1) (Semlab 1 (Concon 1 (Input 1))) -}
  [[1, 0]#, [0, 1], [1, 0], [0, 1], [1, 0]] |-> [ [1, 0]# , [ 0 , 0 ] ] {- DP (Top 3) (Semlab 1 (Concon 0 (Input 1))) -}
  [[1, 0]#, [0, 1], [1, 0], [0, 1], [1, 0]] |-> [ [1, 0]# , [0, 0] , [0, 1] , [1, 0] , [ 0 , 0 ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 1))) -}
  [[1, 0]#, [0, 1], [1, 0], [0, 1], [1, 0]] |-> [ [ 0 , 0 ]# ] {- DP (Top 4) (Semlab 1 (Concon 0 (Input 1))) -}
  [[1, 0]#, [0, 1], [1, 0], [0, 1], [1, 0]] |-> [ [0, 0]# , [0, 1] , [1, 0] , [ 0 , 0 ] ] {- DP (Top 1) (Semlab 1 (Concon 0 (Input 1))) -}
  [[1, 0]#, [0, 0], [0, 0], [0, 0], [0, 1]] |-> [ [1, 0]# , [0, 0] , [0, 1] , [ 1 , 1 ] ] {- DP (Top 1) (Semlab 1 (Concon 1 (Input 0))) -}
  [[1, 0]#, [0, 0], [0, 0], [0, 0], [0, 1]] |-> [ [0, 0]# , [0, 1] , [ 1 , 1 ] ] {- DP (Top 2) (Semlab 1 (Concon 1 (Input 0))) -}
  [[1, 0]#, [0, 0], [0, 0], [0, 0], [0, 0]] |-> [ [ 1 , 0 ]# ] {- DP (Top 4) (Semlab 1 (Concon 0 (Input 0))) -}
  [[1, 0]#, [0, 0], [0, 0], [0, 0], [0, 0]] |-> [ [1, 0]# , [0, 0] , [0, 1] , [ 1 , 0 ] ] {- DP (Top 1) (Semlab 1 (Concon 0 (Input 0))) -}
  [[1, 0]#, [0, 0], [0, 0], [0, 0], [0, 0]] |-> [ [0, 0]# , [0, 1] , [ 1 , 0 ] ] {- DP (Top 2) (Semlab 1 (Concon 0 (Input 0))) -}
  [[0, 0]#, [0, 1], [1, 0], [0, 1], [1, 1]] |-> [ [1, 0]# , [ 0 , 1 ] ] {- DP (Top 3) (Semlab 0 (Concon 1 (Input 1))) -}
  [[0, 0]#, [0, 1], [1, 0], [0, 1], [1, 1]] |-> [ [0, 0]# , [0, 1] , [1, 0] , [ 0 , 1 ] ] {- DP (Top 1) (Semlab 0 (Concon 1 (Input 1))) -}
  [[0, 0]#, [0, 1], [1, 0], [0, 1], [1, 1]] |-> [ [0, 0]# , [0, 0] , [0, 1] , [1, 0] , [ 0 , 1 ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 1))) -}
  [[0, 0]#, [0, 1], [1, 0], [0, 1], [1, 0]] |-> [ [1, 0]# , [ 0 , 0 ] ] {- DP (Top 3) (Semlab 0 (Concon 0 (Input 1))) -}
  [[0, 0]#, [0, 1], [1, 0], [0, 1], [1, 0]] |-> [ [ 0 , 0 ]# ] {- DP (Top 4) (Semlab 0 (Concon 0 (Input 1))) -}
  [[0, 0]#, [0, 1], [1, 0], [0, 1], [1, 0]] |-> [ [0, 0]# , [0, 1] , [1, 0] , [ 0 , 0 ] ] {- DP (Top 1) (Semlab 0 (Concon 0 (Input 1))) -}
  [[0, 0]#, [0, 1], [1, 0], [0, 1], [1, 0]] |-> [ [0, 0]# , [0, 0] , [0, 1] , [1, 0] , [ 0 , 0 ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 1))) -}
  [[0, 0]#, [0, 0], [0, 0], [0, 0], [0, 1]] |-> [ [1, 0]# , [0, 0] , [0, 1] , [ 1 , 1 ] ] {- DP (Top 1) (Semlab 0 (Concon 1 (Input 0))) -}
  [[0, 0]#, [0, 0], [0, 0], [0, 0], [0, 1]] |-> [ [0, 0]# , [0, 1] , [ 1 , 1 ] ] {- DP (Top 2) (Semlab 0 (Concon 1 (Input 0))) -}
  [[0, 0]#, [0, 0], [0, 0], [0, 0], [0, 0]] |-> [ [ 1 , 0 ]# ] {- DP (Top 4) (Semlab 0 (Concon 0 (Input 0))) -}
  [[0, 0]#, [0, 0], [0, 0], [0, 0], [0, 0]] |-> [ [1, 0]# , [0, 0] , [0, 1] , [ 1 , 0 ] ] {- DP (Top 1) (Semlab 0 (Concon 0 (Input 0))) -}
  [[0, 0]#, [0, 0], [0, 0], [0, 0], [0, 0]] |-> [ [0, 0]# , [0, 1] , [ 1 , 0 ] ] {- DP (Top 2) (Semlab 0 (Concon 0 (Input 0))) -}
reason
  ([1, 1], 1/1)
  ([1, 0], 1/1)
  ([0, 1], 1/1)
  ([0, 0], 1/1)
  ([1, 0]#, 0/1)
  ([0, 0]#, 0/1)
   property Termination
has value Just True
for SRS
  [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]] ->= [ [0, 1] , [1, 0] , [0, 0] , [0, 1] , [ 1 , 0 ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[0, 0], [0, 0], [0, 0], [0, 0], [0, 1]] ->= [ [0, 1] , [1, 0] , [0, 0] , [0, 1] , [ 1 , 1 ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[1, 0], [0, 0], [0, 0], [0, 0], [0, 0]] ->= [ [1, 1] , [1, 0] , [0, 0] , [0, 1] , [ 1 , 0 ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[1, 0], [0, 0], [0, 0], [0, 0], [0, 1]] ->= [ [1, 1] , [1, 0] , [0, 0] , [0, 1] , [ 1 , 1 ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[0, 0], [0, 1], [1, 0], [0, 1], [1, 0]] ->= [ [0, 0] , [0, 0] , [0, 1] , [1, 0] , [ 0 , 0 ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[0, 0], [0, 1], [1, 0], [0, 1], [1, 1]] ->= [ [0, 0] , [0, 0] , [0, 1] , [1, 0] , [ 0 , 1 ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[1, 0], [0, 1], [1, 0], [0, 1], [1, 0]] ->= [ [1, 0] , [0, 0] , [0, 1] , [1, 0] , [ 0 , 0 ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[1, 0], [0, 1], [1, 0], [0, 1], [1, 1]] ->= [ [1, 0] , [0, 0] , [0, 1] , [1, 0] , [ 0 , 1 ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
  [[1, 0]#, [0, 1], [1, 0], [0, 1], [1, 1]] |-> [ [1, 0]# , [0, 0] , [0, 1] , [1, 0] , [ 0 , 1 ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 1))) -}
  [[1, 0]#, [0, 1], [1, 0], [0, 1], [1, 0]] |-> [ [1, 0]# , [0, 0] , [0, 1] , [1, 0] , [ 0 , 0 ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 1))) -}
  [[0, 0]#, [0, 1], [1, 0], [0, 1], [1, 1]] |-> [ [0, 0]# , [0, 0] , [0, 1] , [1, 0] , [ 0 , 1 ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 1))) -}
  [[0, 0]#, [0, 1], [1, 0], [0, 1], [1, 0]] |-> [ [0, 0]# , [0, 0] , [0, 1] , [1, 0] , [ 0 , 0 ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 1))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[1, 0]#, [0, 1], [1, 0], [0, 1], [1, 1]] |-> [ [1, 0]# , [0, 0] , [0, 1] , [1, 0] , [ 0 , 1 ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 1))) -}
  [[1, 0]#, [0, 1], [1, 0], [0, 1], [1, 0]] |-> [ [1, 0]# , [0, 0] , [0, 1] , [1, 0] , [ 0 , 0 ] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 1))) -}
  [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]] ->= [ [0, 1] , [1, 0] , [0, 0] , [0, 1] , [ 1 , 0 ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[0, 0], [0, 0], [0, 0], [0, 0], [0, 1]] ->= [ [0, 1] , [1, 0] , [0, 0] , [0, 1] , [ 1 , 1 ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[1, 0], [0, 0], [0, 0], [0, 0], [0, 0]] ->= [ [1, 1] , [1, 0] , [0, 0] , [0, 1] , [ 1 , 0 ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[1, 0], [0, 0], [0, 0], [0, 0], [0, 1]] ->= [ [1, 1] , [1, 0] , [0, 0] , [0, 1] , [ 1 , 1 ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[0, 0], [0, 1], [1, 0], [0, 1], [1, 0]] ->= [ [0, 0] , [0, 0] , [0, 1] , [1, 0] , [ 0 , 0 ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[0, 0], [0, 1], [1, 0], [0, 1], [1, 1]] ->= [ [0, 0] , [0, 0] , [0, 1] , [1, 0] , [ 0 , 1 ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[1, 0], [0, 1], [1, 0], [0, 1], [1, 0]] ->= [ [1, 0] , [0, 0] , [0, 1] , [1, 0] , [ 0 , 0 ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[1, 0], [0, 1], [1, 0], [0, 1], [1, 1]] ->= [ [1, 0] , [0, 0] , [0, 1] , [1, 0] , [ 0 , 1 ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
reason
  ( [1, 1]
  , Wk  / 3A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [1, 0]
  , Wk  / 0A  0A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [0, 1]
  , Wk  / 3A 3A 6A - \
        | 3A 3A 6A - |
        | 3A 3A 3A - |
        \ -  -  -  - / )
  ( [0, 0]
  , Wk  / 3A 3A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [1, 0]#
  , Wk  / 6A 9A 9A - \
        | 6A 9A 9A - |
        | 6A 9A 9A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]] ->= [ [0, 1] , [1, 0] , [0, 0] , [0, 1] , [ 1 , 0 ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[0, 0], [0, 0], [0, 0], [0, 0], [0, 1]] ->= [ [0, 1] , [1, 0] , [0, 0] , [0, 1] , [ 1 , 1 ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[1, 0], [0, 0], [0, 0], [0, 0], [0, 0]] ->= [ [1, 1] , [1, 0] , [0, 0] , [0, 1] , [ 1 , 0 ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[1, 0], [0, 0], [0, 0], [0, 0], [0, 1]] ->= [ [1, 1] , [1, 0] , [0, 0] , [0, 1] , [ 1 , 1 ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[0, 0], [0, 1], [1, 0], [0, 1], [1, 0]] ->= [ [0, 0] , [0, 0] , [0, 1] , [1, 0] , [ 0 , 0 ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[0, 0], [0, 1], [1, 0], [0, 1], [1, 1]] ->= [ [0, 0] , [0, 0] , [0, 1] , [1, 0] , [ 0 , 1 ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[1, 0], [0, 1], [1, 0], [0, 1], [1, 0]] ->= [ [1, 0] , [0, 0] , [0, 1] , [1, 0] , [ 0 , 0 ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[1, 0], [0, 1], [1, 0], [0, 1], [1, 1]] ->= [ [1, 0] , [0, 0] , [0, 1] , [1, 0] , [ 0 , 1 ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [[0, 0]#, [0, 1], [1, 0], [0, 1], [1, 1]] |-> [ [0, 0]# , [0, 0] , [0, 1] , [1, 0] , [ 0 , 1 ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 1))) -}
  [[0, 0]#, [0, 1], [1, 0], [0, 1], [1, 0]] |-> [ [0, 0]# , [0, 0] , [0, 1] , [1, 0] , [ 0 , 0 ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 1))) -}
  [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]] ->= [ [0, 1] , [1, 0] , [0, 0] , [0, 1] , [ 1 , 0 ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[0, 0], [0, 0], [0, 0], [0, 0], [0, 1]] ->= [ [0, 1] , [1, 0] , [0, 0] , [0, 1] , [ 1 , 1 ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[1, 0], [0, 0], [0, 0], [0, 0], [0, 0]] ->= [ [1, 1] , [1, 0] , [0, 0] , [0, 1] , [ 1 , 0 ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[1, 0], [0, 0], [0, 0], [0, 0], [0, 1]] ->= [ [1, 1] , [1, 0] , [0, 0] , [0, 1] , [ 1 , 1 ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[0, 0], [0, 1], [1, 0], [0, 1], [1, 0]] ->= [ [0, 0] , [0, 0] , [0, 1] , [1, 0] , [ 0 , 0 ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[0, 0], [0, 1], [1, 0], [0, 1], [1, 1]] ->= [ [0, 0] , [0, 0] , [0, 1] , [1, 0] , [ 0 , 1 ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[1, 0], [0, 1], [1, 0], [0, 1], [1, 0]] ->= [ [1, 0] , [0, 0] , [0, 1] , [1, 0] , [ 0 , 0 ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[1, 0], [0, 1], [1, 0], [0, 1], [1, 1]] ->= [ [1, 0] , [0, 0] , [0, 1] , [1, 0] , [ 0 , 1 ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
reason
  ( [1, 1]
  , Wk  / 3A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [1, 0]
  , Wk  / 0A  0A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [0, 1]
  , Wk  / 3A 3A 6A - \
        | 3A 3A 6A - |
        | 3A 3A 3A - |
        \ -  -  -  - / )
  ( [0, 0]
  , Wk  / 3A 3A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [0, 0]#
  , Wk  / 6A 9A 9A - \
        | 6A 9A 9A - |
        | 6A 9A 9A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]] ->= [ [0, 1] , [1, 0] , [0, 0] , [0, 1] , [ 1 , 0 ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[0, 0], [0, 0], [0, 0], [0, 0], [0, 1]] ->= [ [0, 1] , [1, 0] , [0, 0] , [0, 1] , [ 1 , 1 ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[1, 0], [0, 0], [0, 0], [0, 0], [0, 0]] ->= [ [1, 1] , [1, 0] , [0, 0] , [0, 1] , [ 1 , 0 ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [[1, 0], [0, 0], [0, 0], [0, 0], [0, 1]] ->= [ [1, 1] , [1, 0] , [0, 0] , [0, 1] , [ 1 , 1 ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [[0, 0], [0, 1], [1, 0], [0, 1], [1, 0]] ->= [ [0, 0] , [0, 0] , [0, 1] , [1, 0] , [ 0 , 0 ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 1))) -}
  [[0, 0], [0, 1], [1, 0], [0, 1], [1, 1]] ->= [ [0, 0] , [0, 0] , [0, 1] , [1, 0] , [ 0 , 1 ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 1))) -}
  [[1, 0], [0, 1], [1, 0], [0, 1], [1, 0]] ->= [ [1, 0] , [0, 0] , [0, 1] , [1, 0] , [ 0 , 0 ] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 1))) -}
  [[1, 0], [0, 1], [1, 0], [0, 1], [1, 1]] ->= [ [1, 0] , [0, 0] , [0, 1] , [1, 0] , [ 0 , 1 ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 1))) -}
reason
  EDG

**************************************************
skeleton: (2,2)\TileAllAll{2}(8,4)\Deepee(24/8,6)\Weight(4/8,6)\EDG[(2/8,5)\Matrix{\Arctic}{3}(0/8,4)\EDG[],(2/8,5)\Matrix{\Arctic}{3}(0/8,4)\EDG[]]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.364156990000
  min duration 0.071402692000
  total durat. 1.291633676000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.372983007000
  min duration 0.101579014000
  total durat. 1.568498850000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 0.815438954000
  min duration 0.129423875000
  total durat. 1.104854200000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 0.831696595000
  min duration 0.158042751000
  total durat. 1.181723455000
**************************************************
F              Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F              , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F              = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F              , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F              = False}" , input_size = Size { num_rules = 2 , num_strict_rules = 2 ,
F              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F              = 16} , self = 64 , parent = Nothing , duration = 0.275972150000 , status
F              = Fail , start = 2025-09-03 11:23:28.29115222 UTC , finish = 2025-09-03
F              11:23:28.56712437 UTC , thread_cap_info = ("ThreadId 22", 3, False)}
F              
| F            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F            = Size { num_rules = 8 , num_strict_rules = 8 , num_top_rules = 0 , num_weak_rules
| F            = 0 , alphabet_size = 4 , total_length = 80} , self = 47 , parent = Nothing
| F            , duration = 0.120746565000 , status = Fail , start = 2025-09-03 11:23:28.295898738
| F            UTC , finish = 2025-09-03 11:23:28.416645303 UTC , thread_cap_info = ("ThreadId
| F            53", 0, False)}
| F            
| | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F          = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | F          = 8 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | F          = 80} , self = 43 , parent = Nothing , duration = 0.101579014000 , status
| | F          = Fail , start = 2025-09-03 11:23:28.307144904 UTC , finish = 2025-09-03
| | F          11:23:28.408723918 UTC , thread_cap_info = ("ThreadId 68", 1, False)}
| | F          
| | F          
| F            
| F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F            = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| F            = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size = 5 , total_length
| F            = 100} , self = 66 , parent = Nothing , duration = 0.171381772000 , status
| F            = Fail , start = 2025-09-03 11:23:28.419117096 UTC , finish = 2025-09-03
| F            11:23:28.590498868 UTC , thread_cap_info = ("ThreadId 93", 1, False)}
| F            
| | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F          = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | F          = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size = 6 , total_length
| | F          = 120} , self = 65 , parent = Nothing , duration = 0.148669344000 , status
| | F          = Fail , start = 2025-09-03 11:23:28.420600151 UTC , finish = 2025-09-03
| | F          11:23:28.569269495 UTC , thread_cap_info = ("ThreadId 96", 0, False)}
| | F          
| | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | F        = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size = 5 , total_length
| | | F        = 100} , self = 62 , parent = Nothing , duration = 0.103498536000 , status
| | | F        = Fail , start = 2025-09-03 11:23:28.427478427 UTC , finish = 2025-09-03
| | | F        11:23:28.530976963 UTC , thread_cap_info = ("ThreadId 92", 1, False)}
| | | F        
| | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | F      = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size = 6 , total_length
| | | | F      = 120} , self = 67 , parent = Nothing , duration = 0.205148970000 , status
| | | | F      = Fail , start = 2025-09-03 11:23:28.427478446 UTC , finish = 2025-09-03
| | | | F      11:23:28.632627416 UTC , thread_cap_info = ("ThreadId 97", 0, False)}
| | | | F      
| | | | | F    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | F    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | F    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | F    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | F    = Size { num_rules = 2 , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules
| | | | | F    = 0 , alphabet_size = 2 , total_length = 16} , self = 75 , parent = Nothing
| | | | | F    , duration = 0.240827896000 , status = Fail , start = 2025-09-03 11:23:28.507146773
| | | | | F    UTC , finish = 2025-09-03 11:23:28.747974669 UTC , thread_cap_info = ("ThreadId
| | | | | F    99", 3, False)}
| | | | | F    
| | | F | |    
| | | F | |    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | F | |    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | F | |    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | F | |    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | F | |    = Size { num_rules = 2 , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules
| | | F | |    = 0 , alphabet_size = 2 , total_length = 16} , self = 83 , parent = Nothing
| | | F | |    , duration = 0.298173143000 , status = Fail , start = 2025-09-03 11:23:28.530988304
| | | F | |    UTC , finish = 2025-09-03 11:23:28.829161447 UTC , thread_cap_info = ("ThreadId
| | | F | |    101", 3, False)}
| | | F | |    
| | | | | | S  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | S  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | S  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | S  = 10 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 ,
| | | | | | S  alphabet_size = 5 , total_length = 100} , self = 68 , parent = Nothing
| | | | | | S  , duration = 0.158042751000 , status = Success , start = 2025-09-03 11:23:28.531022935
| | | | | | S  UTC , finish = 2025-09-03 11:23:28.689065686 UTC , thread_cap_info = ("ThreadId
| | | | | | S  104", 1, False)}
| | | | | | S  
F | | | | | |  
  | F | | | |  
S |   | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S |   | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S |   | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S |   | | | |  = 12 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 ,
S |   | | | |  alphabet_size = 6 , total_length = 120} , self = 76 , parent = Nothing
S |   | | | |  , duration = 0.191984109000 , status = Success , start = 2025-09-03 11:23:28.579761625
S |   | | | |  UTC , finish = 2025-09-03 11:23:28.771745734 UTC , thread_cap_info = ("ThreadId
S |   | | | |  107", 0, False)}
S |   | | | |  
| F   | | | |  
| E   | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E   | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E   | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E   | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E   | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E   | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| E   | | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size
| E   | | | |  = 5 , total_length = 100} , self = 70 , parent = Nothing , duration = 0.129423875000
| E   | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:23:28.598374837
| E   | | | |  UTC , finish = 2025-09-03 11:23:28.727798712 UTC , thread_cap_info = ("ThreadId
| E   | | | |  109", 1, False)}
| E   | | | |  
| |   | F | |  
| | E |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E |   | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | E |   | |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size
| | E |   | |  = 6 , total_length = 120} , self = 78 , parent = Nothing , duration = 0.159991371000
| | E |   | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:23:28.647172036
| | E |   | |  UTC , finish = 2025-09-03 11:23:28.807163407 UTC , thread_cap_info = ("ThreadId
| | E |   | |  111", 0, False)}
| | E |   | |  
| | | |   | S  
| E | |   |    
| F | |   |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F | |   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | |   |    = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| F | |   |    = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size = 5 , total_length
| F | |   |    = 100} , self = 84 , parent = Nothing , duration = 0.107139832000 , status
| F | |   |    = Fail , start = 2025-09-03 11:23:28.728257922 UTC , finish = 2025-09-03
| F | |   |    11:23:28.835397754 UTC , thread_cap_info = ("ThreadId 118", 1, False)}
| F | |   |    
| | | | F |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F |    = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | F |    = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size = 5 , total_length
| | | | F |    = 100} , self = 85 , parent = Nothing , duration = 0.125504189000 , status
| | | | F |    = Fail , start = 2025-09-03 11:23:28.747876607 UTC , finish = 2025-09-03
| | | | F |    11:23:28.873380796 UTC , thread_cap_info = ("ThreadId 117", 1, False)}
| | | | F |    
| | | | | F    
S | | | |      
  | E | |      
F |   | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F |   | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F |   | |      = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
F |   | |      = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size = 6 , total_length
F |   | |      = 120} , self = 100 , parent = Nothing , duration = 0.241736015000 , status
F |   | |      = Fail , start = 2025-09-03 11:23:28.807704317 UTC , finish = 2025-09-03
F |   | |      11:23:29.049440332 UTC , thread_cap_info = ("ThreadId 124", 0, False)}
F |   | |      
| | F | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | |      = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | F | |      = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size = 6 , total_length
| | F | |      = 120} , self = 97 , parent = Nothing , duration = 0.153650626000 , status
| | F | |      = Fail , start = 2025-09-03 11:23:28.827143472 UTC , finish = 2025-09-03
| | F | |      11:23:28.980794098 UTC , thread_cap_info = ("ThreadId 123", 0, False)}
| | F | |      
| | | F |      
| F |   |      
| S |   |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S |   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S |   |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S |   |      = 10 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 ,
| S |   |      alphabet_size = 5 , total_length = 100} , self = 105 , parent = Nothing
| S |   |      , duration = 0.831696595000 , status = Success , start = 2025-09-03 11:23:28.835428055
| S |   |      UTC , finish = 2025-09-03 11:23:29.66712465 UTC , thread_cap_info = ("ThreadId
| S |   |      127", 1, False)}
| S |   |      
| | |   F      
| | | E        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | E        , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size
| | | E        = 5 , total_length = 100} , self = 107 , parent = Nothing , duration =
| | | E        0.815438954000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | E        11:23:28.887168832 UTC , finish = 2025-09-03 11:23:29.702607786 UTC , thread_cap_info
| | | E        = ("ThreadId 130", 1, False)}
| | | E        
| | F |        
| | F |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F |        = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | F |        = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size = 3 , total_length
| | F |        = 24} , self = 101 , parent = Nothing , duration = 0.364156990000 , status
| | F |        = Fail , start = 2025-09-03 11:23:28.98723332 UTC , finish = 2025-09-03
| | F |        11:23:29.35139031 UTC , thread_cap_info = ("ThreadId 142", 3, False)}
| | F |        
| | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | | F      = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size = 3 , total_length
| | | | F      = 24} , self = 103 , parent = Nothing , duration = 0.372983007000 , status
| | | | F      = Fail , start = 2025-09-03 11:23:28.995249644 UTC , finish = 2025-09-03
| | | | F      11:23:29.368232651 UTC , thread_cap_info = ("ThreadId 143", 3, False)}
| | | | F      
| | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | F    = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | | | F    = 32} , self = 102 , parent = Nothing , duration = 0.324751299000 , status
| | | | | F    = Fail , start = 2025-09-03 11:23:29.027482318 UTC , finish = 2025-09-03
| | | | | F    11:23:29.352233617 UTC , thread_cap_info = ("ThreadId 146", 3, False)}
| | | | | F    
| | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | F  = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | | | | F  = 32} , self = 104 , parent = Nothing , duration = 0.368530240000 , status
| | | | | | F  = Fail , start = 2025-09-03 11:23:29.038834797 UTC , finish = 2025-09-03
| | | | | | F  11:23:29.407365037 UTC , thread_cap_info = ("ThreadId 147", 3, False)}
| | | | | | F  
F | | | | | |  
  | F | | | |  
  |   | | F |  
  |   | F   |  
  |   |     F  
  S   |        
      E        
