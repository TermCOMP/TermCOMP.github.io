last 1994 length 8087
CNF 1994 vars 8087 clauses
last 2706 length 11885
CNF 2706 vars 11885 clauses
last 657 length 2703
last 779 length 3221
CNF 657 vars 2703 clauses
last 553 length 2157
last 703 length 2761
CNF 703 vars 2761 clauses
CNF 779 vars 3221 clauses
CNF 553 vars 2157 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1792, clauses: 6574
last 1792 length 6574
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2187, clauses: 8054
last 4088 length 18030
last 3246 length 13332
CNF 1792 vars 6574 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6604, clauses: 27513
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5939, clauses: 24777
last 3472 length 14557
last 3855 length 16932
last 2187 length 8054
CNF 4088 vars 18030 clauses
CNF 3246 vars 13332 clauses
last 6604 length 27513
last 5939 length 24777
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1792, clauses: 6574, status: Satisfied, time: 0.161149841s
CNF 3855 vars 16932 clauses
CNF 3472 vars 14557 clauses
CNF 2187 vars 8054 clauses
CNF 6604 vars 27513 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6368, clauses: 24162
last 477 length 1883
last 509 length 2081
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2187, clauses: 8054, status: Satisfied, time: 0.20465282s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5408, clauses: 20820
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 22762, clauses: 96033
last 6368 length 24162
CNF 509 vars 2081 clauses
CNF 477 vars 1883 clauses
last 5408 length 20820
last 22762 length 96033
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1567, clauses: 5638
CNF 5408 vars 20820 clauses
CNF 6368 vars 24162 clauses
CNF 22762 vars 96033 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20873, clauses: 88089
**************************************************last 1567 length 5638
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5599, clauses: 23347

last 20873 length 88089
last 5599 length 23347
summary
CNF 1567 vars 5638 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1567, clauses: 5638, status: Satisfied, time: 0.026406308s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5408, clauses: 20820, status: Satisfied, time: 0.128561515s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6368, clauses: 24162, status: Satisfied, time: 0.174903834s
**************************************************
SRS with 3 rules on 2 letters       DP
SRS with 4 strict rules and 3 weak rules on 4 letters       weights
SRS with 3 strict rules and 3 weak rules on 4 letters       EDG
SRS with 3 strict rules and 3 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 3 weak rules on 4 letters       weights
SRS with 0 strict rules and 3 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a, a] -> [b, b, a] {- Input 0 -}
  [a, b, a] -> [b, b, a] {- Input 1 -}
  [b, a, b] -> [a, a, b] {- Input 2 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a, a] ->= [b, b, a] {- DP Nontop (Input 0) -}
  [a, b, a] ->= [b, b, a] {- DP Nontop (Input 1) -}
  [b, a, b] ->= [a, a, b] {- DP Nontop (Input 2) -}
  [a#, a, a] |-> [b#, a] {- DP (Top 1) (Input 0) -}
  [a#, a, a] |-> [b#, b, a] {- DP (Top 0) (Input 0) -}
  [a#, b, a] |-> [b#, b, a] {- DP (Top 0) (Input 1) -}
  [b#, a, b] |-> [a#, a, b] {- DP (Top 0) (Input 2) -}
reason
  (a, 1/1)
  (b, 1/1)
  (a#, 0/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [a, a, a] ->= [b, b, a] {- DP Nontop (Input 0) -}
  [a, b, a] ->= [b, b, a] {- DP Nontop (Input 1) -}
  [b, a, b] ->= [a, a, b] {- DP Nontop (Input 2) -}
  [a#, a, a] |-> [b#, b, a] {- DP (Top 0) (Input 0) -}
  [a#, b, a] |-> [b#, b, a] {- DP (Top 0) (Input 1) -}
  [b#, a, b] |-> [a#, a, b] {- DP (Top 0) (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a, a] |-> [b#, b, a] {- DP (Top 0) (Input 0) -}
  [b#, a, b] |-> [a#, a, b] {- DP (Top 0) (Input 2) -}
  [a#, b, a] |-> [b#, b, a] {- DP (Top 0) (Input 1) -}
  [a, a, a] ->= [b, b, a] {- DP Nontop (Input 0) -}
  [a, b, a] ->= [b, b, a] {- DP Nontop (Input 1) -}
  [b, a, b] ->= [a, a, b] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / 3A 6A 6A - \
        | 3A 3A 3A - |
        | 3A 3A 3A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 3A 3A 6A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 1A 1A 1A - \
        | 1A 1A 1A - |
        | 1A 1A 1A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 1A 1A 3A - \
        | 1A 1A 3A - |
        | 1A 1A 3A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [a#, a, a] |-> [b#, b, a] {- DP (Top 0) (Input 0) -}
  [a#, b, a] |-> [b#, b, a] {- DP (Top 0) (Input 1) -}
  [a, a, a] ->= [b, b, a] {- DP Nontop (Input 0) -}
  [a, b, a] ->= [b, b, a] {- DP Nontop (Input 1) -}
  [b, a, b] ->= [a, a, b] {- DP Nontop (Input 2) -}
reason
  (a, 0/1)
  (b, 0/1)
  (a#, 1/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [a, a, a] ->= [b, b, a] {- DP Nontop (Input 0) -}
  [a, b, a] ->= [b, b, a] {- DP Nontop (Input 1) -}
  [b, a, b] ->= [a, a, b] {- DP Nontop (Input 2) -}
reason
  EDG

**************************************************
skeleton: (3,2)\Deepee(4/3,4)\Weight\EDG(3/3,4)\Matrix{\Arctic}{3}(2/3,4)\Weight(0/3,2)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,CNF 5599 vars 23347 clauses
shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.337888517000
  min duration 0.029317231000
  total durat. 1.038198544000
**************************************************
F                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                , closure = Forward\n , start_strict_only = True\n , max_closure_length
F                = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F                = 18} , self = 49 , parent = Nothing , duration = 0.129476560000 , status
F                = Fail , start = 2025-09-03 10:45:17.542863312 UTC , finish = 2025-09-03
F                10:45:17.672339872 UTC , thread_cap_info = ("ThreadId 56", 3, False)}
F                
| F              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F              = Size { num_rules = 12 , num_strict_rules = 12 , num_top_rules = 0 , num_weak_rules
| F              = 0 , alphabet_size = 4 , total_length = 96} , self = 65 , parent = Nothing
| F              , duration = 0.205907892000 , status = Fail , start = 2025-09-03 10:45:17.581766363
| F              UTC , finish = 2025-09-03 10:45:17.787674255 UTC , thread_cap_info = ("ThreadId
| F              74", 1, False)}
| F              
| | F            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | F            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | F            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | F            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | F            = Size { num_rules = 3 , num_strict_rules = 3 , num_top_rules = 0 , num_weak_rules
| | F            = 0 , alphabet_size = 2 , total_length = 18} , self = 51 , parent = Nothing
| | F            , duration = 0.157511728000 , status = Fail , start = 2025-09-03 10:45:17.622126871
| | F            UTC , finish = 2025-09-03 10:45:17.779638599 UTC , thread_cap_info = ("ThreadId
| | F            82", 3, False)}
| | F            
| | | F          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | F          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | F          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | F          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | F          = Size { num_rules = 3 , num_strict_rules = 3 , num_top_rules = 0 , num_weak_rules
| | | F          = 0 , alphabet_size = 2 , total_length = 18} , self = 50 , parent = Nothing
| | | F          , duration = 0.152337537000 , status = Fail , start = 2025-09-03 10:45:17.622132905
| | | F          UTC , finish = 2025-09-03 10:45:17.774470442 UTC , thread_cap_info = ("ThreadId
| | | F          84", 3, False)}
| | | F          
F | | |          
  | | F          
  | F            
  F              
F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
F                = 6 , num_top_rules = 6 , num_weak_rules = 12 , alphabet_size = 6 , total_length
F                = 144} , self = 83 , parent = Nothing , duration = 0.261419098000 , status
F                = Fail , start = 2025-09-03 10:45:17.794617623 UTC , finish = 2025-09-03
F                10:45:18.056036721 UTC , thread_cap_info = ("ThreadId 116", 0, False)}
F                
| F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F              = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| F              = 6 , num_top_rules = 6 , num_weak_rules = 12 , alphabet_size = 6 , total_length
| F              = 144} , self = 84 , parent = Nothing , duration = 0.259347997000 , status
| F              = Fail , start = 2025-09-03 10:45:17.801726458 UTC , finish = 2025-09-03
| F              10:45:18.061074455 UTC , thread_cap_info = ("ThreadId 117", 0, False)}
| F              
| | S            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S            = 5 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| | S            = 3 , total_length = 30} , self = 85 , parent = Nothing , duration = 0.294058596000
| | S            , status = Success , start = 2025-09-03 10:45:17.808161068 UTC , finish
| | S            = 2025-09-03 10:45:18.102219664 UTC , thread_cap_info = ("ThreadId 120",
| | S            3, False)}
| | S            
| | | S          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S          = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | S          = 4 , total_length = 36} , self = 94 , parent = Nothing , duration = 0.617985538000
| | | S          , status = Success , start = 2025-09-03 10:45:17.82505115 UTC , finish
| | | S          = 2025-09-03 10:45:18.443036688 UTC , thread_cap_info = ("ThreadId 121",
| | | S          3, False)}
| | | S          
| | | | E        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | E        , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | | E        = 4 , total_length = 36} , self = 97 , parent = Nothing , duration = 0.622040267000
| | | | E        , status = Except "AsyncCancelled" , start = 2025-09-03 10:45:17.842372029
| | | | E        UTC , finish = 2025-09-03 10:45:18.464412296 UTC , thread_cap_info = ("ThreadId
| | | | E        122", 3, False)}
| | | | E        
| | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | | F      = 4 , num_top_rules = 4 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | | | | F      = 128} , self = 92 , parent = Nothing , duration = 0.249525212000 , status
| | | | | F      = Fail , start = 2025-09-03 10:45:17.896718585 UTC , finish = 2025-09-03
| | | | | F      10:45:18.146243797 UTC , thread_cap_info = ("ThreadId 125", 0, False)}
| | | | | F      
| | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | | | F    = 4 , num_top_rules = 4 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | | | | | F    = 128} , self = 93 , parent = Nothing , duration = 0.284490554000 , status
| | | | | | F    = Fail , start = 2025-09-03 10:45:17.901726522 UTC , finish = 2025-09-03
| | | | | | F    10:45:18.186217076 UTC , thread_cap_info = ("ThreadId 126", 0, False)}
| | | | | | F    
| | | | | | | E  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | | | | E  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| | | | | | | E  = 3 , total_length = 30} , self = 87 , parent = Nothing , duration = 0.225984207000
| | | | | | | E  , status = Except "AsyncCancelled" , start = 2025-09-03 10:45:17.901726736
| | | | | | | E  UTC , finish = 2025-09-03 10:45:18.127710943 UTC , thread_cap_info = ("ThreadId
| | | | | | | E  124", 3, False)}
| | | | | | | E  
F | | | | | | |  
  F | | | | | |  
    S | | | | |  
      | | | | E  
F     | | | |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F     | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F     | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
F     | | | |    = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size = 3 , total_length
F     | | | |    = 24} , self = 98 , parent = Nothing , duration = 0.337888517000 , status
F     | | | |    = Fail , start = 2025-09-03 10:45:18.129435678 UTC , finish = 2025-09-03
F     | | | |    10:45:18.467324195 UTC , thread_cap_info = ("ThreadId 142", 3, False)}
F     | | | |    
| F   | | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F   | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F   | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| F   | | | |    = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size = 3 , total_length
| F   | | | |    = 24} , self = 96 , parent = Nothing , duration = 0.314180935000 , status
| F   | | | |    = Fail , start = 2025-09-03 10:45:18.133008839 UTC , finish = 2025-09-03
| F   | | | |    10:45:18.447189774 UTC , thread_cap_info = ("ThreadId 141", 3, False)}
| F   | | | |    
| |   | | F |    
| |   | |   F    
| |   S |        
| F     |        
|       E        
F                
