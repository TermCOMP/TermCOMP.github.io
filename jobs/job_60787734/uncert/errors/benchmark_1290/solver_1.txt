last 1139 length 4835
last 965 length 4108
last 632 length 2612
CNF 1139 vars 4835 clauses
last 662 length 2754
CNF 965 vars 4108 clauses
CNF 632 vars 2612 clauses
CNF 662 vars 2754 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2376, clauses: 8894
last 2376 length 8894
CNF 2376 vars 8894 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6430, clauses: 26582
last 6430 length 26582
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1631, clauses: 5868
CNF 6430 vars 26582 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2376, clauses: 8894, status: Unsatisfied, time: 0.089611104s
last 1631 length 5868
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5086, clauses: 20997
last 5086 length 20997
CNF 1631 vars 5868 clauses
CNF 5086 vars 20997 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1631, clauses: 5868, status: Unsatisfied, time: 0.144703873s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4006, clauses: 16268
last 4006 length 16268
CNF 4006 vars 16268 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3085, clauses: 12488
last 5476 length 35138
last 5345 length 27237
last 3085 length 12488
CNF 3085 vars 12488 clauses
CNF 5345 vars 27237 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5086, clauses: 20997, status: Unsatisfied, time: 0.368472053s
CNF 5476 vars 35138 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2692, clauses: 10171
last 2692 length 10171
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3085, clauses: 12488, status: Unsatisfied, time: 0.142955361s
CNF 2692 vars 10171 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4006, clauses: 16268, status: Unsatisfied, time: 0.345745822s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2692, clauses: 10171, status: Unsatisfied, time: 0.195879915s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8680, clauses: 36767
last 8680 length 36767
CNF 8680 vars 36767 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6430, clauses: 26582, status: Unsatisfied, time: 0.758462571s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3911, clauses: 15550
last 3911 length 15550
CNF 3911 vars 15550 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5008, clauses: 18786
last 5008 length 18786
CNF 5008 vars 18786 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3911, clauses: 15550, status: Unsatisfied, time: 0.363390233s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10747, clauses: 45743
last 10747 length 45743
CNF 10747 vars 45743 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7237, clauses: 28363
last 7237 length 28363
CNF 7237 vars 28363 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5008, clauses: 18786, status: Unsatisfied, time: 1.034697687s
last 13434 length 66140
CNF 13434 vars 66140 clauses
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10804, clauses: 50051
last 10804 length 50051
CNF 10804 vars 50051 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7237, clauses: 28363, status: Unsatisfied, time: 1.866796206s
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13023, clauses: 60391
last 13023 length 60391
CNF 13023 vars 60391 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16097, clauses: 65952
last 16097 length 65952
CNF 16097 vars 65952 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 19004, clauses: 80145
last 19004 length 80145
CNF 19004 vars 80145 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 41017, clauses: 171437
last 41017 length 171437
CNF 41017 vars 171437 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 45213, clauses: 189101
last 45213 length 189101
CNF 45213 vars 189101 clauses
[Info] <<timeout>> @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
[Info] pool sizes (success) 280149 seen 141125 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
**************************************************
summary
**************************************************
SRS with 2 rules on 3 letters       looping derivation
from
  [b, b, b, b, b, b, b, b, b, b, b, b, c]
to
  [c, c, b, c, c, b, b, c, c, b, c, c, b, b, b, b, b, b, b, b, b, b, b, b, c, b, b, b, b]
via 40 steps

**************************************************
proof
**************************************************
property Termination
has value Just False
for SRS
  [a] -> [b] {- Input 0 -}
  [b, b, b, c] -> [c, c, a, a, a, a] {- Input 1 -}
reason
  Nontermination
    Derive   { from = [b, b, b, b, b, b, b, b, b, b, b, b, c], via = [(Step   { rule = 1, position = 9}, [b, b, b, b, b, b, b, b, b, c, c, a, a, a, a]), (Step   { rule = 0, position = 14}, [b, b, b, b, b, b, b, b, b, c, c, a, a, a, b]), (Step   { rule = 0, position = 13}, [b, b, b, b, b, b, b, b, b, c, c, a, a, b, b]), (Step   { rule = 0, position = 12}, [b, b, b, b, b, b, b, b, b, c, c, a, b, b, b]), (Step   { rule = 0, position = 11}, [b, b, b, b, b, b, b, b, b, c, c, b, b, b, b]), (Step   { rule = 1, position = 6}, [b, b, b, b, b, b, c, c, a, a, a, a, c, b, b, b, b]), (Step   { rule = 0, position = 11}, [b, b, b, b, b, b, c, c, a, a, a, b, c, b, b, b, b]), (Step   { rule = 0, position = 10}, [b, b, b, b, b, b, c, c, a, a, b, b, c, b, b, b, b]), (Step   { rule = 0, position = 9}, [b, b, b, b, b, b, c, c, a, b, b, b, c, b, b, b, b]), (Step   { rule = 0, position = 8}, [b, b, b, b, b, b, c, c, b, b, b, b, c, b, b, b, b]), (Step   { rule = 1, position = 3}, [b, b, b, c, c, a, a, a, a, c, b, b, b, b, c, b, b, b, b]), (Step   { rule = 0, position = 8}, [b, b, b, c, c, a, a, a, b, c, b, b, b, b, c, b, b, b, b]), (Step   { rule = 0, position = 7}, [b, b, b, c, c, a, a, b, b, c, b, b, b, b, c, b, b, b, b]), (Step   { rule = 0, position = 6}, [b, b, b, c, c, a, b, b, b, c, b, b, b, b, c, b, b, b, b]), (Step   { rule = 0, position = 5}, [b, b, b, c, c, b, b, b, b, c, b, b, b, b, c, b, b, b, b]), (Step   { rule = 1, position = 6}, [b, b, b, c, c, b, c, c, a, a, a, a, b, b, b, b, c, b, b, b, b]), (Step   { rule = 0, position = 11}, [b, b, b, c, c, b, c, c, a, a, a, b, b, b, b, b, c, b, b, b, b]), (Step   { rule = 0, position = 10}, [b, b, b, c, c, b, c, c, a, a, b, b, b, b, b, b, c, b, b, b, b]), (Step   { rule = 0, position = 9}, [b, b, b, c, c, b, c, c, a, b, b, b, b, b, b, b, c, b, b, b, b]), (Step   { rule = 0, position = 8}, [b, b, b, c, c, b, c, c, b, b, b, b, b, b, b, b, c, b, b, b, b]), (Step   { rule = 1, position = 0}, [c, c, a, a, a, a, c, b, c, c, b, b, b, b, b, b, b, b, c, b, b, b, b]), (Step   { rule = 0, position = 5}, [c, c, a, a, a, b, c, b, c, c, b, b, b, b, b, b, b, b, c, b, b, b, b]), (Step   { rule = 0, position = 4}, [c, c, a, a, b, b, c, b, c, c, b, b, b, b, b, b, b, b, c, b, b, b, b]), (Step   { rule = 0, position = 3}, [c, c, a, b, b, b, c, b, c, c, b, b, b, b, b, b, b, b, c, b, b, b, b]), (Step   { rule = 0, position = 2}, [c, c, b, b, b, b, c, b, c, c, b, b, b, b, b, b, b, b, c, b, b, b, b]), (Step   { rule = 1, position = 3}, [c, c, b, c, c, a, a, a, a, b, c, c, b, b, b, b, b, b, b, b, c, b, b, b, b]), (Step   { rule = 0, position = 8}, [c, c, b, c, c, a, a, a, b, b, c, c, b, b, b, b, b, b, b, b, c, b, b, b, b]), (Step   { rule = 0, position = 7}, [c, c, b, c, c, a, a, b, b, b, c, c, b, b, b, b, b, b, b, b, c, b, b, b, b]), (Step   { rule = 0, position = 6}, [c, c, b, c, c, a, b, b, b, b, c, c, b, b, b, b, b, b, b, b, c, b, b, b, b]), (Step   { rule = 0, position = 5}, [c, c, b, c, c, b, b, b, b, b, c, c, b, b, b, b, b, b, b, b, c, b, b, b, b]), (Step   { rule = 1, position = 7}, [c, c, b, c, c, b, b, c, c, a, a, a, a, c, b, b, b, b, b, b, b, b, c, b, b, b, b]), (Step   { rule = 0, position = 12}, [c, c, b, c, c, b, b, c, c, a, a, a, b, c, b, b, b, b, b, b, b, b, c, b, b, b, b]), (Step   { rule = 0, position = 11}, [c, c, b, c, c, b, b, c, c, a, a, b, b, c, b, b, b, b, b, b, b, b, c, b, b, b, b]), (Step   { rule = 0, position = 10}, [c, c, b, c, c, b, b, c, c, a, b, b, b, c, b, b, b, b, b, b, b, b, c, b, b, b, b]), (Step   { rule = 0, position = 9}, [c, c, b, c, c, b, b, c, c, b, b, b, b, c, b, b, b, b, b, b, b, b, c, b, b, b, b]), (Step   { rule = 1, position = 10}, [c, c, b, c, c, b, b, c, c, b, c, c, a, a, a, a, b, b, b, b, b, b, b, b, c, b, b, b, b]), (Step   { rule = 0, position = 15}, [c, c, b, c, c, b, b, c, c, b, c, c, a, a, a, b, b, b, b, b, b, b, b, b, c, b, b, b, b]), (Step   { rule = 0, position = 14}, [c, c, b, c, c, b, b, c, c, b, c, c, a, a, b, b, b, b, b, b, b, b, b, b, c, b, b, b, b]), (Step   { rule = 0, position = 13}, [c, c, b, c, c, b, b, c, c, b, c, c, a, b, b, b, b, b, b, b, b, b, b, b, c, b, b, b, b]), (Step   { rule = 0, position = 12}, [c, c, b, c, c, b, b, c, c, b, c, c, b, b, b, b, b, b, b, b, b, b, b, b, c, b, b, b, b])], to = [c, c, b, c, c, b, b, c, c, b, c, c, b, b, b, b, b, b, b, b, b, b, b, b, c, b, b, b, b]}

**************************************************
skeleton: (2,3)\Loop{40}[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 2, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9478, clauses: 45034
last 9478 length 45034
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.070003874000
  min duration 3.053021279000
  total durat. 6.123025153000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 84
      , num_strict_rules = 66
      , num_top_rules = 66
      , num_weak_rules = 18
      , alphabet_size = 15
      , total_length = 711}
    , self = 95
    , parent = Nothing
    , duration = 3.053021279000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 11:28:31.644980736 UTC
    , finish = 2025-09-03 11:28:34.698002015 UTC
    , thread_cap_info = ("ThreadId 140", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 69
      , num_strict_rules = 51
      , num_top_rules = 51
      , num_weak_rules = 18
      , alphabet_size = 15
      , total_length = 507}
    , self = 94
    , parent = Nothing
    , duration = 3.070003874000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 11:28:31.483209751 UTC
    , finish = 2025-09-03 11:28:34.553213625 UTC
    , thread_cap_info = ("ThreadId 133", 2, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 2.009462836000
  min duration 0.030777193000
  total durat. 2.707385569000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 69
      , num_strict_rules = 51
      , num_top_rules = 51
      , num_weak_rules = 18
      , alphabet_size = 15
      , total_length = 507}
    , self = 92
    , parent = Nothing
    , duration = 2.009462836000
    , status = Fail
    , start = 2025-09-03 11:28:31.505508133 UTC
    , finish = 2025-09-03 11:28:33.514970969 UTC
    , thread_cap_info = ("ThreadId 134", 2, False)}
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.054644875000
  min duration 3.054644875000
  total durat. 3.054644875000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 84
      , num_strict_rules = 66
      , num_top_rules = 66
      , num_weak_rules = 18
      , alphabet_size = 15
      , total_length = 711}
    , self = 96
    , parent = Nothing
    , duration = 3.054644875000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 11:28:31.663833256 UTC
    , finish = 2025-09-03 11:28:34.718478131 UTC
    , thread_cap_info = ("ThreadId 141", 2, False)}
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 4
  max duration 0.855964177000
  min duration 0.039177818000
  total durat. 1.340481760000
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.876625857000
  min duration 0.439088530000
  total durat. 1.315714387000
Except "<<timeout>>" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 9.081077611000
  min duration 9.081077611000
  total durat. 9.081077611000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 69
      , num_strict_rules = 51
      , num_top_rules = 51
      , num_weak_rules = 18
      , alphabet_size = 15
      , total_length = 507}
    , self = 100
    , parent = Nothing
    , duration = 9.081077611000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 11:28:34.645793015 UTC
    , finish = 2025-09-03 11:28:43.726870626 UTC
    , thread_cap_info = ("ThreadId 153", 2, False)}
Except "<<timeout>>" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 12.060085885000
  min duration 12.043923267000
  total durat. 24.104009152000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 23}
    , self = 98
    , parent = Nothing
    , duration = 12.043923267000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 11:28:31.302944736 UTC
    , finish = 2025-09-03 11:28:43.346868003 UTC
    , thread_cap_info = ("ThreadId 121", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 2
      , alphabet_size = 5
      , total_length = 40}
    , self = 99
    , parent = Nothing
    , duration = 12.060085885000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 11:28:31.544319513 UTC
    , finish = 2025-09-03 11:28:43.604405398 UTC
    , thread_cap_info = ("ThreadId 137", 3, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 9.201402441000
  min duration 0.198348435000
  total durat. 9.672129666000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 69
      , num_strict_rules = 51
      , num_top_rules = 51
      , num_weak_rules = 18
      , alphabet_size = 15
      , total_length = 507}
    , self = 97
    , parent = Nothing
    , duration = 9.201402441000
    , status = Fail
    , start = 2025-09-03 11:28:33.61499655 UTC
    , finish = 2025-09-03 11:28:42.816398991 UTC
    , thread_cap_info = ("ThreadId 149", 2, False)}
Fail : "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 2.506852998000
  min duration 1.192067204000
  total durat. 3.698920202000
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 23}
    , self = 91
    , parent = Nothing
    , duration = 1.192067204000
    , status = Fail
    , start = 2025-09-03 11:28:31.542943804 UTC
    , finish = 2025-09-03 11:28:32.735011008 UTC
    , thread_cap_info = ("ThreadId 136", 0, False)}
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 2
      , alphabet_size = 5
      , total_length = 40}
    , self = 93
    , parent = Nothing
    , duration = 2.506852998000
    , status = Fail
    , start = 2025-09-03 11:28:32.046338716 UTC
    , finish = 2025-09-03 11:28:34.553191714 UTC
    , thread_cap_info = ("ThreadId 144", 3, False)}
Success : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 13.198404550000
  min duration 13.198404550000
  total durat. 13.198404550000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 2
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 101
    , parent = Nothing
    , duration = 13.198404550000
    , status = Success
    , start = 2025-09-03 11:28:30.555669258 UTC
    , finish = 2025-09-03 11:28:43.754073808 UTC
    , thread_cap_info = ("ThreadId 54", 0, False)}
**************************************************
S                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
S                  , closure = Backward\n , start_strict_only = True\n , max_closure_length
S                  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
S                  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
S                  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
S                  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
S                  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
S                  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
S                  = True})" , input_size = Size { num_rules = 2 , num_strict_rules = 2 ,
S                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
S                  = 12} , self = 101 , parent = Nothing , duration = 13.198404550000 , status
S                  = Success , start = 2025-09-03 11:28:30.555669258 UTC , finish = 2025-09-03
S                  11:28:43.754073808 UTC , thread_cap_info = ("ThreadId 54", 0, False)}
S                  
| F                Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F                , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F                = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F                False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F                = Size { num_rules = 18 , num_strict_rules = 18 , num_top_rules = 0 , num_weak_rules
| F                = 0 , alphabet_size = 9 , total_length = 144} , self = 66 , parent = Nothing
| F                , duration = 0.401294107000 , status = Fail , start = 2025-09-03 11:28:30.584103498
| F                UTC , finish = 2025-09-03 11:28:30.985397605 UTC , thread_cap_info = ("ThreadId
| F                64", 2, False)}
| F                
| | F              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | F              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | F              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | F              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | F              = Size { num_rules = 18 , num_strict_rules = 18 , num_top_rules = 0 , num_weak_rules
| | F              = 0 , alphabet_size = 9 , total_length = 144} , self = 74 , parent = Nothing
| | F              , duration = 0.855964177000 , status = Fail , start = 2025-09-03 11:28:30.604093569
| | F              UTC , finish = 2025-09-03 11:28:31.460057746 UTC , thread_cap_info = ("ThreadId
| | F              66", 2, False)}
| | F              
| | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | F            = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | F            = 23} , self = 60 , parent = Nothing , duration = 0.115846462000 , status
| | | F            = Fail , start = 2025-09-03 11:28:30.611089569 UTC , finish = 2025-09-03
| | | F            11:28:30.726936031 UTC , thread_cap_info = ("ThreadId 86", 3, False)}
| | | F            
| | | | F          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F          = 7 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 2 , alphabet_size
| | | | F          = 5 , total_length = 40} , self = 63 , parent = Nothing , duration = 0.198348435000
| | | | F          , status = Fail , start = 2025-09-03 11:28:30.636129189 UTC , finish =
| | | | F          2025-09-03 11:28:30.834477624 UTC , thread_cap_info = ("ThreadId 93", 3,
| | | | F          False)}
| | | | F          
| | | | | F        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | F        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | F        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | F        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | F        , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 2 , alphabet_size
| | | | | F        = 5 , total_length = 40} , self = 86 , parent = Nothing , duration = 0.876625857000
| | | | | F        , status = Fail , start = 2025-09-03 11:28:30.653218014 UTC , finish =
| | | | | F        2025-09-03 11:28:31.529843871 UTC , thread_cap_info = ("ThreadId 95", 3,
| | | | | F        False)}
| | | | | F        
| | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | | | | F      = 18 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | | F      = 144} , self = 70 , parent = Nothing , duration = 0.580219426000 , status
| | | | | | F      = Fail , start = 2025-09-03 11:28:30.663583208 UTC , finish = 2025-09-03
| | | | | | F      11:28:31.243802634 UTC , thread_cap_info = ("ThreadId 97", 1, False)}
| | | | | | F      
| | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | | | | | F    = 18 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | | | F    = 144} , self = 71 , parent = Nothing , duration = 0.594763815000 , status
| | | | | | | F    = Fail , start = 2025-09-03 11:28:30.663602265 UTC , finish = 2025-09-03
| | | | | | | F    11:28:31.25836608 UTC , thread_cap_info = ("ThreadId 99", 1, False)}
| | | | | | | F    
| | | | | | | | F  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | F  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | F  = 4 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | | | | | | | F  = 4 , total_length = 23} , self = 65 , parent = Nothing , duration = 0.272378790000
| | | | | | | | F  , status = Fail , start = 2025-09-03 11:28:30.703524885 UTC , finish =
| | | | | | | | F  2025-09-03 11:28:30.975903675 UTC , thread_cap_info = ("ThreadId 102",
| | | | | | | | F  3, False)}
| | | | | | | | F  
| | | F | | | | |  
| | | F | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | F | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | F | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | F | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | F | | | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | | F | | | | |  = 4 , total_length = 23} , self = 69 , parent = Nothing , duration = 0.439088530000
| | | F | | | | |  , status = Fail , start = 2025-09-03 11:28:30.763997661 UTC , finish =
| | | F | | | | |  2025-09-03 11:28:31.203086191 UTC , thread_cap_info = ("ThreadId 104",
| | | F | | | | |  3, False)}
| | | F | | | | |  
| | | | F | | | |  
| | | | F | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | F | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | F | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | F | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | F | | | |  , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 2 , alphabet_size
| | | | F | | | |  = 5 , total_length = 40} , self = 73 , parent = Nothing , duration = 0.488232884000
| | | | F | | | |  , status = Fail , start = 2025-09-03 11:28:30.834582655 UTC , finish =
| | | | F | | | |  2025-09-03 11:28:31.322815539 UTC , thread_cap_info = ("ThreadId 107",
| | | | F | | | |  3, False)}
| | | | F | | | |  
| | | | | | | | F  
| | | | | | | | F  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | | | | F  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | | F  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | | F  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | F  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | F  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | | | | F  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | | | | | | | F  = 4 , total_length = 23} , self = 72 , parent = Nothing , duration = 0.319053027000
| | | | | | | | F  , status = Fail , start = 2025-09-03 11:28:30.977038595 UTC , finish =
| | | | | | | | F  2025-09-03 11:28:31.296091622 UTC , thread_cap_info = ("ThreadId 112",
| | | | | | | | F  3, False)}
| | | | | | | | F  
| F | | | | | | |  
|   | F | | | | |  
| F |   | | | | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| F |   | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F |   | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F |   | | | | |  = 4 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| F |   | | | | |  = 4 , total_length = 23} , self = 84 , parent = Nothing , duration = 0.258449347000
| F |   | | | | |  , status = Fail , start = 2025-09-03 11:28:31.234895452 UTC , finish =
| F |   | | | | |  2025-09-03 11:28:31.493344799 UTC , thread_cap_info = ("ThreadId 117",
| F |   | | | | |  3, False)}
| F |   | | | | |  
| | |   | | F | |  
| | |   | |   F |  
| | |   | |     F  
| | | E | |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | E | |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | E | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | E | |        , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | E | |        , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | | E | |        = 4 , total_length = 23} , self = 98 , parent = Nothing , duration = 12.043923267000
| | | E | |        , status = Except "<<timeout>>" , start = 2025-09-03 11:28:31.302944736
| | | E | |        UTC , finish = 2025-09-03 11:28:43.346868003 UTC , thread_cap_info = ("ThreadId
| | | E | |        121", 3, False)}
| | | E | |        
| | | | F |        
| | | | F |        Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F |        = 7 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 2 , alphabet_size
| | | | F |        = 5 , total_length = 40} , self = 90 , parent = Nothing , duration = 0.652190458000
| | | | F |        , status = Fail , start = 2025-09-03 11:28:31.337946829 UTC , finish =
| | | | F |        2025-09-03 11:28:31.990137287 UTC , thread_cap_info = ("ThreadId 122",
| | | | F |        3, False)}
| | | | F |        
| | F | | |        
| | E | | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | E | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E | | |        = False\n , verbose = False}" , input_size = Size { num_rules = 69 , num_strict_rules
| | E | | |        = 51 , num_top_rules = 51 , num_weak_rules = 18 , alphabet_size = 15 ,
| | E | | |        total_length = 507} , self = 94 , parent = Nothing , duration = 3.070003874000
| | E | | |        , status = Except "<<timeout>>" , start = 2025-09-03 11:28:31.483209751
| | E | | |        UTC , finish = 2025-09-03 11:28:34.553213625 UTC , thread_cap_info = ("ThreadId
| | E | | |        133", 2, False)}
| | E | | |        
| F | | | |        
| F | | | |        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F | | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | | |        = False\n , verbose = False}" , input_size = Size { num_rules = 69 , num_strict_rules
| F | | | |        = 51 , num_top_rules = 51 , num_weak_rules = 18 , alphabet_size = 15 ,
| F | | | |        total_length = 507} , self = 92 , parent = Nothing , duration = 2.009462836000
| F | | | |        , status = Fail , start = 2025-09-03 11:28:31.505508133 UTC , finish =
| F | | | |        2025-09-03 11:28:33.514970969 UTC , thread_cap_info = ("ThreadId 134",
| F | | | |        2, False)}
| F | | | |        
| | | | | F        
| | | | | F        Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F        = 4 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | | | | F        = 4 , total_length = 23} , self = 91 , parent = Nothing , duration = 1.192067204000
| | | | | F        , status = Fail , start = 2025-09-03 11:28:31.542943804 UTC , finish =
| | | | | F        2025-09-03 11:28:32.735011008 UTC , thread_cap_info = ("ThreadId 136",
| | | | | F        0, False)}
| | | | | F        
| | | | | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | | E      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | E      , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | | E      , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 2 , alphabet_size
| | | | | | E      = 5 , total_length = 40} , self = 99 , parent = Nothing , duration = 12.060085885000
| | | | | | E      , status = Except "<<timeout>>" , start = 2025-09-03 11:28:31.544319513
| | | | | | E      UTC , finish = 2025-09-03 11:28:43.604405398 UTC , thread_cap_info = ("ThreadId
| | | | | | E      137", 3, False)}
| | | | | | E      
| | | | | | | E    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | E    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | E    = False\n , verbose = False}" , input_size = Size { num_rules = 84 , num_strict_rules
| | | | | | | E    = 66 , num_top_rules = 66 , num_weak_rules = 18 , alphabet_size = 15 ,
| | | | | | | E    total_length = 711} , self = 95 , parent = Nothing , duration = 3.053021279000
| | | | | | | E    , status = Except "<<timeout>>" , start = 2025-09-03 11:28:31.644980736
| | | | | | | E    UTC , finish = 2025-09-03 11:28:34.698002015 UTC , thread_cap_info = ("ThreadId
| | | | | | | E    140", 2, False)}
| | | | | | | E    
| | | | | | | | E  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | E  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | E  = False\n , verbose = False}" , input_size = Size { num_rules = 84 , num_strict_rules
| | | | | | | | E  = 66 , num_top_rules = 66 , num_weak_rules = 18 , alphabet_size = 15 ,
| | | | | | | | E  total_length = 711} , self = 96 , parent = Nothing , duration = 3.054644875000
| | | | | | | | E  , status = Except "<<timeout>>" , start = 2025-09-03 11:28:31.663833256
| | | | | | | | E  UTC , finish = 2025-09-03 11:28:34.718478131 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E  141", 2, False)}
| | | | | | | | E  
| | | | F | | | |  
| | | | F | | | |  Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
| | | | F | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F | | | |  = 7 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 2 , alphabet_size
| | | | F | | | |  = 5 , total_length = 40} , self = 93 , parent = Nothing , duration = 2.506852998000
| | | | F | | | |  , status = Fail , start = 2025-09-03 11:28:32.046338716 UTC , finish =
| | | | F | | | |  2025-09-03 11:28:34.553191714 UTC , thread_cap_info = ("ThreadId 144",
| | | | F | | | |  3, False)}
| | | | F | | | |  
| | | | | F | | |  
| F | | |   | | |  
| F | | |   | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F | | |   | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | | |   | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | | |   | | |  = 69 , num_strict_rules = 51 , num_top_rules = 51 , num_weak_rules = 18
| F | | |   | | |  , alphabet_size = 15 , total_length = 507} , self = 97 , parent = Nothing
| F | | |   | | |  , duration = 9.201402441000 , status = Fail , start = 2025-09-03 11:28:33.61499655
| F | | |   | | |  UTC , finish = 2025-09-03 11:28:42.816398991 UTC , thread_cap_info = ("ThreadId
| F | | |   | | |  149", 2, False)}
| F | | |   | | |  
| | | | F   | | |  
| | E |     | | |  
| | E |     | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E |     | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E |     | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E |     | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E |     | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E |     | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 69
| | E |     | | |  , num_strict_rules = 51 , num_top_rules = 51 , num_weak_rules = 18 , alphabet_size
| | E |     | | |  = 15 , total_length = 507} , self = 100 , parent = Nothing , duration =
| | E |     | | |  9.081077611000 , status = Except "<<timeout>>" , start = 2025-09-03 11:28:34.645793015
| | E |     | | |  UTC , finish = 2025-09-03 11:28:43.726870626 UTC , thread_cap_info = ("ThreadId
| | E |     | | |  153", 2, False)}
| | E |     | | |  
| | | |     | E |  
| | | |     |   E  
| F | |     |      
|   | E     |      
|   |       E      
|   E              
S                  
