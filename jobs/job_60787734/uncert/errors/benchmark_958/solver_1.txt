last 18589 length 166298
CNF 18589 vars 166298 clauses
last 20975 length 245136
last 5995 length 53202
CNF 20975 vars 245136 clauses
CNF 5995 vars 53202 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5597, clauses: 20214
last 5597 length 20214
CNF 5597 vars 20214 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5597, clauses: 20214, status: Unsatisfied, time: 0.186501003s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 23251, clauses: 97925
last 23251 length 97925
CNF 23251 vars 97925 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8153, clauses: 32697
last 8153 length 32697
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 23251, clauses: 97925, status: Unsatisfied, time: 0.701021814s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14080, clauses: 59282
CNF 8153 vars 32697 clauses
last 14080 length 59282
CNF 14080 vars 59282 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8153, clauses: 32697, status: Satisfied, time: 0.81812222s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9369, clauses: 35156
last 9369 length 35156
CNF 9369 vars 35156 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9369, clauses: 35156, status: Unsatisfied, time: 0.4334743s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14080, clauses: 59282, status: Unsatisfied, time: 1.282192228s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17598, clauses: 65648
last 17598 length 65648
CNF 17598 vars 65648 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7285, clauses: 28378
last 7285 length 28378
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 41869, clauses: 185753
last 41869 length 185753
CNF 7285 vars 28378 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7285, clauses: 28378, status: Unsatisfied, time: 0.546711688s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17598, clauses: 65648, status: Unsatisfied, time: 2.504303451s
CNF 41869 vars 185753 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16433, clauses: 69509
last 16433 length 69509
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 26757, clauses: 112803
last 26757 length 112803
CNF 16433 vars 69509 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16433, clauses: 69509, status: Satisfied, time: 0.850872965s
CNF 26757 vars 112803 clauses
last 10379 length 107720
CNF 10379 vars 107720 clauses
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 52541, clauses: 247723
last 52541 length 247723
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6418, clauses: 24037
last 6418 length 24037
CNF 6418 vars 24037 clauses
CNF 52541 vars 247723 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6418, clauses: 24037, status: Unsatisfied, time: 0.569850026s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 24864, clauses: 104764
last 24864 length 104764
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15186, clauses: 64133
last 15186 length 64133
CNF 24864 vars 104764 clauses
CNF 15186 vars 64133 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 24864, clauses: 104764, status: Satisfied, time: 1.036313877s
last 9577 length 113330
CNF 9577 vars 113330 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5984, clauses: 22083
last 5984 length 22083
CNF 5984 vars 22083 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5984, clauses: 22083, status: Unsatisfied, time: 0.856574284s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 2, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 46765, clauses: 244557
last 46765 length 244557
CNF 46765 vars 244557 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 23896, clauses: 100658
last 23896 length 100658
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14526, clauses: 61283
last 14526 length 61283
CNF 23896 vars 100658 clauses
CNF 14526 vars 61283 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 23896, clauses: 100658, status: Satisfied, time: 0.795002226s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14526, clauses: 61283, status: Satisfied, time: 0.453195386s
last 6589 length 51626
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 6, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 25123, clauses: 96699
last 25123 length 96699
CNF 6589 vars 51626 clauses
CNF 25123 vars 96699 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5768, clauses: 20919
last 5768 length 20919
CNF 5768 vars 20919 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5768, clauses: 20919, status: Unsatisfied, time: 0.3621186s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 23847, clauses: 100469
last 23847 length 100469
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14444, clauses: 60934
last 14444 length 60934
CNF 23847 vars 100469 clauses
CNF 14444 vars 60934 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 23847, clauses: 100469, status: Satisfied, time: 0.851364855s
last 5013 length 37919
CNF 5013 vars 37919 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 6, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 25123, clauses: 96699, status: Unsatisfied, time: 5.83390506s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5952, clauses: 21323
last 5952 length 21323
CNF 5952 vars 21323 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5952, clauses: 21323, status: Unsatisfied, time: 0.462467877s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 23357, clauses: 98287
last 23357 length 98287
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14260, clauses: 59818
last 14260 length 59818
CNF 23357 vars 98287 clauses
CNF 14260 vars 59818 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 23357, clauses: 98287, status: Satisfied, time: 1.26676758s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14260, clauses: 59818, status: Satisfied, time: 1.093754844s
**************************************************
summary
**************************************************
SRS with 9 rules on 6 letters       weights
SRS with 8 rules on 6 letters       context
SRS with 13 rules on 6 letters       mirror
SRS with 13 rules on 6 letters       DP
SRS with 41 strict rules and 13 weak rules on 8 letters       weights
SRS with 28 strict rules and 13 weak rules on 8 letters       EDG
2 sub-proofs
  1 SRS with 11 strict rules and 13 weak rules on 7 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 7 strict rules and 13 weak rules on 7 letters       EDG
  SRS with 7 strict rules and 13 weak rules on 7 letters       Matrix   { monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 4 strict rules and 13 weak rules on 7 letters       EDG
  SRS with 4 strict rules and 13 weak rules on 7 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 2 strict rules and 13 weak rules on 7 letters       EDG
  SRS with 2 strict rules and 13 weak rules on 7 letters       Matrix   { monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 1 strict rules and 13 weak rules on 7 letters       EDG
  SRS with 1 strict rules and 13 weak rules on 7 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 13 weak rules on 6 letters       EDG

  2 SRS with 3 strict rules and 13 weak rules on 7 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 2 strict rules and 13 weak rules on 7 letters       EDG
  SRS with 2 strict rules and 13 weak rules on 7 letters       Usable
  SRS with 2 rules on 3 letters       weights
  SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [tower, 0] -> [s, 0, p, s, p, s] {- Input 0 -}
  [tower, s] -> [p, s, p, s, twoto, p, s, p, s, tower, p, s, p, s] {- Input 1 -}
  [twoto, 0] -> [s, 0] {- Input 2 -}
  [twoto, s] -> [ p , p , s , p , p , p , s , s , p , s , s , p , s , s , p , s , twice , p , s , p , s , p , p , p , s , s , s , twoto , p , s , p , s ] {- Input 3 -}
  [twice, 0] -> [0] {- Input 4 -}
  [twice, s] -> [p, p, p, s, s, s, s, s, twice, p, p, p, s, s, s] {- Input 5 -}
  [p, p, s] -> [p] {- Input 6 -}
  [p, s] -> [] {- Input 7 -}
  [p, 0] -> [0, s, s, s, s, s, s, s, s] {- Input 8 -}
reason
  (s, 0/1)
  (p, 0/1)
  (tower, 1/1)
  (0, 0/1)
  (twice, 0/1)
  (twoto, 0/1)
   property Termination
has value Just True
for SRS
  [tower, s] -> [p, s, p, s, twoto, p, s, p, s, tower, p, s, p, s] {- Input 1 -}
  [twoto, 0] -> [s, 0] {- Input 2 -}
  [twoto, s] -> [ p , p , s , p , p , p , s , s , p , s , s , p , s , s , p , s , twice , p , s , p , s , p , p , p , s , s , s , twoto , p , s , p , s ] {- Input 3 -}
  [twice, 0] -> [0] {- Input 4 -}
  [twice, s] -> [p, p, p, s, s, s, s, s, twice, p, p, p, s, s, s] {- Input 5 -}
  [p, p, s] -> [p] {- Input 6 -}
  [p, s] -> [] {- Input 7 -}
  [p, 0] -> [0, s, s, s, s, s, s, s, s] {- Input 8 -}
reason
  context
   property Termination
has value Just True
for SRS
  [tower, s] -> [p, s, p, s, twoto, p, s, p, s, tower, p, s, p, s] {- Input 1 -}
  [twoto, 0] -> [s, 0] {- Input 2 -}
  [twoto, s] -> [ p , p , s , p , p , p , s , s , p , s , s , p , s , s , p , s , twice , p , s , p , s , p , p , p , s , s , s , twoto , p , s , p , s ] {- Input 3 -}
  [twice, 0] -> [0] {- Input 4 -}
  [twice, s] -> [p, p, p, s, s, s, s, s, twice, p, p, p, s, s, s] {- Input 5 -}
  [p, p, s] -> [p] {- Input 6 -}
  [s, p, s] -> [s] {- Input 7 -}
  [p, p, s] -> [p] {- Input 7 -}
  [tower, p, s] -> [tower] {- Input 7 -}
  [0, p, s] -> [0] {- Input 7 -}
  [twice, p, s] -> [twice] {- Input 7 -}
  [twoto, p, s] -> [twoto] {- Input 7 -}
  [p, 0] -> [0, s, s, s, s, s, s, s, s] {- Input 8 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [s, tower] -> [ s , p , s , p , tower , s , p , s , p , twoto , s , p , s , p ] {- Mirror (Input 1) -}
  [0, twoto] -> [0, s] {- Mirror (Input 2) -}
  [s, twoto] -> [ s , p , s , p , twoto , s , s , s , p , p , p , s , p , s , p , twice , s , p , s , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- Mirror (Input 3) -}
  [0, twice] -> [0] {- Mirror (Input 4) -}
  [s, twice] -> [ s , s , s , p , p , p , twice , s , s , s , s , s , p , p , p ] {- Mirror (Input 5) -}
  [s, p, p] -> [p] {- Mirror (Input 6) -}
  [s, p, s] -> [s] {- Mirror (Input 7) -}
  [s, p, p] -> [p] {- Mirror (Input 7) -}
  [s, p, tower] -> [tower] {- Mirror (Input 7) -}
  [s, p, 0] -> [0] {- Mirror (Input 7) -}
  [s, p, twice] -> [twice] {- Mirror (Input 7) -}
  [s, p, twoto] -> [twoto] {- Mirror (Input 7) -}
  [0, p] -> [s, s, s, s, s, s, s, s, 0] {- Mirror (Input 8) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [s, tower] ->= [ s , p , s , p , tower , s , p , s , p , twoto , s , p , s , p ] {- DP Nontop (Mirror (Input 1)) -}
  [0, twoto] ->= [0, s] {- DP Nontop (Mirror (Input 2)) -}
  [s, twoto] ->= [ s , p , s , p , twoto , s , s , s , p , p , p , s , p , s , p , twice , s , p , s , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP Nontop (Mirror (Input 3)) -}
  [0, twice] ->= [0] {- DP Nontop (Mirror (Input 4)) -}
  [s, twice] ->= [ s , s , s , p , p , p , twice , s , s , s , s , s , p , p , p ] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 6)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, tower] ->= [tower] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, twice] ->= [twice] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, twoto] ->= [twoto] {- DP Nontop (Mirror (Input 7)) -}
  [0, p] ->= [s, s, s, s, s, s, s, s, 0] {- DP Nontop (Mirror (Input 8)) -}
  [s#, tower] |-> [s#, p] {- DP (Top 12) (Mirror (Input 1)) -}
  [s#, tower] |-> [s#, p, s, p] {- DP (Top 10) (Mirror (Input 1)) -}
  [s#, tower] |-> [ s# , p , s , p , tower , s , p , s , p , twoto , s , p , s , p ] {- DP (Top 0) (Mirror (Input 1)) -}
  [s#, tower] |-> [ s# , p , s , p , twoto , s , p , s , p ] {- DP (Top 5) (Mirror (Input 1)) -}
  [s#, tower] |-> [ s# , p , tower , s , p , s , p , twoto , s , p , s , p ] {- DP (Top 2) (Mirror (Input 1)) -}
  [s#, tower] |-> [s#, p, twoto, s, p, s, p] {- DP (Top 7) (Mirror (Input 1)) -}
  [s#, twice] |-> [s#, s, s, s, s, p, p, p] {- DP (Top 7) (Mirror (Input 5)) -}
  [s#, twice] |-> [s#, s, s, s, p, p, p] {- DP (Top 8) (Mirror (Input 5)) -}
  [s#, twice] |-> [s#, s, s, p, p, p] {- DP (Top 9) (Mirror (Input 5)) -}
  [s#, twice] |-> [ s# , s , s , p , p , p , twice , s , s , s , s , s , p , p , p ] {- DP (Top 0) (Mirror (Input 5)) -}
  [s#, twice] |-> [s#, s, p, p, p] {- DP (Top 10) (Mirror (Input 5)) -}
  [s#, twice] |-> [ s# , s , p , p , p , twice , s , s , s , s , s , p , p , p ] {- DP (Top 1) (Mirror (Input 5)) -}
  [s#, twice] |-> [s#, p, p, p] {- DP (Top 11) (Mirror (Input 5)) -}
  [s#, twice] |-> [ s# , p , p , p , twice , s , s , s , s , s , p , p , p ] {- DP (Top 2) (Mirror (Input 5)) -}
  [s#, twoto] |-> [ s# , s , s , p , p , p , s , p , s , p , twice , s , p , s , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP (Top 5) (Mirror (Input 3)) -}
  [s#, twoto] |-> [ s# , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP (Top 18) (Mirror (Input 3)) -}
  [s#, twoto] |-> [ s# , s , p , s , s , p , p , p , s , p , p ] {- DP (Top 21) (Mirror (Input 3)) -}
  [s#, twoto] |-> [ s# , s , p , p , p , s , p , s , p , twice , s , p , s , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP (Top 6) (Mirror (Input 3)) -}
  [s#, twoto] |-> [s#, s, p, p, p, s, p, p] {- DP (Top 24) (Mirror (Input 3)) -}
  [s#, twoto] |-> [ s# , p , s , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP (Top 16) (Mirror (Input 3)) -}
  [s#, twoto] |-> [ s# , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP (Top 19) (Mirror (Input 3)) -}
  [s#, twoto] |-> [ s# , p , s , s , p , p , p , s , p , p ] {- DP (Top 22) (Mirror (Input 3)) -}
  [s#, twoto] |-> [ s# , p , s , p , twice , s , p , s , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP (Top 11) (Mirror (Input 3)) -}
  [s#, twoto] |-> [ s# , p , s , p , twoto , s , s , s , p , p , p , s , p , s , p , twice , s , p , s , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP (Top 0) (Mirror (Input 3)) -}
  [s#, twoto] |-> [s#, p, p] {- DP (Top 29) (Mirror (Input 3)) -}
  [s#, twoto] |-> [ s# , p , p , p , s , p , s , p , twice , s , p , s , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP (Top 7) (Mirror (Input 3)) -}
  [s#, twoto] |-> [s#, p, p, p, s, p, p] {- DP (Top 25) (Mirror (Input 3)) -}
  [s#, twoto] |-> [ s# , p , twice , s , p , s , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP (Top 13) (Mirror (Input 3)) -}
  [s#, twoto] |-> [ s# , p , twoto , s , s , s , p , p , p , s , p , s , p , twice , s , p , s , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP (Top 2) (Mirror (Input 3)) -}
  [0#, p] |-> [s#, s, s, s, s, s, s, s, 0] {- DP (Top 0) (Mirror (Input 8)) -}
  [0#, p] |-> [s#, s, s, s, s, s, s, 0] {- DP (Top 1) (Mirror (Input 8)) -}
  [0#, p] |-> [s#, s, s, s, s, s, 0] {- DP (Top 2) (Mirror (Input 8)) -}
  [0#, p] |-> [s#, s, s, s, s, 0] {- DP (Top 3) (Mirror (Input 8)) -}
  [0#, p] |-> [s#, s, s, s, 0] {- DP (Top 4) (Mirror (Input 8)) -}
  [0#, p] |-> [s#, s, s, 0] {- DP (Top 5) (Mirror (Input 8)) -}
  [0#, p] |-> [s#, s, 0] {- DP (Top 6) (Mirror (Input 8)) -}
  [0#, p] |-> [s#, 0] {- DP (Top 7) (Mirror (Input 8)) -}
  [0#, p] |-> [0#] {- DP (Top 8) (Mirror (Input 8)) -}
  [0#, twice] |-> [0#] {- DP (Top 0) (Mirror (Input 4)) -}
  [0#, twoto] |-> [s#] {- DP (Top 1) (Mirror (Input 2)) -}
  [0#, twoto] |-> [0#, s] {- DP (Top 0) (Mirror (Input 2)) -}
reason
  (s, 0/1)
  (p, 0/1)
  (tower, 1/1)
  (0, 0/1)
  (twice, 0/1)
  (twoto, 0/1)
  (s#, 0/1)
  (0#, 1/1)
   property Termination
has value Just True
for SRS
  [s, tower] ->= [ s , p , s , p , tower , s , p , s , p , twoto , s , p , s , p ] {- DP Nontop (Mirror (Input 1)) -}
  [0, twoto] ->= [0, s] {- DP Nontop (Mirror (Input 2)) -}
  [s, twoto] ->= [ s , p , s , p , twoto , s , s , s , p , p , p , s , p , s , p , twice , s , p , s , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP Nontop (Mirror (Input 3)) -}
  [0, twice] ->= [0] {- DP Nontop (Mirror (Input 4)) -}
  [s, twice] ->= [ s , s , s , p , p , p , twice , s , s , s , s , s , p , p , p ] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 6)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, tower] ->= [tower] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, twice] ->= [twice] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, twoto] ->= [twoto] {- DP Nontop (Mirror (Input 7)) -}
  [0, p] ->= [s, s, s, s, s, s, s, s, 0] {- DP Nontop (Mirror (Input 8)) -}
  [s#, tower] |-> [ s# , p , s , p , tower , s , p , s , p , twoto , s , p , s , p ] {- DP (Top 0) (Mirror (Input 1)) -}
  [s#, tower] |-> [ s# , p , tower , s , p , s , p , twoto , s , p , s , p ] {- DP (Top 2) (Mirror (Input 1)) -}
  [s#, twice] |-> [s#, s, s, s, s, p, p, p] {- DP (Top 7) (Mirror (Input 5)) -}
  [s#, twice] |-> [s#, s, s, s, p, p, p] {- DP (Top 8) (Mirror (Input 5)) -}
  [s#, twice] |-> [s#, s, s, p, p, p] {- DP (Top 9) (Mirror (Input 5)) -}
  [s#, twice] |-> [ s# , s , s , p , p , p , twice , s , s , s , s , s , p , p , p ] {- DP (Top 0) (Mirror (Input 5)) -}
  [s#, twice] |-> [s#, s, p, p, p] {- DP (Top 10) (Mirror (Input 5)) -}
  [s#, twice] |-> [ s# , s , p , p , p , twice , s , s , s , s , s , p , p , p ] {- DP (Top 1) (Mirror (Input 5)) -}
  [s#, twice] |-> [s#, p, p, p] {- DP (Top 11) (Mirror (Input 5)) -}
  [s#, twice] |-> [ s# , p , p , p , twice , s , s , s , s , s , p , p , p ] {- DP (Top 2) (Mirror (Input 5)) -}
  [s#, twoto] |-> [ s# , s , s , p , p , p , s , p , s , p , twice , s , p , s , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP (Top 5) (Mirror (Input 3)) -}
  [s#, twoto] |-> [ s# , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP (Top 18) (Mirror (Input 3)) -}
  [s#, twoto] |-> [ s# , s , p , s , s , p , p , p , s , p , p ] {- DP (Top 21) (Mirror (Input 3)) -}
  [s#, twoto] |-> [ s# , s , p , p , p , s , p , s , p , twice , s , p , s , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP (Top 6) (Mirror (Input 3)) -}
  [s#, twoto] |-> [s#, s, p, p, p, s, p, p] {- DP (Top 24) (Mirror (Input 3)) -}
  [s#, twoto] |-> [ s# , p , s , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP (Top 16) (Mirror (Input 3)) -}
  [s#, twoto] |-> [ s# , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP (Top 19) (Mirror (Input 3)) -}
  [s#, twoto] |-> [ s# , p , s , s , p , p , p , s , p , p ] {- DP (Top 22) (Mirror (Input 3)) -}
  [s#, twoto] |-> [ s# , p , s , p , twice , s , p , s , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP (Top 11) (Mirror (Input 3)) -}
  [s#, twoto] |-> [ s# , p , s , p , twoto , s , s , s , p , p , p , s , p , s , p , twice , s , p , s , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP (Top 0) (Mirror (Input 3)) -}
  [s#, twoto] |-> [s#, p, p] {- DP (Top 29) (Mirror (Input 3)) -}
  [s#, twoto] |-> [ s# , p , p , p , s , p , s , p , twice , s , p , s , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP (Top 7) (Mirror (Input 3)) -}
  [s#, twoto] |-> [s#, p, p, p, s, p, p] {- DP (Top 25) (Mirror (Input 3)) -}
  [s#, twoto] |-> [ s# , p , twice , s , p , s , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP (Top 13) (Mirror (Input 3)) -}
  [s#, twoto] |-> [ s# , p , twoto , s , s , s , p , p , p , s , p , s , p , twice , s , p , s , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP (Top 2) (Mirror (Input 3)) -}
  [0#, p] |-> [0#] {- DP (Top 8) (Mirror (Input 8)) -}
  [0#, twice] |-> [0#] {- DP (Top 0) (Mirror (Input 4)) -}
  [0#, twoto] |-> [0#, s] {- DP (Top 0) (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [s#, twoto] |-> [s#, s, p, p, p, s, p, p] {- DP (Top 24) (Mirror (Input 3)) -}
  [s#, twice] |-> [s#, s, s, s, s, p, p, p] {- DP (Top 7) (Mirror (Input 5)) -}
  [s#, twice] |-> [s#, s, s, s, p, p, p] {- DP (Top 8) (Mirror (Input 5)) -}
  [s#, twice] |-> [s#, s, s, p, p, p] {- DP (Top 9) (Mirror (Input 5)) -}
  [s#, twice] |-> [ s# , s , s , p , p , p , twice , s , s , s , s , s , p , p , p ] {- DP (Top 0) (Mirror (Input 5)) -}
  [s#, twice] |-> [s#, s, p, p, p] {- DP (Top 10) (Mirror (Input 5)) -}
  [s#, twice] |-> [ s# , s , p , p , p , twice , s , s , s , s , s , p , p , p ] {- DP (Top 1) (Mirror (Input 5)) -}
  [s#, twoto] |-> [ s# , s , s , p , p , p , s , p , s , p , twice , s , p , s , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP (Top 5) (Mirror (Input 3)) -}
  [s#, twoto] |-> [ s# , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP (Top 18) (Mirror (Input 3)) -}
  [s#, twoto] |-> [ s# , s , p , s , s , p , p , p , s , p , p ] {- DP (Top 21) (Mirror (Input 3)) -}
  [s#, twoto] |-> [ s# , s , p , p , p , s , p , s , p , twice , s , p , s , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP (Top 6) (Mirror (Input 3)) -}
  [s, tower] ->= [ s , p , s , p , tower , s , p , s , p , twoto , s , p , s , p ] {- DP Nontop (Mirror (Input 1)) -}
  [0, twoto] ->= [0, s] {- DP Nontop (Mirror (Input 2)) -}
  [s, twoto] ->= [ s , p , s , p , twoto , s , s , s , p , p , p , s , p , s , p , twice , s , p , s , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP Nontop (Mirror (Input 3)) -}
  [0, twice] ->= [0] {- DP Nontop (Mirror (Input 4)) -}
  [s, twice] ->= [ s , s , s , p , p , p , twice , s , s , s , s , s , p , p , p ] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 6)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, tower] ->= [tower] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, twice] ->= [twice] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, twoto] ->= [twoto] {- DP Nontop (Mirror (Input 7)) -}
  [0, p] ->= [s, s, s, s, s, s, s, s, 0] {- DP Nontop (Mirror (Input 8)) -}
reason
  ( s
  , Wk  / 0A  0A 0A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( p
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( tower
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( 0
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( twice
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( twoto
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( s#
  , Wk  / 1A 1A 4A - \
        | 1A 1A 4A - |
        | 1A 1A 4A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [s#, twice] |-> [s#, s, s, s, s, p, p, p] {- DP (Top 7) (Mirror (Input 5)) -}
  [s#, twice] |-> [s#, s, s, s, p, p, p] {- DP (Top 8) (Mirror (Input 5)) -}
  [s#, twice] |-> [s#, s, s, p, p, p] {- DP (Top 9) (Mirror (Input 5)) -}
  [s#, twice] |-> [ s# , s , s , p , p , p , twice , s , s , s , s , s , p , p , p ] {- DP (Top 0) (Mirror (Input 5)) -}
  [s#, twoto] |-> [ s# , s , s , p , p , p , s , p , s , p , twice , s , p , s , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP (Top 5) (Mirror (Input 3)) -}
  [s#, twoto] |-> [ s# , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP (Top 18) (Mirror (Input 3)) -}
  [s#, twoto] |-> [ s# , s , p , s , s , p , p , p , s , p , p ] {- DP (Top 21) (Mirror (Input 3)) -}
  [s, tower] ->= [ s , p , s , p , tower , s , p , s , p , twoto , s , p , s , p ] {- DP Nontop (Mirror (Input 1)) -}
  [0, twoto] ->= [0, s] {- DP Nontop (Mirror (Input 2)) -}
  [s, twoto] ->= [ s , p , s , p , twoto , s , s , s , p , p , p , s , p , s , p , twice , s , p , s , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP Nontop (Mirror (Input 3)) -}
  [0, twice] ->= [0] {- DP Nontop (Mirror (Input 4)) -}
  [s, twice] ->= [ s , s , s , p , p , p , twice , s , s , s , s , s , p , p , p ] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 6)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, tower] ->= [tower] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, twice] ->= [twice] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, twoto] ->= [twoto] {- DP Nontop (Mirror (Input 7)) -}
  [0, p] ->= [s, s, s, s, s, s, s, s, 0] {- DP Nontop (Mirror (Input 8)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [s#, twice] |-> [s#, s, s, s, s, p, p, p] {- DP (Top 7) (Mirror (Input 5)) -}
  [s#, twice] |-> [s#, s, s, s, p, p, p] {- DP (Top 8) (Mirror (Input 5)) -}
  [s#, twice] |-> [s#, s, s, p, p, p] {- DP (Top 9) (Mirror (Input 5)) -}
  [s#, twice] |-> [ s# , s , s , p , p , p , twice , s , s , s , s , s , p , p , p ] {- DP (Top 0) (Mirror (Input 5)) -}
  [s#, twoto] |-> [ s# , s , s , p , p , p , s , p , s , p , twice , s , p , s , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP (Top 5) (Mirror (Input 3)) -}
  [s#, twoto] |-> [ s# , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP (Top 18) (Mirror (Input 3)) -}
  [s#, twoto] |-> [ s# , s , p , s , s , p , p , p , s , p , p ] {- DP (Top 21) (Mirror (Input 3)) -}
  [s, tower] ->= [ s , p , s , p , tower , s , p , s , p , twoto , s , p , s , p ] {- DP Nontop (Mirror (Input 1)) -}
  [0, twoto] ->= [0, s] {- DP Nontop (Mirror (Input 2)) -}
  [s, twoto] ->= [ s , p , s , p , twoto , s , s , s , p , p , p , s , p , s , p , twice , s , p , s , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP Nontop (Mirror (Input 3)) -}
  [0, twice] ->= [0] {- DP Nontop (Mirror (Input 4)) -}
  [s, twice] ->= [ s , s , s , p , p , p , twice , s , s , s , s , s , p , p , p ] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 6)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, tower] ->= [tower] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, twice] ->= [twice] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, twoto] ->= [twoto] {- DP Nontop (Mirror (Input 7)) -}
  [0, p] ->= [s, s, s, s, s, s, s, s, 0] {- DP Nontop (Mirror (Input 8)) -}
reason
  ( s
  , Wk  / 1 1 0 \
        | 0 0 0 |
        \ 0 0 1 / )
  ( p
  , Wk  / 1 1 0 \
        | 0 0 0 |
        \ 0 0 1 / )
  ( tower
  , Wk  / 0 0 0 \
        | 0 0 0 |
        \ 0 0 1 / )
  ( 0
  , Wk  / 1 1 1 \
        | 0 0 0 |
        \ 0 0 1 / )
  ( twice
  , Wk  / 1 2 0 \
        | 0 0 0 |
        \ 0 0 1 / )
  ( twoto
  , Wk  / 3 3 6 \
        | 0 0 0 |
        \ 0 0 1 / )
  ( s#
  , Wk  / 1 1 1 \
        | 0 0 0 |
        \ 0 0 1 / )
   property Termination
has value Just True
for SRS
  [s#, twice] |-> [s#, s, s, s, s, p, p, p] {- DP (Top 7) (Mirror (Input 5)) -}
  [s#, twice] |-> [s#, s, s, s, p, p, p] {- DP (Top 8) (Mirror (Input 5)) -}
  [s#, twice] |-> [s#, s, s, p, p, p] {- DP (Top 9) (Mirror (Input 5)) -}
  [s#, twice] |-> [ s# , s , s , p , p , p , twice , s , s , s , s , s , p , p , p ] {- DP (Top 0) (Mirror (Input 5)) -}
  [s, tower] ->= [ s , p , s , p , tower , s , p , s , p , twoto , s , p , s , p ] {- DP Nontop (Mirror (Input 1)) -}
  [0, twoto] ->= [0, s] {- DP Nontop (Mirror (Input 2)) -}
  [s, twoto] ->= [ s , p , s , p , twoto , s , s , s , p , p , p , s , p , s , p , twice , s , p , s , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP Nontop (Mirror (Input 3)) -}
  [0, twice] ->= [0] {- DP Nontop (Mirror (Input 4)) -}
  [s, twice] ->= [ s , s , s , p , p , p , twice , s , s , s , s , s , p , p , p ] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 6)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, tower] ->= [tower] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, twice] ->= [twice] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, twoto] ->= [twoto] {- DP Nontop (Mirror (Input 7)) -}
  [0, p] ->= [s, s, s, s, s, s, s, s, 0] {- DP Nontop (Mirror (Input 8)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [s#, twice] |-> [s#, s, s, s, s, p, p, p] {- DP (Top 7) (Mirror (Input 5)) -}
  [s#, twice] |-> [s#, s, s, s, p, p, p] {- DP (Top 8) (Mirror (Input 5)) -}
  [s#, twice] |-> [s#, s, s, p, p, p] {- DP (Top 9) (Mirror (Input 5)) -}
  [s#, twice] |-> [ s# , s , s , p , p , p , twice , s , s , s , s , s , p , p , p ] {- DP (Top 0) (Mirror (Input 5)) -}
  [s, tower] ->= [ s , p , s , p , tower , s , p , s , p , twoto , s , p , s , p ] {- DP Nontop (Mirror (Input 1)) -}
  [0, twoto] ->= [0, s] {- DP Nontop (Mirror (Input 2)) -}
  [s, twoto] ->= [ s , p , s , p , twoto , s , s , s , p , p , p , s , p , s , p , twice , s , p , s , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP Nontop (Mirror (Input 3)) -}
  [0, twice] ->= [0] {- DP Nontop (Mirror (Input 4)) -}
  [s, twice] ->= [ s , s , s , p , p , p , twice , s , s , s , s , s , p , p , p ] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 6)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, tower] ->= [tower] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, twice] ->= [twice] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, twoto] ->= [twoto] {- DP Nontop (Mirror (Input 7)) -}
  [0, p] ->= [s, s, s, s, s, s, s, s, 0] {- DP Nontop (Mirror (Input 8)) -}
reason
  ( s
  , Wk  / -   1A  0A  \
        | -1A -1A -1A |
        \ -   -   0A  / )
  ( p
  , Wk  / -   1A 0A \
        | -1A -  -  |
        \ -   -  0A / )
  ( tower
  , Wk  / -   - 2A \
        | -1A - 1A |
        \ -   - 0A / )
  ( 0
  , Wk  / - - 1A \
        | - - 0A |
        \ - - 0A / )
  ( twice
  , Wk  / 1A 1A 1A \
        | 0A 0A 0A |
        \ -  -  0A / )
  ( twoto
  , Wk  / - - 2A \
        | - - 1A |
        \ - - 0A / )
  ( s#
  , Wk  / - 2A 0A \
        | - -  -  |
        \ - -  0A / )
   property Termination
has value Just True
for SRS
  [s#, twice] |-> [s#, s, s, s, p, p, p] {- DP (Top 8) (Mirror (Input 5)) -}
  [s#, twice] |-> [ s# , s , s , p , p , p , twice , s , s , s , s , s , p , p , p ] {- DP (Top 0) (Mirror (Input 5)) -}
  [s, tower] ->= [ s , p , s , p , tower , s , p , s , p , twoto , s , p , s , p ] {- DP Nontop (Mirror (Input 1)) -}
  [0, twoto] ->= [0, s] {- DP Nontop (Mirror (Input 2)) -}
  [s, twoto] ->= [ s , p , s , p , twoto , s , s , s , p , p , p , s , p , s , p , twice , s , p , s , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP Nontop (Mirror (Input 3)) -}
  [0, twice] ->= [0] {- DP Nontop (Mirror (Input 4)) -}
  [s, twice] ->= [ s , s , s , p , p , p , twice , s , s , s , s , s , p , p , p ] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 6)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, tower] ->= [tower] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, twice] ->= [twice] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, twoto] ->= [twoto] {- DP Nontop (Mirror (Input 7)) -}
  [0, p] ->= [s, s, s, s, s, s, s, s, 0] {- DP Nontop (Mirror (Input 8)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [s#, twice] |-> [s#, s, s, s, p, p, p] {- DP (Top 8) (Mirror (Input 5)) -}
  [s#, twice] |-> [ s# , s , s , p , p , p , twice , s , s , s , s , s , p , p , p ] {- DP (Top 0) (Mirror (Input 5)) -}
  [s, tower] ->= [ s , p , s , p , tower , s , p , s , p , twoto , s , p , s , p ] {- DP Nontop (Mirror (Input 1)) -}
  [0, twoto] ->= [0, s] {- DP Nontop (Mirror (Input 2)) -}
  [s, twoto] ->= [ s , p , s , p , twoto , s , s , s , p , p , p , s , p , s , p , twice , s , p , s , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP Nontop (Mirror (Input 3)) -}
  [0, twice] ->= [0] {- DP Nontop (Mirror (Input 4)) -}
  [s, twice] ->= [ s , s , s , p , p , p , twice , s , s , s , s , s , p , p , p ] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 6)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, tower] ->= [tower] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, twice] ->= [twice] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, twoto] ->= [twoto] {- DP Nontop (Mirror (Input 7)) -}
  [0, p] ->= [s, s, s, s, s, s, s, s, 0] {- DP Nontop (Mirror (Input 8)) -}
reason
  ( s
  , Wk  / 1 0 0 \
        | 0 7 0 |
        \ 0 0 1 / )
  ( p
  , Wk  / 1 0 0 \
        | 0 4 0 |
        \ 0 0 1 / )
  ( tower
  , Wk  / 0 0 0 \
        | 3 0 0 |
        \ 0 0 1 / )
  ( 0
  , Wk  / 0 0 0 \
        | 0 0 0 |
        \ 0 0 1 / )
  ( twice
  , Wk  / 4 0 1 \
        | 0 0 0 |
        \ 0 0 1 / )
  ( twoto
  , Wk  / 0 0 0 \
        | 0 3 0 |
        \ 0 0 1 / )
  ( s#
  , Wk  / 1 0 4 \
        | 0 0 0 |
        \ 0 0 1 / )
   property Termination
has value Just True
for SRS
  [s#, twice] |-> [ s# , s , s , p , p , p , twice , s , s , s , s , s , p , p , p ] {- DP (Top 0) (Mirror (Input 5)) -}
  [s, tower] ->= [ s , p , s , p , tower , s , p , s , p , twoto , s , p , s , p ] {- DP Nontop (Mirror (Input 1)) -}
  [0, twoto] ->= [0, s] {- DP Nontop (Mirror (Input 2)) -}
  [s, twoto] ->= [ s , p , s , p , twoto , s , s , s , p , p , p , s , p , s , p , twice , s , p , s , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP Nontop (Mirror (Input 3)) -}
  [0, twice] ->= [0] {- DP Nontop (Mirror (Input 4)) -}
  [s, twice] ->= [ s , s , s , p , p , p , twice , s , s , s , s , s , p , p , p ] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 6)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, tower] ->= [tower] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, twice] ->= [twice] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, twoto] ->= [twoto] {- DP Nontop (Mirror (Input 7)) -}
  [0, p] ->= [s, s, s, s, s, s, s, s, 0] {- DP Nontop (Mirror (Input 8)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [s#, twice] |-> [ s# , s , s , p , p , p , twice , s , s , s , s , s , p , p , p ] {- DP (Top 0) (Mirror (Input 5)) -}
  [s, tower] ->= [ s , p , s , p , tower , s , p , s , p , twoto , s , p , s , p ] {- DP Nontop (Mirror (Input 1)) -}
  [0, twoto] ->= [0, s] {- DP Nontop (Mirror (Input 2)) -}
  [s, twoto] ->= [ s , p , s , p , twoto , s , s , s , p , p , p , s , p , s , p , twice , s , p , s , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP Nontop (Mirror (Input 3)) -}
  [0, twice] ->= [0] {- DP Nontop (Mirror (Input 4)) -}
  [s, twice] ->= [ s , s , s , p , p , p , twice , s , s , s , s , s , p , p , p ] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 6)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, tower] ->= [tower] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, twice] ->= [twice] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, twoto] ->= [twoto] {- DP Nontop (Mirror (Input 7)) -}
  [0, p] ->= [s, s, s, s, s, s, s, s, 0] {- DP Nontop (Mirror (Input 8)) -}
reason
  ( s
  , Wk  / 0A 1A 0A \
        | -  1A -  |
        \ -  -  0A / )
  ( p
  , Wk  / 0A  -   -1A \
        | -2A -1A -   |
        \ -   -   0A  / )
  ( tower
  , Wk  / - - 0A \
        | - - 1A |
        \ - - 0A / )
  ( 0
  , Wk  / - - 1A \
        | - - -  |
        \ - - 0A / )
  ( twice
  , Wk  / - - 0A \
        | - - 1A |
        \ - - 0A / )
  ( twoto
  , Wk  / - - 0A \
        | - - 1A |
        \ - - 0A / )
  ( s#
  , Wk  / 0A 0A -  \
        | -  -  -  |
        \ -  -  0A / )
   property Termination
has value Just True
for SRS
  [s, tower] ->= [ s , p , s , p , tower , s , p , s , p , twoto , s , p , s , p ] {- DP Nontop (Mirror (Input 1)) -}
  [0, twoto] ->= [0, s] {- DP Nontop (Mirror (Input 2)) -}
  [s, twoto] ->= [ s , p , s , p , twoto , s , s , s , p , p , p , s , p , s , p , twice , s , p , s , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP Nontop (Mirror (Input 3)) -}
  [0, twice] ->= [0] {- DP Nontop (Mirror (Input 4)) -}
  [s, twice] ->= [ s , s , s , p , p , p , twice , s , s , s , s , s , p , p , p ] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 6)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, tower] ->= [tower] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, twice] ->= [twice] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, twoto] ->= [twoto] {- DP Nontop (Mirror (Input 7)) -}
  [0, p] ->= [s, s, s, s, s, s, s, s, 0] {- DP Nontop (Mirror (Input 8)) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [0#, p] |-> [0#] {- DP (Top 8) (Mirror (Input 8)) -}
  [0#, twice] |-> [0#] {- DP (Top 0) (Mirror (Input 4)) -}
  [0#, twoto] |-> [0#, s] {- DP (Top 0) (Mirror (Input 2)) -}
  [s, tower] ->= [ s , p , s , p , tower , s , p , s , p , twoto , s , p , s , p ] {- DP Nontop (Mirror (Input 1)) -}
  [0, twoto] ->= [0, s] {- DP Nontop (Mirror (Input 2)) -}
  [s, twoto] ->= [ s , p , s , p , twoto , s , s , s , p , p , p , s , p , s , p , twice , s , p , s , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP Nontop (Mirror (Input 3)) -}
  [0, twice] ->= [0] {- DP Nontop (Mirror (Input 4)) -}
  [s, twice] ->= [ s , s , s , p , p , p , twice , s , s , s , s , s , p , p , p ] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 6)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, tower] ->= [tower] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, twice] ->= [twice] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, twoto] ->= [twoto] {- DP Nontop (Mirror (Input 7)) -}
  [0, p] ->= [s, s, s, s, s, s, s, s, 0] {- DP Nontop (Mirror (Input 8)) -}
reason
  ( s
  , Wk  / 0A 0A -   \
        | -  -  -2A |
        \ -  -  0A  / )
  ( p
  , Wk  / 0A 0A -   \
        | -  -  -2A |
        \ -  -  0A  / )
  ( tower
  , Wk  / - 2A 2A  \
        | - -  -2A |
        \ - -  0A  / )
  ( 0
  , Wk  / - - 2A  \
        | - - -2A |
        \ - - 0A  / )
  ( twice
  , Wk  / 0A 0A -2A \
        | -  -  -2A |
        \ -  -  0A  / )
  ( twoto
  , Wk  / 2A 2A 2A  \
        | -  -  -2A |
        \ -  -  0A  / )
  ( 0#
  , Wk  / 0A -1A -  \
        | -  -   -  |
        \ -  -   0A / )
   property Termination
has value Just True
for SRS
  [0#, p] |-> [0#] {- DP (Top 8) (Mirror (Input 8)) -}
  [0#, twice] |-> [0#] {- DP (Top 0) (Mirror (Input 4)) -}
  [s, tower] ->= [ s , p , s , p , tower , s , p , s , p , twoto , s , p , s , p ] {- DP Nontop (Mirror (Input 1)) -}
  [0, twoto] ->= [0, s] {- DP Nontop (Mirror (Input 2)) -}
  [s, twoto] ->= [ s , p , s , p , twoto , s , s , s , p , p , p , s , p , s , p , twice , s , p , s , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP Nontop (Mirror (Input 3)) -}
  [0, twice] ->= [0] {- DP Nontop (Mirror (Input 4)) -}
  [s, twice] ->= [ s , s , s , p , p , p , twice , s , s , s , s , s , p , p , p ] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 6)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, tower] ->= [tower] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, twice] ->= [twice] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, twoto] ->= [twoto] {- DP Nontop (Mirror (Input 7)) -}
  [0, p] ->= [s, s, s, s, s, s, s, s, 0] {- DP Nontop (Mirror (Input 8)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [0#, p] |-> [0#] {- DP (Top 8) (Mirror (Input 8)) -}
  [0#, twice] |-> [0#] {- DP (Top 0) (Mirror (Input 4)) -}
  [s, tower] ->= [ s , p , s , p , tower , s , p , s , p , twoto , s , p , s , p ] {- DP Nontop (Mirror (Input 1)) -}
  [0, twoto] ->= [0, s] {- DP Nontop (Mirror (Input 2)) -}
  [s, twoto] ->= [ s , p , s , p , twoto , s , s , s , p , p , p , s , p , s , p , twice , s , p , s , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP Nontop (Mirror (Input 3)) -}
  [0, twice] ->= [0] {- DP Nontop (Mirror (Input 4)) -}
  [s, twice] ->= [ s , s , s , p , p , p , twice , s , s , s , s , s , p , p , p ] {- DP Nontop (Mirror (Input 5)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 6)) -}
  [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, tower] ->= [tower] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, twice] ->= [twice] {- DP Nontop (Mirror (Input 7)) -}
  [s, p, twoto] ->= [twoto] {- DP Nontop (Mirror (Input 7)) -}
  [0, p] ->= [s, s, s, s, s, s, s, s, 0] {- DP Nontop (Mirror (Input 8)) -}
reason
  remove un-usable
    SRS
      [s, tower] ->= [ s , p , s , p , tower , s , p , s , p , twoto , s , p , s , p ] {- DP Nontop (Mirror (Input 1)) -}
      [0, twoto] ->= [0, s] {- DP Nontop (Mirror (Input 2)) -}
      [s, twoto] ->= [ s , p , s , p , twoto , s , s , s , p , p , p , s , p , s , p , twice , s , p , s , s , p , s , s , p , s , s , p , p , p , s , p , p ] {- DP Nontop (Mirror (Input 3)) -}
      [0, twice] ->= [0] {- DP Nontop (Mirror (Input 4)) -}
      [s, twice] ->= [ s , s , s , p , p , p , twice , s , s , s , s , s , p , p , p ] {- DP Nontop (Mirror (Input 5)) -}
      [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 6)) -}
      [s, p, s] ->= [s] {- DP Nontop (Mirror (Input 7)) -}
      [s, p, p] ->= [p] {- DP Nontop (Mirror (Input 7)) -}
      [s, p, tower] ->= [tower] {- DP Nontop (Mirror (Input 7)) -}
      [s, p, 0] ->= [0] {- DP Nontop (Mirror (Input 7)) -}
      [s, p, twice] ->= [twice] {- DP Nontop (Mirror (Input 7)) -}
      [s, p, twoto] ->= [twoto] {- DP Nontop (Mirror (Input 7)) -}
      [0, p] ->= [s, s, s, s, s, s, s, s, 0] {- DP Nontop (Mirror (Input 8)) -}
   property Termination
has value Just True
for SRS
  [0#, p] |-> [0#] {- DP (Top 8) (Mirror (Input 8)) -}
  [0#, twice] |-> [0#] {- DP (Top 0) (Mirror (Input 4)) -}
reason
  (p, 1/1)
  (twice, 1/1)
  (0#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: (9,6)\Weight(8,6)\Context\Mirror(13,6)\Deepee(41/13,8)\Weight(28/13,8)\EDG[(11/13,7)\Matrix{\Arctic}{3}\EDG(7/13,7)\Matrix{\Natural}{3}\EDG(4/13,7)\Matrix{\ArcticBZ}{3}\EDG(2/13,7)\Matrix{\Natural}{3}\EDG(1/13,7)\Matrix{\ArcticBZ}{3}(0/13,6)\EDG[],(3/13,7)\Matrix{\ArcticBZ}{3}\EDG(2/13,7)\Usable(2,3)\Weight(0,0)\EDG[]]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 1.605124895000
  min duration 0.900257483000
  total durat. 4.575341583000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 27
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 9
      , total_length = 261}
    , self = 76
    , parent = Nothing
    , duration = 1.083008588000
    , status = Fail
    , start = 2025-09-03 13:37:22.736266014 UTC
    , finish = 2025-09-03 13:37:23.819274602 UTC
    , thread_cap_info = ("ThreadId 93", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 13
      , alphabet_size = 7
      , total_length = 130}
    , self = 127
    , parent = Nothing
    , duration = 1.605124895000
    , status = Fail
    , start = 2025-09-03 13:37:48.999129918 UTC
    , finish = 2025-09-03 13:37:50.604254813 UTC
    , thread_cap_info = ("ThreadId 200", 2, False)}
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 3.143002025000
  min duration 3.009716031000
  total durat. 12.323950954000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 20
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 13
      , alphabet_size = 7
      , total_length = 215}
    , self = 93
    , parent = Nothing
    , duration = 3.009716031000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:37:28.388033306 UTC
    , finish = 2025-09-03 13:37:31.397749337 UTC
    , thread_cap_info = ("ThreadId 144", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 24
      , num_strict_rules = 11
      , num_top_rules = 11
      , num_weak_rules = 13
      , alphabet_size = 7
      , total_length = 276}
    , self = 81
    , parent = Nothing
    , duration = 3.069160360000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:37:23.496353225 UTC
    , finish = 2025-09-03 13:37:26.565513585 UTC
    , thread_cap_info = ("ThreadId 119", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 17
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 13
      , alphabet_size = 7
      , total_length = 157}
    , self = 105
    , parent = Nothing
    , duration = 3.102072538000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:37:35.576773577 UTC
    , finish = 2025-09-03 13:37:38.678846115 UTC
    , thread_cap_info = ("ThreadId 163", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 15
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 13
      , alphabet_size = 7
      , total_length = 139}
    , self = 116
    , parent = Nothing
    , duration = 3.143002025000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:37:42.59739682 UTC
    , finish = 2025-09-03 13:37:45.740398845 UTC
    , thread_cap_info = ("ThreadId 181", 2, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.290308606000
  min duration 1.290308606000
  total durat. 1.290308606000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 27
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 9
      , total_length = 261}
    , self = 77
    , parent = Nothing
    , duration = 1.290308606000
    , status = Fail
    , start = 2025-09-03 13:37:22.756019855 UTC
    , finish = 2025-09-03 13:37:24.046328461 UTC
    , thread_cap_info = ("ThreadId 95", 3, False)}
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 3.074910121000
  min duration 3.007904852000
  total durat. 21.319049612000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 20
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 13
      , alphabet_size = 7
      , total_length = 215}
    , self = 94
    , parent = Nothing
    , duration = 3.007904852000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:37:28.405074053 UTC
    , finish = 2025-09-03 13:37:31.412978905 UTC
    , thread_cap_info = ("ThreadId 145", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 15
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 13
      , alphabet_size = 7
      , total_length = 139}
    , self = 115
    , parent = Nothing
    , duration = 3.024590482000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:37:42.617112426 UTC
    , finish = 2025-09-03 13:37:45.641702908 UTC
    , thread_cap_info = ("ThreadId 182", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 13
      , alphabet_size = 7
      , total_length = 130}
    , self = 129
    , parent = Nothing
    , duration = 3.046633289000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:37:49.057176356 UTC
    , finish = 2025-09-03 13:37:52.103809645 UTC
    , thread_cap_info = ("ThreadId 201", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 24
      , num_strict_rules = 11
      , num_top_rules = 11
      , num_weak_rules = 13
      , alphabet_size = 7
      , total_length = 276}
    , self = 82
    , parent = Nothing
    , duration = 3.051307101000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:37:23.516029921 UTC
    , finish = 2025-09-03 13:37:26.567337022 UTC
    , thread_cap_info = ("ThreadId 120", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 17
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 13
      , alphabet_size = 7
      , total_length = 157}
    , self = 104
    , parent = Nothing
    , duration = 3.051405771000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:37:35.603737597 UTC
    , finish = 2025-09-03 13:37:38.655143368 UTC
    , thread_cap_info = ("ThreadId 164", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 13
      , alphabet_size = 7
      , total_length = 120}
    , self = 80
    , parent = Nothing
    , duration = 3.062297996000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:37:23.337087857 UTC
    , finish = 2025-09-03 13:37:26.399385853 UTC
    , thread_cap_info = ("ThreadId 117", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 13
      , alphabet_size = 7
      , total_length = 123}
    , self = 141
    , parent = Nothing
    , duration = 3.074910121000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:37:55.021127616 UTC
    , finish = 2025-09-03 13:37:58.096037737 UTC
    , thread_cap_info = ("ThreadId 216", 2, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 4
  max duration 4.014175036000
  min duration 2.876607391000
  total durat. 13.736327419000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 15
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 13
      , alphabet_size = 7
      , total_length = 139}
    , self = 120
    , parent = Nothing
    , duration = 2.876607391000
    , status = Success
    , start = 2025-09-03 13:37:45.838002948 UTC
    , finish = 2025-09-03 13:37:48.714610339 UTC
    , thread_cap_info = ("ThreadId 187", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 13
      , alphabet_size = 7
      , total_length = 130}
    , self = 130
    , parent = Nothing
    , duration = 3.402379558000
    , status = Success
    , start = 2025-09-03 13:37:51.435002505 UTC
    , finish = 2025-09-03 13:37:54.837382063 UTC
    , thread_cap_info = ("ThreadId 206", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 17
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 13
      , alphabet_size = 7
      , total_length = 157}
    , self = 108
    , parent = Nothing
    , duration = 3.443165434000
    , status = Success
    , start = 2025-09-03 13:37:38.757979743 UTC
    , finish = 2025-09-03 13:37:42.201145177 UTC
    , thread_cap_info = ("ThreadId 170", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 13
      , alphabet_size = 7
      , total_length = 123}
    , self = 142
    , parent = Nothing
    , duration = 4.014175036000
    , status = Success
    , start = 2025-09-03 13:37:57.077522069 UTC
    , finish = 2025-09-03 13:38:01.091697105 UTC
    , thread_cap_info = ("ThreadId 223", 2, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.659988562000
  min duration 2.659988562000
  total durat. 2.659988562000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 13
      , alphabet_size = 7
      , total_length = 120}
    , self = 83
    , parent = Nothing
    , duration = 2.659988562000
    , status = Fail
    , start = 2025-09-03 13:37:24.896048936 UTC
    , finish = 2025-09-03 13:37:27.556037498 UTC
    , thread_cap_info = ("ThreadId 128", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 3.848747904000
  min duration 1.620716021000
  total durat. 5.469463925000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 24
      , num_strict_rules = 11
      , num_top_rules = 11
      , num_weak_rules = 13
      , alphabet_size = 7
      , total_length = 276}
    , self = 86
    , parent = Nothing
    , duration = 1.620716021000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:37:26.636132286 UTC
    , finish = 2025-09-03 13:37:28.256848307 UTC
    , thread_cap_info = ("ThreadId 135", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 20
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 13
      , alphabet_size = 7
      , total_length = 215}
    , self = 99
    , parent = Nothing
    , duration = 3.848747904000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:37:31.516034691 UTC
    , finish = 2025-09-03 13:37:35.364782595 UTC
    , thread_cap_info = ("ThreadId 152", 2, False)}
Except "<<timeout>>" : "Matrix\n { monotone = Weak\n , domain = Arctic\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 15.140331431000
  min duration 15.140331431000
  total durat. 15.140331431000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Arctic\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 5\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 13
      , alphabet_size = 7
      , total_length = 120}
    , self = 118
    , parent = Nothing
    , duration = 15.140331431000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:37:33.116758141 UTC
    , finish = 2025-09-03 13:37:48.257089572 UTC
    , thread_cap_info = ("ThreadId 156", 2, False)}
Except "<<timeout>>" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 2\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 15.166950733000
  min duration 15.166950733000
  total durat. 15.166950733000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 2\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 5\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 13
      , alphabet_size = 7
      , total_length = 120}
    , self = 139
    , parent = Nothing
    , duration = 15.166950733000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:37:41.196442188 UTC
    , finish = 2025-09-03 13:37:56.363392921 UTC
    , thread_cap_info = ("ThreadId 175", 2, False)}
Success : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 2.916485633000
  min duration 1.795232074000
  total durat. 6.872761439000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 15
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 13
      , alphabet_size = 7
      , total_length = 139}
    , self = 119
    , parent = Nothing
    , duration = 1.795232074000
    , status = Success
    , start = 2025-09-03 13:37:46.91879528 UTC
    , finish = 2025-09-03 13:37:48.714027354 UTC
    , thread_cap_info = ("ThreadId 190", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 20
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 13
      , alphabet_size = 7
      , total_length = 215}
    , self = 97
    , parent = Nothing
    , duration = 2.161043732000
    , status = Success
    , start = 2025-09-03 13:37:32.798909497 UTC
    , finish = 2025-09-03 13:37:34.959953229 UTC
    , thread_cap_info = ("ThreadId 155", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 13
      , alphabet_size = 7
      , total_length = 123}
    , self = 144
    , parent = Nothing
    , duration = 2.916485633000
    , status = Success
    , start = 2025-09-03 13:37:58.242798777 UTC
    , finish = 2025-09-03 13:38:01.15928441 UTC
    , thread_cap_info = ("ThreadId 225", 2, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.485841322000
  min duration 2.485841322000
  total durat. 2.485841322000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 13
      , alphabet_size = 7
      , total_length = 120}
    , self = 92
    , parent = Nothing
    , duration = 2.485841322000
    , status = Fail
    , start = 2025-09-03 13:37:26.537926457 UTC
    , finish = 2025-09-03 13:37:29.023767779 UTC
    , thread_cap_info = ("ThreadId 130", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 2.750865350000
  min duration 2.529239296000
  total durat. 5.280104646000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 17
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 13
      , alphabet_size = 7
      , total_length = 157}
    , self = 110
    , parent = Nothing
    , duration = 2.529239296000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:37:39.841878682 UTC
    , finish = 2025-09-03 13:37:42.371117978 UTC
    , thread_cap_info = ("ThreadId 172", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 13
      , alphabet_size = 7
      , total_length = 130}
    , self = 132
    , parent = Nothing
    , duration = 2.750865350000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:37:52.165180515 UTC
    , finish = 2025-09-03 13:37:54.916045865 UTC
    , thread_cap_info = ("ThreadId 208", 2, False)}
Except "<<timeout>>" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 12.415362192000
  min duration 12.415362192000
  total durat. 12.415362192000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 13
      , alphabet_size = 7
      , total_length = 120}
    , self = 107
    , parent = Nothing
    , duration = 12.415362192000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 13:37:28.737660212 UTC
    , finish = 2025-09-03 13:37:41.153022404 UTC
    , thread_cap_info = ("ThreadId 146", 2, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.471935283000
  min duration 1.471935283000
  total durat. 1.471935283000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 24
      , num_strict_rules = 11
      , num_top_rules = 11
      , num_weak_rules = 13
      , alphabet_size = 7
      , total_length = 276}
    , self = 84
    , parent = Nothing
    , duration = 1.471935283000
    , status = Success
    , start = 2025-09-03 13:37:26.619153234 UTC
    , finish = 2025-09-03 13:37:28.091088517 UTC
    , thread_cap_info = ("ThreadId 134", 2, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 1.238352844000
  min duration 0.406144190000
  total durat. 5.390079460000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 17
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 13
      , alphabet_size = 7
      , total_length = 157}
    , self = 106
    , parent = Nothing
    , duration = 1.047566546000
    , status = Fail
    , start = 2025-09-03 13:37:38.696346387 UTC
    , finish = 2025-09-03 13:37:39.743912933 UTC
    , thread_cap_info = ("ThreadId 169", 2, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 15
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 13
      , alphabet_size = 7
      , total_length = 139}
    , self = 117
    , parent = Nothing
    , duration = 1.146254437000
    , status = Fail
    , start = 2025-09-03 13:37:45.696041204 UTC
    , finish = 2025-09-03 13:37:46.842295641 UTC
    , thread_cap_info = ("ThreadId 186", 2, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 20
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 13
      , alphabet_size = 7
      , total_length = 215}
    , self = 95
    , parent = Nothing
    , duration = 1.238352844000
    , status = Fail
    , start = 2025-09-03 13:37:31.460943356 UTC
    , finish = 2025-09-03 13:37:32.6992962 UTC
    , thread_cap_info = ("ThreadId 151", 2, False)}
Fail : "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.846436445000
  min duration 3.846436445000
  total durat. 3.846436445000
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 13
      , alphabet_size = 7
      , total_length = 120}
    , self = 96
    , parent = Nothing
    , duration = 3.846436445000
    , status = Fail
    , start = 2025-09-03 13:37:29.156739106 UTC
    , finish = 2025-09-03 13:37:33.003175551 UTC
    , thread_cap_info = ("ThreadId 147", 2, False)}
Fail : "QPI\n { dim = 6\n , bits = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 7.598402889000
  min duration 7.598402889000
  total durat. 7.598402889000
  Info
    { what = "QPI\n  { dim = 6\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 13
      , alphabet_size = 7
      , total_length = 120}
    , self = 137
    , parent = Nothing
    , duration = 7.598402889000
    , status = Fail
    , start = 2025-09-03 13:37:48.376035117 UTC
    , finish = 2025-09-03 13:37:55.974438006 UTC
    , thread_cap_info = ("ThreadId 194", 2, False)}
**************************************************
F            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
F            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
F            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
F            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
F            = Size { num_rules = 8 , num_strict_rules = 8 , num_top_rules = 0 , num_weak_rules
F            = 0 , alphabet_size = 6 , total_length = 91} , self = 54 , parent = Nothing
F            , duration = 0.346282288000 , status = Fail , start = 2025-09-03 13:37:22.658565155
F            UTC , finish = 2025-09-03 13:37:23.004847443 UTC , thread_cap_info = ("ThreadId
F            43", 2, False)}
F            
| F          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F          = Size { num_rules = 8 , num_strict_rules = 8 , num_top_rules = 0 , num_weak_rules
| F          = 0 , alphabet_size = 6 , total_length = 91} , self = 58 , parent = Nothing
| F          , duration = 0.498036638000 , status = Fail , start = 2025-09-03 13:37:22.658570101
| F          UTC , finish = 2025-09-03 13:37:23.156606739 UTC , thread_cap_info = ("ThreadId
| F          45", 2, False)}
| F          
| | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F        = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | F        = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F        = 261} , self = 76 , parent = Nothing , duration = 1.083008588000 , status
| | F        = Fail , start = 2025-09-03 13:37:22.736266014 UTC , finish = 2025-09-03
| | F        13:37:23.819274602 UTC , thread_cap_info = ("ThreadId 93", 3, False)}
| | F        
| | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | F      = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | F      = 261} , self = 77 , parent = Nothing , duration = 1.290308606000 , status
| | | F      = Fail , start = 2025-09-03 13:37:22.756019855 UTC , finish = 2025-09-03
| | | F      13:37:24.046328461 UTC , thread_cap_info = ("ThreadId 95", 3, False)}
| | | F      
F | | |      
  F | |      
F   | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F   | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F   | |      = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
F   | |      = 1 , num_top_rules = 1 , num_weak_rules = 13 , alphabet_size = 7 , total_length
F   | |      = 120} , self = 78 , parent = Nothing , duration = 0.900257483000 , status
F   | |      = Fail , start = 2025-09-03 13:37:23.316028102 UTC , finish = 2025-09-03
F   | |      13:37:24.216285585 UTC , thread_cap_info = ("ThreadId 116", 2, False)}
F   | |      
| E | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| E | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E | |      = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| E | |      = 1 , num_top_rules = 1 , num_weak_rules = 13 , alphabet_size = 7 , total_length
| E | |      = 120} , self = 80 , parent = Nothing , duration = 3.062297996000 , status
| E | |      = Except "<<timeout>>" , start = 2025-09-03 13:37:23.337087857 UTC , finish
| E | |      = 2025-09-03 13:37:26.399385853 UTC , thread_cap_info = ("ThreadId 117",
| E | |      2, False)}
| E | |      
| | | | E    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | E    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | E    = False\n , verbose = False}" , input_size = Size { num_rules = 24 , num_strict_rules
| | | | E    = 11 , num_top_rules = 11 , num_weak_rules = 13 , alphabet_size = 7 , total_length
| | | | E    = 276} , self = 81 , parent = Nothing , duration = 3.069160360000 , status
| | | | E    = Except "<<timeout>>" , start = 2025-09-03 13:37:23.496353225 UTC , finish
| | | | E    = 2025-09-03 13:37:26.565513585 UTC , thread_cap_info = ("ThreadId 119",
| | | | E    2, False)}
| | | | E    
| | | | | E  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | E  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | E  = False\n , verbose = False}" , input_size = Size { num_rules = 24 , num_strict_rules
| | | | | E  = 11 , num_top_rules = 11 , num_weak_rules = 13 , alphabet_size = 7 , total_length
| | | | | E  = 276} , self = 82 , parent = Nothing , duration = 3.051307101000 , status
| | | | | E  = Except "<<timeout>>" , start = 2025-09-03 13:37:23.516029921 UTC , finish
| | | | | E  = 2025-09-03 13:37:26.567337022 UTC , thread_cap_info = ("ThreadId 120",
| | | | | E  2, False)}
| | | | | E  
| | F | | |  
| |   F | |  
F |     | |  
F |     | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F |     | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F |     | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F |     | |  = 14 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 13 ,
F |     | |  alphabet_size = 7 , total_length = 120} , self = 79 , parent = Nothing
F |     | |  , duration = 0.406144190000 , status = Fail , start = 2025-09-03 13:37:24.3560395
F |     | |  UTC , finish = 2025-09-03 13:37:24.76218369 UTC , thread_cap_info = ("ThreadId
F |     | |  126", 2, False)}
F |     | |  
F |     | |  
F |     | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
F |     | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
F |     | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
F |     | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F |     | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F |     | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
F |     | |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 13 , alphabet_size
F |     | |  = 7 , total_length = 120} , self = 83 , parent = Nothing , duration = 2.659988562000
F |     | |  , status = Fail , start = 2025-09-03 13:37:24.896048936 UTC , finish =
F |     | |  2025-09-03 13:37:27.556037498 UTC , thread_cap_info = ("ThreadId 128",
F |     | |  2, False)}
F |     | |  
| E     | |  
| F     | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| F     | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F     | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F     | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F     | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F     | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
| F     | |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 13 , alphabet_size
| F     | |  = 7 , total_length = 120} , self = 92 , parent = Nothing , duration = 2.485841322000
| F     | |  , status = Fail , start = 2025-09-03 13:37:26.537926457 UTC , finish =
| F     | |  2025-09-03 13:37:29.023767779 UTC , thread_cap_info = ("ThreadId 130",
| F     | |  2, False)}
| F     | |  
| |     E |  
| |       E  
| | S        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S        = 24 , num_strict_rules = 11 , num_top_rules = 11 , num_weak_rules = 13
| | S        , alphabet_size = 7 , total_length = 276} , self = 84 , parent = Nothing
| | S        , duration = 1.471935283000 , status = Success , start = 2025-09-03 13:37:26.619153234
| | S        UTC , finish = 2025-09-03 13:37:28.091088517 UTC , thread_cap_info = ("ThreadId
| | S        134", 2, False)}
| | S        
| | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 24
| | | E      , num_strict_rules = 11 , num_top_rules = 11 , num_weak_rules = 13 , alphabet_size
| | | E      = 7 , total_length = 276} , self = 86 , parent = Nothing , duration = 1.620716021000
| | | E      , status = Except "AsyncCancelled" , start = 2025-09-03 13:37:26.636132286
| | | E      UTC , finish = 2025-09-03 13:37:28.256848307 UTC , thread_cap_info = ("ThreadId
| | | E      135", 2, False)}
| | | E      
F | | |      
F | | |      Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
F | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | |      = 14 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 13 ,
F | | |      alphabet_size = 7 , total_length = 120} , self = 91 , parent = Nothing
F | | |      , duration = 0.873077181000 , status = Fail , start = 2025-09-03 13:37:27.776488316
F | | |      UTC , finish = 2025-09-03 13:37:28.649565497 UTC , thread_cap_info = ("ThreadId
F | | |      137", 2, False)}
F | | |      
| | S |      
| |   E      
| | E        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | E        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E        = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| | E        = 7 , num_top_rules = 7 , num_weak_rules = 13 , alphabet_size = 7 , total_length
| | E        = 215} , self = 93 , parent = Nothing , duration = 3.009716031000 , status
| | E        = Except "<<timeout>>" , start = 2025-09-03 13:37:28.388033306 UTC , finish
| | E        = 2025-09-03 13:37:31.397749337 UTC , thread_cap_info = ("ThreadId 144",
| | E        2, False)}
| | E        
| | | E      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | E      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E      = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| | | E      = 7 , num_top_rules = 7 , num_weak_rules = 13 , alphabet_size = 7 , total_length
| | | E      = 215} , self = 94 , parent = Nothing , duration = 3.007904852000 , status
| | | E      = Except "<<timeout>>" , start = 2025-09-03 13:37:28.405074053 UTC , finish
| | | E      = 2025-09-03 13:37:31.412978905 UTC , thread_cap_info = ("ThreadId 145",
| | | E      2, False)}
| | | E      
F | | |      
E | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E | | |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E | | |      , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
E | | |      , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 13 , alphabet_size
E | | |      = 7 , total_length = 120} , self = 107 , parent = Nothing , duration =
E | | |      12.415362192000 , status = Except "<<timeout>>" , start = 2025-09-03 13:37:28.737660212
E | | |      UTC , finish = 2025-09-03 13:37:41.153022404 UTC , thread_cap_info = ("ThreadId
E | | |      146", 2, False)}
E | | |      
| F | |      
| F | |      Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
| F | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | |      = 14 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 13 ,
| F | |      alphabet_size = 7 , total_length = 120} , self = 96 , parent = Nothing
| F | |      , duration = 3.846436445000 , status = Fail , start = 2025-09-03 13:37:29.156739106
| F | |      UTC , finish = 2025-09-03 13:37:33.003175551 UTC , thread_cap_info = ("ThreadId
| F | |      147", 2, False)}
| F | |      
| | E |      
| |   E      
| | F        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F        = 20 , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 13 ,
| | F        alphabet_size = 7 , total_length = 215} , self = 95 , parent = Nothing
| | F        , duration = 1.238352844000 , status = Fail , start = 2025-09-03 13:37:31.460943356
| | F        UTC , finish = 2025-09-03 13:37:32.6992962 UTC , thread_cap_info = ("ThreadId
| | F        151", 2, False)}
| | F        
| | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 20
| | | E      , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 13 , alphabet_size
| | | E      = 7 , total_length = 215} , self = 99 , parent = Nothing , duration = 3.848747904000
| | | E      , status = Except "AsyncCancelled" , start = 2025-09-03 13:37:31.516034691
| | | E      UTC , finish = 2025-09-03 13:37:35.364782595 UTC , thread_cap_info = ("ThreadId
| | | E      152", 2, False)}
| | | E      
| | F |      
| | S |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | S |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | S |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | S |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 20
| | S |      , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 13 , alphabet_size
| | S |      = 7 , total_length = 215} , self = 97 , parent = Nothing , duration = 2.161043732000
| | S |      , status = Success , start = 2025-09-03 13:37:32.798909497 UTC , finish
| | S |      = 2025-09-03 13:37:34.959953229 UTC , thread_cap_info = ("ThreadId 155",
| | S |      2, False)}
| | S |      
| F | |      
| E | |      Info { what = "Matrix\n { monotone = Weak\n , domain = Arctic\n , method
| E | |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| E | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | |      , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
| E | |      , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 13 , alphabet_size
| E | |      = 7 , total_length = 120} , self = 118 , parent = Nothing , duration =
| E | |      15.140331431000 , status = Except "<<timeout>>" , start = 2025-09-03 13:37:33.116758141
| E | |      UTC , finish = 2025-09-03 13:37:48.257089572 UTC , thread_cap_info = ("ThreadId
| E | |      156", 2, False)}
| E | |      
| | S |      
| |   E      
| | E        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | E        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E        = False\n , verbose = False}" , input_size = Size { num_rules = 17 , num_strict_rules
| | E        = 4 , num_top_rules = 4 , num_weak_rules = 13 , alphabet_size = 7 , total_length
| | E        = 157} , self = 105 , parent = Nothing , duration = 3.102072538000 , status
| | E        = Except "<<timeout>>" , start = 2025-09-03 13:37:35.576773577 UTC , finish
| | E        = 2025-09-03 13:37:38.678846115 UTC , thread_cap_info = ("ThreadId 163",
| | E        2, False)}
| | E        
| | | E      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | E      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E      = False\n , verbose = False}" , input_size = Size { num_rules = 17 , num_strict_rules
| | | E      = 4 , num_top_rules = 4 , num_weak_rules = 13 , alphabet_size = 7 , total_length
| | | E      = 157} , self = 104 , parent = Nothing , duration = 3.051405771000 , status
| | | E      = Except "<<timeout>>" , start = 2025-09-03 13:37:35.603737597 UTC , finish
| | | E      = 2025-09-03 13:37:38.655143368 UTC , thread_cap_info = ("ThreadId 164",
| | | E      2, False)}
| | | E      
| | | E      
| | E        
| | F        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F        = 17 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 13 ,
| | F        alphabet_size = 7 , total_length = 157} , self = 106 , parent = Nothing
| | F        , duration = 1.047566546000 , status = Fail , start = 2025-09-03 13:37:38.696346387
| | F        UTC , finish = 2025-09-03 13:37:39.743912933 UTC , thread_cap_info = ("ThreadId
| | F        169", 2, False)}
| | F        
| | | S      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | S      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 17
| | | S      , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 13 , alphabet_size
| | | S      = 7 , total_length = 157} , self = 108 , parent = Nothing , duration =
| | | S      3.443165434000 , status = Success , start = 2025-09-03 13:37:38.757979743
| | | S      UTC , finish = 2025-09-03 13:37:42.201145177 UTC , thread_cap_info = ("ThreadId
| | | S      170", 2, False)}
| | | S      
| | F |      
| | E |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | E |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | E |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | E |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 17
| | E |      , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 13 , alphabet_size
| | E |      = 7 , total_length = 157} , self = 110 , parent = Nothing , duration =
| | E |      2.529239296000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | E |      13:37:39.841878682 UTC , finish = 2025-09-03 13:37:42.371117978 UTC , thread_cap_info
| | E |      = ("ThreadId 172", 2, False)}
| | E |      
E | | |      
E | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E | | |      = Direct\n , shape = Cornered\n , bits = 2\n , compress = True\n , remove
E | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E | | |      , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
E | | |      , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 13 , alphabet_size
E | | |      = 7 , total_length = 120} , self = 139 , parent = Nothing , duration =
E | | |      15.166950733000 , status = Except "<<timeout>>" , start = 2025-09-03 13:37:41.196442188
E | | |      UTC , finish = 2025-09-03 13:37:56.363392921 UTC , thread_cap_info = ("ThreadId
E | | |      175", 2, False)}
E | | |      
| | | S      
| | E        
| | E        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | E        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E        = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | E        = 2 , num_top_rules = 2 , num_weak_rules = 13 , alphabet_size = 7 , total_length
| | E        = 139} , self = 116 , parent = Nothing , duration = 3.143002025000 , status
| | E        = Except "<<timeout>>" , start = 2025-09-03 13:37:42.59739682 UTC , finish
| | E        = 2025-09-03 13:37:45.740398845 UTC , thread_cap_info = ("ThreadId 181",
| | E        2, False)}
| | E        
| | | E      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | E      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E      = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | | E      = 2 , num_top_rules = 2 , num_weak_rules = 13 , alphabet_size = 7 , total_length
| | | E      = 139} , self = 115 , parent = Nothing , duration = 3.024590482000 , status
| | | E      = Except "<<timeout>>" , start = 2025-09-03 13:37:42.617112426 UTC , finish
| | | E      = 2025-09-03 13:37:45.641702908 UTC , thread_cap_info = ("ThreadId 182",
| | | E      2, False)}
| | | E      
| | | E      
| | | F      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F      = 15 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 13 ,
| | | F      alphabet_size = 7 , total_length = 139} , self = 117 , parent = Nothing
| | | F      , duration = 1.146254437000 , status = Fail , start = 2025-09-03 13:37:45.696041204
| | | F      UTC , finish = 2025-09-03 13:37:46.842295641 UTC , thread_cap_info = ("ThreadId
| | | F      186", 2, False)}
| | | F      
| | E |      
| | S |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | S |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | S |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 15
| | S |      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 13 , alphabet_size
| | S |      = 7 , total_length = 139} , self = 120 , parent = Nothing , duration =
| | S |      2.876607391000 , status = Success , start = 2025-09-03 13:37:45.838002948
| | S |      UTC , finish = 2025-09-03 13:37:48.714610339 UTC , thread_cap_info = ("ThreadId
| | S |      187", 2, False)}
| | S |      
| | | F      
| | | S      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | S      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | S      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | S      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 15
| | | S      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 13 , alphabet_size
| | | S      = 7 , total_length = 139} , self = 119 , parent = Nothing , duration =
| | | S      1.795232074000 , status = Success , start = 2025-09-03 13:37:46.91879528
| | | S      UTC , finish = 2025-09-03 13:37:48.714027354 UTC , thread_cap_info = ("ThreadId
| | | S      190", 2, False)}
| | | S      
| E | |      
| F | |      Info { what = "QPI\n { dim = 6\n , bits = 4\n , solver = Stats (Kissatapi
| F | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | |      = 14 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 13 ,
| F | |      alphabet_size = 7 , total_length = 120} , self = 137 , parent = Nothing
| F | |      , duration = 7.598402889000 , status = Fail , start = 2025-09-03 13:37:48.376035117
| F | |      UTC , finish = 2025-09-03 13:37:55.974438006 UTC , thread_cap_info = ("ThreadId
| F | |      194", 2, False)}
| F | |      
| | | S      
| | S        
| | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F        = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | F        = 1 , num_top_rules = 1 , num_weak_rules = 13 , alphabet_size = 7 , total_length
| | F        = 130} , self = 127 , parent = Nothing , duration = 1.605124895000 , status
| | F        = Fail , start = 2025-09-03 13:37:48.999129918 UTC , finish = 2025-09-03
| | F        13:37:50.604254813 UTC , thread_cap_info = ("ThreadId 200", 2, False)}
| | F        
| | | E      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | E      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E      = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | E      = 1 , num_top_rules = 1 , num_weak_rules = 13 , alphabet_size = 7 , total_length
| | | E      = 130} , self = 129 , parent = Nothing , duration = 3.046633289000 , status
| | | E      = Except "<<timeout>>" , start = 2025-09-03 13:37:49.057176356 UTC , finish
| | | E      = 2025-09-03 13:37:52.103809645 UTC , thread_cap_info = ("ThreadId 201",
| | | E      2, False)}
| | | E      
| | F |      
| | F |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F |      = 14 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 13 ,
| | F |      alphabet_size = 7 , total_length = 130} , self = 128 , parent = Nothing
| | F |      , duration = 0.682286107000 , status = Fail , start = 2025-09-03 13:37:50.676639743
| | F |      UTC , finish = 2025-09-03 13:37:51.35892585 UTC , thread_cap_info = ("ThreadId
| | F |      204", 2, False)}
| | F |      
| | F |      
| | S |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | S |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | S |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
| | S |      , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 13 , alphabet_size
| | S |      = 7 , total_length = 130} , self = 130 , parent = Nothing , duration =
| | S |      3.402379558000 , status = Success , start = 2025-09-03 13:37:51.435002505
| | S |      UTC , finish = 2025-09-03 13:37:54.837382063 UTC , thread_cap_info = ("ThreadId
| | S |      206", 2, False)}
| | S |      
| | | E      
| | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | E      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | E      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
| | | E      , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 13 , alphabet_size
| | | E      = 7 , total_length = 130} , self = 132 , parent = Nothing , duration =
| | | E      2.750865350000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | E      13:37:52.165180515 UTC , finish = 2025-09-03 13:37:54.916045865 UTC , thread_cap_info
| | | E      = ("ThreadId 208", 2, False)}
| | | E      
| | S |      
| |   E      
| | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F        = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | F        = 3 , num_top_rules = 3 , num_weak_rules = 13 , alphabet_size = 7 , total_length
| | F        = 123} , self = 138 , parent = Nothing , duration = 0.986950617000 , status
| | F        = Fail , start = 2025-09-03 13:37:55.010180491 UTC , finish = 2025-09-03
| | F        13:37:55.997131108 UTC , thread_cap_info = ("ThreadId 215", 2, False)}
| | F        
| | | E      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | E      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E      = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | E      = 3 , num_top_rules = 3 , num_weak_rules = 13 , alphabet_size = 7 , total_length
| | | E      = 123} , self = 141 , parent = Nothing , duration = 3.074910121000 , status
| | | E      = Except "<<timeout>>" , start = 2025-09-03 13:37:55.021127616 UTC , finish
| | | E      = 2025-09-03 13:37:58.096037737 UTC , thread_cap_info = ("ThreadId 216",
| | | E      2, False)}
| | | E      
| F | |      
|   F |      
| F   |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F   |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F   |      = 16 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 13 ,
| F   |      alphabet_size = 7 , total_length = 123} , self = 140 , parent = Nothing
| F   |      , duration = 0.869475336000 , status = Fail , start = 2025-09-03 13:37:56.077934208
| F   |      UTC , finish = 2025-09-03 13:37:56.947409544 UTC , thread_cap_info = ("ThreadId
| F   |      219", 2, False)}
| F   |      
E |   |      
  F   |      
S     |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
S     |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
S     |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
S     |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
S     |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
S     |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 16
S     |      , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 13 , alphabet_size
S     |      = 7 , total_length = 123} , self = 142 , parent = Nothing , duration =
S     |      4.014175036000 , status = Success , start = 2025-09-03 13:37:57.077522069
S     |      UTC , finish = 2025-09-03 13:38:01.091697105 UTC , thread_cap_info = ("ThreadId
S     |      223", 2, False)}
S     |      
|     E      
| S          Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| S          = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| S          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| S          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 16
| S          , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 13 , alphabet_size
| S          = 7 , total_length = 123} , self = 144 , parent = Nothing , duration =
| S          2.916485633000 , status = Success , start = 2025-09-03 13:37:58.242798777
| S          UTC , finish = 2025-09-03 13:38:01.15928441 UTC , thread_cap_info = ("ThreadId
| S          225", 2, False)}
| S          
S |          
  S          
