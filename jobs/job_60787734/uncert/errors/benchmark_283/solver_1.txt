last 2360 length 10972
CNF 2360 vars 10972 clauses
last 2670 length 11795
CNF 2670 vars 11795 clauses
last 889 length 3846
last 885 length 3736
CNF 889 vars 3846 clauses
CNF 885 vars 3736 clauses
last 1201 length 5243
last 676 length 2875
CNF 1201 vars 5243 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1537, clauses: 5611
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2039, clauses: 7560
CNF 676 vars 2875 clauses
last 2039 length 7560
last 1537 length 5611
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6519, clauses: 27206
CNF 2039 vars 7560 clauses
CNF 1537 vars 5611 clauses
last 6519 length 27206
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5559, clauses: 23239
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1537, clauses: 5611, status: Unsatisfied, time: 0.13997561s
CNF 6519 vars 27206 clauses
last 5559 length 23239
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2039, clauses: 7560, status: Unsatisfied, time: 0.160100943s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3332, clauses: 13856
last 3332 length 13856
CNF 3332 vars 13856 clauses
CNF 5559 vars 23239 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3931, clauses: 16244
last 3931 length 16244
CNF 3931 vars 16244 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5559, clauses: 23239, status: Unsatisfied, time: 0.310081634s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3332, clauses: 13856, status: Unsatisfied, time: 0.267881332s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2537, clauses: 9736
last 2537 length 9736
CNF 2537 vars 9736 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2537, clauses: 9736, status: Unsatisfied, time: 0.184901541s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9601, clauses: 41876
last 9601 length 41876
CNF 9601 vars 41876 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4769, clauses: 18144
last 4769 length 18144
CNF 4769 vars 18144 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6519, clauses: 27206, status: Unsatisfied, time: 1.24076091s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3931, clauses: 16244, status: Unsatisfied, time: 0.996975995s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3356, clauses: 13139
last 3356 length 13139
CNF 3356 vars 13139 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3356, clauses: 13139, status: Satisfied, time: 0.129626084s
last 2866 length 12534
**************************************************
summary
**************************************************
SRS with 2 rules on 2 letters       mirror
SRS with 2 rules on 2 letters       DP
SRS with 5 strict rules and 2 weak rules on 4 letters       weights
SRS with 2 strict rules and 2 weak rules on 4 letters       EDG
SRS with 2 strict rules and 2 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 2 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [0, 0, 0, 0] -> [0, 0, 0, 1] {- Input 0 -}
  [1, 0, 0, 1] -> [0, 1, 0, 0] {- Input 1 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [0, 0, 0, 0] -> [1, 0, 0, 0] {- Mirror (Input 0) -}
  [1, 0, 0, 1] -> [0, 0, 1, 0] {- Mirror (Input 1) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [0, 0, 0, 0] ->= [1, 0, 0, 0] {- DP Nontop (Mirror (Input 0)) -}
  [1, 0, 0, 1] ->= [0, 0, 1, 0] {- DP Nontop (Mirror (Input 1)) -}
  [1#, 0, 0, 1] |-> [1#, 0] {- DP (Top 2) (Mirror (Input 1)) -}
  [1#, 0, 0, 1] |-> [0#] {- DP (Top 3) (Mirror (Input 1)) -}
  [1#, 0, 0, 1] |-> [0#, 1, 0] {- DP (Top 1) (Mirror (Input 1)) -}
  [1#, 0, 0, 1] |-> [0#, 0, 1, 0] {- DP (Top 0) (Mirror (Input 1)) -}
  [0#, 0, 0, 0] |-> [1#, 0, 0, 0] {- DP (Top 0) (Mirror (Input 0)) -}
reason
  (1, 1/1)
  (0, 1/1)
  (1#, 0/1)
  (0#, 0/1)
   property Termination
has value Just True
for SRS
  [0, 0, 0, 0] ->= [1, 0, 0, 0] {- DP Nontop (Mirror (Input 0)) -}
  [1, 0, 0, 1] ->= [0, 0, 1, 0] {- DP Nontop (Mirror (Input 1)) -}
  [1#, 0, 0, 1] |-> [0#, 0, 1, 0] {- DP (Top 0) (Mirror (Input 1)) -}
  CNF 2866 vars 12534 clauses
[0#, 0, 0, 0] |-> [1#, 0, 0, 0] {- DP (Top 0) (Mirror (Input 0)) -}
last 2858 length 12390
CNF 2858 vars 12390 clauses
reason
  EDG
   property Termination
has value Just True
for SRS
  [1#, 0, 0, 1] |-> [0#, 0, 1, 0] {- DP (Top 0) (Mirror (Input 1)) -}
  [0#, 0, 0, 0] |-> [1#, 0, 0, 0] {- DP (Top 0) (Mirror (Input 0)) -}
  [0, 0, 0, 0] ->= [1, 0, 0, 0] {- DP Nontop (Mirror (Input 0)) -}
  [1, 0, 0, 1] ->= [0, 0, 1, 0] {- DP Nontop (Mirror (Input 1)) -}
reason
  ( 1
  , Wk  / 0A 4A 4A 4A - \
        | 0A 4A 4A 4A - |
        | 0A 4A 4A 4A - |
        | 0A 0A 4A 4A - |
        \ -  -  -  -  - / )
  ( 0
  , Wk  / 4A 4A 4A 4A - \
        | 0A 0A 4A 4A - |
        | 0A 0A 0A 4A - |
        | 0A 0A 0A 0A - |
        \ -  -  -  -  - / )
  ( 1#
  , Wk  / 9A 12A 12A 13A - \
        | 9A 12A 12A 13A - |
        | 9A 12A 12A 13A - |
        | 9A 12A 12A 13A - |
        \ -  -   -   -   - / )
  ( 0#
  , Wk  / 11A 11A 11A 11A - \
        | 11A 11A 11A 11A - |
        | 11A 11A 11A 11A - |
        | 11A 11A 11A 11A - |
        \ -   -   -   -   - / )
   property Termination
has value Just True
for SRS
  [0, 0, 0, 0] ->= [1, 0, 0, 0] {- DP Nontop (Mirror (Input 0)) -}
  [1, 0, 0, 1] ->= [0, 0, 1, 0] {- DP Nontop (Mirror (Input 1)) -}
reason
  EDG

**************************************************
skeleton: \Mirror(2,2)\Deepee(5/2,4)\Weight\EDG(2/2,4)\Matrix{\Arctic}{4}(0/2,2)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 4
  max duration 1.685902349000
  min duration 0.054127325000
  total durat. 2.846713112000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 8
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 80}
    , self = 72
    , parent = Nothing
    , duration = 1.005666088000
    , status = Fail
    , start = 2025-09-03 11:21:51.352386126 UTC
    , finish = 2025-09-03 11:21:52.358052214 UTC
    , thread_cap_info = ("ThreadId 60", 0, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 8
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 80}
    , self = 76
    , parent = Nothing
    , duration = 1.685902349000
    , status = Fail
    , start = 2025-09-03 11:21:51.352390676 UTC
    , finish = 2025-09-03 11:21:53.038293025 UTC
    , thread_cap_info = ("ThreadId 62", 0, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.313415236000
  min duration 0.381994097000
  total durat. 1.695409333000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 32}
    , self = 74
    , parent = Nothing
    , duration = 1.313415236000
    , status = Fail
    , start = 2025-09-03 11:21:51.618703119 UTC
    , finish = 2025-09-03 11:21:52.932118355 UTC
    , thread_cap_info = ("ThreadId 109", 3, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.075307193000
  min duration 0.344899907000
  total durat. 1.420207100000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 32}
    , self = 75
    , parent = Nothing
    , duration = 1.075307193000
    , status = Fail
    , start = 2025-09-03 11:21:51.856864794 UTC
    , finish = 2025-09-03 11:21:52.932171987 UTC
    , thread_cap_info = ("ThreadId 116", 3, False)}
**************************************************
F            Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F            , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F            = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F            , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F            = False}" , input_size = Size { num_rules = 2 , num_strict_rules = 2 ,
F            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F            = 16} , self = 58 , parent = Nothing , duration = 0.175211735000 , status
F            = Fail , start = 2025-09-03 11:21:51.351364156 UTC , finish = 2025-09-03
F            11:21:51.526575891 UTC , thread_cap_info = ("ThreadId 22", 3, False)}
F            
| F          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F          = Size { num_rules = 2 , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules
| F          = 0 , alphabet_size = 2 , total_length = 16} , self = 42 , parent = Nothing
| F          , duration = 0.101017350000 , status = Fail , start = 2025-09-03 11:21:51.351426487
| F          UTC , finish = 2025-09-03 11:21:51.452443837 UTC , thread_cap_info = ("ThreadId
| F          47", 2, False)}
| F          
| | F        Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | F        , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | F        = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | F        False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | F        = Size { num_rules = 8 , num_strict_rules = 8 , num_top_rules = 0 , num_weak_rules
| | F        = 0 , alphabet_size = 4 , total_length = 80} , self = 72 , parent = Nothing
| | F        , duration = 1.005666088000 , status = Fail , start = 2025-09-03 11:21:51.352386126
| | F        UTC , finish = 2025-09-03 11:21:52.358052214 UTC , thread_cap_info = ("ThreadId
| | F        60", 0, False)}
| | F        
| | | F      Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | F      , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | F      = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | F      False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | F      = Size { num_rules = 8 , num_strict_rules = 8 , num_top_rules = 0 , num_weak_rules
| | | F      = 0 , alphabet_size = 4 , total_length = 80} , self = 76 , parent = Nothing
| | | F      , duration = 1.685902349000 , status = Fail , start = 2025-09-03 11:21:51.352390676
| | | F      UTC , finish = 2025-09-03 11:21:53.038293025 UTC , thread_cap_info = ("ThreadId
| | | F      62", 0, False)}
| | | F      
| | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | F    = 8 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | F    = 80} , self = 46 , parent = Nothing , duration = 0.120985057000 , status
| | | | F    = Fail , start = 2025-09-03 11:21:51.358448679 UTC , finish = 2025-09-03
| | | | F    11:21:51.479433736 UTC , thread_cap_info = ("ThreadId 70", 1, False)}
| | | | F    
| F | | |    
|   | | F    
F   | |      
F   | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F   | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F   | |      = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
F   | |      = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size = 3 , total_length
F   | |      = 24} , self = 67 , parent = Nothing , duration = 0.166528223000 , status
F   | |      = Fail , start = 2025-09-03 11:21:51.526923235 UTC , finish = 2025-09-03
F   | |      11:21:51.693451458 UTC , thread_cap_info = ("ThreadId 98", 3, False)}
F   | |      
| F | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | |      = 3 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size
| F | |      = 3 , total_length = 24} , self = 68 , parent = Nothing , duration = 0.208263691000
| F | |      , status = Fail , start = 2025-09-03 11:21:51.573177729 UTC , finish =
| F | |      2025-09-03 11:21:51.78144142 UTC , thread_cap_info = ("ThreadId 106", 3,
| F | |      False)}
| F | |      
| | | | F    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F    = 4 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | | | F    = 4 , total_length = 32} , self = 69 , parent = Nothing , duration = 0.224378703000
| | | | F    , status = Fail , start = 2025-09-03 11:21:51.573192254 UTC , finish =
| | | | F    2025-09-03 11:21:51.797570957 UTC , thread_cap_info = ("ThreadId 107",
| | | | F    3, False)}
| | | | F    
| | | | | F  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | F  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | F  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | F  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | F  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | | | | F  = 4 , total_length = 32} , self = 74 , parent = Nothing , duration = 1.313415236000
| | | | | F  , status = Fail , start = 2025-09-03 11:21:51.618703119 UTC , finish =
| | | | | F  2025-09-03 11:21:52.932118355 UTC , thread_cap_info = ("ThreadId 109",
| | | | | F  3, False)}
| | | | | F  
F | | | | |  
F | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
F | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
F | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
F | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
F | | | | |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size
F | | | | |  = 3 , total_length = 24} , self = 70 , parent = Nothing , duration = 0.381994097000
F | | | | |  , status = Fail , start = 2025-09-03 11:21:51.694363936 UTC , finish =
F | | | | |  2025-09-03 11:21:52.076358033 UTC , thread_cap_info = ("ThreadId 112",
F | | | | |  3, False)}
F | | | | |  
| F | | | |  
| F | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| F | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| F | | | |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size
| F | | | |  = 3 , total_length = 24} , self = 71 , parent = Nothing , duration = 0.344899907000
| F | | | |  , status = Fail , start = 2025-09-03 11:21:51.781546326 UTC , finish =
| F | | | |  2025-09-03 11:21:52.126446233 UTC , thread_cap_info = ("ThreadId 114",
| F | | | |  3, False)}
| F | | | |  
| | | | F |  
| | | | F |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | F |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | F |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | F |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | F |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | | | F |  = 4 , total_length = 32} , self = 75 , parent = Nothing , duration = 1.075307193000
| | | | F |  , status = Fail , start = 2025-09-03 11:21:51.856864794 UTC , finish =
| | | | F |  2025-09-03 11:21:52.932171987 UTC , thread_cap_info = ("ThreadId 116",
| | | | F |  3, False)}
| | | | F |  
F | | | | |  
F | | | | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
F | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | | | |  = 3 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size
F | | | | |  = 3 , total_length = 24} , self = 73 , parent = Nothing , duration = 0.370286307000
F | | | | |  , status = Fail , start = 2025-09-03 11:21:52.077431184 UTC , finish =
F | | | | |  2025-09-03 11:21:52.447717491 UTC , thread_cap_info = ("ThreadId 119",
F | | | | |  3, False)}
F | | | | |  
| F | | | |  
|   F | | |  
F     | | |  
      | | F  
      | F    
S     |      Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
S     |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S     |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S     |      = 4 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
S     |      = 4 , total_length = 32} , self = 88 , parent = Nothing , duration = 0.272237129000
S     |      , status = Success , start = 2025-09-03 11:21:52.93219383 UTC , finish
S     |      = 2025-09-03 11:21:53.204430959 UTC , thread_cap_info = ("ThreadId 125",
S     |      3, False)}
S     |      
| E   |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| E   |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| E   |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| E   |      , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E   |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E   |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| E   |      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| E   |      = 4 , total_length = 32} , self = 91 , parent = Nothing , duration = 0.300594220000
| E   |      , status = Except "AsyncCancelled" , start = 2025-09-03 11:21:52.937426186
| E   |      UTC , finish = 2025-09-03 11:21:53.238020406 UTC , thread_cap_info = ("ThreadId
| E   |      126", 3, False)}
| E   |      
| |   F      
S |          
  E          
last 4048 length 17947
