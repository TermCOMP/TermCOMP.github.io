**************************************************
summary
**************************************************
SRS with 1 rules on 2 letters       Drop
SRS with 1 rules on 2 letters       Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 2 certified by automaton with 154 states

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, a, a, b, b, a, a, a, a, b, b] -> [ a , a , b , b , a , a , a , a , b , b , a , a , b , b ] {- Input 0 -}
reason
  Drop
    property Termination
    has value Just True
    for SRS
      [b, a, a, b, b, a, a, a] -> [ a , a , b , b , a , a , a , a , b , b , a ] {- Dropped 0 3 (Input 0) -}
    reason
      Matchbound
        Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 2 certified by automaton with 154 states

   property Termination
has value Just True
for SRS
  [b, a, a, b, b, a, a, a] -> [ a , a , b , b , a , a , a , a , b , b , a ] {- Dropped 0 3 (Input 0) -}
reason
  Matchbound
    Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 2 certified by automaton with 154 states

**************************************************
skeleton: \Drop{0}{3}(1,2)\Rfcmatchbound{2}[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 6
  max duration 0.597273325000
  min duration 0.163902422000
  total durat. 2.180186510000
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 5
  max duration 1.507781170000
  min duration 0.700046631000
  total durat. 5.513572987000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 100
    , parent = Nothing
    , duration = 1.059992724000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:09:53.346462647 UTC
    , finish = 2025-09-03 13:09:54.406455371 UTC
    , thread_cap_info = ("ThreadId 178", 2, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 96
    , parent = Nothing
    , duration = 1.285924142000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:09:53.021004648 UTC
    , finish = 2025-09-03 13:09:54.30692879 UTC
    , thread_cap_info = ("ThreadId 143", 2, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 23}
    , self = 99
    , parent = Nothing
    , duration = 1.507781170000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:09:52.898668279 UTC
    , finish = 2025-09-03 13:09:54.406449449 UTC
    , thread_cap_info = ("ThreadId 138", 2, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 5
  max duration 1.090677086000
  min duration 0.620000421000
  total durat. 4.269979856000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 95
    , parent = Nothing
    , duration = 1.019291176000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:09:53.147591417 UTC
    , finish = 2025-09-03 13:09:54.166882593 UTC
    , thread_cap_info = ("ThreadId 154", 2, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 23}
    , self = 94
    , parent = Nothing
    , duration = 1.090677086000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:09:52.866448156 UTC
    , finish = 2025-09-03 13:09:53.957125242 UTC
    , thread_cap_info = ("ThreadId 137", 2, False)}
Fail : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = False}"
  total number 2
  max duration 0.887868052000
  min duration 0.275726951000
  total durat. 1.163595003000
Except "AsyncCancelled" : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = False}"
  total number 4
  max duration 1.280253439000
  min duration 0.676933137000
  total durat. 3.915616402000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 89
    , parent = Nothing
    , duration = 1.138452201000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:09:52.668211577 UTC
    , finish = 2025-09-03 13:09:53.806663778 UTC
    , thread_cap_info = ("ThreadId 63", 2, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 25}
    , self = 93
    , parent = Nothing
    , duration = 1.280253439000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:09:52.826497464 UTC
    , finish = 2025-09-03 13:09:54.106750903 UTC
    , thread_cap_info = ("ThreadId 135", 2, False)}
**************************************************
F                            Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                            , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                            = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                            , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                            = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
F                            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F                            = 25} , self = 54 , parent = Nothing , duration = 0.275726951000 , status
F                            = Fail , start = 2025-09-03 13:09:52.645795924 UTC , finish = 2025-09-03
F                            13:09:52.921522875 UTC , thread_cap_info = ("ThreadId 22", 1, False)}
F                            
| F                          Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| F                          , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| F                          = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| F                          , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| F                          = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| F                          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| F                          = 23} , self = 85 , parent = Nothing , duration = 0.887868052000 , status
| F                          = Fail , start = 2025-09-03 13:09:52.646529777 UTC , finish = 2025-09-03
| F                          13:09:53.534397829 UTC , thread_cap_info = ("ThreadId 55", 2, False)}
| F                          
| | F                        Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | F                        , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | F                        = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | F                        False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | F                        = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| | F                        = 0 , alphabet_size = 4 , total_length = 108} , self = 59 , parent = Nothing
| | F                        , duration = 0.334397077000 , status = Fail , start = 2025-09-03 13:09:52.646611941
| | F                        UTC , finish = 2025-09-03 13:09:52.981009018 UTC , thread_cap_info = ("ThreadId
| | F                        82", 3, False)}
| | F                        
| | | F                      Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | F                      , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | F                      = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | F                      False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | F                      = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| | | F                      = 0 , alphabet_size = 4 , total_length = 108} , self = 61 , parent = Nothing
| | | F                      , duration = 0.364994127000 , status = Fail , start = 2025-09-03 13:09:52.668203019
| | | F                      UTC , finish = 2025-09-03 13:09:53.033197146 UTC , thread_cap_info = ("ThreadId
| | | F                      80", 3, False)}
| | | F                      
| | | | E                    Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | E                    , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | E                    = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | E                    , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | E                    = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | E                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | E                    = 21} , self = 89 , parent = Nothing , duration = 1.138452201000 , status
| | | | E                    = Except "AsyncCancelled" , start = 2025-09-03 13:09:52.668211577 UTC ,
| | | | E                    finish = 2025-09-03 13:09:53.806663778 UTC , thread_cap_info = ("ThreadId
| | | | E                    63", 2, False)}
| | | | E                    
| | | | | E                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | E                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | E                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | E                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | E                  = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | E                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | E                  = 19} , self = 83 , parent = Nothing , duration = 0.676933137000 , status
| | | | | E                  = Except "AsyncCancelled" , start = 2025-09-03 13:09:52.689533567 UTC ,
| | | | | E                  finish = 2025-09-03 13:09:53.366466704 UTC , thread_cap_info = ("ThreadId
| | | | | E                  64", 2, False)}
| | | | | E                  
| | | | | | F                Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | F                , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | F                = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | F                False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | F                = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | F                = 0 , alphabet_size = 2 , total_length = 23} , self = 82 , parent = Nothing
| | | | | | F                , duration = 0.597273325000 , status = Fail , start = 2025-09-03 13:09:52.712573456
| | | | | | F                UTC , finish = 2025-09-03 13:09:53.309846781 UTC , thread_cap_info = ("ThreadId
| | | | | | F                99", 2, False)}
| | | | | | F                
| | | | | | | F              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | F              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | F              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | F              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | F              = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | F              = 0 , alphabet_size = 2 , total_length = 23} , self = 55 , parent = Nothing
| | | | | | | F              , duration = 0.163902422000 , status = Fail , start = 2025-09-03 13:09:52.766470843
| | | | | | | F              UTC , finish = 2025-09-03 13:09:52.930373265 UTC , thread_cap_info = ("ThreadId
| | | | | | | F              119", 2, False)}
| | | | | | | F              
| | | | | | | | S            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | S            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | S            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | S            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | S            = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | S            = 0 , alphabet_size = 2 , total_length = 21} , self = 56 , parent = Nothing
| | | | | | | | S            , duration = 0.130446001000 , status = Success , start = 2025-09-03 13:09:52.816598403
| | | | | | | | S            UTC , finish = 2025-09-03 13:09:52.947044404 UTC , thread_cap_info = ("ThreadId
| | | | | | | | S            123", 2, False)}
| | | | | | | | S            
| | | | | | | | | E          Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | | E          , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | | E          = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | | E          , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | | E          = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | E          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | E          = 17} , self = 87 , parent = Nothing , duration = 0.819977625000 , status
| | | | | | | | | E          = Except "AsyncCancelled" , start = 2025-09-03 13:09:52.826483718 UTC ,
| | | | | | | | | E          finish = 2025-09-03 13:09:53.646461343 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | E          127", 2, False)}
| | | | | | | | | E          
| | | | | | | | | | E        Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | | | E        , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | | | E        = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | | | E        , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | | | E        = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | E        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | E        = 25} , self = 93 , parent = Nothing , duration = 1.280253439000 , status
| | | | | | | | | | E        = Except "AsyncCancelled" , start = 2025-09-03 13:09:52.826497464 UTC ,
| | | | | | | | | | E        finish = 2025-09-03 13:09:54.106750903 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | E        135", 2, False)}
| | | | | | | | | | E        
| | | | | | | | | | | E      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | E      , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | E      = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | E      , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | E      max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | E      [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | E      string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | E      , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | E      = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | E      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | E      = 23} , self = 94 , parent = Nothing , duration = 1.090677086000 , status
| | | | | | | | | | | E      = Except "AsyncCancelled" , start = 2025-09-03 13:09:52.866448156 UTC ,
| | | | | | | | | | | E      finish = 2025-09-03 13:09:53.957125242 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | E      137", 2, False)}
| | | | | | | | | | | E      
| | | | | | | | | | | | E    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | E    , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | E    = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | E    , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | E    max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | E    [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | E    string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | E    , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | E    = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | E    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | E    = 23} , self = 99 , parent = Nothing , duration = 1.507781170000 , status
| | | | | | | | | | | | E    = Except "AsyncCancelled" , start = 2025-09-03 13:09:52.898668279 UTC ,
| | | | | | | | | | | | E    finish = 2025-09-03 13:09:54.406449449 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | E    138", 2, False)}
| | | | | | | | | | | | E    
F | | | | | | | | | | | |    
  | | | | | | F | | | | |    
  | | | | | |   S | | | |    
E | | | | | |     | | | |    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
E | | | | | |     | | | |    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
E | | | | | |     | | | |    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
E | | | | | |     | | | |    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
E | | | | | |     | | | |    = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
E | | | | | |     | | | |    = 0 , alphabet_size = 2 , total_length = 21} , self = 86 , parent = Nothing
E | | | | | |     | | | |    , duration = 0.419406521000 , status = Except "AsyncCancelled" , start
E | | | | | |     | | | |    = 2025-09-03 13:09:52.947056655 UTC , finish = 2025-09-03 13:09:53.366463176
E | | | | | |     | | | |    UTC , thread_cap_info = ("ThreadId 140", 2, False)}
E | | | | | |     | | | |    
| | F | | | |     | | | |    
| | E | | | |     | | | |    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | E | | | |     | | | |    , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | E | | | |     | | | |    = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | E | | | |     | | | |    , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | E | | | |     | | | |    max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | E | | | |     | | | |    [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | E | | | |     | | | |    string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | E | | | |     | | | |    , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | E | | | |     | | | |    = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | E | | | |     | | | |    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | E | | | |     | | | |    = 19} , self = 90 , parent = Nothing , duration = 0.860024135000 , status
| | E | | | |     | | | |    = Except "AsyncCancelled" , start = 2025-09-03 13:09:52.9864476 UTC , finish
| | E | | | |     | | | |    = 2025-09-03 13:09:53.846471735 UTC , thread_cap_info = ("ThreadId 142",
| | E | | | |     | | | |    2, False)}
| | E | | | |     | | | |    
| | | | | | | E   | | | |    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | E   | | | |    , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | E   | | | |    = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | E   | | | |    , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | E   | | | |    max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | E   | | | |    [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | E   | | | |    string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | E   | | | |    , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | E   | | | |    = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | E   | | | |    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | E   | | | |    = 19} , self = 96 , parent = Nothing , duration = 1.285924142000 , status
| | | | | | | E   | | | |    = Except "AsyncCancelled" , start = 2025-09-03 13:09:53.021004648 UTC ,
| | | | | | | E   | | | |    finish = 2025-09-03 13:09:54.30692879 UTC , thread_cap_info = ("ThreadId
| | | | | | | E   | | | |    143", 2, False)}
| | | | | | | E   | | | |    
| | | | | | | | E | | | |    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | E | | | |    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | E | | | |    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | E | | | |    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | E | | | |    = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | E | | | |    = 0 , alphabet_size = 2 , total_length = 19} , self = 79 , parent = Nothing
| | | | | | | | E | | | |    , duration = 0.200205627000 , status = Except "AsyncCancelled" , start
| | | | | | | | E | | | |    = 2025-09-03 13:09:53.026449447 UTC , finish = 2025-09-03 13:09:53.226655074
| | | | | | | | E | | | |    UTC , thread_cap_info = ("ThreadId 125", 2, False)}
| | | | | | | | E | | | |    
| | | F | | | | | | | | |    
| | | E | | | | | | | | |    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | E | | | | | | | | |    , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | E | | | | | | | | |    = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | E | | | | | | | | |    , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | E | | | | | | | | |    max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | E | | | | | | | | |    [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | E | | | | | | | | |    string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | E | | | | | | | | |    , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | E | | | | | | | | |    = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | E | | | | | | | | |    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | E | | | | | | | | |    = 21} , self = 95 , parent = Nothing , duration = 1.019291176000 , status
| | | E | | | | | | | | |    = Except "AsyncCancelled" , start = 2025-09-03 13:09:53.147591417 UTC ,
| | | E | | | | | | | | |    finish = 2025-09-03 13:09:54.166882593 UTC , thread_cap_info = ("ThreadId
| | | E | | | | | | | | |    154", 2, False)}
| | | E | | | | | | | | |    
| | | | | | | | E | | | |    
| | | | | | F |   | | | |    
| | | | | | E |   | | | |    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | E |   | | | |    , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | E |   | | | |    = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | E |   | | | |    , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | E |   | | | |    max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | E |   | | | |    [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | E |   | | | |    string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | E |   | | | |    , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | E |   | | | |    = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | E |   | | | |    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | E |   | | | |    = 21} , self = 100 , parent = Nothing , duration = 1.059992724000 , status
| | | | | | E |   | | | |    = Except "AsyncCancelled" , start = 2025-09-03 13:09:53.346462647 UTC ,
| | | | | | E |   | | | |    finish = 2025-09-03 13:09:54.406455371 UTC , thread_cap_info = ("ThreadId
| | | | | | E |   | | | |    178", 2, False)}
| | | | | | E |   | | | |    
E | | | | | | |   | | | |    
  | | | | E | |   | | | |    
E | | | |   | |   | | | |    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E | | | |   | |   | | | |    , closure = Forward\n , start_strict_only = True\n , max_closure_length
E | | | |   | |   | | | |    = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
E | | | |   | |   | | | |    , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
E | | | |   | |   | | | |    max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
E | | | |   | |   | | | |    [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
E | | | |   | |   | | | |    string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
E | | | |   | |   | | | |    , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E | | | |   | |   | | | |    = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
E | | | |   | |   | | | |    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
E | | | |   | |   | | | |    = 17} , self = 92 , parent = Nothing , duration = 0.679987038000 , status
E | | | |   | |   | | | |    = Except "AsyncCancelled" , start = 2025-09-03 13:09:53.406476759 UTC ,
E | | | |   | |   | | | |    finish = 2025-09-03 13:09:54.086463797 UTC , thread_cap_info = ("ThreadId
E | | | |   | |   | | | |    181", 2, False)}
E | | | |   | |   | | | |    
| | | | | E | |   | | | |    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | E | |   | | | |    , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | E | |   | | | |    = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | E | |   | | | |    , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | E | |   | | | |    max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | E | |   | | | |    [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | E | |   | | | |    string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | E | |   | | | |    , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | E | |   | | | |    = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | E | |   | | | |    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | E | |   | | | |    = 17} , self = 98 , parent = Nothing , duration = 0.959828320000 , status
| | | | | E | |   | | | |    = Except "AsyncCancelled" , start = 2025-09-03 13:09:53.426634942 UTC ,
| | | | | E | |   | | | |    finish = 2025-09-03 13:09:54.386463262 UTC , thread_cap_info = ("ThreadId
| | | | | E | |   | | | |    182", 2, False)}
| | | | | E | |   | | | |    
| | | | | | | | F | | | |    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | F | | | |    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | F | | | |    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | F | | | |    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | F | | | |    = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | F | | | |    = 0 , alphabet_size = 2 , total_length = 25} , self = 91 , parent = Nothing
| | | | | | | | F | | | |    , duration = 0.449774396000 , status = Fail , start = 2025-09-03 13:09:53.507338529
| | | | | | | | F | | | |    UTC , finish = 2025-09-03 13:09:53.957112925 UTC , thread_cap_info = ("ThreadId
| | | | | | | | F | | | |    184", 2, False)}
| | | | | | | | F | | | |    
| | | | | | | | | | | | | F  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | F  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | F  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | F  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | F  = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | F  = 0 , alphabet_size = 2 , total_length = 25} , self = 88 , parent = Nothing
| | | | | | | | | | | | | F  , duration = 0.269845163000 , status = Fail , start = 2025-09-03 13:09:53.507350831
| | | | | | | | | | | | | F  UTC , finish = 2025-09-03 13:09:53.777195994 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | F  186", 2, False)}
| | | | | | | | | | | | | F  
| F | | | | | | | | | | | |  
|   | | | | | | | E | | | |  
| E | | | | | | |   | | | |  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| E | | | | | | |   | | | |  , closure = Forward\n , start_strict_only = True\n , max_closure_length
| E | | | | | | |   | | | |  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| E | | | | | | |   | | | |  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| E | | | | | | |   | | | |  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| E | | | | | | |   | | | |  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| E | | | | | | |   | | | |  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| E | | | | | | |   | | | |  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| E | | | | | | |   | | | |  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| E | | | | | | |   | | | |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| E | | | | | | |   | | | |  = 25} , self = 97 , parent = Nothing , duration = 0.620000421000 , status
| E | | | | | | |   | | | |  = Except "AsyncCancelled" , start = 2025-09-03 13:09:53.706450059 UTC ,
| E | | | | | | |   | | | |  finish = 2025-09-03 13:09:54.32645048 UTC , thread_cap_info = ("ThreadId
| E | | | | | | |   | | | |  190", 2, False)}
| E | | | | | | |   | | | |  
| | | | | | | | | E | | | |  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | E | | | |  , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | E | | | |  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | E | | | |  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | E | | | |  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | E | | | |  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | E | | | |  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | E | | | |  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | E | | | |  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | E | | | |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | E | | | |  = 25} , self = 101 , parent = Nothing , duration = 0.700046631000 , status
| | | | | | | | | E | | | |  = Except "AsyncCancelled" , start = 2025-09-03 13:09:53.726449252 UTC ,
| | | | | | | | | E | | | |  finish = 2025-09-03 13:09:54.426495883 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | E | | | |  191", 2, False)}
| | | | | | | | | E | | | |  
| | | | | | | | | | | | | F  
| | | | E | | | | | | | |    
| | E |   | | | | | | | |    
| |   |   | | | F | | | |    
| |   |   | | |   | | E |    
E |   |   | | |   | |   |    
  |   |   | | |   | E   |    
  |   E   | | |   |     |    
  |       | | E   |     |    
  E       | |     |     |    
          E |     |     |    
            |     |     E    
            E     |          
                  E          
