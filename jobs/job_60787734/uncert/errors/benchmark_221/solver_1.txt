last 2152 length 8597
CNF 2152 vars 8597 clauses
last 2763 length 12288
CNF 2763 vars 12288 clauses
last 2297 length 12686
CNF 2297 vars 12686 clauses
last 2864 length 17112
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12624, clauses: 45086
last 12624 length 45086
CNF 2864 vars 17112 clauses
CNF 12624 vars 45086 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8116, clauses: 29167
last 8116 length 29167
CNF 8116 vars 29167 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12624, clauses: 45086, status: Satisfied, time: 0.413670157s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8116, clauses: 29167, status: Satisfied, time: 0.278648842s
last 2729 length 12154
last 2086 length 8345
CNF 2729 vars 12154 clauses
last 2392 length 13489
last 1947 length 10277
CNF 2086 vars 8345 clauses
CNF 2392 vars 13489 clauses
CNF 1947 vars 10277 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12413, clauses: 44265
last 12413 length 44265
CNF 12413 vars 44265 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7896, clauses: 28103
last 7896 length 28103
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12413, clauses: 44265, status: Satisfied, time: 0.282980019s
CNF 7896 vars 28103 clauses
last 2020 length 8093
CNF 2020 vars 8093 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 25386, clauses: 104668
last 25386 length 104668
last 2695 length 12020
CNF 2695 vars 12020 clauses
CNF 25386 vars 104668 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 25386, clauses: 104668, status: Satisfied, time: 0.394239956s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12202, clauses: 43444
last 12202 length 43444
CNF 12202 vars 43444 clauses
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
last 1928 length 10192
last 2384 length 13453
CNF 1928 vars 10192 clauses
CNF 2384 vars 13453 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12202, clauses: 43444, status: Satisfied, time: 0.711712158s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7778, clauses: 27630
last 7778 length 27630
CNF 7778 vars 27630 clauses
last 1974 length 7923
last 2688 length 11999
CNF 1974 vars 7923 clauses
CNF 2688 vars 11999 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 25340, clauses: 104492
last 25340 length 104492
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7778, clauses: 27630, status: Unsatisfied, time: 0.683053738s
CNF 25340 vars 104492 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12096, clauses: 43019
last 12096 length 43019
CNF 12096 vars 43019 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15712, clauses: 61122
last 15712 length 61122
CNF 15712 vars 61122 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 31958, clauses: 131553
last 31958 length 131553
CNF 31958 vars 131553 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12096, clauses: 43019, status: Satisfied, time: 1.281688342s
last 1930 length 7749
last 2630 length 11767
CNF 2630 vars 11767 clauses
CNF 1930 vars 7749 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15712, clauses: 61122, status: Unsatisfied, time: 1.955821799s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11792, clauses: 41886
last 11792 length 41886
CNF 11792 vars 41886 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12617, clauses: 47166
last 12617 length 47166
CNF 12617 vars 47166 clauses
[Info] pool sizes (success) 4004 seen 1698 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
**************************************************
summary
**************************************************
SRS with 22 rules on 14 letters       looping derivation
from
  [B, b, a, a, a, b, a]
to
  [BA, BA, BA, B, b, a, a, a, b, a, b, b, a, a, b, b, a, a, b, b, a, a]
via 32 steps

**************************************************
proof
**************************************************
property Termination
has value Just False
for SRS
  [B, a] -> [BA] {- Input 0 -}
  [B, b] -> [B, B] {- Input 1 -}
  [BA, a] -> [BAA] {- Input 2 -}
  [BA, b] -> [BA, B] {- Input 3 -}
  [BAA, a] -> [BAA, A] {- Input 4 -}
  [BAA, b] -> [BAAB] {- Input 5 -}
  [BAAB, a] -> [BAABA] {- Input 6 -}
  [BAAB, b] -> [BAAB, B] {- Input 7 -}
  [BAABA, a] -> [BAABA, A] {- Input 8 -}
  [BAABA, b] -> [BAABAB] {- Input 9 -}
  [BAABAB, a] -> [BAABAB, A] {- Input 10 -}
  [BAABAB, b] -> [BAABABB] {- Input 11 -}
  [BAABABB, a] -> [BAABABBA] {- Input 12 -}
  [BAABABB, b] -> [BAABABB, B] {- Input 13 -}
  [BAABABBA, a] -> [BAABABBAA] {- Input 14 -}
  [BAABABBA, b] -> [BAABABBA, B] {- Input 15 -}
  [BAABABBAA] -> [a, b, a] {- Input 16 -}
  [A, a] -> [A, A] {- Input 17 -}
  [A, b] -> [AB] {- Input 18 -}
  [AB, a] -> [ABA] {- Input 19 -}
  [AB, b] -> [AB, B] {- Input 20 -}
  [ABA] -> [b, a, a, b, a, b, b, a, a] {- Input 21 -}
reason
  Nontermination
    Derive   { from = [B, b, a, a, a, b, a], via = [(Step   { rule = 1, position = 0}, [B, B, a, a, a, b, a]), (Step   { rule = 0, position = 1}, [B, BA, a, a, b, a]), (Step   { rule = 2, position = 1}, [B, BAA, a, b, a]), (Step   { rule = 4, position = 1}, [B, BAA, A, b, a]), (Step   { rule = 18, position = 2}, [B, BAA, AB, a]), (Step   { rule = 19, position = 2}, [B, BAA, ABA]), (Step   { rule = 21, position = 2}, [B, BAA, b, a, a, b, a, b, b, a, a]), (Step   { rule = 5, position = 1}, [B, BAAB, a, a, b, a, b, b, a, a]), (Step   { rule = 6, position = 1}, [B, BAABA, a, b, a, b, b, a, a]), (Step   { rule = 8, position = 1}, [B, BAABA, A, b, a, b, b, a, a]), (Step   { rule = 18, position = 2}, [B, BAABA, AB, a, b, b, a, a]), (Step   { rule = 19, position = 2}, [B, BAABA, ABA, b, b, a, a]), (Step   { rule = 21, position = 2}, [B, BAABA, b, a, a, b, a, b, b, a, a, b, b, a, a]), (Step   { rule = 9, position = 1}, [B, BAABAB, a, a, b, a, b, b, a, a, b, b, a, a]), (Step   { rule = 10, position = 1}, [B, BAABAB, A, a, b, a, b, b, a, a, b, b, a, a]), (Step   { rule = 17, position = 2}, [B, BAABAB, A, A, b, a, b, b, a, a, b, b, a, a]), (Step   { rule = 18, position = 3}, [B, BAABAB, A, AB, a, b, b, a, a, b, b, a, a]), (Step   { rule = 19, position = 3}, [B, BAABAB, A, ABA, b, b, a, a, b, b, a, a]), (Step   { rule = 21, position = 3}, [B, BAABAB, A, b, a, a, b, a, b, b, a, a, b, b, a, a, b, b, a, a]), (Step   { rule = 18, position = 2}, [B, BAABAB, AB, a, a, b, a, b, b, a, a, b, b, a, a, b, b, a, a]), (Step   { rule = 19, position = 2}, [B, BAABAB, ABA, a, b, a, b, b, a, a, b, b, a, a, b, b, a, a]), (Step   { rule = 21, position = 2}, [B, BAABAB, b, a, a, b, a, b, b, a, a, a, b, a, b, b, a, a, b, b, a, a, b, b, a, a]), (Step   { rule = 11, position = 1}, [B, BAABABB, a, a, b, a, b, b, a, a, a, b, a, b, b, a, a, b, b, a, a, b, b, a, a]), (Step   { rule = 12, position = 1}, [B, BAABABBA, a, b, a, b, b, a, a, a, b, a, b, b, a, a, b, b, a, a, b, b, a, a]), (Step   { rule = 14, position = 1}, [B, BAABABBAA, b, a, b, b, a, a, a, b, a, b, b, a, a, b, b, a, a, b, b, a, a]), (Step   { rule = 16, position = 1}, [B, a, b, a, b, a, b, b, a, a, a, b, a, b, b, a, a, b, b, a, a, b, b, a, a]), (Step   { rule = 0, position = 0}, [BA, b, a, b, a, b, b, a, a, a, b, a, b, b, a, a, b, b, a, a, b, b, a, a]), (Step   { rule = 3, position = 0}, [BA, B, a, b, a, b, b, a, a, a, b, a, b, b, a, a, b, b, a, a, b, b, a, a]), (Step   { rule = 0, position = 1}, [BA, BA, b, a, b, b, a, a, a, b, a, b, b, a, a, b, b, a, a, b, b, a, a]), (Step   { rule = 3, position = 1}, [BA, BA, B, a, b, b, a, a, a, b, a, b, b, a, a, b, b, a, a, b, b, a, a]), (Step   { rule = 0, position = 2}, [BA, BA, BA, b, b, a, a, a, b, a, b, b, a, a, b, b, a, a, b, b, a, a]), (Step   { rule = 3, position = 2}, [BA, BA, BA, B, b, a, a, a, b, a, b, b, a, a, b, b, a, a, b, b, a, a])], to = [BA, BA, BA, B, b, a, a, a, b, a, b, b, a, a, b, b, a, a, b, b, a, a]}

**************************************************
skeleton: (22,14)\Loop{32}[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 0.512823244000
  min duration 0.062160154000
  total durat. 1.722916166000
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.091009275000
  min duration 3.091009275000
  total durat. 3.091009275000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 504
      , num_strict_rules = 504
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 166
      , total_length = 3192}
    , self = 116
    , parent = Nothing
    , duration = 3.091009275000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:11:48.13486944 UTC
    , finish = 2025-09-03 11:11:51.225878715 UTC
    , thread_cap_info = ("ThreadId 114", 3, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 0.520063153000
  min duration 0.082083228000
  total durat. 1.897491813000
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.112144221000
  min duration 3.112144221000
  total durat. 3.112144221000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 504
      , num_strict_rules = 504
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 166
      , total_length = 3192}
    , self = 117
    , parent = Nothing
    , duration = 3.112144221000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:11:48.134874829 UTC
    , finish = 2025-09-03 11:11:51.24701905 UTC
    , thread_cap_info = ("ThreadId 116", 3, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.077572509000
  min duration 1.077572509000
  total durat. 1.077572509000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 30
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 22
      , alphabet_size = 17
      , total_length = 119}
    , self = 100
    , parent = Nothing
    , duration = 1.077572509000
    , status = Success
    , start = 2025-09-03 11:11:48.584009965 UTC
    , finish = 2025-09-03 11:11:49.661582474 UTC
    , thread_cap_info = ("ThreadId 145", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 5
  max duration 1.880854802000
  min duration 0.340744786000
  total durat. 4.700662124000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 48
      , num_strict_rules = 26
      , num_top_rules = 26
      , num_weak_rules = 22
      , alphabet_size = 24
      , total_length = 170}
    , self = 111
    , parent = Nothing
    , duration = 1.257089385000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:11:49.39341205 UTC
    , finish = 2025-09-03 11:11:50.650501435 UTC
    , thread_cap_info = ("ThreadId 157", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 47
      , num_strict_rules = 25
      , num_top_rules = 25
      , num_weak_rules = 22
      , alphabet_size = 24
      , total_length = 167}
    , self = 123
    , parent = Nothing
    , duration = 1.880854802000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:11:51.383901933 UTC
    , finish = 2025-09-03 11:11:53.264756735 UTC
    , thread_cap_info = ("ThreadId 183", 0, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.611880923000
  min duration 2.611880923000
  total durat. 2.611880923000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 29
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 22
      , alphabet_size = 17
      , total_length = 116}
    , self = 130
    , parent = Nothing
    , duration = 2.611880923000
    , status = Fail
    , start = 2025-09-03 11:11:51.504707251 UTC
    , finish = 2025-09-03 11:11:54.116588174 UTC
    , thread_cap_info = ("ThreadId 184", 0, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 1.798564287000
  min duration 0.422221206000
  total durat. 4.808424465000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 48
      , num_strict_rules = 26
      , num_top_rules = 26
      , num_weak_rules = 22
      , alphabet_size = 24
      , total_length = 170}
    , self = 109
    , parent = Nothing
    , duration = 1.330764893000
    , status = Success
    , start = 2025-09-03 11:11:49.265557187 UTC
    , finish = 2025-09-03 11:11:50.59632208 UTC
    , thread_cap_info = ("ThreadId 156", 0, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 47
      , num_strict_rules = 25
      , num_top_rules = 25
      , num_weak_rules = 22
      , alphabet_size = 24
      , total_length = 167}
    , self = 121
    , parent = Nothing
    , duration = 1.798564287000
    , status = Success
    , start = 2025-09-03 11:11:51.336517947 UTC
    , finish = 2025-09-03 11:11:53.135082234 UTC
    , thread_cap_info = ("ThreadId 181", 0, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.382735290000
  min duration 1.163808849000
  total durat. 2.546544139000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 29
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 22
      , alphabet_size = 17
      , total_length = 116}
    , self = 120
    , parent = Nothing
    , duration = 1.163808849000
    , status = Fail
    , start = 2025-09-03 11:11:50.243432951 UTC
    , finish = 2025-09-03 11:11:51.4072418 UTC
    , thread_cap_info = ("ThreadId 167", 0, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 30
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 22
      , alphabet_size = 17
      , total_length = 119}
    , self = 102
    , parent = Nothing
    , duration = 1.382735290000
    , status = Fail
    , start = 2025-09-03 11:11:48.523596897 UTC
    , finish = 2025-09-03 11:11:49.906332187 UTC
    , thread_cap_info = ("ThreadId 143", 0, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 7.555669435000
  min duration 7.555669435000
  total durat. 7.555669435000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 22
      , num_strict_rules = 22
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 14
      , total_length = 84}
    , self = 131
    , parent = Nothing
    , duration = 7.555669435000
    , status = Fail
    , start = 2025-09-03 11:11:47.098351007 UTC
    , finish = 2025-09-03 11:11:54.654020442 UTC
    , thread_cap_info = ("ThreadId 43", 0, False)}
Success : "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize, epsilon_digits = 6}))\n , verbose = False\n , tracing = False}"
  total number 4
  max duration 0.827821423000
  min duration 0.001610618000
  total durat. 1.481820241000
**************************************************
F                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                , closure = Forward\n , start_strict_only = True\n , max_closure_length
F                = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                = True})" , input_size = Size { num_rules = 22 , num_strict_rules = 22
F                , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 14 , total_length
F                = 84} , self = 131 , parent = Nothing , duration = 7.555669435000 , status
F                = Fail , start = 2025-09-03 11:11:47.098351007 UTC , finish = 2025-09-03
F                11:11:54.654020442 UTC , thread_cap_info = ("ThreadId 43", 0, False)}
F                
| S              Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| S              epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| S              = Size { num_rules = 4312 , num_strict_rules = 4312 , num_top_rules = 0
| S              , num_weak_rules = 0 , alphabet_size = 196 , total_length = 25088} , self
| S              = 64 , parent = Nothing , duration = 0.827821423000 , status = Success
| S              , start = 2025-09-03 11:11:47.150736235 UTC , finish = 2025-09-03 11:11:47.978557658
| S              UTC , thread_cap_info = ("ThreadId 63", 1, False)}
| S              
| | S            Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | S            epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | S            = Size { num_rules = 3920 , num_strict_rules = 3920 , num_top_rules = 0
| | S            , num_weak_rules = 0 , alphabet_size = 196 , total_length = 22736} , self
| | S            = 63 , parent = Nothing , duration = 0.632224147000 , status = Success
| | S            , start = 2025-09-03 11:11:47.219650759 UTC , finish = 2025-09-03 11:11:47.851874906
| | S            UTC , thread_cap_info = ("ThreadId 74", 3, False)}
| | S            
| | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 50 , num_strict_rules
| | | F          = 28 , num_top_rules = 28 , num_weak_rules = 22 , alphabet_size = 24 ,
| | | F          total_length = 178} , self = 56 , parent = Nothing , duration = 0.158839480000
| | | F          , status = Fail , start = 2025-09-03 11:11:47.367634906 UTC , finish =
| | | F          2025-09-03 11:11:47.526474386 UTC , thread_cap_info = ("ThreadId 91", 0,
| | | F          False)}
| | | F          
| | | | S        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S        = 50 , num_strict_rules = 28 , num_top_rules = 28 , num_weak_rules = 22
| | | | S        , alphabet_size = 24 , total_length = 178} , self = 66 , parent = Nothing
| | | | S        , duration = 0.701458595000 , status = Success , start = 2025-09-03 11:11:47.411906615
| | | | S        UTC , finish = 2025-09-03 11:11:48.11336521 UTC , thread_cap_info = ("ThreadId
| | | | S        94", 0, False)}
| | | | S        
| | | | | F      Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | | | F      { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | | | F      = MSB_First}\n , max_size = Nothing\n , max_height = Just 5\n , initial
| | | | | F      = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | | | F      = False}" , input_size = Size { num_rules = 20 , num_strict_rules = 20
| | | | | F      , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 14 , total_length
| | | | | F      = 76} , self = 57 , parent = Nothing , duration = 0.111012617000 , status
| | | | | F      = Fail , start = 2025-09-03 11:11:47.428208776 UTC , finish = 2025-09-03
| | | | | F      11:11:47.539221393 UTC , thread_cap_info = ("ThreadId 98", 2, False)}
| | | | | F      
| | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 31 , num_strict_rules
| | | | | | F    = 9 , num_top_rules = 9 , num_weak_rules = 22 , alphabet_size = 17 , total_length
| | | | | | F    = 128} , self = 60 , parent = Nothing , duration = 0.201811742000 , status
| | | | | | F    = Fail , start = 2025-09-03 11:11:47.463760292 UTC , finish = 2025-09-03
| | | | | | F    11:11:47.665572034 UTC , thread_cap_info = ("ThreadId 96", 0, False)}
| | | | | | F    
| | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 31 , num_strict_rules
| | | | | | | F  = 9 , num_top_rules = 9 , num_weak_rules = 22 , alphabet_size = 17 , total_length
| | | | | | | F  = 128} , self = 62 , parent = Nothing , duration = 0.272399038000 , status
| | | | | | | F  = Fail , start = 2025-09-03 11:11:47.51263394 UTC , finish = 2025-09-03
| | | | | | | F  11:11:47.785032978 UTC , thread_cap_info = ("ThreadId 97", 0, False)}
| | | | | | | F  
| | | F | | | |  
| | |   | F | |  
| | | E |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E |   | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 50
| | | E |   | |  , num_strict_rules = 28 , num_top_rules = 28 , num_weak_rules = 22 , alphabet_size
| | | E |   | |  = 24 , total_length = 178} , self = 73 , parent = Nothing , duration =
| | | E |   | |  0.580724373000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | E |   | |  11:11:47.603393872 UTC , finish = 2025-09-03 11:11:48.184118245 UTC , thread_cap_info
| | | E |   | |  = ("ThreadId 101", 0, False)}
| | | E |   | |  
| | | | | F | |  Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | | | F | |  { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | | | F | |  = MSB_First}\n , max_size = Nothing\n , max_height = Just 6\n , initial
| | | | | F | |  = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | | | F | |  = False}" , input_size = Size { num_rules = 20 , num_strict_rules = 20
| | | | | F | |  , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 14 , total_length
| | | | | F | |  = 76} , self = 61 , parent = Nothing , duration = 0.110830500000 , status
| | | | | F | |  = Fail , start = 2025-09-03 11:11:47.617140641 UTC , finish = 2025-09-03
| | | | | F | |  11:11:47.727971141 UTC , thread_cap_info = ("ThreadId 102", 2, False)}
| | | | | F | |  
| | | | | | F |  
| | | | | | S |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | S |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | S |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | S |  = 31 , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 22 ,
| | | | | | S |  alphabet_size = 17 , total_length = 128} , self = 69 , parent = Nothing
| | | | | | S |  , duration = 0.422221206000 , status = Success , start = 2025-09-03 11:11:47.704095326
| | | | | | S |  UTC , finish = 2025-09-03 11:11:48.126316532 UTC , thread_cap_info = ("ThreadId
| | | | | | S |  104", 0, False)}
| | | | | | S |  
| | | | | F | |  
| | | | |   | F  
| | | | | E |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 31
| | | | | E |    , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 22 , alphabet_size
| | | | | E |    = 17 , total_length = 128} , self = 74 , parent = Nothing , duration =
| | | | | E |    0.340744786000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | E |    11:11:47.843392573 UTC , finish = 2025-09-03 11:11:48.184137359 UTC , thread_cap_info
| | | | | E |    = ("ThreadId 106", 0, False)}
| | | | | E |    
| | S | | | |    
| | F | | | |    Info { what = "Unlabel\n { accept_null_strict = True\n , produce_null_strict
| | F | | | |    = False\n , verbose = False\n , tracing = False}" , input_size = Size {
| | F | | | |    num_rules = 504 , num_strict_rules = 504 , num_top_rules = 0 , num_weak_rules
| | F | | | |    = 0 , alphabet_size = 166 , total_length = 3192} , self = 68 , parent =
| | F | | | |    Nothing , duration = 0.267862891000 , status = Fail , start = 2025-09-03
| | F | | | |    11:11:47.851893921 UTC , finish = 2025-09-03 11:11:48.119756812 UTC , thread_cap_info
| | F | | | |    = ("ThreadId 107", 3, False)}
| | F | | | |    
| S | | | | |    
|   | | S | |    
|   F |   | |    
|     |   | S    
| E   |   |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| E   |   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E   |   |      = False\n , verbose = False}" , input_size = Size { num_rules = 504 , num_strict_rules
| E   |   |      = 504 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 166 ,
| E   |   |      total_length = 3192} , self = 116 , parent = Nothing , duration = 3.091009275000
| E   |   |      , status = Except "AsyncCancelled" , start = 2025-09-03 11:11:48.13486944
| E   |   |      UTC , finish = 2025-09-03 11:11:51.225878715 UTC , thread_cap_info = ("ThreadId
| E   |   |      114", 3, False)}
| E   |   |      
| | E |   |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | E |   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E |   |      = False\n , verbose = False}" , input_size = Size { num_rules = 504 , num_strict_rules
| | E |   |      = 504 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 166 ,
| | E |   |      total_length = 3192} , self = 117 , parent = Nothing , duration = 3.112144221000
| | E |   |      , status = Except "AsyncCancelled" , start = 2025-09-03 11:11:48.134874829
| | E |   |      UTC , finish = 2025-09-03 11:11:51.24701905 UTC , thread_cap_info = ("ThreadId
| | E |   |      116", 3, False)}
| | E |   |      
| | | E   |      
| | |     E      
| | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 49 , num_strict_rules
| | | F          = 27 , num_top_rules = 27 , num_weak_rules = 22 , alphabet_size = 24 ,
| | | F          total_length = 174} , self = 88 , parent = Nothing , duration = 0.123243457000
| | | F          , status = Fail , start = 2025-09-03 11:11:48.187588479 UTC , finish =
| | | F          2025-09-03 11:11:48.310831936 UTC , thread_cap_info = ("ThreadId 123",
| | | F          0, False)}
| | | F          
| | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 30 , num_strict_rules
| | | | F        = 8 , num_top_rules = 8 , num_weak_rules = 22 , alphabet_size = 17 , total_length
| | | | F        = 119} , self = 90 , parent = Nothing , duration = 0.295229776000 , status
| | | | F        = Fail , start = 2025-09-03 11:11:48.228311563 UTC , finish = 2025-09-03
| | | | F        11:11:48.523541339 UTC , thread_cap_info = ("ThreadId 131", 0, False)}
| | | | F        
| | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 30 , num_strict_rules
| | | | | F      = 8 , num_top_rules = 8 , num_weak_rules = 22 , alphabet_size = 17 , total_length
| | | | | F      = 119} , self = 89 , parent = Nothing , duration = 0.261950156000 , status
| | | | | F      = Fail , start = 2025-09-03 11:11:48.228347023 UTC , finish = 2025-09-03
| | | | | F      11:11:48.490297179 UTC , thread_cap_info = ("ThreadId 132", 0, False)}
| | | | | F      
| | | | | | S    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | S    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | S    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | S    = 49 , num_strict_rules = 27 , num_top_rules = 27 , num_weak_rules = 22
| | | | | | S    , alphabet_size = 24 , total_length = 174} , self = 91 , parent = Nothing
| | | | | | S    , duration = 0.555415484000 , status = Success , start = 2025-09-03 11:11:48.292440618
| | | | | | S    UTC , finish = 2025-09-03 11:11:48.847856102 UTC , thread_cap_info = ("ThreadId
| | | | | | S    140", 0, False)}
| | | | | | S    
| | | F | | |    
| | | E | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E | | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 49
| | | E | | |    , num_strict_rules = 27 , num_top_rules = 27 , num_weak_rules = 22 , alphabet_size
| | | E | | |    = 24 , total_length = 174} , self = 93 , parent = Nothing , duration =
| | | E | | |    0.641248778000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | E | | |    11:11:48.327551449 UTC , finish = 2025-09-03 11:11:48.968800227 UTC , thread_cap_info
| | | E | | |    = ("ThreadId 142", 0, False)}
| | | E | | |    
| | | | | F |    
| | | | F   |    
| | | | F   |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F   |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F   |    = 30 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 22 ,
| | | | F   |    alphabet_size = 17 , total_length = 119} , self = 102 , parent = Nothing
| | | | F   |    , duration = 1.382735290000 , status = Fail , start = 2025-09-03 11:11:48.523596897
| | | | F   |    UTC , finish = 2025-09-03 11:11:49.906332187 UTC , thread_cap_info = ("ThreadId
| | | | F   |    143", 0, False)}
| | | | F   |    
| | | | | S |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | S |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | S |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | S |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | S |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | S |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 30
| | | | | S |    , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 22 , alphabet_size
| | | | | S |    = 17 , total_length = 119} , self = 100 , parent = Nothing , duration =
| | | | | S |    1.077572509000 , status = Success , start = 2025-09-03 11:11:48.584009965
| | | | | S |    UTC , finish = 2025-09-03 11:11:49.661582474 UTC , thread_cap_info = ("ThreadId
| | | | | S |    145", 0, False)}
| | | | | S |    
| | | | | | S    
| | | E | |      
| | | F | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F | |      = False\n , verbose = False}" , input_size = Size { num_rules = 48 , num_strict_rules
| | | F | |      = 26 , num_top_rules = 26 , num_weak_rules = 22 , alphabet_size = 24 ,
| | | F | |      total_length = 170} , self = 98 , parent = Nothing , duration = 0.108812084000
| | | F | |      , status = Fail , start = 2025-09-03 11:11:49.144638947 UTC , finish =
| | | F | |      2025-09-03 11:11:49.253451031 UTC , thread_cap_info = ("ThreadId 151",
| | | F | |      0, False)}
| | | F | |      
| | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 48 , num_strict_rules
| | | | | | F    = 26 , num_top_rules = 26 , num_weak_rules = 22 , alphabet_size = 24 ,
| | | | | | F    total_length = 170} , self = 99 , parent = Nothing , duration = 0.200698695000
| | | | | | F    , status = Fail , start = 2025-09-03 11:11:49.165654453 UTC , finish =
| | | | | | F    2025-09-03 11:11:49.366353148 UTC , thread_cap_info = ("ThreadId 152",
| | | | | | F    0, False)}
| | | | | | F    
| | | F | | |    
| | | S | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S | | |    = 48 , num_strict_rules = 26 , num_top_rules = 26 , num_weak_rules = 22
| | | S | | |    , alphabet_size = 24 , total_length = 170} , self = 109 , parent = Nothing
| | | S | | |    , duration = 1.330764893000 , status = Success , start = 2025-09-03 11:11:49.265557187
| | | S | | |    UTC , finish = 2025-09-03 11:11:50.59632208 UTC , thread_cap_info = ("ThreadId
| | | S | | |    156", 0, False)}
| | | S | | |    
| | | | | | F    
| | | | | | E    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 48
| | | | | | E    , num_strict_rules = 26 , num_top_rules = 26 , num_weak_rules = 22 , alphabet_size
| | | | | | E    = 24 , total_length = 170} , self = 111 , parent = Nothing , duration =
| | | | | | E    1.257089385000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | | E    11:11:49.39341205 UTC , finish = 2025-09-03 11:11:50.650501435 UTC , thread_cap_info
| | | | | | E    = ("ThreadId 157", 0, False)}
| | | | | | E    
| | | | | S |    
| | | | F   |    
| | | | F   |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F   |    = False\n , verbose = False}" , input_size = Size { num_rules = 29 , num_strict_rules
| | | | F   |    = 7 , num_top_rules = 7 , num_weak_rules = 22 , alphabet_size = 17 , total_length
| | | | F   |    = 116} , self = 107 , parent = Nothing , duration = 0.245435518000 , status
| | | | F   |    = Fail , start = 2025-09-03 11:11:49.988683833 UTC , finish = 2025-09-03
| | | | F   |    11:11:50.234119351 UTC , thread_cap_info = ("ThreadId 163", 0, False)}
| | | | F   |    
| | | | | F |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F |    = False\n , verbose = False}" , input_size = Size { num_rules = 29 , num_strict_rules
| | | | | F |    = 7 , num_top_rules = 7 , num_weak_rules = 22 , alphabet_size = 17 , total_length
| | | | | F |    = 116} , self = 108 , parent = Nothing , duration = 0.241782784000 , status
| | | | | F |    = Fail , start = 2025-09-03 11:11:50.003434639 UTC , finish = 2025-09-03
| | | | | F |    11:11:50.245217423 UTC , thread_cap_info = ("ThreadId 164", 0, False)}
| | | | | F |    
| | | | F | |    
| | | | F | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F | |    = 29 , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 22 ,
| | | | F | |    alphabet_size = 17 , total_length = 116} , self = 120 , parent = Nothing
| | | | F | |    , duration = 1.163808849000 , status = Fail , start = 2025-09-03 11:11:50.243432951
| | | | F | |    UTC , finish = 2025-09-03 11:11:51.4072418 UTC , thread_cap_info = ("ThreadId
| | | | F | |    167", 0, False)}
| | | | F | |    
| | | | | F |    
| | | S |   |    
| | |   |   E    
| | | F |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F |        = False\n , verbose = False}" , input_size = Size { num_rules = 47 , num_strict_rules
| | | F |        = 25 , num_top_rules = 25 , num_weak_rules = 22 , alphabet_size = 24 ,
| | | F |        total_length = 167} , self = 118 , parent = Nothing , duration = 0.512823244000
| | | F |        , status = Fail , start = 2025-09-03 11:11:50.790608141 UTC , finish =
| | | F |        2025-09-03 11:11:51.303431385 UTC , thread_cap_info = ("ThreadId 174",
| | | F |        0, False)}
| | | F |        
| | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 47 , num_strict_rules
| | | | | F      = 25 , num_top_rules = 25 , num_weak_rules = 22 , alphabet_size = 24 ,
| | | | | F      total_length = 167} , self = 119 , parent = Nothing , duration = 0.520063153000
| | | | | F      , status = Fail , start = 2025-09-03 11:11:50.806171769 UTC , finish =
| | | | | F      2025-09-03 11:11:51.326234922 UTC , thread_cap_info = ("ThreadId 175",
| | | | | F      0, False)}
| | | | | F      
| E | | | |      
|   E | | |      
|     F | |      
|       | F      
| S     |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S     |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S     |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S     |        = 47 , num_strict_rules = 25 , num_top_rules = 25 , num_weak_rules = 22
| S     |        , alphabet_size = 24 , total_length = 167} , self = 121 , parent = Nothing
| S     |        , duration = 1.798564287000 , status = Success , start = 2025-09-03 11:11:51.336517947
| S     |        UTC , finish = 2025-09-03 11:11:53.135082234 UTC , thread_cap_info = ("ThreadId
| S     |        181", 0, False)}
| S     |        
| | E   |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E   |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E   |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E   |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E   |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E   |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 47
| | E   |        , num_strict_rules = 25 , num_top_rules = 25 , num_weak_rules = 22 , alphabet_size
| | E   |        = 24 , total_length = 167} , self = 123 , parent = Nothing , duration =
| | E   |        1.880854802000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | E   |        11:11:51.383901933 UTC , finish = 2025-09-03 11:11:53.264756735 UTC , thread_cap_info
| | E   |        = ("ThreadId 183", 0, False)}
| | E   |        
| | |   F        
| | | F          Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | F          = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | F          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | F          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 29
| | | F          , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 22 , alphabet_size
| | | F          = 17 , total_length = 116} , self = 130 , parent = Nothing , duration =
| | | F          2.611880923000 , status = Fail , start = 2025-09-03 11:11:51.504707251
| | | F          UTC , finish = 2025-09-03 11:11:54.116588174 UTC , thread_cap_info = ("ThreadId
| | | F          184", 0, False)}
| | | F          
| S | |          
|   E |          
| F   |          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F   |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F   |          = False\n , verbose = False}" , input_size = Size { num_rules = 46 , num_strict_rules
| F   |          = 24 , num_top_rules = 24 , num_weak_rules = 22 , alphabet_size = 24 ,
| F   |          total_length = 163} , self = 129 , parent = Nothing , duration = 0.173400191000
| F   |          , status = Fail , start = 2025-09-03 11:11:53.282247674 UTC , finish =
| F   |          2025-09-03 11:11:53.455647865 UTC , thread_cap_info = ("ThreadId 192",
| F   |          0, False)}
| F   |          
| | F |          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F |          = False\n , verbose = False}" , input_size = Size { num_rules = 46 , num_strict_rules
| | F |          = 24 , num_top_rules = 24 , num_weak_rules = 22 , alphabet_size = 24 ,
| | F |          total_length = 163} , self = 128 , parent = Nothing , duration = 0.159675279000
| | F |          , status = Fail , start = 2025-09-03 11:11:53.286087083 UTC , finish =
| | F |          2025-09-03 11:11:53.445762362 UTC , thread_cap_info = ("ThreadId 193",
| | F |          0, False)}
| | F |          
| | F |          
| F   |          
|     F          
F                
S                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
S                , closure = Forward\n , start_strict_only = True\n , max_closure_length
S                = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
S                , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
S                max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
S                [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
S                string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
S                , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
S                = True})" , input_size = Size { num_rules = 22 , num_strict_rules = 22
S                , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 14 , total_length
S                = 84} , self = 132 , parent = Nothing , duration = 0.182222212000 , status
S                = Success , start = 2025-09-03 11:11:54.67200188 UTC , finish = 2025-09-03
S                11:11:54.854224092 UTC , thread_cap_info = ("ThreadId 200", 0, False)}
S                
S                
