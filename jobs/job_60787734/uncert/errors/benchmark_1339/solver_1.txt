last 4581 length 22720
last 3867 length 17555
CNF 4581 vars 22720 clauses
CNF 3867 vars 17555 clauses
last 595 length 2407
CNF 595 vars 2407 clauses
last 605 length 2590
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2558, clauses: 9180
last 2558 length 9180
CNF 605 vars 2590 clauses
CNF 2558 vars 9180 clauses
last 516 length 2087
CNF 516 vars 2087 clauses
last 640 length 2622
CNF 640 vars 2622 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2446, clauses: 8680
last 2446 length 8680
CNF 2446 vars 8680 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2558, clauses: 9180, status: Unsatisfied, time: 0.126505699s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7623, clauses: 31595
last 7623 length 31595
CNF 7623 vars 31595 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2446, clauses: 8680, status: Unsatisfied, time: 0.141316479s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4709, clauses: 18693
last 4709 length 18693
CNF 4709 vars 18693 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4798, clauses: 19029
last 4798 length 19029
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7675, clauses: 31789
last 7675 length 31789
CNF 4798 vars 19029 clauses
CNF 7675 vars 31789 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7675, clauses: 31789, status: Satisfied, time: 0.124620716s
last 533 length 2320
last 453 length 1873
CNF 533 vars 2320 clauses
CNF 453 vars 1873 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1949, clauses: 6918
last 1949 length 6918
CNF 1949 vars 6918 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1949, clauses: 6918, status: Unsatisfied, time: 0.076656538s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7623, clauses: 31595, status: Satisfied, time: 0.560803717s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6916, clauses: 28717
last 6916 length 28717
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4222, clauses: 16812
last 4222 length 16812
CNF 6916 vars 28717 clauses
CNF 4222 vars 16812 clauses
last 610 length 2500
last 446 length 1819
CNF 446 vars 1819 clauses
CNF 610 vars 2500 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2235, clauses: 7859
last 2235 length 7859
CNF 2235 vars 7859 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2235, clauses: 7859, status: Unsatisfied, time: 0.107486392s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7285, clauses: 30179
last 7285 length 30179
CNF 7285 vars 30179 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4464, clauses: 17713
last 4464 length 17713
CNF 4464 vars 17713 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6916, clauses: 28717, status: Satisfied, time: 0.727226802s
last 5701 length 23609
CNF 5701 vars 23609 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4464, clauses: 17713, status: Satisfied, time: 0.53505682s
last 7379 length 30458
last 10423 length 49796
CNF 7379 vars 30458 clauses
**************************************************
summary
**************************************************
last 12363 length 53185
CNF 10423 vars 49796 clauses
SRS with 3 rules on 3 letters       mirror
SRS with 3 rules on 3 letters       context
SRS with 5 rules on 3 letters       mirror
SRS with 5 rules on 3 letters       DP
SRS with 6 strict rules and 5 weak rules on 6 letters       weights
SRS with 4 strict rules and 5 weak rules on 5 letters       EDG
SRS with 4 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 5 weak rules on 5 letters       weights
SRS with 1 strict rules and 5 weak rules on 4 letters       EDG
SRS with 1 strict rules and 5 weak rules on 4 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 5 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a] -> [a, b, b, c] {- Input 0 -}
  [b, a] -> [] {- Input 1 -}
  [c, b] -> [a, c] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a] -> [c, b, b, a] {- Mirror (Input 0) -}
  [a, b] -> [] {- Mirror (Input 1) -}
  [b, c] -> [c, a] {- Mirror (Input 2) -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, a] -> [c, b, b, a] {- Mirror (Input 0) -}
  [a, a, b] -> [a] {- Mirror (Input 1) -}
  [b, a, b] -> [b] {- Mirror (Input 1) -}
  [c, a, b] -> [c] {- Mirror (Input 1) -}
  [b, c] -> [c, a] {- Mirror (Input 2) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a] -> [a, b, b, c] {- Input 0 -}
  [b, a, a] -> [a] {- Input 1 -}
  [b, a, b] -> [b] {- Input 1 -}
  [b, a, c] -> [c] {- Input 1 -}
  [c, b] -> [a, c] {- Input 2 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a] ->= [a, b, b, c] {- DP Nontop (Input 0) -}
  [b, a, a] ->= [a] {- DP Nontop (Input 1) -}
  [b, a, b] ->= [b] {- DP Nontop (Input 1) -}
  [b, a, c] ->= [c] {- DP Nontop (Input 1) -}
  [c, b] ->= [a, c] {- DP Nontop (Input 2) -}
  [a#, a] |-> [a#, b, b, c] {- DP (Top 0) (Input 0) -}
  [a#, a] |-> [b#, b, c] {- DP (Top 1) (Input 0) -}
  [a#, a] |-> [b#, c] {- DP (Top 2) (Input 0) -}
  [a#, a] |-> [c#] {- DP (Top 3) (Input 0) -}
  [c#, b] |-> [a#, c] {- DP (Top 0) (Input 2) -}
  [c#, b] |-> [c#] {- DP (Top 1) (Input 2) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (b#, 0/1)
  (c#, 1/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [a, b, b, c] {- DP Nontop (Input 0) -}
  [b, a, a] ->= [a] {- DP Nontop (Input 1) -}
  [b, a, b] ->= [b] {- DP Nontop (Input 1) -}
  [b, a, c] ->= [c] {- DP Nontop (Input 1) -}
  [c, b] ->= [a, c] {- DP Nontop (Input 2) -}
  [a#, a] |-> [a#, b, b, c] {- DP (Top 0) (Input 0) -}
  [a#, a] |-> [c#] {- DP (Top 3) (Input 0) -}
  [c#, b] |-> [a#, c] {- DP (Top 0) (Input 2) -}
  [c#, b] |-> [c#] {- DP (Top 1) (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a] |-> [a#, b, b, c] {- DP (Top 0) (Input 0) -}
  [a#, a] |-> [c#] {- DP (Top 3) (Input 0) -}
  [c#, b] |-> [a#, c] {- DP (Top 0) (Input 2) -}
  [c#, b] |-> [c#] {- DP (Top 1) (Input 2) -}
  [a, a] ->= [a, b, b, c] {- DP Nontop (Input 0) -}
  [b, a, a] ->= [a] {- DP Nontop (Input 1) -}
  [b, a, b] ->= [b] {- DP Nontop (Input 1) -}
  [b, a, c] ->= [c] {- DP Nontop (Input 1) -}
  [c, b] ->= [a, c] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / -  -  0A \
        | 0A 1A 1A |
        \ -  -  0A / )
  ( b
  , Wk  / 1A 0A  1A \
        | -  -1A 1A |
        \ -  -   0A / )
  ( c
  , Wk  / -1A - 0A \
        | 0A  - -  |
        \ -   - 0A / )
  ( a#
  , Wk  / - 1A 0A \
        | - -  -  |
        \ - -  0A / )
  ( c#
  , Wk  / 1A - -2A \
        | -  - -   |
        \ -  - 0A  / )
   property Termination
has value Just True
for SRS
  [a#, a] |-> [a#, b, b, c] {- DP (Top 0) (Input 0) -}
  [a#, a] |-> [c#] {- DP (Top 3) (Input 0) -}
  [a, a] ->= [a, b, b, c] {- DP Nontop (Input 0) -}
  [b, a, a] ->= [a] {- DP Nontop (Input 1) -}
  [b, a, b] ->= [b] {- DP Nontop (Input 1) -}
  [b, a, c] ->= [c] {- DP Nontop (Input 1) -}
  [c, b] ->= [a, c] {- DP Nontop (Input 2) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [a#, a] |-> [a#, b, b, c] {- DP (Top 0) (Input 0) -}
  [a, a] ->= [a, b, b, c] {- DP Nontop (Input 0) -}
  [b, a, a] ->= [a] {- DP Nontop (Input 1) -}
  [b, a, b] ->= [b] {- DP Nontop (Input 1) -}
  [b, a, c] ->= [c] {- DP Nontop (Input 1) -}
  [c, b] ->= [a, c] {- DP Nontop (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a] |-> [a#, b, b, c] {- DP (Top 0) (Input 0) -}
  [a, a] ->= [a, b, b, c] {- DP Nontop (Input 0) -}
  [b, a, a] ->= [a] {- DP Nontop (Input 1) -}
  [b, a, b] ->= [b] {- DP Nontop (Input 1) -}
  [b, a, c] ->= [c] {- DP Nontop (Input 1) -}
  [c, b] ->= [a, c] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / 1A 1A 1A  \
        | -  -  -1A |
        \ -  -  0A  / )
  ( b
  , Wk  / -1A 0A 0A \
        | -1A 1A 0A |
        \ -   -  0A / )
  ( c
  , Wk  / -1A 1A  0A  \
        | -1A -2A -1A |
        \ -   -   0A  / )
  ( a#
  , Wk  / 0A -2A 0A \
        | -  -   -  |
        \ -  -   0A / )
   property Termination
has value Just True
for SRS
  [a, a] ->= [a, b, b, c] {- DP Nontop (Input 0) -}
  [b, a, a] ->= [a] {- DP Nontop (Input 1) -}
  [b, a, b] ->= [b] {- DP Nontop (Input 1) -}
  [b, a, c] ->= [c] {- DP Nontop (Input 1) -}
  [c, b] ->= [a, c] {- DP Nontop (Input 2) -}
reason
  EDG

**************************************************
skeleton: \Mirror(3,3)\Context\Mirror(5,3)\Deepee(6/5,6)\Weight\EDG(4/5,5)\Matrix{\ArcticBZ}{3}(2/5,5)\Weight\EDG(1/5,4)\Matrix{\ArcticBZ}{3}(0/5,3)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 4
  max duration 1.483665727000
  min duration 0.008265974000
  total durat. 1.841815102000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 27
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 9
      , total_length = 162}
    , self = 90
    , parent = Nothing
    , duration = 1.483665727000
    , status = Fail
    , start = 2025-09-03 11:34:46.293548352 UTC
    , finish = 2025-09-03 11:34:47.777214079 UTC
    , thread_cap_info = ("ThreadId 59", 3, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 0.916107615000
  min duration 0.438829779000
  total durat. 1.996781169000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.032205207000
  min duration 1.032205207000
  total durat. 1.032205207000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 30}
    , self = 112
    , parent = Nothing
    , duration = 1.032205207000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:34:47.463520676 UTC
    , finish = 2025-09-03 11:34:48.495725883 UTC
    , thread_cap_info = ("ThreadId 141", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 1.018987046000
  min duration 0.341819255000
  total durat. 1.904510045000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 28}
    , self = 109
    , parent = Nothing
    , duration = 1.018987046000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:34:47.334942854 UTC
    , finish = 2025-09-03 11:34:48.3539299 UTC
    , thread_cap_info = ("ThreadId 130", 1, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.699257735000
  min duration 1.699257735000
  total durat. 1.699257735000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 114
    , parent = Nothing
    , duration = 1.699257735000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:34:46.874298363 UTC
    , finish = 2025-09-03 11:34:48.573556098 UTC
    , thread_cap_info = ("ThreadId 114", 2, False)}
**************************************************
F            Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F            , closure = Forward\n , start_strict_only = True\n , max_closure_length
F            = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F            Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F            8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F            = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F            ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F            1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F            = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F            = 12} , self = 69 , parent = Nothing , duration = 0.595411685000 , status
F            = Fail , start = 2025-09-03 11:34:46.278859432 UTC , finish = 2025-09-03
F            11:34:46.874271117 UTC , thread_cap_info = ("ThreadId 36", 0, False)}
F            
| F          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F          = Size { num_rules = 27 , num_strict_rules = 27 , num_top_rules = 0 , num_weak_rules
| F          = 0 , alphabet_size = 9 , total_length = 162} , self = 63 , parent = Nothing
| F          , duration = 0.315995497000 , status = Fail , start = 2025-09-03 11:34:46.291967216
| F          UTC , finish = 2025-09-03 11:34:46.607962713 UTC , thread_cap_info = ("ThreadId
| F          57", 3, False)}
| F          
| | F        Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | F        , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | F        = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | F        False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | F        = Size { num_rules = 27 , num_strict_rules = 27 , num_top_rules = 0 , num_weak_rules
| | F        = 0 , alphabet_size = 9 , total_length = 162} , self = 90 , parent = Nothing
| | F        , duration = 1.483665727000 , status = Fail , start = 2025-09-03 11:34:46.293548352
| | F        UTC , finish = 2025-09-03 11:34:47.777214079 UTC , thread_cap_info = ("ThreadId
| | F        59", 3, False)}
| | F        
| | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | F      = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | F      = 162} , self = 57 , parent = Nothing , duration = 0.185284290000 , status
| | | F      = Fail , start = 2025-09-03 11:34:46.293925382 UTC , finish = 2025-09-03
| | | F      11:34:46.479209672 UTC , thread_cap_info = ("ThreadId 63", 2, False)}
| | | F      
| | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | F    = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | F    = 162} , self = 56 , parent = Nothing , duration = 0.160331702000 , status
| | | | F    = Fail , start = 2025-09-03 11:34:46.318794147 UTC , finish = 2025-09-03
| | | | F    11:34:46.479125849 UTC , thread_cap_info = ("ThreadId 65", 2, False)}
| | | | F    
| | | | F    
| | | F      
| | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | F      = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | F      = 38} , self = 65 , parent = Nothing , duration = 0.104552712000 , status
| | | F      = Fail , start = 2025-09-03 11:34:46.55489066 UTC , finish = 2025-09-03
| | | F      11:34:46.659443372 UTC , thread_cap_info = ("ThreadId 97", 1, False)}
| | | F      
| | | | F    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F    = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | | F    = 5 , total_length = 38} , self = 67 , parent = Nothing , duration = 0.160583497000
| | | | F    , status = Fail , start = 2025-09-03 11:34:46.59435736 UTC , finish = 2025-09-03
| | | | F    11:34:46.754940857 UTC , thread_cap_info = ("ThreadId 102", 1, False)}
| | | | F    
| F | | |    
| F | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | | |    = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| F | | |    = 5 , total_length = 34} , self = 68 , parent = Nothing , duration = 0.184618397000
| F | | |    , status = Fail , start = 2025-09-03 11:34:46.656069309 UTC , finish =
| F | | |    2025-09-03 11:34:46.840687706 UTC , thread_cap_info = ("ThreadId 106",
| F | | |    1, False)}
| F | | |    
| | | F |    
| | | S |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | S |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | S |    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | S |    = 5 , total_length = 34} , self = 80 , parent = Nothing , duration = 0.641843775000
| | | S |    , status = Success , start = 2025-09-03 11:34:46.674565816 UTC , finish
| | | S |    = 2025-09-03 11:34:47.316409591 UTC , thread_cap_info = ("ThreadId 108",
| | | S |    1, False)}
| | | S |    
| | | | | S  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | S  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | S  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | S  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | S  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | S  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | | S  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | | | S  = 5 , total_length = 38} , self = 70 , parent = Nothing , duration = 0.438829779000
| | | | | S  , status = Success , start = 2025-09-03 11:34:46.674570005 UTC , finish
| | | | | S  = 2025-09-03 11:34:47.113399784 UTC , thread_cap_info = ("ThreadId 109",
| | | | | S  3, False)}
| | | | | S  
| | | | F |  
| | | | E |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | E |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | E |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | E |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | E |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | | E |  = 5 , total_length = 38} , self = 72 , parent = Nothing , duration = 0.341819255000
| | | | E |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:34:46.793605117
| | | | E |  UTC , finish = 2025-09-03 11:34:47.135424372 UTC , thread_cap_info = ("ThreadId
| | | | E |  112", 1, False)}
| | | | E |  
| F | | | |  
| E | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| E | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| E | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| E | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| E | | | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| E | | | |  = 5 , total_length = 34} , self = 82 , parent = Nothing , duration = 0.543703744000
| E | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:34:46.855393771
| E | | | |  UTC , finish = 2025-09-03 11:34:47.399097515 UTC , thread_cap_info = ("ThreadId
| E | | | |  113", 1, False)}
| E | | | |  
F | | | | |  
E | | | | |  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E | | | | |  , closure = Forward\n , start_strict_only = True\n , max_closure_length
E | | | | |  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
E | | | | |  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
E | | | | |  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
E | | | | |  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
E | | | | |  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
E | | | | |  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E | | | | |  = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
E | | | | |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
E | | | | |  = 12} , self = 114 , parent = Nothing , duration = 1.699257735000 , status
E | | | | |  = Except "AsyncCancelled" , start = 2025-09-03 11:34:46.874298363 UTC ,
E | | | | |  finish = 2025-09-03 11:34:48.573556098 UTC , thread_cap_info = ("ThreadId
E | | | | |  114", 2, False)}
E | | | | |  
| | | | | S  
| | | | E    
| | | | F    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F    = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | | | F    = 4 , total_length = 28} , self = 79 , parent = Nothing , duration = 0.164690514000
| | | | F    , status = Fail , start = 2025-09-03 11:34:47.150919953 UTC , finish =
| | | | F    2025-09-03 11:34:47.315610467 UTC , thread_cap_info = ("ThreadId 126",
| | | | F    1, False)}
| | | | F    
| | | | | S  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | S  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | S  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | S  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | S  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | S  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | | S  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | | | | S  = 4 , total_length = 28} , self = 104 , parent = Nothing , duration = 0.916107615000
| | | | | S  , status = Success , start = 2025-09-03 11:34:47.150922439 UTC , finish
| | | | | S  = 2025-09-03 11:34:48.067030054 UTC , thread_cap_info = ("ThreadId 127",
| | | | | S  1, False)}
| | | | | S  
| | | | F |  
| | | S   |  
| | | E   |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | E   |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | E   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | E   |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | E   |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | | E   |  = 4 , total_length = 28} , self = 109 , parent = Nothing , duration = 1.018987046000
| | | E   |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:34:47.334942854
| | | E   |  UTC , finish = 2025-09-03 11:34:48.3539299 UTC , thread_cap_info = ("ThreadId
| | | E   |  130", 1, False)}
| | | E   |  
| E | |   |  
| F | |   |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F | |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | |   |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | |   |  = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| F | |   |  = 5 , total_length = 30} , self = 89 , parent = Nothing , duration = 0.242704795000
| F | |   |  , status = Fail , start = 2025-09-03 11:34:47.447424802 UTC , finish =
| F | |   |  2025-09-03 11:34:47.690129597 UTC , thread_cap_info = ("ThreadId 140",
| F | |   |  1, False)}
| F | |   |  
| | | | E |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | E |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | E |  = 5 , total_length = 30} , self = 112 , parent = Nothing , duration = 1.032205207000
| | | | E |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:34:47.463520676
| | | | E |  UTC , finish = 2025-09-03 11:34:48.495725883 UTC , thread_cap_info = ("ThreadId
| | | | E |  141", 1, False)}
| | | | E |  
| F | | | |  
| S | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| S | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| S | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| S | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| S | | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| S | | | |  = 5 , total_length = 30} , self = 107 , parent = Nothing , duration = 0.650717078000
| S | | | |  , status = Success , start = 2025-09-03 11:34:47.696344613 UTC , finish
| S | | | |  = 2025-09-03 11:34:48.347061691 UTC , thread_cap_info = ("ThreadId 143",
| S | | | |  1, False)}
| S | | | |  
| | F | | |  
| | F | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 61 , num_strict_rules
| | F | | |  = 34 , num_top_rules = 34 , num_weak_rules = 27 , alphabet_size = 15 ,
| | F | | |  total_length = 340} , self = 106 , parent = Nothing , duration = 0.506675188000
| | F | | |  , status = Fail , start = 2025-09-03 11:34:47.82363977 UTC , finish = 2025-09-03
| | F | | |  11:34:48.330314958 UTC , thread_cap_info = ("ThreadId 157", 3, False)}
| | F | | |  
| | | | | S  
| | F | |    
| S   | |    
|     E |    
|       E    
E            
