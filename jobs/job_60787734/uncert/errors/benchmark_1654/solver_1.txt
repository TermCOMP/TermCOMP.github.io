last 8296 length 64748
CNF 8296 vars 64748 clauses
last 9694 length 109843
CNF 9694 vars 109843 clauses
**************************************************
summary
**************************************************
SRS with 1 rules on 2 letters       Drop
SRS with 1 rules on 2 letters       Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 71 states

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, a, b, a, b, a, a, b] -> [ a , a , b , a , b , a , a , b , a , b , a , b , a , b ] {- Input 0 -}
reason
  Drop
    property Termination
    has value Just True
    for SRS
      [a, b, a, b, a, b, a] -> [ a , a , b , a , b , a , a , b , a , b , a , b ] {- Dropped 0 2 (Input 0) -}
    reason
      Matchbound
        Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 71 states

   property Termination
has value Just True
for SRS
  [a, b, a, b, a, b, a] -> [ a , a , b , a , b , a , a , b , a , b , a , b ] {- Dropped 0 2 (Input 0) -}
reason
  Matchbound
    Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 71 states

**************************************************
skeleton: \Drop{0}{2}(1,2)\Rfcmatchbound{1}[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 7
  max duration 1.821314129000
  min duration 0.231148192000
  total durat. 7.790022057000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 79
    , parent = Nothing
    , duration = 1.002045094000
    , status = Fail
    , start = 2025-09-03 12:37:32.523810368 UTC
    , finish = 2025-09-03 12:37:33.525855462 UTC
    , thread_cap_info = ("ThreadId 176", 1, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 23}
    , self = 80
    , parent = Nothing
    , duration = 1.035685154000
    , status = Fail
    , start = 2025-09-03 12:37:32.649917492 UTC
    , finish = 2025-09-03 12:37:33.685602646 UTC
    , thread_cap_info = ("ThreadId 186", 1, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 82
    , parent = Nothing
    , duration = 1.376930278000
    , status = Fail
    , start = 2025-09-03 12:37:32.523829783 UTC
    , finish = 2025-09-03 12:37:33.900760061 UTC
    , thread_cap_info = ("ThreadId 178", 1, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 23}
    , self = 105
    , parent = Nothing
    , duration = 1.655774745000
    , status = Fail
    , start = 2025-09-03 12:37:32.649926579 UTC
    , finish = 2025-09-03 12:37:34.305701324 UTC
    , thread_cap_info = ("ThreadId 188", 1, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 100}
    , self = 87
    , parent = Nothing
    , duration = 1.821314129000
    , status = Fail
    , start = 2025-09-03 12:37:32.225345098 UTC
    , finish = 2025-09-03 12:37:34.046659227 UTC
    , thread_cap_info = ("ThreadId 159", 0, False)}
Except "AsyncCancelled" : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 2
  max duration 2.518613451000
  min duration 0.279995025000
  total durat. 2.798608476000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 108
    , parent = Nothing
    , duration = 2.518613451000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:31.825271503 UTC
    , finish = 2025-09-03 12:37:34.343884954 UTC
    , thread_cap_info = ("ThreadId 93", 1, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 6
  max duration 2.240019046000
  min duration 1.359525926000
  total durat. 9.959507896000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 17}
    , self = 103
    , parent = Nothing
    , duration = 1.359525926000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:32.924272709 UTC
    , finish = 2025-09-03 12:37:34.283798635 UTC
    , thread_cap_info = ("ThreadId 194", 1, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 23}
    , self = 107
    , parent = Nothing
    , duration = 1.360050612000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:32.983786354 UTC
    , finish = 2025-09-03 12:37:34.343836966 UTC
    , thread_cap_info = ("ThreadId 197", 1, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 106
    , parent = Nothing
    , duration = 1.560005335000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:32.763785717 UTC
    , finish = 2025-09-03 12:37:34.323791052 UTC
    , thread_cap_info = ("ThreadId 191", 1, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 102
    , parent = Nothing
    , duration = 1.700005537000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:32.583784613 UTC
    , finish = 2025-09-03 12:37:34.28379015 UTC
    , thread_cap_info = ("ThreadId 181", 1, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 81
    , parent = Nothing
    , duration = 1.739901440000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:32.103894611 UTC
    , finish = 2025-09-03 12:37:33.843796051 UTC
    , thread_cap_info = ("ThreadId 122", 1, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 95
    , parent = Nothing
    , duration = 2.240019046000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:31.883783595 UTC
    , finish = 2025-09-03 12:37:34.123802641 UTC
    , thread_cap_info = ("ThreadId 106", 1, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 6
  max duration 1.555739902000
  min duration 0.639624216000
  total durat. 7.051452720000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 23}
    , self = 100
    , parent = Nothing
    , duration = 1.239193766000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:32.965181769 UTC
    , finish = 2025-09-03 12:37:34.204375535 UTC
    , thread_cap_info = ("ThreadId 196", 1, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 86
    , parent = Nothing
    , duration = 1.280007575000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:32.743798144 UTC
    , finish = 2025-09-03 12:37:34.023805719 UTC
    , thread_cap_info = ("ThreadId 190", 1, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 83
    , parent = Nothing
    , duration = 1.336987159000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:32.563785568 UTC
    , finish = 2025-09-03 12:37:33.900772727 UTC
    , thread_cap_info = ("ThreadId 180", 1, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 78
    , parent = Nothing
    , duration = 1.555739902000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:31.868227774 UTC
    , finish = 2025-09-03 12:37:33.423967676 UTC
    , thread_cap_info = ("ThreadId 105", 1, False)}
Except "AsyncCancelled" : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = False}"
  total number 7
  max duration 2.604722509000
  min duration 0.519992506000
  total durat. 9.229271066000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 75
    , parent = Nothing
    , duration = 1.059953225000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:32.123851293 UTC
    , finish = 2025-09-03 12:37:33.183804518 UTC
    , thread_cap_info = ("ThreadId 124", 1, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 17}
    , self = 77
    , parent = Nothing
    , duration = 1.115319347000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:32.168480217 UTC
    , finish = 2025-09-03 12:37:33.283799564 UTC
    , thread_cap_info = ("ThreadId 137", 1, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 76
    , parent = Nothing
    , duration = 1.309716407000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:31.946432358 UTC
    , finish = 2025-09-03 12:37:33.256148765 UTC
    , thread_cap_info = ("ThreadId 110", 1, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 23}
    , self = 85
    , parent = Nothing
    , duration = 1.715756270000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:32.208434598 UTC
    , finish = 2025-09-03 12:37:33.924190868 UTC
    , thread_cap_info = ("ThreadId 145", 1, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 23}
    , self = 109
    , parent = Nothing
    , duration = 2.604722509000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:37:31.75912966 UTC
    , finish = 2025-09-03 12:37:34.363852169 UTC
    , thread_cap_info = ("ThreadId 35", 2, False)}
**************************************************
E                                            Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
E                                            , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
E                                            = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
E                                            , string_implementation = ByteString Plain\n , tracing = False\n , cpf
E                                            = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
E                                            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
E                                            = 23} , self = 109 , parent = Nothing , duration = 2.604722509000 , status
E                                            = Except "AsyncCancelled" , start = 2025-09-03 12:37:31.75912966 UTC ,
E                                            finish = 2025-09-03 12:37:34.363852169 UTC , thread_cap_info = ("ThreadId
E                                            35", 2, False)}
E                                            
| E                                          Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| E                                          , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| E                                          = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| E                                          , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| E                                          = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| E                                          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| E                                          = 21} , self = 72 , parent = Nothing , duration = 0.903810802000 , status
| E                                          = Except "AsyncCancelled" , start = 2025-09-03 12:37:31.759987176 UTC ,
| E                                          finish = 2025-09-03 12:37:32.663797978 UTC , thread_cap_info = ("ThreadId
| E                                          53", 1, False)}
| E                                          
| | F                                        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                                        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                                        = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | F                                        = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | F                                        = 100} , self = 49 , parent = Nothing , duration = 0.340500018000 , status
| | F                                        = Fail , start = 2025-09-03 12:37:31.76026956 UTC , finish = 2025-09-03
| | F                                        12:37:32.100769578 UTC , thread_cap_info = ("ThreadId 66", 0, False)}
| | F                                        
| | | F                                      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                                      = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | F                                      = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | F                                      = 100} , self = 57 , parent = Nothing , duration = 0.512180668000 , status
| | | F                                      = Fail , start = 2025-09-03 12:37:31.769870292 UTC , finish = 2025-09-03
| | | F                                      12:37:32.28205096 UTC , thread_cap_info = ("ThreadId 68", 0, False)}
| | | F                                      
| | | | F                                    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | F                                    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | F                                    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | F                                    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | F                                    = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | F                                    = 0 , alphabet_size = 2 , total_length = 21} , self = 68 , parent = Nothing
| | | | F                                    , duration = 0.667124465000 , status = Fail , start = 2025-09-03 12:37:31.783877402
| | | | F                                    UTC , finish = 2025-09-03 12:37:32.451001867 UTC , thread_cap_info = ("ThreadId
| | | | F                                    73", 1, False)}
| | | | F                                    
| | | | | E                                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | E                                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | E                                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | E                                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | E                                  = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | E                                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | E                                  = 19} , self = 58 , parent = Nothing , duration = 0.519992506000 , status
| | | | | E                                  = Except "AsyncCancelled" , start = 2025-09-03 12:37:31.803796233 UTC ,
| | | | | E                                  finish = 2025-09-03 12:37:32.323788739 UTC , thread_cap_info = ("ThreadId
| | | | | E                                  75", 1, False)}
| | | | | E                                  
| | | | | | E                                Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | E                                , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | E                                = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | E                                False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | E                                = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | E                                = 0 , alphabet_size = 2 , total_length = 21} , self = 108 , parent = Nothing
| | | | | | E                                , duration = 2.518613451000 , status = Except "AsyncCancelled" , start
| | | | | | E                                = 2025-09-03 12:37:31.825271503 UTC , finish = 2025-09-03 12:37:34.343884954
| | | | | | E                                UTC , thread_cap_info = ("ThreadId 93", 1, False)}
| | | | | | E                                
| | | | | | | E                              Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | E                              , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | E                              = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | E                              , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | E                              max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | E                              [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | E                              string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | E                              , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | E                              = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | E                              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | E                              = 21} , self = 78 , parent = Nothing , duration = 1.555739902000 , status
| | | | | | | E                              = Except "AsyncCancelled" , start = 2025-09-03 12:37:31.868227774 UTC ,
| | | | | | | E                              finish = 2025-09-03 12:37:33.423967676 UTC , thread_cap_info = ("ThreadId
| | | | | | | E                              105", 1, False)}
| | | | | | | E                              
| | | | | | | | E                            Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | E                            , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | E                            = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | E                            , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | E                            max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | E                            [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | E                            string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | E                            , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | E                            = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | E                            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | E                            = 21} , self = 95 , parent = Nothing , duration = 2.240019046000 , status
| | | | | | | | E                            = Except "AsyncCancelled" , start = 2025-09-03 12:37:31.883783595 UTC ,
| | | | | | | | E                            finish = 2025-09-03 12:37:34.123802641 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E                            106", 1, False)}
| | | | | | | | E                            
| | | | | | | | | E                          Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | | E                          , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | | E                          = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | | E                          , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | | E                          = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | E                          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | E                          = 19} , self = 76 , parent = Nothing , duration = 1.309716407000 , status
| | | | | | | | | E                          = Except "AsyncCancelled" , start = 2025-09-03 12:37:31.946432358 UTC ,
| | | | | | | | | E                          finish = 2025-09-03 12:37:33.256148765 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | E                          110", 1, False)}
| | | | | | | | | E                          
| | | | | | | | | | E                        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | E                        , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | E                        = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | E                        , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | E                        max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | E                        [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | E                        string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | E                        , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | E                        = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | E                        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | E                        = 19} , self = 73 , parent = Nothing , duration = 0.639624216000 , status
| | | | | | | | | | E                        = Except "AsyncCancelled" , start = 2025-09-03 12:37:32.084523615 UTC ,
| | | | | | | | | | E                        finish = 2025-09-03 12:37:32.724147831 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | E                        121", 1, False)}
| | | | | | | | | | E                        
| | F | | | | | | | |                        
| | E | | | | | | | |                        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | E | | | | | | | |                        , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | E | | | | | | | |                        = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | E | | | | | | | |                        , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | E | | | | | | | |                        max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | E | | | | | | | |                        [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | E | | | | | | | |                        string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | E | | | | | | | |                        , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | E | | | | | | | |                        = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | E | | | | | | | |                        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | E | | | | | | | |                        = 19} , self = 81 , parent = Nothing , duration = 1.739901440000 , status
| | E | | | | | | | |                        = Except "AsyncCancelled" , start = 2025-09-03 12:37:32.103894611 UTC ,
| | E | | | | | | | |                        finish = 2025-09-03 12:37:33.843796051 UTC , thread_cap_info = ("ThreadId
| | E | | | | | | | |                        122", 1, False)}
| | E | | | | | | | |                        
| | | | | | | | | | | E                      Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | | | | E                      , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | | | | E                      = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | | | | E                      , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | | | | E                      = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | E                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | E                      = 21} , self = 75 , parent = Nothing , duration = 1.059953225000 , status
| | | | | | | | | | | E                      = Except "AsyncCancelled" , start = 2025-09-03 12:37:32.123851293 UTC ,
| | | | | | | | | | | E                      finish = 2025-09-03 12:37:33.183804518 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | E                      124", 1, False)}
| | | | | | | | | | | E                      
| | | | | | | | | | | | E                    Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | | | | | E                    , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | | | | | E                    = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | | | | | E                    , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | | | | | E                    = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | E                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | E                    = 17} , self = 77 , parent = Nothing , duration = 1.115319347000 , status
| | | | | | | | | | | | E                    = Except "AsyncCancelled" , start = 2025-09-03 12:37:32.168480217 UTC ,
| | | | | | | | | | | | E                    finish = 2025-09-03 12:37:33.283799564 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | E                    137", 1, False)}
| | | | | | | | | | | | E                    
| | | | | | | | | | | | | F                  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | F                  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | F                  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | F                  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | F                  = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | F                  = 0 , alphabet_size = 4 , total_length = 100} , self = 67 , parent = Nothing
| | | | | | | | | | | | | F                  , duration = 0.231148192000 , status = Fail , start = 2025-09-03 12:37:32.208423474
| | | | | | | | | | | | | F                  UTC , finish = 2025-09-03 12:37:32.439571666 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | F                  157", 0, False)}
| | | | | | | | | | | | | F                  
| | | | | | | | | | | | | | E                Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | | | | | | | E                , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | | | | | | | E                = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | | | | | | | E                , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | | | | | | | E                = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | E                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | E                = 23} , self = 85 , parent = Nothing , duration = 1.715756270000 , status
| | | | | | | | | | | | | | E                = Except "AsyncCancelled" , start = 2025-09-03 12:37:32.208434598 UTC ,
| | | | | | | | | | | | | | E                finish = 2025-09-03 12:37:33.924190868 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | E                145", 1, False)}
| | | | | | | | | | | | | | E                
| | | | | | | | | | | | | | | F              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | | F              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | | F              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | | F              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | | F              = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | | F              = 0 , alphabet_size = 4 , total_length = 100} , self = 87 , parent = Nothing
| | | | | | | | | | | | | | | F              , duration = 1.821314129000 , status = Fail , start = 2025-09-03 12:37:32.225345098
| | | | | | | | | | | | | | | F              UTC , finish = 2025-09-03 12:37:34.046659227 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | F              159", 0, False)}
| | | | | | | | | | | | | | | F              
| | | F | | | | | | | | | | | |              
| | |   | E | | | | | | | | | |              
| | |   |   | | | | | | | F | |              
| | |   F   | | | | | | |   | |              
| | | F     | | | | | | |   | |              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | F     | | | | | | |   | |              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | F     | | | | | | |   | |              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | F     | | | | | | |   | |              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | F     | | | | | | |   | |              = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | F     | | | | | | |   | |              = 0 , alphabet_size = 2 , total_length = 21} , self = 79 , parent = Nothing
| | | F     | | | | | | |   | |              , duration = 1.002045094000 , status = Fail , start = 2025-09-03 12:37:32.523810368
| | | F     | | | | | | |   | |              UTC , finish = 2025-09-03 12:37:33.525855462 UTC , thread_cap_info = ("ThreadId
| | | F     | | | | | | |   | |              176", 1, False)}
| | | F     | | | | | | |   | |              
| | | | F   | | | | | | |   | |              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | F   | | | | | | |   | |              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | F   | | | | | | |   | |              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | F   | | | | | | |   | |              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | F   | | | | | | |   | |              = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | F   | | | | | | |   | |              = 0 , alphabet_size = 2 , total_length = 21} , self = 82 , parent = Nothing
| | | | F   | | | | | | |   | |              , duration = 1.376930278000 , status = Fail , start = 2025-09-03 12:37:32.523829783
| | | | F   | | | | | | |   | |              UTC , finish = 2025-09-03 12:37:33.900760061 UTC , thread_cap_info = ("ThreadId
| | | | F   | | | | | | |   | |              178", 1, False)}
| | | | F   | | | | | | |   | |              
| | | | | E | | | | | | |   | |              Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | E | | | | | | |   | |              , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | E | | | | | | |   | |              = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | E | | | | | | |   | |              , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | E | | | | | | |   | |              max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | E | | | | | | |   | |              [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | E | | | | | | |   | |              string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | E | | | | | | |   | |              , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | E | | | | | | |   | |              = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | E | | | | | | |   | |              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | E | | | | | | |   | |              = 19} , self = 83 , parent = Nothing , duration = 1.336987159000 , status
| | | | | E | | | | | | |   | |              = Except "AsyncCancelled" , start = 2025-09-03 12:37:32.563785568 UTC ,
| | | | | E | | | | | | |   | |              finish = 2025-09-03 12:37:33.900772727 UTC , thread_cap_info = ("ThreadId
| | | | | E | | | | | | |   | |              180", 1, False)}
| | | | | E | | | | | | |   | |              
| | | | | | | | | | | | | E | |              Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | E | |              , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | E | |              = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | E | |              , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | E | |              max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | E | |              [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | E | |              string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | E | |              , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | E | |              = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | E | |              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | E | |              = 19} , self = 102 , parent = Nothing , duration = 1.700005537000 , status
| | | | | | | | | | | | | E | |              = Except "AsyncCancelled" , start = 2025-09-03 12:37:32.583784613 UTC ,
| | | | | | | | | | | | | E | |              finish = 2025-09-03 12:37:34.28379015 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | E | |              181", 1, False)}
| | | | | | | | | | | | | E | |              
| | | | | | | | | | | | | | | | E            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | | | E            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | | | E            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | | | E            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | | | E            = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | | | E            = 0 , alphabet_size = 2 , total_length = 19} , self = 74 , parent = Nothing
| | | | | | | | | | | | | | | | E            , duration = 0.279995025000 , status = Except "AsyncCancelled" , start
| | | | | | | | | | | | | | | | E            = 2025-09-03 12:37:32.6037909 UTC , finish = 2025-09-03 12:37:32.883785925
| | | | | | | | | | | | | | | | E            UTC , thread_cap_info = ("ThreadId 161", 1, False)}
| | | | | | | | | | | | | | | | E            
| | | | | | | | | | | | | | | | | F          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | | | | F          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | | | | F          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | | | | F          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | | | | F          = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | | | | F          = 0 , alphabet_size = 2 , total_length = 23} , self = 80 , parent = Nothing
| | | | | | | | | | | | | | | | | F          , duration = 1.035685154000 , status = Fail , start = 2025-09-03 12:37:32.649917492
| | | | | | | | | | | | | | | | | F          UTC , finish = 2025-09-03 12:37:33.685602646 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | F          186", 1, False)}
| | | | | | | | | | | | | | | | | F          
| | | | | | | | | | | | | | | | | | F        Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | | | | | F        , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | | | | | F        = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | | | | | F        False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | | | | | F        = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | | | | | F        = 0 , alphabet_size = 2 , total_length = 23} , self = 105 , parent = Nothing
| | | | | | | | | | | | | | | | | | F        , duration = 1.655774745000 , status = Fail , start = 2025-09-03 12:37:32.649926579
| | | | | | | | | | | | | | | | | | F        UTC , finish = 2025-09-03 12:37:34.305701324 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | F        188", 1, False)}
| | | | | | | | | | | | | | | | | | F        
| E | | | | | | | | | | | | | | | | |        
|   | | | | | | | | E | | | | | | | |        
| E | | | | | | | |   | | | | | | | |        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| E | | | | | | | |   | | | | | | | |        , closure = Forward\n , start_strict_only = True\n , max_closure_length
| E | | | | | | | |   | | | | | | | |        = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| E | | | | | | | |   | | | | | | | |        , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| E | | | | | | | |   | | | | | | | |        max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| E | | | | | | | |   | | | | | | | |        [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| E | | | | | | | |   | | | | | | | |        string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| E | | | | | | | |   | | | | | | | |        , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| E | | | | | | | |   | | | | | | | |        = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| E | | | | | | | |   | | | | | | | |        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| E | | | | | | | |   | | | | | | | |        = 21} , self = 86 , parent = Nothing , duration = 1.280007575000 , status
| E | | | | | | | |   | | | | | | | |        = Except "AsyncCancelled" , start = 2025-09-03 12:37:32.743798144 UTC ,
| E | | | | | | | |   | | | | | | | |        finish = 2025-09-03 12:37:34.023805719 UTC , thread_cap_info = ("ThreadId
| E | | | | | | | |   | | | | | | | |        190", 1, False)}
| E | | | | | | | |   | | | | | | | |        
| | | | | | | | | | E | | | | | | | |        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | E | | | | | | | |        , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | E | | | | | | | |        = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | E | | | | | | | |        , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | E | | | | | | | |        max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | E | | | | | | | |        [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | E | | | | | | | |        string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | E | | | | | | | |        , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | E | | | | | | | |        = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | E | | | | | | | |        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | E | | | | | | | |        = 21} , self = 106 , parent = Nothing , duration = 1.560005335000 , status
| | | | | | | | | | E | | | | | | | |        = Except "AsyncCancelled" , start = 2025-09-03 12:37:32.763785717 UTC ,
| | | | | | | | | | E | | | | | | | |        finish = 2025-09-03 12:37:34.323791052 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | E | | | | | | | |        191", 1, False)}
| | | | | | | | | | E | | | | | | | |        
| | | | | | | | | | | | | | | | E | |        
| | | | | | | | | | | | | | | | E | |        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | E | |        , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | E | |        = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | E | |        , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | E | |        max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | E | |        [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | E | |        string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | E | |        , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | E | |        = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | E | |        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | E | |        = 17} , self = 84 , parent = Nothing , duration = 0.999900102000 , status
| | | | | | | | | | | | | | | | E | |        = Except "AsyncCancelled" , start = 2025-09-03 12:37:32.903893668 UTC ,
| | | | | | | | | | | | | | | | E | |        finish = 2025-09-03 12:37:33.90379377 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | E | |        193", 1, False)}
| | | | | | | | | | | | | | | | E | |        
| | | | | | | | | | | | | | | | | | | E      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | | | | E      , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | | | | E      = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | | | | E      , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | | | | E      max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | | | | E      [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | | | | E      string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | | | | E      , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | | | | E      = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | | | E      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | | | E      = 17} , self = 103 , parent = Nothing , duration = 1.359525926000 , status
| | | | | | | | | | | | | | | | | | | E      = Except "AsyncCancelled" , start = 2025-09-03 12:37:32.924272709 UTC ,
| | | | | | | | | | | | | | | | | | | E      finish = 2025-09-03 12:37:34.283798635 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | | E      194", 1, False)}
| | | | | | | | | | | | | | | | | | | E      
| | | | | | | | | | | | | | | | | | | | E    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | | | | | E    , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | | | | | E    = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | | | | | E    , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | | | | | E    max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | | | | | E    [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | | | | | E    string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | | | | | E    , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | | | | | E    = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | | | | E    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | | | | E    = 23} , self = 100 , parent = Nothing , duration = 1.239193766000 , status
| | | | | | | | | | | | | | | | | | | | E    = Except "AsyncCancelled" , start = 2025-09-03 12:37:32.965181769 UTC ,
| | | | | | | | | | | | | | | | | | | | E    finish = 2025-09-03 12:37:34.204375535 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | | | E    196", 1, False)}
| | | | | | | | | | | | | | | | | | | | E    
| | | | | | | | | | | | | | | | | | | | | E  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | | | | | | E  , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | | | | | | E  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | | | | | | E  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | | | | | | E  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | | | | | | E  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | | | | | | E  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | | | | | | E  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | | | | | | E  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | | | | | E  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | | | | | E  = 23} , self = 107 , parent = Nothing , duration = 1.360050612000 , status
| | | | | | | | | | | | | | | | | | | | | E  = Except "AsyncCancelled" , start = 2025-09-03 12:37:32.983786354 UTC ,
| | | | | | | | | | | | | | | | | | | | | E  finish = 2025-09-03 12:37:34.343836966 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | | | | E  197", 1, False)}
| | | | | | | | | | | | | | | | | | | | | E  
| | | | | | | | | | | E | | | | | | | | | |  
| | | | | | | | | E |   | | | | | | | | | |  
| | | | | | | | |   |   E | | | | | | | | |  
| | | | | | | E |   |     | | | | | | | | |  
| | | F | | |   |   |     | | | | | | | | |  
| | |   | | |   |   |     | | | | F | | | |  
| | E   | | |   |   |     | | | |   | | | |  
| |     F | |   |   |     | | | |   | | | |  
| |       E |   |   |     | | | |   | | | |  
| |         |   |   |     | | | E   | | | |  
| |         |   |   |     | E |     | | | |  
| E         |   |   |     |   |     | | | |  
|           |   |   |     |   F     | | | |  
|           |   E   |     |         | | | |  
|           |       |     |         | | E |  
|           |       |     E         | |   |  
|           |       |               | E   |  
|           |       |               F     |  
|           |       E                     |  
|           |                             E  
|           E                                
E                                            
