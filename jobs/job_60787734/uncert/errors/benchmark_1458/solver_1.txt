last 3652 length 16034
CNF 3652 vars 16034 clauses
last 3456 length 15001
CNF 3456 vars 15001 clauses
last 4356 length 19668
last 5018 length 23994
CNF 5018 vars 23994 clauses
CNF 4356 vars 19668 clauses
last 4045 length 17505
last 4424 length 19353
last 817 length 3409
last 1025 length 4371
last 803 length 3426
last 785 length 3319
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5901, clauses: 22181
CNF 4045 vars 17505 clauses
CNF 4424 vars 19353 clauses
CNF 817 vars 3409 clauses
CNF 803 vars 3426 clauses
CNF 785 vars 3319 clauses
CNF 1025 vars 4371 clauses
last 5901 length 22181
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1912, clauses: 6916
CNF 5901 vars 22181 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5991, clauses: 22661
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2014, clauses: 7348
last 1912 length 6916
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7065, clauses: 29645
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 25465, clauses: 107745
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7941, clauses: 33397
last 2014 length 7348
last 5991 length 22661
CNF 1912 vars 6916 clauses
last 7065 length 29645
last 25465 length 107745
last 7941 length 33397
CNF 2014 vars 7348 clauses
CNF 5991 vars 22661 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1912, clauses: 6916, status: Unsatisfied, time: 0.299741606s
CNF 7941 vars 33397 clauses
CNF 7065 vars 29645 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2014, clauses: 7348, status: Satisfied, time: 0.187585538s
CNF 25465 vars 107745 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5991, clauses: 22661, status: Satisfied, time: 0.199237888s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 25187, clauses: 106713
last 25187 length 106713
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7065, clauses: 29645, status: Unsatisfied, time: 0.643138841s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4259, clauses: 17753
last 4259 length 17753
CNF 4259 vars 17753 clauses
CNF 25187 vars 106713 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3161, clauses: 12040
last 3161 length 12040
CNF 3161 vars 12040 clauses
**************************************************
summary
**************************************************
SRS with 3 rules on 2 letters       DP
SRS with 5 strict rules and 3 weak rules on 3 letters       weights
SRS with 1 strict rules and 3 weak rules on 3 letters       EDG
SRS with 1 strict rules and 3 weak rules on 3 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 3 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, a, a, b] -> [a, a, a, b] {- Input 0 -}
  [b, a, a, a] -> [a, a, b, b] {- Input 1 -}
  [b, a, b, a] -> [b, b, a, b] {- Input 2 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [b, a, a, b] ->= [a, a, a, b] {- DP Nontop (Input 0) -}
  [b, a, a, a] ->= [a, a, b, b] {- DP Nontop (Input 1) -}
  [b, a, b, a] ->= [b, b, a, b] {- DP Nontop (Input 2) -}
  [b#, a, a, a] |-> [b#] {- DP (Top 3) (Input 1) -}
  [b#, a, a, a] |-> [b#, b] {- DP (Top 2) (Input 1) -}
  [b#, a, b, a] |-> [b#] {- DP (Top 3) (Input 2) -}
  [b#, a, b, a] |-> [b#, a, b] {- DP (Top 1) (Input 2) -}
  [b#, a, b, a] |-> [b#, b, a, b] {- DP (Top 0) (Input 2) -}
reason
  (a, 1/1)
  (b, 1/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [b, a, a, b] ->= [a, a, a, b] {- DP Nontop (Input 0) -}
  [b, a, a, a] ->= [a, a, b, b] {- DP Nontop (Input 1) -}
  [b, a, b, a] ->= [b, b, a, b] {- DP Nontop (Input 2) -}
  [b#, a, b, a] |-> [b#, b, a, b] {- DP (Top 0) (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, a, b, a] |-> [b#, b, a, b] {- DP (Top 0) (Input 2) -}
  [b, a, a, b] ->= [a, a, a, b] {- DP Nontop (Input 0) -}
  [b, a, a, a] ->= [a, a, b, b] {- DP Nontop (Input 1) -}
  [b, a, b, a] ->= [b, b, a, b] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / 0A  0A 3A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( b
  , Wk  / 0A  0A  3A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( b#
  , Wk  / 13A 15A 15A - \
        | 13A 15A 15A - |
        | 13A 15A 15A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [b, a, a, b] ->= [a, a, a, b] {- DP Nontop (Input 0) -}
  [b, a, a, a] ->= [a, a, b, b] {- DP Nontop (Input 1) -}
  [b, a, b, a] ->= [b, b, a, b] {- DP Nontop (Input 2) -}
reason
  EDG

**************************************************
skeleton: (3,2)\Deepee(5/3,3)\Weight\EDG(1/3,3)\Matrix{\Arctic}{3}(0/3,2)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.444495679000
  min duration 0.177528953000
  total durat. 1.595776255000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.462069319000
  min duration 0.132969471000
  total durat. 1.618770626000
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.021167964000
  min duration 1.021167964000
  total durat. 1.021167964000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 3
      , alphabet_size = 3
      , total_length = 32}
    , self = 92
    , parent = Nothing
    , duration = 1.021167964000
    , status = Fail
    , start = 2025-09-03 11:53:42.414461254 UTC
    , finish = 2025-09-03 11:53:43.435629218 UTC
    , thread_cap_info = ("ThreadId 135", 2, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.890054343000
  min duration 0.718764261000
  total durat. 1.608818604000
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.968245868000
  min duration 1.968245868000
  total durat. 1.968245868000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 24}
    , self = 96
    , parent = Nothing
    , duration = 1.968245868000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:53:41.594925869 UTC
    , finish = 2025-09-03 11:53:43.563171737 UTC
    , thread_cap_info = ("ThreadId 69", 2, False)}
**************************************************
F                Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                = False}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F                = 24} , self = 80 , parent = Nothing , duration = 0.579582782000 , status
F                = Fail , start = 2025-09-03 11:53:41.564180353 UTC , finish = 2025-09-03
F                11:53:42.143763135 UTC , thread_cap_info = ("ThreadId 22", 2, False)}
F                
| F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F              = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| F              = 12 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| F              = 120} , self = 60 , parent = Nothing , duration = 0.177528953000 , status
| F              = Fail , start = 2025-09-03 11:53:41.577869092 UTC , finish = 2025-09-03
| F              11:53:41.755398045 UTC , thread_cap_info = ("ThreadId 65", 0, False)}
| F              
| | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F            = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | F            = 12 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | F            = 120} , self = 53 , parent = Nothing , duration = 0.132969471000 , status
| | F            = Fail , start = 2025-09-03 11:53:41.594920924 UTC , finish = 2025-09-03
| | F            11:53:41.727890395 UTC , thread_cap_info = ("ThreadId 67", 0, False)}
| | F            
| | | E          Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | E          , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | E          = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | E          , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | E          max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | E          [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | E          string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | E          , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | E          = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| | | E          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | E          = 24} , self = 96 , parent = Nothing , duration = 1.968245868000 , status
| | | E          = Except "AsyncCancelled" , start = 2025-09-03 11:53:41.594925869 UTC ,
| | | E          finish = 2025-09-03 11:53:43.563171737 UTC , thread_cap_info = ("ThreadId
| | | E          69", 2, False)}
| | | E          
| | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | F        = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | | | F        = 140} , self = 79 , parent = Nothing , duration = 0.382574389000 , status
| | | | F        = Fail , start = 2025-09-03 11:53:41.633110065 UTC , finish = 2025-09-03
| | | | F        11:53:42.015684454 UTC , thread_cap_info = ("ThreadId 82", 1, False)}
| | | | F        
| | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | F      = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | | | | F      = 140} , self = 64 , parent = Nothing , duration = 0.322209455000 , status
| | | | | F      = Fail , start = 2025-09-03 11:53:41.653069835 UTC , finish = 2025-09-03
| | | | | F      11:53:41.97527929 UTC , thread_cap_info = ("ThreadId 83", 1, False)}
| | | | | F      
| | F | | |      
| F   | | |      
| F   | | |      Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F   | | |      , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F   | | |      = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F   | | |      False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F   | | |      = Size { num_rules = 3 , num_strict_rules = 3 , num_top_rules = 0 , num_weak_rules
| F   | | |      = 0 , alphabet_size = 2 , total_length = 24} , self = 65 , parent = Nothing
| F   | | |      , duration = 0.210117424000 , status = Fail , start = 2025-09-03 11:53:41.791724369
| F   | | |      UTC , finish = 2025-09-03 11:53:42.001841793 UTC , thread_cap_info = ("ThreadId
| F   | | |      98", 2, False)}
| F   | | |      
| | F | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | F | | |      = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | F | | |      = 140} , self = 81 , parent = Nothing , duration = 0.444495679000 , status
| | F | | |      = Fail , start = 2025-09-03 11:53:41.807698912 UTC , finish = 2025-09-03
| | F | | |      11:53:42.252194591 UTC , thread_cap_info = ("ThreadId 101", 1, False)}
| | F | | |      
| | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | | F    = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | | | | | F    = 140} , self = 82 , parent = Nothing , duration = 0.462069319000 , status
| | | | | | F    = Fail , start = 2025-09-03 11:53:41.813628298 UTC , finish = 2025-09-03
| | | | | | F    11:53:42.275697617 UTC , thread_cap_info = ("ThreadId 102", 1, False)}
| | | | | | F    
| | | | | F |    
| F | | |   |    
| F | | |   |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F | | |   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | |   |    = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| F | | |   |    = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size = 3 , total_length
| F | | |   |    = 32} , self = 84 , parent = Nothing , duration = 0.309091957000 , status
| F | | |   |    = Fail , start = 2025-09-03 11:53:42.004713715 UTC , finish = 2025-09-03
| F | | |   |    11:53:42.313805672 UTC , thread_cap_info = ("ThreadId 119", 2, False)}
| F | | |   |    
| | | | | F |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F |    = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | F |    = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size = 3 , total_length
| | | | | F |    = 32} , self = 86 , parent = Nothing , duration = 0.368376646000 , status
| | | | | F |    = Fail , start = 2025-09-03 11:53:42.004720957 UTC , finish = 2025-09-03
| | | | | F |    11:53:42.373097603 UTC , thread_cap_info = ("ThreadId 120", 2, False)}
| | | | | F |    
| | | | | | | F  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | F  = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size = 3 , total_length
| | | | | | | F  = 32} , self = 83 , parent = Nothing , duration = 0.282085277000 , status
| | | | | | | F  = Fail , start = 2025-09-03 11:53:42.01308318 UTC , finish = 2025-09-03
| | | | | | | F  11:53:42.295168457 UTC , thread_cap_info = ("ThreadId 118", 2, False)}
| | | | | | | F  
| | | | F | | |  
| | | | F | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | F | | |  = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size = 3 , total_length
| | | | F | | |  = 32} , self = 85 , parent = Nothing , duration = 0.333145735000 , status
| | | | F | | |  = Fail , start = 2025-09-03 11:53:42.025167465 UTC , finish = 2025-09-03
| | | | F | | |  11:53:42.3583132 UTC , thread_cap_info = ("ThreadId 121", 2, False)}
| | | | F | | |  
F | | | | | | |  
  | F | | | | |  
S |   | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S |   | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S |   | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S |   | | | | |  = 14 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 12 ,
S |   | | | | |  alphabet_size = 5 , total_length = 140} , self = 91 , parent = Nothing
S |   | | | | |  , duration = 0.890054343000 , status = Success , start = 2025-09-03 11:53:42.253126246
S |   | | | | |  UTC , finish = 2025-09-03 11:53:43.143180589 UTC , thread_cap_info = ("ThreadId
S |   | | | | |  129", 1, False)}
S |   | | | | |  
| |   | | | F |  
| |   | | |   F  
| F   | | |      
| F   | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F   | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F   | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F   | | |      = 4 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| F   | | |      = 3 , total_length = 32} , self = 87 , parent = Nothing , duration = 0.690527926000
| F   | | |      , status = Fail , start = 2025-09-03 11:53:42.334407258 UTC , finish =
| F   | | |      2025-09-03 11:53:43.024935184 UTC , thread_cap_info = ("ThreadId 131",
| F   | | |      2, False)}
| F   | | |      
| |   | F |      
| |   |   F      
| | S |          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S |          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S |          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S |          = 4 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | S |          = 3 , total_length = 32} , self = 88 , parent = Nothing , duration = 0.718764261000
| | S |          , status = Success , start = 2025-09-03 11:53:42.380230484 UTC , finish
| | S |          = 2025-09-03 11:53:43.098994745 UTC , thread_cap_info = ("ThreadId 133",
| | S |          2, False)}
| | S |          
| | | | E        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | E        , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | | | E        = 3 , total_length = 32} , self = 90 , parent = Nothing , duration = 0.747059156000
| | | | E        , status = Except "AsyncCancelled" , start = 2025-09-03 11:53:42.394745894
| | | | E        UTC , finish = 2025-09-03 11:53:43.14180505 UTC , thread_cap_info = ("ThreadId
| | | | E        134", 2, False)}
| | | | E        
| | | | | F      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | F      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | F      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | F      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | F      , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | | | | F      = 3 , total_length = 32} , self = 92 , parent = Nothing , duration = 1.021167964000
| | | | | F      , status = Fail , start = 2025-09-03 11:53:42.414461254 UTC , finish =
| | | | | F      2025-09-03 11:53:43.435629218 UTC , thread_cap_info = ("ThreadId 135",
| | | | | F      2, False)}
| | | | | F      
| F | | | |      
|   S | | |      
|     | E |      
S     |   |      
F     |   |      Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
F     |   |      epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
F     |   |      = Size { num_rules = 12 , num_strict_rules = 0 , num_top_rules = 0 , num_weak_rules
F     |   |      = 12 , alphabet_size = 4 , total_length = 120} , self = 93 , parent = Nothing
F     |   |      , duration = 0.292415001000 , status = Fail , start = 2025-09-03 11:53:43.143274517
F     |   |      UTC , finish = 2025-09-03 11:53:43.435689518 UTC , thread_cap_info = ("ThreadId
F     |   |      144", 1, False)}
F     |   |      
|     |   F      
F     |          
      E          
