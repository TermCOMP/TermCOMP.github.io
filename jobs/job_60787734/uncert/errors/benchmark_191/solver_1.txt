last 2622 length 14024
last 3074 length 18098
CNF 2622 vars 14024 clauses
CNF 3074 vars 18098 clauses
last 2416 length 9783
last 2961 length 13008
CNF 2416 vars 9783 clauses
CNF 2961 vars 13008 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8835, clauses: 31802
last 8835 length 31802
CNF 8835 vars 31802 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8835, clauses: 31802, status: Satisfied, time: 0.332213105s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 27964, clauses: 115381
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13826, clauses: 49404
last 13826 length 49404
CNF 13826 vars 49404 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13826, clauses: 49404, status: Satisfied, time: 0.314125695s
last 2550 length 13662
last 2981 length 17588
CNF 2550 vars 13662 clauses
CNF 2981 vars 17588 clauses
last 2350 length 9531
CNF 2350 vars 9531 clauses
last 2927 length 12874
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8624, clauses: 30945
last 8624 length 30945
CNF 2927 vars 12874 clauses
CNF 8624 vars 30945 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13615, clauses: 48583
last 13615 length 48583
CNF 13615 vars 48583 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 27626, clauses: 113961
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13615, clauses: 48583, status: Satisfied, time: 0.412565584s
last 27626 length 113961
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8624, clauses: 30945, status: Satisfied, time: 0.885983086s
CNF 27626 vars 113961 clauses
last 2284 length 9279
CNF 2284 vars 9279 clauses
last 2893 length 12740
CNF 2893 vars 12740 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13404, clauses: 47762
last 13404 length 47762
last 2188 length 11278
last 2509 length 13975
CNF 2188 vars 11278 clauses
CNF 2509 vars 13975 clauses
CNF 13404 vars 47762 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8404, clauses: 29881
last 8404 length 29881
CNF 8404 vars 29881 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13404, clauses: 47762, status: Satisfied, time: 1.378880428s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 34954, clauses: 143891
last 34954 length 143891
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8404, clauses: 29881, status: Unsatisfied, time: 0.956207548s
CNF 34954 vars 143891 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 27287, clauses: 112528
last 27287 length 112528
CNF 27287 vars 112528 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16960, clauses: 65923
last 16960 length 65923
last 2238 length 9109
CNF 16960 vars 65923 clauses
CNF 2238 vars 9109 clauses
last 2886 length 12719
CNF 2886 vars 12719 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13298, clauses: 47337
last 13298 length 47337
CNF 13298 vars 47337 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16960, clauses: 65923, status: Unsatisfied, time: 2.273346434s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 34908, clauses: 143715
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13298, clauses: 47337, status: Satisfied, time: 1.17716694s
last 34908 length 143715
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13646, clauses: 51177
last 13646 length 51177
CNF 13646 vars 51177 clauses
CNF 34908 vars 143715 clauses
last 2194 length 8935
last 2828 length 12487
CNF 2828 vars 12487 clauses
CNF 2194 vars 8935 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12994, clauses: 46204
last 12994 length 46204
CNF 12994 vars 46204 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 34278, clauses: 141065
last 34278 length 141065
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12994, clauses: 46204, status: Unsatisfied, time: 1.666604457s
CNF 34278 vars 141065 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 21848, clauses: 84490
last 21848 length 84490
CNF 21848 vars 84490 clauses
[Info] pool sizes (success) 38660 seen 17708 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
**************************************************
summary
**************************************************
SRS with 24 rules on 15 letters       looping derivation
from
  [B, b, a, a, a, a, b, a]
to
  [BA, BAA, BA, B, b, a, a, a, a, b, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a]
via 42 steps

**************************************************
proof
**************************************************
property Termination
has value Just False
for SRS
  [B, a] -> [BA] {- Input 0 -}
  [B, b] -> [B, B] {- Input 1 -}
  [BA, a] -> [BAA] {- Input 2 -}
  [BA, b] -> [BA, B] {- Input 3 -}
  [BAA, a] -> [BAAA] {- Input 4 -}
  [BAA, b] -> [BAA, B] {- Input 5 -}
  [BAAA, a] -> [BAAA, A] {- Input 6 -}
  [BAAA, b] -> [BAAAB] {- Input 7 -}
  [BAAAB, a] -> [BAAABA] {- Input 8 -}
  [BAAAB, b] -> [BAAAB, B] {- Input 9 -}
  [BAAABA, a] -> [BAAABA, A] {- Input 10 -}
  [BAAABA, b] -> [BAAABAB] {- Input 11 -}
  [BAAABAB, a] -> [BAAABAB, A] {- Input 12 -}
  [BAAABAB, b] -> [BAAABABB] {- Input 13 -}
  [BAAABABB, a] -> [BAAABABBA] {- Input 14 -}
  [BAAABABB, b] -> [BAAABABB, B] {- Input 15 -}
  [BAAABABBA, a] -> [BAAABABBAA] {- Input 16 -}
  [BAAABABBA, b] -> [BAAABABBA, B] {- Input 17 -}
  [BAAABABBAA] -> [a, b, a] {- Input 18 -}
  [A, a] -> [A, A] {- Input 19 -}
  [A, b] -> [AB] {- Input 20 -}
  [AB, a] -> [ABA] {- Input 21 -}
  [AB, b] -> [AB, B] {- Input 22 -}
  [ABA] -> [b, a, a, a, b, a, b, b, a, a] {- Input 23 -}
reason
  Nontermination
    Derive   { from = [B, b, a, a, a, a, b, a], via = [(Step   { rule = 1, position = 0}, [B, B, a, a, a, a, b, a]), (Step   { rule = 0, position = 1}, [B, BA, a, a, a, b, a]), (Step   { rule = 2, position = 1}, [B, BAA, a, a, b, a]), (Step   { rule = 4, position = 1}, [B, BAAA, a, b, a]), (Step   { rule = 6, position = 1}, [B, BAAA, A, b, a]), (Step   { rule = 20, position = 2}, [B, BAAA, AB, a]), (Step   { rule = 21, position = 2}, [B, BAAA, ABA]), (Step   { rule = 23, position = 2}, [B, BAAA, b, a, a, a, b, a, b, b, a, a]), (Step   { rule = 7, position = 1}, [B, BAAAB, a, a, a, b, a, b, b, a, a]), (Step   { rule = 8, position = 1}, [B, BAAABA, a, a, b, a, b, b, a, a]), (Step   { rule = 10, position = 1}, [B, BAAABA, A, a, b, a, b, b, a, a]), (Step   { rule = 19, position = 2}, [B, BAAABA, A, A, b, a, b, b, a, a]), (Step   { rule = 20, position = 3}, [B, BAAABA, A, AB, a, b, b, a, a]), (Step   { rule = 21, position = 3}, [B, BAAABA, A, ABA, b, b, a, a]), (Step   { rule = 23, position = 3}, [B, BAAABA, A, b, a, a, a, b, a, b, b, a, a, b, b, a, a]), (Step   { rule = 20, position = 2}, [B, BAAABA, AB, a, a, a, b, a, b, b, a, a, b, b, a, a]), (Step   { rule = 21, position = 2}, [B, BAAABA, ABA, a, a, b, a, b, b, a, a, b, b, a, a]), (Step   { rule = 23, position = 2}, [B, BAAABA, b, a, a, a, b, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a]), (Step   { rule = 11, position = 1}, [B, BAAABAB, a, a, a, b, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a]), (Step   { rule = 12, position = 1}, [B, BAAABAB, A, a, a, b, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a]), (Step   { rule = 19, position = 2}, [B, BAAABAB, A, A, a, b, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a]), (Step   { rule = 19, position = 3}, [B, BAAABAB, A, A, A, b, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a]), (Step   { rule = 20, position = 4}, [B, BAAABAB, A, A, AB, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a]), (Step   { rule = 21, position = 4}, [B, BAAABAB, A, A, ABA, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a]), (Step   { rule = 23, position = 4}, [B, BAAABAB, A, A, b, a, a, a, b, a, b, b, a, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a]), (Step   { rule = 20, position = 3}, [B, BAAABAB, A, AB, a, a, a, b, a, b, b, a, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a]), (Step   { rule = 21, position = 3}, [B, BAAABAB, A, ABA, a, a, b, a, b, b, a, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a]), (Step   { rule = 23, position = 3}, [B, BAAABAB, A, b, a, a, a, b, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a]), (Step   { rule = 20, position = 2}, [B, BAAABAB, AB, a, a, a, b, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a]), (Step   { rule = 21, position = 2}, [B, BAAABAB, ABA, a, a, b, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a]), (Step   { rule = 23, position = 2}, [B, BAAABAB, b, a, a, a, b, a, b, b, a, a, a, a, b, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a]), (Step   { rule = 13, position = 1}, [B, BAAABABB, a, a, a, b, a, b, b, a, a, a, a, b, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a]), (Step   { rule = 14, position = 1}, [B, BAAABABBA, a, a, b, a, b, b, a, a, a, a, b, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a]), (Step   { rule = 16, position = 1}, [B, BAAABABBAA, a, b, a, b, b, a, a, a, a, b, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a]), (Step   { rule = 18, position = 1}, [B, a, b, a, a, b, a, b, b, a, a, a, a, b, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a]), (Step   { rule = 0, position = 0}, [BA, b, a, a, b, a, b, b, a, a, a, a, b, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a]), (Step   { rule = 3, position = 0}, [BA, B, a, a, b, a, b, b, a, a, a, a, b, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a]), (Step   { rule = 0, position = 1}, [BA, BA, a, b, a, b, b, a, a, a, a, b, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a]), (Step   { rule = 2, position = 1}, [BA, BAA, b, a, b, b, a, a, a, a, b, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a]), (Step   { rule = 5, position = 1}, [BA, BAA, B, a, b, b, a, a, a, a, b, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a]), (Step   { rule = 0, position = 2}, [BA, BAA, BA, b, b, a, a, a, a, b, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a]), (Step   { rule = 3, position = 2}, [BA, BAA, BA, B, b, a, a, a, a, b, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a])], to = [BA, BAA, BA, B, b, a, a, a, a, b, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a, a, a, b, a, b, b, a, a, b, b, a, a]}

**************************************************
skeleton: (24,15)\Loop{42}[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 34278, clauses: 141065, status: Satisfied, time: 2.248294564s
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 0.281754481000
  min duration 0.100722750000
  total durat. 1.464379505000
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.151841398000
  min duration 3.151841398000
  total durat. 3.151841398000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 463
      , num_strict_rules = 463
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 169
      , total_length = 3050}
    , self = 124
    , parent = Nothing
    , duration = 3.151841398000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:07:08.553422543 UTC
    , finish = 2025-09-03 11:07:11.705263941 UTC
    , thread_cap_info = ("ThreadId 170", 1, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 0.301399623000
  min duration 0.098915346000
  total durat. 1.684868626000
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.185588194000
  min duration 3.185588194000
  total durat. 3.185588194000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 463
      , num_strict_rules = 463
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 169
      , total_length = 3050}
    , self = 125
    , parent = Nothing
    , duration = 3.185588194000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:07:08.553426012 UTC
    , finish = 2025-09-03 11:07:11.739014206 UTC
    , thread_cap_info = ("ThreadId 172", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 6
  max duration 2.578950122000
  min duration 0.676213159000
  total durat. 8.181436267000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 9
      , num_top_rules = 9
      , num_weak_rules = 24
      , alphabet_size = 18
      , total_length = 139}
    , self = 103
    , parent = Nothing
    , duration = 1.438070462000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:07:07.007833384 UTC
    , finish = 2025-09-03 11:07:08.445903846 UTC
    , thread_cap_info = ("ThreadId 127", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 53
      , num_strict_rules = 29
      , num_top_rules = 29
      , num_weak_rules = 24
      , alphabet_size = 26
      , total_length = 188}
    , self = 117
    , parent = Nothing
    , duration = 2.037039398000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:07:08.484321239 UTC
    , finish = 2025-09-03 11:07:10.521360637 UTC
    , thread_cap_info = ("ThreadId 163", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 52
      , num_strict_rules = 28
      , num_top_rules = 28
      , num_weak_rules = 24
      , alphabet_size = 26
      , total_length = 185}
    , self = 129
    , parent = Nothing
    , duration = 2.578950122000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:07:10.947208948 UTC
    , finish = 2025-09-03 11:07:13.52615907 UTC
    , thread_cap_info = ("ThreadId 193", 3, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.818892759000
  min duration 2.818892759000
  total durat. 2.818892759000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 32
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 24
      , alphabet_size = 18
      , total_length = 129}
    , self = 126
    , parent = Nothing
    , duration = 2.818892759000
    , status = Fail
    , start = 2025-09-03 11:07:10.083511518 UTC
    , finish = 2025-09-03 11:07:12.902404277 UTC
    , thread_cap_info = ("ThreadId 182", 3, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 2.293472315000
  min duration 0.589551031000
  total durat. 7.448598935000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 9
      , num_top_rules = 9
      , num_weak_rules = 24
      , alphabet_size = 18
      , total_length = 139}
    , self = 98
    , parent = Nothing
    , duration = 1.288363078000
    , status = Success
    , start = 2025-09-03 11:07:06.996105901 UTC
    , finish = 2025-09-03 11:07:08.284468979 UTC
    , thread_cap_info = ("ThreadId 125", 3, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 53
      , num_strict_rules = 29
      , num_top_rules = 29
      , num_weak_rules = 24
      , alphabet_size = 26
      , total_length = 188}
    , self = 114
    , parent = Nothing
    , duration = 1.605961847000
    , status = Success
    , start = 2025-09-03 11:07:08.425197778 UTC
    , finish = 2025-09-03 11:07:10.031159625 UTC
    , thread_cap_info = ("ThreadId 161", 3, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 52
      , num_strict_rules = 28
      , num_top_rules = 28
      , num_weak_rules = 24
      , alphabet_size = 26
      , total_length = 185}
    , self = 127
    , parent = Nothing
    , duration = 2.293472315000
    , status = Success
    , start = 2025-09-03 11:07:10.878518008 UTC
    , finish = 2025-09-03 11:07:13.171990323 UTC
    , thread_cap_info = ("ThreadId 192", 3, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 2.246659186000
  min duration 1.208843814000
  total durat. 3.455503000000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 32
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 24
      , alphabet_size = 18
      , total_length = 129}
    , self = 115
    , parent = Nothing
    , duration = 1.208843814000
    , status = Fail
    , start = 2025-09-03 11:07:08.822404809 UTC
    , finish = 2025-09-03 11:07:10.031248623 UTC
    , thread_cap_info = ("ThreadId 177", 3, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 51
      , num_strict_rules = 27
      , num_top_rules = 27
      , num_weak_rules = 24
      , alphabet_size = 26
      , total_length = 181}
    , self = 136
    , parent = Nothing
    , duration = 2.246659186000
    , status = Fail
    , start = 2025-09-03 11:07:13.704619547 UTC
    , finish = 2025-09-03 11:07:15.951278733 UTC
    , thread_cap_info = ("ThreadId 209", 3, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 10.372642125000
  min duration 10.372642125000
  total durat. 10.372642125000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 24
      , num_strict_rules = 24
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 15
      , total_length = 92}
    , self = 137
    , parent = Nothing
    , duration = 10.372642125000
    , status = Fail
    , start = 2025-09-03 11:07:05.75564862 UTC
    , finish = 2025-09-03 11:07:16.128290745 UTC
    , thread_cap_info = ("ThreadId 51", 2, False)}
Success : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.498347545000
  min duration 1.498347545000
  total durat. 1.498347545000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 24
      , num_strict_rules = 24
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 15
      , total_length = 92}
    , self = 138
    , parent = Nothing
    , duration = 1.498347545000
    , status = Success
    , start = 2025-09-03 11:07:16.137650204 UTC
    , finish = 2025-09-03 11:07:17.635997749 UTC
    , thread_cap_info = ("ThreadId 214", 2, False)}
Success : "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize, epsilon_digits = 6}))\n , verbose = False\n , tracing = False}"
  total number 4
  max duration 2.114158067000
  min duration 0.001819946000
  total durat. 3.505705670000
  Info
    { what = "Weight\n  { modus = Pre (Or_Else Count (GLPK   { goal = Optimize, epsilon_digits = 6}))\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 5400
      , num_strict_rules = 5400
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 225
      , total_length = 31500}
    , self = 80
    , parent = Nothing
    , duration = 1.376798296000
    , status = Success
    , start = 2025-09-03 11:07:05.829126231 UTC
    , finish = 2025-09-03 11:07:07.205924527 UTC
    , thread_cap_info = ("ThreadId 67", 0, False)}
  Info
    { what = "Weight\n  { modus = Pre (Or_Else Count (GLPK   { goal = Optimize, epsilon_digits = 6}))\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 4500
      , num_strict_rules = 4500
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 225
      , total_length = 26100}
    , self = 101
    , parent = Nothing
    , duration = 2.114158067000
    , status = Success
    , start = 2025-09-03 11:07:06.192459348 UTC
    , finish = 2025-09-03 11:07:08.306617415 UTC
    , thread_cap_info = ("ThreadId 104", 1, False)}
**************************************************
S                Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
S                , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
S                , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
S                = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
S                , cpf = False}" , input_size = Size { num_rules = 24 , num_strict_rules
S                = 24 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 15 , total_length
S                = 92} , self = 36 , parent = Nothing , duration = 0.119862436000 , status
S                = Success , start = 2025-09-03 11:07:05.75560746 UTC , finish = 2025-09-03
S                11:07:05.875469896 UTC , thread_cap_info = ("ThreadId 47", 1, False)}
S                
| S              Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| S              { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| S              = MSB_First}\n , max_size = Nothing\n , max_height = Just 2\n , initial
| S              = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| S              = False}" , input_size = Size { num_rules = 24 , num_strict_rules = 24
| S              , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 15 , total_length
| S              = 92} , self = 35 , parent = Nothing , duration = 0.113450050000 , status
| S              = Success , start = 2025-09-03 11:07:05.755615046 UTC , finish = 2025-09-03
| S              11:07:05.869065096 UTC , thread_cap_info = ("ThreadId 50", 1, False)}
| S              
| | F            Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | F            , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | F            = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | F            Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | F            8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | F            = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | F            ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | F            1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | F            = True})" , input_size = Size { num_rules = 24 , num_strict_rules = 24
| | F            , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 15 , total_length
| | F            = 92} , self = 137 , parent = Nothing , duration = 10.372642125000 , status
| | F            = Fail , start = 2025-09-03 11:07:05.75564862 UTC , finish = 2025-09-03
| | F            11:07:16.128290745 UTC , thread_cap_info = ("ThreadId 51", 2, False)}
| | F            
| | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 34 , num_strict_rules
| | | F          = 10 , num_top_rules = 10 , num_weak_rules = 24 , alphabet_size = 18 ,
| | | F          total_length = 144} , self = 40 , parent = Nothing , duration = 0.100722750000
| | | F          , status = Fail , start = 2025-09-03 11:07:05.823305269 UTC , finish =
| | | F          2025-09-03 11:07:05.924028019 UTC , thread_cap_info = ("ThreadId 65", 3,
| | | F          False)}
| | | F          
| | | | S        Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | S        epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | S        = Size { num_rules = 5400 , num_strict_rules = 5400 , num_top_rules = 0
| | | | S        , num_weak_rules = 0 , alphabet_size = 225 , total_length = 31500} , self
| | | | S        = 80 , parent = Nothing , duration = 1.376798296000 , status = Success
| | | | S        , start = 2025-09-03 11:07:05.829126231 UTC , finish = 2025-09-03 11:07:07.205924527
| | | | S        UTC , thread_cap_info = ("ThreadId 67", 0, False)}
| | | | S        
| S | | |        
S   | | |        
F   | | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F   | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F   | | |        = False\n , verbose = False}" , input_size = Size { num_rules = 55 , num_strict_rules
F   | | |        = 31 , num_top_rules = 31 , num_weak_rules = 24 , alphabet_size = 26 ,
F   | | |        total_length = 196} , self = 50 , parent = Nothing , duration = 0.281754481000
F   | | |        , status = Fail , start = 2025-09-03 11:07:05.902327084 UTC , finish =
F   | | |        2025-09-03 11:07:06.184081565 UTC , thread_cap_info = ("ThreadId 74", 3,
F   | | |        False)}
F   | | |        
| F | | |        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | |        = False\n , verbose = False}" , input_size = Size { num_rules = 55 , num_strict_rules
| F | | |        = 31 , num_top_rules = 31 , num_weak_rules = 24 , alphabet_size = 26 ,
| F | | |        total_length = 196} , self = 53 , parent = Nothing , duration = 0.301399623000
| F | | |        , status = Fail , start = 2025-09-03 11:07:05.902387732 UTC , finish =
| F | | |        2025-09-03 11:07:06.203787355 UTC , thread_cap_info = ("ThreadId 75", 3,
| F | | |        False)}
| F | | |        
| | | F |        
| | | S |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S |        = 34 , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 24
| | | S |        , alphabet_size = 18 , total_length = 144} , self = 59 , parent = Nothing
| | | S |        , duration = 0.589551031000 , status = Success , start = 2025-09-03 11:07:05.94241476
| | | S |        UTC , finish = 2025-09-03 11:07:06.531965791 UTC , thread_cap_info = ("ThreadId
| | | S |        82", 3, False)}
| | | S |        
| | | | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 34
| | | | | E      , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 24 , alphabet_size
| | | | | E      = 18 , total_length = 144} , self = 62 , parent = Nothing , duration =
| | | | | E      0.694483777000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | E      11:07:05.944368192 UTC , finish = 2025-09-03 11:07:06.638851969 UTC , thread_cap_info
| | | | | E      = ("ThreadId 83", 3, False)}
| | | | | E      
F | | | | |      
S | | | | |      Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
S | | | | |      epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
S | | | | |      = Size { num_rules = 4500 , num_strict_rules = 4500 , num_top_rules = 0
S | | | | |      , num_weak_rules = 0 , alphabet_size = 225 , total_length = 26100} , self
S | | | | |      = 101 , parent = Nothing , duration = 2.114158067000 , status = Success
S | | | | |      , start = 2025-09-03 11:07:06.192459348 UTC , finish = 2025-09-03 11:07:08.306617415
S | | | | |      UTC , thread_cap_info = ("ThreadId 104", 1, False)}
S | | | | |      
| F | | | |      
| S | | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | | | |      = 55 , num_strict_rules = 31 , num_top_rules = 31 , num_weak_rules = 24
| S | | | |      , alphabet_size = 26 , total_length = 196} , self = 69 , parent = Nothing
| S | | | |      , duration = 0.749555132000 , status = Success , start = 2025-09-03 11:07:06.20381887
| S | | | |      UTC , finish = 2025-09-03 11:07:06.953374002 UTC , thread_cap_info = ("ThreadId
| S | | | |      107", 3, False)}
| S | | | |      
| | | | | | E    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 55
| | | | | | E    , num_strict_rules = 31 , num_top_rules = 31 , num_weak_rules = 24 , alphabet_size
| | | | | | E    = 26 , total_length = 196} , self = 71 , parent = Nothing , duration =
| | | | | | E    0.676213159000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | | E    11:07:06.309968805 UTC , finish = 2025-09-03 11:07:06.986181964 UTC , thread_cap_info
| | | | | | E    = ("ThreadId 108", 3, False)}
| | | | | | E    
| | | | | | | F  Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | | | | | F  { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | | | | | F  = MSB_First}\n , max_size = Nothing\n , max_height = Just 3\n , initial
| | | | | | | F  = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | | | | | F  = False}" , input_size = Size { num_rules = 20 , num_strict_rules = 20
| | | | | | | F  , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 15 , total_length
| | | | | | | F  = 76} , self = 58 , parent = Nothing , duration = 0.121215869000 , status
| | | | | | | F  = Fail , start = 2025-09-03 11:07:06.36271098 UTC , finish = 2025-09-03
| | | | | | | F  11:07:06.483926849 UTC , thread_cap_info = ("ThreadId 110", 1, False)}
| | | | | | | F  
| | | | | | | F  
| | | | | | | F  Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | | | | | F  { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | | | | | F  = MSB_First}\n , max_size = Nothing\n , max_height = Just 4\n , initial
| | | | | | | F  = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | | | | | F  = False}" , input_size = Size { num_rules = 20 , num_strict_rules = 20
| | | | | | | F  , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 15 , total_length
| | | | | | | F  = 76} , self = 61 , parent = Nothing , duration = 0.122999872000 , status
| | | | | | | F  = Fail , start = 2025-09-03 11:07:06.503155671 UTC , finish = 2025-09-03
| | | | | | | F  11:07:06.626155543 UTC , thread_cap_info = ("ThreadId 111", 1, False)}
| | | | | | | F  
| | | S | | | |  
| | |   | | | F  
| | |   | E |    
| | | F |   |    Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | F |   |    { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | F |   |    = MSB_First}\n , max_size = Nothing\n , max_height = Just 4\n , initial
| | | F |   |    = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | F |   |    = False}" , input_size = Size { num_rules = 20 , num_strict_rules = 20
| | | F |   |    , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 15 , total_length
| | | F |   |    = 76} , self = 67 , parent = Nothing , duration = 0.114947400000 , status
| | | F |   |    = Fail , start = 2025-09-03 11:07:06.64242042 UTC , finish = 2025-09-03
| | | F |   |    11:07:06.75736782 UTC , thread_cap_info = ("ThreadId 114", 1, False)}
| | | F |   |    
| | | F |   |    
| | | F |   |    Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | F |   |    { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | F |   |    = MSB_First}\n , max_size = Nothing\n , max_height = Just 5\n , initial
| | | F |   |    = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | F |   |    = False}" , input_size = Size { num_rules = 20 , num_strict_rules = 20
| | | F |   |    , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 15 , total_length
| | | F |   |    = 76} , self = 77 , parent = Nothing , duration = 0.295529537000 , status
| | | F |   |    = Fail , start = 2025-09-03 11:07:06.76408828 UTC , finish = 2025-09-03
| | | F |   |    11:07:07.059617817 UTC , thread_cap_info = ("ThreadId 117", 1, False)}
| | | F |   |    
| | | | | F |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F |    = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | | | | F |    = 9 , num_top_rules = 9 , num_weak_rules = 24 , alphabet_size = 18 , total_length
| | | | | F |    = 139} , self = 73 , parent = Nothing , duration = 0.224661359000 , status
| | | | | F |    = Fail , start = 2025-09-03 11:07:06.770942179 UTC , finish = 2025-09-03
| | | | | F |    11:07:06.995603538 UTC , thread_cap_info = ("ThreadId 119", 3, False)}
| | | | | F |    
| | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | | | | | | F  = 9 , num_top_rules = 9 , num_weak_rules = 24 , alphabet_size = 18 , total_length
| | | | | | | F  = 139} , self = 74 , parent = Nothing , duration = 0.213086225000 , status
| | | | | | | F  = Fail , start = 2025-09-03 11:07:06.782533426 UTC , finish = 2025-09-03
| | | | | | | F  11:07:06.995619651 UTC , thread_cap_info = ("ThreadId 120", 3, False)}
| | | | | | | F  
| S | | | | | |  
|   | | | | E |  
|   | | | F   |  
|   | | |     F  
| S | | |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | | |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | | |        = 33 , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 24 ,
| S | | |        alphabet_size = 18 , total_length = 139} , self = 98 , parent = Nothing
| S | | |        , duration = 1.288363078000 , status = Success , start = 2025-09-03 11:07:06.996105901
| S | | |        UTC , finish = 2025-09-03 11:07:08.284468979 UTC , thread_cap_info = ("ThreadId
| S | | |        125", 3, False)}
| S | | |        
| | | | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 33
| | | | | E      , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 24 , alphabet_size
| | | | | E      = 18 , total_length = 139} , self = 103 , parent = Nothing , duration =
| | | | | E      1.438070462000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | E      11:07:07.007833384 UTC , finish = 2025-09-03 11:07:08.445903846 UTC , thread_cap_info
| | | | | E      = ("ThreadId 127", 3, False)}
| | | | | E      
| | | F | |      
| | | F | |      Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | F | |      { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | F | |      = MSB_First}\n , max_size = Nothing\n , max_height = Just 5\n , initial
| | | F | |      = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | F | |      = False}" , input_size = Size { num_rules = 20 , num_strict_rules = 20
| | | F | |      , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 15 , total_length
| | | F | |      = 76} , self = 83 , parent = Nothing , duration = 0.291745311000 , status
| | | F | |      = Fail , start = 2025-09-03 11:07:07.062584118 UTC , finish = 2025-09-03
| | | F | |      11:07:07.354329429 UTC , thread_cap_info = ("ThreadId 128", 1, False)}
| | | F | |      
| | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 54 , num_strict_rules
| | | | | | F    = 30 , num_top_rules = 30 , num_weak_rules = 24 , alphabet_size = 26 ,
| | | | | | F    total_length = 192} , self = 82 , parent = Nothing , duration = 0.154866108000
| | | | | | F    , status = Fail , start = 2025-09-03 11:07:07.126335063 UTC , finish =
| | | | | | F    2025-09-03 11:07:07.281201171 UTC , thread_cap_info = ("ThreadId 130",
| | | | | | F    3, False)}
| | | | | | F    
| | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 54 , num_strict_rules
| | | | | | | F  = 30 , num_top_rules = 30 , num_weak_rules = 24 , alphabet_size = 26 ,
| | | | | | | F  total_length = 192} , self = 84 , parent = Nothing , duration = 0.274683362000
| | | | | | | F  , status = Fail , start = 2025-09-03 11:07:07.172064574 UTC , finish =
| | | | | | | F  2025-09-03 11:07:07.446747936 UTC , thread_cap_info = ("ThreadId 131",
| | | | | | | F  3, False)}
| | | | | | | F  
| | | | S | | |  
| | | |   | F |  
| | | | S |   |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S |   |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S |   |  = 54 , num_strict_rules = 30 , num_top_rules = 30 , num_weak_rules = 24
| | | | S |   |  , alphabet_size = 26 , total_length = 192} , self = 91 , parent = Nothing
| | | | S |   |  , duration = 0.921695532000 , status = Success , start = 2025-09-03 11:07:07.304680041
| | | | S |   |  UTC , finish = 2025-09-03 11:07:08.226375573 UTC , thread_cap_info = ("ThreadId
| | | | S |   |  135", 3, False)}
| | | | S |   |  
| | | F | |   |  
| | | F | |   |  Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | F | |   |  { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | F | |   |  = MSB_First}\n , max_size = Nothing\n , max_height = Just 6\n , initial
| | | F | |   |  = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | F | |   |  = False}" , input_size = Size { num_rules = 20 , num_strict_rules = 20
| | | F | |   |  , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 15 , total_length
| | | F | |   |  = 76} , self = 89 , parent = Nothing , duration = 0.283076934000 , status
| | | F | |   |  = Fail , start = 2025-09-03 11:07:07.362430609 UTC , finish = 2025-09-03
| | | F | |   |  11:07:07.645507543 UTC , thread_cap_info = ("ThreadId 137", 1, False)}
| | | F | |   |  
| | | | | |   F  
| | | | | | E    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 54
| | | | | | E    , num_strict_rules = 30 , num_top_rules = 30 , num_weak_rules = 24 , alphabet_size
| | | | | | E    = 26 , total_length = 192} , self = 94 , parent = Nothing , duration =
| | | | | | E    0.756679349000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | | E    11:07:07.505928457 UTC , finish = 2025-09-03 11:07:08.262607806 UTC , thread_cap_info
| | | | | | E    = ("ThreadId 138", 3, False)}
| | | | | | E    
| | | F | | |    
| | | F | | |    Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | F | | |    { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | F | | |    = MSB_First}\n , max_size = Nothing\n , max_height = Just 6\n , initial
| | | F | | |    = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | F | | |    = False}" , input_size = Size { num_rules = 20 , num_strict_rules = 20
| | | F | | |    , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 15 , total_length
| | | F | | |    = 76} , self = 92 , parent = Nothing , duration = 0.562835063000 , status
| | | F | | |    = Fail , start = 2025-09-03 11:07:07.663822175 UTC , finish = 2025-09-03
| | | F | | |    11:07:08.226657238 UTC , thread_cap_info = ("ThreadId 148", 1, False)}
| | | F | | |    
| | | | S | |    
| | | F   | |    
| | |     | E    
| S |     |      
S   |     |      
F   |     |      Info { what = "Unlabel\n { accept_null_strict = True\n , produce_null_strict
F   |     |      = False\n , verbose = False\n , tracing = False}" , input_size = Size {
F   |     |      num_rules = 463 , num_strict_rules = 463 , num_top_rules = 0 , num_weak_rules
F   |     |      = 0 , alphabet_size = 169 , total_length = 3050} , self = 108 , parent
F   |     |      = Nothing , duration = 0.228032519000 , status = Fail , start = 2025-09-03
F   |     |      11:07:08.306635473 UTC , finish = 2025-09-03 11:07:08.534667992 UTC , thread_cap_info
F   |     |      = ("ThreadId 158", 1, False)}
F   |     |      
| F |     |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F |     |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F |     |      = False\n , verbose = False}" , input_size = Size { num_rules = 53 , num_strict_rules
| F |     |      = 29 , num_top_rules = 29 , num_weak_rules = 24 , alphabet_size = 26 ,
| F |     |      total_length = 188} , self = 102 , parent = Nothing , duration = 0.102648593000
| F |     |      , status = Fail , start = 2025-09-03 11:07:08.322430176 UTC , finish =
| F |     |      2025-09-03 11:07:08.425078769 UTC , thread_cap_info = ("ThreadId 156",
| F |     |      3, False)}
| F |     |      
| | | F   |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F   |      = False\n , verbose = False}" , input_size = Size { num_rules = 53 , num_strict_rules
| | | F   |      = 29 , num_top_rules = 29 , num_weak_rules = 24 , alphabet_size = 26 ,
| | | F   |      total_length = 188} , self = 105 , parent = Nothing , duration = 0.123100094000
| | | F   |      , status = Fail , start = 2025-09-03 11:07:08.342402035 UTC , finish =
| | | F   |      2025-09-03 11:07:08.465502129 UTC , thread_cap_info = ("ThreadId 157",
| | | F   |      3, False)}
| | | F   |      
| F | |   |      
| S | |   |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | |   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | |   |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | |   |      = 53 , num_strict_rules = 29 , num_top_rules = 29 , num_weak_rules = 24
| S | |   |      , alphabet_size = 26 , total_length = 188} , self = 114 , parent = Nothing
| S | |   |      , duration = 1.605961847000 , status = Success , start = 2025-09-03 11:07:08.425197778
| S | |   |      UTC , finish = 2025-09-03 11:07:10.031159625 UTC , thread_cap_info = ("ThreadId
| S | |   |      161", 3, False)}
| S | |   |      
| | | |   E      
| | | F          
| | | E          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 53
| | | E          , num_strict_rules = 29 , num_top_rules = 29 , num_weak_rules = 24 , alphabet_size
| | | E          = 26 , total_length = 188} , self = 117 , parent = Nothing , duration =
| | | E          2.037039398000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | E          11:07:08.484321239 UTC , finish = 2025-09-03 11:07:10.521360637 UTC , thread_cap_info
| | | E          = ("ThreadId 163", 3, False)}
| | | E          
F | | |          
E | | |          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
E | | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
E | | |          = False\n , verbose = False}" , input_size = Size { num_rules = 463 , num_strict_rules
E | | |          = 463 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 169 ,
E | | |          total_length = 3050} , self = 124 , parent = Nothing , duration = 3.151841398000
E | | |          , status = Except "AsyncCancelled" , start = 2025-09-03 11:07:08.553422543
E | | |          UTC , finish = 2025-09-03 11:07:11.705263941 UTC , thread_cap_info = ("ThreadId
E | | |          170", 1, False)}
E | | |          
| | | | E        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | E        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | E        = False\n , verbose = False}" , input_size = Size { num_rules = 463 , num_strict_rules
| | | | E        = 463 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 169 ,
| | | | E        total_length = 3050} , self = 125 , parent = Nothing , duration = 3.185588194000
| | | | E        , status = Except "AsyncCancelled" , start = 2025-09-03 11:07:08.553426012
| | | | E        UTC , finish = 2025-09-03 11:07:11.739014206 UTC , thread_cap_info = ("ThreadId
| | | | E        172", 1, False)}
| | | | E        
| | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 32 , num_strict_rules
| | | | | F      = 8 , num_top_rules = 8 , num_weak_rules = 24 , alphabet_size = 18 , total_length
| | | | | F      = 129} , self = 112 , parent = Nothing , duration = 0.200160762000 , status
| | | | | F      = Fail , start = 2025-09-03 11:07:08.564108892 UTC , finish = 2025-09-03
| | | | | F      11:07:08.764269654 UTC , thread_cap_info = ("ThreadId 167", 3, False)}
| | | | | F      
| | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 32 , num_strict_rules
| | | | | | F    = 8 , num_top_rules = 8 , num_weak_rules = 24 , alphabet_size = 18 , total_length
| | | | | | F    = 129} , self = 113 , parent = Nothing , duration = 0.262430689000 , status
| | | | | | F    = Fail , start = 2025-09-03 11:07:08.582405631 UTC , finish = 2025-09-03
| | | | | | F    11:07:08.84483632 UTC , thread_cap_info = ("ThreadId 168", 3, False)}
| | | | | | F    
| | | | | F |    
| | | | | F |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F |    = 32 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 24 ,
| | | | | F |    alphabet_size = 18 , total_length = 129} , self = 115 , parent = Nothing
| | | | | F |    , duration = 1.208843814000 , status = Fail , start = 2025-09-03 11:07:08.822404809
| | | | | F |    UTC , finish = 2025-09-03 11:07:10.031248623 UTC , thread_cap_info = ("ThreadId
| | | | | F |    177", 3, False)}
| | | | | F |    
| | | | | | F    
| S | | | |      
|   | | | F      
| F | | |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| F | | |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F | | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F | | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 32
| F | | |        , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 24 , alphabet_size
| F | | |        = 18 , total_length = 129} , self = 126 , parent = Nothing , duration =
| F | | |        2.818892759000 , status = Fail , start = 2025-09-03 11:07:10.083511518
| F | | |        UTC , finish = 2025-09-03 11:07:12.902404277 UTC , thread_cap_info = ("ThreadId
| F | | |        182", 3, False)}
| F | | |        
| | | E |        
| | | F |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F |        = False\n , verbose = False}" , input_size = Size { num_rules = 52 , num_strict_rules
| | | F |        = 28 , num_top_rules = 28 , num_weak_rules = 24 , alphabet_size = 26 ,
| | | F |        total_length = 185} , self = 122 , parent = Nothing , duration = 0.231294970000
| | | F |        , status = Fail , start = 2025-09-03 11:07:10.642402825 UTC , finish =
| | | F |        2025-09-03 11:07:10.873697795 UTC , thread_cap_info = ("ThreadId 188",
| | | F |        3, False)}
| | | F |        
| | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 52 , num_strict_rules
| | | | | F      = 28 , num_top_rules = 28 , num_weak_rules = 24 , alphabet_size = 26 ,
| | | | | F      total_length = 185} , self = 123 , parent = Nothing , duration = 0.249659497000
| | | | | F      , status = Fail , start = 2025-09-03 11:07:10.682403793 UTC , finish =
| | | | | F      2025-09-03 11:07:10.93206329 UTC , thread_cap_info = ("ThreadId 189", 3,
| | | | | F      False)}
| | | | | F      
| | | F | |      
| | | S | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S | |      = 52 , num_strict_rules = 28 , num_top_rules = 28 , num_weak_rules = 24
| | | S | |      , alphabet_size = 26 , total_length = 185} , self = 127 , parent = Nothing
| | | S | |      , duration = 2.293472315000 , status = Success , start = 2025-09-03 11:07:10.878518008
| | | S | |      UTC , finish = 2025-09-03 11:07:13.171990323 UTC , thread_cap_info = ("ThreadId
| | | S | |      192", 3, False)}
| | | S | |      
| | | | | F      
| | | | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 52
| | | | | E      , num_strict_rules = 28 , num_top_rules = 28 , num_weak_rules = 24 , alphabet_size
| | | | | E      = 26 , total_length = 185} , self = 129 , parent = Nothing , duration =
| | | | | E      2.578950122000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | E      11:07:10.947208948 UTC , finish = 2025-09-03 11:07:13.52615907 UTC , thread_cap_info
| | | | | E      = ("ThreadId 193", 3, False)}
| | | | | E      
E | | | | |      
  | | | E |      
  F | |   |      
    | S   |      
    |     E      
F   |            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F   |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F   |            = False\n , verbose = False}" , input_size = Size { num_rules = 51 , num_strict_rules
F   |            = 27 , num_top_rules = 27 , num_weak_rules = 24 , alphabet_size = 26 ,
F   |            total_length = 181} , self = 134 , parent = Nothing , duration = 0.168270482000
F   |            , status = Fail , start = 2025-09-03 11:07:13.53626842 UTC , finish = 2025-09-03
F   |            11:07:13.704538902 UTC , thread_cap_info = ("ThreadId 205", 3, False)}
F   |            
| F |            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F |            = False\n , verbose = False}" , input_size = Size { num_rules = 51 , num_strict_rules
| F |            = 27 , num_top_rules = 27 , num_weak_rules = 24 , alphabet_size = 26 ,
| F |            total_length = 181} , self = 135 , parent = Nothing , duration = 0.161593790000
| F |            , status = Fail , start = 2025-09-03 11:07:13.542994278 UTC , finish =
| F |            2025-09-03 11:07:13.704588068 UTC , thread_cap_info = ("ThreadId 206",
| F |            3, False)}
| F |            
F | |            
  F |            
F   |            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F   |            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F   |            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F   |            = 51 , num_strict_rules = 27 , num_top_rules = 27 , num_weak_rules = 24
F   |            , alphabet_size = 26 , total_length = 181} , self = 136 , parent = Nothing
F   |            , duration = 2.246659186000 , status = Fail , start = 2025-09-03 11:07:13.704619547
F   |            UTC , finish = 2025-09-03 11:07:15.951278733 UTC , thread_cap_info = ("ThreadId
F   |            209", 3, False)}
F   |            
F   |            
    F            
S                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
S                , closure = Forward\n , start_strict_only = True\n , max_closure_length
S                = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
S                , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
S                max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
S                [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
S                string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
S                , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
S                = True})" , input_size = Size { num_rules = 24 , num_strict_rules = 24
S                , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 15 , total_length
S                = 92} , self = 138 , parent = Nothing , duration = 1.498347545000 , status
S                = Success , start = 2025-09-03 11:07:16.137650204 UTC , finish = 2025-09-03
S                11:07:17.635997749 UTC , thread_cap_info = ("ThreadId 214", 2, False)}
S                
S                
