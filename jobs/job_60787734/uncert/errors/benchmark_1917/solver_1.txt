last 733 length 2941
last 14405 length 60596
CNF 14405 vars 60596 clauses
CNF 733 vars 2941 clauses
last 734 length 2916
CNF 734 vars 2916 clauses
last 16949 length 71738
last 569 length 2307
CNF 569 vars 2307 clauses
last 547 length 2163
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3479, clauses: 12474
CNF 16949 vars 71738 clauses
CNF 547 vars 2163 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2346, clauses: 8309
last 3479 length 12474
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9948, clauses: 41134
last 2346 length 8309
CNF 3479 vars 12474 clauses
last 9948 length 41134
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8229, clauses: 34089
CNF 2346 vars 8309 clauses
CNF 9948 vars 41134 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3479, clauses: 12474, status: Satisfied, time: 0.139742698s
last 8229 length 34089
CNF 8229 vars 34089 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2346, clauses: 8309, status: Unsatisfied, time: 0.186835062s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5044, clauses: 19900
last 5044 length 19900
last 599 length 2362
CNF 5044 vars 19900 clauses
CNF 599 vars 2362 clauses
last 595 length 2380
CNF 595 vars 2380 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2861, clauses: 10155
last 2861 length 10155
CNF 2861 vars 10155 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8944, clauses: 36985
last 8944 length 36985
CNF 8944 vars 36985 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2861, clauses: 10155, status: Unsatisfied, time: 0.216168329s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5551, clauses: 21823
last 5551 length 21823
CNF 5551 vars 21823 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8944, clauses: 36985, status: Satisfied, time: 0.400539984s
last 531 length 2100
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5044, clauses: 19900, status: Unsatisfied, time: 0.651827577s
CNF 531 vars 2100 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3821, clauses: 14430
last 3821 length 14430
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8229, clauses: 34089, status: Unsatisfied, time: 0.999446035s
CNF 3821 vars 14430 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2358, clauses: 8354
last 2358 length 8354
last 541 length 2176
CNF 2358 vars 8354 clauses
CNF 541 vars 2176 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2358, clauses: 8354, status: Unsatisfied, time: 0.163461914s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3821, clauses: 14430, status: Unsatisfied, time: 0.181213113s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14524, clauses: 58679
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8231, clauses: 34095
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5050, clauses: 19926
last 14524 length 58679
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7186, clauses: 27001
last 8231 length 34095
last 5050 length 19926
last 7186 length 27001
CNF 5050 vars 19926 clauses
CNF 14524 vars 58679 clauses
CNF 8231 vars 34095 clauses
CNF 7186 vars 27001 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8231, clauses: 34095, status: Satisfied, time: 0.105000346s
**************************************************
summary
**************************************************
SRS with 7 rules on 4 letters       DP
SRS with 15 strict rules and 7 weak rules on 8 letters       weights
SRS with 6 strict rules and 7 weak rules on 7 letters       EDG
SRS with 5 strict rules and 7 weak rules on 7 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 4 strict rules and 7 weak rules on 7 letters       weights
SRS with 3 strict rules and 7 weak rules on 6 letters       EDG
SRS with 3 strict rules and 7 weak rules on 6 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 7 weak rules on 6 letters       weights
SRS with 1 strict rules and 7 weak rules on 5 letters       EDG
SRS with 1 strict rules and 7 weak rules on 5 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 7 weak rules on 4 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, a, a] -> [a, b, c] {- Input 0 -}
  [c, a] -> [a, c] {- Input 1 -}
  [b, c, a] -> [a, b, c] {- Input 2 -}
  [c, b] -> [d] {- Input 3 -}
  [d] -> [b, a] {- Input 4 -}
  [a, d] -> [d, a] {- Input 5 -}
  [a, a] -> [a, b, a] {- Input 6 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [b, a, a] ->= [a, b, c] {- DP Nontop (Input 0) -}
  [c, a] ->= [a, c] {- DP Nontop (Input 1) -}
  [b, c, a] ->= [a, b, c] {- DP Nontop (Input 2) -}
  [c, b] ->= [d] {- DP Nontop (Input 3) -}
  [d] ->= [b, a] {- DP Nontop (Input 4) -}
  [a, d] ->= [d, a] {- DP Nontop (Input 5) -}
  [a, a] ->= [a, b, a] {- DP Nontop (Input 6) -}
  [d#] |-> [a#] {- DP (Top 1) (Input 4) -}
  [d#] |-> [b#, a] {- DP (Top 0) (Input 4) -}
  [a#, d] |-> [d#, a] {- DP (Top 0) (Input 5) -}
  [a#, d] |-> [a#] {- DP (Top 1) (Input 5) -}
  [a#, a] |-> [a#, b, a] {- DP (Top 0) (Input 6) -}
  [a#, a] |-> [b#, a] {- DP (Top 1) (Input 6) -}
  [b#, a, a] |-> [a#, b, c] {- DP (Top 0) (Input 0) -}
  [b#, a, a] |-> [b#, c] {- DP (Top 1) (Input 0) -}
  [b#, a, a] |-> [c#] {- DP (Top 2) (Input 0) -}
  [b#, c, a] |-> [a#, b, c] {- DP (Top 0) (Input 2) -}
  [b#, c, a] |-> [b#, c] {- DP (Top 1) (Input 2) -}
  [b#, c, a] |-> [c#] {- DP (Top 2) (Input 2) -}
  [c#, a] |-> [a#, c] {- DP (Top 0) (Input 1) -}
  [c#, a] |-> [c#] {- DP (Top 1) (Input 1) -}
  [c#, b] |-> [d#] {- DP (Top 0) (Input 3) -}
reason
  (d, 2/1)
  (a, 2/1)
  (b, 0/1)
  (c, 2/1)
  (d#, 2/1)
  (a#, 2/1)
  (b#, 0/1)
  (c#, 3/1)
   property Termination
has value Just True
for SRS
  [b, a, a] ->= [a, b, c] {- DP Nontop (Input 0) -}
  [c, a] ->= [a, c] {- DP Nontop (Input 1) -}
  [b, c, a] ->= [a, b, c] {- DP Nontop (Input 2) -}
  [c, b] ->= [d] {- DP Nontop (Input 3) -}
  [d] ->= [b, a] {- DP Nontop (Input 4) -}
  [a, d] ->= [d, a] {- DP Nontop (Input 5) -}
  [a, a] ->= [a, b, a] {- DP Nontop (Input 6) -}
  [d#] |-> [a#] {- DP (Top 1) (Input 4) -}
  [d#] |-> [b#, a] {- DP (Top 0) (Input 4) -}
  [a#, d] |-> [d#, a] {- DP (Top 0) (Input 5) -}
  [a#, a] |-> [a#, b, a] {- DP (Top 0) (Input 6) -}
  [b#, a, a] |-> [a#, b, c] {- DP (Top 0) (Input 0) -}
  [b#, c, a] |-> [a#, b, c] {- DP (Top 0) (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [d#] |-> [a#] {- DP (Top 1) (Input 4) -}
  [a#, d] |-> [d#, a] {- DP (Top 0) (Input 5) -}
  [d#] |-> [b#, a] {- DP (Top 0) (Input 4) -}
  [b#, a, a] |-> [a#, b, c] {- DP (Top 0) (Input 0) -}
  [a#, a] |-> [a#, b, a] {- DP (Top 0) (Input 6) -}
  [b, a, a] ->= [a, b, c] {- DP Nontop (Input 0) -}
  [c, a] ->= [a, c] {- DP Nontop (Input 1) -}
  [b, c, a] ->= [a, b, c] {- DP Nontop (Input 2) -}
  [c, b] ->= [d] {- DP Nontop (Input 3) -}
  [d] ->= [b, a] {- DP Nontop (Input 4) -}
  [a, d] ->= [d, a] {- DP Nontop (Input 5) -}
  [a, a] ->= [a, b, a] {- DP Nontop (Input 6) -}
reason
  ( d
  , Wk  / 9A 9A 9A - \
        | 9A 9A 9A - |
        | 9A 9A 9A - |
        \ -  -  -  - / )
  ( a
  , Wk  / 9A 9A 9A - \
        | 6A 6A 9A - |
        | 6A 6A 9A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A  0A  0A  - \
        | 0A  0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( c
  , Wk  / 9A 9A 9A - \
        | 9A 9A 9A - |
        | 9A 9A 9A - |
        \ -  -  -  - / )
  ( d#
  , Wk  / 12A 12A 14A - \
        | 12A 12A 14A - |
        | 12A 12A 14A - |
        \ -   -   -   - / )
  ( a#
  , Wk  / 11A 11A 14A - \
        | 11A 11A 14A - |
        | 11A 11A 14A - |
        \ -   -   -   - / )
  ( b#
  , Wk  / 2A 2A 2A - \
        | 2A 2A 2A - |
        | 2A 2A 2A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [d#] |-> [a#] {- DP (Top 1) (Input 4) -}
  [a#, d] |-> [d#, a] {- DP (Top 0) (Input 5) -}
  [b#, a, a] |-> [a#, b, c] {- DP (Top 0) (Input 0) -}
  [a#, a] |-> [a#, b, a] {- DP (Top 0) (Input 6) -}
  [b, a, a] ->= [a, b, c] {- DP Nontop (Input 0) -}
  [c, a] ->= [a, c] {- DP Nontop (Input 1) -}
  [b, c, a] ->= [a, b, c] {- DP Nontop (Input 2) -}
  [c, b] ->= [d] {- DP Nontop (Input 3) -}
  [d] ->= [b, a] {- DP Nontop (Input 4) -}
  [a, d] ->= [d, a] {- DP Nontop (Input 5) -}
  [a, a] ->= [a, b, a] {- DP Nontop (Input 6) -}
reason
  (d, 0/1)
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (d#, 0/1)
  (a#, 0/1)
  (b#, 1/1)
   property Termination
has value Just True
for SRS
  [d#] |-> [a#] {- DP (Top 1) (Input 4) -}
  [a#, d] |-> [d#, a] {- DP (Top 0) (Input 5) -}
  [a#, a] |-> [a#, b, a] {- DP (Top 0) (Input 6) -}
  [b, a, a] ->= [a, b, c] {- DP Nontop (Input 0) -}
  [c, a] ->= [a, c] {- DP Nontop (Input 1) -}
  [b, c, a] ->= [a, b, c] {- DP Nontop (Input 2) -}
  [c, b] ->= [d] {- DP Nontop (Input 3) -}
  [d] ->= [b, a] {- DP Nontop (Input 4) -}
  [a, d] ->= [d, a] {- DP Nontop (Input 5) -}
  [a, a] ->= [a, b, a] {- DP Nontop (Input 6) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [d#] |-> [a#] {- DP (Top 1) (Input 4) -}
  [a#, d] |-> [d#, a] {- DP (Top 0) (Input 5) -}
  [a#, a] |-> [a#, b, a] {- DP (Top 0) (Input 6) -}
  [b, a, a] ->= [a, b, c] {- DP Nontop (Input 0) -}
  [c, a] ->= [a, c] {- DP Nontop (Input 1) -}
  [b, c, a] ->= [a, b, c] {- DP Nontop (Input 2) -}
  [c, b] ->= [d] {- DP Nontop (Input 3) -}
  [d] ->= [b, a] {- DP Nontop (Input 4) -}
  [a, d] ->= [d, a] {- DP Nontop (Input 5) -}
  [a, a] ->= [a, b, a] {- DP Nontop (Input 6) -}
reason
  ( d
  , Wk  / 1A 0A 1A \
        | -  1A 2A |
        \ -  -  0A / )
  ( a
  , Wk  / 1A 0A 1A  \
        | -  0A -1A |
        \ -  -  0A  / )
  ( b
  , Wk  / 0A 0A 1A  \
        | -  -  -1A |
        \ -  -  0A  / )
  ( c
  , Wk  / 1A - -  \
        | 1A - -  |
        \ -  - 0A / )
  ( d#
  , Wk  / - 0A 1A \
        | - -  -  |
        \ - -  0A / )
  ( a#
  , Wk  / - -1A 0A \
        | - -   -  |
        \ - -   0A / )
   property Termination
has value Just True
for SRS
  [a#, d] |-> [d#, a] {- DP (Top 0) (Input 5) -}
  [a#, a] |-> [a#, b, a] {- DP (Top 0) (Input 6) -}
  [b, a, a] ->= [a, b, c] {- DP Nontop (Input 0) -}
  [c, a] ->= [a, c] {- DP Nontop (Input 1) -}
  [b, c, a] ->= [a, b, c] {- DP Nontop (Input 2) -}
  [c, b] ->= [d] {- DP Nontop (Input 3) -}
  [d] ->= [b, a] {- DP Nontop (Input 4) -}
  [a, d] ->= [d, a] {- DP Nontop (Input 5) -}
  [a, a] ->= [a, b, a] {- DP Nontop (Input 6) -}
reason
  (d, 0/1)
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (d#, 0/1)
  (a#, 1/1)
   property Termination
has value Just True
for SRS
  [a#, a] |-> [a#, b, a] {- DP (Top 0) (Input 6) -}
  [b, a, a] ->= [a, b, c] {- DP Nontop (Input 0) -}
  [c, a] ->= [a, c] {- DP Nontop (Input 1) -}
  [b, c, a] ->= [a, b, c] {- DP Nontop (Input 2) -}
  [c, b] ->= [d] {- DP Nontop (Input 3) -}
  [d] ->= [b, a] {- DP Nontop (Input 4) -}
  [a, d] ->= [d, a] {- DP Nontop (Input 5) -}
  [a, a] ->= [a, b, a] {- DP Nontop (Input 6) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a] |-> [a#, b, a] {- DP (Top 0) (Input 6) -}
  [b, a, a] ->= [a, b, c] {- DP Nontop (Input 0) -}
  [c, a] ->= [a, c] {- DP Nontop (Input 1) -}
  [b, c, a] ->= [a, b, c] {- DP Nontop (Input 2) -}
  [c, b] ->= [d] {- DP Nontop (Input 3) -}
  [d] ->= [b, a] {- DP Nontop (Input 4) -}
  [a, d] ->= [d, a] {- DP Nontop (Input 5) -}
  [a, a] ->= [a, b, a] {- DP Nontop (Input 6) -}
reason
  ( d
  , Wk  / 0A  0A 2A \
        | -2A 0A 0A |
        \ -   -  0A / )
  ( a
  , Wk  / 0A 2A 2A  \
        | 0A -  -1A |
        \ -  -  0A  / )
  ( b
  , Wk  / -   0A 0A  \
        | -2A -  -1A |
        \ -   -  0A  / )
  ( c
  , Wk  / 0A 2A 2A \
        | 0A 0A -  |
        \ -  -  0A / )
  ( a#
  , Wk  / -1A 0A 0A \
        | -   -  -  |
        \ -   -  0A / )
   property Termination
has value Just True
for SRS
  [b, a, a] ->= [a, b, c] {- DP Nontop (Input 0) -}
  [c, a] ->= [a, c] {- DP Nontop (Input 1) -}
  [b, c, a] ->= [a, b, c] {- DP Nontop (Input 2) -}
  [c, b] ->= [d] {- DP Nontop (Input 3) -}
  [d] ->= [b, a] {- DP Nontop (Input 4) -}
  [a, d] ->= [d, a] {- DP Nontop (Input 5) -}
  [a, a] ->= [a, b, a] {- DP Nontop (Input 6) -}
reason
  EDG

**************************************************
skeleton: (7,4)\Deepee(15/7,8)\Weight(6/7,7)\EDG(5/7,7)\Matrix{\Arctic}{3}(4/7,7)\Weight\EDG(3/7,6)\Matrix{\ArcticBZ}{3}(2/7,6)\Weight\EDG(1/7,5)\Matrix{\ArcticBZ}{3}(0/7,4)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.719652730000
  min duration 0.030986243000
  total durat. 1.304471802000
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.086507961000
  min duration 1.086507961000
  total durat. 1.086507961000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 7
      , alphabet_size = 5
      , total_length = 36}
    , self = 87
    , parent = Nothing
    , duration = 1.086507961000
    , status = Fail
    , start = 2025-09-03 13:39:17.916680442 UTC
    , finish = 2025-09-03 13:39:19.003188403 UTC
    , thread_cap_info = ("ThreadId 106", 2, False)}
**************************************************
F          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
F          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
F          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
F          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
F          = Size { num_rules = 112 , num_strict_rules = 112 , num_top_rules = 0 ,
F          num_weak_rules = 0 , alphabet_size = 16 , total_length = 720} , self =
F          59 , parent = Nothing , duration = 0.422588220000 , status = Fail , start
F          = 2025-09-03 13:39:17.170077541 UTC , finish = 2025-09-03 13:39:17.592665761
F          UTC , thread_cap_info = ("ThreadId 53", 0, False)}
F          
| F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F        = False\n , verbose = False}" , input_size = Size { num_rules = 112 , num_strict_rules
| F        = 112 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 16 , total_length
| F        = 720} , self = 66 , parent = Nothing , duration = 0.719652730000 , status
| F        = Fail , start = 2025-09-03 13:39:17.207933066 UTC , finish = 2025-09-03
| F        13:39:17.927585796 UTC , thread_cap_info = ("ThreadId 66", 2, False)}
| F        
| | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F      = False\n , verbose = False}" , input_size = Size { num_rules = 112 , num_strict_rules
| | F      = 112 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 16 , total_length
| | F      = 720} , self = 63 , parent = Nothing , duration = 0.462355912000 , status
| | F      = Fail , start = 2025-09-03 13:39:17.223229637 UTC , finish = 2025-09-03
| | F      13:39:17.685585549 UTC , thread_cap_info = ("ThreadId 68", 2, False)}
| | F      
| | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | F    = 5 , num_top_rules = 5 , num_weak_rules = 7 , alphabet_size = 7 , total_length
| | | F    = 51} , self = 60 , parent = Nothing , duration = 0.105333136000 , status
| | | F    = Fail , start = 2025-09-03 13:39:17.563271082 UTC , finish = 2025-09-03
| | | F    13:39:17.668604218 UTC , thread_cap_info = ("ThreadId 91", 2, False)}
| | | F    
| | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | F  = 5 , num_top_rules = 5 , num_weak_rules = 7 , alphabet_size = 7 , total_length
| | | | F  = 51} , self = 62 , parent = Nothing , duration = 0.104115515000 , status
| | | | F  = Fail , start = 2025-09-03 13:39:17.58145668 UTC , finish = 2025-09-03
| | | | F  13:39:17.685572195 UTC , thread_cap_info = ("ThreadId 92", 2, False)}
| | | | F  
F | | | |  
  | | F |  
  | |   F  
  | F      
S |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S |        = 12 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 7 ,
S |        alphabet_size = 7 , total_length = 51} , self = 67 , parent = Nothing ,
S |        duration = 0.330038898000 , status = Success , start = 2025-09-03 13:39:17.694544935
S |        UTC , finish = 2025-09-03 13:39:18.024583833 UTC , thread_cap_info = ("ThreadId
S |        98", 2, False)}
S |        
| | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F      = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | F      = 1 , num_top_rules = 1 , num_weak_rules = 7 , alphabet_size = 5 , total_length
| | F      = 36} , self = 64 , parent = Nothing , duration = 0.104735189000 , status
| | F      = Fail , start = 2025-09-03 13:39:17.698521035 UTC , finish = 2025-09-03
| | F      13:39:17.803256224 UTC , thread_cap_info = ("ThreadId 100", 2, False)}
| | F      
| | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | F    = 1 , num_top_rules = 1 , num_weak_rules = 7 , alphabet_size = 5 , total_length
| | | F    = 36} , self = 65 , parent = Nothing , duration = 0.214748133000 , status
| | | F    = Fail , start = 2025-09-03 13:39:17.701899222 UTC , finish = 2025-09-03
| | | F    13:39:17.916647355 UTC , thread_cap_info = ("ThreadId 101", 2, False)}
| | | F    
| | | | E  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | | E  , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 7 , alphabet_size
| | | | E  = 7 , total_length = 51} , self = 70 , parent = Nothing , duration = 0.464896766000
| | | | E  , status = Except "AsyncCancelled" , start = 2025-09-03 13:39:17.703230162
| | | | E  UTC , finish = 2025-09-03 13:39:18.168126928 UTC , thread_cap_info = ("ThreadId
| | | | E  102", 2, False)}
| | | | E  
| | F | |  
| | F | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | |  = 8 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 7 , alphabet_size
| | F | |  = 5 , total_length = 36} , self = 69 , parent = Nothing , duration = 0.260844574000
| | F | |  , status = Fail , start = 2025-09-03 13:39:17.843798959 UTC , finish =
| | F | |  2025-09-03 13:39:18.104643533 UTC , thread_cap_info = ("ThreadId 105",
| | F | |  2, False)}
| | F | |  
| | | F |  
| | | F |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | F |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | F |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | F |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | F |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 7 , alphabet_size
| | | F |  = 5 , total_length = 36} , self = 87 , parent = Nothing , duration = 1.086507961000
| | | F |  , status = Fail , start = 2025-09-03 13:39:17.916680442 UTC , finish =
| | | F |  2025-09-03 13:39:19.003188403 UTC , thread_cap_info = ("ThreadId 106",
| | | F |  2, False)}
| | | F |  
| F | | |  
S   | | |  
    F | |  
F     | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
F     | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F     | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F     | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F     | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F     | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
F     | |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 7 , alphabet_size
F     | |  = 5 , total_length = 36} , self = 85 , parent = Nothing , duration = 0.706798937000
F     | |  , status = Fail , start = 2025-09-03 13:39:18.115682259 UTC , finish =
F     | |  2025-09-03 13:39:18.822481196 UTC , thread_cap_info = ("ThreadId 114",
F     | |  2, False)}
F     | |  
|     | E  
| F   |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F   |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F   |    = 10 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 7 ,
| F   |    alphabet_size = 6 , total_length = 42} , self = 77 , parent = Nothing ,
| F   |    duration = 0.303052918000 , status = Fail , start = 2025-09-03 13:39:18.198900425
| F   |    UTC , finish = 2025-09-03 13:39:18.501953343 UTC , thread_cap_info = ("ThreadId
| F   |    123", 2, False)}
| F   |    
| | S |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | S |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | S |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | S |    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 7 , alphabet_size
| | S |    = 6 , total_length = 42} , self = 78 , parent = Nothing , duration = 0.608537628000
| | S |    , status = Success , start = 2025-09-03 13:39:18.204479381 UTC , finish
| | S |    = 2025-09-03 13:39:18.813017009 UTC , thread_cap_info = ("ThreadId 124",
| | S |    2, False)}
| | S |    
| F | |    
| E | |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| E | |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| E | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| E | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| E | |    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 7 , alphabet_size
| E | |    = 6 , total_length = 42} , self = 80 , parent = Nothing , duration = 0.311039067000
| E | |    , status = Except "AsyncCancelled" , start = 2025-09-03 13:39:18.503252868
| E | |    UTC , finish = 2025-09-03 13:39:18.814291935 UTC , thread_cap_info = ("ThreadId
| E | |    127", 2, False)}
| E | |    
| | S |    
| E   |    
| F   |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F   |    = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| F   |    = 1 , num_top_rules = 1 , num_weak_rules = 7 , alphabet_size = 5 , total_length
| F   |    = 36} , self = 88 , parent = Nothing , duration = 0.343764504000 , status
| F   |    = Fail , start = 2025-09-03 13:39:18.822286758 UTC , finish = 2025-09-03
| F   |    13:39:19.166051262 UTC , thread_cap_info = ("ThreadId 133", 2, False)}
| F   |    
F |   |    
F |   |    Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
F |   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F |   |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F |   |    = 8 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 7 , alphabet_size
F |   |    = 5 , total_length = 36} , self = 90 , parent = Nothing , duration = 0.461053346000
F |   |    , status = Fail , start = 2025-09-03 13:39:18.823360817 UTC , finish =
F |   |    2025-09-03 13:39:19.284414163 UTC , thread_cap_info = ("ThreadId 136",
F |   |    2, False)}
F |   |    
| | F |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F |    = 8 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 7 , alphabet_size
| | F |    = 5 , total_length = 36} , self = 89 , parent = Nothing , duration = 0.359984559000
| | F |    , status = Fail , start = 2025-09-03 13:39:18.863248981 UTC , finish =
| | F |    2025-09-03 13:39:19.22323354 UTC , thread_cap_info = ("ThreadId 137", 2,
| | F |    False)}
| | F |    
| | | F    
| F |      
| S |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| S |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| S |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| S |      , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 7 , alphabet_size
| S |      = 5 , total_length = 36} , self = 91 , parent = Nothing , duration = 0.267214252000
| S |      , status = Success , start = 2025-09-03 13:39:19.18420977 UTC , finish
| S |      = 2025-09-03 13:39:19.451424022 UTC , thread_cap_info = ("ThreadId 142",
| S |      2, False)}
| S |      
| | F      
| | E      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | E      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | E      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | E      , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 7 , alphabet_size
| | E      = 5 , total_length = 36} , self = 93 , parent = Nothing , duration = 0.208342079000
| | E      , status = Except "AsyncCancelled" , start = 2025-09-03 13:39:19.243328623
| | E      UTC , finish = 2025-09-03 13:39:19.451670702 UTC , thread_cap_info = ("ThreadId
| | E      143", 2, False)}
| | E      
F | |      
  S |      
    E      
