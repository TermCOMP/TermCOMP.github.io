last 1376 length 7657
CNF 1376 vars 7657 clauses
last 3050 length 14846
CNF 3050 vars 14846 clauses
**************************************************
summary
**************************************************
SRS with 1 rules on 2 letters       Drop
SRS with 1 rules on 2 letters       Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 71 states

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, a, b, a, b, a, a, a, b, a] -> [ a , a , b , a , a , a , b , a , b , a , b , a , b , a ] {- Input 0 -}
reason
  Drop
    property Termination
    has value Just True
    for SRS
      [b, a, b, a, b, a, a, a] -> [ a , a , b , a , a , a , b , a , b , a , b , a ] {- Dropped 0 2 (Input 0) -}
    reason
      Matchbound
        Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 71 states

   property Termination
has value Just True
for SRS
  [b, a, b, a, b, a, a, a] -> [ a , a , b , a , a , a , b , a , b , a , b , a ] {- Dropped 0 2 (Input 0) -}
reason
  Matchbound
    Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 71 states

**************************************************
skeleton: \Drop{0}{2}(1,2)\Rfcmatchbound{1}[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 5
  max duration 1.283645661000
  min duration 0.582042923000
  total durat. 4.263183854000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 24}
    , self = 67
    , parent = Nothing
    , duration = 1.129631457000
    , status = Fail
    , start = 2025-09-03 12:53:43.046106377 UTC
    , finish = 2025-09-03 12:53:44.175737834 UTC
    , thread_cap_info = ("ThreadId 134", 1, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 22}
    , self = 70
    , parent = Nothing
    , duration = 1.283645661000
    , status = Fail
    , start = 2025-09-03 12:53:43.143050845 UTC
    , finish = 2025-09-03 12:53:44.426696506 UTC
    , thread_cap_info = ("ThreadId 139", 1, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 4
  max duration 1.620517927000
  min duration 0.900061681000
  total durat. 5.400836230000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 20}
    , self = 74
    , parent = Nothing
    , duration = 1.360242618000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:53:43.442862602 UTC
    , finish = 2025-09-03 12:53:44.80310522 UTC
    , thread_cap_info = ("ThreadId 151", 1, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 18}
    , self = 78
    , parent = Nothing
    , duration = 1.520014004000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:53:43.502944855 UTC
    , finish = 2025-09-03 12:53:45.022958859 UTC
    , thread_cap_info = ("ThreadId 154", 1, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 22}
    , self = 77
    , parent = Nothing
    , duration = 1.620517927000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:53:43.342864584 UTC
    , finish = 2025-09-03 12:53:44.963382511 UTC
    , thread_cap_info = ("ThreadId 149", 1, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 4
  max duration 1.420867066000
  min duration 0.819819596000
  total durat. 4.900067495000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 18}
    , self = 75
    , parent = Nothing
    , duration = 1.319376431000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:53:43.483735632 UTC
    , finish = 2025-09-03 12:53:44.803112063 UTC
    , thread_cap_info = ("ThreadId 153", 1, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 24}
    , self = 76
    , parent = Nothing
    , duration = 1.340004402000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:53:43.582864485 UTC
    , finish = 2025-09-03 12:53:44.922868887 UTC
    , thread_cap_info = ("ThreadId 155", 1, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 22}
    , self = 72
    , parent = Nothing
    , duration = 1.420867066000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:53:43.122865031 UTC
    , finish = 2025-09-03 12:53:44.543732097 UTC
    , thread_cap_info = ("ThreadId 138", 1, False)}
Except "AsyncCancelled" : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = False}"
  total number 5
  max duration 2.293663792000
  min duration 0.819988969000
  total durat. 7.629859246000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 22}
    , self = 68
    , parent = Nothing
    , duration = 1.300181041000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:53:42.882863082 UTC
    , finish = 2025-09-03 12:53:44.183044123 UTC
    , thread_cap_info = ("ThreadId 86", 1, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 18}
    , self = 71
    , parent = Nothing
    , duration = 1.479340705000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:53:42.963521415 UTC
    , finish = 2025-09-03 12:53:44.44286212 UTC
    , thread_cap_info = ("ThreadId 109", 1, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 24}
    , self = 73
    , parent = Nothing
    , duration = 1.736684739000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:53:42.99049248 UTC
    , finish = 2025-09-03 12:53:44.727177219 UTC
    , thread_cap_info = ("ThreadId 114", 1, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 24}
    , self = 80
    , parent = Nothing
    , duration = 2.293663792000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:53:42.749424797 UTC
    , finish = 2025-09-03 12:53:45.043088589 UTC
    , thread_cap_info = ("ThreadId 22", 1, False)}
**************************************************
E                                    Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
E                                    , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
E                                    = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
E                                    , string_implementation = ByteString Plain\n , tracing = False\n , cpf
E                                    = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
E                                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
E                                    = 24} , self = 80 , parent = Nothing , duration = 2.293663792000 , status
E                                    = Except "AsyncCancelled" , start = 2025-09-03 12:53:42.749424797 UTC ,
E                                    finish = 2025-09-03 12:53:45.043088589 UTC , thread_cap_info = ("ThreadId
E                                    22", 1, False)}
E                                    
| F                                  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F                                  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F                                  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F                                  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F                                  = Size { num_rules = 2 , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules
| F                                  = 0 , alphabet_size = 3 , total_length = 52} , self = 59 , parent = Nothing
| F                                  , duration = 0.584495248000 , status = Fail , start = 2025-09-03 12:53:42.750727302
| F                                  UTC , finish = 2025-09-03 12:53:43.33522255 UTC , thread_cap_info = ("ThreadId
| F                                  55", 3, False)}
| F                                  
| | E                                Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | E                                , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | E                                = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | E                                , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | E                                = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | E                                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | E                                = 22} , self = 68 , parent = Nothing , duration = 1.300181041000 , status
| | E                                = Except "AsyncCancelled" , start = 2025-09-03 12:53:42.882863082 UTC ,
| | E                                finish = 2025-09-03 12:53:44.183044123 UTC , thread_cap_info = ("ThreadId
| | E                                86", 1, False)}
| | E                                
| | | E                              Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | E                              , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | E                              = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | E                              , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | E                              = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | E                              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | E                              = 20} , self = 65 , parent = Nothing , duration = 0.819988969000 , status
| | | E                              = Except "AsyncCancelled" , start = 2025-09-03 12:53:42.902873315 UTC ,
| | | E                              finish = 2025-09-03 12:53:43.722862284 UTC , thread_cap_info = ("ThreadId
| | | E                              94", 1, False)}
| | | E                              
| | | | E                            Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | E                            , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | E                            = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | E                            , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | E                            = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | E                            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | E                            = 18} , self = 71 , parent = Nothing , duration = 1.479340705000 , status
| | | | E                            = Except "AsyncCancelled" , start = 2025-09-03 12:53:42.963521415 UTC ,
| | | | E                            finish = 2025-09-03 12:53:44.44286212 UTC , thread_cap_info = ("ThreadId
| | | | E                            109", 1, False)}
| | | | E                            
| | | | | E                          Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | E                          , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | E                          = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | E                          , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | E                          = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | E                          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | E                          = 24} , self = 73 , parent = Nothing , duration = 1.736684739000 , status
| | | | | E                          = Except "AsyncCancelled" , start = 2025-09-03 12:53:42.99049248 UTC ,
| | | | | E                          finish = 2025-09-03 12:53:44.727177219 UTC , thread_cap_info = ("ThreadId
| | | | | E                          114", 1, False)}
| | | | | E                          
| | | | | | F                        Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | F                        , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | F                        = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | F                        False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | F                        = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | F                        = 0 , alphabet_size = 2 , total_length = 22} , self = 64 , parent = Nothing
| | | | | | F                        , duration = 0.683368565000 , status = Fail , start = 2025-09-03 12:53:43.022871989
| | | | | | F                        UTC , finish = 2025-09-03 12:53:43.706240554 UTC , thread_cap_info = ("ThreadId
| | | | | | F                        122", 1, False)}
| | | | | | F                        
| | | | | | | F                      Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | F                      , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | F                      = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | F                      False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | F                      = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | F                      = 0 , alphabet_size = 2 , total_length = 24} , self = 67 , parent = Nothing
| | | | | | | F                      , duration = 1.129631457000 , status = Fail , start = 2025-09-03 12:53:43.046106377
| | | | | | | F                      UTC , finish = 2025-09-03 12:53:44.175737834 UTC , thread_cap_info = ("ThreadId
| | | | | | | F                      134", 1, False)}
| | | | | | | F                      
| | | | | | | | F                    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | F                    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | F                    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | F                    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | F                    = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | F                    = 0 , alphabet_size = 2 , total_length = 24} , self = 63 , parent = Nothing
| | | | | | | | F                    , duration = 0.582042923000 , status = Fail , start = 2025-09-03 12:53:43.046111764
| | | | | | | | F                    UTC , finish = 2025-09-03 12:53:43.628154687 UTC , thread_cap_info = ("ThreadId
| | | | | | | | F                    136", 1, False)}
| | | | | | | | F                    
| | | | | | | | | E                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | E                  , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | E                  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | E                  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | E                  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | E                  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | E                  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | E                  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | E                  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | E                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | E                  = 22} , self = 72 , parent = Nothing , duration = 1.420867066000 , status
| | | | | | | | | E                  = Except "AsyncCancelled" , start = 2025-09-03 12:53:43.122865031 UTC ,
| | | | | | | | | E                  finish = 2025-09-03 12:53:44.543732097 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | E                  138", 1, False)}
| | | | | | | | | E                  
| | | | | | | | | | F                Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | F                , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | F                = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | F                False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | F                = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | F                = 0 , alphabet_size = 2 , total_length = 22} , self = 70 , parent = Nothing
| | | | | | | | | | F                , duration = 1.283645661000 , status = Fail , start = 2025-09-03 12:53:43.143050845
| | | | | | | | | | F                UTC , finish = 2025-09-03 12:53:44.426696506 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | F                139", 1, False)}
| | | | | | | | | | F                
| | | | | | | | | | | S              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | S              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | S              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | S              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | S              = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | S              = 0 , alphabet_size = 2 , total_length = 18} , self = 60 , parent = Nothing
| | | | | | | | | | | S              , duration = 0.379743043000 , status = Success , start = 2025-09-03 12:53:43.182893415
| | | | | | | | | | | S              UTC , finish = 2025-09-03 12:53:43.562636458 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | S              144", 1, False)}
| | | | | | | | | | | S              
| | | | | | | | | | | | E            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | E            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | E            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | E            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | E            = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | E            = 0 , alphabet_size = 2 , total_length = 18} , self = 66 , parent = Nothing
| | | | | | | | | | | | E            , duration = 0.939976666000 , status = Except "AsyncCancelled" , start
| | | | | | | | | | | | E            = 2025-09-03 12:53:43.182903835 UTC , finish = 2025-09-03 12:53:44.122880501
| | | | | | | | | | | | E            UTC , thread_cap_info = ("ThreadId 146", 1, False)}
| | | | | | | | | | | | E            
| | | | | | | | | | | | | F          Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | F          , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | F          = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | | | | | | | | | | | F          Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | | | | | | | | | | | F          8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | | | | | | | | | | | F          = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | | | | | | | | | | | F          ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | | | | | | | | | | | F          1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | F          = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | F          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | F          = 24} , self = 62 , parent = Nothing , duration = 0.380019229000 , status
| | | | | | | | | | | | | F          = Fail , start = 2025-09-03 12:53:43.222869984 UTC , finish = 2025-09-03
| | | | | | | | | | | | | F          12:53:43.602889213 UTC , thread_cap_info = ("ThreadId 148", 1, False)}
| | | | | | | | | | | | | F          
| F | | | | | | | | | | | |          
| E | | | | | | | | | | | |          Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| E | | | | | | | | | | | |          , closure = Backward\n , start_strict_only = True\n , max_closure_length
| E | | | | | | | | | | | |          = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| E | | | | | | | | | | | |          , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| E | | | | | | | | | | | |          max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| E | | | | | | | | | | | |          [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| E | | | | | | | | | | | |          string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| E | | | | | | | | | | | |          , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| E | | | | | | | | | | | |          = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| E | | | | | | | | | | | |          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| E | | | | | | | | | | | |          = 22} , self = 77 , parent = Nothing , duration = 1.620517927000 , status
| E | | | | | | | | | | | |          = Except "AsyncCancelled" , start = 2025-09-03 12:53:43.342864584 UTC ,
| E | | | | | | | | | | | |          finish = 2025-09-03 12:53:44.963382511 UTC , thread_cap_info = ("ThreadId
| E | | | | | | | | | | | |          149", 1, False)}
| E | | | | | | | | | | | |          
| | | | | | | | | | | | | | E        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | E        , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | E        = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | E        , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | E        max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | E        [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | E        string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | E        , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | E        = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | E        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | E        = 20} , self = 69 , parent = Nothing , duration = 0.819819596000 , status
| | | | | | | | | | | | | | E        = Except "AsyncCancelled" , start = 2025-09-03 12:53:43.423049666 UTC ,
| | | | | | | | | | | | | | E        finish = 2025-09-03 12:53:44.242869262 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | E        150", 1, False)}
| | | | | | | | | | | | | | E        
| | | | | | | | | | | | | | | E      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | E      , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | E      = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | E      , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | E      max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | E      [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | E      string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | E      , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | E      = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | E      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | E      = 20} , self = 74 , parent = Nothing , duration = 1.360242618000 , status
| | | | | | | | | | | | | | | E      = Except "AsyncCancelled" , start = 2025-09-03 12:53:43.442862602 UTC ,
| | | | | | | | | | | | | | | E      finish = 2025-09-03 12:53:44.80310522 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | E      151", 1, False)}
| | | | | | | | | | | | | | | E      
| | | | | | | | | | | | | | | | E    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | E    , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | E    = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | E    , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | E    max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | E    [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | E    string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | E    , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | E    = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | E    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | E    = 18} , self = 75 , parent = Nothing , duration = 1.319376431000 , status
| | | | | | | | | | | | | | | | E    = Except "AsyncCancelled" , start = 2025-09-03 12:53:43.483735632 UTC ,
| | | | | | | | | | | | | | | | E    finish = 2025-09-03 12:53:44.803112063 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | E    153", 1, False)}
| | | | | | | | | | | | | | | | E    
| | | | | | | | | | | | | | | | | E  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | | E  , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | | E  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | | E  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | | E  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | | E  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | | E  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | | E  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | | E  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | E  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | E  = 18} , self = 78 , parent = Nothing , duration = 1.520014004000 , status
| | | | | | | | | | | | | | | | | E  = Except "AsyncCancelled" , start = 2025-09-03 12:53:43.502944855 UTC ,
| | | | | | | | | | | | | | | | | E  finish = 2025-09-03 12:53:45.022958859 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | E  154", 1, False)}
| | | | | | | | | | | | | | | | | E  
| | | | | | | | | | | S | | | | | |  
| | | | | | | | | | | E | | | | | |  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | E | | | | | |  , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | E | | | | | |  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | E | | | | | |  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | E | | | | | |  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | E | | | | | |  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | E | | | | | |  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | E | | | | | |  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | E | | | | | |  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | E | | | | | |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | E | | | | | |  = 24} , self = 76 , parent = Nothing , duration = 1.340004402000 , status
| | | | | | | | | | | E | | | | | |  = Except "AsyncCancelled" , start = 2025-09-03 12:53:43.582864485 UTC ,
| | | | | | | | | | | E | | | | | |  finish = 2025-09-03 12:53:44.922868887 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | E | | | | | |  155", 1, False)}
| | | | | | | | | | | E | | | | | |  
| | | | | | | | | | | | | F | | | |  
| | | | | | | | F | | | |   | | | |  
| | | | | | F |   | | | |   | | | |  
| | | E | |   |   | | | |   | | | |  
| | |   | |   |   | | | E   | | | |  
| | | E | |   |   | | |     | | | |  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | E | |   |   | | |     | | | |  , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | E | |   |   | | |     | | | |  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | E | |   |   | | |     | | | |  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | E | |   |   | | |     | | | |  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | E | |   |   | | |     | | | |  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | E | |   |   | | |     | | | |  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | E | |   |   | | |     | | | |  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | E | |   |   | | |     | | | |  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | E | |   |   | | |     | | | |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | E | |   |   | | |     | | | |  = 24} , self = 79 , parent = Nothing , duration = 0.900061681000 , status
| | | E | |   |   | | |     | | | |  = Except "AsyncCancelled" , start = 2025-09-03 12:53:44.143024614 UTC ,
| | | E | |   |   | | |     | | | |  finish = 2025-09-03 12:53:45.043086295 UTC , thread_cap_info = ("ThreadId
| | | E | |   |   | | |     | | | |  158", 1, False)}
| | | E | |   |   | | |     | | | |  
| | | | | |   F   | | |     | | | |  
| | E | | |       | | |     | | | |  
| |   | | |       | | |     E | | |  
| |   | | |       | F |       | | |  
| |   | E |       |   |       | | |  
| |   |   |       E   |       | | |  
| |   |   E           |       | | |  
| |   |               |       E | |  
| |   |               |         E |  
| |   |               E           |  
| E   |                           |  
|     |                           E  
|     E                              
E                                    
