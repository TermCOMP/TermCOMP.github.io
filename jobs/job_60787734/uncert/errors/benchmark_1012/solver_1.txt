last 2560 length 10364
CNF 2560 vars 10364 clauses
last 4645 length 19378
CNF 4645 vars 19378 clauses
last 2748 length 11229
CNF 2748 vars 11229 clauses
last 4837 length 20200
last 10364 length 45345
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5478, clauses: 22913
CNF 4837 vars 20200 clauses
last 5478 length 22913
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6011, clauses: 24924
last 15728 length 69256
CNF 10364 vars 45345 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12662, clauses: 53031
CNF 5478 vars 22913 clauses
last 6011 length 24924
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13925, clauses: 58410
CNF 15728 vars 69256 clauses
last 12662 length 53031
CNF 6011 vars 24924 clauses
last 13925 length 58410
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5478, clauses: 22913, status: Unsatisfied, time: 0.860706625s
CNF 12662 vars 53031 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6011, clauses: 24924, status: Unsatisfied, time: 0.874444421s
CNF 13925 vars 58410 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8308, clauses: 35387
last 8308 length 35387
CNF 8308 vars 35387 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9150, clauses: 39115
last 24969 length 102649
last 9150 length 39115
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8308, clauses: 35387, status: Unsatisfied, time: 0.474375483s
CNF 9150 vars 39115 clauses
CNF 24969 vars 102649 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9150, clauses: 39115, status: Satisfied, time: 0.699324924s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12662, clauses: 53031, status: Unsatisfied, time: 2.384204864s
last 28057 length 120161
CNF 28057 vars 120161 clauses
last 1402 length 5828
last 1197 length 5055
CNF 1402 vars 5828 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8954, clauses: 40993
CNF 1197 vars 5055 clauses
last 8954 length 40993
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2760, clauses: 10265
last 2760 length 10265
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20346, clauses: 92519
CNF 8954 vars 40993 clauses
CNF 2760 vars 10265 clauses
last 20346 length 92519
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9348, clauses: 39188
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2760, clauses: 10265, status: Unsatisfied, time: 0.61984579s
last 9348 length 39188
CNF 20346 vars 92519 clauses
CNF 9348 vars 39188 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8954, clauses: 40993, status: Unsatisfied, time: 1.440014796s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5705, clauses: 24298
last 5705 length 24298
CNF 5705 vars 24298 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5705, clauses: 24298, status: Satisfied, time: 0.234348946s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9348, clauses: 39188, status: Unsatisfied, time: 0.821274478s
**************************************************
summary
**************************************************
SRS with 5 rules on 3 letters       DP
SRS with 22 strict rules and 5 weak rules on 6 letters       weights
SRS with 18 strict rules and 5 weak rules on 6 letters       EDG
SRS with 18 strict rules and 5 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 5 weak rules on 5 letters       EDG
SRS with 2 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 5 weak rules on 5 letters       weights
SRS with 0 strict rules and 5 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a, a, a] -> [b, b] {- Input 0 -}
  [b, b, a, a] -> [a, a, b, b] {- Input 1 -}
  [b, b, b, b, c, c] -> [c, c, a, a] {- Input 2 -}
  [b, b, b, b] -> [a, a, a, a, a, a] {- Input 3 -}
  [c, c, a, a] -> [b, b, a, a, c, c] {- Input 4 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a, a, a] ->= [b, b] {- DP Nontop (Input 0) -}
  [b, b, a, a] ->= [a, a, b, b] {- DP Nontop (Input 1) -}
  [b, b, b, b, c, c] ->= [c, c, a, a] {- DP Nontop (Input 2) -}
  [b, b, b, b] ->= [a, a, a, a, a, a] {- DP Nontop (Input 3) -}
  [c, c, a, a] ->= [b, b, a, a, c, c] {- DP Nontop (Input 4) -}
  [a#, a, a, a] |-> [b#] {- DP (Top 1) (Input 0) -}
  [a#, a, a, a] |-> [b#, b] {- DP (Top 0) (Input 0) -}
  [b#, b, a, a] |-> [a#, a, b, b] {- DP (Top 0) (Input 1) -}
  [b#, b, a, a] |-> [a#, b, b] {- DP (Top 1) (Input 1) -}
  [b#, b, a, a] |-> [b#] {- DP (Top 3) (Input 1) -}
  [b#, b, a, a] |-> [b#, b] {- DP (Top 2) (Input 1) -}
  [b#, b, b, b] |-> [a#] {- DP (Top 5) (Input 3) -}
  [b#, b, b, b] |-> [a#, a] {- DP (Top 4) (Input 3) -}
  [b#, b, b, b] |-> [a#, a, a] {- DP (Top 3) (Input 3) -}
  [b#, b, b, b] |-> [a#, a, a, a] {- DP (Top 2) (Input 3) -}
  [b#, b, b, b] |-> [a#, a, a, a, a] {- DP (Top 1) (Input 3) -}
  [b#, b, b, b] |-> [a#, a, a, a, a, a] {- DP (Top 0) (Input 3) -}
  [b#, b, b, b, c, c] |-> [a#] {- DP (Top 3) (Input 2) -}
  [b#, b, b, b, c, c] |-> [a#, a] {- DP (Top 2) (Input 2) -}
  [b#, b, b, b, c, c] |-> [c#, a, a] {- DP (Top 1) (Input 2) -}
  [b#, b, b, b, c, c] |-> [c#, c, a, a] {- DP (Top 0) (Input 2) -}
  [c#, c, a, a] |-> [a#, a, c, c] {- DP (Top 2) (Input 4) -}
  [c#, c, a, a] |-> [a#, c, c] {- DP (Top 3) (Input 4) -}
  [c#, c, a, a] |-> [b#, a, a, c, c] {- DP (Top 1) (Input 4) -}
  [c#, c, a, a] |-> [b#, b, a, a, c, c] {- DP (Top 0) (Input 4) -}
  [c#, c, a, a] |-> [c#] {- DP (Top 5) (Input 4) -}
  [c#, c, a, a] |-> [c#, c] {- DP (Top 4) (Input 4) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 1/1)
  (a#, 0/1)
  (b#, 0/1)
  (c#, 1/1)
   property Termination
has value Just True
for SRS
  [a, a, a, a] ->= [b, b] {- DP Nontop (Input 0) -}
  [b, b, a, a] ->= [a, a, b, b] {- DP Nontop (Input 1) -}
  [b, b, b, b, c, c] ->= [c, c, a, a] {- DP Nontop (Input 2) -}
  [b, b, b, b] ->= [a, a, a, a, a, a] {- DP Nontop (Input 3) -}
  [c, c, a, a] ->= [b, b, a, a, c, c] {- DP Nontop (Input 4) -}
  [a#, a, a, a] |-> [b#] {- DP (Top 1) (Input 0) -}
  [a#, a, a, a] |-> [b#, b] {- DP (Top 0) (Input 0) -}
  [b#, b, a, a] |-> [a#, a, b, b] {- DP (Top 0) (Input 1) -}
  [b#, b, a, a] |-> [a#, b, b] {- DP (Top 1) (Input 1) -}
  [b#, b, a, a] |-> [b#] {- DP (Top 3) (Input 1) -}
  [b#, b, a, a] |-> [b#, b] {- DP (Top 2) (Input 1) -}
  [b#, b, b, b] |-> [a#] {- DP (Top 5) (Input 3) -}
  [b#, b, b, b] |-> [a#, a] {- DP (Top 4) (Input 3) -}
  [b#, b, b, b] |-> [a#, a, a] {- DP (Top 3) (Input 3) -}
  [b#, b, b, b] |-> [a#, a, a, a] {- DP (Top 2) (Input 3) -}
  [b#, b, b, b] |-> [a#, a, a, a, a] {- DP (Top 1) (Input 3) -}
  [b#, b, b, b] |-> [a#, a, a, a, a, a] {- DP (Top 0) (Input 3) -}
  [b#, b, b, b, c, c] |-> [c#, c, a, a] {- DP (Top 0) (Input 2) -}
  [c#, c, a, a] |-> [a#, a, c, c] {- DP (Top 2) (Input 4) -}
  [c#, c, a, a] |-> [a#, c, c] {- DP (Top 3) (Input 4) -}
  [c#, c, a, a] |-> [b#, a, a, c, c] {- DP (Top 1) (Input 4) -}
  [c#, c, a, a] |-> [b#, b, a, a, c, c] {- DP (Top 0) (Input 4) -}
  [c#, c, a, a] |-> [c#, c] {- DP (Top 4) (Input 4) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a, a, a] |-> [b#] {- DP (Top 1) (Input 0) -}
  [b#, b, a, a] |-> [a#, a, b, b] {- DP (Top 0) (Input 1) -}
  [a#, a, a, a] |-> [b#, b] {- DP (Top 0) (Input 0) -}
  [b#, b, a, a] |-> [a#, b, b] {- DP (Top 1) (Input 1) -}
  [b#, b, a, a] |-> [b#] {- DP (Top 3) (Input 1) -}
  [b#, b, a, a] |-> [b#, b] {- DP (Top 2) (Input 1) -}
  [b#, b, b, b] |-> [a#] {- DP (Top 5) (Input 3) -}
  [b#, b, b, b] |-> [a#, a] {- DP (Top 4) (Input 3) -}
  [b#, b, b, b] |-> [a#, a, a] {- DP (Top 3) (Input 3) -}
  [b#, b, b, b] |-> [a#, a, a, a] {- DP (Top 2) (Input 3) -}
  [b#, b, b, b] |-> [a#, a, a, a, a] {- DP (Top 1) (Input 3) -}
  [b#, b, b, b] |-> [a#, a, a, a, a, a] {- DP (Top 0) (Input 3) -}
  [b#, b, b, b, c, c] |-> [c#, c, a, a] {- DP (Top 0) (Input 2) -}
  [c#, c, a, a] |-> [a#, a, c, c] {- DP (Top 2) (Input 4) -}
  [c#, c, a, a] |-> [a#, c, c] {- DP (Top 3) (Input 4) -}
  [c#, c, a, a] |-> [b#, a, a, c, c] {- DP (Top 1) (Input 4) -}
  [c#, c, a, a] |-> [b#, b, a, a, c, c] {- DP (Top 0) (Input 4) -}
  [c#, c, a, a] |-> [c#, c] {- DP (Top 4) (Input 4) -}
  [a, a, a, a] ->= [b, b] {- DP Nontop (Input 0) -}
  [b, b, a, a] ->= [a, a, b, b] {- DP Nontop (Input 1) -}
  [b, b, b, b, c, c] ->= [c, c, a, a] {- DP Nontop (Input 2) -}
  [b, b, b, b] ->= [a, a, a, a, a, a] {- DP Nontop (Input 3) -}
  [c, c, a, a] ->= [b, b, a, a, c, c] {- DP Nontop (Input 4) -}
reason
  ( a
  , Wk  / 1 1 1 \
        | 0 0 0 |
        \ 0 0 1 / )
  ( b
  , Wk  / 1 1 2 \
        | 0 0 0 |
        \ 0 0 1 / )
  ( c
  , Wk  / 0 1 0 \
        | 3 0 0 |
        \ 0 0 1 / )
  ( a#
  , Wk  / 1 1 0 \
        | 0 0 0 |
        \ 0 0 1 / )
  ( b#
  , Wk  / 1 1 1 \
        | 0 0 0 |
        \ 0 0 1 / )
  ( c#
  , Wk  / 3 1 0 \
        | 0 0 0 |
        \ 0 0 1 / )
   property Termination
has value Just True
for SRS
  [b#, b, a, a] |-> [a#, a, b, b] {- DP (Top 0) (Input 1) -}
  [a#, a, a, a] |-> [b#, b] {- DP (Top 0) (Input 0) -}
  [a, a, a, a] ->= [b, b] {- DP Nontop (Input 0) -}
  [b, b, a, a] ->= [a, a, b, b] {- DP Nontop (Input 1) -}
  [b, b, b, b, c, c] ->= [c, c, a, a] {- DP Nontop (Input 2) -}
  [b, b, b, b] ->= [a, a, a, a, a, a] {- DP Nontop (Input 3) -}
  [c, c, a, a] ->= [b, b, a, a, c, c] {- DP Nontop (Input 4) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, b, a, a] |-> [a#, a, b, b] {- DP (Top 0) (Input 1) -}
  [a#, a, a, a] |-> [b#, b] {- DP (Top 0) (Input 0) -}
  [a, a, a, a] ->= [b, b] {- DP Nontop (Input 0) -}
  [b, b, a, a] ->= [a, a, b, b] {- DP Nontop (Input 1) -}
  [b, b, b, b, c, c] ->= [c, c, a, a] {- DP Nontop (Input 2) -}
  [b, b, b, b] ->= [a, a, a, a, a, a] {- DP Nontop (Input 3) -}
  [c, c, a, a] ->= [b, b, a, a, c, c] {- DP Nontop (Input 4) -}
reason
  ( a
  , Wk  / 0 1 0 \
        | 1 0 2 |
        \ 0 0 1 / )
  ( b
  , Wk  / 0 1 3 \
        | 1 0 0 |
        \ 0 0 1 / )
  ( c
  , Wk  / 0 1 0 \
        | 3 0 0 |
        \ 0 0 1 / )
  ( a#
  , Wk  / 0 1 0 \
        | 0 0 0 |
        \ 0 0 1 / )
  ( b#
  , Wk  / 0 1 3 \
        | 0 0 0 |
        \ 0 0 1 / )
   property Termination
has value Just True
for SRS
  [b#, b, a, a] |-> [a#, a, b, b] {- DP (Top 0) (Input 1) -}
  [a, a, a, a] ->= [b, b] {- DP Nontop (Input 0) -}
  [b, b, a, a] ->= [a, a, b, b] {- DP Nontop (Input 1) -}
  [b, b, b, b, c, c] ->= [c, c, a, a] {- DP Nontop (Input 2) -}
  [b, b, b, b] ->= [a, a, a, a, a, a] {- DP Nontop (Input 3) -}
  [c, c, a, a] ->= [b, b, a, a, c, c] {- DP Nontop (Input 4) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 0/1)
  (b#, 1/1)
   property Termination
has value Just True
for SRS
  [a, a, a, a] ->= [b, b] {- DP Nontop (Input 0) -}
  [b, b, a, a] ->= [a, a, b, b] {- DP Nontop (Input 1) -}
  [b, b, b, b, c, c] ->= [c, c, a, a] {- DP Nontop (Input 2) -}
  [b, b, b, b] ->= [a, a, a, a, a, a] {- DP Nontop (Input 3) -}
  [c, c, a, a] ->= [b, b, a, a, c, c] {- DP Nontop (Input 4) -}
reason
  EDG

**************************************************
skeleton: (5,3)\Deepee(22/5,6)\Weight\EDG(18/5,6)\Matrix{\Natural}{3}\EDG(2/5,5)\Matrix{\Natural}{3}(1/5,5)\Weight(0/5,3)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 1.438298648000
  min duration 0.198329106000
  total durat. 2.529192618000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 45
      , num_strict_rules = 45
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 9
      , total_length = 486}
    , self = 81
    , parent = Nothing
    , duration = 1.438298648000
    , status = Fail
    , start = 2025-09-03 10:46:46.025878015 UTC
    , finish = 2025-09-03 10:46:47.464176663 UTC
    , thread_cap_info = ("ThreadId 70", 3, False)}
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.041161574000
  min duration 3.041007269000
  total durat. 6.082168843000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 171
      , num_strict_rules = 126
      , num_top_rules = 126
      , num_weak_rules = 45
      , alphabet_size = 15
      , total_length = 1602}
    , self = 92
    , parent = Nothing
    , duration = 3.041007269000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 10:46:46.765968864 UTC
    , finish = 2025-09-03 10:46:49.806976133 UTC
    , thread_cap_info = ("ThreadId 115", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 159
      , num_strict_rules = 114
      , num_top_rules = 114
      , num_weak_rules = 45
      , alphabet_size = 15
      , total_length = 1500}
    , self = 96
    , parent = Nothing
    , duration = 3.041161574000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 10:46:46.905888611 UTC
    , finish = 2025-09-03 10:46:49.947050185 UTC
    , thread_cap_info = ("ThreadId 121", 0, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 2.745118513000
  min duration 0.070759849000
  total durat. 4.706456809000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 45
      , num_strict_rules = 45
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 9
      , total_length = 486}
    , self = 79
    , parent = Nothing
    , duration = 1.102872975000
    , status = Fail
    , start = 2025-09-03 10:46:46.045938532 UTC
    , finish = 2025-09-03 10:46:47.148811507 UTC
    , thread_cap_info = ("ThreadId 72", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 171
      , num_strict_rules = 126
      , num_top_rules = 126
      , num_weak_rules = 45
      , alphabet_size = 15
      , total_length = 1602}
    , self = 88
    , parent = Nothing
    , duration = 2.745118513000
    , status = Fail
    , start = 2025-09-03 10:46:46.785886029 UTC
    , finish = 2025-09-03 10:46:49.531004542 UTC
    , thread_cap_info = ("ThreadId 116", 0, False)}
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.017687050000
  min duration 3.017687050000
  total durat. 3.017687050000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 159
      , num_strict_rules = 114
      , num_top_rules = 114
      , num_weak_rules = 45
      , alphabet_size = 15
      , total_length = 1500}
    , self = 95
    , parent = Nothing
    , duration = 3.017687050000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 10:46:46.925885079 UTC
    , finish = 2025-09-03 10:46:49.943572129 UTC
    , thread_cap_info = ("ThreadId 122", 0, False)}
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 4
  max duration 0.601760843000
  min duration 0.052506586000
  total durat. 1.281753767000
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 3.109795960000
  min duration 1.649147106000
  total durat. 4.758943066000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 58}
    , self = 104
    , parent = Nothing
    , duration = 1.649147106000
    , status = Fail
    , start = 2025-09-03 10:46:50.785907476 UTC
    , finish = 2025-09-03 10:46:52.435054582 UTC
    , thread_cap_info = ("ThreadId 155", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 21
      , num_strict_rules = 16
      , num_top_rules = 16
      , num_weak_rules = 5
      , alphabet_size = 6
      , total_length = 163}
    , self = 89
    , parent = Nothing
    , duration = 3.109795960000
    , status = Fail
    , start = 2025-09-03 10:46:46.425890021 UTC
    , finish = 2025-09-03 10:46:49.535685981 UTC
    , thread_cap_info = ("ThreadId 97", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.903581392000
  min duration 2.903581392000
  total durat. 2.903581392000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 23
      , num_strict_rules = 18
      , num_top_rules = 18
      , num_weak_rules = 5
      , alphabet_size = 6
      , total_length = 176}
    , self = 90
    , parent = Nothing
    , duration = 2.903581392000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:46:46.726114216 UTC
    , finish = 2025-09-03 10:46:49.629695608 UTC
    , thread_cap_info = ("ThreadId 111", 2, False)}
Success : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.497201438000
  min duration 0.613917069000
  total durat. 2.111118507000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 23
      , num_strict_rules = 18
      , num_top_rules = 18
      , num_weak_rules = 5
      , alphabet_size = 6
      , total_length = 176}
    , self = 86
    , parent = Nothing
    , duration = 1.497201438000
    , status = Success
    , start = 2025-09-03 10:46:47.965940217 UTC
    , finish = 2025-09-03 10:46:49.463141655 UTC
    , thread_cap_info = ("ThreadId 131", 2, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.181774051000
  min duration 1.181774051000
  total durat. 1.181774051000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 21
      , num_strict_rules = 16
      , num_top_rules = 16
      , num_weak_rules = 5
      , alphabet_size = 6
      , total_length = 163}
    , self = 85
    , parent = Nothing
    , duration = 1.181774051000
    , status = Fail
    , start = 2025-09-03 10:46:47.786929244 UTC
    , finish = 2025-09-03 10:46:48.968703295 UTC
    , thread_cap_info = ("ThreadId 130", 2, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 1.410611314000
  min duration 1.179995200000
  total durat. 3.964629102000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 58}
    , self = 100
    , parent = Nothing
    , duration = 1.179995200000
    , status = Fail
    , start = 2025-09-03 10:46:50.54588538 UTC
    , finish = 2025-09-03 10:46:51.72588058 UTC
    , thread_cap_info = ("ThreadId 154", 2, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 21
      , num_strict_rules = 16
      , num_top_rules = 16
      , num_weak_rules = 5
      , alphabet_size = 6
      , total_length = 163}
    , self = 82
    , parent = Nothing
    , duration = 1.374022588000
    , status = Fail
    , start = 2025-09-03 10:46:46.256735439 UTC
    , finish = 2025-09-03 10:46:47.630758027 UTC
    , thread_cap_info = ("ThreadId 91", 2, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 23
      , num_strict_rules = 18
      , num_top_rules = 18
      , num_weak_rules = 5
      , alphabet_size = 6
      , total_length = 176}
    , self = 83
    , parent = Nothing
    , duration = 1.410611314000
    , status = Fail
    , start = 2025-09-03 10:46:46.457812658 UTC
    , finish = 2025-09-03 10:46:47.868423972 UTC
    , thread_cap_info = ("ThreadId 98", 2, False)}
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.099518858000
  min duration 3.099518858000
  total durat. 3.099518858000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 21
      , num_strict_rules = 16
      , num_top_rules = 16
      , num_weak_rules = 5
      , alphabet_size = 6
      , total_length = 163}
    , self = 101
    , parent = Nothing
    , duration = 3.099518858000
    , status = Fail
    , start = 2025-09-03 10:46:48.986433094 UTC
    , finish = 2025-09-03 10:46:52.085951952 UTC
    , thread_cap_info = ("ThreadId 136", 2, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 2.507148791000
  min duration 2.507148791000
  total durat. 2.507148791000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 5
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 44}
    , self = 84
    , parent = Nothing
    , duration = 2.507148791000
    , status = Fail
    , start = 2025-09-03 10:46:45.848116628 UTC
    , finish = 2025-09-03 10:46:48.355265419 UTC
    , thread_cap_info = ("ThreadId 46", 1, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 5.983999054000
  min duration 5.983999054000
  total durat. 5.983999054000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 5
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 44}
    , self = 107
    , parent = Nothing
    , duration = 5.983999054000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:46:46.661886131 UTC
    , finish = 2025-09-03 10:46:52.645885185 UTC
    , thread_cap_info = ("ThreadId 109", 3, False)}
**************************************************
F                          Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                          , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                          = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                          , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                          = False}" , input_size = Size { num_rules = 5 , num_strict_rules = 5 ,
F                          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F                          = 44} , self = 34 , parent = Nothing , duration = 0.198557517000 , status
F                          = Fail , start = 2025-09-03 10:46:45.848053718 UTC , finish = 2025-09-03
F                          10:46:46.046611235 UTC , thread_cap_info = ("ThreadId 22", 0, False)}
F                          
| F                        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| F                        , closure = Forward\n , start_strict_only = True\n , max_closure_length
| F                        = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| F                        Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| F                        8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| F                        = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| F                        ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| F                        1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| F                        = True})" , input_size = Size { num_rules = 5 , num_strict_rules = 5 ,
| F                        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| F                        = 44} , self = 63 , parent = Nothing , duration = 0.775233761000 , status
| F                        = Fail , start = 2025-09-03 10:46:45.848061774 UTC , finish = 2025-09-03
| F                        10:46:46.623295535 UTC , thread_cap_info = ("ThreadId 36", 3, False)}
| F                        
| | F                      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | F                      , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | F                      = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | F                      Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | F                      8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | F                      = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | F                      ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | F                      1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | F                      = True})" , input_size = Size { num_rules = 5 , num_strict_rules = 5 ,
| | F                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | F                      = 44} , self = 84 , parent = Nothing , duration = 2.507148791000 , status
| | F                      = Fail , start = 2025-09-03 10:46:45.848116628 UTC , finish = 2025-09-03
| | F                      10:46:48.355265419 UTC , thread_cap_info = ("ThreadId 46", 1, False)}
| | F                      
| | | F                    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | F                    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | F                    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | F                    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | F                    = Size { num_rules = 5 , num_strict_rules = 5 , num_top_rules = 0 , num_weak_rules
| | | F                    = 0 , alphabet_size = 3 , total_length = 44} , self = 37 , parent = Nothing
| | | F                    , duration = 0.315081008000 , status = Fail , start = 2025-09-03 10:46:45.86588356
| | | F                    UTC , finish = 2025-09-03 10:46:46.180964568 UTC , thread_cap_info = ("ThreadId
| | | F                    44", 2, False)}
| | | F                    
| | | | F                  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | F                  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | F                  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | F                  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | F                  = Size { num_rules = 45 , num_strict_rules = 45 , num_top_rules = 0 , num_weak_rules
| | | | F                  = 0 , alphabet_size = 9 , total_length = 486} , self = 57 , parent = Nothing
| | | | F                  , duration = 0.601760843000 , status = Fail , start = 2025-09-03 10:46:46.007090769
| | | | F                  UTC , finish = 2025-09-03 10:46:46.608851612 UTC , thread_cap_info = ("ThreadId
| | | | F                  65", 0, False)}
| | | | F                  
| | | | | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 45 , num_strict_rules
| | | | | F                = 45 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | F                = 486} , self = 81 , parent = Nothing , duration = 1.438298648000 , status
| | | | | F                = Fail , start = 2025-09-03 10:46:46.025878015 UTC , finish = 2025-09-03
| | | | | F                10:46:47.464176663 UTC , thread_cap_info = ("ThreadId 70", 3, False)}
| | | | | F                
| | | | | | F              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | F              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | F              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | F              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | F              = Size { num_rules = 45 , num_strict_rules = 45 , num_top_rules = 0 , num_weak_rules
| | | | | | F              = 0 , alphabet_size = 9 , total_length = 486} , self = 53 , parent = Nothing
| | | | | | F              , duration = 0.312405330000 , status = Fail , start = 2025-09-03 10:46:46.025886637
| | | | | | F              UTC , finish = 2025-09-03 10:46:46.338291967 UTC , thread_cap_info = ("ThreadId
| | | | | | F              67", 0, False)}
| | | | | | F              
| | | | | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 45 , num_strict_rules
| | | | | | | F            = 45 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | | | F            = 486} , self = 79 , parent = Nothing , duration = 1.102872975000 , status
| | | | | | | F            = Fail , start = 2025-09-03 10:46:46.045938532 UTC , finish = 2025-09-03
| | | | | | | F            10:46:47.148811507 UTC , thread_cap_info = ("ThreadId 72", 3, False)}
| | | | | | | F            
F | | | | | | |            
  | | F | | | |            
F | |   | | | |            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | |   | | | |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | |   | | | |            = False\n , verbose = False}" , input_size = Size { num_rules = 21 , num_strict_rules
F | |   | | | |            = 16 , num_top_rules = 16 , num_weak_rules = 5 , alphabet_size = 6 , total_length
F | |   | | | |            = 163} , self = 54 , parent = Nothing , duration = 0.198329106000 , status
F | |   | | | |            = Fail , start = 2025-09-03 10:46:46.183068026 UTC , finish = 2025-09-03
F | |   | | | |            10:46:46.381397132 UTC , thread_cap_info = ("ThreadId 86", 2, False)}
F | |   | | | |            
| | | F | | | |            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F | | | |            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F | | | |            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F | | | |            = 21 , num_strict_rules = 16 , num_top_rules = 16 , num_weak_rules = 5
| | | F | | | |            , alphabet_size = 6 , total_length = 163} , self = 82 , parent = Nothing
| | | F | | | |            , duration = 1.374022588000 , status = Fail , start = 2025-09-03 10:46:46.256735439
| | | F | | | |            UTC , finish = 2025-09-03 10:46:47.630758027 UTC , thread_cap_info = ("ThreadId
| | | F | | | |            91", 2, False)}
| | | F | | | |            
| | | | | | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 23 , num_strict_rules
| | | | | | | | F          = 18 , num_top_rules = 18 , num_weak_rules = 5 , alphabet_size = 6 , total_length
| | | | | | | | F          = 176} , self = 67 , parent = Nothing , duration = 0.448237721000 , status
| | | | | | | | F          = Fail , start = 2025-09-03 10:46:46.266424547 UTC , finish = 2025-09-03
| | | | | | | | F          10:46:46.714662268 UTC , thread_cap_info = ("ThreadId 93", 2, False)}
| | | | | | | | F          
| | | | | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 23 , num_strict_rules
| | | | | | | | | F        = 18 , num_top_rules = 18 , num_weak_rules = 5 , alphabet_size = 6 , total_length
| | | | | | | | | F        = 176} , self = 56 , parent = Nothing , duration = 0.122506933000 , status
| | | | | | | | | F        = Fail , start = 2025-09-03 10:46:46.285890583 UTC , finish = 2025-09-03
| | | | | | | | | F        10:46:46.408397516 UTC , thread_cap_info = ("ThreadId 94", 2, False)}
| | | | | | | | | F        
| | | | | | F | | |        
F | | | | |   | | |        
F | | | | |   | | |        Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
F | | | | |   | | |        { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
F | | | | |   | | |        = MSB_First}\n , max_size = Nothing\n , max_height = Just 4\n , initial
F | | | | |   | | |        = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
F | | | | |   | | |        = False}" , input_size = Size { num_rules = 5 , num_strict_rules = 5 ,
F | | | | |   | | |        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F | | | | |   | | |        = 44} , self = 64 , parent = Nothing , duration = 0.247973177000 , status
F | | | | |   | | |        = Fail , start = 2025-09-03 10:46:46.406278339 UTC , finish = 2025-09-03
F | | | | |   | | |        10:46:46.654251516 UTC , thread_cap_info = ("ThreadId 95", 3, False)}
F | | | | |   | | |        
| | | | | |   | | F        
| | | | | | F | |          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | F | |          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | F | |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | F | |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | F | |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | F | |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 21
| | | | | | F | |          , num_strict_rules = 16 , num_top_rules = 16 , num_weak_rules = 5 , alphabet_size
| | | | | | F | |          = 6 , total_length = 163} , self = 89 , parent = Nothing , duration = 3.109795960000
| | | | | | F | |          , status = Fail , start = 2025-09-03 10:46:46.425890021 UTC , finish =
| | | | | | F | |          2025-09-03 10:46:49.535685981 UTC , thread_cap_info = ("ThreadId 97", 2,
| | | | | | F | |          False)}
| | | | | | F | |          
| | | | | | | | | F        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | | F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | | F        = 23 , num_strict_rules = 18 , num_top_rules = 18 , num_weak_rules = 5
| | | | | | | | | F        , alphabet_size = 6 , total_length = 176} , self = 83 , parent = Nothing
| | | | | | | | | F        , duration = 1.410611314000 , status = Fail , start = 2025-09-03 10:46:46.457812658
| | | | | | | | | F        UTC , finish = 2025-09-03 10:46:47.868423972 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | F        98", 2, False)}
| | | | | | | | | F        
| | | | F | | | | |        
| F | |   | | | | |        
F   | |   | | | | |        
S   | |   | | | | |        Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
S   | |   | | | | |        verbose = False}" , input_size = Size { num_rules = 174 , num_strict_rules
S   | |   | | | | |        = 129 , num_top_rules = 129 , num_weak_rules = 45 , alphabet_size = 18
S   | |   | | | | |        , total_length = 1662} , self = 73 , parent = Nothing , duration = 0.144381266000
S   | |   | | | | |        , status = Success , start = 2025-09-03 10:46:46.661840529 UTC , finish
S   | |   | | | | |        = 2025-09-03 10:46:46.806221795 UTC , thread_cap_info = ("ThreadId 105",
S   | |   | | | | |        0, False)}
S   | |   | | | | |        
| E | |   | | | | |        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| E | |   | | | | |        , closure = Forward\n , start_strict_only = True\n , max_closure_length
| E | |   | | | | |        = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| E | |   | | | | |        , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| E | |   | | | | |        max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| E | |   | | | | |        [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| E | |   | | | | |        string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| E | |   | | | | |        , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| E | |   | | | | |        = True})" , input_size = Size { num_rules = 5 , num_strict_rules = 5 ,
| E | |   | | | | |        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| E | |   | | | | |        = 44} , self = 107 , parent = Nothing , duration = 5.983999054000 , status
| E | |   | | | | |        = Except "AsyncCancelled" , start = 2025-09-03 10:46:46.661886131 UTC ,
| E | |   | | | | |        finish = 2025-09-03 10:46:52.645885185 UTC , thread_cap_info = ("ThreadId
| E | |   | | | | |        109", 3, False)}
| E | |   | | | | |        
| | | |   | | | F |        
| | | | E | | |   |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E | | |   |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E | | |   |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E | | |   |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E | | |   |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E | | |   |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 23
| | | | E | | |   |        , num_strict_rules = 18 , num_top_rules = 18 , num_weak_rules = 5 , alphabet_size
| | | | E | | |   |        = 6 , total_length = 176} , self = 90 , parent = Nothing , duration = 2.903581392000
| | | | E | | |   |        , status = Except "AsyncCancelled" , start = 2025-09-03 10:46:46.726114216
| | | | E | | |   |        UTC , finish = 2025-09-03 10:46:49.629695608 UTC , thread_cap_info = ("ThreadId
| | | | E | | |   |        111", 2, False)}
| | | | E | | |   |        
| | | | | | | | F |        Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | | | | | | F |        { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | | | | | | F |        = MSB_First}\n , max_size = Nothing\n , max_height = Just 5\n , initial
| | | | | | | | F |        = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | | | | | | F |        = False}" , input_size = Size { num_rules = 5 , num_strict_rules = 5 ,
| | | | | | | | F |        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | | | | | | | F |        = 44} , self = 75 , parent = Nothing , duration = 0.124627252000 , status
| | | | | | | | F |        = Fail , start = 2025-09-03 10:46:46.745095531 UTC , finish = 2025-09-03
| | | | | | | | F |        10:46:46.869722783 UTC , thread_cap_info = ("ThreadId 112", 3, False)}
| | | | | | | | F |        
| | | | | | | | | | E      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | E      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | E      = False\n , verbose = False}" , input_size = Size { num_rules = 171 , num_strict_rules
| | | | | | | | | | E      = 126 , num_top_rules = 126 , num_weak_rules = 45 , alphabet_size = 15
| | | | | | | | | | E      , total_length = 1602} , self = 92 , parent = Nothing , duration = 3.041007269000
| | | | | | | | | | E      , status = Except "<<timeout>>" , start = 2025-09-03 10:46:46.765968864
| | | | | | | | | | E      UTC , finish = 2025-09-03 10:46:49.806976133 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | E      115", 0, False)}
| | | | | | | | | | E      
| | | | | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 171 , num_strict_rules
| | | | | | | | | | | F    = 126 , num_top_rules = 126 , num_weak_rules = 45 , alphabet_size = 15
| | | | | | | | | | | F    , total_length = 1602} , self = 88 , parent = Nothing , duration = 2.745118513000
| | | | | | | | | | | F    , status = Fail , start = 2025-09-03 10:46:46.785886029 UTC , finish =
| | | | | | | | | | | F    2025-09-03 10:46:49.531004542 UTC , thread_cap_info = ("ThreadId 116",
| | | | | | | | | | | F    0, False)}
| | | | | | | | | | | F    
S | | | | | | | | | | |    
  | | | | | | | F | | |    
F | | | | | | |   | | |    Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
F | | | | | | |   | | |    { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
F | | | | | | |   | | |    = MSB_First}\n , max_size = Nothing\n , max_height = Just 6\n , initial
F | | | | | | |   | | |    = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
F | | | | | | |   | | |    = False}" , input_size = Size { num_rules = 5 , num_strict_rules = 5 ,
F | | | | | | |   | | |    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F | | | | | | |   | | |    = 44} , self = 77 , parent = Nothing , duration = 0.232497718000 , status
F | | | | | | |   | | |    = Fail , start = 2025-09-03 10:46:46.869737174 UTC , finish = 2025-09-03
F | | | | | | |   | | |    10:46:47.102234892 UTC , thread_cap_info = ("ThreadId 120", 3, False)}
F | | | | | | |   | | |    
| | | | | | | | E | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | E | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | E | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 159 , num_strict_rules
| | | | | | | | E | | |    = 114 , num_top_rules = 114 , num_weak_rules = 45 , alphabet_size = 15
| | | | | | | | E | | |    , total_length = 1500} , self = 96 , parent = Nothing , duration = 3.041161574000
| | | | | | | | E | | |    , status = Except "<<timeout>>" , start = 2025-09-03 10:46:46.905888611
| | | | | | | | E | | |    UTC , finish = 2025-09-03 10:46:49.947050185 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E | | |    121", 0, False)}
| | | | | | | | E | | |    
| | | | | | | | | | | | E  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | E  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | E  = False\n , verbose = False}" , input_size = Size { num_rules = 159 , num_strict_rules
| | | | | | | | | | | | E  = 114 , num_top_rules = 114 , num_weak_rules = 45 , alphabet_size = 15
| | | | | | | | | | | | E  , total_length = 1500} , self = 95 , parent = Nothing , duration = 3.017687050000
| | | | | | | | | | | | E  , status = Except "<<timeout>>" , start = 2025-09-03 10:46:46.925885079
| | | | | | | | | | | | E  UTC , finish = 2025-09-03 10:46:49.943572129 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | E  122", 0, False)}
| | | | | | | | | | | | E  
F | | | | | | | | | | | |  
F | | | | | | | | | | | |  Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
F | | | | | | | | | | | |  { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
F | | | | | | | | | | | |  = MSB_First}\n , max_size = Nothing\n , max_height = Just 6\n , initial
F | | | | | | | | | | | |  = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
F | | | | | | | | | | | |  = False}" , input_size = Size { num_rules = 5 , num_strict_rules = 5 ,
F | | | | | | | | | | | |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F | | | | | | | | | | | |  = 44} , self = 80 , parent = Nothing , duration = 0.353697550000 , status
F | | | | | | | | | | | |  = Fail , start = 2025-09-03 10:46:47.102257925 UTC , finish = 2025-09-03
F | | | | | | | | | | | |  10:46:47.455955475 UTC , thread_cap_info = ("ThreadId 124", 3, False)}
F | | | | | | | | | | | |  
| | | | | | | F | | | | |  
F | | | | | |   | | | | |  
  | | | | F |   | | | | |  
  | | F |   |   | | | | |  
F | |   |   |   | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
F | |   |   |   | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F | |   |   |   | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F | |   |   |   | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F | |   |   |   | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F | |   |   |   | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 21
F | |   |   |   | | | | |  , num_strict_rules = 16 , num_top_rules = 16 , num_weak_rules = 5 , alphabet_size
F | |   |   |   | | | | |  = 6 , total_length = 163} , self = 85 , parent = Nothing , duration = 1.181774051000
F | |   |   |   | | | | |  , status = Fail , start = 2025-09-03 10:46:47.786929244 UTC , finish =
F | |   |   |   | | | | |  2025-09-03 10:46:48.968703295 UTC , thread_cap_info = ("ThreadId 130",
F | |   |   |   | | | | |  2, False)}
F | |   |   |   | | | | |  
| | |   |   |   | F | | |  
| | | S |   |   |   | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | S |   |   |   | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | S |   |   |   | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | S |   |   |   | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S |   |   |   | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S |   |   |   | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 23
| | | S |   |   |   | | |  , num_strict_rules = 18 , num_top_rules = 18 , num_weak_rules = 5 , alphabet_size
| | | S |   |   |   | | |  = 6 , total_length = 176} , self = 86 , parent = Nothing , duration = 1.497201438000
| | | S |   |   |   | | |  , status = Success , start = 2025-09-03 10:46:47.965940217 UTC , finish
| | | S |   |   |   | | |  = 2025-09-03 10:46:49.463141655 UTC , thread_cap_info = ("ThreadId 131",
| | | S |   |   |   | | |  2, False)}
| | | S |   |   |   | | |  
| | F | |   |   |   | | |  
F |   | |   |   |   | | |  
F |   | |   |   |   | | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
F |   | |   |   |   | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F |   | |   |   |   | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F |   | |   |   |   | | |  = 21 , num_strict_rules = 16 , num_top_rules = 16 , num_weak_rules = 5
F |   | |   |   |   | | |  , alphabet_size = 6 , total_length = 163} , self = 101 , parent = Nothing
F |   | |   |   |   | | |  , duration = 3.099518858000 , status = Fail , start = 2025-09-03 10:46:48.986433094
F |   | |   |   |   | | |  UTC , finish = 2025-09-03 10:46:52.085951952 UTC , thread_cap_info = ("ThreadId
F |   | |   |   |   | | |  136", 2, False)}
F |   | |   |   |   | | |  
| |   S |   |   |   | | |  
| |     |   |   |   | F |  
| |     |   F   |   |   |  
| |     E       |   |   |  
| |             |   E   |  
| |             |       E  
| |             E          
| | F                      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                      = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | F                      = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | F                      = 58} , self = 98 , parent = Nothing , duration = 0.444327143000 , status
| | F                      = Fail , start = 2025-09-03 10:46:50.047739618 UTC , finish = 2025-09-03
| | F                      10:46:50.492066761 UTC , thread_cap_info = ("ThreadId 149", 2, False)}
| | F                      
| | | F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | F                    = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | F                    = 58} , self = 99 , parent = Nothing , duration = 0.665198539000 , status
| | | F                    = Fail , start = 2025-09-03 10:46:50.066783141 UTC , finish = 2025-09-03
| | | F                    10:46:50.73198168 UTC , thread_cap_info = ("ThreadId 150", 2, False)}
| | | F                    
| | F |                    
| | F |                    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F |                    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F |                    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F |                    = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | F |                    = 5 , total_length = 58} , self = 100 , parent = Nothing , duration = 1.179995200000
| | F |                    , status = Fail , start = 2025-09-03 10:46:50.54588538 UTC , finish = 2025-09-03
| | F |                    10:46:51.72588058 UTC , thread_cap_info = ("ThreadId 154", 2, False)}
| | F |                    
| | | F                    
| | | F                    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | F                    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | F                    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | F                    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F                    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F                    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | F                    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | F                    = 5 , total_length = 58} , self = 104 , parent = Nothing , duration = 1.649147106000
| | | F                    , status = Fail , start = 2025-09-03 10:46:50.785907476 UTC , finish =
| | | F                    2025-09-03 10:46:52.435054582 UTC , thread_cap_info = ("ThreadId 155",
| | | F                    2, False)}
| | | F                    
| | F |                    
| | S |                    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | S |                    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | S |                    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | S |                    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S |                    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S |                    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | S |                    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | S |                    = 5 , total_length = 58} , self = 102 , parent = Nothing , duration = 0.613917069000
| | S |                    , status = Success , start = 2025-09-03 10:46:51.745922121 UTC , finish
| | S |                    = 2025-09-03 10:46:52.35983919 UTC , thread_cap_info = ("ThreadId 159",
| | S |                    2, False)}
| | S |                    
F | | |                    
  | S |                    
  |   F                    
  E                        
