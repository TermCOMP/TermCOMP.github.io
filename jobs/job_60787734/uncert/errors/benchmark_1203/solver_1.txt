last 397 length 1599
CNF 397 vars 1599 clauses
last 467 length 2046
CNF 467 vars 2046 clauses
last 765 length 3553
CNF 765 vars 3553 clauses
last 570 length 2452
CNF 570 vars 2452 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2158, clauses: 7594
last 2158 length 7594
CNF 2158 vars 7594 clauses
last 3591 length 20201
CNF 3591 vars 20201 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2158, clauses: 7594, status: Unsatisfied, time: 0.149845895s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6169, clauses: 25401
last 5332 length 35539
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2360, clauses: 8499
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6503, clauses: 26825
last 6169 length 25401
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3875, clauses: 15235
CNF 5332 vars 35539 clauses
last 2360 length 8499
last 6503 length 26825
CNF 6169 vars 25401 clauses
last 3875 length 15235
CNF 2360 vars 8499 clauses
CNF 6503 vars 26825 clauses
CNF 3875 vars 15235 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2360, clauses: 8499, status: Unsatisfied, time: 0.680709416s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4110, clauses: 16287
last 4110 length 16287
CNF 4110 vars 16287 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6169, clauses: 25401, status: Unsatisfied, time: 1.200724191s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3517, clauses: 13082
last 3517 length 13082
CNF 3517 vars 13082 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3875, clauses: 15235, status: Unsatisfied, time: 1.130461538s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4110, clauses: 16287, status: Unsatisfied, time: 0.740724386s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3517, clauses: 13082, status: Unsatisfied, time: 0.464832935s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3838, clauses: 14684
last 3838 length 14684
CNF 3838 vars 14684 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10586, clauses: 42995
last 10586 length 42995
CNF 10586 vars 42995 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6503, clauses: 26825, status: Unsatisfied, time: 1.77761024s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6560, clauses: 24234
last 6560 length 24234
CNF 6560 vars 24234 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3838, clauses: 14684, status: Unsatisfied, time: 0.383948497s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11019, clauses: 45115
last 11019 length 45115
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7161, clauses: 27066
last 7161 length 27066
CNF 11019 vars 45115 clauses
CNF 7161 vars 27066 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7161, clauses: 27066, status: Unsatisfied, time: 1.126984002s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6560, clauses: 24234, status: Unsatisfied, time: 1.746085451s
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13267, clauses: 61379
last 13267 length 61379
CNF 13267 vars 61379 clauses
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12875, clauses: 59559
last 12875 length 59559
CNF 12875 vars 59559 clauses
[Info] pool sizes (success) 213628 seen 80577 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       looping derivation
from
  [c, c, b, c, b, c, b, c]
to
  [b, c, b, b, c, b, b, c, b, c, c, b, c, b, c, b, c]
via 36 steps

**************************************************
proof
**************************************************
property Termination
has value Just False
for SRS
  [a] -> [] {- Input 0 -}
  [a, b] -> [c] {- Input 1 -}
  [c, c] -> [b, a, c, b, a, a] {- Input 2 -}
reason
  Nontermination
    Derive   { from = [c, c, b, c, b, c, b, c], via = [(Step   { rule = 2, position = 0}, [b, a, c, b, a, a, b, c, b, c, b, c]), (Step   { rule = 0, position = 1}, [b, c, b, a, a, b, c, b, c, b, c]), (Step   { rule = 1, position = 4}, [b, c, b, a, c, c, b, c, b, c]), (Step   { rule = 2, position = 4}, [b, c, b, a, b, a, c, b, a, a, b, c, b, c]), (Step   { rule = 0, position = 5}, [b, c, b, a, b, c, b, a, a, b, c, b, c]), (Step   { rule = 1, position = 3}, [b, c, b, c, c, b, a, a, b, c, b, c]), (Step   { rule = 2, position = 3}, [b, c, b, b, a, c, b, a, a, b, a, a, b, c, b, c]), (Step   { rule = 1, position = 8}, [b, c, b, b, a, c, b, a, c, a, a, b, c, b, c]), (Step   { rule = 0, position = 4}, [b, c, b, b, c, b, a, c, a, a, b, c, b, c]), (Step   { rule = 1, position = 9}, [b, c, b, b, c, b, a, c, a, c, c, b, c]), (Step   { rule = 2, position = 9}, [b, c, b, b, c, b, a, c, a, b, a, c, b, a, a, b, c]), (Step   { rule = 0, position = 10}, [b, c, b, b, c, b, a, c, a, b, c, b, a, a, b, c]), (Step   { rule = 1, position = 8}, [b, c, b, b, c, b, a, c, c, c, b, a, a, b, c]), (Step   { rule = 2, position = 7}, [b, c, b, b, c, b, a, b, a, c, b, a, a, c, b, a, a, b, c]), (Step   { rule = 0, position = 11}, [b, c, b, b, c, b, a, b, a, c, b, a, c, b, a, a, b, c]), (Step   { rule = 0, position = 11}, [b, c, b, b, c, b, a, b, a, c, b, c, b, a, a, b, c]), (Step   { rule = 0, position = 8}, [b, c, b, b, c, b, a, b, c, b, c, b, a, a, b, c]), (Step   { rule = 1, position = 6}, [b, c, b, b, c, b, c, c, b, c, b, a, a, b, c]), (Step   { rule = 2, position = 6}, [b, c, b, b, c, b, b, a, c, b, a, a, b, c, b, a, a, b, c]), (Step   { rule = 1, position = 11}, [b, c, b, b, c, b, b, a, c, b, a, c, c, b, a, a, b, c]), (Step   { rule = 0, position = 7}, [b, c, b, b, c, b, b, c, b, a, c, c, b, a, a, b, c]), (Step   { rule = 2, position = 10}, [b, c, b, b, c, b, b, c, b, a, b, a, c, b, a, a, b, a, a, b, c]), (Step   { rule = 1, position = 15}, [b, c, b, b, c, b, b, c, b, a, b, a, c, b, a, c, a, a, b, c]), (Step   { rule = 0, position = 14}, [b, c, b, b, c, b, b, c, b, a, b, a, c, b, c, a, a, b, c]), (Step   { rule = 0, position = 11}, [b, c, b, b, c, b, b, c, b, a, b, c, b, c, a, a, b, c]), (Step   { rule = 1, position = 9}, [b, c, b, b, c, b, b, c, b, c, c, b, c, a, a, b, c]), (Step   { rule = 1, position = 14}, [b, c, b, b, c, b, b, c, b, c, c, b, c, a, c, c]), (Step   { rule = 2, position = 14}, [b, c, b, b, c, b, b, c, b, c, c, b, c, a, b, a, c, b, a, a]), (Step   { rule = 0, position = 18}, [b, c, b, b, c, b, b, c, b, c, c, b, c, a, b, a, c, b, a]), (Step   { rule = 0, position = 18}, [b, c, b, b, c, b, b, c, b, c, c, b, c, a, b, a, c, b]), (Step   { rule = 0, position = 15}, [b, c, b, b, c, b, b, c, b, c, c, b, c, a, b, c, b]), (Step   { rule = 1, position = 13}, [b, c, b, b, c, b, b, c, b, c, c, b, c, c, c, b]), (Step   { rule = 2, position = 13}, [b, c, b, b, c, b, b, c, b, c, c, b, c, b, a, c, b, a, a, b]), (Step   { rule = 1, position = 18}, [b, c, b, b, c, b, b, c, b, c, c, b, c, b, a, c, b, a, c]), (Step   { rule = 0, position = 17}, [b, c, b, b, c, b, b, c, b, c, c, b, c, b, a, c, b, c]), (Step   { rule = 0, position = 14}, [b, c, b, b, c, b, b, c, b, c, c, b, c, b, c, b, c])], to = [b, c, b, b, c, b, b, c, b, c, c, b, c, b, c, b, c]}

**************************************************
skeleton: (3,3)\Loop{36}[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 3
  max duration 2.159005814000
  min duration 0.038807541000
  total durat. 2.242271157000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 27
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 9
      , total_length = 162}
    , self = 73
    , parent = Nothing
    , duration = 2.159005814000
    , status = Fail
    , start = 2025-09-03 11:14:04.166758615 UTC
    , finish = 2025-09-03 11:14:06.325764429 UTC
    , thread_cap_info = ("ThreadId 65", 0, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 2.179107925000
  min duration 1.454518425000
  total durat. 3.633626350000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 30}
    , self = 69
    , parent = Nothing
    , duration = 1.454518425000
    , status = Fail
    , start = 2025-09-03 11:14:04.192569324 UTC
    , finish = 2025-09-03 11:14:05.647087749 UTC
    , thread_cap_info = ("ThreadId 96", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 37}
    , self = 74
    , parent = Nothing
    , duration = 2.179107925000
    , status = Fail
    , start = 2025-09-03 11:14:04.226651797 UTC
    , finish = 2025-09-03 11:14:06.405759722 UTC
    , thread_cap_info = ("ThreadId 100", 1, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.452718280000
  min duration 0.841379466000
  total durat. 2.294097746000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 30}
    , self = 70
    , parent = Nothing
    , duration = 1.452718280000
    , status = Fail
    , start = 2025-09-03 11:14:04.395808133 UTC
    , finish = 2025-09-03 11:14:05.848526413 UTC
    , thread_cap_info = ("ThreadId 104", 1, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.002995953000
  min duration 0.181823647000
  total durat. 1.184819600000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 37}
    , self = 68
    , parent = Nothing
    , duration = 1.002995953000
    , status = Fail
    , start = 2025-09-03 11:14:04.224421892 UTC
    , finish = 2025-09-03 11:14:05.227417845 UTC
    , thread_cap_info = ("ThreadId 99", 1, False)}
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.564927497000
  min duration 0.519637373000
  total durat. 1.084564870000
Fail : "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.889210235000
  min duration 1.345250089000
  total durat. 3.234460324000
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 37}
    , self = 76
    , parent = Nothing
    , duration = 1.345250089000
    , status = Fail
    , start = 2025-09-03 11:14:06.677746392 UTC
    , finish = 2025-09-03 11:14:08.022996481 UTC
    , thread_cap_info = ("ThreadId 127", 1, False)}
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 30}
    , self = 77
    , parent = Nothing
    , duration = 1.889210235000
    , status = Fail
    , start = 2025-09-03 11:14:06.267397812 UTC
    , finish = 2025-09-03 11:14:08.156608047 UTC
    , thread_cap_info = ("ThreadId 122", 1, False)}
Success : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 6.116356754000
  min duration 6.116356754000
  total durat. 6.116356754000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 78
    , parent = Nothing
    , duration = 6.116356754000
    , status = Success
    , start = 2025-09-03 11:14:04.161672322 UTC
    , finish = 2025-09-03 11:14:10.278029076 UTC
    , thread_cap_info = ("ThreadId 71", 3, False)}
**************************************************
S                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
S                , closure = Forward\n , start_strict_only = True\n , max_closure_length
S                = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
S                , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
S                max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
S                [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
S                string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
S                , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
S                = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
S                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
S                = 12} , self = 78 , parent = Nothing , duration = 6.116356754000 , status
S                = Success , start = 2025-09-03 11:14:04.161672322 UTC , finish = 2025-09-03
S                11:14:10.278029076 UTC , thread_cap_info = ("ThreadId 71", 3, False)}
S                
| F              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F              = Size { num_rules = 27 , num_strict_rules = 27 , num_top_rules = 0 , num_weak_rules
| F              = 0 , alphabet_size = 9 , total_length = 162} , self = 73 , parent = Nothing
| F              , duration = 2.159005814000 , status = Fail , start = 2025-09-03 11:14:04.166758615
| F              UTC , finish = 2025-09-03 11:14:06.325764429 UTC , thread_cap_info = ("ThreadId
| F              65", 0, False)}
| F              
| | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F            = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | F            = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F            = 162} , self = 67 , parent = Nothing , duration = 0.722083231000 , status
| | F            = Fail , start = 2025-09-03 11:14:04.166765472 UTC , finish = 2025-09-03
| | F            11:14:04.888848703 UTC , thread_cap_info = ("ThreadId 72", 3, False)}
| | F            
| | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | F          = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | F          = 162} , self = 58 , parent = Nothing , duration = 0.201930035000 , status
| | | F          = Fail , start = 2025-09-03 11:14:04.186648015 UTC , finish = 2025-09-03
| | | F          11:14:04.38857805 UTC , thread_cap_info = ("ThreadId 74", 3, False)}
| | | F          
| | | | F        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F        = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | | F        = 5 , total_length = 30} , self = 57 , parent = Nothing , duration = 0.181823647000
| | | | F        , status = Fail , start = 2025-09-03 11:14:04.190326622 UTC , finish =
| | | | F        2025-09-03 11:14:04.372150269 UTC , thread_cap_info = ("ThreadId 95", 1,
| | | | F        False)}
| | | | F        
| | | | | F      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | F      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | F      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | F      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | | F      , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | | | F      = 5 , total_length = 30} , self = 69 , parent = Nothing , duration = 1.454518425000
| | | | | F      , status = Fail , start = 2025-09-03 11:14:04.192569324 UTC , finish =
| | | | | F      2025-09-03 11:14:05.647087749 UTC , thread_cap_info = ("ThreadId 96", 1,
| | | | | F      False)}
| | | | | F      
| | | | | | F    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F    = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | | | | F    = 5 , total_length = 37} , self = 68 , parent = Nothing , duration = 1.002995953000
| | | | | | F    , status = Fail , start = 2025-09-03 11:14:04.224421892 UTC , finish =
| | | | | | F    2025-09-03 11:14:05.227417845 UTC , thread_cap_info = ("ThreadId 99", 1,
| | | | | | F    False)}
| | | | | | F    
| | | | | | | F  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | F  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | F  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | F  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | F  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | F  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | | | | F  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | | | | | | F  = 5 , total_length = 37} , self = 74 , parent = Nothing , duration = 2.179107925000
| | | | | | | F  , status = Fail , start = 2025-09-03 11:14:04.226651797 UTC , finish =
| | | | | | | F  2025-09-03 11:14:06.405759722 UTC , thread_cap_info = ("ThreadId 100",
| | | | | | | F  1, False)}
| | | | | | | F  
| | | | F | | |  
| | | F   | | |  
| | | F   | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | F   | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | F   | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | F   | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F   | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F   | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | F   | | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | F   | | |  = 5 , total_length = 30} , self = 70 , parent = Nothing , duration = 1.452718280000
| | | F   | | |  , status = Fail , start = 2025-09-03 11:14:04.395808133 UTC , finish =
| | | F   | | |  2025-09-03 11:14:05.848526413 UTC , thread_cap_info = ("ThreadId 104",
| | | F   | | |  1, False)}
| | | F   | | |  
| | F |   | | |  
| |   |   | F |  
| | F |   |   |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | F |   |   |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F |   |   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F |   |   |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F |   |   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F |   |   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | F |   |   |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | F |   |   |  = 5 , total_length = 37} , self = 71 , parent = Nothing , duration = 0.841379466000
| | F |   |   |  , status = Fail , start = 2025-09-03 11:14:05.246679469 UTC , finish =
| | F |   |   |  2025-09-03 11:14:06.088058935 UTC , thread_cap_info = ("ThreadId 116",
| | F |   |   |  1, False)}
| | F |   |   |  
| | | |   F   |  
| | | | F     |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F     |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F     |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F     |  = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | | F     |  = 5 , total_length = 30} , self = 72 , parent = Nothing , duration = 0.564927497000
| | | | F     |  , status = Fail , start = 2025-09-03 11:14:05.647160408 UTC , finish =
| | | | F     |  2025-09-03 11:14:06.212087905 UTC , thread_cap_info = ("ThreadId 118",
| | | | F     |  1, False)}
| | | | F     |  
| | | F |     |  
| | F   |     |  
| | F   |     |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | F   |     |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F   |     |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F   |     |  = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | F   |     |  = 5 , total_length = 37} , self = 75 , parent = Nothing , duration = 0.519637373000
| | F   |     |  , status = Fail , start = 2025-09-03 11:14:06.128995512 UTC , finish =
| | F   |     |  2025-09-03 11:14:06.648632885 UTC , thread_cap_info = ("ThreadId 121",
| | F   |     |  1, False)}
| | F   |     |  
| | |   F     |  
| | | F       |  Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
| | | F       |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F       |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F       |  = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | F       |  = 5 , total_length = 30} , self = 77 , parent = Nothing , duration = 1.889210235000
| | | F       |  , status = Fail , start = 2025-09-03 11:14:06.267397812 UTC , finish =
| | | F       |  2025-09-03 11:14:08.156608047 UTC , thread_cap_info = ("ThreadId 122",
| | | F       |  1, False)}
| | | F       |  
| F | |       |  
|   | |       F  
|   F |          
| F   |          Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
| F   |          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F   |          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F   |          = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| F   |          = 5 , total_length = 37} , self = 76 , parent = Nothing , duration = 1.345250089000
| F   |          , status = Fail , start = 2025-09-03 11:14:06.677746392 UTC , finish =
| F   |          2025-09-03 11:14:08.022996481 UTC , thread_cap_info = ("ThreadId 127",
| F   |          1, False)}
| F   |          
| F   |          
|     F          
S                
