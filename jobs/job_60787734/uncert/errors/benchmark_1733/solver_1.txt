last 7011 length 46304
CNF 7011 vars 46304 clauses
last 8871 length 56245
last 11156 length 63347
CNF 8871 vars 56245 clauses
**************************************************
summary
**************************************************
SRS with 1 rules on 2 letters       Drop
SRS with 1 rules on 2 letters       Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 2 certified by automaton with 111 states

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, a, b, b, a, a, b, b, a] -> [a, b, b, a, a, b, b, a, b, b, a] {- Input 0 -}
reason
  Drop
    property Termination
    has value Just True
    for SRS
      [b, a, b, b, a, a] -> [a, b, b, a, a, b, b, a] {- Dropped 0 3 (Input 0) -}
    reason
      Matchbound
        Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 2 certified by automaton with 111 states

   property Termination
has value Just True
for SRS
  [b, a, b, b, a, a] -> [a, b, b, a, a, b, b, a] {- Dropped 0 3 (Input 0) -}
reason
  Matchbound
    Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 2 certified by automaton with 111 states

**************************************************
skeleton: \Drop{0}{3}(1,2)\Rfcmatchbound{2}[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.548638000000
  min duration 1.548638000000
  total durat. 1.548638000000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 88}
    , self = 102
    , parent = Nothing
    , duration = 1.548638000000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:54:20.895704336 UTC
    , finish = 2025-09-03 12:54:22.444342336 UTC
    , thread_cap_info = ("ThreadId 90", 3, False)}
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 10
  max duration 0.526613438000
  min duration 0.017980797000
  total durat. 2.740255431000
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 5
  max duration 1.667118499000
  min duration 0.849052273000
  total durat. 6.069125137000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 14}
    , self = 96
    , parent = Nothing
    , duration = 1.020501392000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:54:21.33444838 UTC
    , finish = 2025-09-03 12:54:22.354949772 UTC
    , thread_cap_info = ("ThreadId 175", 2, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 16}
    , self = 100
    , parent = Nothing
    , duration = 1.180559753000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:54:21.234452035 UTC
    , finish = 2025-09-03 12:54:22.415011788 UTC
    , thread_cap_info = ("ThreadId 171", 2, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 18}
    , self = 101
    , parent = Nothing
    , duration = 1.351893220000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:54:21.082563798 UTC
    , finish = 2025-09-03 12:54:22.434457018 UTC
    , thread_cap_info = ("ThreadId 156", 2, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 20}
    , self = 104
    , parent = Nothing
    , duration = 1.667118499000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:54:20.787365842 UTC
    , finish = 2025-09-03 12:54:22.454484341 UTC
    , thread_cap_info = ("ThreadId 57", 2, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 6
  max duration 1.651720350000
  min duration 0.679753743000
  total durat. 6.258527015000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 16}
    , self = 95
    , parent = Nothing
    , duration = 1.057997514000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:54:21.216477656 UTC
    , finish = 2025-09-03 12:54:22.27447517 UTC
    , thread_cap_info = ("ThreadId 169", 2, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 18}
    , self = 97
    , parent = Nothing
    , duration = 1.189032294000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:54:21.17445929 UTC
    , finish = 2025-09-03 12:54:22.363491584 UTC
    , thread_cap_info = ("ThreadId 154", 1, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 20}
    , self = 103
    , parent = Nothing
    , duration = 1.651720350000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:54:20.802732727 UTC
    , finish = 2025-09-03 12:54:22.454453077 UTC
    , thread_cap_info = ("ThreadId 62", 3, False)}
Fail : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = False}"
  total number 2
  max duration 1.264994649000
  min duration 0.297196840000
  total durat. 1.562191489000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 16}
    , self = 94
    , parent = Nothing
    , duration = 1.264994649000
    , status = Fail
    , start = 2025-09-03 12:54:20.87936964 UTC
    , finish = 2025-09-03 12:54:22.144364289 UTC
    , thread_cap_info = ("ThreadId 78", 2, False)}
Except "AsyncCancelled" : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = False}"
  total number 4
  max duration 1.369021863000
  min duration 0.687311880000
  total durat. 4.176124991000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 18}
    , self = 92
    , parent = Nothing
    , duration = 1.220851044000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:54:20.854464354 UTC
    , finish = 2025-09-03 12:54:22.075315398 UTC
    , thread_cap_info = ("ThreadId 70", 2, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 20}
    , self = 99
    , parent = Nothing
    , duration = 1.369021863000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:54:20.994482792 UTC
    , finish = 2025-09-03 12:54:22.363504655 UTC
    , thread_cap_info = ("ThreadId 116", 2, False)}
**************************************************
F                                          Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                                          , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                                          = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                                          , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                                          = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
F                                          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F                                          = 20} , self = 61 , parent = Nothing , duration = 0.297196840000 , status
F                                          = Fail , start = 2025-09-03 12:54:20.785338028 UTC , finish = 2025-09-03
F                                          12:54:21.082534868 UTC , thread_cap_info = ("ThreadId 22", 1, False)}
F                                          
| F                                        Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F                                        , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F                                        = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F                                        False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F                                        = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| F                                        = 0 , alphabet_size = 4 , total_length = 88} , self = 36 , parent = Nothing
| F                                        , duration = 0.112546556000 , status = Fail , start = 2025-09-03 12:54:20.786425818
| F                                        UTC , finish = 2025-09-03 12:54:20.898972374 UTC , thread_cap_info = ("ThreadId
| F                                        52", 0, False)}
| F                                        
| | E                                      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | E                                      , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | E                                      = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | E                                      , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | E                                      max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | E                                      [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | E                                      string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | E                                      , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | E                                      = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | E                                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | E                                      = 20} , self = 104 , parent = Nothing , duration = 1.667118499000 , status
| | E                                      = Except "AsyncCancelled" , start = 2025-09-03 12:54:20.787365842 UTC ,
| | E                                      finish = 2025-09-03 12:54:22.454484341 UTC , thread_cap_info = ("ThreadId
| | E                                      57", 2, False)}
| | E                                      
| | | F                                    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | F                                    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | F                                    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | F                                    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | F                                    = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| | | F                                    = 0 , alphabet_size = 4 , total_length = 88} , self = 39 , parent = Nothing
| | | F                                    , duration = 0.147537637000 , status = Fail , start = 2025-09-03 12:54:20.794475876
| | | F                                    UTC , finish = 2025-09-03 12:54:20.942013513 UTC , thread_cap_info = ("ThreadId
| | | F                                    54", 0, False)}
| | | F                                    
| | | | E                                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | E                                  , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | E                                  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | E                                  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | E                                  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | E                                  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | E                                  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | E                                  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | E                                  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | E                                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | E                                  = 20} , self = 103 , parent = Nothing , duration = 1.651720350000 , status
| | | | E                                  = Except "AsyncCancelled" , start = 2025-09-03 12:54:20.802732727 UTC ,
| | | | E                                  finish = 2025-09-03 12:54:22.454453077 UTC , thread_cap_info = ("ThreadId
| | | | E                                  62", 3, False)}
| | | | E                                  
| | | | | E                                Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | E                                , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | E                                = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | E                                , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | E                                = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | E                                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | E                                = 18} , self = 92 , parent = Nothing , duration = 1.220851044000 , status
| | | | | E                                = Except "AsyncCancelled" , start = 2025-09-03 12:54:20.854464354 UTC ,
| | | | | E                                finish = 2025-09-03 12:54:22.075315398 UTC , thread_cap_info = ("ThreadId
| | | | | E                                70", 2, False)}
| | | | | E                                
| | | | | | F                              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F                              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F                              = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | F                              = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | | | F                              = 88} , self = 87 , parent = Nothing , duration = 0.760213139000 , status
| | | | | | F                              = Fail , start = 2025-09-03 12:54:20.87934451 UTC , finish = 2025-09-03
| | | | | | F                              12:54:21.639557649 UTC , thread_cap_info = ("ThreadId 88", 3, False)}
| | | | | | F                              
| | | | | | | F                            Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | F                            , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | F                            = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | F                            , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | F                            = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | F                            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | F                            = 16} , self = 94 , parent = Nothing , duration = 1.264994649000 , status
| | | | | | | F                            = Fail , start = 2025-09-03 12:54:20.87936964 UTC , finish = 2025-09-03
| | | | | | | F                            12:54:22.144364289 UTC , thread_cap_info = ("ThreadId 78", 2, False)}
| | | | | | | F                            
| | | | | | | | E                          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | E                          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | E                          = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | | E                          = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | | | | | E                          = 88} , self = 102 , parent = Nothing , duration = 1.548638000000 , status
| | | | | | | | E                          = Except "AsyncCancelled" , start = 2025-09-03 12:54:20.895704336 UTC ,
| | | | | | | | E                          finish = 2025-09-03 12:54:22.444342336 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E                          90", 3, False)}
| | | | | | | | E                          
| F | | | | | | |                          
| F | | | | | | |                          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F | | | | | | |                          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F | | | | | | |                          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F | | | | | | |                          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F | | | | | | |                          = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| F | | | | | | |                          = 0 , alphabet_size = 2 , total_length = 18} , self = 81 , parent = Nothing
| F | | | | | | |                          , duration = 0.463346567000 , status = Fail , start = 2025-09-03 12:54:20.936659235
| F | | | | | | |                          UTC , finish = 2025-09-03 12:54:21.400005802 UTC , thread_cap_info = ("ThreadId
| F | | | | | | |                          94", 2, False)}
| F | | | | | | |                          
| | | F | | | | |                          
| | | E | | | | |                          Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | E | | | | |                          , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | E | | | | |                          = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | E | | | | |                          , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | E | | | | |                          = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | E | | | | |                          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | E | | | | |                          = 14} , self = 90 , parent = Nothing , duration = 0.898940204000 , status
| | | E | | | | |                          = Except "AsyncCancelled" , start = 2025-09-03 12:54:20.955528745 UTC ,
| | | E | | | | |                          finish = 2025-09-03 12:54:21.854468949 UTC , thread_cap_info = ("ThreadId
| | | E | | | | |                          103", 2, False)}
| | | E | | | | |                          
| | | | | | | | | E                        Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | | E                        , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | | E                        = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | | E                        , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | | E                        = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | E                        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | E                        = 12} , self = 88 , parent = Nothing , duration = 0.687311880000 , status
| | | | | | | | | E                        = Except "AsyncCancelled" , start = 2025-09-03 12:54:20.987632442 UTC ,
| | | | | | | | | E                        finish = 2025-09-03 12:54:21.674944322 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | E                        108", 2, False)}
| | | | | | | | | E                        
| | | | | | | | | | E                      Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | | | E                      , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | | | E                      = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | | | E                      , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | | | E                      = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | E                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | E                      = 20} , self = 99 , parent = Nothing , duration = 1.369021863000 , status
| | | | | | | | | | E                      = Except "AsyncCancelled" , start = 2025-09-03 12:54:20.994482792 UTC ,
| | | | | | | | | | E                      finish = 2025-09-03 12:54:22.363504655 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | E                      116", 2, False)}
| | | | | | | | | | E                      
| | | | | | | | | | | F                    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | F                    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | F                    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | F                    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | F                    = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | F                    = 0 , alphabet_size = 2 , total_length = 18} , self = 64 , parent = Nothing
| | | | | | | | | | | F                    , duration = 0.113579110000 , status = Fail , start = 2025-09-03 12:54:21.016688291
| | | | | | | | | | | F                    UTC , finish = 2025-09-03 12:54:21.130267401 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | F                    127", 2, False)}
| | | | | | | | | | | F                    
| | | | | | | | | | | | F                  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | F                  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | F                  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | F                  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | F                  = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | F                  = 0 , alphabet_size = 2 , total_length = 16} , self = 76 , parent = Nothing
| | | | | | | | | | | | F                  , duration = 0.237807237000 , status = Fail , start = 2025-09-03 12:54:21.056235405
| | | | | | | | | | | | F                  UTC , finish = 2025-09-03 12:54:21.294042642 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | F                  131", 2, False)}
| | | | | | | | | | | | F                  
F | | | | | | | | | | | |                  
E | | | | | | | | | | | |                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E | | | | | | | | | | | |                  , closure = Backward\n , start_strict_only = True\n , max_closure_length
E | | | | | | | | | | | |                  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
E | | | | | | | | | | | |                  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
E | | | | | | | | | | | |                  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
E | | | | | | | | | | | |                  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
E | | | | | | | | | | | |                  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
E | | | | | | | | | | | |                  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E | | | | | | | | | | | |                  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
E | | | | | | | | | | | |                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
E | | | | | | | | | | | |                  = 18} , self = 101 , parent = Nothing , duration = 1.351893220000 , status
E | | | | | | | | | | | |                  = Except "AsyncCancelled" , start = 2025-09-03 12:54:21.082563798 UTC ,
E | | | | | | | | | | | |                  finish = 2025-09-03 12:54:22.434457018 UTC , thread_cap_info = ("ThreadId
E | | | | | | | | | | | |                  156", 2, False)}
E | | | | | | | | | | | |                  
| | | | | | | | | | | | | S                Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | S                , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | S                = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | S                False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | S                = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | S                = 0 , alphabet_size = 2 , total_length = 12} , self = 70 , parent = Nothing
| | | | | | | | | | | | | S                , duration = 0.126951871000 , status = Success , start = 2025-09-03 12:54:21.09457434
| | | | | | | | | | | | | S                UTC , finish = 2025-09-03 12:54:21.221526211 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | S                142", 1, False)}
| | | | | | | | | | | | | S                
| | | | | | | | | | | | | | F              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | F              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | F              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | F              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | F              = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | F              = 0 , alphabet_size = 2 , total_length = 12} , self = 84 , parent = Nothing
| | | | | | | | | | | | | | F              , duration = 0.441506933000 , status = Fail , start = 2025-09-03 12:54:21.094597468
| | | | | | | | | | | | | | F              UTC , finish = 2025-09-03 12:54:21.536104401 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | F              144", 1, False)}
| | | | | | | | | | | | | | F              
| | | | | | | | | | | F | | |              
| | | | | | | | | | | F | | |              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | F | | |              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | F | | |              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | F | | |              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | F | | |              = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | F | | |              = 0 , alphabet_size = 2 , total_length = 16} , self = 85 , parent = Nothing
| | | | | | | | | | | F | | |              , duration = 0.441315445000 , status = Fail , start = 2025-09-03 12:54:21.136003349
| | | | | | | | | | | F | | |              UTC , finish = 2025-09-03 12:54:21.577318794 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | F | | |              158", 2, False)}
| | | | | | | | | | | F | | |              
| | | | | | | | | | | | | | | E            Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | E            , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | E            = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | E            , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | E            max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | E            [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | E            string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | E            , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | E            = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | E            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | E            = 18} , self = 97 , parent = Nothing , duration = 1.189032294000 , status
| | | | | | | | | | | | | | | E            = Except "AsyncCancelled" , start = 2025-09-03 12:54:21.17445929 UTC ,
| | | | | | | | | | | | | | | E            finish = 2025-09-03 12:54:22.363491584 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | E            154", 1, False)}
| | | | | | | | | | | | | | | E            
| | | | | | | | | | | | | | | | S          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | | | S          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | | | S          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | | | S          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | | | S          = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | | | S          = 0 , alphabet_size = 2 , total_length = 14} , self = 77 , parent = Nothing
| | | | | | | | | | | | | | | | S          , duration = 0.188114416000 , status = Success , start = 2025-09-03 12:54:21.174470147
| | | | | | | | | | | | | | | | S          UTC , finish = 2025-09-03 12:54:21.362584563 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | S          162", 2, False)}
| | | | | | | | | | | | | | | | S          
| | | | | | | | | | | | | | | | | E        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | | E        , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | | E        = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | | E        , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | | E        max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | | E        [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | | E        string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | | E        , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | | E        = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | E        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | E        = 16} , self = 95 , parent = Nothing , duration = 1.057997514000 , status
| | | | | | | | | | | | | | | | | E        = Except "AsyncCancelled" , start = 2025-09-03 12:54:21.216477656 UTC ,
| | | | | | | | | | | | | | | | | E        finish = 2025-09-03 12:54:22.27447517 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | E        169", 2, False)}
| | | | | | | | | | | | | | | | | E        
| | | | | | | | | | | | | S | | | |        
| | | | | | | | | | | | | E | | | |        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | E | | | |        , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | E | | | |        = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | E | | | |        , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | E | | | |        max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | E | | | |        [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | E | | | |        string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | E | | | |        , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | E | | | |        = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | E | | | |        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | E | | | |        = 16} , self = 100 , parent = Nothing , duration = 1.180559753000 , status
| | | | | | | | | | | | | E | | | |        = Except "AsyncCancelled" , start = 2025-09-03 12:54:21.234452035 UTC ,
| | | | | | | | | | | | | E | | | |        finish = 2025-09-03 12:54:22.415011788 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | E | | | |        171", 2, False)}
| | | | | | | | | | | | | E | | | |        
| | | | | | | | | | | | | | | | | | F      Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | | | | | F      , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | | | | | F      = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | | | | | F      False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | | | | | F      = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | | | | | F      = 0 , alphabet_size = 2 , total_length = 20} , self = 89 , parent = Nothing
| | | | | | | | | | | | | | | | | | F      , duration = 0.526613438000 , status = Fail , start = 2025-09-03 12:54:21.281315901
| | | | | | | | | | | | | | | | | | F      UTC , finish = 2025-09-03 12:54:21.807929339 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | F      172", 1, False)}
| | | | | | | | | | | | | | | | | | F      
| | | | | | | | | | | | F | | | | | |      
| | | | | | | | | | | | E | | | | | |      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | E | | | | | |      , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | E | | | | | |      = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | E | | | | | |      , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | E | | | | | |      max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | E | | | | | |      [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | E | | | | | |      string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | E | | | | | |      , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | E | | | | | |      = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | E | | | | | |      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | E | | | | | |      = 14} , self = 93 , parent = Nothing , duration = 0.779999582000 , status
| | | | | | | | | | | | E | | | | | |      = Except "AsyncCancelled" , start = 2025-09-03 12:54:21.314457491 UTC ,
| | | | | | | | | | | | E | | | | | |      finish = 2025-09-03 12:54:22.094457073 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | E | | | | | |      174", 2, False)}
| | | | | | | | | | | | E | | | | | |      
| | | | | | | | | | | | | | | | | | | E    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | | | | E    , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | | | | E    = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | | | | E    , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | | | | E    max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | | | | E    [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | | | | E    string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | | | | E    , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | | | | E    = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | | | E    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | | | E    = 14} , self = 96 , parent = Nothing , duration = 1.020501392000 , status
| | | | | | | | | | | | | | | | | | | E    = Except "AsyncCancelled" , start = 2025-09-03 12:54:21.33444838 UTC ,
| | | | | | | | | | | | | | | | | | | E    finish = 2025-09-03 12:54:22.354949772 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | | E    175", 2, False)}
| | | | | | | | | | | | | | | | | | | E    
| | | | | | | | | | | | | | | | S | | |    
| | | | | | | | | | | | | | | | E | | |    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | E | | |    , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | E | | |    = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | E | | |    , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | E | | |    max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | E | | |    [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | E | | |    string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | E | | |    , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | E | | |    = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | E | | |    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | E | | |    = 12} , self = 91 , parent = Nothing , duration = 0.679753743000 , status
| | | | | | | | | | | | | | | | E | | |    = Except "AsyncCancelled" , start = 2025-09-03 12:54:21.374706017 UTC ,
| | | | | | | | | | | | | | | | E | | |    finish = 2025-09-03 12:54:22.05445976 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | E | | |    176", 2, False)}
| | | | | | | | | | | | | | | | E | | |    
| | | | | | | | | | | | | | | | | | | | F  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | | | | | | | F  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | | | | | | | F  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | | | | | | | F  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | | | | | | | F  = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | | | | | | | F  = 0 , alphabet_size = 2 , total_length = 20} , self = 86 , parent = Nothing
| | | | | | | | | | | | | | | | | | | | F  , duration = 0.238021711000 , status = Fail , start = 2025-09-03 12:54:21.395124139
| | | | | | | | | | | | | | | | | | | | F  UTC , finish = 2025-09-03 12:54:21.63314585 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | | | F  178", 1, False)}
| | | | | | | | | | | | | | | | | | | | F  
| F | | | | | | | | | | | | | | | | | | |  
| E | | | | | | | | | | | | | | | | | | |  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| E | | | | | | | | | | | | | | | | | | |  , closure = Backward\n , start_strict_only = True\n , max_closure_length
| E | | | | | | | | | | | | | | | | | | |  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| E | | | | | | | | | | | | | | | | | | |  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| E | | | | | | | | | | | | | | | | | | |  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| E | | | | | | | | | | | | | | | | | | |  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| E | | | | | | | | | | | | | | | | | | |  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| E | | | | | | | | | | | | | | | | | | |  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| E | | | | | | | | | | | | | | | | | | |  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| E | | | | | | | | | | | | | | | | | | |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| E | | | | | | | | | | | | | | | | | | |  = 12} , self = 98 , parent = Nothing , duration = 0.849052273000 , status
| E | | | | | | | | | | | | | | | | | | |  = Except "AsyncCancelled" , start = 2025-09-03 12:54:21.514450503 UTC ,
| E | | | | | | | | | | | | | | | | | | |  finish = 2025-09-03 12:54:22.363502776 UTC , thread_cap_info = ("ThreadId
| E | | | | | | | | | | | | | | | | | | |  181", 1, False)}
| E | | | | | | | | | | | | | | | | | | |  
| | | | | | | | | | | | | | F | | | | | |  
| | | | | | | | | | | | | | E | | | | | |  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | E | | | | | |  , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | E | | | | | |  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | E | | | | | |  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | E | | | | | |  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | E | | | | | |  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | E | | | | | |  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | E | | | | | |  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | E | | | | | |  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | E | | | | | |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | E | | | | | |  = 20} , self = 105 , parent = Nothing , duration = 0.900023532000 , status
| | | | | | | | | | | | | | E | | | | | |  = Except "AsyncCancelled" , start = 2025-09-03 12:54:21.554465203 UTC ,
| | | | | | | | | | | | | | E | | | | | |  finish = 2025-09-03 12:54:22.454488735 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | E | | | | | |  182", 1, False)}
| | | | | | | | | | | | | | E | | | | | |  
| | | | | | | | | | | F | | | | | | | | |  
| | | | | | | | | | |   | | | | | | | | F  
| | | | | | F | | | |   | | | | | | | |    
| | | | | |   | | E |   | | | | | | | |    
| | | | | |   | |   |   | | | | | | F |    
| | | E | |   | |   |   | | | | | |   |    
| | |   | |   | |   |   | | | | E |   |    
| | |   | E   | |   |   | | | |   |   |    
| | |   |     | |   |   E | | |   |   |    
| | |   |     F |   |     | | |   |   |    
| | |   |       |   |     | | |   E   |    
| | |   |       |   |     | | |       E    
| | |   |       |   |     | | E            
| E |   |       |   |     | |              
|   |   |       |   E     | |              
|   |   |       |         E |              
E   |   |       |           |              
    |   |       E           |              
    |   E                   |              
    E                       |              
                            E              
