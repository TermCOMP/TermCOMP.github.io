last 3734 length 16738
CNF 3734 vars 16738 clauses
last 3954 length 16997
CNF 3954 vars 16997 clauses
last 1367 length 5779
CNF 1367 vars 5779 clauses
last 1376 length 5865
CNF 1376 vars 5865 clauses
last 1245 length 5261
CNF 1245 vars 5261 clauses
last 1102 length 4540
CNF 1102 vars 4540 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2637, clauses: 9944
last 2637 length 9944
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2769, clauses: 10436
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8946, clauses: 37563
last 2769 length 10436
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9244, clauses: 38835
last 8946 length 37563
last 9244 length 38835
CNF 2769 vars 10436 clauses
CNF 8946 vars 37563 clauses
CNF 2637 vars 9944 clauses
CNF 9244 vars 38835 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2769, clauses: 10436, status: Unsatisfied, time: 0.120559999s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2637, clauses: 9944, status: Unsatisfied, time: 0.3036135s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5622, clauses: 23616
last 5622 length 23616
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5439, clauses: 22795
last 5439 length 22795
CNF 5622 vars 23616 clauses
CNF 5439 vars 22795 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9244, clauses: 38835, status: Unsatisfied, time: 0.590235372s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4581, clauses: 18285
last 4581 length 18285
CNF 4581 vars 18285 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5622, clauses: 23616, status: Unsatisfied, time: 0.452866385s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4581, clauses: 18285, status: Satisfied, time: 0.364127061s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8946, clauses: 37563, status: Unsatisfied, time: 1.163901075s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5439, clauses: 22795, status: Unsatisfied, time: 0.648859038s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4349, clauses: 17349
last 4349 length 17349
CNF 4349 vars 17349 clauses
last 751 length 3121
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4349, clauses: 17349, status: Satisfied, time: 0.140098302s
last 706 length 2876
CNF 751 vars 3121 clauses
CNF 706 vars 2876 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1819, clauses: 6709
last 1819 length 6709
CNF 1819 vars 6709 clauses
**************************************************
summary
**************************************************
SRS with 3 rules on 2 letters       DP
SRS with 9 strict rules and 3 weak rules on 4 letters       weights
SRS with 3 strict rules and 3 weak rules on 4 letters       EDG
SRS with 3 strict rules and 3 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 3 weak rules on 4 letters       weights
SRS with 0 strict rules and 3 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, b, b, b] -> [a, a, a, a] {- Input 0 -}
  [a, b, a, a] -> [b, b, b, b] {- Input 1 -}
  [b, a, b, a] -> [a, a, b, a] {- Input 2 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [b, b, b, b] ->= [a, a, a, a] {- DP Nontop (Input 0) -}
  [a, b, a, a] ->= [b, b, b, b] {- DP Nontop (Input 1) -}
  [b, a, b, a] ->= [a, a, b, a] {- DP Nontop (Input 2) -}
  [a#, b, a, a] |-> [b#] {- DP (Top 3) (Input 1) -}
  [a#, b, a, a] |-> [b#, b] {- DP (Top 2) (Input 1) -}
  [a#, b, a, a] |-> [b#, b, b] {- DP (Top 1) (Input 1) -}
  [a#, b, a, a] |-> [b#, b, b, b] {- DP (Top 0) (Input 1) -}
  [b#, a, b, a] |-> [a#, a, b, a] {- DP (Top 0) (Input 2) -}
  [b#, b, b, b] |-> [a#] {- DP (Top 3) (Input 0) -}
  [b#, b, b, b] |-> [a#, a] {- DP (Top 2) (Input 0) -}
  [b#, b, b, b] |-> [a#, a, a] {- DP (Top 1) (Input 0) -}
  [b#, b, b, b] |-> [a#, a, a, a] {- DP (Top 0) (Input 0) -}
reason
  (a, 1/1)
  (b, 1/1)
  (a#, 0/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [b, b, b, b] ->= [a, a, a, a] {- DP Nontop (Input 0) -}
  [a, b, a, a] ->= [b, b, b, b] {- DP Nontop (Input 1) -}
  [b, a, b, a] ->= [a, a, b, a] {- DP Nontop (Input 2) -}
  [a#, b, a, a] |-> [b#, b, b, b] {- DP (Top 0) (Input 1) -}
  [b#, a, b, a] |-> [a#, a, b, a] {- DP (Top 0) (Input 2) -}
  [b#, b, b, b] |-> [a#, a, a, a] {- DP (Top 0) (Input 0) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b, a, a] |-> [b#, b, b, b] {- DP (Top 0) (Input 1) -}
  [b#, a, b, a] |-> [a#, a, b, a] {- DP (Top 0) (Input 2) -}
  [b#, b, b, b] |-> [a#, a, a, a] {- DP (Top 0) (Input 0) -}
  [b, b, b, b] ->= [a, a, a, a] {- DP Nontop (Input 0) -}
  [a, b, a, a] ->= [b, b, b, b] {- DP Nontop (Input 1) -}
  [b, a, b, a] ->= [a, a, b, a] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / 4A 4A 4A 8A - \
        | 4A 4A 4A 8A - |
        | 4A 4A 4A 8A - |
        | 0A 0A 0A 4A - |
        \ -  -  -  -  - / )
  ( b
  , Wk  / 4A 4A 4A 8A - \
        | 4A 4A 4A 4A - |
        | 0A 4A 4A 4A - |
        | 0A 0A 4A 4A - |
        \ -  -  -  -  - / )
  ( a#
  , Wk  / 9A 9A 9A 13A - \
        | 9A 9A 9A 13A - |
        | 9A 9A 9A 13A - |
        | 9A 9A 9A 13A - |
        \ -  -  -  -   - / )
  ( b#
  , Wk  / 9A 9A 11A 13A - \
        | 9A 9A 11A 13A - |
        | 9A 9A 11A 13A - |
        | 9A 9A 11A 13A - |
        \ -  -  -   -   - / )
   property Termination
has value Just True
for SRS
  [a#, b, a, a] |-> [b#, b, b, b] {- DP (Top 0) (Input 1) -}
  [b, b, b, b] ->= [a, a, a, a] {- DP Nontop (Input 0) -}
  [a, b, a, a] ->= [b, b, b, b] {- DP Nontop (Input 1) -}
  [b, a, b, a] ->= [a, a, b, a] {- DP Nontop (Input 2) -}
reason
  (a, 0/1)
  (b, 0/1)
  (a#, 1/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [b, b, b, b] ->= [a, a, a, a] {- DP Nontop (Input 0) -}
  [a, b, a, a] ->= [b, b, b, b] {- DP Nontop (Input 1) -}
  [b, a, b, a] ->= [a, a, b, a] {- DP Nontop (Input 2) -}
reason
  EDG

**************************************************
skeleton: (3,2)\Deepee(9/3,4)\Weight\EDG(3/3,4)\Matrix{\Arctic}{4}(1/3,4)\Weight(0/3,2)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 2
  max duration 1.876822760000
  min duration 1.727725661000
  total durat. 3.604548421000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 24}
    , self = 49
    , parent = Nothing
    , duration = 1.727725661000
    , status = Fail
    , start = 2025-09-03 11:55:36.684785854 UTC
    , finish = 2025-09-03 11:55:38.412511515 UTC
    , thread_cap_info = ("ThreadId 55", 0, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 24}
    , self = 50
    , parent = Nothing
    , duration = 1.876822760000
    , status = Fail
    , start = 2025-09-03 11:55:36.68023524 UTC
    , finish = 2025-09-03 11:55:38.557058 UTC
    , thread_cap_info = ("ThreadId 53", 0, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.448561308000
  min duration 0.745607734000
  total durat. 2.194169042000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 48}
    , self = 74
    , parent = Nothing
    , duration = 1.448561308000
    , status = Fail
    , start = 2025-09-03 11:55:38.643717216 UTC
    , finish = 2025-09-03 11:55:40.092278524 UTC
    , thread_cap_info = ("ThreadId 108", 0, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.024199099000
  min duration 0.834162370000
  total durat. 1.858361469000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 48}
    , self = 76
    , parent = Nothing
    , duration = 1.024199099000
    , status = Fail
    , start = 2025-09-03 11:55:39.105882499 UTC
    , finish = 2025-09-03 11:55:40.130081598 UTC
    , thread_cap_info = ("ThreadId 116", 0, False)}
Success : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.540604931000
  min duration 0.519038318000
  total durat. 1.059643249000
**************************************************
F              Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F              , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F              = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F              , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F              = False}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F              = 24} , self = 47 , parent = Nothing , duration = 0.773498417000 , status
F              = Fail , start = 2025-09-03 11:55:36.680201663 UTC , finish = 2025-09-03
F              11:55:37.45370008 UTC , thread_cap_info = ("ThreadId 33", 3, False)}
F              
| F            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F            = Size { num_rules = 3 , num_strict_rules = 3 , num_top_rules = 0 , num_weak_rules
| F            = 0 , alphabet_size = 2 , total_length = 24} , self = 50 , parent = Nothing
| F            , duration = 1.876822760000 , status = Fail , start = 2025-09-03 11:55:36.68023524
| F            UTC , finish = 2025-09-03 11:55:38.557058 UTC , thread_cap_info = ("ThreadId
| F            53", 0, False)}
| F            
| | F          Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | F          , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | F          = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | F          Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | F          8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | F          = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | F          ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | F          1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | F          = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| | F          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | F          = 24} , self = 48 , parent = Nothing , duration = 0.909709027000 , status
| | F          = Fail , start = 2025-09-03 11:55:36.684770166 UTC , finish = 2025-09-03
| | F          11:55:37.594479193 UTC , thread_cap_info = ("ThreadId 50", 3, False)}
| | F          
| | | F        Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | F        , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | F        = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | F        False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | F        = Size { num_rules = 3 , num_strict_rules = 3 , num_top_rules = 0 , num_weak_rules
| | | F        = 0 , alphabet_size = 2 , total_length = 24} , self = 49 , parent = Nothing
| | | F        , duration = 1.727725661000 , status = Fail , start = 2025-09-03 11:55:36.684785854
| | | F        UTC , finish = 2025-09-03 11:55:38.412511515 UTC , thread_cap_info = ("ThreadId
| | | F        55", 0, False)}
| | | F        
| | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | F      = 12 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | F      = 120} , self = 42 , parent = Nothing , duration = 0.421027725000 , status
| | | | F      = Fail , start = 2025-09-03 11:55:36.703354472 UTC , finish = 2025-09-03
| | | | F      11:55:37.124382197 UTC , thread_cap_info = ("ThreadId 71", 2, False)}
| | | | F      
| | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | F    = 12 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | | F    = 120} , self = 39 , parent = Nothing , duration = 0.331609137000 , status
| | | | | F    = Fail , start = 2025-09-03 11:55:36.73819115 UTC , finish = 2025-09-03
| | | | | F    11:55:37.069800287 UTC , thread_cap_info = ("ThreadId 73", 2, False)}
| | | | | F    
| | | | | | F  Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | | | | F  { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | | | | F  = MSB_First}\n , max_size = Nothing\n , max_height = Just 5\n , initial
| | | | | | F  = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | | | | F  = False}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| | | | | | F  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | F  = 24} , self = 40 , parent = Nothing , duration = 0.170920998000 , status
| | | | | | F  = Fail , start = 2025-09-03 11:55:36.9010216 UTC , finish = 2025-09-03
| | | | | | F  11:55:37.071942598 UTC , thread_cap_info = ("ThreadId 78", 2, False)}
| | | | | | F  
| | | | | F |  
| | | | |   F  
| | | | F      
| | | | F      Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | | F      { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | | F      = MSB_First}\n , max_size = Nothing\n , max_height = Just 6\n , initial
| | | | F      = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | | F      = False}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| | | | F      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | F      = 24} , self = 46 , parent = Nothing , duration = 0.142378938000 , status
| | | | F      = Fail , start = 2025-09-03 11:55:37.258002844 UTC , finish = 2025-09-03
| | | | F      11:55:37.400381782 UTC , thread_cap_info = ("ThreadId 84", 2, False)}
| | | | F      
| | | | F      
F | | |        
  | F |        
  |   F        
  F            
F              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F              = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
F              = 4 , total_length = 48} , self = 69 , parent = Nothing , duration = 0.489876298000
F              , status = Fail , start = 2025-09-03 11:55:38.597643913 UTC , finish =
F              2025-09-03 11:55:39.087520211 UTC , thread_cap_info = ("ThreadId 103",
F              0, False)}
F              
| F            Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| F            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| F            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| F            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| F            , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| F            = 4 , total_length = 48} , self = 74 , parent = Nothing , duration = 1.448561308000
| F            , status = Fail , start = 2025-09-03 11:55:38.643717216 UTC , finish =
| F            2025-09-03 11:55:40.092278524 UTC , thread_cap_info = ("ThreadId 108",
| F            0, False)}
| F            
| | F          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F          = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | F          = 4 , total_length = 48} , self = 68 , parent = Nothing , duration = 0.329323391000
| | F          , status = Fail , start = 2025-09-03 11:55:38.727707621 UTC , finish =
| | F          2025-09-03 11:55:39.057031012 UTC , thread_cap_info = ("ThreadId 109",
| | F          0, False)}
| | F          
| | | F        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | F        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | F        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | F        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | F        , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | F        = 4 , total_length = 48} , self = 70 , parent = Nothing , duration = 0.745607734000
| | | F        , status = Fail , start = 2025-09-03 11:55:38.770002934 UTC , finish =
| | | F        2025-09-03 11:55:39.515610668 UTC , thread_cap_info = ("ThreadId 110",
| | | F        0, False)}
| | | F        
| | F |        
| | F |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | F |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | F |        , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | F |        = 4 , total_length = 48} , self = 71 , parent = Nothing , duration = 0.834162370000
| | F |        , status = Fail , start = 2025-09-03 11:55:39.061387929 UTC , finish =
| | F |        2025-09-03 11:55:39.895550299 UTC , thread_cap_info = ("ThreadId 115",
| | F |        0, False)}
| | F |        
F | | |        
F | | |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
F | | |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F | | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F | | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F | | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F | | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
F | | |        , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
F | | |        = 4 , total_length = 48} , self = 76 , parent = Nothing , duration = 1.024199099000
F | | |        , status = Fail , start = 2025-09-03 11:55:39.105882499 UTC , finish =
F | | |        2025-09-03 11:55:40.130081598 UTC , thread_cap_info = ("ThreadId 116",
F | | |        0, False)}
F | | |        
| | | F        
| | | S        Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | S        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S        = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | S        = 4 , total_length = 48} , self = 72 , parent = Nothing , duration = 0.519038318000
| | | S        , status = Success , start = 2025-09-03 11:55:39.515652958 UTC , finish
| | | S        = 2025-09-03 11:55:40.034691276 UTC , thread_cap_info = ("ThreadId 119",
| | | S        0, False)}
| | | S        
| | F |        
| | E |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | E |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | E |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | E |        , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | E |        , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | E |        = 4 , total_length = 48} , self = 75 , parent = Nothing , duration = 0.220602609000
| | E |        , status = Except "AsyncCancelled" , start = 2025-09-03 11:55:39.901054453
| | E |        UTC , finish = 2025-09-03 11:55:40.121657062 UTC , thread_cap_info = ("ThreadId
| | E |        121", 0, False)}
| | E |        
| | | S        
| F |          
|   E          
| S            Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| S            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S            = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| S            = 4 , total_length = 48} , self = 81 , parent = Nothing , duration = 0.540604931000
| S            , status = Success , start = 2025-09-03 11:55:40.121702287 UTC , finish
| S            = 2025-09-03 11:55:40.662307218 UTC , thread_cap_info = ("ThreadId 123",
| S            0, False)}
| S            
F |            
E |            Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E |            = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E |            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E |            , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E |            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E |            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
E |            , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
E |            = 4 , total_length = 48} , self = 83 , parent = Nothing , duration = 0.580391278000
E |            , status = Except "AsyncCancelled" , start = 2025-09-03 11:55:40.181221978
E |            UTC , finish = 2025-09-03 11:55:40.761613256 UTC , thread_cap_info = ("ThreadId
E |            125", 0, False)}
E |            
| | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F          = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | F          = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size = 3 , total_length
| | F          = 32} , self = 84 , parent = Nothing , duration = 0.361337715000 , status
| | F          = Fail , start = 2025-09-03 11:55:40.401082668 UTC , finish = 2025-09-03
| | F          11:55:40.762420383 UTC , thread_cap_info = ("ThreadId 129", 0, False)}
| | F          
| | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | F        = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size = 3 , total_length
| | | F        = 32} , self = 86 , parent = Nothing , duration = 0.374469741000 , status
| | | F        = Fail , start = 2025-09-03 11:55:40.408415991 UTC , finish = 2025-09-03
| | | F        11:55:40.782885732 UTC , thread_cap_info = ("ThreadId 130", 0, False)}
| | | F        
| S | |        
E   | |        
    F |        
      F        
