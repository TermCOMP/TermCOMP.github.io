last 4028 length 24638
CNF 4028 vars 24638 clauses
last 5847 length 28837
CNF 5847 vars 28837 clauses
last 1413 length 6814
CNF 1413 vars 6814 clauses
last 1413 length 6814
last 1961 length 8474
CNF 1413 vars 6814 clauses
CNF 1961 vars 8474 clauses
last 1961 length 8474
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2798, clauses: 10659
CNF 1961 vars 8474 clauses
last 2798 length 10659
CNF 2798 vars 10659 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2798, clauses: 10659, status: Satisfied, time: 0.068265968s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2798, clauses: 10659
last 2798 length 10659
CNF 2798 vars 10659 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8204, clauses: 34281
last 8204 length 34281
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2798, clauses: 10659, status: Satisfied, time: 0.194582196s
CNF 8204 vars 34281 clauses
last 1126 length 5622
CNF 1126 vars 5622 clauses
last 1307 length 5815
last 1126 length 5622
last 1307 length 5815
CNF 1307 vars 5815 clauses
CNF 1307 vars 5815 clauses
CNF 1126 vars 5622 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1861, clauses: 6817
last 1861 length 6817
CNF 1861 vars 6817 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1861, clauses: 6817
last 1861 length 6817
CNF 1861 vars 6817 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1861, clauses: 6817, status: Unsatisfied, time: 0.094903752s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1861, clauses: 6817, status: Unsatisfied, time: 0.09459614s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6815, clauses: 28523
last 6815 length 28523
CNF 6815 vars 28523 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6815, clauses: 28523
last 6815 length 28523
CNF 6815 vars 28523 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4156, clauses: 17056
last 4156 length 17056
CNF 4156 vars 17056 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4156, clauses: 17056
last 4156 length 17056
CNF 4156 vars 17056 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6815, clauses: 28523, status: Unsatisfied, time: 0.262435983s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3089, clauses: 11912
last 3089 length 11912
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6815, clauses: 28523, status: Unsatisfied, time: 0.346955298s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4156, clauses: 17056, status: Unsatisfied, time: 0.200240762s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4156, clauses: 17056, status: Unsatisfied, time: 0.225770947s
CNF 3089 vars 11912 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3089, clauses: 11912
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3089, clauses: 11912, status: Unsatisfied, time: 0.377738627s
last 3089 length 11912
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11989, clauses: 51206
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11989, clauses: 51206
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5789, clauses: 22124
CNF 3089 vars 11912 clauses
last 11989 length 51206
last 11989 length 51206
last 5789 length 22124
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3089, clauses: 11912, status: Unsatisfied, time: 0.858381931s
CNF 11989 vars 51206 clauses
CNF 11989 vars 51206 clauses
CNF 5789 vars 22124 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5789, clauses: 22124
last 5789 length 22124
CNF 5789 vars 22124 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5789, clauses: 22124, status: Unsatisfied, time: 1.058350064s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5789, clauses: 22124, status: Unsatisfied, time: 1.852853243s
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14853, clauses: 69755
last 14853 length 69755
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14853, clauses: 69755
last 14853 length 69755
CNF 14853 vars 69755 clauses
CNF 14853 vars 69755 clauses
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14853, clauses: 69755, status: Satisfied, time: 0.692649385s
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14853, clauses: 69755, status: Satisfied, time: 0.983430869s
**************************************************
summary
**************************************************
SRS with 3 rules on 2 letters       mirror
SRS with 3 rules on 2 letters       context
SRS with 4 rules on 2 letters       mirror
SRS with 4 rules on 2 letters       DP
SRS with 5 strict rules and 4 weak rules on 4 letters       EDG
SRS with 5 strict rules and 4 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 4 strict rules and 4 weak rules on 4 letters       weights
SRS with 1 strict rules and 4 weak rules on 3 letters       EDG
SRS with 1 strict rules and 4 weak rules on 3 letters       Matrix   { monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 4 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a, a] -> [b, b, b] {- Input 0 -}
  [b, a, a, b] -> [] {- Input 1 -}
  [b, a, a, b] -> [b, a, a, a, b] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a, a] -> [b, b, b] {- Mirror (Input 0) -}
  [b, a, a, b] -> [] {- Mirror (Input 1) -}
  [b, a, a, b] -> [b, a, a, a, b] {- Mirror (Input 2) -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, a, a] -> [b, b, b] {- Mirror (Input 0) -}
  [a, b, a, a, b] -> [a] {- Mirror (Input 1) -}
  [b, b, a, a, b] -> [b] {- Mirror (Input 1) -}
  [b, a, a, b] -> [b, a, a, a, b] {- Mirror (Input 2) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a, a] -> [b, b, b] {- Input 0 -}
  [b, a, a, b, a] -> [a] {- Input 1 -}
  [b, a, a, b, b] -> [b] {- Input 1 -}
  [b, a, a, b] -> [b, a, a, a, b] {- Input 2 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a, a] ->= [b, b, b] {- DP Nontop (Input 0) -}
  [b, a, a, b, a] ->= [a] {- DP Nontop (Input 1) -}
  [b, a, a, b, b] ->= [b] {- DP Nontop (Input 1) -}
  [b, a, a, b] ->= [b, a, a, a, b] {- DP Nontop (Input 2) -}
  [a#, a, a] |-> [b#] {- DP (Top 2) (Input 0) -}
  [a#, a, a] |-> [b#, b] {- DP (Top 1) (Input 0) -}
  [a#, a, a] |-> [b#, b, b] {- DP (Top 0) (Input 0) -}
  [b#, a, a, b] |-> [a#, a, a, b] {- DP (Top 1) (Input 2) -}
  [b#, a, a, b] |-> [b#, a, a, a, b] {- DP (Top 0) (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a, a] |-> [b#] {- DP (Top 2) (Input 0) -}
  [b#, a, a, b] |-> [a#, a, a, b] {- DP (Top 1) (Input 2) -}
  [a#, a, a] |-> [b#, b] {- DP (Top 1) (Input 0) -}
  [b#, a, a, b] |-> [b#, a, a, a, b] {- DP (Top 0) (Input 2) -}
  [a#, a, a] |-> [b#, b, b] {- DP (Top 0) (Input 0) -}
  [a, a, a] ->= [b, b, b] {- DP Nontop (Input 0) -}
  [b, a, a, b, a] ->= [a] {- DP Nontop (Input 1) -}
  [b, a, a, b, b] ->= [b] {- DP Nontop (Input 1) -}
  [b, a, a, b] ->= [b, a, a, a, b] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / 0A  0A 3A - \
        | 0A  0A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( b
  , Wk  / 0A  0A  3A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( a#
  , Wk  / 1A 1A 1A - \
        | 1A 1A 1A - |
        | 1A 1A 1A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 1A 1A 4A - \
        | 1A 1A 4A - |
        | 1A 1A 4A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [a#, a, a] |-> [b#] {- DP (Top 2) (Input 0) -}
  [a#, a, a] |-> [b#, b] {- DP (Top 1) (Input 0) -}
  [b#, a, a, b] |-> [b#, a, a, a, b] {- DP (Top 0) (Input 2) -}
  [a#, a, a] |-> [b#, b, b] {- DP (Top 0) (Input 0) -}
  [a, a, a] ->= [b, b, b] {- DP Nontop (Input 0) -}
  [b, a, a, b, a] ->= [a] {- DP Nontop (Input 1) -}
  [b, a, a, b, b] ->= [b] {- DP Nontop (Input 1) -}
  [b, a, a, b] ->= [b, a, a, a, b] {- DP Nontop (Input 2) -}
reason
  (a, 0/1)
  (b, 0/1)
  (a#, 1/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [b#, a, a, b] |-> [b#, a, a, a, b] {- DP (Top 0) (Input 2) -}
  [a, a, a] ->= [b, b, b] {- DP Nontop (Input 0) -}
  [b, a, a, b, a] ->= [a] {- DP Nontop (Input 1) -}
  [b, a, a, b, b] ->= [b] {- DP Nontop (Input 1) -}
  [b, a, a, b] ->= [b, a, a, a, b] {- DP Nontop (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, a, a, b] |-> [b#, a, a, a, b] {- DP (Top 0) (Input 2) -}
  [a, a, a] ->= [b, b, b] {- DP Nontop (Input 0) -}
  [b, a, a, b, a] ->= [a] {- DP Nontop (Input 1) -}
  [b, a, a, b, b] ->= [b] {- DP Nontop (Input 1) -}
  [b, a, a, b] ->= [b, a, a, a, b] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / -  -  0A 1A 0A \
        | -  0A 0A 0A -  |
        | 0A 0A -  -  -  |
        | 0A -  0A -  0A |
        \ -  -  -  -  0A / )
  ( b
  , Wk  / - -  0A - 0A \
        | - 0A 0A - -  |
        | - -  0A - -  |
        | - 0A 1A - 1A |
        \ - -  -  - 0A / )
  ( b#
  , Wk  / - - 1A - 2A \
        | - - -  - -  |
        | - - -  - -  |
        | - - -  - -  |
        \ - - -  - 0A / )
   property Termination
has value Just True
for SRS
  [a, a, a] ->= [b, b, b] {- DP Nontop (Input 0) -}
  [b, a, a, b, a] ->= [a] {- DP Nontop (Input 1) -}
  [b, a, a, b, b] ->= [b] {- DP Nontop (Input 1) -}
  [b, a, a, b] ->= [b, a, a, a, b] {- DP Nontop (Input 2) -}
reason
  EDG

**************************************************
skeleton: \Mirror(3,2)\Context\Mirror(4,2)\Deepee\EDG(5/4,4)\Matrix{\Arctic}{3}(4/4,4)\Weight\EDG(1/4,3)\Matrix{\Arctic}{5}(0/4,2)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 2
  max duration 1.566483843000
  min duration 1.563330697000
  total durat. 3.129814540000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 50
    , parent = Nothing
    , duration = 1.563330697000
    , status = Fail
    , start = 2025-09-03 10:51:49.409000375 UTC
    , finish = 2025-09-03 10:51:50.972331072 UTC
    , thread_cap_info = ("ThreadId 48", 3, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 49
    , parent = Nothing
    , duration = 1.566483843000
    , status = Fail
    , start = 2025-09-03 10:51:49.3936803 UTC
    , finish = 2025-09-03 10:51:50.960164143 UTC
    , thread_cap_info = ("ThreadId 30", 3, False)}
Success : "Matrix\n { monotone = Weak\n , domain = Arctic\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 2.409005242000
  min duration 2.368385967000
  total durat. 4.777391209000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Arctic\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 5\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 4
      , alphabet_size = 3
      , total_length = 36}
    , self = 96
    , parent = Nothing
    , duration = 2.368385967000
    , status = Success
    , start = 2025-09-03 10:51:54.752966432 UTC
    , finish = 2025-09-03 10:51:57.121352399 UTC
    , thread_cap_info = ("ThreadId 154", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Arctic\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 5\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 4
      , alphabet_size = 3
      , total_length = 36}
    , self = 101
    , parent = Nothing
    , duration = 2.409005242000
    , status = Success
    , start = 2025-09-03 10:51:54.874494849 UTC
    , finish = 2025-09-03 10:51:57.283500091 UTC
    , thread_cap_info = ("ThreadId 155", 3, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 5.123737207000
  min duration 5.123737207000
  total durat. 5.123737207000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 4
      , alphabet_size = 3
      , total_length = 36}
    , self = 98
    , parent = Nothing
    , duration = 5.123737207000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:51:52.069836451 UTC
    , finish = 2025-09-03 10:51:57.193573658 UTC
    , thread_cap_info = ("ThreadId 146", 3, False)}
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.439950121000
  min duration 0.751213392000
  total durat. 2.191163513000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 4
      , alphabet_size = 3
      , total_length = 36}
    , self = 93
    , parent = Nothing
    , duration = 1.439950121000
    , status = Fail
    , start = 2025-09-03 10:51:52.027772735 UTC
    , finish = 2025-09-03 10:51:53.467722856 UTC
    , thread_cap_info = ("ThreadId 144", 3, False)}
Fail : "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 2.151789341000
  min duration 1.246220377000
  total durat. 3.398009718000
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 4
      , alphabet_size = 3
      , total_length = 36}
    , self = 94
    , parent = Nothing
    , duration = 1.246220377000
    , status = Fail
    , start = 2025-09-03 10:51:53.488604719 UTC
    , finish = 2025-09-03 10:51:54.734825096 UTC
    , thread_cap_info = ("ThreadId 152", 3, False)}
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 4
      , alphabet_size = 3
      , total_length = 36}
    , self = 95
    , parent = Nothing
    , duration = 2.151789341000
    , status = Fail
    , start = 2025-09-03 10:51:52.668852789 UTC
    , finish = 2025-09-03 10:51:54.82064213 UTC
    , thread_cap_info = ("ThreadId 147", 3, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 7.860012487000
  min duration 7.860012487000
  total durat. 7.860012487000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 103
    , parent = Nothing
    , duration = 7.860012487000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:51:49.447715369 UTC
    , finish = 2025-09-03 10:51:57.307727856 UTC
    , thread_cap_info = ("ThreadId 66", 0, False)}
**************************************************
F            Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F            , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F            = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F            , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F            = False}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F            = 19} , self = 43 , parent = Nothing , duration = 0.281429595000 , status
F            = Fail , start = 2025-09-03 10:51:49.393654736 UTC , finish = 2025-09-03
F            10:51:49.675084331 UTC , thread_cap_info = ("ThreadId 22", 0, False)}
F            
| F          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F          = Size { num_rules = 3 , num_strict_rules = 3 , num_top_rules = 0 , num_weak_rules
| F          = 0 , alphabet_size = 2 , total_length = 19} , self = 49 , parent = Nothing
| F          , duration = 1.566483843000 , status = Fail , start = 2025-09-03 10:51:49.3936803
| F          UTC , finish = 2025-09-03 10:51:50.960164143 UTC , thread_cap_info = ("ThreadId
| F          30", 3, False)}
| F          
| | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F        = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | F        = 12 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | F        = 100} , self = 40 , parent = Nothing , duration = 0.232532528000 , status
| | F        = Fail , start = 2025-09-03 10:51:49.402001099 UTC , finish = 2025-09-03
| | F        10:51:49.634533627 UTC , thread_cap_info = ("ThreadId 43", 2, False)}
| | F        
| | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | F      = 12 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | F      = 100} , self = 38 , parent = Nothing , duration = 0.187763476000 , status
| | | F      = Fail , start = 2025-09-03 10:51:49.402010317 UTC , finish = 2025-09-03
| | | F      10:51:49.589773793 UTC , thread_cap_info = ("ThreadId 45", 2, False)}
| | | F      
| | | | F    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | F    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | F    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | F    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | F    = Size { num_rules = 3 , num_strict_rules = 3 , num_top_rules = 0 , num_weak_rules
| | | | F    = 0 , alphabet_size = 2 , total_length = 19} , self = 50 , parent = Nothing
| | | | F    , duration = 1.563330697000 , status = Fail , start = 2025-09-03 10:51:49.409000375
| | | | F    UTC , finish = 2025-09-03 10:51:50.972331072 UTC , thread_cap_info = ("ThreadId
| | | | F    48", 3, False)}
| | | | F    
| | | | | E  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | E  , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | E  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | E  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | E  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | E  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | E  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | E  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | E  = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| | | | | E  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | E  = 19} , self = 103 , parent = Nothing , duration = 7.860012487000 , status
| | | | | E  = Except "AsyncCancelled" , start = 2025-09-03 10:51:49.447715369 UTC ,
| | | | | E  finish = 2025-09-03 10:51:57.307727856 UTC , thread_cap_info = ("ThreadId
| | | | | E  66", 0, False)}
| | | | | E  
| | | F | |  
| | | F | |  Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | F | |  { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | F | |  = MSB_First}\n , max_size = Nothing\n , max_height = Just 6\n , initial
| | | F | |  = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | F | |  = False}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| | | F | |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | F | |  = 19} , self = 45 , parent = Nothing , duration = 0.133792732000 , status
| | | F | |  = Fail , start = 2025-09-03 10:51:49.591826197 UTC , finish = 2025-09-03
| | | F | |  10:51:49.725618929 UTC , thread_cap_info = ("ThreadId 73", 1, False)}
| | | F | |  
| | F | | |  
F |   | | |  
  |   F | |  
F |     | |  Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
F |     | |  { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
F |     | |  = MSB_First}\n , max_size = Nothing\n , max_height = Just 6\n , initial
F |     | |  = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
F |     | |  = False}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F |     | |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F |     | |  = 19} , self = 48 , parent = Nothing , duration = 0.192860670000 , status
F |     | |  = Fail , start = 2025-09-03 10:51:49.727735194 UTC , finish = 2025-09-03
F |     | |  10:51:49.920595864 UTC , thread_cap_info = ("ThreadId 85", 1, False)}
F |     | |  
F |     | |  
  F     | |  
        F |  
F         |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F         |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F         |  = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
F         |  = 5 , num_top_rules = 5 , num_weak_rules = 4 , alphabet_size = 4 , total_length
F         |  = 59} , self = 66 , parent = Nothing , duration = 0.108690788000 , status
F         |  = Fail , start = 2025-09-03 10:51:50.980122513 UTC , finish = 2025-09-03
F         |  10:51:51.088813301 UTC , thread_cap_info = ("ThreadId 98", 3, False)}
F         |  
| S       |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S       |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S       |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S       |  = 9 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 4 , alphabet_size
| S       |  = 4 , total_length = 59} , self = 68 , parent = Nothing , duration = 0.121019443000
| S       |  , status = Success , start = 2025-09-03 10:51:51.032351919 UTC , finish
| S       |  = 2025-09-03 10:51:51.153371362 UTC , thread_cap_info = ("ThreadId 105",
| S       |  3, False)}
| S       |  
| | S     |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S     |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S     |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S     |  = 9 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 4 , alphabet_size
| | S     |  = 4 , total_length = 59} , self = 71 , parent = Nothing , duration = 0.283501691000
| | S     |  , status = Success , start = 2025-09-03 10:51:51.084191234 UTC , finish
| | S     |  = 2025-09-03 10:51:51.367692925 UTC , thread_cap_info = ("ThreadId 108",
| | S     |  3, False)}
| | S     |  
F | |     |  
E | |     |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E | |     |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | |     |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | |     |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | |     |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | |     |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
E | |     |  , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 4 , alphabet_size
E | |     |  = 4 , total_length = 59} , self = 70 , parent = Nothing , duration = 0.272164105000
E | |     |  , status = Except "AsyncCancelled" , start = 2025-09-03 10:51:51.088919503
E | |     |  UTC , finish = 2025-09-03 10:51:51.361083608 UTC , thread_cap_info = ("ThreadId
E | |     |  110", 3, False)}
E | |     |  
| | | E   |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E   |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E   |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | E   |  , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 4 , alphabet_size
| | | E   |  = 4 , total_length = 59} , self = 77 , parent = Nothing , duration = 0.282163701000
| | | E   |  , status = Except "AsyncCancelled" , start = 2025-09-03 10:51:51.107727195
| | | E   |  UTC , finish = 2025-09-03 10:51:51.389890896 UTC , thread_cap_info = ("ThreadId
| | | E   |  111", 3, False)}
| | | E   |  
| S | |   |  
E   | |   |  
    S |   |  
      E   |  
F         |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F         |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F         |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F         |  = 5 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
F         |  = 3 , total_length = 36} , self = 86 , parent = Nothing , duration = 0.119416082000
F         |  , status = Fail , start = 2025-09-03 10:51:51.436329345 UTC , finish =
F         |  2025-09-03 10:51:51.555745427 UTC , thread_cap_info = ("ThreadId 130",
F         |  3, False)}
F         |  
| F       |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F       |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F       |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F       |  = 5 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| F       |  = 3 , total_length = 36} , self = 87 , parent = Nothing , duration = 0.138874250000
| F       |  , status = Fail , start = 2025-09-03 10:51:51.457915049 UTC , finish =
| F       |  2025-09-03 10:51:51.596789299 UTC , thread_cap_info = ("ThreadId 132",
| F       |  3, False)}
| F       |  
| | F     |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | F     |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | F     |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | F     |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F     |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F     |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | F     |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | F     |  = 3 , total_length = 36} , self = 88 , parent = Nothing , duration = 0.397879164000
| | F     |  , status = Fail , start = 2025-09-03 10:51:51.469896482 UTC , finish =
| | F     |  2025-09-03 10:51:51.867775646 UTC , thread_cap_info = ("ThreadId 133",
| | F     |  3, False)}
| | F     |  
| | | F   |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | F   |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | F   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | F   |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | F   |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | | F   |  = 3 , total_length = 36} , self = 89 , parent = Nothing , duration = 0.497687940000
| | | F   |  , status = Fail , start = 2025-09-03 10:51:51.495011903 UTC , finish =
| | | F   |  2025-09-03 10:51:51.992699843 UTC , thread_cap_info = ("ThreadId 134",
| | | F   |  3, False)}
| | | F   |  
F | | |   |  
  F | |   |  
F   | |   |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
F   | |   |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F   | |   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F   | |   |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F   | |   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F   | |   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
F   | |   |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
F   | |   |  = 3 , total_length = 36} , self = 91 , parent = Nothing , duration = 0.410664256000
F   | |   |  , status = Fail , start = 2025-09-03 10:51:51.598621776 UTC , finish =
F   | |   |  2025-09-03 10:51:52.009286032 UTC , thread_cap_info = ("ThreadId 136",
F   | |   |  3, False)}
F   | |   |  
| F | |   |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| F | |   |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F | |   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F | |   |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | |   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | |   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| F | |   |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| F | |   |  = 3 , total_length = 36} , self = 90 , parent = Nothing , duration = 0.350593244000
| F | |   |  , status = Fail , start = 2025-09-03 10:51:51.642257351 UTC , finish =
| F | |   |  2025-09-03 10:51:51.992850595 UTC , thread_cap_info = ("ThreadId 138",
| F | |   |  3, False)}
| F | |   |  
| | F |   |  
| | F |   |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | F |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F |   |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F |   |  = 5 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | F |   |  = 3 , total_length = 36} , self = 92 , parent = Nothing , duration = 0.751213392000
| | F |   |  , status = Fail , start = 2025-09-03 10:51:51.891567431 UTC , finish =
| | F |   |  2025-09-03 10:51:52.642780823 UTC , thread_cap_info = ("ThreadId 142",
| | F |   |  3, False)}
| | F |   |  
| | | F   |  
| F |     |  
F   |     |  
F   |     |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
F   |     |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F   |     |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F   |     |  = 5 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
F   |     |  = 3 , total_length = 36} , self = 93 , parent = Nothing , duration = 1.439950121000
F   |     |  , status = Fail , start = 2025-09-03 10:51:52.027772735 UTC , finish =
F   |     |  2025-09-03 10:51:53.467722856 UTC , thread_cap_info = ("ThreadId 144",
F   |     |  3, False)}
F   |     |  
| E |     |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| E |     |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| E |     |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| E |     |  , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E |     |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E |     |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| E |     |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| E |     |  = 3 , total_length = 36} , self = 98 , parent = Nothing , duration = 5.123737207000
| E |     |  , status = Except "AsyncCancelled" , start = 2025-09-03 10:51:52.069836451
| E |     |  UTC , finish = 2025-09-03 10:51:57.193573658 UTC , thread_cap_info = ("ThreadId
| E |     |  146", 3, False)}
| E |     |  
| | F     |  
| | F     |  Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
| | F     |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F     |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F     |  = 5 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | F     |  = 3 , total_length = 36} , self = 95 , parent = Nothing , duration = 2.151789341000
| | F     |  , status = Fail , start = 2025-09-03 10:51:52.668852789 UTC , finish =
| | F     |  2025-09-03 10:51:54.82064213 UTC , thread_cap_info = ("ThreadId 147", 3,
| | F     |  False)}
| | F     |  
F | |     |  
F | |     |  Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
F | |     |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | |     |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | |     |  = 5 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
F | |     |  = 3 , total_length = 36} , self = 94 , parent = Nothing , duration = 1.246220377000
F | |     |  , status = Fail , start = 2025-09-03 10:51:53.488604719 UTC , finish =
F | |     |  2025-09-03 10:51:54.734825096 UTC , thread_cap_info = ("ThreadId 152",
F | |     |  3, False)}
F | |     |  
F | |     |  
S | |     |  Info { what = "Matrix\n { monotone = Weak\n , domain = Arctic\n , method
S | |     |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
S | |     |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
S | |     |  , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
S | |     |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
S | |     |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
S | |     |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
S | |     |  = 3 , total_length = 36} , self = 96 , parent = Nothing , duration = 2.368385967000
S | |     |  , status = Success , start = 2025-09-03 10:51:54.752966432 UTC , finish
S | |     |  = 2025-09-03 10:51:57.121352399 UTC , thread_cap_info = ("ThreadId 154",
S | |     |  3, False)}
S | |     |  
| | F     |  
| | S     |  Info { what = "Matrix\n { monotone = Weak\n , domain = Arctic\n , method
| | S     |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | S     |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S     |  , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S     |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S     |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | S     |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | S     |  = 3 , total_length = 36} , self = 101 , parent = Nothing , duration = 2.409005242000
| | S     |  , status = Success , start = 2025-09-03 10:51:54.874494849 UTC , finish
| | S     |  = 2025-09-03 10:51:57.283500091 UTC , thread_cap_info = ("ThreadId 155",
| | S     |  3, False)}
| | S     |  
S | |     |  
  E |     |  
    S     |  
          E  
