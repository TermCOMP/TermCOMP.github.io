Input TRS:
    1: B(a(x1)) -> BA(x1)
    2: B(b(x1)) -> B(B(x1))
    3: BA(a(x1)) -> BAA(x1)
    4: BA(b(x1)) -> BA(B(x1))
    5: BAA(a(x1)) -> BAA(A(x1))
    6: BAA(b(x1)) -> BAAB(x1)
    7: BAAB(a(x1)) -> BAABA(x1)
    8: BAAB(b(x1)) -> BAAB(B(x1))
    9: BAABA(a(x1)) -> BAABA(A(x1))
    10: BAABA(b(x1)) -> BAABAB(x1)
    11: BAABAB(a(x1)) -> BAABABA(x1)
    12: BAABAB(b(x1)) -> BAABAB(B(x1))
    13: BAABABA(a(x1)) -> BAABABAA(x1)
    14: BAABABA(b(x1)) -> BAABABA(B(x1))
    15: BAABABAA(x1) -> a(b(a(x1)))
    16: A(a(x1)) -> A(A(x1))
    17: A(b(x1)) -> AB(x1)
    18: AB(a(x1)) -> ABA(x1)
    19: AB(b(x1)) -> AB(B(x1))
    20: ABA(x1) -> b(a(a(b(a(b(a(a(x1))))))))
Number of strict rules: 20
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #B(b(x1)) -> #B(B(x1))
   #2: #B(b(x1)) -> #B(x1)
   #3: #BAA(b(x1)) -> #BAAB(x1)
   #4: #BAABABA(a(x1)) -> #BAABABAA(x1)
   #5: #BAABA(a(x1)) -> #BAABA(A(x1))
   #6: #BAABA(a(x1)) -> #A(x1)
   #7: #BAABAB(a(x1)) -> #BAABABA(x1)
   #8: #BAABAB(b(x1)) -> #BAABAB(B(x1))
   #9: #BAABAB(b(x1)) -> #B(x1)
   #10: #BAABABA(b(x1)) -> #BAABABA(B(x1))
   #11: #BAABABA(b(x1)) -> #B(x1)
   #12: #BAAB(a(x1)) -> #BAABA(x1)
   #13: #BAABA(b(x1)) -> #BAABAB(x1)
   #14: #BAA(a(x1)) -> #BAA(A(x1))
   #15: #BAA(a(x1)) -> #A(x1)
   #16: #A(b(x1)) -> #AB(x1)
   #17: #AB(b(x1)) -> #AB(B(x1))
   #18: #AB(b(x1)) -> #B(x1)
   #19: #A(a(x1)) -> #A(A(x1))
   #20: #A(a(x1)) -> #A(x1)
   #21: #BA(a(x1)) -> #BAA(x1)
   #22: #B(a(x1)) -> #BA(x1)
   #23: #BAAB(b(x1)) -> #BAAB(B(x1))
   #24: #BAAB(b(x1)) -> #B(x1)
   #25: #BA(b(x1)) -> #BA(B(x1))
   #26: #BA(b(x1)) -> #B(x1)
   #27: #AB(a(x1)) -> #ABA(x1)
Number of SCCs: 1, DPs: 23, edges: 51
	SCC { #1..3 #5..9 #11..16 #18..26 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: x1_2; x1_2
  #BA(x1)	weight: (/ 1 2) + x1_2; x1_2
BAABABA(x1)	weight: x1_2; x1_2
  BAAB(x1)	weight: x1_1; x1_1
     b(x1)	weight: (/ 3 4) + x1_1; x1_1
   #B(x1)	weight: (/ 1 2) + x1_1; x1_1
    AB(x1)	weight: (/ 3 4) + x1_1; x1_1
BAABABAA(x1)	weight: x1_2; x1_2
 #ABA(x1)	weight: 0; 0
   BAA(x1)	weight: x1_2; x1_2
#BAABABA(x1)	weight: (/ 1 2) + x1_2; x1_2
     B(x1)	weight: (/ 1 4) + x1_1; x1_1
#BAAB(x1)	weight: (/ 1 2) + x1_1; x1_1
#BAABAB(x1)	weight: (/ 1 2) + x1_1; x1_1
#BAABA(x1)	weight: (/ 1 2) + x1_2; x1_2
     A(x1)	weight: (/ 3 4) + x1_2; x1_2
   #A(x1)	weight: (/ 1 4) + x1_2; x1_2
   ABA(x1)	weight: (/ 3 4) + x1_2; x1_2
#BAABABAA(x1)	weight: 0; 0
BAABAB(x1)	weight: x1_1; x1_1
 BAABA(x1)	weight: x1_2; x1_2
 #BAA(x1)	weight: (/ 1 2) + x1_2; x1_2
  #AB(x1)	weight: x1_1; x1_1
    BA(x1)	weight: x1_2; x1_2
    Usable rules: { 1..20 }
    Removed DPs: #1 #2 #6 #8 #9 #15 #16 #18 #23 #24
Number of SCCs: 2, DPs: 12, edges: 16
	SCC { #20 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     a(x1)	weight: (/ 1 8) + x1
  #BA(x1)	weight: 0
BAABABA(x1)	weight: (/ 11 8) + x1
  BAAB(x1)	weight: (/ 7 8) + x1
     b(x1)	weight: (/ 1 8)
   #B(x1)	weight: 0
    AB(x1)	weight: (/ 1 8)
BAABABAA(x1)	weight: (/ 1 8)
 #ABA(x1)	weight: 0
   BAA(x1)	weight: (/ 5 8) + x1
#BAABABA(x1)	weight: 0
     B(x1)	weight: (/ 1 4) + x1
#BAAB(x1)	weight: 0
#BAABAB(x1)	weight: 0
#BAABA(x1)	weight: 0
     A(x1)	weight: (/ 1 4)
   #A(x1)	weight: x1
   ABA(x1)	weight: (/ 1 8)
#BAABABAA(x1)	weight: 0
BAABAB(x1)	weight: (/ 5 4)
 BAABA(x1)	weight: (/ 9 8)
 #BAA(x1)	weight: 0
  #AB(x1)	weight: 0
    BA(x1)	weight: (/ 1 2)
    Usable rules: { }
    Removed DPs: #20
Number of SCCs: 1, DPs: 11, edges: 15
	SCC { #3 #5 #7 #11..14 #21 #22 #25 #26 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
