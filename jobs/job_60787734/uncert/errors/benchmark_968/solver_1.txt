last 2706 length 11885
CNF 2706 vars 11885 clauses
last 1994 length 8087
CNF 1994 vars 8087 clauses
last 2249 length 9310
last 1662 length 6992
CNF 1662 vars 6992 clauses
CNF 2249 vars 9310 clauses
last 1847 length 8169
last 1613 length 7475
CNF 1847 vars 8169 clauses
CNF 1613 vars 7475 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5209, clauses: 20215
last 5209 length 20215
CNF 5209 vars 20215 clauses
last 4550 length 18931
last 5364 length 23321
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5209, clauses: 20215, status: Satisfied, time: 0.232883136s
CNF 4550 vars 18931 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4450, clauses: 16852
last 4343 length 18227
CNF 5364 vars 23321 clauses
last 5573 length 24145
last 4450 length 16852
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12627, clauses: 52872
last 1104 length 4758
CNF 4343 vars 18227 clauses
last 1256 length 5303
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8452, clauses: 31915
CNF 5573 vars 24145 clauses
CNF 4450 vars 16852 clauses
last 12627 length 52872
CNF 1104 vars 4758 clauses
last 8452 length 31915
CNF 1256 vars 5303 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7411, clauses: 27883
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4450, clauses: 16852, status: Satisfied, time: 0.336365155s
CNF 12627 vars 52872 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3313, clauses: 12331
CNF 8452 vars 31915 clauses
last 7411 length 27883
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10900, clauses: 45683
last 3313 length 12331
last 1421 length 6639
last 1368 length 6200
last 10900 length 45683
CNF 7411 vars 27883 clauses
CNF 3313 vars 12331 clauses
CNF 1368 vars 6200 clauses
CNF 1421 vars 6639 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8452, clauses: 31915, status: Satisfied, time: 0.769062125s
CNF 10900 vars 45683 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7411, clauses: 27883, status: Satisfied, time: 0.240174505s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3313, clauses: 12331, status: Satisfied, time: 0.115434815s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3476, clauses: 12834
last 3476 length 12834
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11517, clauses: 48211
last 11517 length 48211
CNF 3476 vars 12834 clauses
CNF 11517 vars 48211 clauses
last 1167 length 5007
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3476, clauses: 12834, status: Satisfied, time: 0.103928373s
CNF 1167 vars 5007 clauses
last 1260 length 5637
CNF 1260 vars 5637 clauses
last 4550 length 18931
CNF 4550 vars 18931 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3093, clauses: 11414
last 3093 length 11414
CNF 3093 vars 11414 clauses
last 5364 length 23321
last 1134 length 4863
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3093, clauses: 11414, status: Satisfied, time: 0.206009188s
last 1230 length 5349
CNF 5364 vars 23321 clauses
last 3740 length 15523
CNF 1134 vars 4863 clauses
last 4636 length 19526
last 907 length 3801
CNF 1230 vars 5349 clauses
last 1025 length 4316
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8452, clauses: 31915
CNF 3740 vars 15523 clauses
CNF 4636 vars 19526 clauses
CNF 907 vars 3801 clauses
CNF 1025 vars 4316 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3172, clauses: 11593
last 8452 length 31915
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10887, clauses: 45551
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2684, clauses: 9804
last 3172 length 11593
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9638, clauses: 40347
CNF 8452 vars 31915 clauses
last 10887 length 45551
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6923, clauses: 25863
last 2684 length 9804
CNF 3172 vars 11593 clauses
last 9638 length 40347
last 6923 length 25863
CNF 10887 vars 45551 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 32210, clauses: 135911
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8452, clauses: 31915, status: Satisfied, time: 1.103545592s
CNF 2684 vars 9804 clauses
last 32210 length 135911
CNF 6923 vars 25863 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3172, clauses: 11593, status: Satisfied, time: 0.684403686s
CNF 9638 vars 40347 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2684, clauses: 9804, status: Satisfied, time: 0.461532246s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 28200, clauses: 118980
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6923, clauses: 25863, status: Satisfied, time: 0.273209654s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9638, clauses: 40347, status: Satisfied, time: 0.402754866s
last 28200 length 118980
**************************************************
summary
**************************************************
SRS with 6 rules on 3 letters       DP
SRS with 13 strict rules and 6 weak rules on 6 letters       weights
SRS with 9 strict rules and 6 weak rules on 5 letters       EDG
SRS with 9 strict rules and 6 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 4 strict rules and 6 weak rules on 5 letters       EDG
SRS with 4 strict rules and 6 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 3 strict rules and 6 weak rules on 5 letters       EDG
SRS with 3 strict rules and 6 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 6 weak rules on 5 letters       weights
SRS with 0 strict rules and 6 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a] -> [c, b, a, b, a] {- Input 0 -}
  [b, a, b] -> [b] {- Input 1 -}
  [a, a, a] -> [c, c, a] {- Input 2 -}
  [c, c] -> [a, b, c, b, a] {- Input 3 -}
  [a, c, a] -> [c, c, a] {- Input 4 -}
  [c, a, c] -> [a, a, c] {- Input 5 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a] ->= [c, b, a, b, a] {- DP Nontop (Input 0) -}
  [b, a, b] ->= [b] {- DP Nontop (Input 1) -}
  [a, a, a] ->= [c, c, a] {- DP Nontop (Input 2) -}
  [c, c] ->= [a, b, c, b, a] {- DP Nontop (Input 3) -}
  [a, c, a] ->= [c, c, a] {- DP Nontop (Input 4) -}
  [c, a, c] ->= [a, a, c] {- DP Nontop (Input 5) -}
  [a#, a] |-> [a#, b, a] {- DP (Top 2) (Input 0) -}
  [a#, a] |-> [b#, a] {- DP (Top 3) (Input 0) -}
  [a#, a] |-> [b#, a, b, a] {- DP (Top 1) (Input 0) -}
  [a#, a] |-> [c#, b, a, b, a] {- DP (Top 0) (Input 0) -}
  [a#, a, a] |-> [c#, a] {- DP (Top 1) (Input 2) -}
  [a#, a, a] |-> [c#, c, a] {- DP (Top 0) (Input 2) -}
  [a#, c, a] |-> [c#, c, a] {- DP (Top 0) (Input 4) -}
  [c#, a, c] |-> [a#, a, c] {- DP (Top 0) (Input 5) -}
  [c#, c] |-> [a#] {- DP (Top 4) (Input 3) -}
  [c#, c] |-> [a#, b, c, b, a] {- DP (Top 0) (Input 3) -}
  [c#, c] |-> [b#, a] {- DP (Top 3) (Input 3) -}
  [c#, c] |-> [b#, c, b, a] {- DP (Top 1) (Input 3) -}
  [c#, c] |-> [c#, b, a] {- DP (Top 2) (Input 3) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (b#, 0/1)
  (c#, 1/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [c, b, a, b, a] {- DP Nontop (Input 0) -}
  [b, a, b] ->= [b] {- DP Nontop (Input 1) -}
  [a, a, a] ->= [c, c, a] {- DP Nontop (Input 2) -}
  [c, c] ->= [a, b, c, b, a] {- DP Nontop (Input 3) -}
  [a, c, a] ->= [c, c, a] {- DP Nontop (Input 4) -}
  [c, a, c] ->= [a, a, c] {- DP Nontop (Input 5) -}
  [a#, a] |-> [a#, b, a] {- DP (Top 2) (Input 0) -}
  [a#, a] |-> [c#, b, a, b, a] {- DP (Top 0) (Input 0) -}
  [a#, a, a] |-> [c#, a] {- DP (Top 1) (Input 2) -}
  [a#, a, a] |-> [c#, c, a] {- DP (Top 0) (Input 2) -}
  [a#, c, a] |-> [c#, c, a] {- DP (Top 0) (Input 4) -}
  [c#, a, c] |-> [a#, a, c] {- DP (Top 0) (Input 5) -}
  [c#, c] |-> [a#] {- DP (Top 4) (Input 3) -}
  [c#, c] |-> [a#, b, c, b, a] {- DP (Top 0) (Input 3) -}
  [c#, c] |-> [c#, b, a] {- DP (Top 2) (Input 3) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a] |-> [a#, b, a] {- DP (Top 2) (Input 0) -}
  [a#, a] |-> [c#, b, a, b, a] {- DP (Top 0) (Input 0) -}
  [c#, a, c] |-> [a#, a, c] {- DP (Top 0) (Input 5) -}
  [a#, a, a] |-> [c#, a] {- DP (Top 1) (Input 2) -}
  [c#, c] |-> [a#] {- DP (Top 4) (Input 3) -}
  [a#, a, a] |-> [c#, c, a] {- DP (Top 0) (Input 2) -}
  [c#, c] |-> [a#, b, c, b, a] {- DP (Top 0) (Input 3) -}
  [a#, c, a] |-> [c#, c, a] {- DP (Top 0) (Input 4) -}
  [c#, c] |-> [c#, b, a] {- DP (Top 2) (Input 3) -}
  [a, a] ->= [c, b, a, b, a] {- DP Nontop (Input 0) -}
  [b, a, b] ->= [b] {- DP Nontop (Input 1) -}
  [a, a, a] ->= [c, c, a] {- DP Nontop (Input 2) -}
  [c, c] ->= [a, b, c, b, a] {- DP Nontop (Input 3) -}
  [a, c, a] ->= [c, c, a] {- DP Nontop (Input 4) -}
  [c, a, c] ->= [a, a, c] {- DP Nontop (Input 5) -}
reason
  ( a
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( c
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 6A 6A 9A - \
        | 6A 6A 9A - |
        | 6A 6A 9A - |
        \ -  -  -  - / )
  ( c#
  , Wk  / 7A 8A 9A - \
        | 7A 8A 9A - |
        | 7A 8A 9A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [c#, a, c] |-> [a#, a, c] {- DP (Top 0) (Input 5) -}
  [a#, a, a] |-> [c#, c, a] {- DP (Top 0) (Input 2) -}
  [c#, c] |-> [a#, b, c, b, a] {- DP (Top 0) (Input 3) -}
  [a#, c, a] |-> [c#, c, a] {- DP (Top 0) (Input 4) -}
  [a, a] ->= [c, b, a, b, a] {- DP Nontop (Input 0) -}
  [b, a, b] ->= [b] {- DP Nontop (Input 1) -}
  [a, a, a] ->= [c, c, a] {- DP Nontop (Input 2) -}
  [c, c] ->= [a, b, c, b, a] {- DP Nontop (Input 3) -}
  [a, c, a] ->= [c, c, a] {- DP Nontop (Input 4) -}
  [c, a, c] ->= [a, a, c] {- DP Nontop (Input 5) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [c#, a, c] |-> [a#, a, c] {- DP (Top 0) (Input 5) -}
  [a#, a, a] |-> [c#, c, a] {- DP (Top 0) (Input 2) -}
  [c#, c] |-> [a#, b, c, b, a] {- DP (Top 0) (Input 3) -}
  [a#, c, a] |-> [c#, c, a] {- DP (Top 0) (Input 4) -}
  [a, a] ->= [c, b, a, b, a] {- DP Nontop (Input 0) -}
  [b, a, b] ->= [b] {- DP Nontop (Input 1) -}
  [a, a, a] ->= [c, c, a] {- DP Nontop (Input 2) -}
  [c, c] ->= [a, b, c, b, a] {- DP Nontop (Input 3) -}
  [a, c, a] ->= [c, c, a] {- DP Nontop (Input 4) -}
  [c, a, c] ->= [a, a, c] {- DP Nontop (Input 5) -}
reason
  ( a
  , Wk  / 0A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( c
  , Wk  / 0A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 3A 3A 6A - \
        | 3A 3A 6A - |
        | 3A 3A 6A - |
        \ -  -  -  - / )
  ( c#
  , Wk  / 6A 6A 6A - \
        | 6A 6A 6A - |
        | 6A 6A 6A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [c#, a, c] |-> [a#, a, c] {- DP (Top 0) (Input 5) -}
  [a#, a, a] |-> [c#, c, a] {- DP (Top 0) (Input 2) -}
  [a#, c, a] |-> [c#, c, a] {- DP (Top 0) (Input 4) -}
  [a, a] ->= [c, b, a, b, a] {- DP Nontop (Input 0) -}
  [b, a, b] ->= [b] {- DP Nontop (Input 1) -}
  [a, a, a] ->= [c, c, a] {- DP Nontop (Input 2) -}
  [c, c] ->= [a, b, c, b, a] {- DP Nontop (Input 3) -}
  [a, c, a] ->= [c, c, a] {- DP Nontop (Input 4) -}
  [c, a, c] ->= [a, a, c] {- DP Nontop (Input 5) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [c#, a, c] |-> [a#, a, c] {- DP (Top 0) (Input 5) -}
  [a#, a, a] |-> [c#, c, a] {- DP (Top 0) (Input 2) -}
  [a#, c, a] |-> [c#, c, a] {- DP (Top 0) (Input 4) -}
  [a, a] ->= [c, b, a, b, a] {- DP Nontop (Input 0) -}
  [b, a, b] ->= [b] {- DP Nontop (Input 1) -}
  [a, a, a] ->= [c, c, a] {- DP Nontop (Input 2) -}
  [c, c] ->= [a, b, c, b, a] {- DP Nontop (Input 3) -}
  [a, c, a] ->= [c, c, a] {- DP Nontop (Input 4) -}
  [c, a, c] ->= [a, a, c] {- DP Nontop (Input 5) -}
reason
  ( a
  , Wk  / 0A  0A 3A - \
        | 0A  0A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( b
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( c
  , Wk  / 0A  0A  3A - \
        | 0A  0A  3A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( a#
  , Wk  / 10A 10A 10A - \
        | 10A 10A 10A - |
        | 10A 10A 10A - |
        \ -   -   -   - / )
  ( c#
  , Wk  / 10A 10A 13A - \
        | 10A 10A 13A - |
        | 10A 10A 13A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [a#, a, a] |-> [c#, c, a] {- DP (Top 0) (Input 2) -}
  [a#, c, a] |-> [c#, c, a] {- DP (Top 0) (Input 4) -}
  [a, a] ->= [c, b, a, b, a] {- DP Nontop (Input 0) -}
  [b, a, b] ->= [b] {- DP Nontop (Input 1) -}
  [a, a, a] ->= [c, c, a] {- DP Nontop (Input 2) -}
  [c, c] ->= [a, b, c, b, a] {- DP Nontop (Input 3) -}
  [a, c, a] ->= [c, c, a] {- DP Nontop (Input 4) -}
  [c, a, c] ->= [a, a, c] {- DP Nontop (Input 5) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [c, b, a, b, a] {- DP Nontop (Input 0) -}
  [b, a, b] ->= [b] {- DP Nontop (Input 1) -}
  [a, a, a] ->= [c, c, a] {- DP Nontop (Input 2) -}
  [c, c] ->= [a, b, c, b, a] {- DP Nontop (Input 3) -}
  [a, c, a] ->= [c, c, a] {- DP Nontop (Input 4) -}
  [c, a, c] ->= [a, a, c] {- DP Nontop (Input 5) -}
reason
  EDG

**************************************************
skeleton: (6,3)\Deepee(13/6,6)\Weight\EDG(9/6,5)\Matrix{\Arctic}{3}\EDG(4/6,5)\Matrix{\Arctic}{3}\EDG(3/6,5)\Matrix{\Arctic}{3}(2/6,5)\Weight(0/6,3)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 12
  max duration 1.057768706000
  min duration 0.063897761000
  total durat. 5.064971106000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 20
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 18
      , alphabet_size = 7
      , total_length = 160}
    , self = 156
    , parent = Nothing
    , duration = 1.057768706000
    , status = Fail
    , start = 2025-09-03 13:38:24.396191977 UTC
    , finish = 2025-09-03 13:38:25.453960683 UTC
    , thread_cap_info = ("ThreadId 193", 0, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 12
  max duration 1.042415126000
  min duration 0.076538928000
  total durat. 4.380055404000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 20
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 18
      , alphabet_size = 7
      , total_length = 160}
    , self = 157
    , parent = Nothing
    , duration = 1.042415126000
    , status = Fail
    , start = 2025-09-03 13:38:24.416595696 UTC
    , finish = 2025-09-03 13:38:25.459010822 UTC
    , thread_cap_info = ("ThreadId 194", 0, False)}
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 4
  max duration 0.368574646000
  min duration 0.099288511000
  total durat. 1.155286647000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 9
  max duration 1.501437660000
  min duration 0.362149689000
  total durat. 8.775008799000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 22
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 18
      , alphabet_size = 7
      , total_length = 176}
    , self = 125
    , parent = Nothing
    , duration = 1.000034887000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:38:23.297194684 UTC
    , finish = 2025-09-03 13:38:24.297229571 UTC
    , thread_cap_info = ("ThreadId 159", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 24
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 18
      , alphabet_size = 8
      , total_length = 192}
    , self = 117
    , parent = Nothing
    , duration = 1.188187242000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:38:23.046327605 UTC
    , finish = 2025-09-03 13:38:24.234514847 UTC
    , thread_cap_info = ("ThreadId 152", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 15
      , num_strict_rules = 9
      , num_top_rules = 9
      , num_weak_rules = 6
      , alphabet_size = 5
      , total_length = 86}
    , self = 108
    , parent = Nothing
    , duration = 1.245954819000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:38:22.453891038 UTC
    , finish = 2025-09-03 13:38:23.699845857 UTC
    , thread_cap_info = ("ThreadId 136", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 6
      , alphabet_size = 5
      , total_length = 54}
    , self = 169
    , parent = Nothing
    , duration = 1.442234402000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:38:25.044868357 UTC
    , finish = 2025-09-03 13:38:26.487102759 UTC
    , thread_cap_info = ("ThreadId 223", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 24
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 18
      , alphabet_size = 8
      , total_length = 192}
    , self = 162
    , parent = Nothing
    , duration = 1.501437660000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:38:24.918714723 UTC
    , finish = 2025-09-03 13:38:26.420152383 UTC
    , thread_cap_info = ("ThreadId 219", 0, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 10
  max duration 1.627515396000
  min duration 0.404730042000
  total durat. 10.217289939000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 6
      , alphabet_size = 4
      , total_length = 60}
    , self = 120
    , parent = Nothing
    , duration = 1.009672056000
    , status = Success
    , start = 2025-09-03 13:38:23.245268478 UTC
    , finish = 2025-09-03 13:38:24.254940534 UTC
    , thread_cap_info = ("ThreadId 158", 2, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 22
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 18
      , alphabet_size = 7
      , total_length = 176}
    , self = 118
    , parent = Nothing
    , duration = 1.165413671000
    , status = Success
    , start = 2025-09-03 13:38:23.074012252 UTC
    , finish = 2025-09-03 13:38:24.239425923 UTC
    , thread_cap_info = ("ThreadId 156", 0, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 15
      , num_strict_rules = 9
      , num_top_rules = 9
      , num_weak_rules = 6
      , alphabet_size = 5
      , total_length = 86}
    , self = 106
    , parent = Nothing
    , duration = 1.221167994000
    , status = Success
    , start = 2025-09-03 13:38:22.433888434 UTC
    , finish = 2025-09-03 13:38:23.655056428 UTC
    , thread_cap_info = ("ThreadId 135", 2, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 24
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 18
      , alphabet_size = 8
      , total_length = 192}
    , self = 115
    , parent = Nothing
    , duration = 1.236877959000
    , status = Success
    , start = 2025-09-03 13:38:22.902778197 UTC
    , finish = 2025-09-03 13:38:24.139656156 UTC
    , thread_cap_info = ("ThreadId 144", 0, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 6
      , alphabet_size = 5
      , total_length = 54}
    , self = 167
    , parent = Nothing
    , duration = 1.552735273000
    , status = Success
    , start = 2025-09-03 13:38:24.933949802 UTC
    , finish = 2025-09-03 13:38:26.486685075 UTC
    , thread_cap_info = ("ThreadId 220", 2, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 24
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 18
      , alphabet_size = 8
      , total_length = 192}
    , self = 160
    , parent = Nothing
    , duration = 1.627515396000
    , status = Success
    , start = 2025-09-03 13:38:24.713916105 UTC
    , finish = 2025-09-03 13:38:26.341431501 UTC
    , thread_cap_info = ("ThreadId 208", 0, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 3.726550193000
  min duration 3.726550193000
  total durat. 3.726550193000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 6
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 36}
    , self = 175
    , parent = Nothing
    , duration = 3.726550193000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:38:22.773398025 UTC
    , finish = 2025-09-03 13:38:26.499948218 UTC
    , thread_cap_info = ("ThreadId 142", 2, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 4.542461190000
  min duration 4.542461190000
  total durat. 4.542461190000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 6
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 36}
    , self = 172
    , parent = Nothing
    , duration = 4.542461190000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:38:21.949919062 UTC
    , finish = 2025-09-03 13:38:26.492380252 UTC
    , thread_cap_info = ("ThreadId 73", 3, False)}
**************************************************
F                    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                    , closure = Forward\n , start_strict_only = True\n , max_closure_length
F                    = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                    Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                    8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                    = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                    ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                    1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                    = True})" , input_size = Size { num_rules = 6 , num_strict_rules = 6 ,
F                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F                    = 36} , self = 33 , parent = Nothing , duration = 0.101786791000 , status
F                    = Fail , start = 2025-09-03 13:38:21.845731527 UTC , finish = 2025-09-03
F                    13:38:21.947518318 UTC , thread_cap_info = ("ThreadId 35", 3, False)}
F                    
| F                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| F                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| F                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| F                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| F                  = False}" , input_size = Size { num_rules = 6 , num_strict_rules = 6 ,
| F                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| F                  = 36} , self = 43 , parent = Nothing , duration = 0.190731589000 , status
| F                  = Fail , start = 2025-09-03 13:38:21.845732743 UTC , finish = 2025-09-03
| F                  13:38:22.036464332 UTC , thread_cap_info = ("ThreadId 22", 0, False)}
| F                  
| | F                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | F                , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | F                = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | F                Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | F                8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | F                = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | F                ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | F                1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | F                = True})" , input_size = Size { num_rules = 6 , num_strict_rules = 6 ,
| | F                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | F                = 36} , self = 92 , parent = Nothing , duration = 0.927476005000 , status
| | F                = Fail , start = 2025-09-03 13:38:21.845775209 UTC , finish = 2025-09-03
| | F                13:38:22.773251214 UTC , thread_cap_info = ("ThreadId 37", 1, False)}
| | F                
| | | F              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | F              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | F              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | F              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | F              = Size { num_rules = 6 , num_strict_rules = 6 , num_top_rules = 0 , num_weak_rules
| | | F              = 0 , alphabet_size = 3 , total_length = 36} , self = 59 , parent = Nothing
| | | F              , duration = 0.351591652000 , status = Fail , start = 2025-09-03 13:38:21.845842836
| | | F              UTC , finish = 2025-09-03 13:38:22.197434488 UTC , thread_cap_info = ("ThreadId
| | | F              43", 1, False)}
| | | F              
| | | | F            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | F            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | F            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | F            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | F            = Size { num_rules = 6 , num_strict_rules = 6 , num_top_rules = 0 , num_weak_rules
| | | | F            = 0 , alphabet_size = 3 , total_length = 36} , self = 55 , parent = Nothing
| | | | F            , duration = 0.335831838000 , status = Fail , start = 2025-09-03 13:38:21.845843723
| | | | F            UTC , finish = 2025-09-03 13:38:22.181675561 UTC , thread_cap_info = ("ThreadId
| | | | F            45", 2, False)}
| | | | F            
F | | | |            
E | | | |            Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E | | | |            , closure = Forward\n , start_strict_only = True\n , max_closure_length
E | | | |            = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
E | | | |            , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
E | | | |            max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
E | | | |            [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
E | | | |            string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
E | | | |            , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E | | | |            = True})" , input_size = Size { num_rules = 6 , num_strict_rules = 6 ,
E | | | |            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
E | | | |            = 36} , self = 172 , parent = Nothing , duration = 4.542461190000 , status
E | | | |            = Except "AsyncCancelled" , start = 2025-09-03 13:38:21.949919062 UTC ,
E | | | |            finish = 2025-09-03 13:38:26.492380252 UTC , thread_cap_info = ("ThreadId
E | | | |            73", 3, False)}
E | | | |            
| | | | | F          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | F          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | F          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | F          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | F          = Size { num_rules = 27 , num_strict_rules = 27 , num_top_rules = 0 , num_weak_rules
| | | | | F          = 0 , alphabet_size = 8 , total_length = 216} , self = 76 , parent = Nothing
| | | | | F          , duration = 0.368574646000 , status = Fail , start = 2025-09-03 13:38:22.013953415
| | | | | F          UTC , finish = 2025-09-03 13:38:22.382528061 UTC , thread_cap_info = ("ThreadId
| | | | | F          80", 0, False)}
| | | | | F          
| F | | | |          
|   | | F |          
|   | F   |          
| F |     |          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F |     |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F |     |          = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| F |     |          = 9 , num_top_rules = 9 , num_weak_rules = 6 , alphabet_size = 5 , total_length
| F |     |          = 86} , self = 89 , parent = Nothing , duration = 0.172079265000 , status
| F |     |          = Fail , start = 2025-09-03 13:38:22.257077226 UTC , finish = 2025-09-03
| F |     |          13:38:22.429156491 UTC , thread_cap_info = ("ThreadId 115", 2, False)}
| F |     |          
| | | F   |          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F   |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F   |          = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | | F   |          = 9 , num_top_rules = 9 , num_weak_rules = 6 , alphabet_size = 5 , total_length
| | | F   |          = 86} , self = 88 , parent = Nothing , duration = 0.143864543000 , status
| | | F   |          = Fail , start = 2025-09-03 13:38:22.272330308 UTC , finish = 2025-09-03
| | | F   |          13:38:22.416194851 UTC , thread_cap_info = ("ThreadId 116", 2, False)}
| | | F   |          
| | | | S |          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S |          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S |          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S |          = 21 , num_strict_rules = 15 , num_top_rules = 15 , num_weak_rules = 6
| | | | S |          , alphabet_size = 5 , total_length = 111} , self = 93 , parent = Nothing
| | | | S |          , duration = 0.588791199000 , status = Success , start = 2025-09-03 13:38:22.294847704
| | | | S |          UTC , finish = 2025-09-03 13:38:22.883638903 UTC , thread_cap_info = ("ThreadId
| | | | S |          117", 2, False)}
| | | | S |          
| | | | | | E        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 21
| | | | | | E        , num_strict_rules = 15 , num_top_rules = 15 , num_weak_rules = 6 , alphabet_size
| | | | | | E        = 5 , total_length = 111} , self = 96 , parent = Nothing , duration = 0.591167208000
| | | | | | E        , status = Except "AsyncCancelled" , start = 2025-09-03 13:38:22.341471113
| | | | | | E        UTC , finish = 2025-09-03 13:38:22.932638321 UTC , thread_cap_info = ("ThreadId
| | | | | | E        118", 2, False)}
| | | | | | E        
| | | | | F |        
| | | | | F |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F |        = False\n , verbose = False}" , input_size = Size { num_rules = 24 , num_strict_rules
| | | | | F |        = 6 , num_top_rules = 6 , num_weak_rules = 18 , alphabet_size = 8 , total_length
| | | | | F |        = 192} , self = 101 , parent = Nothing , duration = 0.647237991000 , status
| | | | | F |        = Fail , start = 2025-09-03 13:38:22.398968884 UTC , finish = 2025-09-03
| | | | | F |        13:38:23.046206875 UTC , thread_cap_info = ("ThreadId 132", 0, False)}
| | | | | F |        
| | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 24 , num_strict_rules
| | | | | | | F      = 6 , num_top_rules = 6 , num_weak_rules = 18 , alphabet_size = 8 , total_length
| | | | | | | F      = 192} , self = 95 , parent = Nothing , duration = 0.486558276000 , status
| | | | | | | F      = Fail , start = 2025-09-03 13:38:22.41618591 UTC , finish = 2025-09-03
| | | | | | | F      13:38:22.902744186 UTC , thread_cap_info = ("ThreadId 133", 0, False)}
| | | | | | | F      
| | | F | | | |      
| F |   | | | |      
| S |   | | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S |   | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S |   | | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S |   | | | |      = 15 , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 6 ,
| S |   | | | |      alphabet_size = 5 , total_length = 86} , self = 106 , parent = Nothing
| S |   | | | |      , duration = 1.221167994000 , status = Success , start = 2025-09-03 13:38:22.433888434
| S |   | | | |      UTC , finish = 2025-09-03 13:38:23.655056428 UTC , thread_cap_info = ("ThreadId
| S |   | | | |      135", 2, False)}
| S |   | | | |      
| | | E | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E | | | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E | | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 15
| | | E | | | |      , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 6 , alphabet_size
| | | E | | | |      = 5 , total_length = 86} , self = 108 , parent = Nothing , duration = 1.245954819000
| | | E | | | |      , status = Except "AsyncCancelled" , start = 2025-09-03 13:38:22.453891038
| | | E | | | |      UTC , finish = 2025-09-03 13:38:23.699845857 UTC , thread_cap_info = ("ThreadId
| | | E | | | |      136", 2, False)}
| | | E | | | |      
| | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
| | | | | | | | F    = 4 , num_top_rules = 4 , num_weak_rules = 18 , alphabet_size = 7 , total_length
| | | | | | | | F    = 176} , self = 104 , parent = Nothing , duration = 0.683778748000 , status
| | | | | | | | F    = Fail , start = 2025-09-03 13:38:22.573898514 UTC , finish = 2025-09-03
| | | | | | | | F    13:38:23.257677262 UTC , thread_cap_info = ("ThreadId 138", 0, False)}
| | | | | | | | F    
| | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
| | | | | | | | | F  = 4 , num_top_rules = 4 , num_weak_rules = 18 , alphabet_size = 7 , total_length
| | | | | | | | | F  = 176} , self = 102 , parent = Nothing , duration = 0.479889369000 , status
| | | | | | | | | F  = Fail , start = 2025-09-03 13:38:22.594070137 UTC , finish = 2025-09-03
| | | | | | | | | F  13:38:23.073959506 UTC , thread_cap_info = ("ThreadId 139", 0, False)}
| | | | | | | | | F  
| | F | | | | | | |  
| | E | | | | | | |  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | E | | | | | | |  , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | E | | | | | | |  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | E | | | | | | |  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | E | | | | | | |  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | E | | | | | | |  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | E | | | | | | |  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | E | | | | | | |  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | E | | | | | | |  = True})" , input_size = Size { num_rules = 6 , num_strict_rules = 6 ,
| | E | | | | | | |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | E | | | | | | |  = 36} , self = 175 , parent = Nothing , duration = 3.726550193000 , status
| | E | | | | | | |  = Except "AsyncCancelled" , start = 2025-09-03 13:38:22.773398025 UTC ,
| | E | | | | | | |  finish = 2025-09-03 13:38:26.499948218 UTC , thread_cap_info = ("ThreadId
| | E | | | | | | |  142", 2, False)}
| | E | | | | | | |  
| | | | S | | | | |  
| | | |   | | F | |  
| | | | S | |   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S | |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S | |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S | |   | |  = 24 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 18 ,
| | | | S | |   | |  alphabet_size = 8 , total_length = 192} , self = 115 , parent = Nothing
| | | | S | |   | |  , duration = 1.236877959000 , status = Success , start = 2025-09-03 13:38:22.902778197
| | | | S | |   | |  UTC , finish = 2025-09-03 13:38:24.139656156 UTC , thread_cap_info = ("ThreadId
| | | | S | |   | |  144", 0, False)}
| | | | S | |   | |  
| | | | | | E   | |  
| | | | | | F   | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | | F   | |  = 4 , num_top_rules = 4 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | F   | |  = 60} , self = 103 , parent = Nothing , duration = 0.310300419000 , status
| | | | | | F   | |  = Fail , start = 2025-09-03 13:38:22.934918516 UTC , finish = 2025-09-03
| | | | | | F   | |  13:38:23.245218935 UTC , thread_cap_info = ("ThreadId 149", 2, False)}
| | | | | | F   | |  
| | | | | | | F | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F | |  = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | | | F | |  = 4 , num_top_rules = 4 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | | F | |  = 60} , self = 105 , parent = Nothing , duration = 0.501651230000 , status
| | | | | | | F | |  = Fail , start = 2025-09-03 13:38:22.953608883 UTC , finish = 2025-09-03
| | | | | | | F | |  13:38:23.455260113 UTC , thread_cap_info = ("ThreadId 148", 2, False)}
| | | | | | | F | |  
| | | | | F | | | |  
| | | | | E | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 24
| | | | | E | | | |  , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 18 , alphabet_size
| | | | | E | | | |  = 8 , total_length = 192} , self = 117 , parent = Nothing , duration =
| | | | | E | | | |  1.188187242000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | E | | | |  13:38:23.046327605 UTC , finish = 2025-09-03 13:38:24.234514847 UTC , thread_cap_info
| | | | | E | | | |  = ("ThreadId 152", 0, False)}
| | | | | E | | | |  
| | | | | | | | | F  
| | | | | | | | | S  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | | S  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | | S  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | | S  = 22 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 18 ,
| | | | | | | | | S  alphabet_size = 7 , total_length = 176} , self = 118 , parent = Nothing
| | | | | | | | | S  , duration = 1.165413671000 , status = Success , start = 2025-09-03 13:38:23.074012252
| | | | | | | | | S  UTC , finish = 2025-09-03 13:38:24.239425923 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | S  156", 0, False)}
| | | | | | | | | S  
| | | | | | F | | |  
| | | | | | S | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | S | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | S | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | S | | |  = 10 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 6 ,
| | | | | | S | | |  alphabet_size = 4 , total_length = 60} , self = 120 , parent = Nothing
| | | | | | S | | |  , duration = 1.009672056000 , status = Success , start = 2025-09-03 13:38:23.245268478
| | | | | | S | | |  UTC , finish = 2025-09-03 13:38:24.254940534 UTC , thread_cap_info = ("ThreadId
| | | | | | S | | |  158", 2, False)}
| | | | | | S | | |  
| | | | | | | | F |  
| | | | | | | | E |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | E |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | E |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | E |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | E |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | E |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 22
| | | | | | | | E |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 18 , alphabet_size
| | | | | | | | E |  = 7 , total_length = 176} , self = 125 , parent = Nothing , duration =
| | | | | | | | E |  1.000034887000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | | | | E |  13:38:23.297194684 UTC , finish = 2025-09-03 13:38:24.297229571 UTC , thread_cap_info
| | | | | | | | E |  = ("ThreadId 159", 0, False)}
| | | | | | | | E |  
| | | | | | | F | |  
| | | | | | | E | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | | | | E | |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 6 , alphabet_size
| | | | | | | E | |  = 4 , total_length = 60} , self = 128 , parent = Nothing , duration = 0.854732717000
| | | | | | | E | |  , status = Except "AsyncCancelled" , start = 2025-09-03 13:38:23.455304416
| | | | | | | E | |  UTC , finish = 2025-09-03 13:38:24.310037133 UTC , thread_cap_info = ("ThreadId
| | | | | | | E | |  160", 2, False)}
| | | | | | | E | |  
| S | | | | | | | |  
|   | E | | | | | |  
| F |   | | | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F |   | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F |   | | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| F |   | | | | | |  = 4 , num_top_rules = 4 , num_weak_rules = 6 , alphabet_size = 5 , total_length
| F |   | | | | | |  = 61} , self = 114 , parent = Nothing , duration = 0.176292158000 , status
| F |   | | | | | |  = Fail , start = 2025-09-03 13:38:23.700329876 UTC , finish = 2025-09-03
| F |   | | | | | |  13:38:23.876622034 UTC , thread_cap_info = ("ThreadId 167", 2, False)}
| F |   | | | | | |  
| | | F | | | | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F | | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | F | | | | | |  = 4 , num_top_rules = 4 , num_weak_rules = 6 , alphabet_size = 5 , total_length
| | | F | | | | | |  = 61} , self = 113 , parent = Nothing , duration = 0.144048198000 , status
| | | F | | | | | |  = Fail , start = 2025-09-03 13:38:23.715474243 UTC , finish = 2025-09-03
| | | F | | | | | |  13:38:23.859522441 UTC , thread_cap_info = ("ThreadId 166", 2, False)}
| | | F | | | | | |  
| | | F | | | | | |  
| F |   | | | | | |  
| S |   | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S |   | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S |   | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S |   | | | | | |  = 10 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 6 ,
| S |   | | | | | |  alphabet_size = 5 , total_length = 61} , self = 136 , parent = Nothing
| S |   | | | | | |  , duration = 0.500117886000 , status = Success , start = 2025-09-03 13:38:23.88179758
| S |   | | | | | |  UTC , finish = 2025-09-03 13:38:24.381915466 UTC , thread_cap_info = ("ThreadId
| S |   | | | | | |  173", 2, False)}
| S |   | | | | | |  
| | | E | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | E | | | | | |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 6 , alphabet_size
| | | E | | | | | |  = 5 , total_length = 61} , self = 140 , parent = Nothing , duration = 0.589110175000
| | | E | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 13:38:23.895209308
| | | E | | | | | |  UTC , finish = 2025-09-03 13:38:24.484319483 UTC , thread_cap_info = ("ThreadId
| | | E | | | | | |  174", 2, False)}
| | | E | | | | | |  
| | | | S | | | | |  
| | | |   E | | | |  
| | | |     | | | S  
| | | |     S | |    
| | | |       | E    
| | | | F     |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F     |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F     |      = False\n , verbose = False}" , input_size = Size { num_rules = 24 , num_strict_rules
| | | | F     |      = 6 , num_top_rules = 6 , num_weak_rules = 18 , alphabet_size = 8 , total_length
| | | | F     |      = 192} , self = 145 , parent = Nothing , duration = 0.359450642000 , status
| | | | F     |      = Fail , start = 2025-09-03 13:38:24.297539892 UTC , finish = 2025-09-03
| | | | F     |      13:38:24.656990534 UTC , thread_cap_info = ("ThreadId 183", 0, False)}
| | | | F     |      
| | | | |     E      
| | | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 24 , num_strict_rules
| | | | | F          = 6 , num_top_rules = 6 , num_weak_rules = 18 , alphabet_size = 8 , total_length
| | | | | F          = 192} , self = 153 , parent = Nothing , duration = 0.604683995000 , status
| | | | | F          = Fail , start = 2025-09-03 13:38:24.313976329 UTC , finish = 2025-09-03
| | | | | F          13:38:24.918660324 UTC , thread_cap_info = ("ThreadId 182", 0, False)}
| | | | | F          
| S | | | |          
| F | | | |          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F | | | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | | |          = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| F | | | |          = 2 , num_top_rules = 2 , num_weak_rules = 18 , alphabet_size = 7 , total_length
| F | | | |          = 160} , self = 156 , parent = Nothing , duration = 1.057768706000 , status
| F | | | |          = Fail , start = 2025-09-03 13:38:24.396191977 UTC , finish = 2025-09-03
| F | | | |          13:38:25.453960683 UTC , thread_cap_info = ("ThreadId 193", 0, False)}
| F | | | |          
| | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| | | | | | F        = 2 , num_top_rules = 2 , num_weak_rules = 18 , alphabet_size = 7 , total_length
| | | | | | F        = 160} , self = 157 , parent = Nothing , duration = 1.042415126000 , status
| | | | | | F        = Fail , start = 2025-09-03 13:38:24.416595696 UTC , finish = 2025-09-03
| | | | | | F        13:38:25.459010822 UTC , thread_cap_info = ("ThreadId 194", 0, False)}
| | | | | | F        
| | | | | | | S      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | S      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | S      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | S      = 9 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 6 , alphabet_size
| | | | | | | S      = 4 , total_length = 55} , self = 146 , parent = Nothing , duration = 0.404730042000
| | | | | | | S      , status = Success , start = 2025-09-03 13:38:24.435087425 UTC , finish
| | | | | | | S      = 2025-09-03 13:38:24.839817467 UTC , thread_cap_info = ("ThreadId 198",
| | | | | | | S      2, False)}
| | | | | | | S      
| | | | | | | | E    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | E    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | E    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | E    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | E    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | E    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | | | | | E    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 6 , alphabet_size
| | | | | | | | E    = 4 , total_length = 55} , self = 148 , parent = Nothing , duration = 0.362149689000
| | | | | | | | E    , status = Except "AsyncCancelled" , start = 2025-09-03 13:38:24.477814337
| | | | | | | | E    UTC , finish = 2025-09-03 13:38:24.839964026 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E    200", 2, False)}
| | | | | | | | E    
| | | E | | | | |    
| | | F | | | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | F | | | | |    = 3 , num_top_rules = 3 , num_weak_rules = 6 , alphabet_size = 5 , total_length
| | | F | | | | |    = 54} , self = 154 , parent = Nothing , duration = 0.263818640000 , status
| | | F | | | | |    = Fail , start = 2025-09-03 13:38:24.656981487 UTC , finish = 2025-09-03
| | | F | | | | |    13:38:24.920800127 UTC , thread_cap_info = ("ThreadId 205", 2, False)}
| | | F | | | | |    
| | | | F | | | |    
| | | | F | | | |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | | F | | | |    = 3 , num_top_rules = 3 , num_weak_rules = 6 , alphabet_size = 5 , total_length
| | | | F | | | |    = 54} , self = 155 , parent = Nothing , duration = 0.360234502000 , status
| | | | F | | | |    = Fail , start = 2025-09-03 13:38:24.675094492 UTC , finish = 2025-09-03
| | | | F | | | |    13:38:25.035328994 UTC , thread_cap_info = ("ThreadId 206", 2, False)}
| | | | F | | | |    
| | | | | | | | | S  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | | S  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | | S  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | | S  = 24 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 18 ,
| | | | | | | | | S  alphabet_size = 8 , total_length = 192} , self = 160 , parent = Nothing
| | | | | | | | | S  , duration = 1.627515396000 , status = Success , start = 2025-09-03 13:38:24.713916105
| | | | | | | | | S  UTC , finish = 2025-09-03 13:38:26.341431501 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | S  208", 0, False)}
| | | | | | | | | S  
| | | | | | | S | |  
| | | | | | |   E |  
| | | | | | | F   |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F   |  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | F   |  = 2 , num_top_rules = 2 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | | F   |  = 48} , self = 158 , parent = Nothing , duration = 0.749378498000 , status
| | | | | | | F   |  = Fail , start = 2025-09-03 13:38:24.840125969 UTC , finish = 2025-09-03
| | | | | | | F   |  13:38:25.589504467 UTC , thread_cap_info = ("ThreadId 214", 2, False)}
| | | | | | | F   |  
| | | | | | | | F |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F |  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | | F |  = 2 , num_top_rules = 2 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | | | F |  = 48} , self = 159 , parent = Nothing , duration = 0.765767946000 , status
| | | | | | | | F |  = Fail , start = 2025-09-03 13:38:24.853913357 UTC , finish = 2025-09-03
| | | | | | | | F |  13:38:25.619681303 UTC , thread_cap_info = ("ThreadId 215", 2, False)}
| | | | | | | | F |  
| | | | | F | | | |  
| | | | | E | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 24
| | | | | E | | | |  , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 18 , alphabet_size
| | | | | E | | | |  = 8 , total_length = 192} , self = 162 , parent = Nothing , duration =
| | | | | E | | | |  1.501437660000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | E | | | |  13:38:24.918714723 UTC , finish = 2025-09-03 13:38:26.420152383 UTC , thread_cap_info
| | | | | E | | | |  = ("ThreadId 219", 0, False)}
| | | | | E | | | |  
| | | F | | | | | |  
| | | S | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S | | | | | |  = 9 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 6 , alphabet_size
| | | S | | | | | |  = 5 , total_length = 54} , self = 167 , parent = Nothing , duration = 1.552735273000
| | | S | | | | | |  , status = Success , start = 2025-09-03 13:38:24.933949802 UTC , finish
| | | S | | | | | |  = 2025-09-03 13:38:26.486685075 UTC , thread_cap_info = ("ThreadId 220",
| | | S | | | | | |  2, False)}
| | | S | | | | | |  
| | | | F | | | | |  
| | | | E | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | E | | | | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 6 , alphabet_size
| | | | E | | | | |  = 5 , total_length = 54} , self = 169 , parent = Nothing , duration = 1.442234402000
| | | | E | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 13:38:25.044868357
| | | | E | | | | |  UTC , finish = 2025-09-03 13:38:26.487102759 UTC , thread_cap_info = ("ThreadId
| | | | E | | | | |  223", 2, False)}
| | | | E | | | | |  
| F | | | | | | | |  
|   | | | | F | | |  
|   | | | |   F | |  
| S | | | |     | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | | | |     | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | | | |     | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | | | |     | |  = 8 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 6 , alphabet_size
| S | | | |     | |  = 4 , total_length = 48} , self = 173 , parent = Nothing , duration = 0.910268463000
| S | | | |     | |  , status = Success , start = 2025-09-03 13:38:25.589570458 UTC , finish
| S | | | |     | |  = 2025-09-03 13:38:26.499838921 UTC , thread_cap_info = ("ThreadId 226",
| S | | | |     | |  2, False)}
| S | | | |     | |  
| | | | | |     F |  
| | | | | |       S  
| | | | | E          
| | | S |            
| | |   E            
E | |                
  S |                
    E                
