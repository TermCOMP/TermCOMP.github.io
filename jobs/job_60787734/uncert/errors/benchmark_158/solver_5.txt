Input TRS:
    1: B(a(x1)) -> BA(x1)
    2: B(b(x1)) -> B(B(x1))
    3: BA(a(x1)) -> BAA(x1)
    4: BA(b(x1)) -> BA(B(x1))
    5: BAA(a(x1)) -> BAAA(x1)
    6: BAA(b(x1)) -> BAA(B(x1))
    7: BAAA(a(x1)) -> BAAAA(x1)
    8: BAAA(b(x1)) -> BAAA(B(x1))
    9: BAAAA(a(x1)) -> BAAAA(A(x1))
    10: BAAAA(b(x1)) -> BAAAAB(x1)
    11: BAAAAB(a(x1)) -> BAAAABA(x1)
    12: BAAAAB(b(x1)) -> BAAAAB(B(x1))
    13: BAAAABA(a(x1)) -> BAAAABA(A(x1))
    14: BAAAABA(b(x1)) -> BAAAABAB(x1)
    15: BAAAABAB(a(x1)) -> BAAAABABA(x1)
    16: BAAAABAB(b(x1)) -> BAAAABAB(B(x1))
    17: BAAAABABA(x1) -> a(b(a(a(x1))))
    18: A(a(x1)) -> A(A(x1))
    19: A(b(x1)) -> AB(x1)
    20: AB(a(x1)) -> ABA(x1)
    21: AB(b(x1)) -> AB(B(x1))
    22: ABA(a(x1)) -> ABAA(x1)
    23: ABA(b(x1)) -> ABA(B(x1))
    24: ABAA(x1) -> b(a(a(a(a(b(a(b(a(x1)))))))))
Number of strict rules: 24
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #B(b(x1)) -> #B(B(x1))
   #2: #B(b(x1)) -> #B(x1)
   #3: #BAA(b(x1)) -> #BAA(B(x1))
   #4: #BAA(b(x1)) -> #B(x1)
   #5: #BAAAABA(a(x1)) -> #BAAAABA(A(x1))
   #6: #BAAAABA(a(x1)) -> #A(x1)
   #7: #BAAAA(a(x1)) -> #BAAAA(A(x1))
   #8: #BAAAA(a(x1)) -> #A(x1)
   #9: #BAAAAB(a(x1)) -> #BAAAABA(x1)
   #10: #ABA(b(x1)) -> #ABA(B(x1))
   #11: #ABA(b(x1)) -> #B(x1)
   #12: #BAAAAB(b(x1)) -> #BAAAAB(B(x1))
   #13: #BAAAAB(b(x1)) -> #B(x1)
   #14: #BAAAABA(b(x1)) -> #BAAAABAB(x1)
   #15: #AB(a(x1)) -> #ABA(x1)
   #16: #BAAA(a(x1)) -> #BAAAA(x1)
   #17: #BAAAA(b(x1)) -> #BAAAAB(x1)
   #18: #BAA(a(x1)) -> #BAAA(x1)
   #19: #ABA(a(x1)) -> #ABAA(x1)
   #20: #A(b(x1)) -> #AB(x1)
   #21: #AB(b(x1)) -> #AB(B(x1))
   #22: #AB(b(x1)) -> #B(x1)
   #23: #BAAAABAB(b(x1)) -> #BAAAABAB(B(x1))
   #24: #BAAAABAB(b(x1)) -> #B(x1)
   #25: #BA(a(x1)) -> #BAA(x1)
   #26: #B(a(x1)) -> #BA(x1)
   #27: #BAAA(b(x1)) -> #BAAA(B(x1))
   #28: #BAAA(b(x1)) -> #B(x1)
   #29: #BAAAABAB(a(x1)) -> #BAAAABABA(x1)
   #30: #BA(b(x1)) -> #BA(B(x1))
   #31: #BA(b(x1)) -> #B(x1)
   #32: #A(a(x1)) -> #A(A(x1))
   #33: #A(a(x1)) -> #A(x1)
Number of SCCs: 1, DPs: 29, edges: 65
	SCC { #1..9 #11..18 #20..22 #24..28 #30..33 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: 0; x1_2
  #BA(x1)	weight: (/ 1 16) + x1_2; 0
  ABAA(x1)	weight: (/ 1 8); x1_2
#BAAA(x1)	weight: (/ 1 16) + x1_2; 0
     b(x1)	weight: (/ 1 8); x1_1 + x1_2
   #B(x1)	weight: (/ 1 16) + x1_2; 0
  BAAA(x1)	weight: 0; x1_2
BAAAABABA(x1)	weight: 0; x1_2
    AB(x1)	weight: (/ 1 8); x1_2
 BAAAA(x1)	weight: 0; x1_2
BAAAABAB(x1)	weight: 0; x1_2
#BAAAABAB(x1)	weight: x1_1 + x1_2; 0
 #ABA(x1)	weight: (/ 1 16) + x1_2; 0
   BAA(x1)	weight: 0; x1_2
     B(x1)	weight: (/ 1 16); x1_2
#BAAAA(x1)	weight: (/ 1 16) + x1_2; 0
#BAAAAB(x1)	weight: (/ 1 16) + x1_2; 0
     A(x1)	weight: (/ 1 8); x1_2
   #A(x1)	weight: (/ 1 16) + x1_2; 0
   ABA(x1)	weight: (/ 1 8); x1_2
BAAAAB(x1)	weight: 0; x1_2
#BAAAABABA(x1)	weight: 0; 0
#BAAAABA(x1)	weight: (/ 1 16) + x1_2; 0
BAAAABA(x1)	weight: 0; x1_2
 #BAA(x1)	weight: (/ 1 16) + x1_2; 0
  #AB(x1)	weight: (/ 1 16) + x1_1 + x1_2; 0
#ABAA(x1)	weight: 0; 0
    BA(x1)	weight: 0; x1_2
    Usable rules: { 1..24 }
    Removed DPs: #14 #21 #22 #24
Number of SCCs: 1, DPs: 24, edges: 52
	SCC { #1..4 #6..9 #11..13 #15..18 #20 #25..28 #30..33 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: 0; x1_2
  #BA(x1)	weight: (/ 1 16) + x1_2; 0
  ABAA(x1)	weight: (/ 1 8); x1_2
#BAAA(x1)	weight: (/ 1 16) + x1_2; 0
     b(x1)	weight: (/ 1 8); x1_1 + x1_2
   #B(x1)	weight: (/ 1 16) + x1_2; 0
  BAAA(x1)	weight: 0; x1_2
BAAAABABA(x1)	weight: 0; x1_2
    AB(x1)	weight: (/ 1 8); x1_2
 BAAAA(x1)	weight: 0; x1_2
BAAAABAB(x1)	weight: 0; x1_2
#BAAAABAB(x1)	weight: 0; 0
 #ABA(x1)	weight: (/ 1 16) + x1_2; 0
   BAA(x1)	weight: 0; x1_2
     B(x1)	weight: (/ 1 16); x1_2
#BAAAA(x1)	weight: (/ 1 16) + x1_2; 0
#BAAAAB(x1)	weight: (/ 1 16) + x1_1 + x1_2; 0
     A(x1)	weight: (/ 1 8); x1_2
   #A(x1)	weight: (/ 1 16) + x1_2; 0
   ABA(x1)	weight: (/ 1 8); x1_2
BAAAAB(x1)	weight: 0; x1_2
#BAAAABABA(x1)	weight: 0; 0
#BAAAABA(x1)	weight: (/ 1 16) + x1_2; 0
BAAAABA(x1)	weight: 0; x1_2
 #BAA(x1)	weight: (/ 1 16) + x1_2; 0
  #AB(x1)	weight: (/ 1 16) + x1_1 + x1_2; 0
#ABAA(x1)	weight: 0; 0
    BA(x1)	weight: 0; x1_2
    Usable rules: { 1..24 }
    Removed DPs: #12 #13
Number of SCCs: 1, DPs: 22, edges: 46
	SCC { #1..4 #6..9 #11 #15..18 #20 #25..28 #30..33 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: x1_1; 0
  #BA(x1)	weight: x1_1; 0
  ABAA(x1)	weight: x1_1; (/ 1 8)
#BAAA(x1)	weight: x1_1; 0
     b(x1)	weight: x1_1 + x1_2; (/ 1 8)
   #B(x1)	weight: x1_1 + x1_2; 0
  BAAA(x1)	weight: x1_1; 0
BAAAABABA(x1)	weight: x1_1; 0
    AB(x1)	weight: x1_1; (/ 1 8)
 BAAAA(x1)	weight: x1_1; 0
BAAAABAB(x1)	weight: x1_1; 0
#BAAAABAB(x1)	weight: 0; 0
 #ABA(x1)	weight: x1_1; 0
   BAA(x1)	weight: x1_1; 0
     B(x1)	weight: x1_1; (/ 1 16)
#BAAAA(x1)	weight: x1_1; 0
#BAAAAB(x1)	weight: x1_1; 0
     A(x1)	weight: x1_1; (/ 1 8) + x1_1
   #A(x1)	weight: x1_1; 0
   ABA(x1)	weight: x1_1; (/ 1 8)
BAAAAB(x1)	weight: x1_1; 0
#BAAAABABA(x1)	weight: 0; 0
#BAAAABA(x1)	weight: x1_1; 0
BAAAABA(x1)	weight: x1_1; 0
 #BAA(x1)	weight: x1_1; 0
  #AB(x1)	weight: x1_1; 0
#ABAA(x1)	weight: 0; 0
    BA(x1)	weight: x1_1; 0
    Usable rules: { 1..24 }
    Removed DPs: #1 #2
Number of SCCs: 1, DPs: 20, edges: 34
	SCC { #3 #4 #6..9 #11 #15..18 #20 #25..28 #30..33 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
