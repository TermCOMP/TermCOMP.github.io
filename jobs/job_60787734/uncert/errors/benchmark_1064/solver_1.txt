last 3813 length 19293
last 3293 length 14872
CNF 3813 vars 19293 clauses
CNF 3293 vars 14872 clauses
last 12187 length 59746
CNF 12187 vars 59746 clauses
last 14201 length 71588
last 10621 length 65182
CNF 14201 vars 71588 clauses
CNF 10621 vars 65182 clauses
last 11520 length 74684
CNF 11520 vars 74684 clauses
last 637 length 2551
CNF 637 vars 2551 clauses
last 628 length 2584
CNF 628 vars 2584 clauses
last 591 length 2353
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2639, clauses: 9477
CNF 591 vars 2353 clauses
last 580 length 2335
last 2639 length 9477
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18647, clauses: 72396
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8636, clauses: 35933
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18953, clauses: 74541
CNF 580 vars 2335 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2546, clauses: 9084
CNF 2639 vars 9477 clauses
last 18647 length 72396
last 8636 length 35933
last 18953 length 74541
last 2546 length 9084
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 48026, clauses: 200785
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2639, clauses: 9477, status: Unsatisfied, time: 0.800054461s
CNF 18647 vars 72396 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8344, clauses: 34683
CNF 8636 vars 35933 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 47597, clauses: 198856
CNF 2546 vars 9084 clauses
CNF 18953 vars 74541 clauses
last 48026 length 200785
last 8344 length 34683
last 47597 length 198856
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5485, clauses: 21796
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2546, clauses: 9084, status: Unsatisfied, time: 0.330419877s
last 5485 length 21796
CNF 8344 vars 34683 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8636, clauses: 35933, status: Satisfied, time: 0.572132255s
CNF 47597 vars 198856 clauses
CNF 5485 vars 21796 clauses
CNF 48026 vars 200785 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18953, clauses: 74541, status: Satisfied, time: 0.783959659s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8344, clauses: 34683, status: Satisfied, time: 0.424234652s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5315, clauses: 21052
last 598 length 2462
last 567 length 2283
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18647, clauses: 72396, status: Satisfied, time: 1.204292478s
**************************************************
summary
**************************************************
SRS with 4 rules on 3 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 36 rules on 9 letters       mirror
SRS with 36 rules on 9 letters       DP
SRS with 72 strict rules and 36 weak rules on 18 letters       weights
SRS with 56 strict rules and 36 weak rules on 16 letters       EDG
SRS with 56 strict rules and 36 weak rules on 16 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 14 strict rules and 36 weak rules on 15 letters       weights
SRS with 4 strict rules and 36 weak rules on 13 letters       EDG
4 sub-proofs
  1 SRS with 1 strict rules and 36 weak rules on 10 letters       Usable
  SRS with 1 rules on 2 letters       weights
  SRS with 0 rules on 0 letters       EDG

  2 SRS with 1 strict rules and 36 weak rules on 10 letters       Usable
  SRS with 1 rules on 2 letters       weights
  SRS with 0 rules on 0 letters       EDG

  3 SRS with 1 strict rules and 36 weak rules on 10 letters       Usable
  SRS with 1 rules on 2 letters       weights
  SRS with 0 rules on 0 letters       EDG

  4 SRS with 1 strict rules and 36 weak rules on 10 letters       Usable
  SRS with 1 rules on 2 letters       weights
  SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [a, b] -> [b, b, a, a, c] {- Input 1 -}
  [b] -> [] {- Input 2 -}
  [c, c] -> [] {- Input 3 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, a], [a, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[b, a], [a, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[c, a], [a, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[c, a], [a, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[c, a], [a, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[a, a], [a, b], [b, a]] -> [ [a, b] , [b, b] , [b, a] , [a, a] , [a, c] , [c, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, a], [a, b], [b, b]] -> [ [a, b] , [b, b] , [b, a] , [a, a] , [a, c] , [c, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, a], [a, b], [b, c]] -> [ [a, b] , [b, b] , [b, a] , [a, a] , [a, c] , [c, c] ] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, a], [a, b], [b, a]] -> [ [b, b] , [b, b] , [b, a] , [a, a] , [a, c] , [c, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, a], [a, b], [b, b]] -> [ [b, b] , [b, b] , [b, a] , [a, a] , [a, c] , [c, b] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, a], [a, b], [b, c]] -> [ [b, b] , [b, b] , [b, a] , [a, a] , [a, c] , [c, c] ] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[c, a], [a, b], [b, a]] -> [ [c, b] , [b, b] , [b, a] , [a, a] , [a, c] , [c, a] ] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[c, a], [a, b], [b, b]] -> [ [c, b] , [b, b] , [b, a] , [a, a] , [a, c] , [c, b] ] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[c, a], [a, b], [b, c]] -> [ [c, b] , [b, b] , [b, a] , [a, a] , [a, c] , [c, c] ] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, b], [b, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b], [b, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b], [b, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, b], [b, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, b], [b, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[b, b], [b, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[c, b], [b, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[c, b], [b, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[c, b], [b, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 2)) -}
  [[a, c], [c, c], [c, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 3)) -}CNF 567 vars 2283 clauses

CNF 598 vars 2462 clauses
  [[a, c], [c, c], [c, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 3)) -}
  [[a, c], [c, c], [c, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 3)) -}
  [[b, c], [c, c], [c, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 3)) -}
  [[b, c], [c, c], [c, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 3)) -}
  [[b, c], [c, c], [c, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 3)) -}
  [[c, c], [c, c], [c, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 3)) -}
  [[c, c], [c, c], [c, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 3)) -}
  [[c, c], [c, c], [c, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 3)) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] -> [[a, a]] {- Mirror (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, b], [a, a]] -> [[a, b]] {- Mirror (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, c], [a, a]] -> [[a, c]] {- Mirror (Semlab 0 (Concon 2 (Input 0))) -}
  [[a, a], [b, a]] -> [[b, a]] {- Mirror (Semlab 1 (Concon 0 (Input 0))) -}
  [[a, b], [b, a]] -> [[b, b]] {- Mirror (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, c], [b, a]] -> [[b, c]] {- Mirror (Semlab 1 (Concon 2 (Input 0))) -}
  [[a, a], [c, a]] -> [[c, a]] {- Mirror (Semlab 2 (Concon 0 (Input 0))) -}
  [[a, b], [c, a]] -> [[c, b]] {- Mirror (Semlab 2 (Concon 1 (Input 0))) -}
  [[a, c], [c, a]] -> [[c, c]] {- Mirror (Semlab 2 (Concon 2 (Input 0))) -}
  [[b, a], [a, b], [a, a]] -> [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 0 (Input 1))) -}
  [[b, b], [a, b], [a, a]] -> [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, c], [a, b], [a, a]] -> [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 2 (Input 1))) -}
  [[b, a], [a, b], [b, a]] -> [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, b], [a, b], [b, a]] -> [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, c], [a, b], [b, a]] -> [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 2 (Input 1))) -}
  [[b, a], [a, b], [c, a]] -> [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- Mirror (Semlab 2 (Concon 0 (Input 1))) -}
  [[b, b], [a, b], [c, a]] -> [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- Mirror (Semlab 2 (Concon 1 (Input 1))) -}
  [[b, c], [a, b], [c, a]] -> [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- Mirror (Semlab 2 (Concon 2 (Input 1))) -}
  [[b, a], [a, b]] -> [[a, a]] {- Mirror (Semlab 0 (Concon 0 (Input 2))) -}
  [[b, b], [a, b]] -> [[a, b]] {- Mirror (Semlab 0 (Concon 1 (Input 2))) -}
  [[b, c], [a, b]] -> [[a, c]] {- Mirror (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, a], [b, b]] -> [[b, a]] {- Mirror (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, b], [b, b]] -> [[b, b]] {- Mirror (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, c], [b, b]] -> [[b, c]] {- Mirror (Semlab 1 (Concon 2 (Input 2))) -}
  [[b, a], [c, b]] -> [[c, a]] {- Mirror (Semlab 2 (Concon 0 (Input 2))) -}
  [[b, b], [c, b]] -> [[c, b]] {- Mirror (Semlab 2 (Concon 1 (Input 2))) -}
  [[b, c], [c, b]] -> [[c, c]] {- Mirror (Semlab 2 (Concon 2 (Input 2))) -}
  [[c, a], [c, c], [a, c]] -> [ [ a , a ] ] {- Mirror (Semlab 0 (Concon 0 (Input 3))) -}
  [[c, b], [c, c], [a, c]] -> [ [ a , b ] ] {- Mirror (Semlab 0 (Concon 1 (Input 3))) -}
  [[c, c], [c, c], [a, c]] -> [ [ a , c ] ] {- Mirror (Semlab 0 (Concon 2 (Input 3))) -}
  [[c, a], [c, c], [b, c]] -> [ [ b , a ] ] {- Mirror (Semlab 1 (Concon 0 (Input 3))) -}
  [[c, b], [c, c], [b, c]] -> [ [ b , b ] ] {- Mirror (Semlab 1 (Concon 1 (Input 3))) -}
  [[c, c], [c, c], [b, c]] -> [ [ b , c ] ] {- Mirror (Semlab 1 (Concon 2 (Input 3))) -}
  [[c, a], [c, c], [c, c]] -> [ [ c , a ] ] {- Mirror (Semlab 2 (Concon 0 (Input 3))) -}
  [[c, b], [c, c], [c, c]] -> [ [ c , b ] ] {- Mirror (Semlab 2 (Concon 1 (Input 3))) -}
  [[c, c], [c, c], [c, c]] -> [ [ c , c ] ] {- Mirror (Semlab 2 (Concon 2 (Input 3))) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [b, a]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, b]#, [c, a]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, c]#, [c, a]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a]#, [a, b]] |-> [ [ a , a ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [a, a]# , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [b, a]# , [b, b] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [c, a]# , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [a, a]# , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [b, a]# , [b, b] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [c, a]# , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [a, a]# , [b, a] , [b, b] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [b, a]# , [b, b] , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [b, b]# , [ c , b ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [c, a]# , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [c, b]] |-> [ [ c , a ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [a, a]# , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [b, a]# , [b, b] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [c, b]# , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [a, a]# , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [b, a]# , [b, b] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [c, b]# , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [a, a]# , [b, a] , [b, b] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [b, a]# , [b, b] , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [b, b]# , [ c , b ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [c, b]# , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c]#, [a, b]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [a, a]# , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [b, a]# , [b, b] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [c, c]# , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [a, a]# , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [b, a]# , [b, b] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [c, c]# , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [a, a]# , [b, a] , [b, b] , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [b, a]# , [b, b] , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [b, b]# , [ c , b ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [c, c]# , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [b, b]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, c]#, [c, b]] |-> [ [ c , c ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a]#, [c, c], [a, c]] |-> [ [ a , a ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, a]#, [c, c], [b, c]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, a]#, [c, c], [c, c]] |-> [ [ c , a ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b]#, [c, c], [a, c]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, b]#, [c, c], [b, c]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, b]#, [c, c], [c, c]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
  ([a, a]#, 0/1)
  ([a, b]#, 1/1)
  ([a, c]#, 1/1)
  ([b, a]#, 1/1)
  ([b, b]#, 1/1)
  ([b, c]#, 1/1)
  ([c, a]#, 1/1)
  ([c, b]#, 1/1)
  ([c, c]#, 0/1)
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [b, a]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, b]#, [c, a]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [b, a]# , [b, b] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [c, a]# , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [b, a]# , [b, b] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [c, a]# , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [b, a]# , [b, b] , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [b, b]# , [ c , b ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [c, a]# , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [c, b]] |-> [ [ c , a ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [b, a]# , [b, b] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [c, b]# , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [b, a]# , [b, b] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [c, b]# , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [b, a]# , [b, b] , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [b, b]# , [ c , b ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [c, b]# , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c]#, [a, b]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [b, a]# , [b, b] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [b, a]# , [b, b] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [b, a]# , [b, b] , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [b, b]# , [ c , b ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [b, b]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, a]#, [c, c], [b, c]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, a]#, [c, c], [c, c]] |-> [ [ c , a ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b]#, [c, c], [a, c]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, b]#, [c, c], [b, c]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, b]#, [c, c], [c, c]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [b, a]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, b]#, [c, a]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[c, b]#, [c, c], [a, c]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, b]#, [c, c], [b, c]] |-> [ [ b , b ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, c]#, [a, b]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [b, a]# , [b, b] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 5) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [b, a]# , [b, b] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [b, a]# , [b, b] , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [c, a]# , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[c, a]#, [c, c], [b, c]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [b, a]# , [b, b] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [c, b]# , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[c, b]#, [c, c], [c, c]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [b, a]# , [b, b] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [c, b]# , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [b, a]# , [b, b] , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [c, a]# , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[c, a]#, [c, c], [c, c]] |-> [ [ c , a ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [b, a]# , [b, b] , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [b, b]# , [ c , b ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [b, b]# , [ c , b ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [c, b]# , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [c, a]# , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [b, b]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [c, b]] |-> [ [ c , a ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, c]#, [a, b], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [b, a]# , [b, b] , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 5) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [b, a]# , [b, b] , [ c , b ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [b, b]# , [ c , b ] ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [a, b], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 5) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, c]#, [b, b]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  ( [a, a]
  , Wk  / 0A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [a, b]
  , Wk  / 0A  3A 3A - \
        | 0A  3A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [a, c]
  , Wk  / 0A  0A  3A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, a]
  , Wk  / 0A  3A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, b]
  , Wk  / 0A  3A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, c]
  , Wk  / 0A  3A 3A - \
        | 0A  3A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [c, a]
  , Wk  / 0A  3A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [c, b]
  , Wk  / 0A  0A 0A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [c, c]
  , Wk  / 0A  3A 3A - \
        | 0A  3A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [a, b]#
  , Wk  / 4A 4A 7A - \
        | 4A 4A 7A - |
        | 4A 4A 7A - |
        \ -  -  -  - / )
  ( [a, c]#
  , Wk  / 6A 6A 6A - \
        | 6A 6A 6A - |
        | 6A 6A 6A - |
        \ -  -  -  - / )
  ( [b, a]#
  , Wk  / 3A 6A 6A - \
        | 3A 6A 6A - |
        | 3A 6A 6A - |
        \ -  -  -  - / )
  ( [b, b]#
  , Wk  / 3A 6A 6A - \
        | 3A 6A 6A - |
        | 3A 6A 6A - |
        \ -  -  -  - / )
  ( [b, c]#
  , Wk  / 6A 9A 9A - \
        | 6A 9A 9A - |
        | 6A 9A 9A - |
        \ -  -  -  - / )
  ( [c, a]#
  , Wk  / 1A 2A 4A - \
        | 1A 2A 4A - |
        | 1A 2A 4A - |
        \ -  -  -  - / )
  ( [c, b]#
  , Wk  / 3A 5A 6A - \
        | 3A 5A 6A - |
        | 3A 5A 6A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, c]#, [b, a]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, a]#, [a, b], [a, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [a, b], [b, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b]#, [a, b], [a, a]] |-> [ [c, b]# , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [b, a]] |-> [ [c, b]# , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, a]#, [a, b], [c, a]] |-> [ [a, c]# , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b]#, [a, b], [c, a]] |-> [ [c, b]# , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, a]#, [b, b]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, c]#, [b, b]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
  ([a, b]#, 0/1)
  ([a, c]#, 1/1)
  ([b, a]#, 2/1)
  ([b, b]#, 2/1)
  ([b, c]#, 0/1)
  ([c, b]#, 0/1)
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[b, a]#, [b, b]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, c]#, [b, b]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  remove un-usable
    SRS
      [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
      [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
      [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
      [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
      [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
      [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
      [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
      [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
      [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
      [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
      [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
      [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
      [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
      [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
      [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
      [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
      [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
      [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
      [[c, a], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
      [[c, b], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
      [[c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
      [[c, a], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
      [[c, b], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
      [[c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
      [[c, a], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
      [[c, b], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
      [[c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
reason
  ([a, a], 1/1)
  ([a, b]#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

property Termination
has value Just True
for SRS
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  remove un-usable
    SRS
      [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
      [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
      [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
      [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
      [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
      [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
      [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
      [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
      [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
      [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
      [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
      [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
      [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
      [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
      [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
      [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
      [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
      [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
      [[c, a], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
      [[c, b], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
      [[c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
      [[c, a], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
      [[c, b], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
      [[c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
      [[c, a], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
      [[c, b], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
      [[c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
   property Termination
has value Just True
for SRS
  [[a, c]#, [a, a]] |-> [ [ a , c ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
reason
  ([a, a], 1/1)
  ([a, c]#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

property Termination
has value Just True
for SRS
  [[b, a]#, [b, b]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  remove un-usable
    SRS
      [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
      [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
      [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
      [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
      [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
      [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
      [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
      [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
      [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
      [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
      [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
      [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
      [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
      [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
      [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
      [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
      [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
      [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
      [[c, a], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
      [[c, b], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
      [[c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
      [[c, a], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
      [[c, b], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
      [[c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
      [[c, a], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
      [[c, b], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
      [[c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
   property Termination
has value Just True
for SRS
  [[b, a]#, [b, b]] |-> [ [ b , a ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
reason
  ([b, b], 1/1)
  ([b, a]#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

property Termination
has value Just True
for SRS
  [[b, c]#, [b, b]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  remove un-usable
    SRS
      [[a, a], [a, a]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
      [[a, b], [a, a]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
      [[a, c], [a, a]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
      [[a, a], [b, a]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
      [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
      [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
      [[a, a], [c, a]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
      [[a, b], [c, a]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
      [[a, c], [c, a]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
      [[b, a], [a, b], [a, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [a, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [a, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b], [b, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [b, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [b, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b], [c, a]] ->= [ [c, a] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
      [[b, b], [a, b], [c, a]] ->= [ [c, b] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
      [[b, c], [a, b], [c, a]] ->= [ [c, c] , [a, c] , [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
      [[b, b], [a, b]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
      [[b, c], [a, b]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
      [[b, a], [b, b]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
      [[b, b], [b, b]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
      [[b, c], [b, b]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
      [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
      [[b, b], [c, b]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
      [[b, c], [c, b]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
      [[c, a], [c, c], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
      [[c, b], [c, c], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
      [[c, c], [c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
      [[c, a], [c, c], [b, c]] ->= [ [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
      [[c, b], [c, c], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
      [[c, c], [c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
      [[c, a], [c, c], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
      [[c, b], [c, c], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
      [[c, c], [c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
   property Termination
has value Just True
for SRS
  [[b, c]#, [b, b]] |-> [ [ b , c ]# ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
reason
  ([b, b], 1/1)
  ([b, c]#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: (4,3)\TileAllAll{2}\Mirror(36,9)\Deepee(72/36,18)\Weight\EDG(56/36,16)\Matrix{\Arctic}{3}(14/36,15)\Weight(4/36,13)\EDG[(1/36,10)\Usable(1,2)\Weight(0,0)\EDG[],(1/36,10)\Usable(1,2)\Weight(0,0)\EDG[],(1/36,10)\Usable(1,2)\Weight(0,0)\EDG[],(1/36,10)\Usable(1,2)\Weight(0,0)\EDG[]]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.554704249000
  min duration 0.035646267000
  total durat. 1.457160319000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.832899802000
  min duration 0.047401118000
  total durat. 2.195860056000
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 4
  max duration 0.758861187000
  min duration 0.100357013000
  total durat. 1.182348946000
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.442949805000
  min duration 1.442949805000
  total durat. 1.442949805000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 10
      , alphabet_size = 4
      , total_length = 46}
    , self = 87
    , parent = Nothing
    , duration = 1.442949805000
    , status = Success
    , start = 2025-09-03 10:53:51.078937174 UTC
    , finish = 2025-09-03 10:53:52.521886979 UTC
    , thread_cap_info = ("ThreadId 128", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.895139180000
  min duration 1.895139180000
  total durat. 1.895139180000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 92
      , num_strict_rules = 56
      , num_top_rules = 56
      , num_weak_rules = 36
      , alphabet_size = 16
      , total_length = 479}
    , self = 96
    , parent = Nothing
    , duration = 1.895139180000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:53:50.83785334 UTC
    , finish = 2025-09-03 10:53:52.73299252 UTC
    , thread_cap_info = ("ThreadId 116", 1, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.970111624000
  min duration 1.970111624000
  total durat. 1.970111624000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 92
      , num_strict_rules = 56
      , num_top_rules = 56
      , num_weak_rules = 36
      , alphabet_size = 16
      , total_length = 479}
    , self = 94
    , parent = Nothing
    , duration = 1.970111624000
    , status = Success
    , start = 2025-09-03 10:53:50.717397141 UTC
    , finish = 2025-09-03 10:53:52.687508765 UTC
    , thread_cap_info = ("ThreadId 106", 1, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.099963218000
  min duration 1.001978089000
  total durat. 2.101941307000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 10
      , alphabet_size = 4
      , total_length = 44}
    , self = 86
    , parent = Nothing
    , duration = 1.001978089000
    , status = Fail
    , start = 2025-09-03 10:53:51.399166158 UTC
    , finish = 2025-09-03 10:53:52.401144247 UTC
    , thread_cap_info = ("ThreadId 130", 2, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 10
      , alphabet_size = 4
      , total_length = 46}
    , self = 85
    , parent = Nothing
    , duration = 1.099963218000
    , status = Fail
    , start = 2025-09-03 10:53:51.037426791 UTC
    , finish = 2025-09-03 10:53:52.137390009 UTC
    , thread_cap_info = ("ThreadId 124", 2, False)}
**************************************************
F            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
F            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
F            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
F            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
F            = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
F            = 0 , alphabet_size = 3 , total_length = 11} , self = 57 , parent = Nothing
F            , duration = 0.203630119000 , status = Fail , start = 2025-09-03 10:53:49.961129957
F            UTC , finish = 2025-09-03 10:53:50.164760076 UTC , thread_cap_info = ("ThreadId
F            40", 2, False)}
F            
| F          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F          = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| F          = 0 , alphabet_size = 3 , total_length = 11} , self = 65 , parent = Nothing
| F          , duration = 0.758861187000 , status = Fail , start = 2025-09-03 10:53:49.961133072
| F          UTC , finish = 2025-09-03 10:53:50.719994259 UTC , thread_cap_info = ("ThreadId
| F          42", 2, False)}
| F          
| | F        Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | F        , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | F        = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | F        False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | F        = Size { num_rules = 36 , num_strict_rules = 36 , num_top_rules = 0 , num_weak_rules
| | F        = 0 , alphabet_size = 9 , total_length = 171} , self = 33 , parent = Nothing
| | F        , duration = 0.100357013000 , status = Fail , start = 2025-09-03 10:53:49.967218479
| | F        UTC , finish = 2025-09-03 10:53:50.067575492 UTC , thread_cap_info = ("ThreadId
| | F        54", 3, False)}
| | F        
| | | F      Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | F      , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | F      = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | F      False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | F      = Size { num_rules = 36 , num_strict_rules = 36 , num_top_rules = 0 , num_weak_rules
| | | F      = 0 , alphabet_size = 9 , total_length = 171} , self = 37 , parent = Nothing
| | | F      , duration = 0.119500627000 , status = Fail , start = 2025-09-03 10:53:49.96722271
| | | F      UTC , finish = 2025-09-03 10:53:50.086723337 UTC , thread_cap_info = ("ThreadId
| | | F      56", 3, False)}
| | | F      
| | F |      
| |   F      
| | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F        = False\n , verbose = False}" , input_size = Size { num_rules = 92 , num_strict_rules
| | F        = 56 , num_top_rules = 56 , num_weak_rules = 36 , alphabet_size = 16 ,
| | F        total_length = 479} , self = 64 , parent = Nothing , duration = 0.554704249000
| | F        , status = Fail , start = 2025-09-03 10:53:50.153140052 UTC , finish =
| | F        2025-09-03 10:53:50.707844301 UTC , thread_cap_info = ("ThreadId 90", 1,
| | F        False)}
| | F        
| | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 92 , num_strict_rules
| | | F      = 56 , num_top_rules = 56 , num_weak_rules = 36 , alphabet_size = 16 ,
| | | F      total_length = 479} , self = 73 , parent = Nothing , duration = 0.663235863000
| | | F      , status = Fail , start = 2025-09-03 10:53:50.157384209 UTC , finish =
| | | F      2025-09-03 10:53:50.820620072 UTC , thread_cap_info = ("ThreadId 93", 1,
| | | F      False)}
| | | F      
| | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 89 , num_strict_rules
| | | | F    = 53 , num_top_rules = 53 , num_weak_rules = 36 , alphabet_size = 16 ,
| | | | F    total_length = 458} , self = 66 , parent = Nothing , duration = 0.582243836000
| | | | F    , status = Fail , start = 2025-09-03 10:53:50.15792333 UTC , finish = 2025-09-03
| | | | F    10:53:50.740167166 UTC , thread_cap_info = ("ThreadId 97", 3, False)}
| | | | F    
F | | | |    
F | | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 89 , num_strict_rules
F | | | |    = 53 , num_top_rules = 53 , num_weak_rules = 36 , alphabet_size = 16 ,
F | | | |    total_length = 458} , self = 63 , parent = Nothing , duration = 0.465926512000
F | | | |    , status = Fail , start = 2025-09-03 10:53:50.17792977 UTC , finish = 2025-09-03
F | | | |    10:53:50.643856282 UTC , thread_cap_info = ("ThreadId 96", 3, False)}
F | | | |    
F | | | |    
  | F | |    
S |   | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S |   | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S |   | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S |   | |    = 92 , num_strict_rules = 56 , num_top_rules = 56 , num_weak_rules = 36
S |   | |    , alphabet_size = 16 , total_length = 479} , self = 94 , parent = Nothing
S |   | |    , duration = 1.970111624000 , status = Success , start = 2025-09-03 10:53:50.717397141
S |   | |    UTC , finish = 2025-09-03 10:53:52.687508765 UTC , thread_cap_info = ("ThreadId
S |   | |    106", 1, False)}
S |   | |    
| F   | |    
|     | F    
|     F      
| E          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 92
| E          , num_strict_rules = 56 , num_top_rules = 56 , num_weak_rules = 36 , alphabet_size
| E          = 16 , total_length = 479} , self = 96 , parent = Nothing , duration =
| E          1.895139180000 , status = Except "AsyncCancelled" , start = 2025-09-03
| E          10:53:50.83785334 UTC , finish = 2025-09-03 10:53:52.73299252 UTC , thread_cap_info
| E          = ("ThreadId 116", 1, False)}
| E          
| | S        Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
| | S        verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | S        = 2 , num_top_rules = 2 , num_weak_rules = 10 , alphabet_size = 4 , total_length
| | S        = 44} , self = 78 , parent = Nothing , duration = 0.118839060000 , status
| | S        = Success , start = 2025-09-03 10:53:50.878584082 UTC , finish = 2025-09-03
| | S        10:53:50.997423142 UTC , thread_cap_info = ("ThreadId 113", 2, False)}
| | S        
| | S        
| | F        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F        = 12 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 10 ,
| | F        alphabet_size = 4 , total_length = 46} , self = 85 , parent = Nothing ,
| | F        duration = 1.099963218000 , status = Fail , start = 2025-09-03 10:53:51.037426791
| | F        UTC , finish = 2025-09-03 10:53:52.137390009 UTC , thread_cap_info = ("ThreadId
| | F        124", 2, False)}
| | F        
| | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | F      = 2 , num_top_rules = 2 , num_weak_rules = 10 , alphabet_size = 4 , total_length
| | | F      = 44} , self = 83 , parent = Nothing , duration = 0.325275631000 , status
| | | F      = Fail , start = 2025-09-03 10:53:51.057430213 UTC , finish = 2025-09-03
| | | F      10:53:51.382705844 UTC , thread_cap_info = ("ThreadId 126", 2, False)}
| | | F      
| | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | F    = 2 , num_top_rules = 2 , num_weak_rules = 10 , alphabet_size = 4 , total_length
| | | | F    = 44} , self = 84 , parent = Nothing , duration = 0.832899802000 , status
| | | | F    = Fail , start = 2025-09-03 10:53:51.066532747 UTC , finish = 2025-09-03
| | | | F    10:53:51.899432549 UTC , thread_cap_info = ("ThreadId 127", 2, False)}
| | | | F    
| | | | | S  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | S  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | S  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | S  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | S  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | S  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | | | S  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 10 , alphabet_size
| | | | | S  = 4 , total_length = 46} , self = 87 , parent = Nothing , duration = 1.442949805000
| | | | | S  , status = Success , start = 2025-09-03 10:53:51.078937174 UTC , finish
| | | | | S  = 2025-09-03 10:53:52.521886979 UTC , thread_cap_info = ("ThreadId 128",
| | | | | S  2, False)}
| | | | | S  
| | | F | |  
| | | F | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F | |  = 12 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 10 ,
| | | F | |  alphabet_size = 4 , total_length = 44} , self = 86 , parent = Nothing ,
| | | F | |  duration = 1.001978089000 , status = Fail , start = 2025-09-03 10:53:51.399166158
| | | F | |  UTC , finish = 2025-09-03 10:53:52.401144247 UTC , thread_cap_info = ("ThreadId
| | | F | |  130", 2, False)}
| | | F | |  
| | | | F |  
| | F |   |  
| | E |   |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | E |   |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | E |   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | E |   |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E |   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E |   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | E |   |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 10 , alphabet_size
| | E |   |  = 4 , total_length = 46} , self = 89 , parent = Nothing , duration = 0.490251257000
| | E |   |  , status = Except "AsyncCancelled" , start = 2025-09-03 10:53:52.137494531
| | E |   |  UTC , finish = 2025-09-03 10:53:52.627745788 UTC , thread_cap_info = ("ThreadId
| | E |   |  138", 2, False)}
| | E |   |  
| | | F   |  
| | |     S  
| | E        
S |          
  E          
