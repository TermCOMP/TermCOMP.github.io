Input TRS:
    1: B(a(x1)) -> BA(x1)
    2: B(b(x1)) -> B(B(x1))
    3: BA(a(x1)) -> BAA(x1)
    4: BA(b(x1)) -> BA(B(x1))
    5: BAA(a(x1)) -> BAAA(x1)
    6: BAA(b(x1)) -> BAA(B(x1))
    7: BAAA(a(x1)) -> BAAA(A(x1))
    8: BAAA(b(x1)) -> BAAAB(x1)
    9: BAAAB(a(x1)) -> BAAABA(x1)
    10: BAAAB(b(x1)) -> BAAAB(B(x1))
    11: BAAABA(a(x1)) -> BAAABA(A(x1))
    12: BAAABA(b(x1)) -> BAAABAB(x1)
    13: BAAABAB(a(x1)) -> BAAABABA(x1)
    14: BAAABAB(b(x1)) -> BAAABAB(B(x1))
    15: BAAABABA(a(x1)) -> BAAABABAA(x1)
    16: BAAABABA(b(x1)) -> BAAABABA(B(x1))
    17: BAAABABAA(x1) -> a(b(a(a(b(a(x1))))))
    18: A(a(x1)) -> A(A(x1))
    19: A(b(x1)) -> AB(x1)
    20: AB(a(x1)) -> ABA(x1)
    21: AB(b(x1)) -> AB(B(x1))
    22: ABA(a(x1)) -> ABAA(x1)
    23: ABA(b(x1)) -> ABA(B(x1))
    24: ABAA(a(x1)) -> ABAA(A(x1))
    25: ABAA(b(x1)) -> ABAAB(x1)
    26: ABAAB(a(x1)) -> ABAABA(x1)
    27: ABAAB(b(x1)) -> ABAAB(B(x1))
    28: ABAABA(x1) -> b(a(a(a(b(a(b(a(a(x1)))))))))
Number of strict rules: 28
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #B(b(x1)) -> #B(B(x1))
   #2: #B(b(x1)) -> #B(x1)
   #3: #BAA(b(x1)) -> #BAA(B(x1))
   #4: #BAA(b(x1)) -> #B(x1)
   #5: #BAAABAB(a(x1)) -> #BAAABABA(x1)
   #6: #BAAAB(a(x1)) -> #BAAABA(x1)
   #7: #BAAABA(a(x1)) -> #BAAABA(A(x1))
   #8: #BAAABA(a(x1)) -> #A(x1)
   #9: #ABAA(a(x1)) -> #ABAA(A(x1))
   #10: #ABAA(a(x1)) -> #A(x1)
   #11: #ABA(b(x1)) -> #ABA(B(x1))
   #12: #ABA(b(x1)) -> #B(x1)
   #13: #BAAABA(b(x1)) -> #BAAABAB(x1)
   #14: #BAAABAB(b(x1)) -> #BAAABAB(B(x1))
   #15: #BAAABAB(b(x1)) -> #B(x1)
   #16: #ABAA(b(x1)) -> #ABAAB(x1)
   #17: #AB(a(x1)) -> #ABA(x1)
   #18: #BAAA(a(x1)) -> #BAAA(A(x1))
   #19: #BAAA(a(x1)) -> #A(x1)
   #20: #BAAAB(b(x1)) -> #BAAAB(B(x1))
   #21: #BAAAB(b(x1)) -> #B(x1)
   #22: #BAA(a(x1)) -> #BAAA(x1)
   #23: #ABA(a(x1)) -> #ABAA(x1)
   #24: #ABAAB(b(x1)) -> #ABAAB(B(x1))
   #25: #ABAAB(b(x1)) -> #B(x1)
   #26: #A(b(x1)) -> #AB(x1)
   #27: #ABAAB(a(x1)) -> #ABAABA(x1)
   #28: #AB(b(x1)) -> #AB(B(x1))
   #29: #AB(b(x1)) -> #B(x1)
   #30: #BAAABABA(b(x1)) -> #BAAABABA(B(x1))
   #31: #BAAABABA(b(x1)) -> #B(x1)
   #32: #BA(a(x1)) -> #BAA(x1)
   #33: #B(a(x1)) -> #BA(x1)
   #34: #BAAA(b(x1)) -> #BAAAB(x1)
   #35: #BAAABABA(a(x1)) -> #BAAABABAA(x1)
   #36: #BA(b(x1)) -> #BA(B(x1))
   #37: #BA(b(x1)) -> #B(x1)
   #38: #A(a(x1)) -> #A(A(x1))
   #39: #A(a(x1)) -> #A(x1)
Number of SCCs: 1, DPs: 35, edges: 79
	SCC { #1..23 #25 #26 #28 #29 #31..34 #36..39 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: x1_1; x1_1
  #BA(x1)	weight: (/ 1 16) + x1_1; x1_1
 BAAAB(x1)	weight: x1_2; x1_2
  ABAA(x1)	weight: x1_1; (/ 1 8) + x1_1
#BAAA(x1)	weight: (/ 1 16) + x1_1; x1_1
     b(x1)	weight: x1_2; (/ 1 8) + x1_2
   #B(x1)	weight: (/ 1 16) + x1_2; x1_2
  BAAA(x1)	weight: x1_1; x1_1
    AB(x1)	weight: x1_2; (/ 1 8) + x1_2
BAAABA(x1)	weight: x1_1; x1_1
#BAAABABAA(x1)	weight: 0; 0
#ABAAB(x1)	weight: x1_2; x1_2
#BAAABABA(x1)	weight: (/ 1 16) + x1_1; x1_1
 #ABA(x1)	weight: (/ 1 16) + x1_1; x1_1
   BAA(x1)	weight: x1_1; x1_1
#BAAABAB(x1)	weight: (/ 1 16) + x1_2; x1_2
     B(x1)	weight: x1_2; (/ 1 16) + x1_2
#BAAAB(x1)	weight: (/ 1 16) + x1_2; x1_2
     A(x1)	weight: x1_1; (/ 1 8) + x1_1
   #A(x1)	weight: (/ 1 16) + x1_1; x1_1
   ABA(x1)	weight: x1_1; (/ 1 8) + x1_1
BAAABABAA(x1)	weight: x1_1; x1_1
BAAABABA(x1)	weight: x1_1; x1_1
 ABAAB(x1)	weight: x1_2; (/ 1 8) + x1_2
ABAABA(x1)	weight: x1_1; (/ 1 8) + x1_1
#ABAABA(x1)	weight: 0; 0
BAAABAB(x1)	weight: x1_2; x1_2
 #BAA(x1)	weight: (/ 1 16) + x1_1; x1_1
  #AB(x1)	weight: (/ 1 16) + x1_2; x1_2
#BAAABA(x1)	weight: (/ 1 16) + x1_1; x1_1
#ABAA(x1)	weight: (/ 1 16) + x1_1; x1_1
    BA(x1)	weight: x1_1; x1_1
    Usable rules: { 1..28 }
    Removed DPs: #1 #2 #14..16 #20 #21 #25 #28 #29
Number of SCCs: 1, DPs: 24, edges: 42
	SCC { #3..8 #10..13 #17..19 #22 #23 #26 #31..34 #36..39 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
