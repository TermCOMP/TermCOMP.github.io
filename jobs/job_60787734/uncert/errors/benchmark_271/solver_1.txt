last 3465 length 14401
last 3283 length 13310
CNF 3283 vars 13310 clauses
CNF 3465 vars 14401 clauses
last 3394 length 22007
last 4791 length 33452
CNF 3394 vars 22007 clauses
CNF 4791 vars 33452 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10324, clauses: 36553
last 10324 length 36553
CNF 10324 vars 36553 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18700, clauses: 66964
last 18700 length 66964
CNF 18700 vars 66964 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18700, clauses: 66964, status: Satisfied, time: 0.41658924s
last 3191 length 12970
CNF 3191 vars 12970 clauses
last 3451 length 14359
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10324, clauses: 36553, status: Unsatisfied, time: 1.189256069s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 35720, clauses: 147501
last 35720 length 147501
CNF 3451 vars 14359 clauses
CNF 35720 vars 147501 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18488, clauses: 66114
last 18488 length 66114
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 22070, clauses: 85620
last 22070 length 85620
CNF 18488 vars 66114 clauses
CNF 22070 vars 85620 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18488, clauses: 66114, status: Satisfied, time: 0.565215286s
last 3125 length 12718
last 3417 length 14225
CNF 3125 vars 12718 clauses
CNF 3417 vars 14225 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18277, clauses: 65293
last 18277 length 65293
CNF 18277 vars 65293 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18277, clauses: 65293, status: Satisfied, time: 0.540488962s
last 3079 length 12548
CNF 3079 vars 12548 clauses
last 3410 length 14204
CNF 3410 vars 14204 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18171, clauses: 64868
last 18171 length 64868
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 22070, clauses: 85620, status: Unsatisfied, time: 3.672092356s
CNF 18171 vars 64868 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18171, clauses: 64868, status: Satisfied, time: 1.005121613s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16733, clauses: 62355
last 16733 length 62355
CNF 16733 vars 62355 clauses
last 3352 length 13972
last 3035 length 12374
CNF 3035 vars 12374 clauses
CNF 3352 vars 13972 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17867, clauses: 63735
last 17867 length 63735
CNF 17867 vars 63735 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17867, clauses: 63735, status: Satisfied, time: 0.492389953s
last 2969 length 12122
CNF 2969 vars 12122 clauses
last 3318 length 13838
CNF 3318 vars 13838 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17656, clauses: 62914
last 17656 length 62914
CNF 17656 vars 62914 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17656, clauses: 62914, status: Satisfied, time: 0.644357776s
last 2925 length 11948
CNF 2925 vars 11948 clauses
last 3260 length 13606
CNF 3260 vars 13606 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 63573, clauses: 251009
last 63573 length 251009
CNF 63573 vars 251009 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17352, clauses: 61781
last 17352 length 61781
CNF 17352 vars 61781 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17352, clauses: 61781, status: Satisfied, time: 1.069425309s
last 2881 length 11774
last 3202 length 13374
CNF 3202 vars 13374 clauses
CNF 2881 vars 11774 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16733, clauses: 62355, status: Unsatisfied, time: 6.731200565s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17048, clauses: 60648
last 17048 length 60648
CNF 17048 vars 60648 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 31491, clauses: 116684
last 31491 length 116684
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 45312, clauses: 186575
last 45312 length 186575
CNF 31491 vars 116684 clauses
CNF 45312 vars 186575 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17048, clauses: 60648, status: Unsatisfied, time: 2.066120143s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 45312, clauses: 186575, status: Satisfied, time: 2.185312548s
last 2815 length 11522
last 3168 length 13240
CNF 2815 vars 11522 clauses
CNF 3168 vars 13240 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16837, clauses: 59827
last 16837 length 59827
CNF 16837 vars 59827 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 44974, clauses: 185159
last 44974 length 185159
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16837, clauses: 59827, status: Unsatisfied, time: 1.87613601s
CNF 44974 vars 185159 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 28623, clauses: 110668
last 28623 length 110668
CNF 28623 vars 110668 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 28623, clauses: 110668, status: Unsatisfied, time: 4.176063003s
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 79322, clauses: 368343
last 79322 length 368343
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 27176, clauses: 102941
last 27176 length 102941
CNF 27176 vars 102941 clauses
CNF 79322 vars 368343 clauses
[Info] <<timeout>> @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 75111, clauses: 295778
last 75111 length 295778
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 2, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 70369, clauses: 277905
last 70369 length 277905
CNF 75111 vars 295778 clauses
CNF 70369 vars 277905 clauses
[Info] <<timeout>> @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 6, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 43971, clauses: 170245
last 43971 length 170245
CNF 43971 vars 170245 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 50980, clauses: 191155
last 50980 length 191155
CNF 50980 vars 191155 clauses
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 89318, clauses: 413331
last 89318 length 413331
CNF 89318 vars 413331 clauses
[Info] pool sizes (success) 62056 seen 28444 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
**************************************************
summary
**************************************************
SRS with 32 rules on 19 letters       looping derivation
from
  [BAB, AB, ABBBB, b, a]
to
  [BABBBBBAB, B, B, B, BAB, AB, ABBBB, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]
via 140 steps

**************************************************
proof
**************************************************
property Termination
has value Just False
for SRS
  [B, a] -> [BA] {- Input 0 -}
  [B, b] -> [B, B] {- Input 1 -}
  [BA, a] -> [BA, A] {- Input 2 -}
  [BA, b] -> [BAB] {- Input 3 -}
  [BAB, a] -> [BAB, A] {- Input 4 -}
  [BAB, b] -> [BABB] {- Input 5 -}
  [BABB, a] -> [BABB, A] {- Input 6 -}
  [BABB, b] -> [BABBB] {- Input 7 -}
  [BABBB, a] -> [BABBB, A] {- Input 8 -}
  [BABBB, b] -> [BABBBB] {- Input 9 -}
  [BABBBB, a] -> [BABBBB, A] {- Input 10 -}
  [BABBBB, b] -> [BABBBBB] {- Input 11 -}
  [BABBBBB, a] -> [BABBBBBA] {- Input 12 -}
  [BABBBBB, b] -> [BABBBBB, B] {- Input 13 -}
  [BABBBBBA, a] -> [BABBBBBA, A] {- Input 14 -}
  [BABBBBBA, b] -> [BABBBBBAB] {- Input 15 -}
  [BABBBBBAB, a] -> [BABBBBBABA] {- Input 16 -}
  [BABBBBBAB, b] -> [BABBBBBAB, B] {- Input 17 -}
  [BABBBBBABA] -> [a, b, b, b, b, b, a] {- Input 18 -}
  [A, a] -> [A, A] {- Input 19 -}
  [A, b] -> [AB] {- Input 20 -}
  [AB, a] -> [AB, A] {- Input 21 -}
  [AB, b] -> [ABB] {- Input 22 -}
  [ABB, a] -> [ABB, A] {- Input 23 -}
  [ABB, b] -> [ABBB] {- Input 24 -}
  [ABBB, a] -> [ABBB, A] {- Input 25 -}
  [ABBB, b] -> [ABBBB] {- Input 26 -}
  [ABBBB, a] -> [ABBBB, A] {- Input 27 -}
  [ABBBB, b] -> [ABBBBB] {- Input 28 -}
  [ABBBBB, a] -> [ABBBBBA] {- Input 29 -}
  [ABBBBB, b] -> [ABBBBB, B] {- Input 30 -}
  [ABBBBBA] -> [b, a, b, b, b, b, b, a, b, a] {- Input 31 -}
reason
  Nontermination
    Derive   { from = [BAB, AB, ABBBB, b, a], via = [(Step   { rule = 28, position = 2}, [BAB, AB, ABBBBB, a]), (Step   { rule = 29, position = 2}, [BAB, AB, ABBBBBA]), (Step   { rule = 31, position = 2}, [BAB, AB, b, a, b, b, b, b, b, a, b, a]), (Step   { rule = 22, position = 1}, [BAB, ABB, a, b, b, b, b, b, a, b, a]), (Step   { rule = 23, position = 1}, [BAB, ABB, A, b, b, b, b, b, a, b, a]), (Step   { rule = 20, position = 2}, [BAB, ABB, AB, b, b, b, b, a, b, a]), (Step   { rule = 22, position = 2}, [BAB, ABB, ABB, b, b, b, a, b, a]), (Step   { rule = 24, position = 2}, [BAB, ABB, ABBB, b, b, a, b, a]), (Step   { rule = 26, position = 2}, [BAB, ABB, ABBBB, b, a, b, a]), (Step   { rule = 28, position = 2}, [BAB, ABB, ABBBBB, a, b, a]), (Step   { rule = 29, position = 2}, [BAB, ABB, ABBBBBA, b, a]), (Step   { rule = 31, position = 2}, [BAB, ABB, b, a, b, b, b, b, b, a, b, a, b, a]), (Step   { rule = 24, position = 1}, [BAB, ABBB, a, b, b, b, b, b, a, b, a, b, a]), (Step   { rule = 25, position = 1}, [BAB, ABBB, A, b, b, b, b, b, a, b, a, b, a]), (Step   { rule = 20, position = 2}, [BAB, ABBB, AB, b, b, b, b, a, b, a, b, a]), (Step   { rule = 22, position = 2}, [BAB, ABBB, ABB, b, b, b, a, b, a, b, a]), (Step   { rule = 24, position = 2}, [BAB, ABBB, ABBB, b, b, a, b, a, b, a]), (Step   { rule = 26, position = 2}, [BAB, ABBB, ABBBB, b, a, b, a, b, a]), (Step   { rule = 28, position = 2}, [BAB, ABBB, ABBBBB, a, b, a, b, a]), (Step   { rule = 29, position = 2}, [BAB, ABBB, ABBBBBA, b, a, b, a]), (Step   { rule = 31, position = 2}, [BAB, ABBB, b, a, b, b, b, b, b, a, b, a, b, a, b, a]), (Step   { rule = 26, position = 1}, [BAB, ABBBB, a, b, b, b, b, b, a, b, a, b, a, b, a]), (Step   { rule = 27, position = 1}, [BAB, ABBBB, A, b, b, b, b, b, a, b, a, b, a, b, a]), (Step   { rule = 20, position = 2}, [BAB, ABBBB, AB, b, b, b, b, a, b, a, b, a, b, a]), (Step   { rule = 22, position = 2}, [BAB, ABBBB, ABB, b, b, b, a, b, a, b, a, b, a]), (Step   { rule = 24, position = 2}, [BAB, ABBBB, ABBB, b, b, a, b, a, b, a, b, a]), (Step   { rule = 26, position = 2}, [BAB, ABBBB, ABBBB, b, a, b, a, b, a, b, a]), (Step   { rule = 28, position = 2}, [BAB, ABBBB, ABBBBB, a, b, a, b, a, b, a]), (Step   { rule = 29, position = 2}, [BAB, ABBBB, ABBBBBA, b, a, b, a, b, a]), (Step   { rule = 31, position = 2}, [BAB, ABBBB, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 28, position = 1}, [BAB, ABBBBB, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 29, position = 1}, [BAB, ABBBBBA, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 31, position = 1}, [BAB, b, a, b, b, b, b, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 5, position = 0}, [BABB, a, b, b, b, b, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 6, position = 0}, [BABB, A, b, b, b, b, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 20, position = 1}, [BABB, AB, b, b, b, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 22, position = 1}, [BABB, ABB, b, b, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 24, position = 1}, [BABB, ABBB, b, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 26, position = 1}, [BABB, ABBBB, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 28, position = 1}, [BABB, ABBBBB, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 29, position = 1}, [BABB, ABBBBBA, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 31, position = 1}, [BABB, b, a, b, b, b, b, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 7, position = 0}, [BABBB, a, b, b, b, b, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 8, position = 0}, [BABBB, A, b, b, b, b, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 20, position = 1}, [BABBB, AB, b, b, b, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 22, position = 1}, [BABBB, ABB, b, b, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 24, position = 1}, [BABBB, ABBB, b, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 26, position = 1}, [BABBB, ABBBB, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 28, position = 1}, [BABBB, ABBBBB, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 29, position = 1}, [BABBB, ABBBBBA, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 31, position = 1}, [BABBB, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 9, position = 0}, [BABBBB, a, b, b, b, b, b, a, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 10, position = 0}, [BABBBB, A, b, b, b, b, b, a, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 20, position = 1}, [BABBBB, AB, b, b, b, b, a, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 22, position = 1}, [BABBBB, ABB, b, b, b, a, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 24, position = 1}, [BABBBB, ABBB, b, b, a, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 26, position = 1}, [BABBBB, ABBBB, b, a, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 28, position = 1}, [BABBBB, ABBBBB, a, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 29, position = 1}, [BABBBB, ABBBBBA, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 31, position = 1}, [BABBBB, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 11, position = 0}, [BABBBBB, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 12, position = 0}, [BABBBBBA, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 15, position = 0}, [BABBBBBAB, b, b, b, b, a, b, a, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 17, position = 0}, [BABBBBBAB, B, b, b, b, a, b, a, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 1, position = 1}, [BABBBBBAB, B, B, b, b, a, b, a, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 1, position = 2}, [BABBBBBAB, B, B, B, b, a, b, a, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 1, position = 3}, [BABBBBBAB, B, B, B, B, a, b, a, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 0, position = 4}, [BABBBBBAB, B, B, B, BA, b, a, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 3, position = 4}, [BABBBBBAB, B, B, B, BAB, a, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 4, position = 4}, [BABBBBBAB, B, B, B, BAB, A, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 20, position = 5}, [BABBBBBAB, B, B, B, BAB, AB, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 21, position = 5}, [BABBBBBAB, B, B, B, BAB, AB, A, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 20, position = 6}, [BABBBBBAB, B, B, B, BAB, AB, AB, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 21, position = 6}, [BABBBBBAB, B, B, B, BAB, AB, AB, A, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 20, position = 7}, [BABBBBBAB, B, B, B, BAB, AB, AB, AB, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 21, position = 7}, [BABBBBBAB, B, B, B, BAB, AB, AB, AB, A, b, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 20, position = 8}, [BABBBBBAB, B, B, B, BAB, AB, AB, AB, AB, b, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 22, position = 8}, [BABBBBBAB, B, B, B, BAB, AB, AB, AB, ABB, b, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 24, position = 8}, [BABBBBBAB, B, B, B, BAB, AB, AB, AB, ABBB, b, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 26, position = 8}, [BABBBBBAB, B, B, B, BAB, AB, AB, AB, ABBBB, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 28, position = 8}, [BABBBBBAB, B, B, B, BAB, AB, AB, AB, ABBBBB, a, b, a, b, a, b, a, b, a]), (Step   { rule = 29, position = 8}, [BABBBBBAB, B, B, B, BAB, AB, AB, AB, ABBBBBA, b, a, b, a, b, a, b, a]), (Step   { rule = 31, position = 8}, [BABBBBBAB, B, B, B, BAB, AB, AB, AB, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 22, position = 7}, [BABBBBBAB, B, B, B, BAB, AB, AB, ABB, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 23, position = 7}, [BABBBBBAB, B, B, B, BAB, AB, AB, ABB, A, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 20, position = 8}, [BABBBBBAB, B, B, B, BAB, AB, AB, ABB, AB, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 22, position = 8}, [BABBBBBAB, B, B, B, BAB, AB, AB, ABB, ABB, b, b, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 24, position = 8}, [BABBBBBAB, B, B, B, BAB, AB, AB, ABB, ABBB, b, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 26, position = 8}, [BABBBBBAB, B, B, B, BAB, AB, AB, ABB, ABBBB, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 28, position = 8}, [BABBBBBAB, B, B, B, BAB, AB, AB, ABB, ABBBBB, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 29, position = 8}, [BABBBBBAB, B, B, B, BAB, AB, AB, ABB, ABBBBBA, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 31, position = 8}, [BABBBBBAB, B, B, B, BAB, AB, AB, ABB, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 24, position = 7}, [BABBBBBAB, B, B, B, BAB, AB, AB, ABBB, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 25, position = 7}, [BABBBBBAB, B, B, B, BAB, AB, AB, ABBB, A, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 20, position = 8}, [BABBBBBAB, B, B, B, BAB, AB, AB, ABBB, AB, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 22, position = 8}, [BABBBBBAB, B, B, B, BAB, AB, AB, ABBB, ABB, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 24, position = 8}, [BABBBBBAB, B, B, B, BAB, AB, AB, ABBB, ABBB, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 26, position = 8}, [BABBBBBAB, B, B, B, BAB, AB, AB, ABBB, ABBBB, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 28, position = 8}, [BABBBBBAB, B, B, B, BAB, AB, AB, ABBB, ABBBBB, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 29, position = 8}, [BABBBBBAB, B, B, B, BAB, AB, AB, ABBB, ABBBBBA, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 31, position = 8}, [BABBBBBAB, B, B, B, BAB, AB, AB, ABBB, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 26, position = 7}, [BABBBBBAB, B, B, B, BAB, AB, AB, ABBBB, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 27, position = 7}, [BABBBBBAB, B, B, B, BAB, AB, AB, ABBBB, A, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 20, position = 8}, [BABBBBBAB, B, B, B, BAB, AB, AB, ABBBB, AB, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 22, position = 8}, [BABBBBBAB, B, B, B, BAB, AB, AB, ABBBB, ABB, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 24, position = 8}, [BABBBBBAB, B, B, B, BAB, AB, AB, ABBBB, ABBB, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 26, position = 8}, [BABBBBBAB, B, B, B, BAB, AB, AB, ABBBB, ABBBB, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 28, position = 8}, [BABBBBBAB, B, B, B, BAB, AB, AB, ABBBB, ABBBBB, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 29, position = 8}, [BABBBBBAB, B, B, B, BAB, AB, AB, ABBBB, ABBBBBA, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 31, position = 8}, [BABBBBBAB, B, B, B, BAB, AB, AB, ABBBB, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 28, position = 7}, [BABBBBBAB, B, B, B, BAB, AB, AB, ABBBBB, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 29, position = 7}, [BABBBBBAB, B, B, B, BAB, AB, AB, ABBBBBA, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 31, position = 7}, [BABBBBBAB, B, B, B, BAB, AB, AB, b, a, b, b, b, b, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 22, position = 6}, [BABBBBBAB, B, B, B, BAB, AB, ABB, a, b, b, b, b, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 23, position = 6}, [BABBBBBAB, B, B, B, BAB, AB, ABB, A, b, b, b, b, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 20, position = 7}, [BABBBBBAB, B, B, B, BAB, AB, ABB, AB, b, b, b, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 22, position = 7}, [BABBBBBAB, B, B, B, BAB, AB, ABB, ABB, b, b, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 24, position = 7}, [BABBBBBAB, B, B, B, BAB, AB, ABB, ABBB, b, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 26, position = 7}, [BABBBBBAB, B, B, B, BAB, AB, ABB, ABBBB, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 28, position = 7}, [BABBBBBAB, B, B, B, BAB, AB, ABB, ABBBBB, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 29, position = 7}, [BABBBBBAB, B, B, B, BAB, AB, ABB, ABBBBBA, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 31, position = 7}, [BABBBBBAB, B, B, B, BAB, AB, ABB, b, a, b, b, b, b, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 24, position = 6}, [BABBBBBAB, B, B, B, BAB, AB, ABBB, a, b, b, b, b, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 25, position = 6}, [BABBBBBAB, B, B, B, BAB, AB, ABBB, A, b, b, b, b, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 20, position = 7}, [BABBBBBAB, B, B, B, BAB, AB, ABBB, AB, b, b, b, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 22, position = 7}, [BABBBBBAB, B, B, B, BAB, AB, ABBB, ABB, b, b, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 24, position = 7}, [BABBBBBAB, B, B, B, BAB, AB, ABBB, ABBB, b, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 26, position = 7}, [BABBBBBAB, B, B, B, BAB, AB, ABBB, ABBBB, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 28, position = 7}, [BABBBBBAB, B, B, B, BAB, AB, ABBB, ABBBBB, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 29, position = 7}, [BABBBBBAB, B, B, B, BAB, AB, ABBB, ABBBBBA, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 31, position = 7}, [BABBBBBAB, B, B, B, BAB, AB, ABBB, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 26, position = 6}, [BABBBBBAB, B, B, B, BAB, AB, ABBBB, a, b, b, b, b, b, a, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 27, position = 6}, [BABBBBBAB, B, B, B, BAB, AB, ABBBB, A, b, b, b, b, b, a, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 20, position = 7}, [BABBBBBAB, B, B, B, BAB, AB, ABBBB, AB, b, b, b, b, a, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 22, position = 7}, [BABBBBBAB, B, B, B, BAB, AB, ABBBB, ABB, b, b, b, a, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 24, position = 7}, [BABBBBBAB, B, B, B, BAB, AB, ABBBB, ABBB, b, b, a, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 26, position = 7}, [BABBBBBAB, B, B, B, BAB, AB, ABBBB, ABBBB, b, a, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 28, position = 7}, [BABBBBBAB, B, B, B, BAB, AB, ABBBB, ABBBBB, a, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 29, position = 7}, [BABBBBBAB, B, B, B, BAB, AB, ABBBB, ABBBBBA, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]), (Step   { rule = 31, position = 7}, [BABBBBBAB, B, B, B, BAB, AB, ABBBB, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a])], to = [BABBBBBAB, B, B, B, BAB, AB, ABBBB, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, b, b, b, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a, b, a]}

**************************************************
skeleton: (32,19)\Loop{140}[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 10
  max duration 0.340409312000
  min duration 0.164612622000
  total durat. 2.206237408000
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.100179194000
  min duration 3.100179194000
  total durat. 3.100179194000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 706
      , num_strict_rules = 706
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 276
      , total_length = 5164}
    , self = 124
    , parent = Nothing
    , duration = 3.100179194000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:19:12.521237809 UTC
    , finish = 2025-09-03 11:19:15.621417003 UTC
    , thread_cap_info = ("ThreadId 160", 2, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 10
  max duration 0.363576614000
  min duration 0.168078629000
  total durat. 2.380782065000
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.120214809000
  min duration 3.120214809000
  total durat. 3.120214809000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 706
      , num_strict_rules = 706
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 276
      , total_length = 5164}
    , self = 125
    , parent = Nothing
    , duration = 3.120214809000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:19:12.521247552 UTC
    , finish = 2025-09-03 11:19:15.641462361 UTC
    , thread_cap_info = ("ThreadId 162", 2, False)}
Fail : "Matchbound\n { method = RFC\n , implementation = Approximate { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Nothing\n , max_height = Just 4\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 2
  max duration 0.769528329000
  min duration 0.320840471000
  total durat. 1.090368800000
Fail : "Matchbound\n { method = RFC\n , implementation = Approximate { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Nothing\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 2
  max duration 1.142488481000
  min duration 0.369492172000
  total durat. 1.511980653000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Approximate   { at_bound = Merge}\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Nothing\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 27
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 19
      , total_length = 104}
    , self = 74
    , parent = Nothing
    , duration = 1.142488481000
    , status = Fail
    , start = 2025-09-03 11:19:06.581484568 UTC
    , finish = 2025-09-03 11:19:07.723973049 UTC
    , thread_cap_info = ("ThreadId 108", 2, False)}
Fail : "Matchbound\n { method = RFC\n , implementation = Approximate { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Nothing\n , max_height = Just 6\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 2
  max duration 2.502589147000
  min duration 0.959524058000
  total durat. 3.462113205000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Approximate   { at_bound = Merge}\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Nothing\n  , max_height = Just 6\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 27
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 19
      , total_length = 104}
    , self = 93
    , parent = Nothing
    , duration = 2.502589147000
    , status = Fail
    , start = 2025-09-03 11:19:08.731450754 UTC
    , finish = 2025-09-03 11:19:11.234039901 UTC
    , thread_cap_info = ("ThreadId 124", 2, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 4.457249448000
  min duration 4.457249448000
  total durat. 4.457249448000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 67
      , num_strict_rules = 35
      , num_top_rules = 35
      , num_weak_rules = 32
      , alphabet_size = 34
      , total_length = 239}
    , self = 139
    , parent = Nothing
    , duration = 4.457249448000
    , status = Success
    , start = 2025-09-03 11:19:17.844671862 UTC
    , finish = 2025-09-03 11:19:22.30192131 UTC
    , thread_cap_info = ("ThreadId 202", 1, False)}
Except "<<timeout>>" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 9.113575991000
  min duration 9.107595659000
  total durat. 18.221171650000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 66
      , num_strict_rules = 34
      , num_top_rules = 34
      , num_weak_rules = 32
      , alphabet_size = 34
      , total_length = 235}
    , self = 151
    , parent = Nothing
    , duration = 9.107595659000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 11:19:22.605878139 UTC
    , finish = 2025-09-03 11:19:31.713473798 UTC
    , thread_cap_info = ("ThreadId 217", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 39
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 32
      , alphabet_size = 22
      , total_length = 163}
    , self = 116
    , parent = Nothing
    , duration = 9.113575991000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 11:19:04.802651219 UTC
    , finish = 2025-09-03 11:19:13.91622721 UTC
    , thread_cap_info = ("ThreadId 89", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 7
  max duration 1.982008053000
  min duration 1.142900426000
  total durat. 10.925793142000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 75
      , num_strict_rules = 43
      , num_top_rules = 43
      , num_weak_rules = 32
      , alphabet_size = 34
      , total_length = 268}
    , self = 54
    , parent = Nothing
    , duration = 1.142900426000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:19:04.581447346 UTC
    , finish = 2025-09-03 11:19:05.724347772 UTC
    , thread_cap_info = ("ThreadId 83", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 72
      , num_strict_rules = 40
      , num_top_rules = 40
      , num_weak_rules = 32
      , alphabet_size = 34
      , total_length = 258}
    , self = 81
    , parent = Nothing
    , duration = 1.316993864000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:19:07.849313778 UTC
    , finish = 2025-09-03 11:19:09.166307642 UTC
    , thread_cap_info = ("ThreadId 122", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 73
      , num_strict_rules = 41
      , num_top_rules = 41
      , num_weak_rules = 32
      , alphabet_size = 34
      , total_length = 262}
    , self = 67
    , parent = Nothing
    , duration = 1.325827573000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:19:06.281546558 UTC
    , finish = 2025-09-03 11:19:07.607374131 UTC
    , thread_cap_info = ("ThreadId 107", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 70
      , num_strict_rules = 38
      , num_top_rules = 38
      , num_weak_rules = 32
      , alphabet_size = 34
      , total_length = 251}
    , self = 109
    , parent = Nothing
    , duration = 1.455515099000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:19:11.735171913 UTC
    , finish = 2025-09-03 11:19:13.190687012 UTC
    , thread_cap_info = ("ThreadId 157", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 69
      , num_strict_rules = 37
      , num_top_rules = 37
      , num_weak_rules = 32
      , alphabet_size = 34
      , total_length = 247}
    , self = 119
    , parent = Nothing
    , duration = 1.842046772000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:19:13.559362879 UTC
    , finish = 2025-09-03 11:19:15.401409651 UTC
    , thread_cap_info = ("ThreadId 174", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 68
      , num_strict_rules = 36
      , num_top_rules = 36
      , num_weak_rules = 32
      , alphabet_size = 34
      , total_length = 243}
    , self = 130
    , parent = Nothing
    , duration = 1.860501355000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:19:15.72482761 UTC
    , finish = 2025-09-03 11:19:17.585328965 UTC
    , thread_cap_info = ("ThreadId 190", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 71
      , num_strict_rules = 39
      , num_top_rules = 39
      , num_weak_rules = 32
      , alphabet_size = 34
      , total_length = 255}
    , self = 97
    , parent = Nothing
    , duration = 1.982008053000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:19:09.441473142 UTC
    , finish = 2025-09-03 11:19:11.423481195 UTC
    , thread_cap_info = ("ThreadId 139", 1, False)}
Except "<<timeout>>" : "Matrix\n { monotone = Weak\n , domain = Arctic\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 15.037838443000
  min duration 15.037838443000
  total durat. 15.037838443000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Arctic\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 5\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 39
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 32
      , alphabet_size = 22
      , total_length = 163}
    , self = 153
    , parent = Nothing
    , duration = 15.037838443000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 11:19:26.070107666 UTC
    , finish = 2025-09-03 11:19:41.107946109 UTC
    , thread_cap_info = ("ThreadId 222", 1, False)}
Except "<<timeout>>" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 2\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 15.783189466000
  min duration 15.783189466000
  total durat. 15.783189466000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 2\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 5\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 39
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 32
      , alphabet_size = 22
      , total_length = 163}
    , self = 156
    , parent = Nothing
    , duration = 15.783189466000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 11:19:33.386302363 UTC
    , finish = 2025-09-03 11:19:49.169491829 UTC
    , thread_cap_info = ("ThreadId 230", 1, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 5.371261354000
  min duration 4.567435664000
  total durat. 9.938697018000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 39
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 32
      , alphabet_size = 22
      , total_length = 163}
    , self = 92
    , parent = Nothing
    , duration = 4.567435664000
    , status = Fail
    , start = 2025-09-03 11:19:06.162847612 UTC
    , finish = 2025-09-03 11:19:10.730283276 UTC
    , thread_cap_info = ("ThreadId 104", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 66
      , num_strict_rules = 34
      , num_top_rules = 34
      , num_weak_rules = 32
      , alphabet_size = 34
      , total_length = 235}
    , self = 150
    , parent = Nothing
    , duration = 5.371261354000
    , status = Fail
    , start = 2025-09-03 11:19:25.21535289 UTC
    , finish = 2025-09-03 11:19:30.586614244 UTC
    , thread_cap_info = ("ThreadId 220", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.848457509000
  min duration 1.848457509000
  total durat. 1.848457509000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 67
      , num_strict_rules = 35
      , num_top_rules = 35
      , num_weak_rules = 32
      , alphabet_size = 34
      , total_length = 239}
    , self = 141
    , parent = Nothing
    , duration = 1.848457509000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:19:20.504896037 UTC
    , finish = 2025-09-03 11:19:22.353353546 UTC
    , thread_cap_info = ("ThreadId 207", 1, False)}
Except "<<timeout>>" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 12.100518456000
  min duration 12.077020166000
  total durat. 24.177538622000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 39
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 32
      , alphabet_size = 22
      , total_length = 163}
    , self = 149
    , parent = Nothing
    , duration = 12.077020166000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 11:19:13.961684413 UTC
    , finish = 2025-09-03 11:19:26.038704579 UTC
    , thread_cap_info = ("ThreadId 176", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 66
      , num_strict_rules = 34
      , num_top_rules = 34
      , num_weak_rules = 32
      , alphabet_size = 34
      , total_length = 235}
    , self = 155
    , parent = Nothing
    , duration = 12.100518456000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 11:19:31.769691562 UTC
    , finish = 2025-09-03 11:19:43.870210018 UTC
    , thread_cap_info = ("ThreadId 226", 1, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 1.989418338000
  min duration 1.052853162000
  total durat. 10.917669896000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 75
      , num_strict_rules = 43
      , num_top_rules = 43
      , num_weak_rules = 32
      , alphabet_size = 34
      , total_length = 268}
    , self = 52
    , parent = Nothing
    , duration = 1.052853162000
    , status = Success
    , start = 2025-09-03 11:19:04.572529034 UTC
    , finish = 2025-09-03 11:19:05.625382196 UTC
    , thread_cap_info = ("ThreadId 82", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 72
      , num_strict_rules = 40
      , num_top_rules = 40
      , num_weak_rules = 32
      , alphabet_size = 34
      , total_length = 258}
    , self = 79
    , parent = Nothing
    , duration = 1.313967588000
    , status = Success
    , start = 2025-09-03 11:19:07.816603884 UTC
    , finish = 2025-09-03 11:19:09.130571472 UTC
    , thread_cap_info = ("ThreadId 121", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 73
      , num_strict_rules = 41
      , num_top_rules = 41
      , num_weak_rules = 32
      , alphabet_size = 34
      , total_length = 262}
    , self = 65
    , parent = Nothing
    , duration = 1.373079591000
    , status = Success
    , start = 2025-09-03 11:19:06.202054255 UTC
    , finish = 2025-09-03 11:19:07.575133846 UTC
    , thread_cap_info = ("ThreadId 105", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 70
      , num_strict_rules = 38
      , num_top_rules = 38
      , num_weak_rules = 32
      , alphabet_size = 34
      , total_length = 251}
    , self = 107
    , parent = Nothing
    , duration = 1.433882452000
    , status = Success
    , start = 2025-09-03 11:19:11.702954038 UTC
    , finish = 2025-09-03 11:19:13.13683649 UTC
    , thread_cap_info = ("ThreadId 156", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 68
      , num_strict_rules = 36
      , num_top_rules = 36
      , num_weak_rules = 32
      , alphabet_size = 34
      , total_length = 243}
    , self = 128
    , parent = Nothing
    , duration = 1.871375718000
    , status = Success
    , start = 2025-09-03 11:19:15.675938362 UTC
    , finish = 2025-09-03 11:19:17.54731408 UTC
    , thread_cap_info = ("ThreadId 189", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 69
      , num_strict_rules = 37
      , num_top_rules = 37
      , num_weak_rules = 32
      , alphabet_size = 34
      , total_length = 247}
    , self = 117
    , parent = Nothing
    , duration = 1.883093047000
    , status = Success
    , start = 2025-09-03 11:19:13.409854232 UTC
    , finish = 2025-09-03 11:19:15.292947279 UTC
    , thread_cap_info = ("ThreadId 172", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 71
      , num_strict_rules = 39
      , num_top_rules = 39
      , num_weak_rules = 32
      , alphabet_size = 34
      , total_length = 255}
    , self = 95
    , parent = Nothing
    , duration = 1.989418338000
    , status = Success
    , start = 2025-09-03 11:19:09.353549364 UTC
    , finish = 2025-09-03 11:19:11.342967702 UTC
    , thread_cap_info = ("ThreadId 137", 1, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 2.716873027000
  min duration 1.420442839000
  total durat. 6.751698508000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 39
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 32
      , alphabet_size = 22
      , total_length = 163}
    , self = 59
    , parent = Nothing
    , duration = 1.420442839000
    , status = Fail
    , start = 2025-09-03 11:19:04.7214224 UTC
    , finish = 2025-09-03 11:19:06.141865239 UTC
    , thread_cap_info = ("ThreadId 88", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 66
      , num_strict_rules = 34
      , num_top_rules = 34
      , num_weak_rules = 32
      , alphabet_size = 34
      , total_length = 235}
    , self = 148
    , parent = Nothing
    , duration = 2.614382642000
    , status = Fail
    , start = 2025-09-03 11:19:22.578750267 UTC
    , finish = 2025-09-03 11:19:25.193132909 UTC
    , thread_cap_info = ("ThreadId 216", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 67
      , num_strict_rules = 35
      , num_top_rules = 35
      , num_weak_rules = 32
      , alphabet_size = 34
      , total_length = 239}
    , self = 138
    , parent = Nothing
    , duration = 2.716873027000
    , status = Fail
    , start = 2025-09-03 11:19:17.781425657 UTC
    , finish = 2025-09-03 11:19:20.498298684 UTC
    , thread_cap_info = ("ThreadId 201", 1, False)}
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 12.056197274000
  min duration 7.419842020000
  total durat. 19.476039294000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 39
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 32
      , alphabet_size = 22
      , total_length = 163}
    , self = 137
    , parent = Nothing
    , duration = 7.419842020000
    , status = Fail
    , start = 2025-09-03 11:19:10.775793095 UTC
    , finish = 2025-09-03 11:19:18.195635115 UTC
    , thread_cap_info = ("ThreadId 145", 1, False)}
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 66
      , num_strict_rules = 34
      , num_top_rules = 34
      , num_weak_rules = 32
      , alphabet_size = 34
      , total_length = 235}
    , self = 154
    , parent = Nothing
    , duration = 12.056197274000
    , status = Fail
    , start = 2025-09-03 11:19:30.64652986 UTC
    , finish = 2025-09-03 11:19:42.702727134 UTC
    , thread_cap_info = ("ThreadId 224", 1, False)}
Fail : "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 15.094430744000
  min duration 15.094430744000
  total durat. 15.094430744000
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 39
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 32
      , alphabet_size = 22
      , total_length = 163}
    , self = 152
    , parent = Nothing
    , duration = 15.094430744000
    , status = Fail
    , start = 2025-09-03 11:19:18.244156794 UTC
    , finish = 2025-09-03 11:19:33.338587538 UTC
    , thread_cap_info = ("ThreadId 203", 1, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 45.506908378000
  min duration 45.506908378000
  total durat. 45.506908378000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 32
      , num_strict_rules = 32
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 19
      , total_length = 124}
    , self = 157
    , parent = Nothing
    , duration = 45.506908378000
    , status = Fail
    , start = 2025-09-03 11:19:04.212664637 UTC
    , finish = 2025-09-03 11:19:49.719573015 UTC
    , thread_cap_info = ("ThreadId 37", 0, False)}
Success : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 5.140424151000
  min duration 5.140424151000
  total durat. 5.140424151000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 32
      , num_strict_rules = 32
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 19
      , total_length = 124}
    , self = 158
    , parent = Nothing
    , duration = 5.140424151000
    , status = Success
    , start = 2025-09-03 11:19:49.719592222 UTC
    , finish = 2025-09-03 11:19:54.860016373 UTC
    , thread_cap_info = ("ThreadId 243", 0, False)}
Fail : "Unlabel\n { accept_null_strict = True\n , produce_null_strict = False\n , verbose = False\n , tracing = False}"
  total number 1
  max duration 1.167116082000
  min duration 1.167116082000
  total durat. 1.167116082000
  Info
    { what = "Unlabel\n  { accept_null_strict = True\n  , produce_null_strict = False\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 706
      , num_strict_rules = 706
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 276
      , total_length = 5164}
    , self = 104
    , parent = Nothing
    , duration = 1.167116082000
    , status = Fail
    , start = 2025-09-03 11:19:11.26368787 UTC
    , finish = 2025-09-03 11:19:12.430803952 UTC
    , thread_cap_info = ("ThreadId 146", 2, False)}
Success : "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize, epsilon_digits = 6}))\n , verbose = False\n , tracing = False}"
  total number 4
  max duration 6.566374618000
  min duration 0.001455674000
  total durat. 9.920658576000
  Info
    { what = "Weight\n  { modus = Pre (Or_Else Count (GLPK   { goal = Optimize, epsilon_digits = 6}))\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 11552
      , num_strict_rules = 11552
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 361
      , total_length = 67868}
    , self = 72
    , parent = Nothing
    , duration = 3.350508924000
    , status = Success
    , start = 2025-09-03 11:19:04.363254081 UTC
    , finish = 2025-09-03 11:19:07.713763005 UTC
    , thread_cap_info = ("ThreadId 67", 3, False)}
  Info
    { what = "Weight\n  { modus = Pre (Or_Else Count (GLPK   { goal = Optimize, epsilon_digits = 6}))\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 9747
      , num_strict_rules = 9747
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 361
      , total_length = 57038}
    , self = 94
    , parent = Nothing
    , duration = 6.566374618000
    , status = Success
    , start = 2025-09-03 11:19:04.688821755 UTC
    , finish = 2025-09-03 11:19:11.255196373 UTC
    , thread_cap_info = ("ThreadId 87", 2, False)}
**************************************************
F                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                , closure = Forward\n , start_strict_only = True\n , max_closure_length
F                = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                = True})" , input_size = Size { num_rules = 32 , num_strict_rules = 32
F                , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 19 , total_length
F                = 124} , self = 157 , parent = Nothing , duration = 45.506908378000 , status
F                = Fail , start = 2025-09-03 11:19:04.212664637 UTC , finish = 2025-09-03
F                11:19:49.719573015 UTC , thread_cap_info = ("ThreadId 37", 0, False)}
F                
| S              Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| S              , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| S              , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| S              = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| S              , cpf = False}" , input_size = Size { num_rules = 32 , num_strict_rules
| S              = 32 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 19 , total_length
| S              = 124} , self = 33 , parent = Nothing , duration = 0.150562945000 , status
| S              = Success , start = 2025-09-03 11:19:04.212675549 UTC , finish = 2025-09-03
| S              11:19:04.363238494 UTC , thread_cap_info = ("ThreadId 28", 3, False)}
| S              
| | E            Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| | E            , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| | E            , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| | E            = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| | E            , cpf = False}" , input_size = Size { num_rules = 32 , num_strict_rules
| | E            = 32 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 19 , total_length
| | E            = 124} , self = 38 , parent = Nothing , duration = 0.248751733000 , status
| | E            = Except "AsyncCancelled" , start = 2025-09-03 11:19:04.212682253 UTC ,
| | E            finish = 2025-09-03 11:19:04.461433986 UTC , thread_cap_info = ("ThreadId
| | E            39", 2, False)}
| | E            
| | | S          Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | S          { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | S          = MSB_First}\n , max_size = Nothing\n , max_height = Just 2\n , initial
| | | S          = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | S          = False}" , input_size = Size { num_rules = 32 , num_strict_rules = 32
| | | S          , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 19 , total_length
| | | S          = 124} , self = 35 , parent = Nothing , duration = 0.172636065000 , status
| | | S          = Success , start = 2025-09-03 11:19:04.212690687 UTC , finish = 2025-09-03
| | | S          11:19:04.385326752 UTC , thread_cap_info = ("ThreadId 43", 2, False)}
| | | S          
| | | | F        Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | F        , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | F        = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | F        False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | F        = Size { num_rules = 32 , num_strict_rules = 32 , num_top_rules = 0 , num_weak_rules
| | | | F        = 0 , alphabet_size = 19 , total_length = 124} , self = 20 , parent = Nothing
| | | | F        , duration = 0.131613649000 , status = Fail , start = 2025-09-03 11:19:04.212778061
| | | | F        UTC , finish = 2025-09-03 11:19:04.34439171 UTC , thread_cap_info = ("ThreadId
| | | | F        49", 1, False)}
| | | | F        
| | | | | F      Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | F      , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | F      = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | F      False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | F      = Size { num_rules = 32 , num_strict_rules = 32 , num_top_rules = 0 , num_weak_rules
| | | | | F      = 0 , alphabet_size = 19 , total_length = 124} , self = 21 , parent = Nothing
| | | | | F      , duration = 0.135461476000 , status = Fail , start = 2025-09-03 11:19:04.212784806
| | | | | F      UTC , finish = 2025-09-03 11:19:04.348246282 UTC , thread_cap_info = ("ThreadId
| | | | | F      51", 1, False)}
| | | | | F      
| | | | F |      
| | | |   F      
| | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 75 , num_strict_rules
| | | | F        = 43 , num_top_rules = 43 , num_weak_rules = 32 , alphabet_size = 34 ,
| | | | F        total_length = 268} , self = 41 , parent = Nothing , duration = 0.216441064000
| | | | F        , status = Fail , start = 2025-09-03 11:19:04.355439822 UTC , finish =
| | | | F        2025-09-03 11:19:04.571880886 UTC , thread_cap_info = ("ThreadId 65", 1,
| | | | F        False)}
| | | | F        
| | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 75 , num_strict_rules
| | | | | F      = 43 , num_top_rules = 43 , num_weak_rules = 32 , alphabet_size = 34 ,
| | | | | F      total_length = 268} , self = 42 , parent = Nothing , duration = 0.212760422000
| | | | | F      , status = Fail , start = 2025-09-03 11:19:04.36141192 UTC , finish = 2025-09-03
| | | | | F      11:19:04.574172342 UTC , thread_cap_info = ("ThreadId 66", 1, False)}
| | | | | F      
| S | | | |      
| S | | | |      Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| S | | | |      epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| S | | | |      = Size { num_rules = 11552 , num_strict_rules = 11552 , num_top_rules =
| S | | | |      0 , num_weak_rules = 0 , alphabet_size = 361 , total_length = 67868} ,
| S | | | |      self = 72 , parent = Nothing , duration = 3.350508924000 , status = Success
| S | | | |      , start = 2025-09-03 11:19:04.363254081 UTC , finish = 2025-09-03 11:19:07.713763005
| S | | | |      UTC , thread_cap_info = ("ThreadId 67", 3, False)}
| S | | | |      
| | | S | |      
| | | F | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F | |      = False\n , verbose = False}" , input_size = Size { num_rules = 39 , num_strict_rules
| | | F | |      = 7 , num_top_rules = 7 , num_weak_rules = 32 , alphabet_size = 22 , total_length
| | | F | |      = 163} , self = 44 , parent = Nothing , duration = 0.212028473000 , status
| | | F | |      = Fail , start = 2025-09-03 11:19:04.45097334 UTC , finish = 2025-09-03
| | | F | |      11:19:04.663001813 UTC , thread_cap_info = ("ThreadId 72", 1, False)}
| | | F | |      
| | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 39 , num_strict_rules
| | | | | | F    = 7 , num_top_rules = 7 , num_weak_rules = 32 , alphabet_size = 22 , total_length
| | | | | | F    = 163} , self = 46 , parent = Nothing , duration = 0.242454176000 , status
| | | | | | F    = Fail , start = 2025-09-03 11:19:04.461411779 UTC , finish = 2025-09-03
| | | | | | F    11:19:04.703865955 UTC , thread_cap_info = ("ThreadId 73", 1, False)}
| | | | | | F    
| | E | | | |    
| | S | | | |    Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| | S | | | |    , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| | S | | | |    , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| | S | | | |    = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| | S | | | |    , cpf = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | S | | | |    = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 19 , total_length
| | S | | | |    = 104} , self = 45 , parent = Nothing , duration = 0.227341716000 , status
| | S | | | |    = Success , start = 2025-09-03 11:19:04.461448898 UTC , finish = 2025-09-03
| | S | | | |    11:19:04.688790614 UTC , thread_cap_info = ("ThreadId 78", 2, False)}
| | S | | | |    
| | | | | | | F  Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | | | | | F  { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | | | | | F  = MSB_First}\n , max_size = Nothing\n , max_height = Just 2\n , initial
| | | | | | | F  = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | | | | | F  = False}" , input_size = Size { num_rules = 27 , num_strict_rules = 27
| | | | | | | F  , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 19 , total_length
| | | | | | | F  = 104} , self = 43 , parent = Nothing , duration = 0.111380756000 , status
| | | | | | | F  = Fail , start = 2025-09-03 11:19:04.54142551 UTC , finish = 2025-09-03
| | | | | | | F  11:19:04.652806266 UTC , thread_cap_info = ("ThreadId 81", 2, False)}
| | | | | | | F  
| | | | F | | |  
| | | | S | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S | | |  = 75 , num_strict_rules = 43 , num_top_rules = 43 , num_weak_rules = 32
| | | | S | | |  , alphabet_size = 34 , total_length = 268} , self = 52 , parent = Nothing
| | | | S | | |  , duration = 1.052853162000 , status = Success , start = 2025-09-03 11:19:04.572529034
| | | | S | | |  UTC , finish = 2025-09-03 11:19:05.625382196 UTC , thread_cap_info = ("ThreadId
| | | | S | | |  82", 1, False)}
| | | | S | | |  
| | | | | F | |  
| | | | | E | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 75
| | | | | E | |  , num_strict_rules = 43 , num_top_rules = 43 , num_weak_rules = 32 , alphabet_size
| | | | | E | |  = 34 , total_length = 268} , self = 54 , parent = Nothing , duration =
| | | | | E | |  1.142900426000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | E | |  11:19:04.581447346 UTC , finish = 2025-09-03 11:19:05.724347772 UTC , thread_cap_info
| | | | | E | |  = ("ThreadId 83", 1, False)}
| | | | | E | |  
| | | | | | | F  
| | | | | | | F  Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | | | | | F  { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | | | | | F  = MSB_First}\n , max_size = Nothing\n , max_height = Just 3\n , initial
| | | | | | | F  = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | | | | | F  = False}" , input_size = Size { num_rules = 27 , num_strict_rules = 27
| | | | | | | F  , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 19 , total_length
| | | | | | | F  = 104} , self = 47 , parent = Nothing , duration = 0.125350512000 , status
| | | | | | | F  = Fail , start = 2025-09-03 11:19:04.661422881 UTC , finish = 2025-09-03
| | | | | | | F  11:19:04.786773393 UTC , thread_cap_info = ("ThreadId 86", 2, False)}
| | | | | | | F  
| | | F | | | |  
| | S   | | | |  
| | S   | | | |  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | S   | | | |  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | S   | | | |  = Size { num_rules = 9747 , num_strict_rules = 9747 , num_top_rules = 0
| | S   | | | |  , num_weak_rules = 0 , alphabet_size = 361 , total_length = 57038} , self
| | S   | | | |  = 94 , parent = Nothing , duration = 6.566374618000 , status = Success
| | S   | | | |  , start = 2025-09-03 11:19:04.688821755 UTC , finish = 2025-09-03 11:19:11.255196373
| | S   | | | |  UTC , thread_cap_info = ("ThreadId 87", 2, False)}
| | S   | | | |  
| | |   | | F |  
| | | F | |   |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F | |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F | |   |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F | |   |  = 39 , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 32 ,
| | | F | |   |  alphabet_size = 22 , total_length = 163} , self = 59 , parent = Nothing
| | | F | |   |  , duration = 1.420442839000 , status = Fail , start = 2025-09-03 11:19:04.7214224
| | | F | |   |  UTC , finish = 2025-09-03 11:19:06.141865239 UTC , thread_cap_info = ("ThreadId
| | | F | |   |  88", 1, False)}
| | | F | |   |  
| | | | | |   F  
| | | | | | E    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 39
| | | | | | E    , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 32 , alphabet_size
| | | | | | E    = 22 , total_length = 163} , self = 116 , parent = Nothing , duration =
| | | | | | E    9.113575991000 , status = Except "<<timeout>>" , start = 2025-09-03 11:19:04.802651219
| | | | | | E    UTC , finish = 2025-09-03 11:19:13.91622721 UTC , thread_cap_info = ("ThreadId
| | | | | | E    89", 1, False)}
| | | | | | E    
| | | | | | | F  Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | | | | | F  { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | | | | | F  = MSB_First}\n , max_size = Nothing\n , max_height = Just 3\n , initial
| | | | | | | F  = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | | | | | F  = False}" , input_size = Size { num_rules = 27 , num_strict_rules = 27
| | | | | | | F  , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 19 , total_length
| | | | | | | F  = 104} , self = 49 , parent = Nothing , duration = 0.272624024000 , status
| | | | | | | F  = Fail , start = 2025-09-03 11:19:04.802657957 UTC , finish = 2025-09-03
| | | | | | | F  11:19:05.075281981 UTC , thread_cap_info = ("ThreadId 90", 2, False)}
| | | | | | | F  
| | | | | | | F  
| | | | | | | F  Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | | | | | F  { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | | | | | F  = MSB_First}\n , max_size = Nothing\n , max_height = Just 4\n , initial
| | | | | | | F  = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | | | | | F  = False}" , input_size = Size { num_rules = 27 , num_strict_rules = 27
| | | | | | | F  , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 19 , total_length
| | | | | | | F  = 104} , self = 50 , parent = Nothing , duration = 0.320840471000 , status
| | | | | | | F  = Fail , start = 2025-09-03 11:19:05.081424101 UTC , finish = 2025-09-03
| | | | | | | F  11:19:05.402264572 UTC , thread_cap_info = ("ThreadId 92", 2, False)}
| | | | | | | F  
| | | | | | | F  
| | | | | | | F  Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | | | | | F  { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | | | | | F  = MSB_First}\n , max_size = Nothing\n , max_height = Just 4\n , initial
| | | | | | | F  = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | | | | | F  = False}" , input_size = Size { num_rules = 27 , num_strict_rules = 27
| | | | | | | F  , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 19 , total_length
| | | | | | | F  = 104} , self = 62 , parent = Nothing , duration = 0.769528329000 , status
| | | | | | | F  = Fail , start = 2025-09-03 11:19:05.421430753 UTC , finish = 2025-09-03
| | | | | | | F  11:19:06.190959082 UTC , thread_cap_info = ("ThreadId 94", 2, False)}
| | | | | | | F  
| | | | S | | |  
| | | |   E | |  
| | | | F   | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 73 , num_strict_rules
| | | | F   | |  = 41 , num_top_rules = 41 , num_weak_rules = 32 , alphabet_size = 34 ,
| | | | F   | |  total_length = 262} , self = 60 , parent = Nothing , duration = 0.340409312000
| | | | F   | |  , status = Fail , start = 2025-09-03 11:19:05.801489893 UTC , finish =
| | | | F   | |  2025-09-03 11:19:06.141899205 UTC , thread_cap_info = ("ThreadId 99", 1,
| | | | F   | |  False)}
| | | | F   | |  
| | | | | F | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F | |  = False\n , verbose = False}" , input_size = Size { num_rules = 73 , num_strict_rules
| | | | | F | |  = 41 , num_top_rules = 41 , num_weak_rules = 32 , alphabet_size = 34 ,
| | | | | F | |  total_length = 262} , self = 61 , parent = Nothing , duration = 0.363576614000
| | | | | F | |  , status = Fail , start = 2025-09-03 11:19:05.821417995 UTC , finish =
| | | | | F | |  2025-09-03 11:19:06.184994609 UTC , thread_cap_info = ("ThreadId 100",
| | | | | F | |  1, False)}
| | | | | F | |  
| | | F | | | |  
| | |   F | | |  
| | | F   | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | F   | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | F   | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | F   | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F   | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F   | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 39
| | | F   | | |  , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 32 , alphabet_size
| | | F   | | |  = 22 , total_length = 163} , self = 92 , parent = Nothing , duration =
| | | F   | | |  4.567435664000 , status = Fail , start = 2025-09-03 11:19:06.162847612
| | | F   | | |  UTC , finish = 2025-09-03 11:19:10.730283276 UTC , thread_cap_info = ("ThreadId
| | | F   | | |  104", 1, False)}
| | | F   | | |  
| | | |   F | |  
| | | |     | F  
| | | | S   |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S   |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S   |    = 73 , num_strict_rules = 41 , num_top_rules = 41 , num_weak_rules = 32
| | | | S   |    , alphabet_size = 34 , total_length = 262} , self = 65 , parent = Nothing
| | | | S   |    , duration = 1.373079591000 , status = Success , start = 2025-09-03 11:19:06.202054255
| | | | S   |    UTC , finish = 2025-09-03 11:19:07.575133846 UTC , thread_cap_info = ("ThreadId
| | | | S   |    105", 1, False)}
| | | | S   |    
| | | | | F |    Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | | | F |    { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | | | F |    = MSB_First}\n , max_size = Nothing\n , max_height = Just 5\n , initial
| | | | | F |    = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | | | F |    = False}" , input_size = Size { num_rules = 27 , num_strict_rules = 27
| | | | | F |    , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 19 , total_length
| | | | | F |    = 104} , self = 63 , parent = Nothing , duration = 0.369492172000 , status
| | | | | F |    = Fail , start = 2025-09-03 11:19:06.202062137 UTC , finish = 2025-09-03
| | | | | F |    11:19:06.571554309 UTC , thread_cap_info = ("ThreadId 106", 2, False)}
| | | | | F |    
| | | | | | | E  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 73
| | | | | | | E  , num_strict_rules = 41 , num_top_rules = 41 , num_weak_rules = 32 , alphabet_size
| | | | | | | E  = 34 , total_length = 262} , self = 67 , parent = Nothing , duration =
| | | | | | | E  1.325827573000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | | | E  11:19:06.281546558 UTC , finish = 2025-09-03 11:19:07.607374131 UTC , thread_cap_info
| | | | | | | E  = ("ThreadId 107", 1, False)}
| | | | | | | E  
| | | | | F | |  
| | | | | F | |  Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | | | F | |  { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | | | F | |  = MSB_First}\n , max_size = Nothing\n , max_height = Just 5\n , initial
| | | | | F | |  = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | | | F | |  = False}" , input_size = Size { num_rules = 27 , num_strict_rules = 27
| | | | | F | |  , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 19 , total_length
| | | | | F | |  = 104} , self = 74 , parent = Nothing , duration = 1.142488481000 , status
| | | | | F | |  = Fail , start = 2025-09-03 11:19:06.581484568 UTC , finish = 2025-09-03
| | | | | F | |  11:19:07.723973049 UTC , thread_cap_info = ("ThreadId 108", 2, False)}
| | | | | F | |  
| | | | S | | |  
| | | |   | | E  
| | | | F | |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F | |    = False\n , verbose = False}" , input_size = Size { num_rules = 72 , num_strict_rules
| | | | F | |    = 40 , num_top_rules = 40 , num_weak_rules = 32 , alphabet_size = 34 ,
| | | | F | |    total_length = 258} , self = 75 , parent = Nothing , duration = 0.202510747000
| | | | F | |    , status = Fail , start = 2025-09-03 11:19:07.613797352 UTC , finish =
| | | | F | |    2025-09-03 11:19:07.816308099 UTC , thread_cap_info = ("ThreadId 116",
| | | | F | |    1, False)}
| | | | F | |    
| | | | | | | F  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 72 , num_strict_rules
| | | | | | | F  = 40 , num_top_rules = 40 , num_weak_rules = 32 , alphabet_size = 34 ,
| | | | | | | F  total_length = 258} , self = 76 , parent = Nothing , duration = 0.207797589000
| | | | | | | F  , status = Fail , start = 2025-09-03 11:19:07.623605165 UTC , finish =
| | | | | | | F  2025-09-03 11:19:07.831402754 UTC , thread_cap_info = ("ThreadId 115",
| | | | | | | F  1, False)}
| | | | | | | F  
| S | | | | | |  
|   | | | F | |  
| F | | |   | |  Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| F | | |   | |  { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| F | | |   | |  = MSB_First}\n , max_size = Nothing\n , max_height = Just 6\n , initial
| F | | |   | |  = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| F | | |   | |  = False}" , input_size = Size { num_rules = 27 , num_strict_rules = 27
| F | | |   | |  , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 19 , total_length
| F | | |   | |  = 104} , self = 77 , parent = Nothing , duration = 0.959524058000 , status
| F | | |   | |  = Fail , start = 2025-09-03 11:19:07.7613557 UTC , finish = 2025-09-03
| F | | |   | |  11:19:08.720879758 UTC , thread_cap_info = ("ThreadId 118", 2, False)}
| F | | |   | |  
| | | | F   | |  
| | | | S   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S   | |  = 72 , num_strict_rules = 40 , num_top_rules = 40 , num_weak_rules = 32
| | | | S   | |  , alphabet_size = 34 , total_length = 258} , self = 79 , parent = Nothing
| | | | S   | |  , duration = 1.313967588000 , status = Success , start = 2025-09-03 11:19:07.816603884
| | | | S   | |  UTC , finish = 2025-09-03 11:19:09.130571472 UTC , thread_cap_info = ("ThreadId
| | | | S   | |  121", 1, False)}
| | | | S   | |  
| | | | |   | F  
| | | | | E |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 72
| | | | | E |    , num_strict_rules = 40 , num_top_rules = 40 , num_weak_rules = 32 , alphabet_size
| | | | | E |    = 34 , total_length = 258} , self = 81 , parent = Nothing , duration =
| | | | | E |    1.316993864000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | E |    11:19:07.849313778 UTC , finish = 2025-09-03 11:19:09.166307642 UTC , thread_cap_info
| | | | | E |    = ("ThreadId 122", 1, False)}
| | | | | E |    
| F | | | | |    
| F | | | | |    Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| F | | | | |    { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| F | | | | |    = MSB_First}\n , max_size = Nothing\n , max_height = Just 6\n , initial
| F | | | | |    = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| F | | | | |    = False}" , input_size = Size { num_rules = 27 , num_strict_rules = 27
| F | | | | |    , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 19 , total_length
| F | | | | |    = 104} , self = 93 , parent = Nothing , duration = 2.502589147000 , status
| F | | | | |    = Fail , start = 2025-09-03 11:19:08.731450754 UTC , finish = 2025-09-03
| F | | | | |    11:19:11.234039901 UTC , thread_cap_info = ("ThreadId 124", 2, False)}
| F | | | | |    
| | | | S | |    
| | | |   E |    
| | | | F   |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F   |    = False\n , verbose = False}" , input_size = Size { num_rules = 71 , num_strict_rules
| | | | F   |    = 39 , num_top_rules = 39 , num_weak_rules = 32 , alphabet_size = 34 ,
| | | | F   |    total_length = 255} , self = 90 , parent = Nothing , duration = 0.263562440000
| | | | F   |    , status = Fail , start = 2025-09-03 11:19:09.173659135 UTC , finish =
| | | | F   |    2025-09-03 11:19:09.437221575 UTC , thread_cap_info = ("ThreadId 130",
| | | | F   |    1, False)}
| | | | F   |    
| | | | | F |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F |    = False\n , verbose = False}" , input_size = Size { num_rules = 71 , num_strict_rules
| | | | | F |    = 39 , num_top_rules = 39 , num_weak_rules = 32 , alphabet_size = 34 ,
| | | | | F |    total_length = 255} , self = 89 , parent = Nothing , duration = 0.164612622000
| | | | | F |    , status = Fail , start = 2025-09-03 11:19:09.182256231 UTC , finish =
| | | | | F |    2025-09-03 11:19:09.346868853 UTC , thread_cap_info = ("ThreadId 129",
| | | | | F |    1, False)}
| | | | | F |    
| | | | | F |    
| | | | | S |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S |    = 71 , num_strict_rules = 39 , num_top_rules = 39 , num_weak_rules = 32
| | | | | S |    , alphabet_size = 34 , total_length = 255} , self = 95 , parent = Nothing
| | | | | S |    , duration = 1.989418338000 , status = Success , start = 2025-09-03 11:19:09.353549364
| | | | | S |    UTC , finish = 2025-09-03 11:19:11.342967702 UTC , thread_cap_info = ("ThreadId
| | | | | S |    137", 1, False)}
| | | | | S |    
| | | | F | |    
| | | | E | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 71
| | | | E | |    , num_strict_rules = 39 , num_top_rules = 39 , num_weak_rules = 32 , alphabet_size
| | | | E | |    = 34 , total_length = 255} , self = 97 , parent = Nothing , duration =
| | | | E | |    1.982008053000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | E | |    11:19:09.441473142 UTC , finish = 2025-09-03 11:19:11.423481195 UTC , thread_cap_info
| | | | E | |    = ("ThreadId 139", 1, False)}
| | | | E | |    
| | | F | | |    
| | | F | | |    Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | F | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F | | |    = 39 , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 32 ,
| | | F | | |    alphabet_size = 22 , total_length = 163} , self = 137 , parent = Nothing
| | | F | | |    , duration = 7.419842020000 , status = Fail , start = 2025-09-03 11:19:10.775793095
| | | F | | |    UTC , finish = 2025-09-03 11:19:18.195635115 UTC , thread_cap_info = ("ThreadId
| | | F | | |    145", 1, False)}
| | | F | | |    
| F | | | | |    
|   S | | | |    
| F   | | | |    Info { what = "Unlabel\n { accept_null_strict = True\n , produce_null_strict
| F   | | | |    = False\n , verbose = False\n , tracing = False}" , input_size = Size {
| F   | | | |    num_rules = 706 , num_strict_rules = 706 , num_top_rules = 0 , num_weak_rules
| F   | | | |    = 0 , alphabet_size = 276 , total_length = 5164} , self = 104 , parent
| F   | | | |    = Nothing , duration = 1.167116082000 , status = Fail , start = 2025-09-03
| F   | | | |    11:19:11.26368787 UTC , finish = 2025-09-03 11:19:12.430803952 UTC , thread_cap_info
| F   | | | |    = ("ThreadId 146", 2, False)}
| F   | | | |    
| |   | | S |    
| |   | E   |    
| | F |     |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F |     |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F |     |    = False\n , verbose = False}" , input_size = Size { num_rules = 70 , num_strict_rules
| | F |     |    = 38 , num_top_rules = 38 , num_weak_rules = 32 , alphabet_size = 34 ,
| | F |     |    total_length = 251} , self = 102 , parent = Nothing , duration = 0.222089258000
| | F |     |    , status = Fail , start = 2025-09-03 11:19:11.461338241 UTC , finish =
| | F |     |    2025-09-03 11:19:11.683427499 UTC , thread_cap_info = ("ThreadId 151",
| | F |     |    1, False)}
| | F |     |    
| | | | F   |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F   |    = False\n , verbose = False}" , input_size = Size { num_rules = 70 , num_strict_rules
| | | | F   |    = 38 , num_top_rules = 38 , num_weak_rules = 32 , alphabet_size = 34 ,
| | | | F   |    total_length = 251} , self = 103 , parent = Nothing , duration = 0.247322852000
| | | | F   |    , status = Fail , start = 2025-09-03 11:19:11.4613402 UTC , finish = 2025-09-03
| | | | F   |    11:19:11.708663052 UTC , thread_cap_info = ("ThreadId 152", 1, False)}
| | | | F   |    
| | F | |   |    
| | S | |   |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S | |   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S | |   |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S | |   |    = 70 , num_strict_rules = 38 , num_top_rules = 38 , num_weak_rules = 32
| | S | |   |    , alphabet_size = 34 , total_length = 251} , self = 107 , parent = Nothing
| | S | |   |    , duration = 1.433882452000 , status = Success , start = 2025-09-03 11:19:11.702954038
| | S | |   |    UTC , finish = 2025-09-03 11:19:13.13683649 UTC , thread_cap_info = ("ThreadId
| | S | |   |    156", 1, False)}
| | S | |   |    
| | | | F   |    
| | | | E   |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E   |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E   |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E   |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E   |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E   |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 70
| | | | E   |    , num_strict_rules = 38 , num_top_rules = 38 , num_weak_rules = 32 , alphabet_size
| | | | E   |    = 34 , total_length = 251} , self = 109 , parent = Nothing , duration =
| | | | E   |    1.455515099000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | E   |    11:19:11.735171913 UTC , finish = 2025-09-03 11:19:13.190687012 UTC , thread_cap_info
| | | | E   |    = ("ThreadId 157", 1, False)}
| | | | E   |    
| F | | |   |    
| E | | |   |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| E | | |   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E | | |   |    = False\n , verbose = False}" , input_size = Size { num_rules = 706 , num_strict_rules
| E | | |   |    = 706 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 276 ,
| E | | |   |    total_length = 5164} , self = 124 , parent = Nothing , duration = 3.100179194000
| E | | |   |    , status = Except "AsyncCancelled" , start = 2025-09-03 11:19:12.521237809
| E | | |   |    UTC , finish = 2025-09-03 11:19:15.621417003 UTC , thread_cap_info = ("ThreadId
| E | | |   |    160", 2, False)}
| E | | |   |    
| | | | | E |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | E |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | E |    = False\n , verbose = False}" , input_size = Size { num_rules = 706 , num_strict_rules
| | | | | E |    = 706 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 276 ,
| | | | | E |    total_length = 5164} , self = 125 , parent = Nothing , duration = 3.120214809000
| | | | | E |    , status = Except "AsyncCancelled" , start = 2025-09-03 11:19:12.521247552
| | | | | E |    UTC , finish = 2025-09-03 11:19:15.641462361 UTC , thread_cap_info = ("ThreadId
| | | | | E |    162", 2, False)}
| | | | | E |    
| | S | | | |    
| |   | E | |    
| | F |   | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F |   | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F |   | |    = False\n , verbose = False}" , input_size = Size { num_rules = 69 , num_strict_rules
| | F |   | |    = 37 , num_top_rules = 37 , num_weak_rules = 32 , alphabet_size = 34 ,
| | F |   | |    total_length = 247} , self = 114 , parent = Nothing , duration = 0.164965200000
| | F |   | |    , status = Fail , start = 2025-09-03 11:19:13.224719616 UTC , finish =
| | F |   | |    2025-09-03 11:19:13.389684816 UTC , thread_cap_info = ("ThreadId 169",
| | F |   | |    1, False)}
| | F |   | |    
| | | | F | |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F | |    = False\n , verbose = False}" , input_size = Size { num_rules = 69 , num_strict_rules
| | | | F | |    = 37 , num_top_rules = 37 , num_weak_rules = 32 , alphabet_size = 34 ,
| | | | F | |    total_length = 247} , self = 115 , parent = Nothing , duration = 0.271963135000
| | | | F | |    , status = Fail , start = 2025-09-03 11:19:13.259508873 UTC , finish =
| | | | F | |    2025-09-03 11:19:13.531472008 UTC , thread_cap_info = ("ThreadId 170",
| | | | F | |    1, False)}
| | | | F | |    
| | F | | | |    
| | S | | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S | | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S | | | |    = 69 , num_strict_rules = 37 , num_top_rules = 37 , num_weak_rules = 32
| | S | | | |    , alphabet_size = 34 , total_length = 247} , self = 117 , parent = Nothing
| | S | | | |    , duration = 1.883093047000 , status = Success , start = 2025-09-03 11:19:13.409854232
| | S | | | |    UTC , finish = 2025-09-03 11:19:15.292947279 UTC , thread_cap_info = ("ThreadId
| | S | | | |    172", 1, False)}
| | S | | | |    
| | | | F | |    
| | | | E | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 69
| | | | E | |    , num_strict_rules = 37 , num_top_rules = 37 , num_weak_rules = 32 , alphabet_size
| | | | E | |    = 34 , total_length = 247} , self = 119 , parent = Nothing , duration =
| | | | E | |    1.842046772000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | E | |    11:19:13.559362879 UTC , finish = 2025-09-03 11:19:15.401409651 UTC , thread_cap_info
| | | | E | |    = ("ThreadId 174", 1, False)}
| | | | E | |    
| | | | | | E    
| | | | | | E    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | | E    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | E    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | E    , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 39
| | | | | | E    , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 32 , alphabet_size
| | | | | | E    = 22 , total_length = 163} , self = 149 , parent = Nothing , duration =
| | | | | | E    12.077020166000 , status = Except "<<timeout>>" , start = 2025-09-03 11:19:13.961684413
| | | | | | E    UTC , finish = 2025-09-03 11:19:26.038704579 UTC , thread_cap_info = ("ThreadId
| | | | | | E    176", 1, False)}
| | | | | | E    
| | S | | | |    
| |   | E | |    
| | F |   | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F |   | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F |   | |    = False\n , verbose = False}" , input_size = Size { num_rules = 68 , num_strict_rules
| | F |   | |    = 36 , num_top_rules = 36 , num_weak_rules = 32 , alphabet_size = 34 ,
| | F |   | |    total_length = 243} , self = 127 , parent = Nothing , duration = 0.231505255000
| | F |   | |    , status = Fail , start = 2025-09-03 11:19:15.481949438 UTC , finish =
| | F |   | |    2025-09-03 11:19:15.713454693 UTC , thread_cap_info = ("ThreadId 182",
| | F |   | |    1, False)}
| | F |   | |    
| | | | F | |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F | |    = False\n , verbose = False}" , input_size = Size { num_rules = 68 , num_strict_rules
| | | | F | |    = 36 , num_top_rules = 36 , num_weak_rules = 32 , alphabet_size = 34 ,
| | | | F | |    total_length = 243} , self = 126 , parent = Nothing , duration = 0.168078629000
| | | | F | |    , status = Fail , start = 2025-09-03 11:19:15.507831193 UTC , finish =
| | | | F | |    2025-09-03 11:19:15.675909822 UTC , thread_cap_info = ("ThreadId 183",
| | | | F | |    1, False)}
| | | | F | |    
| E | | | | |    
|   | | | E |    
|   | | F   |    
| S | |     |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | |     |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | |     |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | |     |    = 68 , num_strict_rules = 36 , num_top_rules = 36 , num_weak_rules = 32
| S | |     |    , alphabet_size = 34 , total_length = 243} , self = 128 , parent = Nothing
| S | |     |    , duration = 1.871375718000 , status = Success , start = 2025-09-03 11:19:15.675938362
| S | |     |    UTC , finish = 2025-09-03 11:19:17.54731408 UTC , thread_cap_info = ("ThreadId
| S | |     |    189", 1, False)}
| S | |     |    
| | F |     |    
| | E |     |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E |     |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E |     |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E |     |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E |     |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E |     |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 68
| | E |     |    , num_strict_rules = 36 , num_top_rules = 36 , num_weak_rules = 32 , alphabet_size
| | E |     |    = 34 , total_length = 243} , self = 130 , parent = Nothing , duration =
| | E |     |    1.860501355000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | E |     |    11:19:15.72482761 UTC , finish = 2025-09-03 11:19:17.585328965 UTC , thread_cap_info
| | E |     |    = ("ThreadId 190", 1, False)}
| | E |     |    
| S | |     |    
|   E |     |    
| F   |     |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F   |     |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F   |     |    = False\n , verbose = False}" , input_size = Size { num_rules = 67 , num_strict_rules
| F   |     |    = 35 , num_top_rules = 35 , num_weak_rules = 32 , alphabet_size = 34 ,
| F   |     |    total_length = 239} , self = 136 , parent = Nothing , duration = 0.232752261000
| F   |     |    , status = Fail , start = 2025-09-03 11:19:17.593142185 UTC , finish =
| F   |     |    2025-09-03 11:19:17.825894446 UTC , thread_cap_info = ("ThreadId 197",
| F   |     |    1, False)}
| F   |     |    
| | F |     |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F |     |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F |     |    = False\n , verbose = False}" , input_size = Size { num_rules = 67 , num_strict_rules
| | F |     |    = 35 , num_top_rules = 35 , num_weak_rules = 32 , alphabet_size = 34 ,
| | F |     |    total_length = 239} , self = 135 , parent = Nothing , duration = 0.176057604000
| | F |     |    , status = Fail , start = 2025-09-03 11:19:17.604844983 UTC , finish =
| | F |     |    2025-09-03 11:19:17.780902587 UTC , thread_cap_info = ("ThreadId 198",
| | F |     |    1, False)}
| | F |     |    
| | F |     |    
| | F |     |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F |     |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F |     |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F |     |    = 67 , num_strict_rules = 35 , num_top_rules = 35 , num_weak_rules = 32
| | F |     |    , alphabet_size = 34 , total_length = 239} , self = 138 , parent = Nothing
| | F |     |    , duration = 2.716873027000 , status = Fail , start = 2025-09-03 11:19:17.781425657
| | F |     |    UTC , finish = 2025-09-03 11:19:20.498298684 UTC , thread_cap_info = ("ThreadId
| | F |     |    201", 1, False)}
| | F |     |    
| F | |     |    
| S | |     |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| S | |     |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| S | |     |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S | |     |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S | |     |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S | |     |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 67
| S | |     |    , num_strict_rules = 35 , num_top_rules = 35 , num_weak_rules = 32 , alphabet_size
| S | |     |    = 34 , total_length = 239} , self = 139 , parent = Nothing , duration =
| S | |     |    4.457249448000 , status = Success , start = 2025-09-03 11:19:17.844671862
| S | |     |    UTC , finish = 2025-09-03 11:19:22.30192131 UTC , thread_cap_info = ("ThreadId
| S | |     |    202", 1, False)}
| S | |     |    
| | | F     |    
| | | F     |    Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
| | | F     |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F     |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F     |    = 39 , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 32 ,
| | | F     |    alphabet_size = 22 , total_length = 163} , self = 152 , parent = Nothing
| | | F     |    , duration = 15.094430744000 , status = Fail , start = 2025-09-03 11:19:18.244156794
| | | F     |    UTC , finish = 2025-09-03 11:19:33.338587538 UTC , thread_cap_info = ("ThreadId
| | | F     |    203", 1, False)}
| | | F     |    
| | F |     |    
| | E |     |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | E |     |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | E |     |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | E |     |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E |     |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E |     |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 67
| | E |     |    , num_strict_rules = 35 , num_top_rules = 35 , num_weak_rules = 32 , alphabet_size
| | E |     |    = 34 , total_length = 239} , self = 141 , parent = Nothing , duration =
| | E |     |    1.848457509000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | E |     |    11:19:20.504896037 UTC , finish = 2025-09-03 11:19:22.353353546 UTC , thread_cap_info
| | E |     |    = ("ThreadId 207", 1, False)}
| | E |     |    
| S | |     |    
|   E |     |    
| F   |     |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F   |     |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F   |     |    = False\n , verbose = False}" , input_size = Size { num_rules = 66 , num_strict_rules
| F   |     |    = 34 , num_top_rules = 34 , num_weak_rules = 32 , alphabet_size = 34 ,
| F   |     |    total_length = 235} , self = 146 , parent = Nothing , duration = 0.213636374000
| F   |     |    , status = Fail , start = 2025-09-03 11:19:22.365076242 UTC , finish =
| F   |     |    2025-09-03 11:19:22.578712616 UTC , thread_cap_info = ("ThreadId 212",
| F   |     |    1, False)}
| F   |     |    
| | F |     |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F |     |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F |     |    = False\n , verbose = False}" , input_size = Size { num_rules = 66 , num_strict_rules
| | F |     |    = 34 , num_top_rules = 34 , num_weak_rules = 32 , alphabet_size = 34 ,
| | F |     |    total_length = 235} , self = 147 , parent = Nothing , duration = 0.232495446000
| | F |     |    , status = Fail , start = 2025-09-03 11:19:22.365081893 UTC , finish =
| | F |     |    2025-09-03 11:19:22.597577339 UTC , thread_cap_info = ("ThreadId 213",
| | F |     |    1, False)}
| | F |     |    
| F | |     |    
| F | |     |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F | |     |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | |     |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | |     |    = 66 , num_strict_rules = 34 , num_top_rules = 34 , num_weak_rules = 32
| F | |     |    , alphabet_size = 34 , total_length = 235} , self = 148 , parent = Nothing
| F | |     |    , duration = 2.614382642000 , status = Fail , start = 2025-09-03 11:19:22.578750267
| F | |     |    UTC , finish = 2025-09-03 11:19:25.193132909 UTC , thread_cap_info = ("ThreadId
| F | |     |    216", 1, False)}
| F | |     |    
| | F |     |    
| | E |     |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E |     |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E |     |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E |     |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E |     |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E |     |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 66
| | E |     |    , num_strict_rules = 34 , num_top_rules = 34 , num_weak_rules = 32 , alphabet_size
| | E |     |    = 34 , total_length = 235} , self = 151 , parent = Nothing , duration =
| | E |     |    9.107595659000 , status = Except "<<timeout>>" , start = 2025-09-03 11:19:22.605878139
| | E |     |    UTC , finish = 2025-09-03 11:19:31.713473798 UTC , thread_cap_info = ("ThreadId
| | E |     |    217", 1, False)}
| | E |     |    
| F | |     |    
| F | |     |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| F | |     |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F | |     |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F | |     |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | |     |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | |     |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 66
| F | |     |    , num_strict_rules = 34 , num_top_rules = 34 , num_weak_rules = 32 , alphabet_size
| F | |     |    = 34 , total_length = 235} , self = 150 , parent = Nothing , duration =
| F | |     |    5.371261354000 , status = Fail , start = 2025-09-03 11:19:25.21535289 UTC
| F | |     |    , finish = 2025-09-03 11:19:30.586614244 UTC , thread_cap_info = ("ThreadId
| F | |     |    220", 1, False)}
| F | |     |    
| | | |     E    
| | | | E        Info { what = "Matrix\n { monotone = Weak\n , domain = Arctic\n , method
| | | | E        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | E        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E        , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 39
| | | | E        , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 32 , alphabet_size
| | | | E        = 22 , total_length = 163} , self = 153 , parent = Nothing , duration =
| | | | E        15.037838443000 , status = Except "<<timeout>>" , start = 2025-09-03 11:19:26.070107666
| | | | E        UTC , finish = 2025-09-03 11:19:41.107946109 UTC , thread_cap_info = ("ThreadId
| | | | E        222", 1, False)}
| | | | E        
| F | | |        
| F | | |        Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| F | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | | |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | | |        = 66 , num_strict_rules = 34 , num_top_rules = 34 , num_weak_rules = 32
| F | | |        , alphabet_size = 34 , total_length = 235} , self = 154 , parent = Nothing
| F | | |        , duration = 12.056197274000 , status = Fail , start = 2025-09-03 11:19:30.64652986
| F | | |        UTC , finish = 2025-09-03 11:19:42.702727134 UTC , thread_cap_info = ("ThreadId
| F | | |        224", 1, False)}
| F | | |        
| | E | |        
| | E | |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | E | |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | E | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | E | |        , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 66
| | E | |        , num_strict_rules = 34 , num_top_rules = 34 , num_weak_rules = 32 , alphabet_size
| | E | |        = 34 , total_length = 235} , self = 155 , parent = Nothing , duration =
| | E | |        12.100518456000 , status = Except "<<timeout>>" , start = 2025-09-03 11:19:31.769691562
| | E | |        UTC , finish = 2025-09-03 11:19:43.870210018 UTC , thread_cap_info = ("ThreadId
| | E | |        226", 1, False)}
| | E | |        
| | | F |        
| | | E |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | E |        = Direct\n , shape = Cornered\n , bits = 2\n , compress = True\n , remove
| | | E |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | E |        , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 39
| | | E |        , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 32 , alphabet_size
| | | E |        = 22 , total_length = 163} , self = 156 , parent = Nothing , duration =
| | | E |        15.783189466000 , status = Except "<<timeout>>" , start = 2025-09-03 11:19:33.386302363
| | | E |        UTC , finish = 2025-09-03 11:19:49.169491829 UTC , thread_cap_info = ("ThreadId
| | | E |        230", 1, False)}
| | | E |        
| | | | E        
| F | |          
|   E |          
|     E          
F                
S                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
S                , closure = Forward\n , start_strict_only = True\n , max_closure_length
S                = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
S                , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
S                max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
S                [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
S                string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
S                , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
S                = True})" , input_size = Size { num_rules = 32 , num_strict_rules = 32
S                , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 19 , total_length
S                = 124} , self = 158 , parent = Nothing , duration = 5.140424151000 , status
S                = Success , start = 2025-09-03 11:19:49.719592222 UTC , finish = 2025-09-03
S                11:19:54.860016373 UTC , thread_cap_info = ("ThreadId 243", 0, False)}
S                
S                
