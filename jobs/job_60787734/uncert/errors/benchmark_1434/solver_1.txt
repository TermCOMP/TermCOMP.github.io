last 3579 length 16682
CNF 3579 vars 16682 clauses
last 5444 length 25333
CNF 5444 vars 25333 clauses
last 1492 length 6476
last 1484 length 6318
CNF 1492 vars 6476 clauses
CNF 1484 vars 6318 clauses
last 1359 length 5651
CNF 1359 vars 5651 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2625, clauses: 9926
last 2625 length 9926
last 1429 length 6204
CNF 2625 vars 9926 clauses
CNF 1429 vars 6204 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2625, clauses: 9926, status: Unsatisfied, time: 0.104311387s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2637, clauses: 9923
last 2637 length 9923
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8944, clauses: 37537
last 8944 length 37537
CNF 2637 vars 9923 clauses
CNF 8944 vars 37537 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5433, clauses: 22673
last 5433 length 22673
CNF 5433 vars 22673 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2637, clauses: 9923, status: Unsatisfied, time: 0.219846894s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8946, clauses: 37543
last 8946 length 37543
CNF 8946 vars 37543 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5439, clauses: 22691
last 5439 length 22691
CNF 5439 vars 22691 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5433, clauses: 22673, status: Unsatisfied, time: 1.181900092s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8944, clauses: 37537, status: Unsatisfied, time: 1.431651201s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5439, clauses: 22691, status: Unsatisfied, time: 1.386015396s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4329, clauses: 17337
last 4329 length 17337
CNF 4329 vars 17337 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8946, clauses: 37543, status: Unsatisfied, time: 1.671404664s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4349, clauses: 17309
last 4349 length 17309
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15212, clauses: 66548
last 15212 length 66548
CNF 4349 vars 17309 clauses
CNF 15212 vars 66548 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4329, clauses: 17337, status: Unsatisfied, time: 0.658047931s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15221, clauses: 66575
last 15221 length 66575
CNF 15221 vars 66575 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4349, clauses: 17309, status: Unsatisfied, time: 0.840457307s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8134, clauses: 32048
last 8134 length 32048
CNF 8134 vars 32048 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8164, clauses: 31983
last 8164 length 31983
CNF 8164 vars 31983 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8134, clauses: 32048, status: Satisfied, time: 1.254399711s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8164, clauses: 31983, status: Satisfied, time: 1.030385422s
last 1260 length 5436
CNF 1260 vars 5436 clauses
last 1142 length 4810
CNF 1142 vars 4810 clauses
**************************************************
summary
**************************************************
SRS with 3 rules on 2 letters       mirror
SRS with 3 rules on 2 letters       DP
SRS with 12 strict rules and 3 weak rules on 4 letters       weights
SRS with 3 strict rules and 3 weak rules on 4 letters       EDG
SRS with 3 strict rules and 3 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 3 weak rules on 4 letters       weights
SRS with 0 strict rules and 3 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, a, a] -> [b, b, b, b] {- Input 0 -}
  [b, b, a, b] -> [a, b, a, a] {- Input 1 -}
  [b, a, b, b] -> [a, a, b, a] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a, b, a] -> [b, b, b, b] {- Mirror (Input 0) -}
  [b, a, b, b] -> [a, a, b, a] {- Mirror (Input 1) -}
  [b, b, a, b] -> [a, b, a, a] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a, b, a] ->= [b, b, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, b, b] ->= [a, a, b, a] {- DP Nontop (Mirror (Input 1)) -}
  [b, b, a, b] ->= [a, b, a, a] {- DP Nontop (Mirror (Input 2)) -}
  [a#, a, b, a] |-> [b#] {- DP (Top 3) (Mirror (Input 0)) -}
  [a#, a, b, a] |-> [b#, b] {- DP (Top 2) (Mirror (Input 0)) -}
  [a#, a, b, a] |-> [b#, b, b] {- DP (Top 1) (Mirror (Input 0)) -}
  [a#, a, b, a] |-> [b#, b, b, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, a, b, b] |-> [a#] {- DP (Top 3) (Mirror (Input 1)) -}
  [b#, a, b, b] |-> [a#, a, b, a] {- DP (Top 0) (Mirror (Input 1)) -}
  [b#, a, b, b] |-> [a#, b, a] {- DP (Top 1) (Mirror (Input 1)) -}
  [b#, a, b, b] |-> [b#, a] {- DP (Top 2) (Mirror (Input 1)) -}
  [b#, b, a, b] |-> [a#] {- DP (Top 3) (Mirror (Input 2)) -}
  [b#, b, a, b] |-> [a#, a] {- DP (Top 2) (Mirror (Input 2)) -}
  [b#, b, a, b] |-> [a#, b, a, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, b, a, b] |-> [b#, a, a] {- DP (Top 1) (Mirror (Input 2)) -}
reason
  (a, 1/1)
  (b, 1/1)
  (a#, 0/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [a, a, b, a] ->= [b, b, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, b, b] ->= [a, a, b, a] {- DP Nontop (Mirror (Input 1)) -}
  [b, b, a, b] ->= [a, b, a, a] {- DP Nontop (Mirror (Input 2)) -}
  [a#, a, b, a] |-> [b#, b, b, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, a, b, b] |-> [a#, a, b, a] {- DP (Top 0) (Mirror (Input 1)) -}
  [b#, b, a, b] |-> [a#, b, a, a] {- DP (Top 0) (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a, b, a] |-> [b#, b, b, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, a, b, b] |-> [a#, a, b, a] {- DP (Top 0) (Mirror (Input 1)) -}
  [b#, b, a, b] |-> [a#, b, a, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [a, a, b, a] ->= [b, b, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, b, b] ->= [a, a, b, a] {- DP Nontop (Mirror (Input 1)) -}
  [b, b, a, b] ->= [a, b, a, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 15A 15A 15A 15A 20A - \
        | 15A 15A 15A 15A 15A - |
        | 10A 15A 15A 15A 15A - |
        | 10A 10A 10A 10A 15A - |
        | 10A 10A 10A 10A 15A - |
        \ -   -   -   -   -   - / )
  ( b
  , Wk  / 15A 15A 15A 20A 20A - \
        | 10A 15A 15A 15A 15A - |
        | 10A 15A 15A 15A 15A - |
        | 10A 15A 15A 15A 15A - |
        | 10A 10A 15A 15A 15A - |
        \ -   -   -   -   -   - / )
  ( a#
  , Wk  / 6A 6A 6A 6A 6A - \
        | 6A 6A 6A 6A 6A - |
        | 6A 6A 6A 6A 6A - |
        | 6A 6A 6A 6A 6A - |
        | 6A 6A 6A 6A 6A - |
        \ -  -  -  -  -  - / )
  ( b#
  , Wk  / 6A 11A 11A 11A 11A - \
        | 6A 11A 11A 11A 11A - |
        | 6A 11A 11A 11A 11A - |
        | 6A 11A 11A 11A 11A - |
        | 6A 11A 11A 11A 11A - |
        \ -  -   -   -   -   - / )
   property Termination
has value Just True
for SRS
  [a#, a, b, a] |-> [b#, b, b, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [a, a, b, a] ->= [b, b, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, b, b] ->= [a, a, b, a] {- DP Nontop (Mirror (Input 1)) -}
  [b, b, a, b] ->= [a, b, a, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (a#, 1/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [a, a, b, a] ->= [b, b, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, a, b, b] ->= [a, a, b, a] {- DP Nontop (Mirror (Input 1)) -}
  [b, b, a, b] ->= [a, b, a, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG

**************************************************
skeleton: \Mirror(3,2)\Deepee(12/3,4)\Weight\EDG(3/3,4)\Matrix{\Arctic}{5}(1/3,4)\Weight(0/3,2)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 2.162461916000
  min duration 1.646486062000
  total durat. 3.808947978000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 48}
    , self = 71
    , parent = Nothing
    , duration = 1.646486062000
    , status = Fail
    , start = 2025-09-03 12:02:33.133259348 UTC
    , finish = 2025-09-03 12:02:34.77974541 UTC
    , thread_cap_info = ("ThreadId 105", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 48}
    , self = 73
    , parent = Nothing
    , duration = 2.162461916000
    , status = Fail
    , start = 2025-09-03 12:02:33.313743877 UTC
    , finish = 2025-09-03 12:02:35.476205793 UTC
    , thread_cap_info = ("ThreadId 111", 3, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.535989715000
  min duration 1.371069831000
  total durat. 2.907059546000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 48}
    , self = 70
    , parent = Nothing
    , duration = 1.371069831000
    , status = Fail
    , start = 2025-09-03 12:02:33.33497683 UTC
    , finish = 2025-09-03 12:02:34.706046661 UTC
    , thread_cap_info = ("ThreadId 112", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 48}
    , self = 72
    , parent = Nothing
    , duration = 1.535989715000
    , status = Fail
    , start = 2025-09-03 12:02:33.563097877 UTC
    , finish = 2025-09-03 12:02:35.099087592 UTC
    , thread_cap_info = ("ThreadId 116", 3, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 3.022837884000
  min duration 2.361615119000
  total durat. 5.384453003000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 48}
    , self = 82
    , parent = Nothing
    , duration = 2.361615119000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:02:35.53437662 UTC
    , finish = 2025-09-03 12:02:37.895991739 UTC
    , thread_cap_info = ("ThreadId 123", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 48}
    , self = 80
    , parent = Nothing
    , duration = 3.022837884000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:02:34.833275948 UTC
    , finish = 2025-09-03 12:02:37.856113832 UTC
    , thread_cap_info = ("ThreadId 120", 3, False)}
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.263552936000
  min duration 1.186672986000
  total durat. 2.450225922000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 48}
    , self = 75
    , parent = Nothing
    , duration = 1.186672986000
    , status = Fail
    , start = 2025-09-03 12:02:35.174473058 UTC
    , finish = 2025-09-03 12:02:36.361146044 UTC
    , thread_cap_info = ("ThreadId 121", 3, False)}
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 48}
    , self = 74
    , parent = Nothing
    , duration = 1.263552936000
    , status = Fail
    , start = 2025-09-03 12:02:34.732033618 UTC
    , finish = 2025-09-03 12:02:35.995586554 UTC
    , thread_cap_info = ("ThreadId 119", 3, False)}
Success : "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.710451867000
  min duration 1.431097835000
  total durat. 3.141549702000
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 48}
    , self = 78
    , parent = Nothing
    , duration = 1.431097835000
    , status = Success
    , start = 2025-09-03 12:02:36.413263081 UTC
    , finish = 2025-09-03 12:02:37.844360916 UTC
    , thread_cap_info = ("ThreadId 128", 3, False)}
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 48}
    , self = 76
    , parent = Nothing
    , duration = 1.710451867000
    , status = Success
    , start = 2025-09-03 12:02:36.054388771 UTC
    , finish = 2025-09-03 12:02:37.764840638 UTC
    , thread_cap_info = ("ThreadId 126", 3, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 4.980003544000
  min duration 4.980003544000
  total durat. 4.980003544000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 24}
    , self = 89
    , parent = Nothing
    , duration = 4.980003544000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:02:33.033254962 UTC
    , finish = 2025-09-03 12:02:38.013258506 UTC
    , thread_cap_info = ("ThreadId 80", 0, False)}
**************************************************
F            Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F            , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F            = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F            , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F            = False}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F            = 24} , self = 35 , parent = Nothing , duration = 0.146455183000 , status
F            = Fail , start = 2025-09-03 12:02:32.782626142 UTC , finish = 2025-09-03
F            12:02:32.929081325 UTC , thread_cap_info = ("ThreadId 22", 2, False)}
F            
| F          Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| F          , closure = Backward\n , start_strict_only = True\n , max_closure_length
| F          = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| F          Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| F          8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| F          = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| F          ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| F          1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| F          = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| F          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| F          = 24} , self = 49 , parent = Nothing , duration = 0.253334632000 , status
| F          = Fail , start = 2025-09-03 12:02:32.78263729 UTC , finish = 2025-09-03
| F          12:02:33.035971922 UTC , thread_cap_info = ("ThreadId 37", 3, False)}
| F          
| | F        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | F        , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | F        = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | F        Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | F        8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | F        = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | F        ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | F        1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | F        = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| | F        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | F        = 24} , self = 41 , parent = Nothing , duration = 0.244160285000 , status
| | F        = Fail , start = 2025-09-03 12:02:32.782674245 UTC , finish = 2025-09-03
| | F        12:02:33.02683453 UTC , thread_cap_info = ("ThreadId 36", 0, False)}
| | F        
| | | F      Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | F      , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | F      = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | F      False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | F      = Size { num_rules = 3 , num_strict_rules = 3 , num_top_rules = 0 , num_weak_rules
| | | F      = 0 , alphabet_size = 2 , total_length = 24} , self = 37 , parent = Nothing
| | | F      , duration = 0.218076540000 , status = Fail , start = 2025-09-03 12:02:32.782729807
| | | F      UTC , finish = 2025-09-03 12:02:33.000806347 UTC , thread_cap_info = ("ThreadId
| | | F      43", 3, False)}
| | | F      
| | | | F    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | F    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | F    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | F    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | F    = Size { num_rules = 3 , num_strict_rules = 3 , num_top_rules = 0 , num_weak_rules
| | | | F    = 0 , alphabet_size = 2 , total_length = 24} , self = 34 , parent = Nothing
| | | | F    , duration = 0.126750405000 , status = Fail , start = 2025-09-03 12:02:32.782735035
| | | | F    UTC , finish = 2025-09-03 12:02:32.90948544 UTC , thread_cap_info = ("ThreadId
| | | | F    45", 3, False)}
| | | | F    
| | | | | F  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | F  = 12 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | | F  = 120} , self = 55 , parent = Nothing , duration = 0.160642435000 , status
| | | | | F  = Fail , start = 2025-09-03 12:02:32.893248498 UTC , finish = 2025-09-03
| | | | | F  12:02:33.053890933 UTC , thread_cap_info = ("ThreadId 71", 0, False)}
| | | | | F  
| | | | F |  
| | | | F |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F |  = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | F |  = 12 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | F |  = 120} , self = 45 , parent = Nothing , duration = 0.121895267000 , status
| | | | F |  = Fail , start = 2025-09-03 12:02:32.913254192 UTC , finish = 2025-09-03
| | | | F |  12:02:33.035149459 UTC , thread_cap_info = ("ThreadId 73", 0, False)}
| | | | F |  
F | | | | |  
  | | F | |  
  | F   | |  
E |     | |  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E |     | |  , closure = Forward\n , start_strict_only = True\n , max_closure_length
E |     | |  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
E |     | |  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
E |     | |  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
E |     | |  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
E |     | |  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
E |     | |  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E |     | |  = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
E |     | |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
E |     | |  = 24} , self = 89 , parent = Nothing , duration = 4.980003544000 , status
E |     | |  = Except "AsyncCancelled" , start = 2025-09-03 12:02:33.033254962 UTC ,
E |     | |  finish = 2025-09-03 12:02:38.013258506 UTC , thread_cap_info = ("ThreadId
E |     | |  80", 0, False)}
E |     | |  
| |     F |  
| F       |  
|         F  
| F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F          = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| F          = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| F          = 48} , self = 67 , parent = Nothing , duration = 0.174180379000 , status
| F          = Fail , start = 2025-09-03 12:02:33.109100936 UTC , finish = 2025-09-03
| F          12:02:33.283281315 UTC , thread_cap_info = ("ThreadId 99", 3, False)}
| F          
| | F        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F        = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | F        = 4 , total_length = 48} , self = 68 , parent = Nothing , duration = 0.168988107000
| | F        , status = Fail , start = 2025-09-03 12:02:33.12450865 UTC , finish = 2025-09-03
| | F        12:02:33.293496757 UTC , thread_cap_info = ("ThreadId 104", 3, False)}
| | F        
| | | F      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | F      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | F      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | F      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | F      , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | F      = 4 , total_length = 48} , self = 71 , parent = Nothing , duration = 1.646486062000
| | | F      , status = Fail , start = 2025-09-03 12:02:33.133259348 UTC , finish =
| | | F      2025-09-03 12:02:34.77974541 UTC , thread_cap_info = ("ThreadId 105", 3,
| | | F      False)}
| | | F      
| | | | F    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F    = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | | F    = 4 , total_length = 48} , self = 69 , parent = Nothing , duration = 0.368215495000
| | | | F    , status = Fail , start = 2025-09-03 12:02:33.193803172 UTC , finish =
| | | | F    2025-09-03 12:02:33.562018667 UTC , thread_cap_info = ("ThreadId 108",
| | | | F    3, False)}
| | | | F    
| F | | |    
|   F | |    
| F   | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| F   | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| F   | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| F   | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F   | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F   | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| F   | |    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| F   | |    = 4 , total_length = 48} , self = 73 , parent = Nothing , duration = 2.162461916000
| F   | |    , status = Fail , start = 2025-09-03 12:02:33.313743877 UTC , finish =
| F   | |    2025-09-03 12:02:35.476205793 UTC , thread_cap_info = ("ThreadId 111",
| F   | |    3, False)}
| F   | |    
| | F | |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | F | |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | F | |    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | F | |    = 4 , total_length = 48} , self = 70 , parent = Nothing , duration = 1.371069831000
| | F | |    , status = Fail , start = 2025-09-03 12:02:33.33497683 UTC , finish = 2025-09-03
| | F | |    12:02:34.706046661 UTC , thread_cap_info = ("ThreadId 112", 3, False)}
| | F | |    
| | | | F    
| | | | F    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | F    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | F    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | F    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | F    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | | F    = 4 , total_length = 48} , self = 72 , parent = Nothing , duration = 1.535989715000
| | | | F    , status = Fail , start = 2025-09-03 12:02:33.563097877 UTC , finish =
| | | | F    2025-09-03 12:02:35.099087592 UTC , thread_cap_info = ("ThreadId 116",
| | | | F    3, False)}
| | | | F    
| | F | |    
| | F | |    Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | F | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | |    = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | F | |    = 4 , total_length = 48} , self = 74 , parent = Nothing , duration = 1.263552936000
| | F | |    , status = Fail , start = 2025-09-03 12:02:34.732033618 UTC , finish =
| | F | |    2025-09-03 12:02:35.995586554 UTC , thread_cap_info = ("ThreadId 119",
| | F | |    3, False)}
| | F | |    
| | | F |    
| | | E |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | E |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | E |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | E |    , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | E |    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | E |    = 4 , total_length = 48} , self = 80 , parent = Nothing , duration = 3.022837884000
| | | E |    , status = Except "AsyncCancelled" , start = 2025-09-03 12:02:34.833275948
| | | E |    UTC , finish = 2025-09-03 12:02:37.856113832 UTC , thread_cap_info = ("ThreadId
| | | E |    120", 3, False)}
| | | E |    
| | | | F    
| | | | F    Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F    = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | | F    = 4 , total_length = 48} , self = 75 , parent = Nothing , duration = 1.186672986000
| | | | F    , status = Fail , start = 2025-09-03 12:02:35.174473058 UTC , finish =
| | | | F    2025-09-03 12:02:36.361146044 UTC , thread_cap_info = ("ThreadId 121",
| | | | F    3, False)}
| | | | F    
| F | | |    
| E | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| E | | |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| E | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| E | | |    , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| E | | |    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| E | | |    = 4 , total_length = 48} , self = 82 , parent = Nothing , duration = 2.361615119000
| E | | |    , status = Except "AsyncCancelled" , start = 2025-09-03 12:02:35.53437662
| E | | |    UTC , finish = 2025-09-03 12:02:37.895991739 UTC , thread_cap_info = ("ThreadId
| E | | |    123", 3, False)}
| E | | |    
| | F | |    
| | S | |    Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
| | S | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S | |    = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | S | |    = 4 , total_length = 48} , self = 76 , parent = Nothing , duration = 1.710451867000
| | S | |    , status = Success , start = 2025-09-03 12:02:36.054388771 UTC , finish
| | S | |    = 2025-09-03 12:02:37.764840638 UTC , thread_cap_info = ("ThreadId 126",
| | S | |    3, False)}
| | S | |    
| | | | F    
| | | | S    Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
| | | | S    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S    = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | | S    = 4 , total_length = 48} , self = 78 , parent = Nothing , duration = 1.431097835000
| | | | S    , status = Success , start = 2025-09-03 12:02:36.413263081 UTC , finish
| | | | S    = 2025-09-03 12:02:37.844360916 UTC , thread_cap_info = ("ThreadId 128",
| | | | S    3, False)}
| | | | S    
| | S | |    
| |   | S    
| |   E      
| E          
E            
