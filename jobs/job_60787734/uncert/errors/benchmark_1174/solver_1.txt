last 362 length 1407
last 458 length 1770
CNF 362 vars 1407 clauses
last 513 length 2006
last 508 length 1974
CNF 458 vars 1770 clauses
CNF 513 vars 2006 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2018, clauses: 7182
last 2018 length 7182
CNF 508 vars 1974 clauses
CNF 2018 vars 7182 clauses
last 4114 length 18352
last 4666 length 23517
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2506, clauses: 8887
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2018, clauses: 7182, status: Unsatisfied, time: 0.107943887s
CNF 4114 vars 18352 clauses
CNF 4666 vars 23517 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5920, clauses: 24403
last 2506 length 8887
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7459, clauses: 30819
last 5969 length 24264
last 7781 length 32161
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3815, clauses: 14906
last 5920 length 24403
last 7459 length 30819
CNF 2506 vars 8887 clauses
last 3815 length 14906
CNF 7781 vars 32161 clauses
CNF 5920 vars 24403 clauses
CNF 5969 vars 24264 clauses
CNF 7459 vars 30819 clauses
CNF 3815 vars 14906 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2506, clauses: 8887, status: Unsatisfied, time: 0.275611895s
last 9162 length 42042
last 12006 length 50963
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4743, clauses: 18529
last 4743 length 18529
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3815, clauses: 14906, status: Unsatisfied, time: 0.310060334s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5920, clauses: 24403, status: Unsatisfied, time: 0.316681959s
CNF 12006 vars 50963 clauses
CNF 4743 vars 18529 clauses
CNF 9162 vars 42042 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3292, clauses: 12451
last 3292 length 12451
CNF 3292 vars 12451 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10516, clauses: 42269
last 10516 length 42269
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4743, clauses: 18529, status: Unsatisfied, time: 0.401542241s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3292, clauses: 12451, status: Unsatisfied, time: 0.245674246s
CNF 10516 vars 42269 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4081, clauses: 15270
last 4081 length 15270
CNF 4081 vars 15270 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6123, clauses: 22936
last 6123 length 22936
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7459, clauses: 30819, status: Unsatisfied, time: 0.931012034s
CNF 6123 vars 22936 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4081, clauses: 15270, status: Unsatisfied, time: 0.251959383s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15438, clauses: 59333
last 15438 length 59333
CNF 15438 vars 59333 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13073, clauses: 52328
last 13073 length 52328
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7625, clauses: 28264
last 7625 length 28264
CNF 13073 vars 52328 clauses
CNF 7625 vars 28264 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6123, clauses: 22936, status: Unsatisfied, time: 0.941038009s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20067, clauses: 78869
last 20067 length 78869
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 42887, clauses: 179414
last 42887 length 179414
CNF 20067 vars 78869 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7625, clauses: 28264, status: Unsatisfied, time: 1.311996182s
CNF 42887 vars 179414 clauses
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12748, clauses: 58883
last 12748 length 58883
CNF 12748 vars 58883 clauses
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15863, clauses: 73623
last 15863 length 73623
CNF 15863 vars 73623 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 49930, clauses: 208684
last 49930 length 208684
CNF 49930 vars 208684 clauses
[Info] pool sizes (success) 122816 seen 45114 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
**************************************************
summary
**************************************************
SRS with 4 rules on 3 letters       looping derivation
from
  [c, a, c, a, c, c, a, b, b]
to
  [c, a, c, a, c, c, a, b, b, c, a, c]
via 23 steps

**************************************************
proof
**************************************************
property Termination
has value Just False
for SRS
  [a] -> [] {- Input 0 -}
  [a, b] -> [b, b, c, a] {- Input 1 -}
  [b] -> [] {- Input 2 -}
  [c, c, b] -> [a] {- Input 3 -}
reason
  Nontermination
    Derive   { from = [c, a, c, a, c, c, a, b, b], via = [(Step   { rule = 1, position = 6}, [c, a, c, a, c, c, b, b, c, a, b]), (Step   { rule = 3, position = 4}, [c, a, c, a, a, b, c, a, b]), (Step   { rule = 1, position = 4}, [c, a, c, a, b, b, c, a, c, a, b]), (Step   { rule = 0, position = 7}, [c, a, c, a, b, b, c, c, a, b]), (Step   { rule = 1, position = 3}, [c, a, c, b, b, c, a, b, c, c, a, b]), (Step   { rule = 2, position = 3}, [c, a, c, b, c, a, b, c, c, a, b]), (Step   { rule = 2, position = 3}, [c, a, c, c, a, b, c, c, a, b]), (Step   { rule = 1, position = 4}, [c, a, c, c, b, b, c, a, c, c, a, b]), (Step   { rule = 3, position = 2}, [c, a, a, b, c, a, c, c, a, b]), (Step   { rule = 1, position = 2}, [c, a, b, b, c, a, c, a, c, c, a, b]), (Step   { rule = 0, position = 5}, [c, a, b, b, c, c, a, c, c, a, b]), (Step   { rule = 1, position = 1}, [c, b, b, c, a, b, c, c, a, c, c, a, b]), (Step   { rule = 2, position = 1}, [c, b, c, a, b, c, c, a, c, c, a, b]), (Step   { rule = 2, position = 1}, [c, c, a, b, c, c, a, c, c, a, b]), (Step   { rule = 1, position = 2}, [c, c, b, b, c, a, c, c, a, c, c, a, b]), (Step   { rule = 3, position = 0}, [a, b, c, a, c, c, a, c, c, a, b]), (Step   { rule = 1, position = 0}, [b, b, c, a, c, a, c, c, a, c, c, a, b]), (Step   { rule = 2, position = 0}, [b, c, a, c, a, c, c, a, c, c, a, b]), (Step   { rule = 2, position = 0}, [c, a, c, a, c, c, a, c, c, a, b]), (Step   { rule = 1, position = 9}, [c, a, c, a, c, c, a, c, c, b, b, c, a]), (Step   { rule = 3, position = 7}, [c, a, c, a, c, c, a, a, b, c, a]), (Step   { rule = 0, position = 10}, [c, a, c, a, c, c, a, a, b, c]), (Step   { rule = 1, position = 7}, [c, a, c, a, c, c, a, b, b, c, a, c])], to = [c, a, c, a, c, c, a, b, b, c, a, c]}

**************************************************
skeleton: (4,3)\Loop{23}[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.530147806000
  min duration 0.043504704000
  total durat. 1.298081060000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.610705418000
  min duration 0.006291555000
  total durat. 1.360014785000
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.186191874000
  min duration 0.620358380000
  total durat. 1.806550254000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 8
      , alphabet_size = 5
      , total_length = 39}
    , self = 91
    , parent = Nothing
    , duration = 1.186191874000
    , status = Fail
    , start = 2025-09-03 11:09:33.451610191 UTC
    , finish = 2025-09-03 11:09:34.637802065 UTC
    , thread_cap_info = ("ThreadId 105", 3, False)}
Fail : "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.802648265000
  min duration 1.143215875000
  total durat. 2.945864140000
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 8
      , alphabet_size = 4
      , total_length = 35}
    , self = 93
    , parent = Nothing
    , duration = 1.143215875000
    , status = Fail
    , start = 2025-09-03 11:09:34.41956931 UTC
    , finish = 2025-09-03 11:09:35.562785185 UTC
    , thread_cap_info = ("ThreadId 146", 3, False)}
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 8
      , alphabet_size = 5
      , total_length = 39}
    , self = 94
    , parent = Nothing
    , duration = 1.802648265000
    , status = Fail
    , start = 2025-09-03 11:09:34.845466651 UTC
    , finish = 2025-09-03 11:09:36.648114916 UTC
    , thread_cap_info = ("ThreadId 150", 3, False)}
Success : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 8.305423073000
  min duration 8.305423073000
  total durat. 8.305423073000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 95
    , parent = Nothing
    , duration = 8.305423073000
    , status = Success
    , start = 2025-09-03 11:09:33.299860861 UTC
    , finish = 2025-09-03 11:09:41.605283934 UTC
    , thread_cap_info = ("ThreadId 51", 2, False)}
**************************************************
F                      Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                      , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                      = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                      , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                      = False}" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
F                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F                      = 12} , self = 64 , parent = Nothing , duration = 0.159873545000 , status
F                      = Fail , start = 2025-09-03 11:09:33.29983154 UTC , finish = 2025-09-03
F                      11:09:33.459705085 UTC , thread_cap_info = ("ThreadId 22", 2, False)}
F                      
| S                    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| S                    , closure = Forward\n , start_strict_only = True\n , max_closure_length
| S                    = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| S                    Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| S                    8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| S                    = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| S                    ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| S                    1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| S                    = True})" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
| S                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| S                    = 12} , self = 95 , parent = Nothing , duration = 8.305423073000 , status
| S                    = Success , start = 2025-09-03 11:09:33.299860861 UTC , finish = 2025-09-03
| S                    11:09:41.605283934 UTC , thread_cap_info = ("ThreadId 51", 2, False)}
| S                    
| | F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | F                  = 36 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F                  = 180} , self = 80 , parent = Nothing , duration = 0.392709701000 , status
| | F                  = Fail , start = 2025-09-03 11:09:33.308037123 UTC , finish = 2025-09-03
| | F                  11:09:33.700746824 UTC , thread_cap_info = ("ThreadId 71", 1, False)}
| | F                  
| | | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | | F                = 36 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | F                = 180} , self = 81 , parent = Nothing , duration = 0.397781793000 , status
| | | F                = Fail , start = 2025-09-03 11:09:33.308045499 UTC , finish = 2025-09-03
| | | F                11:09:33.705827292 UTC , thread_cap_info = ("ThreadId 73", 1, False)}
| | | F                
| | | | F              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | F              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | F              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | F              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | F              = Size { num_rules = 36 , num_strict_rules = 36 , num_top_rules = 0 , num_weak_rules
| | | | F              = 0 , alphabet_size = 9 , total_length = 180} , self = 65 , parent = Nothing
| | | | F              , duration = 0.191335311000 , status = Fail , start = 2025-09-03 11:09:33.317975794
| | | | F              UTC , finish = 2025-09-03 11:09:33.509311105 UTC , thread_cap_info = ("ThreadId
| | | | F              63", 0, False)}
| | | | F              
| | | | | F            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F            = 10 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 ,
| | | | | F            alphabet_size = 4 , total_length = 35} , self = 79 , parent = Nothing ,
| | | | | F            duration = 0.289594032000 , status = Fail , start = 2025-09-03 11:09:33.368155463
| | | | | F            UTC , finish = 2025-09-03 11:09:33.657749495 UTC , thread_cap_info = ("ThreadId
| | | | | F            94", 3, False)}
| | | | | F            
| | | | | | F          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | F          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | F          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | F          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | F          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | F          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | | | F          , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size
| | | | | | F          = 4 , total_length = 35} , self = 86 , parent = Nothing , duration = 0.620358380000
| | | | | | F          , status = Fail , start = 2025-09-03 11:09:33.39807889 UTC , finish = 2025-09-03
| | | | | | F          11:09:34.01843727 UTC , thread_cap_info = ("ThreadId 99", 3, False)}
| | | | | | F          
| | | | | | | F        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | F        = 11 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 8 ,
| | | | | | | F        alphabet_size = 5 , total_length = 39} , self = 83 , parent = Nothing ,
| | | | | | | F        duration = 0.365125979000 , status = Fail , start = 2025-09-03 11:09:33.438183405
| | | | | | | F        UTC , finish = 2025-09-03 11:09:33.803309384 UTC , thread_cap_info = ("ThreadId
| | | | | | | F        102", 3, False)}
| | | | | | | F        
| | | | | | | | F      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | F      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | F      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | F      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | F      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | F      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| | | | | | | | F      , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 8 , alphabet_size
| | | | | | | | F      = 5 , total_length = 39} , self = 91 , parent = Nothing , duration = 1.186191874000
| | | | | | | | F      , status = Fail , start = 2025-09-03 11:09:33.451610191 UTC , finish =
| | | | | | | | F      2025-09-03 11:09:34.637802065 UTC , thread_cap_info = ("ThreadId 105",
| | | | | | | | F      3, False)}
| | | | | | | | F      
F | | | | | | | |      
  | | | F | | | |      
F | | |   | | | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F | | |   | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | |   | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 74 , num_strict_rules
F | | |   | | | |      = 38 , num_top_rules = 38 , num_weak_rules = 36 , alphabet_size = 14 ,
F | | |   | | | |      total_length = 363} , self = 84 , parent = Nothing , duration = 0.280043863000
F | | |   | | | |      , status = Fail , start = 2025-09-03 11:09:33.527066943 UTC , finish =
F | | |   | | | |      2025-09-03 11:09:33.807110806 UTC , thread_cap_info = ("ThreadId 120",
F | | |   | | | |      1, False)}
F | | |   | | | |      
| | | | F | | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 98 , num_strict_rules
| | | | F | | | |      = 62 , num_top_rules = 62 , num_weak_rules = 36 , alphabet_size = 17 ,
| | | | F | | | |      total_length = 495} , self = 87 , parent = Nothing , duration = 0.530147806000
| | | | F | | | |      , status = Fail , start = 2025-09-03 11:09:33.530694603 UTC , finish =
| | | | F | | | |      2025-09-03 11:09:34.060842409 UTC , thread_cap_info = ("ThreadId 122",
| | | | F | | | |      0, False)}
| | | | F | | | |      
| | | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 98 , num_strict_rules
| | | | | | | | | F    = 62 , num_top_rules = 62 , num_weak_rules = 36 , alphabet_size = 17 ,
| | | | | | | | | F    total_length = 495} , self = 88 , parent = Nothing , duration = 0.610705418000
| | | | | | | | | F    , status = Fail , start = 2025-09-03 11:09:33.530698013 UTC , finish =
| | | | | | | | | F    2025-09-03 11:09:34.141403431 UTC , thread_cap_info = ("ThreadId 123",
| | | | | | | | | F    0, False)}
| | | | | | | | | F    
| | | | | | | | | | F  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 74 , num_strict_rules
| | | | | | | | | | F  = 38 , num_top_rules = 38 , num_weak_rules = 36 , alphabet_size = 14 ,
| | | | | | | | | | F  total_length = 363} , self = 82 , parent = Nothing , duration = 0.244633260000
| | | | | | | | | | F  , status = Fail , start = 2025-09-03 11:09:33.537745937 UTC , finish =
| | | | | | | | | | F  2025-09-03 11:09:33.782379197 UTC , thread_cap_info = ("ThreadId 119",
| | | | | | | | | | F  1, False)}
| | | | | | | | | | F  
| | | | | F | | | | |  
| | | | | F | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | F | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | F | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | F | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | | F | | | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 , alphabet_size
| | | | | F | | | | |  = 4 , total_length = 35} , self = 85 , parent = Nothing , duration = 0.354738709000
| | | | | F | | | | |  , status = Fail , start = 2025-09-03 11:09:33.663596214 UTC , finish =
| | | | | F | | | | |  2025-09-03 11:09:34.018334923 UTC , thread_cap_info = ("ThreadId 124",
| | | | | F | | | | |  3, False)}
| | | | | F | | | | |  
| | F | | | | | | | |  
| |   F | | | | | | |  
| |     | | | | | | F  
| |     | | | F | |    
F |     | | |   | |    
F |     | | |   | |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
F |     | | |   | |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F |     | | |   | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F |     | | |   | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F |     | | |   | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F |     | | |   | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
F |     | | |   | |    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 8 , alphabet_size
F |     | | |   | |    = 5 , total_length = 39} , self = 89 , parent = Nothing , duration = 0.580085203000
F |     | | |   | |    , status = Fail , start = 2025-09-03 11:09:33.821017343 UTC , finish =
F |     | | |   | |    2025-09-03 11:09:34.401102546 UTC , thread_cap_info = ("ThreadId 134",
F |     | | |   | |    3, False)}
F |     | | |   | |    
| |     | F |   | |    
| |     |   F   | |    
| | F   |       | |    Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | F   |       | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F   |       | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F   |       | |    = 10 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 ,
| | F   |       | |    alphabet_size = 4 , total_length = 35} , self = 90 , parent = Nothing ,
| | F   |       | |    duration = 0.370360406000 , status = Fail , start = 2025-09-03 11:09:34.030766398
| | F   |       | |    UTC , finish = 2025-09-03 11:09:34.401126804 UTC , thread_cap_info = ("ThreadId
| | F   |       | |    139", 3, False)}
| | F   |       | |    
| | |   F       | |    
| | |           | F    
F | |           |      
  | F           |      
F |             |      Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
F |             |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F |             |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F |             |      = 11 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 8 ,
F |             |      alphabet_size = 5 , total_length = 39} , self = 92 , parent = Nothing ,
F |             |      duration = 0.408926084000 , status = Fail , start = 2025-09-03 11:09:34.409486775
F |             |      UTC , finish = 2025-09-03 11:09:34.818412859 UTC , thread_cap_info = ("ThreadId
F |             |      145", 3, False)}
F |             |      
| | F           |      Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
| | F           |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F           |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F           |      = 10 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 8 ,
| | F           |      alphabet_size = 4 , total_length = 35} , self = 93 , parent = Nothing ,
| | F           |      duration = 1.143215875000 , status = Fail , start = 2025-09-03 11:09:34.41956931
| | F           |      UTC , finish = 2025-09-03 11:09:35.562785185 UTC , thread_cap_info = ("ThreadId
| | F           |      146", 3, False)}
| | F           |      
| | |           F      
F | |                  
F | |                  Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
F | |                  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | |                  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | |                  = 11 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 8 ,
F | |                  alphabet_size = 5 , total_length = 39} , self = 94 , parent = Nothing ,
F | |                  duration = 1.802648265000 , status = Fail , start = 2025-09-03 11:09:34.845466651
F | |                  UTC , finish = 2025-09-03 11:09:36.648114916 UTC , thread_cap_info = ("ThreadId
F | |                  150", 3, False)}
F | |                  
| | F                  
F |                    
  S                    
