**************************************************
summary
**************************************************
SRS with 1 rules on 2 letters       Drop
SRS with 1 rules on 2 letters       mirror
SRS with 1 rules on 2 letters       Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 2 certified by automaton with 174 states

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, b, b, a, b, a, b, b, a, b] -> [ b , b , a , b , a , b , b , b , a , b , a , b , b ] {- Input 0 -}
reason
  Drop
    property Termination
    has value Just True
    for SRS
      [b, b, b, a, b, a, b, b, a] -> [ b , b , a , b , a , b , b , b , a , b , a , b ] {- Dropped 0 1 (Input 0) -}
    reason
      mirror
       property Termination
    has value Just True
    for SRS
      [a, b, b, a, b, a, b, b, b] -> [ b , a , b , a , b , b , b , a , b , a , b , b ] {- Mirror (Dropped 0 1 (Input 0)) -}
    reason
      Matchbound
        Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 2 certified by automaton with 174 states

   property Termination
has value Just True
for SRS
  [b, b, b, a, b, a, b, b, a] -> [ b , b , a , b , a , b , b , b , a , b , a , b ] {- Dropped 0 1 (Input 0) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, b, b, a, b, a, b, b, b] -> [ b , a , b , a , b , b , b , a , b , a , b , b ] {- Mirror (Dropped 0 1 (Input 0)) -}
reason
  Matchbound
    Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 2 certified by automaton with 174 states

**************************************************
skeleton: (1,2)\Drop{0}{1}\Mirror(1,2)\Rfcmatchbound{2}[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 4
  max duration 1.632923634000
  min duration 0.231870336000
  total durat. 4.014300843000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 23}
    , self = 82
    , parent = Nothing
    , duration = 1.596591091000
    , status = Fail
    , start = 2025-09-03 10:50:15.614013253 UTC
    , finish = 2025-09-03 10:50:17.210604344 UTC
    , thread_cap_info = ("ThreadId 169", 3, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 78
    , parent = Nothing
    , duration = 1.632923634000
    , status = Fail
    , start = 2025-09-03 10:50:15.382612716 UTC
    , finish = 2025-09-03 10:50:17.01553635 UTC
    , thread_cap_info = ("ThreadId 127", 3, False)}
Except "AsyncCancelled" : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 3
  max duration 1.559936923000
  min duration 1.179982849000
  total durat. 4.117325491000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 75
    , parent = Nothing
    , duration = 1.179982849000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:50:15.541876986 UTC
    , finish = 2025-09-03 10:50:16.721859835 UTC
    , thread_cap_info = ("ThreadId 158", 3, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 76
    , parent = Nothing
    , duration = 1.377405719000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:50:15.404460011 UTC
    , finish = 2025-09-03 10:50:16.78186573 UTC
    , thread_cap_info = ("ThreadId 137", 3, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 17}
    , self = 81
    , parent = Nothing
    , duration = 1.559936923000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:50:15.58192312 UTC
    , finish = 2025-09-03 10:50:17.141860043 UTC
    , thread_cap_info = ("ThreadId 166", 3, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 4
  max duration 2.398028207000
  min duration 2.140009012000
  total durat. 9.038283385000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 94
    , parent = Nothing
    , duration = 2.140009012000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:50:15.881863129 UTC
    , finish = 2025-09-03 10:50:18.021872141 UTC
    , thread_cap_info = ("ThreadId 181", 3, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 93
    , parent = Nothing
    , duration = 2.199997220000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:50:15.821868848 UTC
    , finish = 2025-09-03 10:50:18.021866068 UTC
    , thread_cap_info = ("ThreadId 179", 3, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 92
    , parent = Nothing
    , duration = 2.300248946000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:50:15.702116526 UTC
    , finish = 2025-09-03 10:50:18.002365472 UTC
    , thread_cap_info = ("ThreadId 177", 3, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 90
    , parent = Nothing
    , duration = 2.398028207000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:50:15.483951629 UTC
    , finish = 2025-09-03 10:50:17.881979836 UTC
    , thread_cap_info = ("ThreadId 152", 3, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 6
  max duration 2.040160985000
  min duration 1.479673882000
  total durat. 10.705973334000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 17}
    , self = 89
    , parent = Nothing
    , duration = 1.479673882000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:50:16.342321695 UTC
    , finish = 2025-09-03 10:50:17.821995577 UTC
    , thread_cap_info = ("ThreadId 189", 3, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 83
    , parent = Nothing
    , duration = 1.748742609000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:50:15.461876779 UTC
    , finish = 2025-09-03 10:50:17.210619388 UTC
    , thread_cap_info = ("ThreadId 151", 3, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 87
    , parent = Nothing
    , duration = 1.759992925000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:50:15.861875595 UTC
    , finish = 2025-09-03 10:50:17.62186852 UTC
    , thread_cap_info = ("ThreadId 180", 3, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 86
    , parent = Nothing
    , duration = 1.797394585000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:50:15.804472933 UTC
    , finish = 2025-09-03 10:50:17.601867518 UTC
    , thread_cap_info = ("ThreadId 178", 3, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 85
    , parent = Nothing
    , duration = 1.880008348000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:50:15.68188097 UTC
    , finish = 2025-09-03 10:50:17.561889318 UTC
    , thread_cap_info = ("ThreadId 176", 3, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 23}
    , self = 91
    , parent = Nothing
    , duration = 2.040160985000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:50:15.941868038 UTC
    , finish = 2025-09-03 10:50:17.982029023 UTC
    , thread_cap_info = ("ThreadId 184", 3, False)}
Except "AsyncCancelled" : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = False}"
  total number 6
  max duration 2.331133734000
  min duration 1.226565543000
  total durat. 10.646232994000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 74
    , parent = Nothing
    , duration = 1.226565543000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:50:15.235302361 UTC
    , finish = 2025-09-03 10:50:16.461867904 UTC
    , thread_cap_info = ("ThreadId 55", 3, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 79
    , parent = Nothing
    , duration = 1.712032841000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:50:15.30982822 UTC
    , finish = 2025-09-03 10:50:17.021861061 UTC
    , thread_cap_info = ("ThreadId 100", 3, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 77
    , parent = Nothing
    , duration = 1.719042850000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:50:15.243306139 UTC
    , finish = 2025-09-03 10:50:16.962348989 UTC
    , thread_cap_info = ("ThreadId 63", 3, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 80
    , parent = Nothing
    , duration = 1.737474028000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:50:15.322637569 UTC
    , finish = 2025-09-03 10:50:17.060111597 UTC
    , thread_cap_info = ("ThreadId 106", 3, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 17}
    , self = 84
    , parent = Nothing
    , duration = 1.919983998000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:50:15.421876772 UTC
    , finish = 2025-09-03 10:50:17.34186077 UTC
    , thread_cap_info = ("ThreadId 139", 3, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 23}
    , self = 88
    , parent = Nothing
    , duration = 2.331133734000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:50:15.350728629 UTC
    , finish = 2025-09-03 10:50:17.681862363 UTC
    , thread_cap_info = ("ThreadId 114", 3, False)}
**************************************************
F                                          Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                                          , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                                          = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                                          , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                                          = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
F                                          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F                                          = 23} , self = 57 , parent = Nothing , duration = 0.264783648000 , status
F                                          = Fail , start = 2025-09-03 10:50:15.234519352 UTC , finish = 2025-09-03
F                                          10:50:15.499303 UTC , thread_cap_info = ("ThreadId 22", 2, False)}
F                                          
| E                                        Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| E                                        , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| E                                        = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| E                                        , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| E                                        = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| E                                        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| E                                        = 21} , self = 74 , parent = Nothing , duration = 1.226565543000 , status
| E                                        = Except "AsyncCancelled" , start = 2025-09-03 10:50:15.235302361 UTC ,
| E                                        finish = 2025-09-03 10:50:16.461867904 UTC , thread_cap_info = ("ThreadId
| E                                        55", 3, False)}
| E                                        
| | E                                      Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | E                                      , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | E                                      = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | E                                      , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | E                                      = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | E                                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | E                                      = 21} , self = 77 , parent = Nothing , duration = 1.719042850000 , status
| | E                                      = Except "AsyncCancelled" , start = 2025-09-03 10:50:15.243306139 UTC ,
| | E                                      finish = 2025-09-03 10:50:16.962348989 UTC , thread_cap_info = ("ThreadId
| | E                                      63", 3, False)}
| | E                                      
| | | F                                    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | F                                    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | F                                    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | F                                    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | F                                    = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | F                                    = 0 , alphabet_size = 2 , total_length = 21} , self = 58 , parent = Nothing
| | | F                                    , duration = 0.231870336000 , status = Fail , start = 2025-09-03 10:50:15.281931675
| | | F                                    UTC , finish = 2025-09-03 10:50:15.513802011 UTC , thread_cap_info = ("ThreadId
| | | F                                    90", 3, False)}
| | | F                                    
| | | | E                                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | E                                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | E                                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | E                                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | E                                  = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | E                                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | E                                  = 19} , self = 79 , parent = Nothing , duration = 1.712032841000 , status
| | | | E                                  = Except "AsyncCancelled" , start = 2025-09-03 10:50:15.30982822 UTC ,
| | | | E                                  finish = 2025-09-03 10:50:17.021861061 UTC , thread_cap_info = ("ThreadId
| | | | E                                  100", 3, False)}
| | | | E                                  
| | | | | E                                Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | E                                , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | E                                = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | E                                , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | E                                = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | E                                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | E                                = 19} , self = 80 , parent = Nothing , duration = 1.737474028000 , status
| | | | | E                                = Except "AsyncCancelled" , start = 2025-09-03 10:50:15.322637569 UTC ,
| | | | | E                                finish = 2025-09-03 10:50:17.060111597 UTC , thread_cap_info = ("ThreadId
| | | | | E                                106", 3, False)}
| | | | | E                                
| | | | | | E                              Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | E                              , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | E                              = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | E                              , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | E                              = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | E                              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | E                              = 23} , self = 88 , parent = Nothing , duration = 2.331133734000 , status
| | | | | | E                              = Except "AsyncCancelled" , start = 2025-09-03 10:50:15.350728629 UTC ,
| | | | | | E                              finish = 2025-09-03 10:50:17.681862363 UTC , thread_cap_info = ("ThreadId
| | | | | | E                              114", 3, False)}
| | | | | | E                              
| | | | | | | F                            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | F                            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | F                            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | F                            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | F                            = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | F                            = 0 , alphabet_size = 2 , total_length = 21} , self = 78 , parent = Nothing
| | | | | | | F                            , duration = 1.632923634000 , status = Fail , start = 2025-09-03 10:50:15.382612716
| | | | | | | F                            UTC , finish = 2025-09-03 10:50:17.01553635 UTC , thread_cap_info = ("ThreadId
| | | | | | | F                            127", 3, False)}
| | | | | | | F                            
| | | | | | | | E                          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | E                          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | E                          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | E                          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | E                          = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | E                          = 0 , alphabet_size = 2 , total_length = 19} , self = 76 , parent = Nothing
| | | | | | | | E                          , duration = 1.377405719000 , status = Except "AsyncCancelled" , start
| | | | | | | | E                          = 2025-09-03 10:50:15.404460011 UTC , finish = 2025-09-03 10:50:16.78186573
| | | | | | | | E                          UTC , thread_cap_info = ("ThreadId 137", 3, False)}
| | | | | | | | E                          
| | | | | | | | | E                        Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | | E                        , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | | E                        = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | | E                        , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | | E                        = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | E                        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | E                        = 17} , self = 84 , parent = Nothing , duration = 1.919983998000 , status
| | | | | | | | | E                        = Except "AsyncCancelled" , start = 2025-09-03 10:50:15.421876772 UTC ,
| | | | | | | | | E                        finish = 2025-09-03 10:50:17.34186077 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | E                        139", 3, False)}
| | | | | | | | | E                        
| | | | | | | | | | F                      Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | F                      , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | F                      = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | F                      False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | F                      = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | F                      = 0 , alphabet_size = 2 , total_length = 23} , self = 73 , parent = Nothing
| | | | | | | | | | F                      , duration = 0.552915782000 , status = Fail , start = 2025-09-03 10:50:15.441925737
| | | | | | | | | | F                      UTC , finish = 2025-09-03 10:50:15.994841519 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | F                      149", 3, False)}
| | | | | | | | | | F                      
| | | | | | | | | | | E                    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | E                    , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | E                    = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | E                    , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | E                    max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | E                    [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | E                    string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | E                    , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | E                    = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | E                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | E                    = 21} , self = 83 , parent = Nothing , duration = 1.748742609000 , status
| | | | | | | | | | | E                    = Except "AsyncCancelled" , start = 2025-09-03 10:50:15.461876779 UTC ,
| | | | | | | | | | | E                    finish = 2025-09-03 10:50:17.210619388 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | E                    151", 3, False)}
| | | | | | | | | | | E                    
| | | | | | | | | | | | E                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | E                  , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | E                  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | E                  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | E                  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | E                  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | E                  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | E                  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | E                  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | E                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | E                  = 21} , self = 90 , parent = Nothing , duration = 2.398028207000 , status
| | | | | | | | | | | | E                  = Except "AsyncCancelled" , start = 2025-09-03 10:50:15.483951629 UTC ,
| | | | | | | | | | | | E                  finish = 2025-09-03 10:50:17.881979836 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | E                  152", 3, False)}
| | | | | | | | | | | | E                  
F | | | | | | | | | | | |                  
  | | F | | | | | | | | |                  
E | |   | | | | | | | | |                  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
E | |   | | | | | | | | |                  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
E | |   | | | | | | | | |                  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
E | |   | | | | | | | | |                  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
E | |   | | | | | | | | |                  = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
E | |   | | | | | | | | |                  = 0 , alphabet_size = 2 , total_length = 19} , self = 75 , parent = Nothing
E | |   | | | | | | | | |                  , duration = 1.179982849000 , status = Except "AsyncCancelled" , start
E | |   | | | | | | | | |                  = 2025-09-03 10:50:15.541876986 UTC , finish = 2025-09-03 10:50:16.721859835
E | |   | | | | | | | | |                  UTC , thread_cap_info = ("ThreadId 158", 3, False)}
E | |   | | | | | | | | |                  
| | | E | | | | | | | | |                  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | E | | | | | | | | |                  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | E | | | | | | | | |                  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | E | | | | | | | | |                  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | E | | | | | | | | |                  = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | E | | | | | | | | |                  = 0 , alphabet_size = 2 , total_length = 17} , self = 81 , parent = Nothing
| | | E | | | | | | | | |                  , duration = 1.559936923000 , status = Except "AsyncCancelled" , start
| | | E | | | | | | | | |                  = 2025-09-03 10:50:15.58192312 UTC , finish = 2025-09-03 10:50:17.141860043
| | | E | | | | | | | | |                  UTC , thread_cap_info = ("ThreadId 166", 3, False)}
| | | E | | | | | | | | |                  
| | | | | | | | | | | | | F                Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | F                , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | F                = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | F                False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | F                = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | F                = 0 , alphabet_size = 2 , total_length = 23} , self = 82 , parent = Nothing
| | | | | | | | | | | | | F                , duration = 1.596591091000 , status = Fail , start = 2025-09-03 10:50:15.614013253
| | | | | | | | | | | | | F                UTC , finish = 2025-09-03 10:50:17.210604344 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | F                169", 3, False)}
| | | | | | | | | | | | | F                
| | | | | | | | | | | | | | E              Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | E              , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | E              = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | E              , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | E              max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | E              [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | E              string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | E              , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | E              = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | E              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | E              = 21} , self = 85 , parent = Nothing , duration = 1.880008348000 , status
| | | | | | | | | | | | | | E              = Except "AsyncCancelled" , start = 2025-09-03 10:50:15.68188097 UTC ,
| | | | | | | | | | | | | | E              finish = 2025-09-03 10:50:17.561889318 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | E              176", 3, False)}
| | | | | | | | | | | | | | E              
| | | | | | | | | | | | | | | E            Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | E            , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | E            = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | E            , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | E            max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | E            [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | E            string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | E            , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | E            = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | E            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | E            = 21} , self = 92 , parent = Nothing , duration = 2.300248946000 , status
| | | | | | | | | | | | | | | E            = Except "AsyncCancelled" , start = 2025-09-03 10:50:15.702116526 UTC ,
| | | | | | | | | | | | | | | E            finish = 2025-09-03 10:50:18.002365472 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | E            177", 3, False)}
| | | | | | | | | | | | | | | E            
| | | | | | | | | | | | | | | | E          Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | E          , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | E          = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | E          , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | E          max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | E          [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | E          string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | E          , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | E          = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | E          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | E          = 19} , self = 86 , parent = Nothing , duration = 1.797394585000 , status
| | | | | | | | | | | | | | | | E          = Except "AsyncCancelled" , start = 2025-09-03 10:50:15.804472933 UTC ,
| | | | | | | | | | | | | | | | E          finish = 2025-09-03 10:50:17.601867518 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | E          178", 3, False)}
| | | | | | | | | | | | | | | | E          
| | | | | | | | | | | | | | | | | E        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | | E        , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | | E        = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | | E        , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | | E        max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | | E        [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | | E        string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | | E        , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | | E        = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | E        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | E        = 19} , self = 93 , parent = Nothing , duration = 2.199997220000 , status
| | | | | | | | | | | | | | | | | E        = Except "AsyncCancelled" , start = 2025-09-03 10:50:15.821868848 UTC ,
| | | | | | | | | | | | | | | | | E        finish = 2025-09-03 10:50:18.021866068 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | E        179", 3, False)}
| | | | | | | | | | | | | | | | | E        
| | | | | | | | | | | | | | | | | | E      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | | | E      , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | | | E      = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | | | E      , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | | | E      max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | | | E      [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | | | E      string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | | | E      , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | | | E      = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | | E      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | | E      = 19} , self = 87 , parent = Nothing , duration = 1.759992925000 , status
| | | | | | | | | | | | | | | | | | E      = Except "AsyncCancelled" , start = 2025-09-03 10:50:15.861875595 UTC ,
| | | | | | | | | | | | | | | | | | E      finish = 2025-09-03 10:50:17.62186852 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | E      180", 3, False)}
| | | | | | | | | | | | | | | | | | E      
| | | | | | | | | | | | | | | | | | | E    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | | | | E    , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | | | | E    = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | | | | E    , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | | | | E    max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | | | | E    [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | | | | E    string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | | | | E    , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | | | | E    = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | | | E    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | | | E    = 19} , self = 94 , parent = Nothing , duration = 2.140009012000 , status
| | | | | | | | | | | | | | | | | | | E    = Except "AsyncCancelled" , start = 2025-09-03 10:50:15.881863129 UTC ,
| | | | | | | | | | | | | | | | | | | E    finish = 2025-09-03 10:50:18.021872141 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | | E    181", 3, False)}
| | | | | | | | | | | | | | | | | | | E    
| | | | | | | | | | | | | | | | | | | | E  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | | | | | E  , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | | | | | E  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | | | | | E  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | | | | | E  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | | | | | E  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | | | | | E  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | | | | | E  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | | | | | E  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | | | | E  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | | | | E  = 23} , self = 91 , parent = Nothing , duration = 2.040160985000 , status
| | | | | | | | | | | | | | | | | | | | E  = Except "AsyncCancelled" , start = 2025-09-03 10:50:15.941868038 UTC ,
| | | | | | | | | | | | | | | | | | | | E  finish = 2025-09-03 10:50:17.982029023 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | | | E  184", 3, False)}
| | | | | | | | | | | | | | | | | | | | E  
| | | | | | | | | | F | | | | | | | | | |  
| | | | | | | | | | E | | | | | | | | | |  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | E | | | | | | | | | |  , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | E | | | | | | | | | |  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | E | | | | | | | | | |  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | E | | | | | | | | | |  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | E | | | | | | | | | |  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | E | | | | | | | | | |  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | E | | | | | | | | | |  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | E | | | | | | | | | |  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | E | | | | | | | | | |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | E | | | | | | | | | |  = 17} , self = 89 , parent = Nothing , duration = 1.479673882000 , status
| | | | | | | | | | E | | | | | | | | | |  = Except "AsyncCancelled" , start = 2025-09-03 10:50:16.342321695 UTC ,
| | | | | | | | | | E | | | | | | | | | |  finish = 2025-09-03 10:50:17.821995577 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | E | | | | | | | | | |  189", 3, False)}
| | | | | | | | | | E | | | | | | | | | |  
| E | | | | | | | | | | | | | | | | | | |  
E   | | | | | | | | | | | | | | | | | | |  
    | | | | | | E | | | | | | | | | | | |  
    E | | | | |   | | | | | | | | | | | |  
      | | | | F   | | | | | | | | | | | |  
      | E | |     | | | | | | | | | | | |  
      |   E |     | | | | | | | | | | | |  
      E     |     | | | | | | | | | | | |  
            |     | | | | F | | | | | | |  
            |     | | E |   | | | | | | |  
            |     E |   |   | | | | | | |  
            |       |   |   E | | | | | |  
            |       |   |     | E | | | |  
            |       |   |     |   | E | |  
            E       |   |     |   |   | |  
                    E   |     |   |   | |  
                        E     |   |   | |  
                              |   |   | E  
                              E   |   |    
                                  E   |    
                                      E    
