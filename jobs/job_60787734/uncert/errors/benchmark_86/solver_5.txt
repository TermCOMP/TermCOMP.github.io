Input TRS:
    1: A(a(x1)) -> A(A(x1))
    2: A(b(x1)) -> AB(x1)
    3: AB(a(x1)) -> ABA(x1)
    4: AB(b(x1)) -> AB(B(x1))
    5: ABA(a(x1)) -> ABA(A(x1))
    6: ABA(b(x1)) -> ABAB(x1)
    7: ABAB(a(x1)) -> ABAB(A(x1))
    8: ABAB(b(x1)) -> ABABB(x1)
    9: ABABB(a(x1)) -> ABABB(A(x1))
    10: ABABB(b(x1)) -> ABABBB(x1)
    11: ABABBB(a(x1)) -> ABABBB(A(x1))
    12: ABABBB(b(x1)) -> ABABBBB(x1)
    13: ABABBBB(a(x1)) -> ABABBBB(A(x1))
    14: ABABBBB(b(x1)) -> ABABBBBB(x1)
    15: ABABBBBB(a(x1)) -> ABABBBBBA(x1)
    16: ABABBBBB(b(x1)) -> ABABBBBB(B(x1))
    17: ABABBBBBA(x1) -> b(a(b(a(x1))))
    18: B(a(x1)) -> BA(x1)
    19: B(b(x1)) -> B(B(x1))
    20: BA(a(x1)) -> BA(A(x1))
    21: BA(b(x1)) -> BAB(x1)
    22: BAB(a(x1)) -> BABA(x1)
    23: BAB(b(x1)) -> BAB(B(x1))
    24: BABA(x1) -> a(b(a(b(b(b(b(b(a(x1)))))))))
Number of strict rules: 24
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #A(b(x1)) -> #AB(x1)
   #2: #ABA(b(x1)) -> #ABAB(x1)
   #3: #ABABBBB(a(x1)) -> #ABABBBB(A(x1))
   #4: #ABABBBB(a(x1)) -> #A(x1)
   #5: #ABABB(a(x1)) -> #ABABB(A(x1))
   #6: #ABABB(a(x1)) -> #A(x1)
   #7: #ABABBB(a(x1)) -> #ABABBB(A(x1))
   #8: #ABABBB(a(x1)) -> #A(x1)
   #9: #BAB(b(x1)) -> #BAB(B(x1))
   #10: #BAB(b(x1)) -> #B(x1)
   #11: #ABABBB(b(x1)) -> #ABABBBB(x1)
   #12: #ABABBBB(b(x1)) -> #ABABBBBB(x1)
   #13: #BA(a(x1)) -> #BA(A(x1))
   #14: #BA(a(x1)) -> #A(x1)
   #15: #ABAB(a(x1)) -> #ABAB(A(x1))
   #16: #ABAB(a(x1)) -> #A(x1)
   #17: #ABABB(b(x1)) -> #ABABBB(x1)
   #18: #ABA(a(x1)) -> #ABA(A(x1))
   #19: #ABA(a(x1)) -> #A(x1)
   #20: #BAB(a(x1)) -> #BABA(x1)
   #21: #B(b(x1)) -> #B(B(x1))
   #22: #B(b(x1)) -> #B(x1)
   #23: #BA(b(x1)) -> #BAB(x1)
   #24: #ABABBBBB(b(x1)) -> #ABABBBBB(B(x1))
   #25: #ABABBBBB(b(x1)) -> #B(x1)
   #26: #AB(a(x1)) -> #ABA(x1)
   #27: #A(a(x1)) -> #A(A(x1))
   #28: #A(a(x1)) -> #A(x1)
   #29: #ABAB(b(x1)) -> #ABABB(x1)
   #30: #ABABBBBB(a(x1)) -> #ABABBBBBA(x1)
   #31: #AB(b(x1)) -> #AB(B(x1))
   #32: #AB(b(x1)) -> #B(x1)
   #33: #B(a(x1)) -> #BA(x1)
Number of SCCs: 1, DPs: 29, edges: 65
	SCC { #1..8 #10..19 #21..23 #25..29 #31..33 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: x1_1 + x1_2; (/ 1 8)
  #BA(x1)	weight: x1_1; 0
#ABABBB(x1)	weight: x1_1; 0
  ABAB(x1)	weight: x1_1; 0
     b(x1)	weight: x1_1; 0
   #B(x1)	weight: x1_1; 0
ABABBBBBA(x1)	weight: x1_1 + x1_2; 0
#ABABBBB(x1)	weight: x1_1; 0
#BABA(x1)	weight: 0; 0
#ABAB(x1)	weight: x1_1; 0
    AB(x1)	weight: x1_1; 0
#ABABB(x1)	weight: x1_1; 0
ABABBB(x1)	weight: x1_1; 0
 #ABA(x1)	weight: x1_1 + x1_2; 0
   BAB(x1)	weight: x1_1; (/ 1 8)
     B(x1)	weight: x1_1; (/ 1 8) + x1_1
 #BAB(x1)	weight: x1_1; 0
 ABABB(x1)	weight: x1_1; 0
     A(x1)	weight: x1_1; (/ 1 16)
   #A(x1)	weight: x1_1; 0
   ABA(x1)	weight: x1_1; 0
#ABABBBBB(x1)	weight: x1_1; 0
ABABBBBB(x1)	weight: x1_1; 0
#ABABBBBBA(x1)	weight: 0; 0
  BABA(x1)	weight: x1_1 + x1_2; (/ 1 8)
ABABBBB(x1)	weight: x1_1; 0
  #AB(x1)	weight: x1_1; 0
    BA(x1)	weight: x1_1; (/ 1 8)
    Usable rules: { 1..24 }
    Removed DPs: #18 #19
Number of SCCs: 1, DPs: 27, edges: 59
	SCC { #1..8 #10..17 #21..23 #25..29 #31..33 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: (/ 1 16) + x1_1; x1_1
  #BA(x1)	weight: x1_1; x1_1
#ABABBB(x1)	weight: (/ 1 16) + x1_2; x1_2
  ABAB(x1)	weight: x1_2; x1_2
     b(x1)	weight: x1_2; x1_2
   #B(x1)	weight: x1_2; x1_2
ABABBBBBA(x1)	weight: x1_1; x1_1
#ABABBBB(x1)	weight: (/ 1 16) + x1_2; x1_2
#BABA(x1)	weight: 0; 0
#ABAB(x1)	weight: (/ 1 16) + x1_2; x1_2
    AB(x1)	weight: x1_2; x1_2
#ABABB(x1)	weight: (/ 1 16) + x1_2; x1_2
ABABBB(x1)	weight: x1_2; x1_2
 #ABA(x1)	weight: (/ 1 16) + x1_1; x1_1
   BAB(x1)	weight: (/ 1 16) + x1_2; x1_2
     B(x1)	weight: (/ 1 16) + x1_2; x1_2
 #BAB(x1)	weight: x1_2; x1_2
 ABABB(x1)	weight: x1_2; x1_2
     A(x1)	weight: x1_1; x1_1
   #A(x1)	weight: (/ 1 16) + x1_1; x1_1
   ABA(x1)	weight: x1_1; x1_1
#ABABBBBB(x1)	weight: (/ 1 16) + x1_2; x1_2
ABABBBBB(x1)	weight: x1_2; x1_2
#ABABBBBBA(x1)	weight: 0; 0
  BABA(x1)	weight: (/ 1 16) + x1_1; x1_1
ABABBBB(x1)	weight: x1_2; x1_2
  #AB(x1)	weight: (/ 1 16) + x1_2; x1_2
    BA(x1)	weight: (/ 1 16) + x1_1; x1_1
    Usable rules: { 1..24 }
    Removed DPs: #13 #25 #27 #28 #32
Number of SCCs: 2, DPs: 19, edges: 30
	SCC { #10 #21..23 #33 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: (/ 1 32) + x1_1; 0
  #BA(x1)	weight: (/ 1 32) + x1_1; x1_1
#ABABBB(x1)	weight: (/ 1 32); 0
  ABAB(x1)	weight: 0; (/ 1 32)
     b(x1)	weight: x1_2; x1_1 + x1_2
   #B(x1)	weight: x1_1 + x1_2; x1_1 + x1_2
ABABBBBBA(x1)	weight: 0; (/ 1 32)
#ABABBBB(x1)	weight: (/ 1 32); 0
#BABA(x1)	weight: 0; 0
#ABAB(x1)	weight: (/ 1 32); 0
    AB(x1)	weight: 0; (/ 1 32)
#ABABB(x1)	weight: (/ 1 32); 0
ABABBB(x1)	weight: 0; (/ 1 32)
 #ABA(x1)	weight: (/ 1 32); 0
   BAB(x1)	weight: (/ 1 32); 0
     B(x1)	weight: x1_1 + x1_2; x1_2
 #BAB(x1)	weight: (/ 1 32) + x1_2; x1_2
 ABABB(x1)	weight: 0; (/ 1 32)
     A(x1)	weight: x1_1; (/ 1 32)
   #A(x1)	weight: (/ 1 32); 0
   ABA(x1)	weight: 0; (/ 1 32)
#ABABBBBB(x1)	weight: (/ 1 32); 0
ABABBBBB(x1)	weight: 0; (/ 1 32)
#ABABBBBBA(x1)	weight: 0; 0
  BABA(x1)	weight: (/ 1 32); 0
ABABBBB(x1)	weight: 0; (/ 1 32)
  #AB(x1)	weight: (/ 1 32); 0
    BA(x1)	weight: (/ 1 32); 0
    Usable rules: { 1..24 }
    Removed DPs: #10
Number of SCCs: 2, DPs: 15, edges: 22
	SCC { #22 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     a(x1)	weight: (/ 1 16)
  #BA(x1)	weight: 0
#ABABBB(x1)	weight: 0
  ABAB(x1)	weight: (/ 3 8) + x1
     b(x1)	weight: (/ 1 16) + x1
   #B(x1)	weight: x1
ABABBBBBA(x1)	weight: (/ 1 16)
#ABABBBB(x1)	weight: 0
#BABA(x1)	weight: 0
#ABAB(x1)	weight: 0
    AB(x1)	weight: (/ 1 4)
#ABABB(x1)	weight: 0
ABABBB(x1)	weight: (/ 9 16)
 #ABA(x1)	weight: 0
   BAB(x1)	weight: (/ 1 16)
     B(x1)	weight: (/ 1 16)
 #BAB(x1)	weight: 0
 ABABB(x1)	weight: (/ 1 2)
     A(x1)	weight: (/ 1 8) + x1
   #A(x1)	weight: 0
   ABA(x1)	weight: (/ 5 16)
#ABABBBBB(x1)	weight: 0
ABABBBBB(x1)	weight: (/ 3 4)
#ABABBBBBA(x1)	weight: 0
  BABA(x1)	weight: (/ 1 16)
ABABBBB(x1)	weight: (/ 5 8) + x1
  #AB(x1)	weight: 0
    BA(x1)	weight: (/ 1 16)
    Usable rules: { }
    Removed DPs: #22
Number of SCCs: 1, DPs: 14, edges: 21
	SCC { #1 #2 #4..8 #11 #15..17 #26 #29 #31 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
