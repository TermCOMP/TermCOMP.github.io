Input TRS:
    1: B(a(x1)) -> BA(x1)
    2: B(b(x1)) -> B(B(x1))
    3: BA(a(x1)) -> BA(A(x1))
    4: BA(b(x1)) -> BAB(x1)
    5: BAB(a(x1)) -> BABA(x1)
    6: BAB(b(x1)) -> BAB(B(x1))
    7: BABA(a(x1)) -> BABA(A(x1))
    8: BABA(b(x1)) -> BABAB(x1)
    9: BABAB(a(x1)) -> BABAB(A(x1))
    10: BABAB(b(x1)) -> BABABB(x1)
    11: BABABB(a(x1)) -> BABABB(A(x1))
    12: BABABB(b(x1)) -> BABABBB(x1)
    13: BABABBB(a(x1)) -> BABABBBA(x1)
    14: BABABBB(b(x1)) -> BABABBB(B(x1))
    15: BABABBBA(a(x1)) -> BABABBBA(A(x1))
    16: BABABBBA(b(x1)) -> BABABBBAB(x1)
    17: BABABBBAB(a(x1)) -> BABABBBABA(x1)
    18: BABABBBAB(b(x1)) -> BABABBBAB(B(x1))
    19: BABABBBABA(x1) -> a(b(b(a(x1))))
    20: A(a(x1)) -> A(A(x1))
    21: A(b(x1)) -> AB(x1)
    22: AB(a(x1)) -> AB(A(x1))
    23: AB(b(x1)) -> ABB(x1)
    24: ABB(a(x1)) -> ABBA(x1)
    25: ABB(b(x1)) -> ABB(B(x1))
    26: ABBA(x1) -> b(a(b(a(b(b(b(a(b(a(x1))))))))))
Number of strict rules: 26
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #B(b(x1)) -> #B(B(x1))
   #2: #B(b(x1)) -> #B(x1)
   #3: #BAB(b(x1)) -> #BAB(B(x1))
   #4: #BAB(b(x1)) -> #B(x1)
   #5: #BABABBB(a(x1)) -> #BABABBBA(x1)
   #6: #BABAB(a(x1)) -> #BABAB(A(x1))
   #7: #BABAB(a(x1)) -> #A(x1)
   #8: #BABABB(a(x1)) -> #BABABB(A(x1))
   #9: #BABABB(a(x1)) -> #A(x1)
   #10: #ABB(a(x1)) -> #ABBA(x1)
   #11: #AB(b(x1)) -> #ABB(x1)
   #12: #BABABB(b(x1)) -> #BABABBB(x1)
   #13: #BABABBB(b(x1)) -> #BABABBB(B(x1))
   #14: #BABABBB(b(x1)) -> #B(x1)
   #15: #ABB(b(x1)) -> #ABB(B(x1))
   #16: #ABB(b(x1)) -> #B(x1)
   #17: #A(a(x1)) -> #A(A(x1))
   #18: #A(a(x1)) -> #A(x1)
   #19: #BABA(a(x1)) -> #BABA(A(x1))
   #20: #BABA(a(x1)) -> #A(x1)
   #21: #BABAB(b(x1)) -> #BABABB(x1)
   #22: #BAB(a(x1)) -> #BABA(x1)
   #23: #AB(a(x1)) -> #AB(A(x1))
   #24: #AB(a(x1)) -> #A(x1)
   #25: #BABABBBAB(a(x1)) -> #BABABBBABA(x1)
   #26: #A(b(x1)) -> #AB(x1)
   #27: #BABABBBA(b(x1)) -> #BABABBBAB(x1)
   #28: #BA(a(x1)) -> #BA(A(x1))
   #29: #BA(a(x1)) -> #A(x1)
   #30: #B(a(x1)) -> #BA(x1)
   #31: #BABA(b(x1)) -> #BABAB(x1)
   #32: #BABABBBA(a(x1)) -> #BABABBBA(A(x1))
   #33: #BABABBBA(a(x1)) -> #A(x1)
   #34: #BA(b(x1)) -> #BAB(x1)
   #35: #BABABBBAB(b(x1)) -> #BABABBBAB(B(x1))
   #36: #BABABBBAB(b(x1)) -> #B(x1)
Number of SCCs: 1, DPs: 32, edges: 72
	SCC { #1..9 #11..14 #16..24 #26..34 #36 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: (/ 1 16) + x1_2; x1_1 + x1_2
  #BA(x1)	weight: x1_2; 0
BABABBBABA(x1)	weight: (/ 1 16) + x1_1 + x1_2; x1_1 + x1_2
     b(x1)	weight: 0; x1_2
   #B(x1)	weight: x1_2; 0
#BABA(x1)	weight: x1_2; 0
#BABABBBABA(x1)	weight: 0; 0
    AB(x1)	weight: x1_2; x1_2
#ABBA(x1)	weight: 0; 0
   ABB(x1)	weight: x1_2; x1_2
BABABBB(x1)	weight: (/ 1 16) + x1_2; x1_2
   BAB(x1)	weight: (/ 1 16) + x1_2; x1_2
     B(x1)	weight: (/ 1 16) + x1_2; x1_2
 #BAB(x1)	weight: x1_2; 0
  ABBA(x1)	weight: 0; x1_1 + x1_2
#BABAB(x1)	weight: x1_2; 0
#BABABB(x1)	weight: x1_2; 0
     A(x1)	weight: (/ 1 32) + x1_2; x1_2
   #A(x1)	weight: x1_2; 0
 BABAB(x1)	weight: (/ 1 16) + x1_2; x1_2
BABABBBA(x1)	weight: (/ 1 16) + x1_2; x1_2
#BABABBBAB(x1)	weight: x1_2; 0
 #ABB(x1)	weight: x1_2; 0
#BABABBBA(x1)	weight: x1_1 + x1_2; 0
  BABA(x1)	weight: (/ 1 16) + x1_2; x1_2
BABABBBAB(x1)	weight: (/ 1 16) + x1_2; x1_2
BABABB(x1)	weight: (/ 1 16) + x1_2; x1_2
  #AB(x1)	weight: x1_2; 0
#BABABBB(x1)	weight: x1_2; 0
    BA(x1)	weight: (/ 1 16) + x1_2; x1_2
    Usable rules: { 1..26 }
    Removed DPs: #32 #33
Number of SCCs: 1, DPs: 30, edges: 66
	SCC { #1..9 #11..14 #16..24 #26..31 #34 #36 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: (/ 1 16) + x1_2; x1_1 + x1_2
  #BA(x1)	weight: x1_2; 0
BABABBBABA(x1)	weight: (/ 1 8) + x1_1 + x1_2; x1_1 + x1_2
     b(x1)	weight: 0; x1_2
   #B(x1)	weight: x1_2; 0
#BABA(x1)	weight: x1_2; 0
#BABABBBABA(x1)	weight: 0; 0
    AB(x1)	weight: x1_2; x1_2
#ABBA(x1)	weight: 0; 0
   ABB(x1)	weight: x1_2; x1_2
BABABBB(x1)	weight: (/ 1 8) + x1_2; x1_2
   BAB(x1)	weight: (/ 1 8) + x1_2; x1_2
     B(x1)	weight: (/ 1 8) + x1_2; x1_2
 #BAB(x1)	weight: x1_2; 0
  ABBA(x1)	weight: 0; x1_1 + x1_2
#BABAB(x1)	weight: x1_2; 0
#BABABB(x1)	weight: x1_2; 0
     A(x1)	weight: (/ 1 16) + x1_2; x1_2
   #A(x1)	weight: x1_1 + x1_2; 0
 BABAB(x1)	weight: (/ 1 8) + x1_2; x1_2
BABABBBA(x1)	weight: (/ 1 8) + x1_2; x1_2
#BABABBBAB(x1)	weight: x1_2; 0
 #ABB(x1)	weight: x1_2; 0
#BABABBBA(x1)	weight: x1_2; 0
  BABA(x1)	weight: (/ 1 8) + x1_2; x1_2
BABABBBAB(x1)	weight: (/ 1 8) + x1_2; x1_2
BABABB(x1)	weight: (/ 1 8) + x1_2; x1_2
  #AB(x1)	weight: x1_2; 0
#BABABBB(x1)	weight: x1_2; 0
    BA(x1)	weight: (/ 1 8) + x1_2; x1_2
    Usable rules: { 1..26 }
    Removed DPs: #18
Number of SCCs: 1, DPs: 29, edges: 58
	SCC { #1..9 #11..14 #16 #17 #19..24 #26..31 #34 #36 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: (/ 1 32) + x1_1; x1_1
  #BA(x1)	weight: x1_1; 0
BABABBBABA(x1)	weight: (/ 1 32) + x1_1; x1_1
     b(x1)	weight: x1_2; x1_2
   #B(x1)	weight: x1_2; 0
#BABA(x1)	weight: x1_1; 0
#BABABBBABA(x1)	weight: 0; 0
    AB(x1)	weight: (/ 1 64) + x1_2; x1_2
#ABBA(x1)	weight: 0; 0
   ABB(x1)	weight: (/ 1 64) + x1_2; x1_2
BABABBB(x1)	weight: (/ 1 32) + x1_2; x1_2
   BAB(x1)	weight: (/ 1 32) + x1_2; x1_2
     B(x1)	weight: (/ 1 32) + x1_2; x1_2
 #BAB(x1)	weight: x1_2; 0
  ABBA(x1)	weight: x1_1; x1_1
#BABAB(x1)	weight: x1_2; 0
#BABABB(x1)	weight: x1_2; 0
     A(x1)	weight: (/ 1 64) + x1_1; x1_1
   #A(x1)	weight: x1_1; 0
 BABAB(x1)	weight: (/ 1 32) + x1_2; x1_2
BABABBBA(x1)	weight: (/ 1 32) + x1_1; x1_1
#BABABBBAB(x1)	weight: x1_2; 0
 #ABB(x1)	weight: x1_2; 0
#BABABBBA(x1)	weight: x1_1; 0
  BABA(x1)	weight: (/ 1 32) + x1_1; x1_1
BABABBBAB(x1)	weight: (/ 1 32) + x1_2; x1_2
BABABB(x1)	weight: (/ 1 32) + x1_2; x1_2
  #AB(x1)	weight: x1_2; 0
#BABABBB(x1)	weight: x1_2; 0
    BA(x1)	weight: (/ 1 32) + x1_1; x1_1
    Usable rules: { 1..26 }
    Removed DPs: #17 #19 #20 #28 #29
Number of SCCs: 1, DPs: 24, edges: 44
	SCC { #1..9 #11..14 #16 #21..24 #26 #27 #30 #31 #34 #36 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
