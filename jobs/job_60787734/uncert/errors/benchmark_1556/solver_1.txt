last 12144 length 90458
CNF 12144 vars 90458 clauses
last 12590 length 144949
CNF 12590 vars 144949 clauses
**************************************************
summary
**************************************************
SRS with 1 rules on 2 letters       Drop
SRS with 1 rules on 2 letters       mirror
SRS with 1 rules on 2 letters       Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 44 states

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a, b, a, a, b, b, a, a, b] -> [ a , a , b , b , a , a , b , a , a , b , b , a , a ] {- Input 0 -}
reason
  Drop
    property Termination
    has value Just True
    for SRS
      [a, a, b, b, a, a, b] -> [ b , a , a , b , a , a , b , b , a , a ] {- Dropped 3 0 (Input 0) -}
    reason
      mirror
       property Termination
    has value Just True
    for SRS
      [b, a, a, b, b, a, a] -> [ a , a , b , b , a , a , b , a , a , b ] {- Mirror (Dropped 3 0 (Input 0)) -}
    reason
      Matchbound
        Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 44 states

   property Termination
has value Just True
for SRS
  [a, a, b, b, a, a, b] -> [ b , a , a , b , a , a , b , b , a , a ] {- Dropped 3 0 (Input 0) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [b, a, a, b, b, a, a] -> [ a , a , b , b , a , a , b , a , a , b ] {- Mirror (Dropped 3 0 (Input 0)) -}
reason
  Matchbound
    Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 44 states

**************************************************
skeleton: (1,2)\Drop{3}{0}\Mirror(1,2)\Rfcmatchbound{1}[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.408127408000
  min duration 1.408127408000
  total durat. 1.408127408000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 100}
    , self = 68
    , parent = Nothing
    , duration = 1.408127408000
    , status = Fail
    , start = 2025-09-03 12:15:37.334792875 UTC
    , finish = 2025-09-03 12:15:38.742920283 UTC
    , thread_cap_info = ("ThreadId 76", 3, False)}
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 8
  max duration 2.206043493000
  min duration 0.309961542000
  total durat. 7.968302231000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 23}
    , self = 86
    , parent = Nothing
    , duration = 1.521117412000
    , status = Fail
    , start = 2025-09-03 12:15:37.67814971 UTC
    , finish = 2025-09-03 12:15:39.199267122 UTC
    , thread_cap_info = ("ThreadId 125", 2, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 94
    , parent = Nothing
    , duration = 2.206043493000
    , status = Fail
    , start = 2025-09-03 12:15:37.592938257 UTC
    , finish = 2025-09-03 12:15:39.79898175 UTC
    , thread_cap_info = ("ThreadId 115", 2, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 4
  max duration 1.860176407000
  min duration 1.541687067000
  total durat. 6.901938841000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 17}
    , self = 89
    , parent = Nothing
    , duration = 1.541687067000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:15:38.071105046 UTC
    , finish = 2025-09-03 12:15:39.612792113 UTC
    , thread_cap_info = ("ThreadId 142", 2, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 23}
    , self = 95
    , parent = Nothing
    , duration = 1.700018790000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:15:38.112733856 UTC
    , finish = 2025-09-03 12:15:39.812752646 UTC
    , thread_cap_info = ("ThreadId 145", 2, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 91
    , parent = Nothing
    , duration = 1.800056577000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:15:37.853094299 UTC
    , finish = 2025-09-03 12:15:39.653150876 UTC
    , thread_cap_info = ("ThreadId 137", 2, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 93
    , parent = Nothing
    , duration = 1.860176407000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:15:37.932729185 UTC
    , finish = 2025-09-03 12:15:39.792905592 UTC
    , thread_cap_info = ("ThreadId 140", 2, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 4
  max duration 1.686538030000
  min duration 1.118377366000
  total durat. 6.144251534000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 17}
    , self = 85
    , parent = Nothing
    , duration = 1.118377366000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:15:38.014370392 UTC
    , finish = 2025-09-03 12:15:39.132747758 UTC
    , thread_cap_info = ("ThreadId 141", 2, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 88
    , parent = Nothing
    , duration = 1.659139100000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:15:37.913596613 UTC
    , finish = 2025-09-03 12:15:39.572735713 UTC
    , thread_cap_info = ("ThreadId 139", 2, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 23}
    , self = 92
    , parent = Nothing
    , duration = 1.680197038000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:15:38.092757178 UTC
    , finish = 2025-09-03 12:15:39.772954216 UTC
    , thread_cap_info = ("ThreadId 144", 2, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 87
    , parent = Nothing
    , duration = 1.686538030000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:15:37.512735283 UTC
    , finish = 2025-09-03 12:15:39.199273313 UTC
    , thread_cap_info = ("ThreadId 112", 2, False)}
Fail : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = False}"
  total number 3
  max duration 1.725048253000
  min duration 0.848640145000
  total durat. 3.992024659000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 69
    , parent = Nothing
    , duration = 1.418336261000
    , status = Fail
    , start = 2025-09-03 12:15:37.334400458 UTC
    , finish = 2025-09-03 12:15:38.752736719 UTC
    , thread_cap_info = ("ThreadId 55", 2, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 78
    , parent = Nothing
    , duration = 1.725048253000
    , status = Fail
    , start = 2025-09-03 12:15:37.352746263 UTC
    , finish = 2025-09-03 12:15:39.077794516 UTC
    , thread_cap_info = ("ThreadId 63", 2, False)}
Except "AsyncCancelled" : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = False}"
  total number 2
  max duration 2.131910409000
  min duration 1.179366167000
  total durat. 3.311276576000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 17}
    , self = 66
    , parent = Nothing
    , duration = 1.179366167000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:15:37.454037077 UTC
    , finish = 2025-09-03 12:15:38.633403244 UTC
    , thread_cap_info = ("ThreadId 99", 2, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 23}
    , self = 90
    , parent = Nothing
    , duration = 2.131910409000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:15:37.480898291 UTC
    , finish = 2025-09-03 12:15:39.6128087 UTC
    , thread_cap_info = ("ThreadId 104", 2, False)}
**************************************************
F                                            Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                                            , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                                            = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                                            , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                                            = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
F                                            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F                                            = 23} , self = 61 , parent = Nothing , duration = 0.848640145000 , status
F                                            = Fail , start = 2025-09-03 12:15:37.332790589 UTC , finish = 2025-09-03
F                                            12:15:38.181430734 UTC , thread_cap_info = ("ThreadId 22", 0, False)}
F                                            
| F                                          Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| F                                          , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| F                                          = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| F                                          , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| F                                          = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| F                                          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| F                                          = 21} , self = 69 , parent = Nothing , duration = 1.418336261000 , status
| F                                          = Fail , start = 2025-09-03 12:15:37.334400458 UTC , finish = 2025-09-03
| F                                          12:15:38.752736719 UTC , thread_cap_info = ("ThreadId 55", 2, False)}
| F                                          
| | F                                        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                                        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                                        = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | F                                        = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | F                                        = 100} , self = 68 , parent = Nothing , duration = 1.408127408000 , status
| | F                                        = Fail , start = 2025-09-03 12:15:37.334792875 UTC , finish = 2025-09-03
| | F                                        12:15:38.742920283 UTC , thread_cap_info = ("ThreadId 76", 3, False)}
| | F                                        
| | | F                                      Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | F                                      , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | F                                      = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | F                                      , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | F                                      = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | F                                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | F                                      = 19} , self = 78 , parent = Nothing , duration = 1.725048253000 , status
| | | F                                      = Fail , start = 2025-09-03 12:15:37.352746263 UTC , finish = 2025-09-03
| | | F                                      12:15:39.077794516 UTC , thread_cap_info = ("ThreadId 63", 2, False)}
| | | F                                      
| | | | F                                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                                    = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | F                                    = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | F                                    = 100} , self = 59 , parent = Nothing , duration = 0.641893698000 , status
| | | | F                                    = Fail , start = 2025-09-03 12:15:37.365351565 UTC , finish = 2025-09-03
| | | | F                                    12:15:38.007245263 UTC , thread_cap_info = ("ThreadId 74", 1, False)}
| | | | F                                    
| | | | | F                                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | F                                  , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | F                                  = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | | | F                                  Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | | | F                                  8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | | | F                                  = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | | | F                                  ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | | | F                                  1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | F                                  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | F                                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | F                                  = 21} , self = 43 , parent = Nothing , duration = 0.154259566000 , status
| | | | | F                                  = Fail , start = 2025-09-03 12:15:37.392944302 UTC , finish = 2025-09-03
| | | | | F                                  12:15:37.547203868 UTC , thread_cap_info = ("ThreadId 83", 2, False)}
| | | | | F                                  
| | | | | | F                                Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | F                                , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | F                                = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | F                                False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | F                                = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | F                                = 0 , alphabet_size = 2 , total_length = 21} , self = 62 , parent = Nothing
| | | | | | F                                , duration = 0.844501968000 , status = Fail , start = 2025-09-03 12:15:37.392947911
| | | | | | F                                UTC , finish = 2025-09-03 12:15:38.237449879 UTC , thread_cap_info = ("ThreadId
| | | | | | F                                84", 2, False)}
| | | | | | F                                
| | | | | | | F                              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | F                              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | F                              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | F                              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | F                              = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | F                              = 0 , alphabet_size = 2 , total_length = 21} , self = 51 , parent = Nothing
| | | | | | | F                              , duration = 0.309961542000 , status = Fail , start = 2025-09-03 12:15:37.412738213
| | | | | | | F                              UTC , finish = 2025-09-03 12:15:37.722699755 UTC , thread_cap_info = ("ThreadId
| | | | | | | F                              86", 2, False)}
| | | | | | | F                              
| | | | | | | | E                            Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | E                            , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | E                            = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | E                            , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | E                            = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | E                            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | E                            = 17} , self = 66 , parent = Nothing , duration = 1.179366167000 , status
| | | | | | | | E                            = Except "AsyncCancelled" , start = 2025-09-03 12:15:37.454037077 UTC ,
| | | | | | | | E                            finish = 2025-09-03 12:15:38.633403244 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E                            99", 2, False)}
| | | | | | | | E                            
| | | | | | | | | E                          Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | | E                          , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | | E                          = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | | E                          , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | | E                          = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | E                          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | E                          = 23} , self = 90 , parent = Nothing , duration = 2.131910409000 , status
| | | | | | | | | E                          = Except "AsyncCancelled" , start = 2025-09-03 12:15:37.480898291 UTC ,
| | | | | | | | | E                          finish = 2025-09-03 12:15:39.6128087 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | E                          104", 2, False)}
| | | | | | | | | E                          
| | | | | | | | | | E                        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | E                        , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | E                        = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | E                        , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | E                        max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | E                        [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | E                        string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | E                        , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | E                        = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | E                        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | E                        = 21} , self = 87 , parent = Nothing , duration = 1.686538030000 , status
| | | | | | | | | | E                        = Except "AsyncCancelled" , start = 2025-09-03 12:15:37.512735283 UTC ,
| | | | | | | | | | E                        finish = 2025-09-03 12:15:39.199273313 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | E                        112", 2, False)}
| | | | | | | | | | E                        
| | | | | F | | | | |                        
| | | | | F | | | | |                        Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | F | | | | |                        , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | F | | | | |                        = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | F | | | | |                        False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | F | | | | |                        = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | F | | | | |                        = 0 , alphabet_size = 2 , total_length = 19} , self = 94 , parent = Nothing
| | | | | F | | | | |                        , duration = 2.206043493000 , status = Fail , start = 2025-09-03 12:15:37.592938257
| | | | | F | | | | |                        UTC , finish = 2025-09-03 12:15:39.79898175 UTC , thread_cap_info = ("ThreadId
| | | | | F | | | | |                        115", 2, False)}
| | | | | F | | | | |                        
| | | | | | | | | | | F                      Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | F                      , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | F                      = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | F                      False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | F                      = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | F                      = 0 , alphabet_size = 2 , total_length = 23} , self = 86 , parent = Nothing
| | | | | | | | | | | F                      , duration = 1.521117412000 , status = Fail , start = 2025-09-03 12:15:37.67814971
| | | | | | | | | | | F                      UTC , finish = 2025-09-03 12:15:39.199267122 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | F                      125", 2, False)}
| | | | | | | | | | | F                      
| | | | | | | F | | | |                      
| | | | | | | F | | | |                      Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | F | | | |                      , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | F | | | |                      = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | F | | | |                      False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | F | | | |                      = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | F | | | |                      = 0 , alphabet_size = 2 , total_length = 19} , self = 63 , parent = Nothing
| | | | | | | F | | | |                      , duration = 0.585981994000 , status = Fail , start = 2025-09-03 12:15:37.733548972
| | | | | | | F | | | |                      UTC , finish = 2025-09-03 12:15:38.319530966 UTC , thread_cap_info = ("ThreadId
| | | | | | | F | | | |                      128", 2, False)}
| | | | | | | F | | | |                      
| | | | | | | | | | | | E                    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | E                    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | E                    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | E                    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | E                    = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | E                    = 0 , alphabet_size = 2 , total_length = 17} , self = 64 , parent = Nothing
| | | | | | | | | | | | E                    , duration = 0.650566907000 , status = Except "AsyncCancelled" , start
| | | | | | | | | | | | E                    = 2025-09-03 12:15:37.773476571 UTC , finish = 2025-09-03 12:15:38.424043478
| | | | | | | | | | | | E                    UTC , thread_cap_info = ("ThreadId 131", 2, False)}
| | | | | | | | | | | | E                    
| | | | | | | | | | | | | F                  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | F                  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | F                  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | F                  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | F                  = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | F                  = 0 , alphabet_size = 2 , total_length = 23} , self = 67 , parent = Nothing
| | | | | | | | | | | | | F                  , duration = 0.959572338000 , status = Fail , start = 2025-09-03 12:15:37.774643027
| | | | | | | | | | | | | F                  UTC , finish = 2025-09-03 12:15:38.734215365 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | F                  135", 2, False)}
| | | | | | | | | | | | | F                  
| | | | | | | | | | | | | | E                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | E                , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | E                = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | E                , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | E                max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | E                [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | E                string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | E                , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | E                = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | E                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | E                = 21} , self = 91 , parent = Nothing , duration = 1.800056577000 , status
| | | | | | | | | | | | | | E                = Except "AsyncCancelled" , start = 2025-09-03 12:15:37.853094299 UTC ,
| | | | | | | | | | | | | | E                finish = 2025-09-03 12:15:39.653150876 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | E                137", 2, False)}
| | | | | | | | | | | | | | E                
| | | | | | | | | | | | | | | E              Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | E              , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | E              = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | E              , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | E              max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | E              [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | E              string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | E              , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | E              = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | E              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | E              = 19} , self = 88 , parent = Nothing , duration = 1.659139100000 , status
| | | | | | | | | | | | | | | E              = Except "AsyncCancelled" , start = 2025-09-03 12:15:37.913596613 UTC ,
| | | | | | | | | | | | | | | E              finish = 2025-09-03 12:15:39.572735713 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | E              139", 2, False)}
| | | | | | | | | | | | | | | E              
| | | | | | | | | | | | | | | | E            Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | E            , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | E            = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | E            , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | E            max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | E            [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | E            string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | E            , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | E            = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | E            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | E            = 19} , self = 93 , parent = Nothing , duration = 1.860176407000 , status
| | | | | | | | | | | | | | | | E            = Except "AsyncCancelled" , start = 2025-09-03 12:15:37.932729185 UTC ,
| | | | | | | | | | | | | | | | E            finish = 2025-09-03 12:15:39.792905592 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | E            140", 2, False)}
| | | | | | | | | | | | | | | | E            
| | | | F | | | | | | | | | | | |            
| | | | E | | | | | | | | | | | |            Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | E | | | | | | | | | | | |            , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | E | | | | | | | | | | | |            = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | E | | | | | | | | | | | |            , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | E | | | | | | | | | | | |            max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | E | | | | | | | | | | | |            [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | E | | | | | | | | | | | |            string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | E | | | | | | | | | | | |            , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | E | | | | | | | | | | | |            = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | E | | | | | | | | | | | |            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | E | | | | | | | | | | | |            = 17} , self = 85 , parent = Nothing , duration = 1.118377366000 , status
| | | | E | | | | | | | | | | | |            = Except "AsyncCancelled" , start = 2025-09-03 12:15:38.014370392 UTC ,
| | | | E | | | | | | | | | | | |            finish = 2025-09-03 12:15:39.132747758 UTC , thread_cap_info = ("ThreadId
| | | | E | | | | | | | | | | | |            141", 2, False)}
| | | | E | | | | | | | | | | | |            
| | | | | | | | | | | | | | | | | F          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | | | | F          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | | | | F          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | | | | F          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | | | | F          = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | | | | F          = 0 , alphabet_size = 4 , total_length = 100} , self = 65 , parent = Nothing
| | | | | | | | | | | | | | | | | F          , duration = 0.543810001000 , status = Fail , start = 2025-09-03 12:15:38.014402868
| | | | | | | | | | | | | | | | | F          UTC , finish = 2025-09-03 12:15:38.558212869 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | F          151", 0, False)}
| | | | | | | | | | | | | | | | | F          
| | | | | | | | | | | | | | | | | | F        Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | | | | | F        , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | | | | | F        = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | | | | | F        False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | | | | | F        = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | | | | | F        = 0 , alphabet_size = 4 , total_length = 100} , self = 70 , parent = Nothing
| | | | | | | | | | | | | | | | | | F        , duration = 0.997313483000 , status = Fail , start = 2025-09-03 12:15:38.071099427
| | | | | | | | | | | | | | | | | | F        UTC , finish = 2025-09-03 12:15:39.06841291 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | F        149", 3, False)}
| | | | | | | | | | | | | | | | | | F        
| | | | | | | | | | | | | | | | | | | E      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | | | | E      , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | | | | E      = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | | | | E      , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | | | | E      max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | | | | E      [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | | | | E      string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | | | | E      , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | | | | E      = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | | | E      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | | | E      = 17} , self = 89 , parent = Nothing , duration = 1.541687067000 , status
| | | | | | | | | | | | | | | | | | | E      = Except "AsyncCancelled" , start = 2025-09-03 12:15:38.071105046 UTC ,
| | | | | | | | | | | | | | | | | | | E      finish = 2025-09-03 12:15:39.612792113 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | | E      142", 2, False)}
| | | | | | | | | | | | | | | | | | | E      
| | | | | | | | | | | | | | | | | | | | E    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | | | | | E    , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | | | | | E    = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | | | | | E    , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | | | | | E    max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | | | | | E    [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | | | | | E    string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | | | | | E    , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | | | | | E    = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | | | | E    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | | | | E    = 23} , self = 92 , parent = Nothing , duration = 1.680197038000 , status
| | | | | | | | | | | | | | | | | | | | E    = Except "AsyncCancelled" , start = 2025-09-03 12:15:38.092757178 UTC ,
| | | | | | | | | | | | | | | | | | | | E    finish = 2025-09-03 12:15:39.772954216 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | | | E    144", 2, False)}
| | | | | | | | | | | | | | | | | | | | E    
| | | | | | | | | | | | | | | | | | | | | E  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | | | | | | E  , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | | | | | | E  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | | | | | | E  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | | | | | | E  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | | | | | | E  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | | | | | | E  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | | | | | | E  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | | | | | | E  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | | | | | E  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | | | | | E  = 23} , self = 95 , parent = Nothing , duration = 1.700018790000 , status
| | | | | | | | | | | | | | | | | | | | | E  = Except "AsyncCancelled" , start = 2025-09-03 12:15:38.112733856 UTC ,
| | | | | | | | | | | | | | | | | | | | | E  finish = 2025-09-03 12:15:39.812752646 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | | | | E  145", 2, False)}
| | | | | | | | | | | | | | | | | | | | | E  
F | | | | | | | | | | | | | | | | | | | | |  
  | | | | | F | | | | | | | | | | | | | | |  
  | | | | |   F | | | | | | | | | | | | | |  
  | | | | |     | | | | E | | | | | | | | |  
  | | | | |     | | | |   | | | | F | | | |  
  | | | | |     E | | |   | | | |   | | | |  
  | | | | |       | | |   F | | |   | | | |  
  | F | | |       | | |     | | |   | | | |  
  F   | | |       | | |     | | |   | | | |  
      | | |       | | |     | | |   F | | |  
      F | |       | | |     | | |     | | |  
        E |       | | |     | | |     | | |  
          |       | | F     | | |     | | |  
          |       | E       | | |     | | |  
          |       |         | E |     | | |  
          |       |         |   |     E | |  
          |       E         |   |       | |  
          |                 E   |       | |  
          |                     |       E |  
          |                     E         |  
          F                               |  
                                          E  
