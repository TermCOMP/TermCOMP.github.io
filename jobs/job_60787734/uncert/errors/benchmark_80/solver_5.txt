Input TRS:
    1: A(a(x1)) -> A(A(x1))
    2: A(b(x1)) -> AB(x1)
    3: AB(a(x1)) -> ABA(x1)
    4: AB(b(x1)) -> AB(B(x1))
    5: ABA(a(x1)) -> ABA(A(x1))
    6: ABA(b(x1)) -> ABAB(x1)
    7: ABAB(a(x1)) -> ABAB(A(x1))
    8: ABAB(b(x1)) -> ABABB(x1)
    9: ABABB(a(x1)) -> ABABBA(x1)
    10: ABABB(b(x1)) -> ABABB(B(x1))
    11: ABABBA(a(x1)) -> ABABBA(A(x1))
    12: ABABBA(b(x1)) -> ABABBAB(x1)
    13: ABABBAB(a(x1)) -> ABABBAB(A(x1))
    14: ABABBAB(b(x1)) -> ABABBABB(x1)
    15: ABABBABB(a(x1)) -> ABABBABB(A(x1))
    16: ABABBABB(b(x1)) -> ABABBABBB(x1)
    17: ABABBABBB(a(x1)) -> ABABBABBBA(x1)
    18: ABABBABBB(b(x1)) -> ABABBABBB(B(x1))
    19: ABABBABBBA(x1) -> b(a(b(a(x1))))
    20: B(a(x1)) -> BA(x1)
    21: B(b(x1)) -> B(B(x1))
    22: BA(a(x1)) -> BA(A(x1))
    23: BA(b(x1)) -> BAB(x1)
    24: BAB(a(x1)) -> BABA(x1)
    25: BAB(b(x1)) -> BAB(B(x1))
    26: BABA(x1) -> a(b(a(b(b(a(b(b(b(a(x1))))))))))
Number of strict rules: 26
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #A(b(x1)) -> #AB(x1)
   #2: #ABA(b(x1)) -> #ABAB(x1)
   #3: #ABABBAB(a(x1)) -> #ABABBAB(A(x1))
   #4: #ABABBAB(a(x1)) -> #A(x1)
   #5: #ABABB(a(x1)) -> #ABABBA(x1)
   #6: #ABABBA(a(x1)) -> #ABABBA(A(x1))
   #7: #ABABBA(a(x1)) -> #A(x1)
   #8: #BAB(a(x1)) -> #BABA(x1)
   #9: #BA(b(x1)) -> #BAB(x1)
   #10: #ABABBA(b(x1)) -> #ABABBAB(x1)
   #11: #ABABBAB(b(x1)) -> #ABABBABB(x1)
   #12: #BAB(b(x1)) -> #BAB(B(x1))
   #13: #BAB(b(x1)) -> #B(x1)
   #14: #B(a(x1)) -> #BA(x1)
   #15: #ABAB(a(x1)) -> #ABAB(A(x1))
   #16: #ABAB(a(x1)) -> #A(x1)
   #17: #ABABB(b(x1)) -> #ABABB(B(x1))
   #18: #ABABB(b(x1)) -> #B(x1)
   #19: #ABA(a(x1)) -> #ABA(A(x1))
   #20: #ABA(a(x1)) -> #A(x1)
   #21: #BA(a(x1)) -> #BA(A(x1))
   #22: #BA(a(x1)) -> #A(x1)
   #23: #ABABBABBB(a(x1)) -> #ABABBABBBA(x1)
   #24: #B(b(x1)) -> #B(B(x1))
   #25: #B(b(x1)) -> #B(x1)
   #26: #ABABBABB(b(x1)) -> #ABABBABBB(x1)
   #27: #AB(a(x1)) -> #ABA(x1)
   #28: #A(a(x1)) -> #A(A(x1))
   #29: #A(a(x1)) -> #A(x1)
   #30: #ABAB(b(x1)) -> #ABABB(x1)
   #31: #ABABBABB(a(x1)) -> #ABABBABB(A(x1))
   #32: #ABABBABB(a(x1)) -> #A(x1)
   #33: #AB(b(x1)) -> #AB(B(x1))
   #34: #AB(b(x1)) -> #B(x1)
   #35: #ABABBABBB(b(x1)) -> #ABABBABBB(B(x1))
   #36: #ABABBABBB(b(x1)) -> #B(x1)
Number of SCCs: 1, DPs: 32, edges: 72
	SCC { #1..7 #9..11 #13..22 #24..34 #36 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: x1_2; (/ 3 16) + x1_2
  #BA(x1)	weight: x1_2; 0
  ABAB(x1)	weight: x1_1; (/ 1 16) + x1_1
ABABBABBBA(x1)	weight: x1_2; x1_2
     b(x1)	weight: x1_1; x1_1
   #B(x1)	weight: x1_1; 0
#BABA(x1)	weight: 0; 0
#ABAB(x1)	weight: (/ 1 8) + x1_1; 0
    AB(x1)	weight: x1_1; (/ 1 16) + x1_1
#ABABB(x1)	weight: (/ 1 8) + x1_1; 0
 #ABA(x1)	weight: (/ 1 8) + x1_2; 0
ABABBAB(x1)	weight: x1_1; x1_1
   BAB(x1)	weight: x1_1; (/ 3 16) + x1_1
     B(x1)	weight: x1_1; (/ 3 16) + x1_1
 #BAB(x1)	weight: x1_1; 0
 ABABB(x1)	weight: x1_1; (/ 1 16) + x1_1
     A(x1)	weight: x1_2; (/ 1 16) + x1_2
   #A(x1)	weight: (/ 1 8) + x1_2; 0
   ABA(x1)	weight: x1_2; (/ 1 16) + x1_2
#ABABBA(x1)	weight: (/ 1 8) + x1_2; 0
ABABBABBB(x1)	weight: x1_1; x1_1
#ABABBAB(x1)	weight: (/ 1 8) + x1_1; 0
ABABBABB(x1)	weight: x1_1; x1_1
  BABA(x1)	weight: x1_2; (/ 3 16) + x1_2
  #AB(x1)	weight: (/ 1 8) + x1_1; 0
#ABABBABBBA(x1)	weight: 0; 0
#ABABBABB(x1)	weight: (/ 1 8) + x1_1; 0
#ABABBABBB(x1)	weight: (/ 1 16) + x1_1; 0
ABABBA(x1)	weight: x1_2; (/ 1 16) + x1_2
    BA(x1)	weight: x1_2; (/ 3 16) + x1_2
    Usable rules: { 1..26 }
    Removed DPs: #6 #7 #18..22 #26 #28 #29 #34 #36
Number of SCCs: 2, DPs: 19, edges: 29
	SCC { #9 #13 #14 #24 #25 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: (/ 1 64); (/ 1 32) + x1_2
  #BA(x1)	weight: x1_2; x1_2
  ABAB(x1)	weight: (/ 9 64); (/ 1 32)
ABABBABBBA(x1)	weight: (/ 9 64); (/ 1 32)
     b(x1)	weight: (/ 1 16) + x1_1 + x1_2; (/ 1 64) + x1_1
   #B(x1)	weight: x1_1 + x1_2; x1_1 + x1_2
#BABA(x1)	weight: 0; 0
#ABAB(x1)	weight: (/ 1 32); 0
    AB(x1)	weight: (/ 9 64); (/ 1 32)
#ABABB(x1)	weight: (/ 1 32); 0
 #ABA(x1)	weight: (/ 1 32); 0
ABABBAB(x1)	weight: (/ 9 64); (/ 1 32)
   BAB(x1)	weight: (/ 1 64); (/ 1 16)
     B(x1)	weight: (/ 1 64) + x1_1 + x1_2; (/ 3 64) + x1_1
 #BAB(x1)	weight: x1_1; x1_1
 ABABB(x1)	weight: (/ 9 64); (/ 1 32)
     A(x1)	weight: (/ 1 8) + x1_2; (/ 1 32)
   #A(x1)	weight: (/ 1 32); 0
   ABA(x1)	weight: (/ 9 64); (/ 1 32)
#ABABBA(x1)	weight: (/ 1 32); 0
ABABBABBB(x1)	weight: (/ 9 64); (/ 1 32)
#ABABBAB(x1)	weight: (/ 1 32); 0
ABABBABB(x1)	weight: (/ 9 64); (/ 1 32)
  BABA(x1)	weight: (/ 1 64); (/ 1 16)
  #AB(x1)	weight: (/ 1 32); 0
#ABABBABBBA(x1)	weight: 0; 0
#ABABBABB(x1)	weight: (/ 1 32); 0
#ABABBABBB(x1)	weight: (/ 1 64); 0
ABABBA(x1)	weight: (/ 9 64); (/ 1 32)
    BA(x1)	weight: (/ 1 64); (/ 1 16)
    Usable rules: { 1..26 }
    Removed DPs: #9 #13 #14 #24 #25
Number of SCCs: 1, DPs: 14, edges: 20
	SCC { #1..5 #10 #11 #15..17 #27 #30 #32 #33 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
