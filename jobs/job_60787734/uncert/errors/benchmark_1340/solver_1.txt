last 4371 length 21948
CNF 4371 vars 21948 clauses
last 3817 length 17305
CNF 3817 vars 17305 clauses
last 597 length 2558
CNF 597 vars 2558 clauses
last 587 length 2375
CNF 587 vars 2375 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2465, clauses: 8868
last 2465 length 8868
last 514 length 2008
CNF 514 vars 2008 clauses
CNF 2465 vars 8868 clauses
last 464 length 1840
CNF 464 vars 1840 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7091, clauses: 29321
last 7091 length 29321
CNF 7091 vars 29321 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2465, clauses: 8868, status: Unsatisfied, time: 0.091008072s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7091, clauses: 29321, status: Satisfied, time: 0.076133803s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4458, clauses: 17709
last 590 length 2537
last 541 length 2205
CNF 590 vars 2537 clauses
CNF 541 vars 2205 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2359, clauses: 8404
last 2359 length 8404
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2359, clauses: 8443
last 2359 length 8443
CNF 2359 vars 8443 clauses
CNF 2359 vars 8404 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7045, clauses: 29145
last 7045 length 29145
CNF 7045 vars 29145 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7047, clauses: 29131
last 7047 length 29131
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2359, clauses: 8404, status: Unsatisfied, time: 0.108578809s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7045, clauses: 29145, status: Satisfied, time: 0.069791193s
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
last 445 length 1841
last 525 length 2288
CNF 525 vars 2288 clauses
CNF 445 vars 1841 clauses
CNF 7047 vars 29131 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1856, clauses: 6606
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6332, clauses: 26249
last 1856 length 6606
last 6332 length 26249
CNF 1856 vars 6606 clauses
CNF 6332 vars 26249 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4389, clauses: 17341
last 4389 length 17341
CNF 4389 vars 17341 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1856, clauses: 6606, status: Unsatisfied, time: 0.031038898s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7047, clauses: 29131, status: Satisfied, time: 0.197982436s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3882, clauses: 15492
last 3882 length 15492
CNF 3882 vars 15492 clauses
last 444 length 1740
last 434 length 1718
CNF 444 vars 1740 clauses
CNF 434 vars 1718 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2148, clauses: 7583
last 2148 length 7583
CNF 2148 vars 7583 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2148, clauses: 7583, status: Unsatisfied, time: 0.069522237s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6709, clauses: 27715
last 6709 length 27715
CNF 6709 vars 27715 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4144, clauses: 16361
last 4144 length 16361
CNF 4144 vars 16361 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6332, clauses: 26249, status: Unsatisfied, time: 0.481809684s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3025, clauses: 11325
last 3025 length 11325
CNF 3025 vars 11325 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3882, clauses: 15492, status: Unsatisfied, time: 0.533952333s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3025, clauses: 11325, status: Unsatisfied, time: 0.153326542s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5690, clauses: 21150
last 5690 length 21150
CNF 5690 vars 21150 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11077, clauses: 45680
last 11077 length 45680
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6709, clauses: 27715, status: Satisfied, time: 0.765256655s
CNF 11077 vars 45680 clauses
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       context
SRS with 5 rules on 3 letters       mirror
SRS with 5 rules on 3 letters       DP
SRS with 5 strict rules and 5 weak rules on 6 letters       weights
SRS with 3 strict rules and 5 weak rules on 5 letters       EDG
SRS with 3 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 5 weak rules on 5 letters       EDG
SRS with 2 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 5 weak rules on 5 letters       weights
SRS with 0 strict rules and 5 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a] -> [a, b, b, c] {- Input 0 -}
  [b, c] -> [] {- Input 1 -}
  [c, b] -> [a, c] {- Input 2 -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, a] -> [a, b, b, c] {- Input 0 -}
  [a, b, c] -> [a] {- Input 1 -}
  [b, b, c] -> [b] {- Input 1 -}
  [c, b, c] -> [c] {- Input 1 -}
  [c, b] -> [a, c] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a] -> [c, b, b, a] {- Mirror (Input 0) -}
  [c, b, a] -> [a] {- Mirror (Input 1) -}
  [c, b, b] -> [b] {- Mirror (Input 1) -}
  [c, b, c] -> [c] {- Mirror (Input 1) -}
  [b, c] -> [c, a] {- Mirror (Input 2) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a] ->= [c, b, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, b, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [c, a] {- DP Nontop (Mirror (Input 2)) -}
  [a#, a] |-> [b#, a] {- DP (Top 2) (Mirror (Input 0)) -}
  [a#, a] |-> [b#, b, a] {- DP (Top 1) (Mirror (Input 0)) -}
  [a#, a] |-> [c#, b, b, a] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, c] |-> [a#] {- DP (Top 1) (Mirror (Input 2)) -}
  [b#, c] |-> [c#, a] {- DP (Top 0) (Mirror (Input 2)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (b#, 1/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [c, b, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, b, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [c, a] {- DP Nontop (Mirror (Input 2)) -}
  [a#, a] |-> [b#, a] {- DP (Top 2) (Mirror (Input 0)) -}
  [a#, a] |-> [b#, b, a] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, c] |-> [a#] {- DP (Top 1) (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#, a] {- DP (Top 2) (Mirror (Input 0)) -}
  [b#, c] |-> [a#] {- DP (Top 1) (Mirror (Input 2)) -}
  [a#, a] |-> [b#, b, a] {- DP (Top 1) (Mirror (Input 0)) -}
  [a, a] ->= [c, b, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, b, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [c, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 1A 0A  1A \
        | 0A -1A 0A |
        \ -  -   0A / )
  ( b
  , Wk  / - 0A 1A \
        | - 1A 1A |
        \ - -  0A / )
  ( c
  , Wk  / -  0A  1A  \
        | 0A -1A -1A |
        \ -  -   0A  / )
  ( a#
  , Wk  / 1A - 1A \
        | -  - -  |
        \ -  - 0A / )
  ( b#
  , Wk  / - 1A 1A \
        | - -  -  |
        \ - -  0A / )
   property Termination
has value Just True
for SRS
  [b#, c] |-> [a#] {- DP (Top 1) (Mirror (Input 2)) -}
  [a#, a] |-> [b#, b, a] {- DP (Top 1) (Mirror (Input 0)) -}
  [a, a] ->= [c, b, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, b, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [c, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, c] |-> [a#] {- DP (Top 1) (Mirror (Input 2)) -}
  [a#, a] |-> [b#, b, a] {- DP (Top 1) (Mirror (Input 0)) -}
  [a, a] ->= [c, b, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, b, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [c, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  ( a
  , Wk  / 1A - 1A \
        | 0A - -  |
        \ -  - 0A / )
  ( b
  , Wk  / -  -1A 0A  \
        | 0A 1A  -1A |
        \ -  -   0A  / )
  ( c
  , Wk  / -2A 0A 0A \
        | 1A  -  1A |
        \ -   -  0A / )
  ( a#
  , Wk  / 0A - 0A \
        | -  - -  |
        \ -  - 0A / )
  ( b#
  , Wk  / -1A 0A 0A \
        | -   -  -  |
        \ -   -  0A / )
   property Termination
has value Just True
for SRS
  [a#, a] |-> [b#, b, a] {- DP (Top 1) (Mirror (Input 0)) -}
  [a, a] ->= [c, b, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, b, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [c, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [c, b, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, b, a] ->= [a] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, b] ->= [b] {- DP Nontop (Mirror (Input 1)) -}
  [c, b, c] ->= [c] {- DP Nontop (Mirror (Input 1)) -}
  [b, c] ->= [c, a] {- DP Nontop (Mirror (Input 2)) -}
reason
  EDG

**************************************************
skeleton: (3,3)\Context\Mirror(5,3)\Deepee(5/5,6)\Weight\EDG(3/5,5)\Matrix{\ArcticBZ}{3}\EDG(2/5,5)\Matrix{\ArcticBZ}{3}(1/5,5)\Weight(0/5,3)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 4
  max duration 0.983493004000
  min duration 0.152794624000
  total durat. 1.728319983000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 0.819460227000
  min duration 0.071490503000
  total durat. 1.083809783000
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.814451079000
  min duration 1.814451079000
  total durat. 1.814451079000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 106
    , parent = Nothing
    , duration = 1.814451079000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:39:43.035478968 UTC
    , finish = 2025-09-03 11:39:44.849930047 UTC
    , thread_cap_info = ("ThreadId 43", 1, False)}
**************************************************
E          Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E          , closure = Forward\n , start_strict_only = True\n , max_closure_length
E          = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
E          Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
E          8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
E          = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
E          ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
E          1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E          = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
E          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
E          = 12} , self = 106 , parent = Nothing , duration = 1.814451079000 , status
E          = Except "AsyncCancelled" , start = 2025-09-03 11:39:43.035478968 UTC ,
E          finish = 2025-09-03 11:39:44.849930047 UTC , thread_cap_info = ("ThreadId
E          43", 1, False)}
E          
| F        Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F        , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F        = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F        False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F        = Size { num_rules = 27 , num_strict_rules = 27 , num_top_rules = 0 , num_weak_rules
| F        = 0 , alphabet_size = 9 , total_length = 162} , self = 58 , parent = Nothing
| F        , duration = 0.160593344000 , status = Fail , start = 2025-09-03 11:39:43.036978694
| F        UTC , finish = 2025-09-03 11:39:43.197572038 UTC , thread_cap_info = ("ThreadId
| F        57", 0, False)}
| F        
| | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F      = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | F      = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F      = 162} , self = 54 , parent = Nothing , duration = 0.109762072000 , status
| | F      = Fail , start = 2025-09-03 11:39:43.044453101 UTC , finish = 2025-09-03
| | F      11:39:43.154215173 UTC , thread_cap_info = ("ThreadId 67", 3, False)}
| | F      
| | F      
| F        
| F        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F        = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| F        = 5 , total_length = 38} , self = 67 , parent = Nothing , duration = 0.131874992000
| F        , status = Fail , start = 2025-09-03 11:39:43.21804982 UTC , finish = 2025-09-03
| F        11:39:43.349924812 UTC , thread_cap_info = ("ThreadId 100", 0, False)}
| F        
| | S      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | S      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | S      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | S      , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| | S      = 5 , total_length = 38} , self = 68 , parent = Nothing , duration = 0.159323593000
| | S      , status = Success , start = 2025-09-03 11:39:43.250287485 UTC , finish
| | S      = 2025-09-03 11:39:43.409611078 UTC , thread_cap_info = ("ThreadId 104",
| | S      0, False)}
| | S      
| | | F    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F    = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | F    = 5 , total_length = 34} , self = 77 , parent = Nothing , duration = 0.256036374000
| | | F    , status = Fail , start = 2025-09-03 11:39:43.290165285 UTC , finish =
| | | F    2025-09-03 11:39:43.546201659 UTC , thread_cap_info = ("ThreadId 108",
| | | F    1, False)}
| | | F    
| | | | S  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | S  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | S  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | S  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | S  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | | S  = 5 , total_length = 34} , self = 88 , parent = Nothing , duration = 0.432708762000
| | | | S  , status = Success , start = 2025-09-03 11:39:43.308995598 UTC , finish
| | | | S  = 2025-09-03 11:39:43.74170436 UTC , thread_cap_info = ("ThreadId 109",
| | | | S  1, False)}
| | | | S  
| F | | |  
|   S | |  
| F   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F   | |  = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| F   | |  = 5 , total_length = 35} , self = 80 , parent = Nothing , duration = 0.173205984000
| F   | |  , status = Fail , start = 2025-09-03 11:39:43.433154714 UTC , finish =
| F   | |  2025-09-03 11:39:43.606360698 UTC , thread_cap_info = ("ThreadId 120",
| F   | |  0, False)}
| F   | |  
| | S | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | S | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | S | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | S | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | S | |  = 5 , total_length = 35} , self = 78 , parent = Nothing , duration = 0.152794624000
| | S | |  , status = Success , start = 2025-09-03 11:39:43.450639019 UTC , finish
| | S | |  = 2025-09-03 11:39:43.603433643 UTC , thread_cap_info = ("ThreadId 123",
| | S | |  0, False)}
| | S | |  
| | | F |  
| | S   |  
| F     |  
| E     |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| E     |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| E     |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| E     |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E     |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E     |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| E     |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| E     |  = 5 , total_length = 34} , self = 90 , parent = Nothing , duration = 0.192859053000
| E     |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:39:43.608985582
| E     |  UTC , finish = 2025-09-03 11:39:43.801844635 UTC , thread_cap_info = ("ThreadId
| E     |  126", 1, False)}
| E     |  
| | F   |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F   |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F   |  = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | F   |  = 4 , total_length = 28} , self = 87 , parent = Nothing , duration = 0.104332162000
| | F   |  , status = Fail , start = 2025-09-03 11:39:43.616452228 UTC , finish =
| | F   |  2025-09-03 11:39:43.72078439 UTC , thread_cap_info = ("ThreadId 134", 0,
| | F   |  False)}
| | F   |  
| | | F |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | F |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | F |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | F |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | F |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | | F |  = 4 , total_length = 28} , self = 98 , parent = Nothing , duration = 0.535780110000
| | | F |  , status = Fail , start = 2025-09-03 11:39:43.635791294 UTC , finish =
| | | F |  2025-09-03 11:39:44.171571404 UTC , thread_cap_info = ("ThreadId 136",
| | | F |  0, False)}
| | | F |  
| | F | |  
| | F | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | F | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | F | |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | F | |  = 4 , total_length = 28} , self = 99 , parent = Nothing , duration = 0.595221193000
| | F | |  , status = Fail , start = 2025-09-03 11:39:43.720806736 UTC , finish =
| | F | |  2025-09-03 11:39:44.316027929 UTC , thread_cap_info = ("ThreadId 140",
| | F | |  0, False)}
| | F | |  
| | | | S  
| E | |    
| F | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | |    = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| F | |    = 5 , total_length = 30} , self = 97 , parent = Nothing , duration = 0.199727904000
| F | |    , status = Fail , start = 2025-09-03 11:39:43.819125795 UTC , finish =
| F | |    2025-09-03 11:39:44.018853699 UTC , thread_cap_info = ("ThreadId 150",
| F | |    1, False)}
| F | |    
| | | | S  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | S  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | S  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | S  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | S  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | S  = 5 , total_length = 30} , self = 101 , parent = Nothing , duration = 0.983493004000
| | | | S  , status = Success , start = 2025-09-03 11:39:43.850649868 UTC , finish
| | | | S  = 2025-09-03 11:39:44.834142872 UTC , thread_cap_info = ("ThreadId 151",
| | | | S  1, False)}
| | | | S  
| F | | |  
| E | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| E | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| E | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| E | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| E | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| E | | |  = 5 , total_length = 30} , self = 103 , parent = Nothing , duration = 0.819460227000
| E | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:39:44.030364643
| E | | |  UTC , finish = 2025-09-03 11:39:44.84982487 UTC , thread_cap_info = ("ThreadId
| E | | |  153", 1, False)}
| E | | |  
| | | F |  
| | | F |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | F |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F |  = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | | F |  = 4 , total_length = 28} , self = 100 , parent = Nothing , duration = 0.254322080000
| | | F |  , status = Fail , start = 2025-09-03 11:39:44.171606209 UTC , finish =
| | | F |  2025-09-03 11:39:44.425928289 UTC , thread_cap_info = ("ThreadId 156",
| | | F |  0, False)}
| | | F |  
| | F | |  
| |   F |  
| |     S  
| E        
E          
