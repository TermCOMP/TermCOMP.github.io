last 6736 length 44314
CNF 6736 vars 44314 clauses
last 5697 length 30506
CNF 5697 vars 30506 clauses
last 920 length 3834
CNF 920 vars 3834 clauses
last 907 length 3899
last 471 length 1881
last 599 length 2327
CNF 907 vars 3899 clauses
CNF 471 vars 1881 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2778, clauses: 10280
CNF 599 vars 2327 clauses
last 18980 length 80168
last 2778 length 10280
last 10170 length 45927
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2100, clauses: 7700
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8011, clauses: 33243
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6136, clauses: 25367
CNF 2778 vars 10280 clauses
last 14501 length 86304
CNF 18980 vars 80168 clauses
CNF 10170 vars 45927 clauses
last 2100 length 7700
last 20685 length 99628
last 8011 length 33243
last 6136 length 25367
CNF 2100 vars 7700 clauses
CNF 14501 vars 86304 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2778, clauses: 10280, status: Satisfied, time: 0.442416667s
CNF 20685 vars 99628 clauses
CNF 8011 vars 33243 clauses
CNF 6136 vars 25367 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2100, clauses: 7700, status: Satisfied, time: 0.30264129s
last 500 length 2161
last 705 length 2966
CNF 500 vars 2161 clauses
CNF 705 vars 2966 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6136, clauses: 25367, status: Satisfied, time: 0.684623844s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2250, clauses: 7997
last 2250 length 7997
CNF 2250 vars 7997 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20290, clauses: 83509
last 20290 length 83509
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2250, clauses: 7997, status: Satisfied, time: 0.11732053s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7289, clauses: 30215
last 7289 length 30215
CNF 7289 vars 30215 clauses
last 529 length 2062
last 443 length 1787
CNF 443 vars 1787 clauses
CNF 529 vars 2062 clauses
CNF 20290 vars 83509 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 47272, clauses: 197606
last 47272 length 197606
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1994, clauses: 7221
last 1994 length 7221
CNF 47272 vars 197606 clauses
CNF 1994 vars 7221 clauses
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       mirror
SRS with 3 rules on 3 letters       context
SRS with 5 rules on 3 letters       mirror
SRS with 5 rules on 3 letters       DP
SRS with 5 strict rules and 5 weak rules on 5 letters       EDG
SRS with 5 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1994, clauses: 7221, status: Unsatisfied, time: 0.088075658s
SRS withMatrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 47272, clauses: 197606, status: Satisfied, time: 0.370625335s
 Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6090, clauses: 25191
2 last 6090 length 25191
strict rules and 5 weak rules on 5 letters       EDG
SRS with 2 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 5 weak rules on 5 letters       weights
SRS with 0 strict rules and 5 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [a, b, b] -> [b, b, b, c, a] {- Input 1 -}
  [b, c] -> [a] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a] -> [] {- Mirror (Input 0) -}
  [b, b, a] -> [a, c, b, b, b] {- Mirror (Input 1) -}
  [c, b] -> [a] {- Mirror (Input 2) -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, a] -> [a] {- Mirror (Input 0) -}
  [b, a] -> [b] {- Mirror (Input 0) -}
  [c, a] -> [c] {- Mirror (Input 0) -}
  [b, b, a] -> [a, c, b, b, b] {- Mirror (Input 1) -}
  [c, b] -> [a] {- Mirror (Input 2) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a] -> [a] {- Input 0 -}
  [a, b] -> [b] {- Input 0 -}
  [a, c] -> [c] {- Input 0 -}
  [a, b, b] -> [b, b, b, c, a] {- Input 1 -}
  [b, c] -> [a] {- Input 2 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, c] ->= [c] {- DP Nontop (Input 0) -}
  [a, b, b] ->= [b, b, b, c, a] {- DP Nontop (Input 1) -}
  [b, c] ->= [a] {- DP Nontop (Input 2) -}
  [a#, b, b] |-> [a#] {- DP (Top 4) (Input 1) -}
  [a#, b, b] |-> [b#, b, b, c, a] {- DP (Top 0) (Input 1) -}
  [a#, b, b] |-> [b#, b, c, a] {- DP (Top 1) (Input 1) -}
  [a#, b, b] |-> [b#, c, a] {- DP (Top 2) (Input 1) -}
  [b#, c] |-> [a#] {- DP (Top 0) (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b, b] |-> [a#] {- DP (Top 4) (Input 1) -}
  [a#, b, b] |-> [b#, b, b, c, a] {- DP (Top 0) (Input 1) -}
  [b#, c] |-> [a#] {- DP (Top 0) (Input 2) -}
  [a#, b, b] |-> [b#, b, c, a] {- DP (Top 1) (Input 1) -}
  [a#, b, b] |-> [b#, c, a] {- DP (Top 2) (Input 1) -}
  [a, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, c] ->= [c] {- DP Nontop (Input 0) -}
  [a, b, b] ->= [b, b, b, c, a] {- DP Nontop (Input 1) -}
  [b, c] ->= [a] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( c
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( a#
  , Wk  / 14A 17A 17A - \
        | 14A 17A 17A - |
        | 14A 17A 17A - |
        \ -   -   -   - / )
  ( b#
  , Wk  / 17A 17A 18A - \
        | 17A 17A 18A - |
        | 17A 17A 18A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [a#, b, b] |-> [b#, b, b, c, a] {- DP (Top 0) (Input 1) -}
  [b#, c] |-> [a#] {- DP (Top 0) (Input 2) -}
  [a, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, c] ->= [c] {- DP Nontop (Input 0) -}
  [a, b, b] ->= [b, b, b, c, a] {- DP Nontop (Input 1) -}
  [b, c] ->= [a] {- DP Nontop (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b, b] |-> [b#, b, b, c, a] {- DP (Top 0) (Input 1) -}
  [b#, c] |-> [a#] {- DP (Top 0) (Input 2) -}
  [a, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, c] ->= [c] {- DP Nontop (Input 0) -}
  [a, b, b] ->= [b, b, b, c, a] {- DP Nontop (Input 1) -}
  [b, c] ->= [a] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / 0A  0A  3A - \
        | 0A  0A  3A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( b
  , Wk  / 0A  0A 3A - \
        | 0A  0A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( c
  , Wk  / 0A  0A  3A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( a#
  , Wk  / 19A 19A 21A - \
        | 19A 19A 21A - |
        | 19A 19A 21A - |
        \ -   -   -   - / )
  ( b#
  , Wk  / 20A 21A 21A - \
        | 20A 21A 21A - |
        | 20A 21A 21A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [a#, b, b] |-> [b#, b, b, c, a] {- DP (Top 0) (Input 1) -}
  [a, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, c] ->= [c] {- DP Nontop (Input 0) -}
  [a, b, b] ->= [b, b, b, c, a] {- DP Nontop (Input 1) -}
  [b, c] ->= [a] {- DP Nontop (Input 2) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, c] ->= [c] {- DP Nontop (Input 0) -}
  [a, b, b] ->= [b, b, b, c, a] {- DP Nontop (Input 1) -}
  [b, c] ->= [a] {- DP Nontop (Input 2) -}
reason
  EDG

**************************************************
skeleton: \Mirror(3,3)\Context\Mirror(5,3)\Deepee\EDG(5/5,5)\Matrix{\Arctic}{3}\EDG(2/5,5)\Matrix{\Arctic}{3}(1/5,5)\Weight(0/5,3)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 1.200458354000
  min duration 0.041371238000
  total durat. 2.798728560000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 82
      , num_strict_rules = 55
      , num_top_rules = 55
      , num_weak_rules = 27
      , alphabet_size = 15
      , total_length = 537}
    , self = 88
    , parent = Nothing
    , duration = 1.200458354000
    , status = Fail
    , start = 2025-09-03 11:18:59.603034987 UTC
    , finish = 2025-09-03 11:19:00.803493341 UTC
    , thread_cap_info = ("ThreadId 108", 2, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 1.185351533000
  min duration 0.053843874000
  total durat. 2.740790888000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 82
      , num_strict_rules = 55
      , num_top_rules = 55
      , num_weak_rules = 27
      , alphabet_size = 15
      , total_length = 537}
    , self = 89
    , parent = Nothing
    , duration = 1.185351533000
    , status = Fail
    , start = 2025-09-03 11:18:59.618144026 UTC
    , finish = 2025-09-03 11:19:00.803495559 UTC
    , thread_cap_info = ("ThreadId 109", 2, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.045401371000
  min duration 1.045401371000
  total durat. 1.045401371000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 35}
    , self = 97
    , parent = Nothing
    , duration = 1.045401371000
    , status = Success
    , start = 2025-09-03 11:18:59.978568828 UTC
    , finish = 2025-09-03 11:19:01.023970199 UTC
    , thread_cap_info = ("ThreadId 125", 3, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.882091696000
  min duration 0.281763123000
  total durat. 1.163854819000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 0.980709260000
  min duration 0.189576283000
  total durat. 2.095739219000
**************************************************
F                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                  = False}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F                  = 12} , self = 41 , parent = Nothing , duration = 0.140283059000 , status
F                  = Fail , start = 2025-09-03 11:18:59.342201704 UTC , finish = 2025-09-03
F                  11:18:59.482484763 UTC , thread_cap_info = ("ThreadId 22", 0, False)}
F                  
| F                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| F                , closure = Forward\n , start_strict_only = True\n , max_closure_length
| F                = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| F                Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| F                8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| F                = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| F                ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| F                1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| F                = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| F                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| F                = 12} , self = 78 , parent = Nothing , duration = 0.461393080000 , status
| F                = Fail , start = 2025-09-03 11:18:59.342214227 UTC , finish = 2025-09-03
| F                11:18:59.803607307 UTC , thread_cap_info = ("ThreadId 43", 0, False)}
| F                
| | F              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | F              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | F              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | F              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | F              = Size { num_rules = 27 , num_strict_rules = 27 , num_top_rules = 0 , num_weak_rules
| | F              = 0 , alphabet_size = 9 , total_length = 162} , self = 43 , parent = Nothing
| | F              , duration = 0.152418977000 , status = Fail , start = 2025-09-03 11:18:59.343189482
| | F              UTC , finish = 2025-09-03 11:18:59.495608459 UTC , thread_cap_info = ("ThreadId
| | F              51", 3, False)}
| | F              
| | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | F            = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | F            = 162} , self = 69 , parent = Nothing , duration = 0.253198780000 , status
| | | F            = Fail , start = 2025-09-03 11:18:59.34974633 UTC , finish = 2025-09-03
| | | F            11:18:59.60294511 UTC , thread_cap_info = ("ThreadId 65", 2, False)}
| | | F            
| | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | F          = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | F          = 162} , self = 61 , parent = Nothing , duration = 0.211105143000 , status
| | | | F          = Fail , start = 2025-09-03 11:18:59.349755819 UTC , finish = 2025-09-03
| | | | F          11:18:59.560860962 UTC , thread_cap_info = ("ThreadId 67", 2, False)}
| | | | F          
F | | | |          
  | F | |          
F |   | |          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F |   | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F |   | |          = False\n , verbose = False}" , input_size = Size { num_rules = 96 , num_strict_rules
F |   | |          = 69 , num_top_rules = 69 , num_weak_rules = 27 , alphabet_size = 17 ,
F |   | |          total_length = 609} , self = 83 , parent = Nothing , duration = 0.881659462000
F |   | |          , status = Fail , start = 2025-09-03 11:18:59.520227043 UTC , finish =
F |   | |          2025-09-03 11:19:00.401886505 UTC , thread_cap_info = ("ThreadId 92", 3,
F |   | |          False)}
F |   | |          
| | F | |          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | |          = False\n , verbose = False}" , input_size = Size { num_rules = 96 , num_strict_rules
| | F | |          = 69 , num_top_rules = 69 , num_weak_rules = 27 , alphabet_size = 17 ,
| | F | |          total_length = 609} , self = 82 , parent = Nothing , duration = 0.828571919000
| | F | |          , status = Fail , start = 2025-09-03 11:18:59.538969676 UTC , finish =
| | F | |          2025-09-03 11:19:00.367541595 UTC , thread_cap_info = ("ThreadId 93", 3,
| | F | |          False)}
| | F | |          
| | | | F          
| | | F            
| | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 82 , num_strict_rules
| | | F            = 55 , num_top_rules = 55 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | F            total_length = 537} , self = 88 , parent = Nothing , duration = 1.200458354000
| | | F            , status = Fail , start = 2025-09-03 11:18:59.603034987 UTC , finish =
| | | F            2025-09-03 11:19:00.803493341 UTC , thread_cap_info = ("ThreadId 108",
| | | F            2, False)}
| | | F            
| | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 82 , num_strict_rules
| | | | F          = 55 , num_top_rules = 55 , num_weak_rules = 27 , alphabet_size = 15 ,
| | | | F          total_length = 537} , self = 89 , parent = Nothing , duration = 1.185351533000
| | | | F          , status = Fail , start = 2025-09-03 11:18:59.618144026 UTC , finish =
| | | | F          2025-09-03 11:19:00.803495559 UTC , thread_cap_info = ("ThreadId 109",
| | | | F          2, False)}
| | | | F          
| | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | F        = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | | | F        = 48} , self = 79 , parent = Nothing , duration = 0.209253378000 , status
| | | | | F        = Fail , start = 2025-09-03 11:18:59.668896646 UTC , finish = 2025-09-03
| | | | | F        11:18:59.878150024 UTC , thread_cap_info = ("ThreadId 112", 0, False)}
| | | | | F        
| | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | F      = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | | | | | F      = 35} , self = 81 , parent = Nothing , duration = 0.252884527000 , status
| | | | | | F      = Fail , start = 2025-09-03 11:18:59.705271848 UTC , finish = 2025-09-03
| | | | | | F      11:18:59.958156375 UTC , thread_cap_info = ("ThreadId 116", 0, False)}
| | | | | | F      
| | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | F    = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | | | | | | F    = 35} , self = 80 , parent = Nothing , duration = 0.192909143000 , status
| | | | | | | F    = Fail , start = 2025-09-03 11:18:59.705274155 UTC , finish = 2025-09-03
| | | | | | | F    11:18:59.898183298 UTC , thread_cap_info = ("ThreadId 117", 0, False)}
| | | | | | | F    
| | | | | | | | S  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | S  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | S  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | S  = 10 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 ,
| | | | | | | | S  alphabet_size = 5 , total_length = 48} , self = 84 , parent = Nothing ,
| | | | | | | | S  duration = 0.925453676000 , status = Success , start = 2025-09-03 11:18:59.714143408
| | | | | | | | S  UTC , finish = 2025-09-03 11:19:00.639597084 UTC , thread_cap_info = ("ThreadId
| | | | | | | | S  119", 0, False)}
| | | | | | | | S  
| F | | | | | | |  
|   | | | F | | |  
|   | | |   | F |  
| E | | |   |   |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E | | |   |   |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E | | |   |   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | | |   |   |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | | |   |   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | | |   |   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| E | | |   |   |  , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size
| E | | |   |   |  = 5 , total_length = 48} , self = 86 , parent = Nothing , duration = 0.882091696000
| E | | |   |   |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:18:59.898203682
| E | | |   |   |  UTC , finish = 2025-09-03 11:19:00.780295378 UTC , thread_cap_info = ("ThreadId
| E | | |   |   |  123", 0, False)}
| E | | |   |   |  
| | | | | S |   |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S |   |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S |   |  = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | | | S |   |  = 4 , total_length = 35} , self = 93 , parent = Nothing , duration = 0.980709260000
| | | | | S |   |  , status = Success , start = 2025-09-03 11:18:59.919486984 UTC , finish
| | | | | S |   |  = 2025-09-03 11:19:00.900196244 UTC , thread_cap_info = ("ThreadId 124",
| | | | | S |   |  3, False)}
| | | | | S |   |  
| | | | | | F   |  
| | | | | | S   |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | S   |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | S   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | S   |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | S   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | S   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | | | S   |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | | | | S   |  = 4 , total_length = 35} , self = 97 , parent = Nothing , duration = 1.045401371000
| | | | | | S   |  , status = Success , start = 2025-09-03 11:18:59.978568828 UTC , finish
| | | | | | S   |  = 2025-09-03 11:19:01.023970199 UTC , thread_cap_info = ("ThreadId 125",
| | | | | | S   |  3, False)}
| | | | | | S   |  
| | F | | | |   |  
F |   | | | |   |  
  |   | | | |   S  
  E   | | | |      
      F | | |      
        F | |      
          S |      
S           |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S           |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S           |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S           |      = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
S           |      = 5 , total_length = 31} , self = 100 , parent = Nothing , duration = 0.189576283000
S           |      , status = Success , start = 2025-09-03 11:19:00.979324268 UTC , finish
S           |      = 2025-09-03 11:19:01.168900551 UTC , thread_cap_info = ("ThreadId 147",
S           |      0, False)}
S           |      
| E         |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E         |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E         |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E         |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E         |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E         |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| E         |      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| E         |      = 5 , total_length = 31} , self = 105 , parent = Nothing , duration = 0.281763123000
| E         |      , status = Except "AsyncCancelled" , start = 2025-09-03 11:19:00.998335265
| E         |      UTC , finish = 2025-09-03 11:19:01.280098388 UTC , thread_cap_info = ("ThreadId
| E         |      148", 0, False)}
| E         |      
| |         S      
S |                
F |                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F |                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F |                = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
F |                = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 4 , total_length
F |                = 31} , self = 108 , parent = Nothing , duration = 0.105483204000 , status
F |                = Fail , start = 2025-09-03 11:19:01.198206703 UTC , finish = 2025-09-03
F |                11:19:01.303689907 UTC , thread_cap_info = ("ThreadId 157", 0, False)}
F |                
| E                
F                  
