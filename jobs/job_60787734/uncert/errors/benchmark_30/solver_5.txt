Input TRS:
    1: A(a(x1)) -> AA(x1)
    2: A(b(x1)) -> A(B(x1))
    3: AA(a(x1)) -> AA(A(x1))
    4: AA(b(x1)) -> AAB(x1)
    5: AAB(a(x1)) -> AABA(x1)
    6: AAB(b(x1)) -> AAB(B(x1))
    7: AABA(a(x1)) -> AABA(A(x1))
    8: AABA(b(x1)) -> AABAB(x1)
    9: AABAB(a(x1)) -> AABABA(x1)
    10: AABAB(b(x1)) -> AABAB(B(x1))
    11: AABABA(a(x1)) -> AABABA(A(x1))
    12: AABABA(b(x1)) -> AABABAB(x1)
    13: AABABAB(a(x1)) -> AABABABA(x1)
    14: AABABAB(b(x1)) -> AABABAB(B(x1))
    15: AABABABA(a(x1)) -> AABABABAA(x1)
    16: AABABABA(b(x1)) -> AABABABA(B(x1))
    17: AABABABAA(a(x1)) -> AABABABAAA(x1)
    18: AABABABAA(b(x1)) -> AABABABAA(B(x1))
    19: AABABABAAA(x1) -> b(a(a(a(b(a(x1))))))
    20: B(a(x1)) -> BA(x1)
    21: B(b(x1)) -> B(B(x1))
    22: BA(a(x1)) -> BAA(x1)
    23: BA(b(x1)) -> BA(B(x1))
    24: BAA(a(x1)) -> BAAA(x1)
    25: BAA(b(x1)) -> BAA(B(x1))
    26: BAAA(a(x1)) -> BAAA(A(x1))
    27: BAAA(b(x1)) -> BAAAB(x1)
    28: BAAAB(a(x1)) -> BAAABA(x1)
    29: BAAAB(b(x1)) -> BAAAB(B(x1))
    30: BAAABA(x1) -> a(a(b(a(b(a(b(a(a(a(x1))))))))))
Number of strict rules: 30
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #A(b(x1)) -> #A(B(x1))
   #2: #A(b(x1)) -> #B(x1)
   #3: #BAAAB(b(x1)) -> #BAAAB(B(x1))
   #4: #BAAAB(b(x1)) -> #B(x1)
   #5: #AAB(b(x1)) -> #AAB(B(x1))
   #6: #AAB(b(x1)) -> #B(x1)
   #7: #AABABAB(a(x1)) -> #AABABABA(x1)
   #8: #AABAB(a(x1)) -> #AABABA(x1)
   #9: #AABABA(a(x1)) -> #AABABA(A(x1))
   #10: #AABABA(a(x1)) -> #A(x1)
   #11: #BAA(a(x1)) -> #BAAA(x1)
   #12: #BA(b(x1)) -> #BA(B(x1))
   #13: #BA(b(x1)) -> #B(x1)
   #14: #AABABA(b(x1)) -> #AABABAB(x1)
   #15: #AABABAB(b(x1)) -> #AABABAB(B(x1))
   #16: #AABABAB(b(x1)) -> #B(x1)
   #17: #BAA(b(x1)) -> #BAA(B(x1))
   #18: #BAA(b(x1)) -> #B(x1)
   #19: #B(a(x1)) -> #BA(x1)
   #20: #AABA(a(x1)) -> #AABA(A(x1))
   #21: #AABA(a(x1)) -> #A(x1)
   #22: #AABAB(b(x1)) -> #AABAB(B(x1))
   #23: #AABAB(b(x1)) -> #B(x1)
   #24: #AAB(a(x1)) -> #AABA(x1)
   #25: #BAAAB(a(x1)) -> #BAAABA(x1)
   #26: #BA(a(x1)) -> #BAA(x1)
   #27: #BAAA(b(x1)) -> #BAAAB(x1)
   #28: #AABABABAA(a(x1)) -> #AABABABAAA(x1)
   #29: #BAAA(a(x1)) -> #BAAA(A(x1))
   #30: #BAAA(a(x1)) -> #A(x1)
   #31: #B(b(x1)) -> #B(B(x1))
   #32: #B(b(x1)) -> #B(x1)
   #33: #AABABABA(b(x1)) -> #AABABABA(B(x1))
   #34: #AABABABA(b(x1)) -> #B(x1)
   #35: #AA(a(x1)) -> #AA(A(x1))
   #36: #AA(a(x1)) -> #A(x1)
   #37: #A(a(x1)) -> #AA(x1)
   #38: #AABA(b(x1)) -> #AABAB(x1)
   #39: #AABABABA(a(x1)) -> #AABABABAA(x1)
   #40: #AA(b(x1)) -> #AAB(x1)
   #41: #AABABABAA(b(x1)) -> #AABABABAA(B(x1))
   #42: #AABABABAA(b(x1)) -> #B(x1)
Number of SCCs: 1, DPs: 38, edges: 86
	SCC { #1 #2 #4..24 #26 #27 #29..40 #42 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: x1_1; x1_1
  #BA(x1)	weight: (/ 1 16) + x1_1; x1_1
 BAAAB(x1)	weight: x1_2; (/ 1 16) + x1_2
AABABABA(x1)	weight: x1_1; (/ 1 8) + x1_1
  #AA(x1)	weight: (/ 1 16) + x1_1; x1_1
#BAAA(x1)	weight: (/ 1 16) + x1_1; x1_1
#AABABABAAA(x1)	weight: 0; 0
     b(x1)	weight: x1_2; (/ 1 8) + x1_2
   #B(x1)	weight: (/ 1 16) + x1_2; x1_2
AABABABAA(x1)	weight: x1_1; (/ 1 8) + x1_1
  BAAA(x1)	weight: x1_1; (/ 1 16) + x1_1
AABABABAAA(x1)	weight: x1_1; (/ 1 8) + x1_1
BAAABA(x1)	weight: x1_1; (/ 1 16) + x1_1
#AABABABA(x1)	weight: (/ 1 16) + x1_1; x1_1
#AABABABAA(x1)	weight: (/ 1 16) + x1_1; x1_1
   BAA(x1)	weight: x1_1; (/ 1 16) + x1_1
    AA(x1)	weight: x1_1; (/ 1 8) + x1_1
 AABAB(x1)	weight: x1_2; (/ 1 8) + x1_2
#AABAB(x1)	weight: (/ 1 16) + x1_2; x1_2
     B(x1)	weight: x1_2; (/ 1 16) + x1_2
   AAB(x1)	weight: x1_2; (/ 1 8) + x1_2
#BAAAB(x1)	weight: x1_2; x1_2
     A(x1)	weight: x1_1; (/ 1 8) + x1_1 + x1_2
   #A(x1)	weight: (/ 1 16) + x1_1; x1_1
AABABAB(x1)	weight: x1_2; (/ 1 8) + x1_2
  AABA(x1)	weight: x1_1; (/ 1 8) + x1_1
#AABA(x1)	weight: (/ 1 16) + x1_1; x1_1
#AABABAB(x1)	weight: (/ 1 16) + x1_2; x1_2
 #BAA(x1)	weight: (/ 1 16) + x1_1; x1_1
#BAAABA(x1)	weight: 0; 0
#AABABA(x1)	weight: (/ 1 16) + x1_1; x1_1
 #AAB(x1)	weight: (/ 1 16) + x1_2; x1_2
AABABA(x1)	weight: x1_1; (/ 1 8) + x1_1
    BA(x1)	weight: x1_1; (/ 1 16) + x1_1
    Usable rules: { 1..30 }
    Removed DPs: #4..6 #15 #16 #22 #23 #27 #31 #32
Number of SCCs: 1, DPs: 27, edges: 47
	SCC { #1 #2 #7..14 #17..21 #24 #26 #30 #33..40 #42 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: x1_2; x1_1
  #BA(x1)	weight: (/ 1 16) + x1_2; x1_2
 BAAAB(x1)	weight: (/ 1 8) + x1_1; x1_1
AABABABA(x1)	weight: (/ 1 8) + x1_2; x1_2
  #AA(x1)	weight: (/ 1 16) + x1_2; x1_2
#BAAA(x1)	weight: (/ 1 16) + x1_2; x1_2
#AABABABAAA(x1)	weight: 0; 0
     b(x1)	weight: (/ 1 8) + x1_1; x1_1
   #B(x1)	weight: (/ 1 16) + x1_1; x1_1
AABABABAA(x1)	weight: (/ 1 8) + x1_1; x1_1
  BAAA(x1)	weight: (/ 1 8) + x1_2; x1_2
AABABABAAA(x1)	weight: (/ 1 8) + x1_2; x1_2
BAAABA(x1)	weight: (/ 1 8) + x1_2; x1_2
#AABABABA(x1)	weight: (/ 1 16) + x1_2; x1_2
#AABABABAA(x1)	weight: x1_1; x1_1
   BAA(x1)	weight: (/ 1 8) + x1_1; x1_1
    AA(x1)	weight: x1_1; x1_2
 AABAB(x1)	weight: (/ 1 8) + x1_1; x1_1
#AABAB(x1)	weight: (/ 1 16) + x1_1; x1_1
     B(x1)	weight: (/ 1 8) + x1_1; x1_1
   AAB(x1)	weight: (/ 1 8) + x1_1; x1_1
#BAAAB(x1)	weight: 0; 0
     A(x1)	weight: x1_2; x1_1
   #A(x1)	weight: (/ 1 16) + x1_1; x1_1
AABABAB(x1)	weight: (/ 1 8) + x1_1; x1_1
  AABA(x1)	weight: (/ 1 8) + x1_2; x1_2
#AABA(x1)	weight: (/ 1 16) + x1_2; x1_2
#AABABAB(x1)	weight: (/ 1 16) + x1_1; x1_1
 #BAA(x1)	weight: (/ 1 16) + x1_1; x1_1
#BAAABA(x1)	weight: 0; 0
#AABABA(x1)	weight: (/ 1 16) + x1_2; x1_2
 #AAB(x1)	weight: (/ 1 16) + x1_1; x1_1
AABABA(x1)	weight: (/ 1 8) + x1_2; x1_2
    BA(x1)	weight: (/ 1 8) + x1_2; x1_2
    Usable rules: { 1..30 }
    Removed DPs: #2 #18 #39 #42
Number of SCCs: 1, DPs: 22, edges: 35
	SCC { #1 #7..14 #17 #19..21 #24 #26 #30 #34..38 #40 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
