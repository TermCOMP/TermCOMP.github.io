**************************************************
summary
**************************************************
SRS with 1 rules on 2 letters       Drop
SRS with 1 rules on 2 letters       mirror
SRS with 1 rules on 2 letters       Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 52 states

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, a, b, a, a, b, a, b, a] -> [ a , b , a , a , b , a , b , a , b , a , a , b ] {- Input 0 -}
reason
  Drop
    property Termination
    has value Just True
    for SRS
      [b, a, a, b, a, b, a] -> [a, b, a, b, a, b, a, a, b] {- Dropped 3 0 (Input 0) -}
    reason
      mirror
       property Termination
    has value Just True
    for SRS
      [a, b, a, b, a, a, b] -> [ b , a , a , b , a , b , a , b , a ] {- Mirror (Dropped 3 0 (Input 0)) -}
    reason
      Matchbound
        Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 52 states

   property Termination
has value Just True
for SRS
  [b, a, a, b, a, b, a] -> [a, b, a, b, a, b, a, a, b] {- Dropped 3 0 (Input 0) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, b, a, b, a, a, b] -> [ b , a , a , b , a , b , a , b , a ] {- Mirror (Dropped 3 0 (Input 0)) -}
reason
  Matchbound
    Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 52 states

**************************************************
skeleton: (1,2)\Drop{3}{0}\Mirror(1,2)\Rfcmatchbound{1}[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.054917627000
  min duration 3.054917627000
  total durat. 3.054917627000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 96}
    , self = 65
    , parent = Nothing
    , duration = 3.054917627000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:35:30.606229599 UTC
    , finish = 2025-09-03 12:35:33.661147226 UTC
    , thread_cap_info = ("ThreadId 67", 2, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.060570664000
  min duration 3.060570664000
  total durat. 3.060570664000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 96}
    , self = 66
    , parent = Nothing
    , duration = 3.060570664000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:35:30.620897011 UTC
    , finish = 2025-09-03 12:35:33.681467675 UTC
    , thread_cap_info = ("ThreadId 70", 2, False)}
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 4
  max duration 3.129616017000
  min duration 1.625054486000
  total durat. 10.831743300000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 22}
    , self = 68
    , parent = Nothing
    , duration = 1.625054486000
    , status = Fail
    , start = 2025-09-03 12:35:32.201494299 UTC
    , finish = 2025-09-03 12:35:33.826548785 UTC
    , thread_cap_info = ("ThreadId 148", 0, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 96}
    , self = 64
    , parent = Nothing
    , duration = 3.019204494000
    , status = Fail
    , start = 2025-09-03 12:35:30.600896952 UTC
    , finish = 2025-09-03 12:35:33.620101446 UTC
    , thread_cap_info = ("ThreadId 57", 3, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 20}
    , self = 70
    , parent = Nothing
    , duration = 3.057868303000
    , status = Fail
    , start = 2025-09-03 12:35:30.821553284 UTC
    , finish = 2025-09-03 12:35:33.879421587 UTC
    , thread_cap_info = ("ThreadId 91", 0, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 20}
    , self = 72
    , parent = Nothing
    , duration = 3.129616017000
    , status = Fail
    , start = 2025-09-03 12:35:30.901597258 UTC
    , finish = 2025-09-03 12:35:34.031213275 UTC
    , thread_cap_info = ("ThreadId 103", 0, False)}
Except "AsyncCancelled" : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 1
  max duration 1.480288838000
  min duration 1.480288838000
  total durat. 1.480288838000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 16}
    , self = 59
    , parent = Nothing
    , duration = 1.480288838000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:35:31.160959124 UTC
    , finish = 2025-09-03 12:35:32.641247962 UTC
    , thread_cap_info = ("ThreadId 125", 0, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 2
  max duration 2.999984049000
  min duration 2.199996697000
  total durat. 5.199980746000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 16}
    , self = 74
    , parent = Nothing
    , duration = 2.199996697000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:35:31.840893846 UTC
    , finish = 2025-09-03 12:35:34.040890543 UTC
    , thread_cap_info = ("ThreadId 142", 0, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 20}
    , self = 73
    , parent = Nothing
    , duration = 2.999984049000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:35:31.040905602 UTC
    , finish = 2025-09-03 12:35:34.040889651 UTC
    , thread_cap_info = ("ThreadId 120", 0, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 5
  max duration 3.417584392000
  min duration 1.379344619000
  total durat. 12.035362851000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 22}
    , self = 76
    , parent = Nothing
    , duration = 1.379344619000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:35:32.66159135 UTC
    , finish = 2025-09-03 12:35:34.040935969 UTC
    , thread_cap_info = ("ThreadId 151", 0, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 16}
    , self = 67
    , parent = Nothing
    , duration = 1.919539497000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:35:31.821593716 UTC
    , finish = 2025-09-03 12:35:33.741133213 UTC
    , thread_cap_info = ("ThreadId 141", 0, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 18}
    , self = 71
    , parent = Nothing
    , duration = 2.499765166000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:35:31.381135674 UTC
    , finish = 2025-09-03 12:35:33.88090084 UTC
    , thread_cap_info = ("ThreadId 129", 0, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 20}
    , self = 69
    , parent = Nothing
    , duration = 2.819129177000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:35:31.022154622 UTC
    , finish = 2025-09-03 12:35:33.841283799 UTC
    , thread_cap_info = ("ThreadId 119", 0, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 22}
    , self = 77
    , parent = Nothing
    , duration = 3.417584392000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:35:30.643940459 UTC
    , finish = 2025-09-03 12:35:34.061524851 UTC
    , thread_cap_info = ("ThreadId 73", 0, False)}
Fail : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = False}"
  total number 3
  max duration 2.350370605000
  min duration 2.161274310000
  total durat. 6.761780747000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 22}
    , self = 60
    , parent = Nothing
    , duration = 2.161274310000
    , status = Fail
    , start = 2025-09-03 12:35:30.599903179 UTC
    , finish = 2025-09-03 12:35:32.761177489 UTC
    , thread_cap_info = ("ThreadId 22", 0, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 18}
    , self = 63
    , parent = Nothing
    , duration = 2.250135832000
    , status = Fail
    , start = 2025-09-03 12:35:30.920892522 UTC
    , finish = 2025-09-03 12:35:33.171028354 UTC
    , thread_cap_info = ("ThreadId 93", 0, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 20}
    , self = 62
    , parent = Nothing
    , duration = 2.350370605000
    , status = Fail
    , start = 2025-09-03 12:35:30.741140316 UTC
    , finish = 2025-09-03 12:35:33.091510921 UTC
    , thread_cap_info = ("ThreadId 78", 0, False)}
Except "AsyncCancelled" : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = False}"
  total number 2
  max duration 2.557594721000
  min duration 1.979942071000
  total durat. 4.537536792000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 16}
    , self = 61
    , parent = Nothing
    , duration = 1.979942071000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:35:30.96144931 UTC
    , finish = 2025-09-03 12:35:32.941391381 UTC
    , thread_cap_info = ("ThreadId 109", 0, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 22}
    , self = 75
    , parent = Nothing
    , duration = 2.557594721000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:35:31.483301713 UTC
    , finish = 2025-09-03 12:35:34.040896434 UTC
    , thread_cap_info = ("ThreadId 133", 0, False)}
**************************************************
F                                    Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                                    , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                                    = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                                    , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                                    = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
F                                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F                                    = 22} , self = 60 , parent = Nothing , duration = 2.161274310000 , status
F                                    = Fail , start = 2025-09-03 12:35:30.599903179 UTC , finish = 2025-09-03
F                                    12:35:32.761177489 UTC , thread_cap_info = ("ThreadId 22", 0, False)}
F                                    
| F                                  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F                                  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F                                  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F                                  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F                                  = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| F                                  = 0 , alphabet_size = 4 , total_length = 96} , self = 64 , parent = Nothing
| F                                  , duration = 3.019204494000 , status = Fail , start = 2025-09-03 12:35:30.600896952
| F                                  UTC , finish = 2025-09-03 12:35:33.620101446 UTC , thread_cap_info = ("ThreadId
| F                                  57", 3, False)}
| F                                  
| | E                                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | E                                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E                                = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | E                                = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | E                                = 96} , self = 65 , parent = Nothing , duration = 3.054917627000 , status
| | E                                = Except "AsyncCancelled" , start = 2025-09-03 12:35:30.606229599 UTC ,
| | E                                finish = 2025-09-03 12:35:33.661147226 UTC , thread_cap_info = ("ThreadId
| | E                                67", 2, False)}
| | E                                
| | | E                              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | E                              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E                              = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | E                              = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | E                              = 96} , self = 66 , parent = Nothing , duration = 3.060570664000 , status
| | | E                              = Except "AsyncCancelled" , start = 2025-09-03 12:35:30.620897011 UTC ,
| | | E                              finish = 2025-09-03 12:35:33.681467675 UTC , thread_cap_info = ("ThreadId
| | | E                              70", 2, False)}
| | | E                              
| | | | E                            Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | E                            , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | E                            = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | E                            , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | E                            max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | E                            [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | E                            string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | E                            , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | E                            = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | E                            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | E                            = 22} , self = 77 , parent = Nothing , duration = 3.417584392000 , status
| | | | E                            = Except "AsyncCancelled" , start = 2025-09-03 12:35:30.643940459 UTC ,
| | | | E                            finish = 2025-09-03 12:35:34.061524851 UTC , thread_cap_info = ("ThreadId
| | | | E                            73", 0, False)}
| | | | E                            
| | | | | F                          Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | F                          , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | F                          = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | F                          , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | F                          = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | F                          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | F                          = 20} , self = 62 , parent = Nothing , duration = 2.350370605000 , status
| | | | | F                          = Fail , start = 2025-09-03 12:35:30.741140316 UTC , finish = 2025-09-03
| | | | | F                          12:35:33.091510921 UTC , thread_cap_info = ("ThreadId 78", 0, False)}
| | | | | F                          
| | | | | | F                        Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | F                        , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | F                        = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | F                        False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | F                        = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | F                        = 0 , alphabet_size = 2 , total_length = 20} , self = 70 , parent = Nothing
| | | | | | F                        , duration = 3.057868303000 , status = Fail , start = 2025-09-03 12:35:30.821553284
| | | | | | F                        UTC , finish = 2025-09-03 12:35:33.879421587 UTC , thread_cap_info = ("ThreadId
| | | | | | F                        91", 0, False)}
| | | | | | F                        
| | | | | | | F                      Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | F                      , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | F                      = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | F                      False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | F                      = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | F                      = 0 , alphabet_size = 2 , total_length = 20} , self = 72 , parent = Nothing
| | | | | | | F                      , duration = 3.129616017000 , status = Fail , start = 2025-09-03 12:35:30.901597258
| | | | | | | F                      UTC , finish = 2025-09-03 12:35:34.031213275 UTC , thread_cap_info = ("ThreadId
| | | | | | | F                      103", 0, False)}
| | | | | | | F                      
| | | | | | | | F                    Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | F                    , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | F                    = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | F                    , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | F                    = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | F                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | F                    = 18} , self = 63 , parent = Nothing , duration = 2.250135832000 , status
| | | | | | | | F                    = Fail , start = 2025-09-03 12:35:30.920892522 UTC , finish = 2025-09-03
| | | | | | | | F                    12:35:33.171028354 UTC , thread_cap_info = ("ThreadId 93", 0, False)}
| | | | | | | | F                    
| | | | | | | | | E                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | | E                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | | E                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | | E                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | | E                  = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | E                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | E                  = 16} , self = 61 , parent = Nothing , duration = 1.979942071000 , status
| | | | | | | | | E                  = Except "AsyncCancelled" , start = 2025-09-03 12:35:30.96144931 UTC ,
| | | | | | | | | E                  finish = 2025-09-03 12:35:32.941391381 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | E                  109", 0, False)}
| | | | | | | | | E                  
| | | | | | | | | | E                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | E                , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | E                = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | E                , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | E                max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | E                [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | E                string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | E                , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | E                = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | E                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | E                = 20} , self = 69 , parent = Nothing , duration = 2.819129177000 , status
| | | | | | | | | | E                = Except "AsyncCancelled" , start = 2025-09-03 12:35:31.022154622 UTC ,
| | | | | | | | | | E                finish = 2025-09-03 12:35:33.841283799 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | E                119", 0, False)}
| | | | | | | | | | E                
| | | | | | | | | | | E              Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | E              , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | E              = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | E              , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | E              max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | E              [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | E              string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | E              , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | E              = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | E              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | E              = 20} , self = 73 , parent = Nothing , duration = 2.999984049000 , status
| | | | | | | | | | | E              = Except "AsyncCancelled" , start = 2025-09-03 12:35:31.040905602 UTC ,
| | | | | | | | | | | E              finish = 2025-09-03 12:35:34.040889651 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | E              120", 0, False)}
| | | | | | | | | | | E              
| | | | | | | | | | | | E            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | E            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | E            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | E            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | E            = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | E            = 0 , alphabet_size = 2 , total_length = 16} , self = 59 , parent = Nothing
| | | | | | | | | | | | E            , duration = 1.480288838000 , status = Except "AsyncCancelled" , start
| | | | | | | | | | | | E            = 2025-09-03 12:35:31.160959124 UTC , finish = 2025-09-03 12:35:32.641247962
| | | | | | | | | | | | E            UTC , thread_cap_info = ("ThreadId 125", 0, False)}
| | | | | | | | | | | | E            
| | | | | | | | | | | | | E          Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | E          , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | E          = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | E          , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | E          max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | E          [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | E          string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | E          , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | E          = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | E          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | E          = 18} , self = 71 , parent = Nothing , duration = 2.499765166000 , status
| | | | | | | | | | | | | E          = Except "AsyncCancelled" , start = 2025-09-03 12:35:31.381135674 UTC ,
| | | | | | | | | | | | | E          finish = 2025-09-03 12:35:33.88090084 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | E          129", 0, False)}
| | | | | | | | | | | | | E          
| | | | | | | | | | | | | | E        Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | | | | | | | E        , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | | | | | | | E        = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | | | | | | | E        , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | | | | | | | E        = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | E        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | E        = 22} , self = 75 , parent = Nothing , duration = 2.557594721000 , status
| | | | | | | | | | | | | | E        = Except "AsyncCancelled" , start = 2025-09-03 12:35:31.483301713 UTC ,
| | | | | | | | | | | | | | E        finish = 2025-09-03 12:35:34.040896434 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | E        133", 0, False)}
| | | | | | | | | | | | | | E        
| | | | | | | | | | | | | | | E      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | E      , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | E      = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | E      , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | E      max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | E      [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | E      string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | E      , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | E      = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | E      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | E      = 16} , self = 67 , parent = Nothing , duration = 1.919539497000 , status
| | | | | | | | | | | | | | | E      = Except "AsyncCancelled" , start = 2025-09-03 12:35:31.821593716 UTC ,
| | | | | | | | | | | | | | | E      finish = 2025-09-03 12:35:33.741133213 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | E      141", 0, False)}
| | | | | | | | | | | | | | | E      
| | | | | | | | | | | | | | | | E    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | E    , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | E    = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | E    , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | E    max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | E    [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | E    string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | E    , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | E    = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | E    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | E    = 16} , self = 74 , parent = Nothing , duration = 2.199996697000 , status
| | | | | | | | | | | | | | | | E    = Except "AsyncCancelled" , start = 2025-09-03 12:35:31.840893846 UTC ,
| | | | | | | | | | | | | | | | E    finish = 2025-09-03 12:35:34.040890543 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | E    142", 0, False)}
| | | | | | | | | | | | | | | | E    
| | | | | | | | | | | | | | | | | F  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | | | | F  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | | | | F  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | | | | F  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | | | | F  = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | | | | F  = 0 , alphabet_size = 2 , total_length = 22} , self = 68 , parent = Nothing
| | | | | | | | | | | | | | | | | F  , duration = 1.625054486000 , status = Fail , start = 2025-09-03 12:35:32.201494299
| | | | | | | | | | | | | | | | | F  UTC , finish = 2025-09-03 12:35:33.826548785 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | F  148", 0, False)}
| | | | | | | | | | | | | | | | | F  
| | | | | | | | | | | | E | | | | |  
| | | | | | | | | | | | E | | | | |  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | E | | | | |  , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | E | | | | |  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | E | | | | |  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | E | | | | |  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | E | | | | |  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | E | | | | |  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | E | | | | |  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | E | | | | |  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | E | | | | |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | E | | | | |  = 22} , self = 76 , parent = Nothing , duration = 1.379344619000 , status
| | | | | | | | | | | | E | | | | |  = Except "AsyncCancelled" , start = 2025-09-03 12:35:32.66159135 UTC ,
| | | | | | | | | | | | E | | | | |  finish = 2025-09-03 12:35:34.040935969 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | E | | | | |  151", 0, False)}
| | | | | | | | | | | | E | | | | |  
F | | | | | | | | | | | | | | | | |  
  | | | | | | | | E | | | | | | | |  
  | | | | F | | |   | | | | | | | |  
  | | | |   | | F   | | | | | | | |  
  F | | |   | |     | | | | | | | |  
    E | |   | |     | | | | | | | |  
      E |   | |     | | | | | | | |  
        |   | |     | | | | | E | |  
        |   | |     | | | | |   | F  
        |   | |     E | | | |   |    
        |   F |       | | | |   |    
        |     |       | | E |   |    
        |     F       | |   |   |    
        |             E |   |   |    
        |               |   |   E    
        |               |   E        
        |               E            
        E                            
