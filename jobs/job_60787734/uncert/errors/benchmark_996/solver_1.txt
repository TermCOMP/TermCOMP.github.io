last 3205 length 14805
last 4001 length 18266
CNF 3205 vars 14805 clauses
CNF 4001 vars 18266 clauses
last 2480 length 13536
CNF 2480 vars 13536 clauses
last 1911 length 8684
last 3054 length 14659
CNF 1911 vars 8684 clauses
last 2559 length 10979
CNF 3054 vars 14659 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3170, clauses: 12978
CNF 2559 vars 10979 clauses
last 3170 length 12978
CNF 3170 vars 12978 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3388, clauses: 13495
last 3388 length 13495
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3170, clauses: 12978, status: Satisfied, time: 0.192263595s
CNF 3388 vars 13495 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8087, clauses: 33744
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3388, clauses: 13495, status: Unsatisfied, time: 0.117023008s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9215, clauses: 38582
last 9215 length 38582
last 1956 length 8275
CNF 9215 vars 38582 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5877, clauses: 24393
CNF 1956 vars 8275 clauses
last 1367 length 5824
last 5877 length 24393
CNF 5877 vars 24393 clauses
CNF 1367 vars 5824 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2748, clauses: 10802
last 2748 length 10802
CNF 2748 vars 10802 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5877, clauses: 24393, status: Unsatisfied, time: 0.190494749s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7413, clauses: 30898
last 7413 length 30898
CNF 7413 vars 30898 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2748, clauses: 10802, status: Unsatisfied, time: 0.088815322s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5573, clauses: 23857
last 5573 length 23857
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4771, clauses: 19565
last 4771 length 19565
CNF 4771 vars 19565 clauses
CNF 5573 vars 23857 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7413, clauses: 30898, status: Unsatisfied, time: 0.380690797s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4771, clauses: 19565, status: Unsatisfied, time: 0.098094986s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5573, clauses: 23857, status: Satisfied, time: 0.157904912s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4512, clauses: 19059
last 4512 length 19059
CNF 4512 vars 19059 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4512, clauses: 19059, status: Satisfied, time: 0.134739241s
**************************************************
summary
**************************************************
SRS with 4 rules on 2 letters       mirror
SRS with 4 rules on 2 letters       context
SRS with 5 rules on 2 letters       mirror
SRS with 5 rules on 2 letters       DP
SRS with 7 strict rules and 5 weak rules on 4 letters       EDG
SRS with 7 strict rules and 5 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 5 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [a, b, a] -> [a] {- Input 1 -}
  [b, a, a, b] -> [a, a, a, a, b, b, b] {- Input 2 -}
  [a, a, a, a] -> [b] {- Input 3 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a] -> [] {- Mirror (Input 0) -}
  [a, b, a] -> [a] {- Mirror (Input 1) -}
  [b, a, a, b] -> [b, b, b, a, a, a, a] {- Mirror (Input 2) -}
  [a, a, a, a] -> [b] {- Mirror (Input 3) -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, a] -> [a] {- Mirror (Input 0) -}
  [b, a] -> [b] {- Mirror (Input 0) -}
  [a, b, a] -> [a] {- Mirror (Input 1) -}
  [b, a, a, b] -> [b, b, b, a, a, a, a] {- Mirror (Input 2) -}
  [a, a, a, a] -> [b] {- Mirror (Input 3) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a] -> [a] {- Input 0 -}
  [a, b] -> [b] {- Input 0 -}
  [a, b, a] -> [a] {- Input 1 -}
  [b, a, a, b] -> [a, a, a, a, b, b, b] {- Input 2 -}
  [a, a, a, a] -> [b] {- Input 3 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, b, a] ->= [a] {- DP Nontop (Input 1) -}
  [b, a, a, b] ->= [a, a, a, a, b, b, b] {- DP Nontop (Input 2) -}
  [a, a, a, a] ->= [b] {- DP Nontop (Input 3) -}
  [a#, a, a, a] |-> [b#] {- DP (Top 0) (Input 3) -}
  [b#, a, a, b] |-> [a#, a, a, a, b, b, b] {- DP (Top 0) (Input 2) -}
  [b#, a, a, b] |-> [a#, a, a, b, b, b] {- DP (Top 1) (Input 2) -}
  [b#, a, a, b] |-> [a#, a, b, b, b] {- DP (Top 2) (Input 2) -}
  [b#, a, a, b] |-> [a#, b, b, b] {- DP (Top 3) (Input 2) -}
  [b#, a, a, b] |-> [b#, b] {- DP (Top 5) (Input 2) -}
  [b#, a, a, b] |-> [b#, b, b] {- DP (Top 4) (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a, a, a] |-> [b#] {- DP (Top 0) (Input 3) -}
  [b#, a, a, b] |-> [a#, a, a, a, b, b, b] {- DP (Top 0) (Input 2) -}
  [b#, a, a, b] |-> [a#, a, a, b, b, b] {- DP (Top 1) (Input 2) -}
  [b#, a, a, b] |-> [a#, a, b, b, b] {- DP (Top 2) (Input 2) -}
  [b#, a, a, b] |-> [a#, b, b, b] {- DP (Top 3) (Input 2) -}
  [b#, a, a, b] |-> [b#, b] {- DP (Top 5) (Input 2) -}
  [b#, a, a, b] |-> [b#, b, b] {- DP (Top 4) (Input 2) -}
  [a, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, b, a] ->= [a] {- DP Nontop (Input 1) -}
  [b, a, a, b] ->= [a, a, a, a, b, b, b] {- DP Nontop (Input 2) -}
  [a, a, a, a] ->= [b] {- DP Nontop (Input 3) -}
reason
  ( a
  , Wk  / 0A  0A  0A 4A - \
        | 0A  0A  0A 0A - |
        | -4A 0A  0A 0A - |
        | -4A -4A 0A 0A - |
        \ -   -   -  -  - / )
  ( b
  , Wk  / 0A  0A  0A  4A - \
        | 0A  0A  0A  4A - |
        | 0A  0A  0A  4A - |
        | -4A -4A -4A 0A - |
        \ -   -   -   -  - / )
  ( a#
  , Wk  / 22A 22A 24A 24A - \
        | 22A 22A 24A 24A - |
        | 22A 22A 24A 24A - |
        | 22A 22A 24A 24A - |
        \ -   -   -   -   - / )
  ( b#
  , Wk  / 23A 25A 25A 27A - \
        | 23A 25A 25A 27A - |
        | 23A 25A 25A 27A - |
        | 23A 25A 25A 27A - |
        \ -   -   -   -   - / )
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- DP Nontop (Input 0) -}
  [a, b] ->= [b] {- DP Nontop (Input 0) -}
  [a, b, a] ->= [a] {- DP Nontop (Input 1) -}
  [b, a, a, b] ->= [a, a, a, a, b, b, b] {- DP Nontop (Input 2) -}
  [a, a, a, a] ->= [b] {- DP Nontop (Input 3) -}
reason
  EDG

**************************************************
skeleton: \Mirror(4,2)\Context\Mirror(5,2)\Deepee\EDG(7/5,4)\Matrix{\Arctic}{4}(0/5,2)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12608, clauses: 54154
last 12608 length 54154

Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 2
  max duration 0.982186098000
  min duration 0.581517994000
  total durat. 1.563704092000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.140075111000
  min duration 0.292774614000
  total durat. 1.432849725000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 82}
    , self = 84
    , parent = Nothing
    , duration = 1.140075111000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:42:40.052628908 UTC
    , finish = 2025-09-03 13:42:41.192704019 UTC
    , thread_cap_info = ("ThreadId 111", 0, False)}
**************************************************
F            Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F            , closure = Backward\n , start_strict_only = True\n , max_closure_length
F            = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F            Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F            8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F            = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F            ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F            1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F            = True})" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
F            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F            = 21} , self = 34 , parent = Nothing , duration = 0.105830076000 , status
F            = Fail , start = 2025-09-03 13:42:38.853873883 UTC , finish = 2025-09-03
F            13:42:38.959703959 UTC , thread_cap_info = ("ThreadId 37", 0, False)}
F            
| F          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F          = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| F          = 0 , alphabet_size = 2 , total_length = 21} , self = 50 , parent = Nothing
| F          , duration = 0.982186098000 , status = Fail , start = 2025-09-03 13:42:38.853902096
| F          UTC , finish = 2025-09-03 13:42:39.836088194 UTC , thread_cap_info = ("ThreadId
| F          43", 0, False)}
| F          
| | F        Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | F        , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | F        = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | F        False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | F        = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| | F        = 0 , alphabet_size = 2 , total_length = 21} , self = 48 , parent = Nothing
| | F        , duration = 0.581517994000 , status = Fail , start = 2025-09-03 13:42:38.853907709
| | F        UTC , finish = 2025-09-03 13:42:39.435425703 UTC , thread_cap_info = ("ThreadId
| | F        45", 0, False)}
| | F        
| | | F      Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | F      , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | F      = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | F      , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | F      = False}" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
| | | F      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | F      = 21} , self = 45 , parent = Nothing , duration = 0.450962513000 , status
| | | F      = Fail , start = 2025-09-03 13:42:38.853909349 UTC , finish = 2025-09-03
| | | F      13:42:39.304871862 UTC , thread_cap_info = ("ThreadId 22", 2, False)}
| | | F      
| | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | F    = 16 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | F    = 116} , self = 43 , parent = Nothing , duration = 0.322195985000 , status
| | | | F    = Fail , start = 2025-09-03 13:42:38.924955686 UTC , finish = 2025-09-03
| | | | F    13:42:39.247151671 UTC , thread_cap_info = ("ThreadId 66", 1, False)}
| | | | F    
| | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | | F  = 16 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | | F  = 116} , self = 40 , parent = Nothing , duration = 0.238020782000 , status
| | | | | F  = Fail , start = 2025-09-03 13:42:38.944959046 UTC , finish = 2025-09-03
| | | | | F  13:42:39.182979828 UTC , thread_cap_info = ("ThreadId 68", 1, False)}
| | | | | F  
F | | | | |  
  | | | | F  
  | | | F    
  | | F      
  | F        
  F          
F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F            = False\n , verbose = False}" , input_size = Size { num_rules = 13 , num_strict_rules
F            = 8 , num_top_rules = 8 , num_weak_rules = 5 , alphabet_size = 4 , total_length
F            = 87} , self = 66 , parent = Nothing , duration = 0.169761970000 , status
F            = Fail , start = 2025-09-03 13:42:39.841048534 UTC , finish = 2025-09-03
F            13:42:40.010810504 UTC , thread_cap_info = ("ThreadId 98", 0, False)}
F            
| F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F          = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| F          = 7 , num_top_rules = 7 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| F          = 82} , self = 67 , parent = Nothing , duration = 0.126790585000 , status
| F          = Fail , start = 2025-09-03 13:42:39.902410032 UTC , finish = 2025-09-03
| F          13:42:40.029200617 UTC , thread_cap_info = ("ThreadId 102", 0, False)}
| F          
| | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F        = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | F        = 7 , num_top_rules = 7 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | F        = 82} , self = 65 , parent = Nothing , duration = 0.105782971000 , status
| | F        = Fail , start = 2025-09-03 13:42:39.904965818 UTC , finish = 2025-09-03
| | F        13:42:40.010748789 UTC , thread_cap_info = ("ThreadId 103", 0, False)}
| | F        
| | | S      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S      = 13 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 5 ,
| | | S      alphabet_size = 4 , total_length = 87} , self = 68 , parent = Nothing ,
| | | S      duration = 0.295475116000 , status = Success , start = 2025-09-03 13:42:39.933631777
| | | S      UTC , finish = 2025-09-03 13:42:40.229106893 UTC , thread_cap_info = ("ThreadId
| | | S      105", 0, False)}
| | | S      
| | F |      
F |   |      
F |   |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F |   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F |   |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F |   |      = 12 , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 5 ,
F |   |      alphabet_size = 4 , total_length = 82} , self = 72 , parent = Nothing ,
F |   |      duration = 0.316829558000 , status = Fail , start = 2025-09-03 13:42:40.014125295
F |   |      UTC , finish = 2025-09-03 13:42:40.330954853 UTC , thread_cap_info = ("ThreadId
F |   |      108", 0, False)}
F |   |      
| F   |      
| E   |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E   |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E   |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E   |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E   |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E   |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 13
| E   |      , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 5 , alphabet_size
| E   |      = 4 , total_length = 87} , self = 70 , parent = Nothing , duration = 0.292774614000
| E   |      , status = Except "AsyncCancelled" , start = 2025-09-03 13:42:40.029253941
| E   |      UTC , finish = 2025-09-03 13:42:40.322028555 UTC , thread_cap_info = ("ThreadId
| E   |      110", 0, False)}
| E   |      
| | E |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | E |      , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 5 , alphabet_size
| | E |      = 4 , total_length = 82} , self = 84 , parent = Nothing , duration = 1.140075111000
| | E |      , status = Except "AsyncCancelled" , start = 2025-09-03 13:42:40.052628908
| | E |      UTC , finish = 2025-09-03 13:42:41.192704019 UTC , thread_cap_info = ("ThreadId
| | E |      111", 0, False)}
| | E |      
| | | S      
| E |        
F   |        
F   |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
F   |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F   |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F   |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F   |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F   |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
F   |        , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 5 , alphabet_size
F   |        = 4 , total_length = 82} , self = 78 , parent = Nothing , duration = 0.301097248000
F   |        , status = Fail , start = 2025-09-03 13:42:40.345040901 UTC , finish =
F   |        2025-09-03 13:42:40.646138149 UTC , thread_cap_info = ("ThreadId 115",
F   |        0, False)}
F   |        
| F |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F |        = 11 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 5 ,
| F |        alphabet_size = 4 , total_length = 66} , self = 79 , parent = Nothing ,
| F |        duration = 0.349494214000 , status = Fail , start = 2025-09-03 13:42:40.478685838
| F |        UTC , finish = 2025-09-03 13:42:40.828180052 UTC , thread_cap_info = ("ThreadId
| F |        124", 0, False)}
| F |        
| | | F      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | F      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | F      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | F      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| | | F      , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 5 , alphabet_size
| | | F      = 4 , total_length = 66} , self = 80 , parent = Nothing , duration = 0.549485176000
| | | F      , status = Fail , start = 2025-09-03 13:42:40.478687681 UTC , finish =
| | | F      2025-09-03 13:42:41.028172857 UTC , thread_cap_info = ("ThreadId 125",
| | | F      0, False)}
| | | F      
F | | |      
S | | |      Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
S | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | | |      = 12 , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 5 ,
S | | |      alphabet_size = 4 , total_length = 82} , self = 82 , parent = Nothing ,
S | | |      duration = 0.431504171000 , status = Success , start = 2025-09-03 13:42:40.661115507
S | | |      UTC , finish = 2025-09-03 13:42:41.092619678 UTC , thread_cap_info = ("ThreadId
S | | |      128", 0, False)}
S | | |      
| F | |      
| F | |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| F | |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| F | |      , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 5 , alphabet_size
| F | |      = 4 , total_length = 66} , self = 81 , parent = Nothing , duration = 0.220704821000
| F | |      , status = Fail , start = 2025-09-03 13:42:40.84497598 UTC , finish = 2025-09-03
| F | |      13:42:41.065680801 UTC , thread_cap_info = ("ThreadId 129", 0, False)}
| F | |      
| | | F      
| | | S      Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | S      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S      = 11 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 5 ,
| | | S      alphabet_size = 4 , total_length = 66} , self = 87 , parent = Nothing ,
| | | S      duration = 0.240837106000 , status = Success , start = 2025-09-03 13:42:41.028197641
| | | S      UTC , finish = 2025-09-03 13:42:41.269034747 UTC , thread_cap_info = ("ThreadId
| | | S      132", 0, False)}
| | | S      
| F | |      
S   | |      
    E |      
      S      
