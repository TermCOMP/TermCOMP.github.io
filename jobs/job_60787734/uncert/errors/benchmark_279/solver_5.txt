Input TRS:
    1: B(a(x1)) -> B(A(x1))
    2: B(b(x1)) -> BB(x1)
    3: BB(a(x1)) -> BBA(x1)
    4: BB(b(x1)) -> BB(B(x1))
    5: BBA(a(x1)) -> BBAA(x1)
    6: BBA(b(x1)) -> BBA(B(x1))
    7: BBAA(a(x1)) -> BBAA(A(x1))
    8: BBAA(b(x1)) -> BBAAB(x1)
    9: BBAAB(a(x1)) -> BBAAB(A(x1))
    10: BBAAB(b(x1)) -> BBAABB(x1)
    11: BBAABB(a(x1)) -> BBAABB(A(x1))
    12: BBAABB(b(x1)) -> BBAABBB(x1)
    13: BBAABBB(a(x1)) -> BBAABBB(A(x1))
    14: BBAABBB(b(x1)) -> BBAABBBB(x1)
    15: BBAABBBB(a(x1)) -> BBAABBBBA(x1)
    16: BBAABBBB(b(x1)) -> BBAABBBB(B(x1))
    17: BBAABBBBA(a(x1)) -> BBAABBBBAA(x1)
    18: BBAABBBBA(b(x1)) -> BBAABBBBA(B(x1))
    19: BBAABBBBAA(x1) -> a(b(b(a(x1))))
    20: A(a(x1)) -> A(A(x1))
    21: A(b(x1)) -> AB(x1)
    22: AB(a(x1)) -> AB(A(x1))
    23: AB(b(x1)) -> ABB(x1)
    24: ABB(a(x1)) -> ABBA(x1)
    25: ABB(b(x1)) -> ABB(B(x1))
    26: ABBA(x1) -> b(b(a(a(b(b(b(b(a(a(x1))))))))))
Number of strict rules: 26
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #B(b(x1)) -> #BB(x1)
   #2: #BBA(b(x1)) -> #BBA(B(x1))
   #3: #BBA(b(x1)) -> #B(x1)
   #4: #BBAABBB(a(x1)) -> #BBAABBB(A(x1))
   #5: #BBAABBB(a(x1)) -> #A(x1)
   #6: #BBAAB(a(x1)) -> #BBAAB(A(x1))
   #7: #BBAAB(a(x1)) -> #A(x1)
   #8: #BBAABB(a(x1)) -> #BBAABB(A(x1))
   #9: #BBAABB(a(x1)) -> #A(x1)
   #10: #ABB(a(x1)) -> #ABBA(x1)
   #11: #AB(b(x1)) -> #ABB(x1)
   #12: #BBAABB(b(x1)) -> #BBAABBB(x1)
   #13: #BBAABBB(b(x1)) -> #BBAABBBB(x1)
   #14: #ABB(b(x1)) -> #ABB(B(x1))
   #15: #ABB(b(x1)) -> #B(x1)
   #16: #A(a(x1)) -> #A(A(x1))
   #17: #A(a(x1)) -> #A(x1)
   #18: #BBAA(a(x1)) -> #BBAA(A(x1))
   #19: #BBAA(a(x1)) -> #A(x1)
   #20: #BBAAB(b(x1)) -> #BBAABB(x1)
   #21: #BBA(a(x1)) -> #BBAA(x1)
   #22: #AB(a(x1)) -> #AB(A(x1))
   #23: #AB(a(x1)) -> #A(x1)
   #24: #BBAABBBBA(a(x1)) -> #BBAABBBBAA(x1)
   #25: #A(b(x1)) -> #AB(x1)
   #26: #BBAABBBB(b(x1)) -> #BBAABBBB(B(x1))
   #27: #BBAABBBB(b(x1)) -> #B(x1)
   #28: #BB(a(x1)) -> #BBA(x1)
   #29: #B(a(x1)) -> #B(A(x1))
   #30: #B(a(x1)) -> #A(x1)
   #31: #BBAA(b(x1)) -> #BBAAB(x1)
   #32: #BBAABBBB(a(x1)) -> #BBAABBBBA(x1)
   #33: #BB(b(x1)) -> #BB(B(x1))
   #34: #BB(b(x1)) -> #B(x1)
   #35: #BBAABBBBA(b(x1)) -> #BBAABBBBA(B(x1))
   #36: #BBAABBBBA(b(x1)) -> #B(x1)
Number of SCCs: 1, DPs: 32, edges: 72
	SCC { #1..9 #11..13 #15..23 #25..34 #36 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
   BBA(x1)	weight: (/ 1 16) + x1_2; x1_2
     a(x1)	weight: (/ 1 16) + x1_2; x1_2
#BBAABBBBAA(x1)	weight: 0; 0
BBAABBBBAA(x1)	weight: (/ 1 16) + x1_2; x1_2
#BBAAB(x1)	weight: x1_1; 0
     b(x1)	weight: x1_2; x1_1
   #B(x1)	weight: x1_1; 0
  BBAA(x1)	weight: (/ 1 16) + x1_2; x1_2
    AB(x1)	weight: (/ 1 16) + x1_1; x1_1
#ABBA(x1)	weight: 0; 0
 BBAAB(x1)	weight: (/ 1 16) + x1_1; x1_1
BBAABBBBA(x1)	weight: (/ 1 16) + x1_2; x1_2
#BBAABBBBA(x1)	weight: x1_2; 0
   ABB(x1)	weight: (/ 1 16) + x1_2; x1_2
#BBAABBB(x1)	weight: x1_1; 0
BBAABB(x1)	weight: (/ 1 16) + x1_2; x1_2
     B(x1)	weight: (/ 1 16) + x1_1 + x1_2; x1_1
  ABBA(x1)	weight: (/ 1 16) + x1_2; x1_2
     A(x1)	weight: (/ 1 16) + x1_2; x1_2
   #A(x1)	weight: x1_2; 0
 #BBA(x1)	weight: x1_2; 0
  #BB(x1)	weight: x1_2; 0
#BBAABBBB(x1)	weight: x1_2; 0
#BBAABB(x1)	weight: x1_2; 0
 #ABB(x1)	weight: x1_2; 0
    BB(x1)	weight: (/ 1 16) + x1_2; x1_2
#BBAA(x1)	weight: x1_2; 0
BBAABBBB(x1)	weight: (/ 1 16) + x1_2; x1_2
  #AB(x1)	weight: x1_1; 0
BBAABBB(x1)	weight: (/ 1 16) + x1_1; x1_1
    Usable rules: { 1..26 }
    Removed DPs: #5 #7 #23 #30
Number of SCCs: 1, DPs: 28, edges: 52
	SCC { #1..4 #6 #8 #9 #11..13 #15..22 #25..29 #31..34 #36 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
