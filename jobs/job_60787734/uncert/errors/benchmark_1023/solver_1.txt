last 4164 length 23040
CNF 4164 vars 23040 clauses
last 6336 length 34090
CNF 6336 vars 34090 clauses
last 9616 length 49023
CNF 9616 vars 49023 clauses
**************************************************
summary
**************************************************
SRS with 1 rules on 2 letters       Drop
SRS with 1 rules on 2 letters       mirror
SRS with 1 rules on 2 letters       Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 59 states

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, b, a, b, b, a, b, b, b, b] -> [ b , b , b , b , b , a , b , b , a , b , b , a , b ] {- Input 0 -}
reason
  Drop
    property Termination
    has value Just True
    for SRS
      [a, b, b, a, b, b, b, b] -> [ b , b , b , a , b , b , a , b , b , a , b ] {- Dropped 2 0 (Input 0) -}
    reason
      mirror
       property Termination
    has value Just True
    for SRS
      [b, b, b, b, a, b, b, a] -> [ b , a , b , b , a , b , b , a , b , b , b ] {- Mirror (Dropped 2 0 (Input 0)) -}
    reason
      Matchbound
        Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 59 states

   property Termination
has value Just True
for SRS
  [a, b, b, a, b, b, b, b] -> [ b , b , b , a , b , b , a , b , b , a , b ] {- Dropped 2 0 (Input 0) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [b, b, b, b, a, b, b, a] -> [ b , a , b , b , a , b , b , a , b , b , b ] {- Mirror (Dropped 2 0 (Input 0)) -}
reason
  Matchbound
    Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 59 states

**************************************************
skeleton: (1,2)\Drop{2}{0}\Mirror(1,2)\Rfcmatchbound{1}[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.181467940000
  min duration 0.302249664000
  total durat. 1.483717604000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 8
      , num_weak_rules = 4
      , alphabet_size = 5
      , total_length = 240}
    , self = 105
    , parent = Nothing
    , duration = 1.181467940000
    , status = Fail
    , start = 2025-09-03 10:51:47.321901638 UTC
    , finish = 2025-09-03 10:51:48.503369578 UTC
    , thread_cap_info = ("ThreadId 209", 0, False)}
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 9
  max duration 1.238149262000
  min duration 0.089852605000
  total durat. 4.937240924000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 94
    , parent = Nothing
    , duration = 1.238149262000
    , status = Fail
    , start = 2025-09-03 10:51:46.581953592 UTC
    , finish = 2025-09-03 10:51:47.820102854 UTC
    , thread_cap_info = ("ThreadId 114", 3, False)}
Except "AsyncCancelled" : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 1
  max duration 2.027847203000
  min duration 2.027847203000
  total durat. 2.027847203000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 108
    , parent = Nothing
    , duration = 2.027847203000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:51:46.550619656 UTC
    , finish = 2025-09-03 10:51:48.578466859 UTC
    , thread_cap_info = ("ThreadId 110", 3, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 6
  max duration 1.759759820000
  min duration 1.140093566000
  total durat. 8.985699934000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 99
    , parent = Nothing
    , duration = 1.140093566000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:51:47.181889294 UTC
    , finish = 2025-09-03 10:51:48.32198286 UTC
    , thread_cap_info = ("ThreadId 178", 2, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 17}
    , self = 102
    , parent = Nothing
    , duration = 1.399377601000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:51:47.042505302 UTC
    , finish = 2025-09-03 10:51:48.441882903 UTC
    , thread_cap_info = ("ThreadId 187", 3, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 23}
    , self = 109
    , parent = Nothing
    , duration = 1.500037255000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:51:47.081885148 UTC
    , finish = 2025-09-03 10:51:48.581922403 UTC
    , thread_cap_info = ("ThreadId 189", 3, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 112
    , parent = Nothing
    , duration = 1.559996993000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:51:47.061883627 UTC
    , finish = 2025-09-03 10:51:48.62188062 UTC
    , thread_cap_info = ("ThreadId 175", 2, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 110
    , parent = Nothing
    , duration = 1.626434699000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:51:46.975447387 UTC
    , finish = 2025-09-03 10:51:48.601882086 UTC
    , thread_cap_info = ("ThreadId 173", 2, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 101
    , parent = Nothing
    , duration = 1.759759820000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:51:46.66261594 UTC
    , finish = 2025-09-03 10:51:48.42237576 UTC
    , thread_cap_info = ("ThreadId 140", 3, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 7
  max duration 2.171392763000
  min duration 0.512969868000
  total durat. 9.461820178000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 97
    , parent = Nothing
    , duration = 1.459657019000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:51:46.642230655 UTC
    , finish = 2025-09-03 10:51:48.101887674 UTC
    , thread_cap_info = ("ThreadId 139", 3, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 23}
    , self = 106
    , parent = Nothing
    , duration = 1.480008840000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:51:47.061902857 UTC
    , finish = 2025-09-03 10:51:48.541911697 UTC
    , thread_cap_info = ("ThreadId 188", 3, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 103
    , parent = Nothing
    , duration = 1.499530578000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:51:46.942352575 UTC
    , finish = 2025-09-03 10:51:48.441883153 UTC
    , thread_cap_info = ("ThreadId 171", 2, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 107
    , parent = Nothing
    , duration = 1.519381479000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:51:47.042505123 UTC
    , finish = 2025-09-03 10:51:48.561886602 UTC
    , thread_cap_info = ("ThreadId 174", 2, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 23}
    , self = 111
    , parent = Nothing
    , duration = 2.171392763000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:51:46.430495599 UTC
    , finish = 2025-09-03 10:51:48.601888362 UTC
    , thread_cap_info = ("ThreadId 78", 0, False)}
Except "AsyncCancelled" : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = False}"
  total number 6
  max duration 1.899967896000
  min duration 0.875666234000
  total durat. 8.887328031000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 92
    , parent = Nothing
    , duration = 1.175661680000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:51:46.506542836 UTC
    , finish = 2025-09-03 10:51:47.682204516 UTC
    , thread_cap_info = ("ThreadId 99", 3, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 93
    , parent = Nothing
    , duration = 1.367917198000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:51:46.428439162 UTC
    , finish = 2025-09-03 10:51:47.79635636 UTC
    , thread_cap_info = ("ThreadId 51", 3, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 98
    , parent = Nothing
    , duration = 1.739467219000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:51:46.442812586 UTC
    , finish = 2025-09-03 10:51:48.182279805 UTC
    , thread_cap_info = ("ThreadId 59", 3, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 23}
    , self = 104
    , parent = Nothing
    , duration = 1.828647804000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:51:46.613255906 UTC
    , finish = 2025-09-03 10:51:48.44190371 UTC
    , thread_cap_info = ("ThreadId 134", 3, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 100
    , parent = Nothing
    , duration = 1.899967896000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:51:46.481917668 UTC
    , finish = 2025-09-03 10:51:48.381885564 UTC
    , thread_cap_info = ("ThreadId 94", 3, False)}
**************************************************
F                                                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                                                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                                                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                                                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                                                  = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
F                                                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F                                                  = 23} , self = 66 , parent = Nothing , duration = 0.495563769000 , status
F                                                  = Fail , start = 2025-09-03 10:51:46.427579605 UTC , finish = 2025-09-03
F                                                  10:51:46.923143374 UTC , thread_cap_info = ("ThreadId 22", 2, False)}
F                                                  
| E                                                Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| E                                                , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| E                                                = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| E                                                , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| E                                                = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| E                                                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| E                                                = 21} , self = 93 , parent = Nothing , duration = 1.367917198000 , status
| E                                                = Except "AsyncCancelled" , start = 2025-09-03 10:51:46.428439162 UTC ,
| E                                                finish = 2025-09-03 10:51:47.79635636 UTC , thread_cap_info = ("ThreadId
| E                                                51", 3, False)}
| E                                                
| | F                                              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                                              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                                              = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | F                                              = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | F                                              = 100} , self = 62 , parent = Nothing , duration = 0.427793736000 , status
| | F                                              = Fail , start = 2025-09-03 10:51:46.430434922 UTC , finish = 2025-09-03
| | F                                              10:51:46.858228658 UTC , thread_cap_info = ("ThreadId 73", 1, False)}
| | F                                              
| | | E                                            Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | E                                            , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | E                                            = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | E                                            , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | E                                            max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | E                                            [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | E                                            string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | E                                            , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | E                                            = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | E                                            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | E                                            = 23} , self = 111 , parent = Nothing , duration = 2.171392763000 , status
| | | E                                            = Except "AsyncCancelled" , start = 2025-09-03 10:51:46.430495599 UTC ,
| | | E                                            finish = 2025-09-03 10:51:48.601888362 UTC , thread_cap_info = ("ThreadId
| | | E                                            78", 0, False)}
| | | E                                            
| | | | F                                          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                                          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                                          = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | F                                          = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | | | F                                          = 100} , self = 53 , parent = Nothing , duration = 0.302249664000 , status
| | | | F                                          = Fail , start = 2025-09-03 10:51:46.442810718 UTC , finish = 2025-09-03
| | | | F                                          10:51:46.745060382 UTC , thread_cap_info = ("ThreadId 75", 1, False)}
| | | | F                                          
| | | | | E                                        Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | E                                        , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | E                                        = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | E                                        , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | E                                        = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | E                                        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | E                                        = 21} , self = 98 , parent = Nothing , duration = 1.739467219000 , status
| | | | | E                                        = Except "AsyncCancelled" , start = 2025-09-03 10:51:46.442812586 UTC ,
| | | | | E                                        finish = 2025-09-03 10:51:48.182279805 UTC , thread_cap_info = ("ThreadId
| | | | | E                                        59", 3, False)}
| | | | | E                                        
| | | | | | F                                      Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | F                                      , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | F                                      = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | F                                      False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | F                                      = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | F                                      = 0 , alphabet_size = 2 , total_length = 21} , self = 65 , parent = Nothing
| | | | | | F                                      , duration = 0.448952053000 , status = Fail , start = 2025-09-03 10:51:46.463109205
| | | | | | F                                      UTC , finish = 2025-09-03 10:51:46.912061258 UTC , thread_cap_info = ("ThreadId
| | | | | | F                                      83", 3, False)}
| | | | | | F                                      
| | | | | | | E                                    Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | E                                    , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | E                                    = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | E                                    , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | E                                    = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | E                                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | E                                    = 19} , self = 100 , parent = Nothing , duration = 1.899967896000 , status
| | | | | | | E                                    = Except "AsyncCancelled" , start = 2025-09-03 10:51:46.481917668 UTC ,
| | | | | | | E                                    finish = 2025-09-03 10:51:48.381885564 UTC , thread_cap_info = ("ThreadId
| | | | | | | E                                    94", 3, False)}
| | | | | | | E                                    
| | | | | | | | E                                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | E                                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | E                                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | E                                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | E                                  = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | E                                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | E                                  = 19} , self = 92 , parent = Nothing , duration = 1.175661680000 , status
| | | | | | | | E                                  = Except "AsyncCancelled" , start = 2025-09-03 10:51:46.506542836 UTC ,
| | | | | | | | E                                  finish = 2025-09-03 10:51:47.682204516 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E                                  99", 3, False)}
| | | | | | | | E                                  
| | | | | | | | | E                                Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | E                                , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | E                                = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | E                                False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | E                                = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | E                                = 0 , alphabet_size = 2 , total_length = 21} , self = 108 , parent = Nothing
| | | | | | | | | E                                , duration = 2.027847203000 , status = Except "AsyncCancelled" , start
| | | | | | | | | E                                = 2025-09-03 10:51:46.550619656 UTC , finish = 2025-09-03 10:51:48.578466859
| | | | | | | | | E                                UTC , thread_cap_info = ("ThreadId 110", 3, False)}
| | | | | | | | | E                                
| | | | | | | | | | F                              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | F                              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | F                              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | F                              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | F                              = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | F                              = 0 , alphabet_size = 2 , total_length = 21} , self = 94 , parent = Nothing
| | | | | | | | | | F                              , duration = 1.238149262000 , status = Fail , start = 2025-09-03 10:51:46.581953592
| | | | | | | | | | F                              UTC , finish = 2025-09-03 10:51:47.820102854 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | F                              114", 3, False)}
| | | | | | | | | | F                              
| | | | | | | | | | | E                            Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | | | | E                            , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | | | | E                            = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | | | | E                            , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | | | | E                            = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | E                            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | E                            = 17} , self = 90 , parent = Nothing , duration = 0.875666234000 , status
| | | | | | | | | | | E                            = Except "AsyncCancelled" , start = 2025-09-03 10:51:46.613244428 UTC ,
| | | | | | | | | | | E                            finish = 2025-09-03 10:51:47.488910662 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | E                            126", 3, False)}
| | | | | | | | | | | E                            
| | | | | | | | | | | | E                          Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | | | | | E                          , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | | | | | E                          = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | | | | | E                          , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | | | | | E                          = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | E                          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | E                          = 23} , self = 104 , parent = Nothing , duration = 1.828647804000 , status
| | | | | | | | | | | | E                          = Except "AsyncCancelled" , start = 2025-09-03 10:51:46.613255906 UTC ,
| | | | | | | | | | | | E                          finish = 2025-09-03 10:51:48.44190371 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | E                          134", 3, False)}
| | | | | | | | | | | | E                          
| | | | | | | | | | | | | E                        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | E                        , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | E                        = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | E                        , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | E                        max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | E                        [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | E                        string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | E                        , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | E                        = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | E                        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | E                        = 21} , self = 97 , parent = Nothing , duration = 1.459657019000 , status
| | | | | | | | | | | | | E                        = Except "AsyncCancelled" , start = 2025-09-03 10:51:46.642230655 UTC ,
| | | | | | | | | | | | | E                        finish = 2025-09-03 10:51:48.101887674 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | E                        139", 3, False)}
| | | | | | | | | | | | | E                        
| | | | | | | | | | | | | | E                      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | E                      , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | E                      = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | E                      , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | E                      max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | E                      [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | E                      string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | E                      , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | E                      = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | E                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | E                      = 21} , self = 101 , parent = Nothing , duration = 1.759759820000 , status
| | | | | | | | | | | | | | E                      = Except "AsyncCancelled" , start = 2025-09-03 10:51:46.66261594 UTC ,
| | | | | | | | | | | | | | E                      finish = 2025-09-03 10:51:48.42237576 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | E                      140", 3, False)}
| | | | | | | | | | | | | | E                      
| | | | | | | | | | | | | | | F                    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | | F                    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | | F                    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | | F                    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | | F                    = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | | F                    = 0 , alphabet_size = 3 , total_length = 100} , self = 73 , parent = Nothing
| | | | | | | | | | | | | | | F                    , duration = 0.502139023000 , status = Fail , start = 2025-09-03 10:51:46.742795013
| | | | | | | | | | | | | | | F                    UTC , finish = 2025-09-03 10:51:47.244934036 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | F                    167", 0, False)}
| | | | | | | | | | | | | | | F                    
| | | | F | | | | | | | | | | |                    
| | | | F | | | | | | | | | | |                    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | F | | | | | | | | | | |                    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | F | | | | | | | | | | |                    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | F | | | | | | | | | | |                    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | F | | | | | | | | | | |                    = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| | | | F | | | | | | | | | | |                    = 0 , alphabet_size = 3 , total_length = 100} , self = 72 , parent = Nothing
| | | | F | | | | | | | | | | |                    , duration = 0.334658057000 , status = Fail , start = 2025-09-03 10:51:46.762527723
| | | | F | | | | | | | | | | |                    UTC , finish = 2025-09-03 10:51:47.09718578 UTC , thread_cap_info = ("ThreadId
| | | | F | | | | | | | | | | |                    169", 0, False)}
| | | | F | | | | | | | | | | |                    
| | | | | | | | | | | | | | | | F                  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | | | F                  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | | | F                  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | | | F                  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | | | F                  = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | | | F                  = 0 , alphabet_size = 2 , total_length = 19} , self = 88 , parent = Nothing
| | | | | | | | | | | | | | | | F                  , duration = 0.584094490000 , status = Fail , start = 2025-09-03 10:51:46.781899076
| | | | | | | | | | | | | | | | F                  UTC , finish = 2025-09-03 10:51:47.365993566 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | F                  145", 3, False)}
| | | | | | | | | | | | | | | | F                  
| | | | | | | | | | | | | | | | | F                Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | | | | F                , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | | | | F                = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | | | | F                False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | | | | F                = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | | | | F                = 0 , alphabet_size = 2 , total_length = 19} , self = 89 , parent = Nothing
| | | | | | | | | | | | | | | | | F                , duration = 0.646097928000 , status = Fail , start = 2025-09-03 10:51:46.842800991
| | | | | | | | | | | | | | | | | F                UTC , finish = 2025-09-03 10:51:47.488898919 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | F                149", 3, False)}
| | | | | | | | | | | | | | | | | F                
| | F | | | | | | | | | | | | | | |                
| |   | | | F | | | | | | | | | | |                
F |   | | |   | | | | | | | | | | |                
E |   | | |   | | | | | | | | | | |                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E |   | | |   | | | | | | | | | | |                , closure = Forward\n , start_strict_only = True\n , max_closure_length
E |   | | |   | | | | | | | | | | |                = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
E |   | | |   | | | | | | | | | | |                , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
E |   | | |   | | | | | | | | | | |                max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
E |   | | |   | | | | | | | | | | |                [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
E |   | | |   | | | | | | | | | | |                string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
E |   | | |   | | | | | | | | | | |                , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E |   | | |   | | | | | | | | | | |                = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
E |   | | |   | | | | | | | | | | |                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
E |   | | |   | | | | | | | | | | |                = 21} , self = 103 , parent = Nothing , duration = 1.499530578000 , status
E |   | | |   | | | | | | | | | | |                = Except "AsyncCancelled" , start = 2025-09-03 10:51:46.942352575 UTC ,
E |   | | |   | | | | | | | | | | |                finish = 2025-09-03 10:51:48.441883153 UTC , thread_cap_info = ("ThreadId
E |   | | |   | | | | | | | | | | |                171", 2, False)}
E |   | | |   | | | | | | | | | | |                
| | F | | |   | | | | | | | | | | |                Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | F | | |   | | | | | | | | | | |                , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | F | | |   | | | | | | | | | | |                = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | F | | |   | | | | | | | | | | |                False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | F | | |   | | | | | | | | | | |                = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | F | | |   | | | | | | | | | | |                = 0 , alphabet_size = 2 , total_length = 23} , self = 91 , parent = Nothing
| | F | | |   | | | | | | | | | | |                , duration = 0.705175306000 , status = Fail , start = 2025-09-03 10:51:46.942356739
| | F | | |   | | | | | | | | | | |                UTC , finish = 2025-09-03 10:51:47.647532045 UTC , thread_cap_info = ("ThreadId
| | F | | |   | | | | | | | | | | |                183", 3, False)}
| | F | | |   | | | | | | | | | | |                
| | | | | | F | | | | | | | | | | |                Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | F | | | | | | | | | | |                , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | F | | | | | | | | | | |                = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | F | | | | | | | | | | |                False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | F | | | | | | | | | | |                = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | F | | | | | | | | | | |                = 0 , alphabet_size = 2 , total_length = 23} , self = 87 , parent = Nothing
| | | | | | F | | | | | | | | | | |                , duration = 0.388122200000 , status = Fail , start = 2025-09-03 10:51:46.942365676
| | | | | | F | | | | | | | | | | |                UTC , finish = 2025-09-03 10:51:47.330487876 UTC , thread_cap_info = ("ThreadId
| | | | | | F | | | | | | | | | | |                185", 3, False)}
| | | | | | F | | | | | | | | | | |                
| | | | | | | | | | | | | | | | | | E              Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | | | E              , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | | | E              = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | | | E              , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | | | E              max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | | | E              [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | | | E              string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | | | E              , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | | | E              = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | | E              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | | E              = 21} , self = 110 , parent = Nothing , duration = 1.626434699000 , status
| | | | | | | | | | | | | | | | | | E              = Except "AsyncCancelled" , start = 2025-09-03 10:51:46.975447387 UTC ,
| | | | | | | | | | | | | | | | | | E              finish = 2025-09-03 10:51:48.601882086 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | E              173", 2, False)}
| | | | | | | | | | | | | | | | | | E              
| | | | | | | | | | | | | | | | | | | E            Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | | | | E            , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | | | | E            = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | | | | E            , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | | | | E            max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | | | | E            [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | | | | E            string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | | | | E            , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | | | | E            = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | | | E            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | | | E            = 19} , self = 107 , parent = Nothing , duration = 1.519381479000 , status
| | | | | | | | | | | | | | | | | | | E            = Except "AsyncCancelled" , start = 2025-09-03 10:51:47.042505123 UTC ,
| | | | | | | | | | | | | | | | | | | E            finish = 2025-09-03 10:51:48.561886602 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | | E            174", 2, False)}
| | | | | | | | | | | | | | | | | | | E            
| | | | | | | | | | | | | | | | | | | | E          Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | | | | | E          , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | | | | | E          = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | | | | | E          , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | | | | | E          max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | | | | | E          [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | | | | | E          string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | | | | | E          , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | | | | | E          = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | | | | E          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | | | | E          = 17} , self = 102 , parent = Nothing , duration = 1.399377601000 , status
| | | | | | | | | | | | | | | | | | | | E          = Except "AsyncCancelled" , start = 2025-09-03 10:51:47.042505302 UTC ,
| | | | | | | | | | | | | | | | | | | | E          finish = 2025-09-03 10:51:48.441882903 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | | | E          187", 3, False)}
| | | | | | | | | | | | | | | | | | | | E          
| | | | | | | | | | | | | | | | | | | | | E        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | | | | | | E        , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | | | | | | E        = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | | | | | | E        , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | | | | | | E        max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | | | | | | E        [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | | | | | | E        string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | | | | | | E        , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | | | | | | E        = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | | | | | E        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | | | | | E        = 19} , self = 112 , parent = Nothing , duration = 1.559996993000 , status
| | | | | | | | | | | | | | | | | | | | | E        = Except "AsyncCancelled" , start = 2025-09-03 10:51:47.061883627 UTC ,
| | | | | | | | | | | | | | | | | | | | | E        finish = 2025-09-03 10:51:48.62188062 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | | | | E        175", 2, False)}
| | | | | | | | | | | | | | | | | | | | | E        
| | | | | | | | | | | | | | | | | | | | | | E      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | | | | | | | E      , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | | | | | | | E      = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | | | | | | | E      , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | | | | | | | E      max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | | | | | | | E      [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | | | | | | | E      string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | | | | | | | E      , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | | | | | | | E      = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | | | | | | E      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | | | | | | E      = 23} , self = 106 , parent = Nothing , duration = 1.480008840000 , status
| | | | | | | | | | | | | | | | | | | | | | E      = Except "AsyncCancelled" , start = 2025-09-03 10:51:47.061902857 UTC ,
| | | | | | | | | | | | | | | | | | | | | | E      finish = 2025-09-03 10:51:48.541911697 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | | | | | E      188", 3, False)}
| | | | | | | | | | | | | | | | | | | | | | E      
| | | | | | | | | | | | | | | | | | | | | | | E    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | | | | | | | | E    , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | | | | | | | | E    = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | | | | | | | | E    , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | | | | | | | | E    max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | | | | | | | | E    [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | | | | | | | | E    string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | | | | | | | | E    , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | | | | | | | | E    = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | | | | | | | E    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | | | | | | | E    = 23} , self = 109 , parent = Nothing , duration = 1.500037255000 , status
| | | | | | | | | | | | | | | | | | | | | | | E    = Except "AsyncCancelled" , start = 2025-09-03 10:51:47.081885148 UTC ,
| | | | | | | | | | | | | | | | | | | | | | | E    finish = 2025-09-03 10:51:48.581922403 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | | | | | | E    189", 3, False)}
| | | | | | | | | | | | | | | | | | | | | | | E    
| | | | F | | | | | | | | | | | | | | | | | | |    
| | | | E | | | | | | | | | | | | | | | | | | |    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | E | | | | | | | | | | | | | | | | | | |    , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | E | | | | | | | | | | | | | | | | | | |    = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | E | | | | | | | | | | | | | | | | | | |    , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | E | | | | | | | | | | | | | | | | | | |    max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | E | | | | | | | | | | | | | | | | | | |    [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | E | | | | | | | | | | | | | | | | | | |    string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | E | | | | | | | | | | | | | | | | | | |    , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | E | | | | | | | | | | | | | | | | | | |    = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | E | | | | | | | | | | | | | | | | | | |    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | E | | | | | | | | | | | | | | | | | | |    = 19} , self = 95 , parent = Nothing , duration = 0.818879631000 , status
| | | | E | | | | | | | | | | | | | | | | | | |    = Except "AsyncCancelled" , start = 2025-09-03 10:51:47.163013517 UTC ,
| | | | E | | | | | | | | | | | | | | | | | | |    finish = 2025-09-03 10:51:47.981893148 UTC , thread_cap_info = ("ThreadId
| | | | E | | | | | | | | | | | | | | | | | | |    177", 2, False)}
| | | | E | | | | | | | | | | | | | | | | | | |    
| | | | | | | | | | | | | | | | | | | | | | | | E  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | | | | | | | | | E  , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | | | | | | | | | E  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | | | | | | | | | E  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | | | | | | | | | E  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | | | | | | | | | E  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | | | | | | | | | E  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | | | | | | | | | E  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | | | | | | | | | E  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | | | | | | | | E  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | | | | | | | | E  = 19} , self = 99 , parent = Nothing , duration = 1.140093566000 , status
| | | | | | | | | | | | | | | | | | | | | | | | E  = Except "AsyncCancelled" , start = 2025-09-03 10:51:47.181889294 UTC ,
| | | | | | | | | | | | | | | | | | | | | | | | E  finish = 2025-09-03 10:51:48.32198286 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | | | | | | | E  178", 2, False)}
| | | | | | | | | | | | | | | | | | | | | | | | E  
| | | | | | | | | | | | | | | F | | | | | | | | |  
| | | | | | | | | | | | | | | F | | | | | | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | F | | | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | F | | | | | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | | | | | | | | | | F | | | | | | | | |  = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| | | | | | | | | | | | | | | F | | | | | | | | |  = 240} , self = 105 , parent = Nothing , duration = 1.181467940000 , status
| | | | | | | | | | | | | | | F | | | | | | | | |  = Fail , start = 2025-09-03 10:51:47.321901638 UTC , finish = 2025-09-03
| | | | | | | | | | | | | | | F | | | | | | | | |  10:51:48.503369578 UTC , thread_cap_info = ("ThreadId 209", 0, False)}
| | | | | | | | | | | | | | | F | | | | | | | | |  
| | | | | | F | | | | | | | | | | | | | | | | | |  
| | | | | |   | | | | | | | | | F | | | | | | | |  
| | | | | |   | | | | | | | | |   F | | | | | | |  
| | | | | |   | | | | E | | | |     | | | | | | |  
| | | | | | E | | | |   | | | |     | | | | | | |  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | E | | | |   | | | |     | | | | | | |  , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | E | | | |   | | | |     | | | | | | |  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | E | | | |   | | | |     | | | | | | |  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | E | | | |   | | | |     | | | | | | |  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | E | | | |   | | | |     | | | | | | |  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | E | | | |   | | | |     | | | | | | |  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | E | | | |   | | | |     | | | | | | |  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | E | | | |   | | | |     | | | | | | |  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | E | | | |   | | | |     | | | | | | |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | E | | | |   | | | |     | | | | | | |  = 17} , self = 96 , parent = Nothing , duration = 0.512969868000 , status
| | | | | | E | | | |   | | | |     | | | | | | |  = Except "AsyncCancelled" , start = 2025-09-03 10:51:47.488917744 UTC ,
| | | | | | E | | | |   | | | |     | | | | | | |  finish = 2025-09-03 10:51:48.001887612 UTC , thread_cap_info = ("ThreadId
| | | | | | E | | | |   | | | |     | | | | | | |  192", 2, False)}
| | | | | | E | | | |   | | | |     | | | | | | |  
| | F | | | | | | | |   | | | |     | | | | | | |  
| |   | | | | | E | |   | | | |     | | | | | | |  
| E   | | | | |   | |   | | | |     | | | | | | |  
|     | | | | |   | F   | | | |     | | | | | | |  
|     | E | | |   |     | | | |     | | | | | | |  
|     |   | E |   |     | | | |     | | | | | | |  
|     |   |   |   |     | E | |     | | | | | | |  
|     |   E   |   |     |   | |     | | | | | | |  
|     |       |   |     |   | |     | | | | | | E  
|     |       E   |     |   | |     | | | | | |    
|     |           |     |   E |     | | | | | |    
|     |           |     |     |     | | E | | |    
E     |           |     |     |     | |   | | |    
      |           |     E     |     | |   | | |    
      |           |           F     | |   | | |    
      |           |                 | |   | E |    
      |           |                 | E   |   |    
      |           E                 |     |   |    
      |                             |     |   E    
      |                             E     |        
      E                                   |        
                                          E        
