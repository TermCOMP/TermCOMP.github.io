Input TRS:
    1: B(a(x1)) -> BA(x1)
    2: B(b(x1)) -> B(B(x1))
    3: BA(a(x1)) -> BAA(x1)
    4: BA(b(x1)) -> BA(B(x1))
    5: BAA(a(x1)) -> BAAA(x1)
    6: BAA(b(x1)) -> BAA(B(x1))
    7: BAAA(a(x1)) -> BAAA(A(x1))
    8: BAAA(b(x1)) -> BAAAB(x1)
    9: BAAAB(a(x1)) -> BAAABA(x1)
    10: BAAAB(b(x1)) -> BAAAB(B(x1))
    11: BAAABA(a(x1)) -> BAAABAA(x1)
    12: BAAABA(b(x1)) -> BAAABA(B(x1))
    13: BAAABAA(a(x1)) -> BAAABAA(A(x1))
    14: BAAABAA(b(x1)) -> BAAABAAB(x1)
    15: BAAABAAB(a(x1)) -> BAAABAABA(x1)
    16: BAAABAAB(b(x1)) -> BAAABAAB(B(x1))
    17: BAAABAABA(x1) -> a(b(a(b(a(a(x1))))))
    18: A(a(x1)) -> A(A(x1))
    19: A(b(x1)) -> AB(x1)
    20: AB(a(x1)) -> ABA(x1)
    21: AB(b(x1)) -> AB(B(x1))
    22: ABA(a(x1)) -> ABA(A(x1))
    23: ABA(b(x1)) -> ABAB(x1)
    24: ABAB(a(x1)) -> ABABA(x1)
    25: ABAB(b(x1)) -> ABAB(B(x1))
    26: ABABA(a(x1)) -> ABABAA(x1)
    27: ABABA(b(x1)) -> ABABA(B(x1))
    28: ABABAA(x1) -> b(a(a(a(b(a(a(b(a(x1)))))))))
Number of strict rules: 28
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #B(b(x1)) -> #B(B(x1))
   #2: #B(b(x1)) -> #B(x1)
   #3: #BAA(b(x1)) -> #BAA(B(x1))
   #4: #BAA(b(x1)) -> #B(x1)
   #5: #BAAABAA(a(x1)) -> #BAAABAA(A(x1))
   #6: #BAAABAA(a(x1)) -> #A(x1)
   #7: #BAAAB(a(x1)) -> #BAAABA(x1)
   #8: #BAAABA(a(x1)) -> #BAAABAA(x1)
   #9: #ABAB(a(x1)) -> #ABABA(x1)
   #10: #ABA(b(x1)) -> #ABAB(x1)
   #11: #BAAABA(b(x1)) -> #BAAABA(B(x1))
   #12: #BAAABA(b(x1)) -> #B(x1)
   #13: #BAAABAA(b(x1)) -> #BAAABAAB(x1)
   #14: #ABAB(b(x1)) -> #ABAB(B(x1))
   #15: #ABAB(b(x1)) -> #B(x1)
   #16: #AB(a(x1)) -> #ABA(x1)
   #17: #BAAA(a(x1)) -> #BAAA(A(x1))
   #18: #BAAA(a(x1)) -> #A(x1)
   #19: #BAAAB(b(x1)) -> #BAAAB(B(x1))
   #20: #BAAAB(b(x1)) -> #B(x1)
   #21: #BAA(a(x1)) -> #BAAA(x1)
   #22: #ABA(a(x1)) -> #ABA(A(x1))
   #23: #ABA(a(x1)) -> #A(x1)
   #24: #ABABA(b(x1)) -> #ABABA(B(x1))
   #25: #ABABA(b(x1)) -> #B(x1)
   #26: #A(b(x1)) -> #AB(x1)
   #27: #ABABA(a(x1)) -> #ABABAA(x1)
   #28: #AB(b(x1)) -> #AB(B(x1))
   #29: #AB(b(x1)) -> #B(x1)
   #30: #BAAABAAB(b(x1)) -> #BAAABAAB(B(x1))
   #31: #BAAABAAB(b(x1)) -> #B(x1)
   #32: #BA(a(x1)) -> #BAA(x1)
   #33: #B(a(x1)) -> #BA(x1)
   #34: #BAAA(b(x1)) -> #BAAAB(x1)
   #35: #BAAABAAB(a(x1)) -> #BAAABAABA(x1)
   #36: #BA(b(x1)) -> #BA(B(x1))
   #37: #BA(b(x1)) -> #B(x1)
   #38: #A(a(x1)) -> #A(A(x1))
   #39: #A(a(x1)) -> #A(x1)
Number of SCCs: 1, DPs: 35, edges: 79
	SCC { #1..23 #25 #26 #28 #29 #31..34 #36..39 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: x1_2; x1_2
  #BA(x1)	weight: (/ 1 16) + x1_2; 0
 BAAAB(x1)	weight: x1_1; x1_1
BAAABAAB(x1)	weight: x1_1; x1_1
ABABAA(x1)	weight: (/ 1 8) + x1_2; x1_2
  ABAB(x1)	weight: (/ 1 8) + x1_1; x1_1
#ABABA(x1)	weight: (/ 1 16) + x1_2; 0
#BAAA(x1)	weight: (/ 1 16) + x1_2; 0
     b(x1)	weight: (/ 1 8) + x1_1; x1_1
   #B(x1)	weight: (/ 1 16) + x1_1; 0
  BAAA(x1)	weight: x1_2; x1_2
#BAAABAABA(x1)	weight: 0; 0
#ABABAA(x1)	weight: 0; 0
#ABAB(x1)	weight: (/ 1 16) + x1_1; 0
    AB(x1)	weight: (/ 1 8) + x1_1; x1_1
BAAABA(x1)	weight: x1_2; x1_2
#BAAABAAB(x1)	weight: x1_1; 0
#BAAABAA(x1)	weight: (/ 1 16) + x1_2; 0
 #ABA(x1)	weight: (/ 1 16) + x1_2; 0
   BAA(x1)	weight: (/ 1 16) + x1_2; x1_2
     B(x1)	weight: (/ 1 16) + x1_1; x1_1
#BAAAB(x1)	weight: (/ 1 16) + x1_1; 0
BAAABAABA(x1)	weight: x1_2; x1_2
     A(x1)	weight: (/ 1 8) + x1_2; x1_2
   #A(x1)	weight: (/ 1 16) + x1_2; 0
   ABA(x1)	weight: (/ 1 8) + x1_2; x1_2
BAAABAA(x1)	weight: x1_2; x1_2
 ABABA(x1)	weight: (/ 1 8) + x1_2; x1_2
 #BAA(x1)	weight: (/ 1 16) + x1_2; 0
  #AB(x1)	weight: (/ 1 16) + x1_1; 0
#BAAABA(x1)	weight: (/ 1 16) + x1_2; 0
    BA(x1)	weight: (/ 1 16) + x1_2; x1_2
    Usable rules: { 1..28 }
    Removed DPs: #1 #2 #13..15 #19 #20 #28 #29 #31
Number of SCCs: 1, DPs: 24, edges: 42
	SCC { #3 #4 #6..12 #16..18 #21..23 #25 #26 #32..34 #36..39 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
