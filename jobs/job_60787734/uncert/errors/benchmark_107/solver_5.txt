Input TRS:
    1: A(a(x1)) -> A(A(x1))
    2: A(b(x1)) -> AB(x1)
    3: AB(a(x1)) -> AB(A(x1))
    4: AB(b(x1)) -> ABB(x1)
    5: ABB(a(x1)) -> ABBA(x1)
    6: ABB(b(x1)) -> ABB(B(x1))
    7: ABBA(a(x1)) -> ABBA(A(x1))
    8: ABBA(b(x1)) -> ABBAB(x1)
    9: ABBAB(a(x1)) -> ABBABA(x1)
    10: ABBAB(b(x1)) -> ABBAB(B(x1))
    11: ABBABA(a(x1)) -> ABBABA(A(x1))
    12: ABBABA(b(x1)) -> ABBABAB(x1)
    13: ABBABAB(a(x1)) -> ABBABAB(A(x1))
    14: ABBABAB(b(x1)) -> ABBABABB(x1)
    15: ABBABABB(a(x1)) -> ABBABABB(A(x1))
    16: ABBABABB(b(x1)) -> ABBABABBB(x1)
    17: ABBABABBB(a(x1)) -> ABBABABBBA(x1)
    18: ABBABABBB(b(x1)) -> ABBABABBB(B(x1))
    19: ABBABABBBA(x1) -> b(a(b(a(b(b(a(x1)))))))
    20: B(a(x1)) -> BA(x1)
    21: B(b(x1)) -> B(B(x1))
    22: BA(a(x1)) -> BA(A(x1))
    23: BA(b(x1)) -> BAB(x1)
    24: BAB(a(x1)) -> BABA(x1)
    25: BAB(b(x1)) -> BAB(B(x1))
    26: BABA(a(x1)) -> BABA(A(x1))
    27: BABA(b(x1)) -> BABAB(x1)
    28: BABAB(a(x1)) -> BABAB(A(x1))
    29: BABAB(b(x1)) -> BABABB(x1)
    30: BABABB(a(x1)) -> BABABBA(x1)
    31: BABABB(b(x1)) -> BABABB(B(x1))
    32: BABABBA(x1) -> a(b(b(a(b(a(b(b(b(a(x1))))))))))
Number of strict rules: 32
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #A(b(x1)) -> #AB(x1)
   #2: #BABAB(b(x1)) -> #BABABB(x1)
   #3: #ABB(b(x1)) -> #ABB(B(x1))
   #4: #ABB(b(x1)) -> #B(x1)
   #5: #ABBABAB(a(x1)) -> #ABBABAB(A(x1))
   #6: #ABBABAB(a(x1)) -> #A(x1)
   #7: #ABBAB(a(x1)) -> #ABBABA(x1)
   #8: #ABBABA(a(x1)) -> #ABBABA(A(x1))
   #9: #ABBABA(a(x1)) -> #A(x1)
   #10: #BAB(a(x1)) -> #BABA(x1)
   #11: #BA(b(x1)) -> #BAB(x1)
   #12: #ABBABA(b(x1)) -> #ABBABAB(x1)
   #13: #BABABB(b(x1)) -> #BABABB(B(x1))
   #14: #BABABB(b(x1)) -> #B(x1)
   #15: #ABBABAB(b(x1)) -> #ABBABABB(x1)
   #16: #BABABB(a(x1)) -> #BABABBA(x1)
   #17: #BAB(b(x1)) -> #BAB(B(x1))
   #18: #BAB(b(x1)) -> #B(x1)
   #19: #B(a(x1)) -> #BA(x1)
   #20: #ABBA(a(x1)) -> #ABBA(A(x1))
   #21: #ABBA(a(x1)) -> #A(x1)
   #22: #ABBAB(b(x1)) -> #ABBAB(B(x1))
   #23: #ABBAB(b(x1)) -> #B(x1)
   #24: #ABB(a(x1)) -> #ABBA(x1)
   #25: #BABAB(a(x1)) -> #BABAB(A(x1))
   #26: #BABAB(a(x1)) -> #A(x1)
   #27: #BA(a(x1)) -> #BA(A(x1))
   #28: #BA(a(x1)) -> #A(x1)
   #29: #BABA(b(x1)) -> #BABAB(x1)
   #30: #ABBABABBB(a(x1)) -> #ABBABABBBA(x1)
   #31: #BABA(a(x1)) -> #BABA(A(x1))
   #32: #BABA(a(x1)) -> #A(x1)
   #33: #B(b(x1)) -> #B(B(x1))
   #34: #B(b(x1)) -> #B(x1)
   #35: #ABBABABB(b(x1)) -> #ABBABABBB(x1)
   #36: #AB(a(x1)) -> #AB(A(x1))
   #37: #AB(a(x1)) -> #A(x1)
   #38: #A(a(x1)) -> #A(A(x1))
   #39: #A(a(x1)) -> #A(x1)
   #40: #ABBA(b(x1)) -> #ABBAB(x1)
   #41: #ABBABABB(a(x1)) -> #ABBABABB(A(x1))
   #42: #ABBABABB(a(x1)) -> #A(x1)
   #43: #AB(b(x1)) -> #ABB(x1)
   #44: #ABBABABBB(b(x1)) -> #ABBABABBB(B(x1))
   #45: #ABBABABBB(b(x1)) -> #B(x1)
Number of SCCs: 1, DPs: 41, edges: 93
	SCC { #1..12 #14 #15 #17..29 #31..43 #45 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: (/ 1 16); x1_1 + x1_2
  #BA(x1)	weight: x1_2; 0
 ABBAB(x1)	weight: 0; x1_2
     b(x1)	weight: 0; x1_2
   #B(x1)	weight: x1_2; 0
#BABA(x1)	weight: x1_1 + x1_2; 0
#ABBABABBBA(x1)	weight: 0; 0
    AB(x1)	weight: 0; x1_2
#ABBA(x1)	weight: x1_2; 0
BABABBA(x1)	weight: (/ 1 16) + x1_1; x1_1 + x1_2
   ABB(x1)	weight: 0; x1_2
#ABBABABBB(x1)	weight: x1_2; 0
   BAB(x1)	weight: (/ 1 16) + x1_2; x1_2
#ABBABABB(x1)	weight: x1_2; 0
     B(x1)	weight: (/ 1 16) + x1_2; x1_2
 #BAB(x1)	weight: x1_2; 0
#ABBABA(x1)	weight: x1_2; 0
  ABBA(x1)	weight: 0; x1_2
#BABAB(x1)	weight: x1_2; 0
ABBABAB(x1)	weight: 0; x1_2
#BABABB(x1)	weight: x1_2; 0
     A(x1)	weight: (/ 1 32); x1_2
ABBABABBB(x1)	weight: 0; x1_2
   #A(x1)	weight: x1_2; 0
#BABABBA(x1)	weight: 0; 0
#ABBAB(x1)	weight: x1_2; 0
 BABAB(x1)	weight: (/ 1 16) + x1_2; x1_2
ABBABABBBA(x1)	weight: 0; x1_1 + x1_2
#ABBABAB(x1)	weight: x1_2; 0
ABBABABB(x1)	weight: 0; x1_2
 #ABB(x1)	weight: x1_2; 0
ABBABA(x1)	weight: 0; x1_2
  BABA(x1)	weight: (/ 1 16) + x1_2; x1_2
BABABB(x1)	weight: (/ 1 16) + x1_2; x1_2
  #AB(x1)	weight: x1_2; 0
    BA(x1)	weight: (/ 1 16) + x1_2; x1_2
    Usable rules: { 1..32 }
    Removed DPs: #31 #32
Number of SCCs: 1, DPs: 39, edges: 87
	SCC { #1..12 #14 #15 #17..29 #33..43 #45 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: (/ 1 16); x1_1 + x1_2
  #BA(x1)	weight: x1_2; 0
 ABBAB(x1)	weight: 0; x1_2
     b(x1)	weight: 0; x1_2
   #B(x1)	weight: x1_2; 0
#BABA(x1)	weight: x1_2; 0
#ABBABABBBA(x1)	weight: 0; 0
    AB(x1)	weight: 0; x1_2
#ABBA(x1)	weight: x1_1 + x1_2; 0
BABABBA(x1)	weight: (/ 1 16) + x1_1; x1_1 + x1_2
   ABB(x1)	weight: 0; x1_2
#ABBABABBB(x1)	weight: x1_2; 0
   BAB(x1)	weight: (/ 1 16) + x1_2; x1_2
#ABBABABB(x1)	weight: x1_2; 0
     B(x1)	weight: (/ 1 16) + x1_2; x1_2
 #BAB(x1)	weight: x1_2; 0
#ABBABA(x1)	weight: x1_2; 0
  ABBA(x1)	weight: 0; x1_2
#BABAB(x1)	weight: x1_2; 0
ABBABAB(x1)	weight: 0; x1_2
#BABABB(x1)	weight: x1_2; 0
     A(x1)	weight: (/ 1 32); x1_2
ABBABABBB(x1)	weight: 0; x1_2
   #A(x1)	weight: x1_2; 0
#BABABBA(x1)	weight: 0; 0
#ABBAB(x1)	weight: x1_2; 0
 BABAB(x1)	weight: (/ 1 16) + x1_2; x1_2
ABBABABBBA(x1)	weight: 0; x1_1 + x1_2
#ABBABAB(x1)	weight: x1_2; 0
ABBABABB(x1)	weight: 0; x1_2
 #ABB(x1)	weight: x1_2; 0
ABBABA(x1)	weight: 0; x1_2
  BABA(x1)	weight: (/ 1 16) + x1_2; x1_2
BABABB(x1)	weight: (/ 1 16) + x1_2; x1_2
  #AB(x1)	weight: x1_2; 0
    BA(x1)	weight: (/ 1 16) + x1_2; x1_2
    Usable rules: { 1..32 }
    Removed DPs: #20 #21
Number of SCCs: 1, DPs: 37, edges: 81
	SCC { #1..12 #14 #15 #17..19 #22..29 #33..43 #45 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: (/ 1 16); x1_1 + x1_2
  #BA(x1)	weight: x1_2; 0
 ABBAB(x1)	weight: 0; x1_2
     b(x1)	weight: 0; x1_2
   #B(x1)	weight: x1_2; 0
#BABA(x1)	weight: x1_2; 0
#ABBABABBBA(x1)	weight: 0; 0
    AB(x1)	weight: 0; x1_2
#ABBA(x1)	weight: x1_2; 0
BABABBA(x1)	weight: (/ 1 16) + x1_1; x1_1 + x1_2
   ABB(x1)	weight: 0; x1_2
#ABBABABBB(x1)	weight: x1_2; 0
   BAB(x1)	weight: (/ 1 16) + x1_2; x1_2
#ABBABABB(x1)	weight: x1_2; 0
     B(x1)	weight: (/ 1 16) + x1_2; x1_2
 #BAB(x1)	weight: x1_2; 0
#ABBABA(x1)	weight: x1_1 + x1_2; 0
  ABBA(x1)	weight: 0; x1_2
#BABAB(x1)	weight: x1_2; 0
ABBABAB(x1)	weight: 0; x1_2
#BABABB(x1)	weight: x1_2; 0
     A(x1)	weight: (/ 1 32); x1_2
ABBABABBB(x1)	weight: 0; x1_2
   #A(x1)	weight: x1_2; 0
#BABABBA(x1)	weight: 0; 0
#ABBAB(x1)	weight: x1_2; 0
 BABAB(x1)	weight: (/ 1 16) + x1_2; x1_2
ABBABABBBA(x1)	weight: 0; x1_1 + x1_2
#ABBABAB(x1)	weight: x1_2; 0
ABBABABB(x1)	weight: 0; x1_2
 #ABB(x1)	weight: x1_2; 0
ABBABA(x1)	weight: 0; x1_2
  BABA(x1)	weight: (/ 1 16) + x1_2; x1_2
BABABB(x1)	weight: (/ 1 16) + x1_2; x1_2
  #AB(x1)	weight: x1_2; 0
    BA(x1)	weight: (/ 1 16) + x1_2; x1_2
    Usable rules: { 1..32 }
    Removed DPs: #8 #9
Number of SCCs: 1, DPs: 35, edges: 75
	SCC { #1..7 #10..12 #14 #15 #17..19 #22..29 #33..43 #45 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: x1_1 + x1_2; (/ 1 16)
  #BA(x1)	weight: x1_1 + x1_2; 0
 ABBAB(x1)	weight: x1_1; 0
     b(x1)	weight: x1_1; 0
   #B(x1)	weight: x1_1; 0
#BABA(x1)	weight: x1_1; 0
#ABBABABBBA(x1)	weight: 0; 0
    AB(x1)	weight: x1_1; 0
#ABBA(x1)	weight: x1_1; 0
BABABBA(x1)	weight: x1_1 + x1_2; (/ 1 16)
   ABB(x1)	weight: x1_1; 0
#ABBABABBB(x1)	weight: x1_1; 0
   BAB(x1)	weight: x1_1; (/ 1 16)
#ABBABABB(x1)	weight: x1_1; 0
     B(x1)	weight: x1_1; (/ 1 16) + x1_1
 #BAB(x1)	weight: x1_1; 0
#ABBABA(x1)	weight: x1_1; 0
  ABBA(x1)	weight: x1_1; 0
#BABAB(x1)	weight: x1_1; 0
ABBABAB(x1)	weight: x1_1; 0
#BABABB(x1)	weight: x1_1; 0
     A(x1)	weight: x1_1; (/ 1 32)
ABBABABBB(x1)	weight: x1_1; 0
   #A(x1)	weight: x1_1; 0
#BABABBA(x1)	weight: 0; 0
#ABBAB(x1)	weight: x1_1; 0
 BABAB(x1)	weight: x1_1; (/ 1 16)
ABBABABBBA(x1)	weight: x1_1 + x1_2; 0
#ABBABAB(x1)	weight: x1_1; 0
ABBABABB(x1)	weight: x1_1; 0
 #ABB(x1)	weight: x1_1; 0
ABBABA(x1)	weight: x1_1; 0
  BABA(x1)	weight: x1_1; (/ 1 16)
BABABB(x1)	weight: x1_1; (/ 1 16)
  #AB(x1)	weight: x1_1; 0
    BA(x1)	weight: x1_1; (/ 1 16)
    Usable rules: { 1..32 }
    Removed DPs: #27 #28
Number of SCCs: 1, DPs: 33, edges: 69
	SCC { #1..7 #10..12 #14 #15 #17..19 #22..26 #29 #33..43 #45 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: x1_2; (/ 1 16) + x1_2
  #BA(x1)	weight: x1_2; 0
 ABBAB(x1)	weight: x1_1; x1_1
     b(x1)	weight: x1_1; x1_1
   #B(x1)	weight: x1_1; 0
#BABA(x1)	weight: x1_2; 0
#ABBABABBBA(x1)	weight: 0; 0
    AB(x1)	weight: x1_1; x1_1
#ABBA(x1)	weight: x1_2; 0
BABABBA(x1)	weight: x1_2; (/ 1 16) + x1_2
   ABB(x1)	weight: x1_1; x1_1
#ABBABABBB(x1)	weight: x1_1; 0
   BAB(x1)	weight: x1_1; (/ 1 16) + x1_1
#ABBABABB(x1)	weight: x1_1; 0
     B(x1)	weight: x1_1; (/ 1 16) + x1_1
 #BAB(x1)	weight: x1_1; 0
#ABBABA(x1)	weight: x1_2; 0
  ABBA(x1)	weight: x1_2; x1_2
#BABAB(x1)	weight: x1_1; 0
ABBABAB(x1)	weight: x1_1; x1_1
#BABABB(x1)	weight: x1_1; 0
     A(x1)	weight: x1_2; (/ 1 32) + x1_2
ABBABABBB(x1)	weight: x1_1; x1_1
   #A(x1)	weight: x1_2; 0
#BABABBA(x1)	weight: 0; 0
#ABBAB(x1)	weight: x1_1; 0
 BABAB(x1)	weight: x1_1; (/ 1 16) + x1_1
ABBABABBBA(x1)	weight: x1_2; x1_2
#ABBABAB(x1)	weight: x1_1; 0
ABBABABB(x1)	weight: x1_1; x1_1
 #ABB(x1)	weight: x1_1; 0
ABBABA(x1)	weight: x1_2; x1_2
  BABA(x1)	weight: x1_2; (/ 1 16) + x1_2
BABABB(x1)	weight: x1_1; (/ 1 16) + x1_1
  #AB(x1)	weight: x1_1; 0
    BA(x1)	weight: x1_2; (/ 1 16) + x1_2
    Usable rules: { 1..32 }
    Removed DPs: #38 #39
Number of SCCs: 1, DPs: 31, edges: 57
	SCC { #1..7 #10..12 #14 #15 #17..19 #22..26 #29 #33..37 #40..43 #45 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
