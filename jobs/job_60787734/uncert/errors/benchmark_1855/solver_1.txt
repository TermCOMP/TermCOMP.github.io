last 1240 length 4963
last 1286 length 5069
CNF 1240 vars 4963 clauses
CNF 1286 vars 5069 clauses
last 1038 length 4125
last 1072 length 4231
CNF 1038 vars 4125 clauses
CNF 1072 vars 4231 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5422, clauses: 19159
last 5422 length 19159
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5422, clauses: 19159
last 5422 length 19159
CNF 5422 vars 19159 clauses
CNF 5422 vars 19159 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 21139, clauses: 88019
last 21139 length 88019
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 21139, clauses: 88019
last 21139 length 88019
CNF 21139 vars 88019 clauses
CNF 21139 vars 88019 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 21139, clauses: 88019, status: Satisfied, time: 0.293345292s
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
last 990 length 3905
CNF 990 vars 3905 clauses
last 1183 length 4667
CNF 1183 vars 4667 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5116, clauses: 17986
last 5116 length 17986
CNF 5116 vars 17986 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 21139, clauses: 88019, status: Satisfied, time: 1.31963971s
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
last 968 length 3825
CNF 968 vars 3825 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20507, clauses: 85355
last 20507 length 85355
last 1153 length 4595
CNF 1153 vars 4595 clauses
CNF 20507 vars 85355 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5116, clauses: 17986
last 5116 length 17986
CNF 5116 vars 17986 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20507, clauses: 85355, status: Satisfied, time: 0.518605669s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20507, clauses: 85355
last 20507 length 85355
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
CNF 20507 vars 85355 clauses
**************************************************
summary
**************************************************
SRS with 15 rules on 8 letters       DP
SRS with 25 strict rules and 15 weak rules on 14 letters       weights
SRS with 6 strict rules and 15 weak rules on 11 letters       EDG
3 sub-proofs
  1 SRS with 2 strict rules and 15 weak rules on 9 letters       Usable
  SRS with 2 rules on 3 letters       weights
  SRS with 0 rules on 0 letters       EDG

  2 SRS with 2 strict rules and 15 weak rules on 9 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 1 strict rules and 15 weak rules on 9 letters       EDG
  SRS with 1 strict rules and 15 weak rules on 9 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 15 weak rules on 8 letters       EDG

  3 SRS with 2 strict rules and 15 weak rules on 9 letters       Usable
  SRS with 2 rules on 3 letters       weights
  SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [r0, 0] -> [0, r0] {- Input 0 -}
  [r0, 1] -> [1, r0] {- Input 1 -}
  [r0, m] -> [m, r0] {- Input 2 -}
  [r1, 0] -> [0, r1] {- Input 3 -}
  [r1, 1] -> [1, r1] {- Input 4 -}
  [r1, m] -> [m, r1] {- Input 5 -}
  [r0, b] -> [qr, 0, b] {- Input 6 -}
  [r1, b] -> [qr, 1, b] {- Input 7 -}
  [0, qr] -> [qr, 0] {- Input 8 -}
  [1, qr] -> [qr, 1] {- Input 9 -}
  [m, qr] -> [ql, m] {- Input 10 -}
  [0, ql] -> [ql, 0] {- Input 11 -}
  [1, ql] -> [ql, 1] {- Input 12 -}
  [b, ql, 0] -> [0, b, r0] {- Input 13 -}
  [b, ql, 1] -> [1, b, r1] {- Input 14 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [r0, 0] ->= [0, r0] {- DP Nontop (Input 0) -}
  [r0, 1] ->= [1, r0] {- DP Nontop (Input 1) -}
  [r0, m] ->= [m, r0] {- DP Nontop (Input 2) -}
  [r1, 0] ->= [0, r1] {- DP Nontop (Input 3) -}
  [r1, 1] ->= [1, r1] {- DP Nontop (Input 4) -}
  [r1, m] ->= [m, r1] {- DP Nontop (Input 5) -}
  [r0, b] ->= [qr, 0, b] {- DP Nontop (Input 6) -}
  [r1, b] ->= [qr, 1, b] {- DP Nontop (Input 7) -}
  [0, qr] ->= [qr, 0] {- DP Nontop (Input 8) -}
  [1, qr] ->= [qr, 1] {- DP Nontop (Input 9) -}
  [m, qr] ->= [ql, m] {- DP Nontop (Input 10) -}
  [0, ql] ->= [ql, 0] {- DP Nontop (Input 11) -}
  [1, ql] ->= [ql, 1] {- DP Nontop (Input 12) -}
  [b, ql, 0] ->= [0, b, r0] {- DP Nontop (Input 13) -}
  [b, ql, 1] ->= [1, b, r1] {- DP Nontop (Input 14) -}
  [r1#, 1] |-> [r1#] {- DP (Top 1) (Input 4) -}
  [r1#, 1] |-> [1#, r1] {- DP (Top 0) (Input 4) -}
  [r1#, b] |-> [1#, b] {- DP (Top 1) (Input 7) -}
  [r1#, 0] |-> [r1#] {- DP (Top 1) (Input 3) -}
  [r1#, 0] |-> [0#, r1] {- DP (Top 0) (Input 3) -}
  [r1#, m] |-> [r1#] {- DP (Top 1) (Input 5) -}
  [r1#, m] |-> [m#, r1] {- DP (Top 0) (Input 5) -}
  [1#, qr] |-> [1#] {- DP (Top 1) (Input 9) -}
  [1#, ql] |-> [1#] {- DP (Top 1) (Input 12) -}
  [b#, ql, 1] |-> [r1#] {- DP (Top 2) (Input 14) -}
  [b#, ql, 1] |-> [1#, b, r1] {- DP (Top 0) (Input 14) -}
  [b#, ql, 1] |-> [b#, r1] {- DP (Top 1) (Input 14) -}
  [b#, ql, 0] |-> [b#, r0] {- DP (Top 1) (Input 13) -}
  [b#, ql, 0] |-> [0#, b, r0] {- DP (Top 0) (Input 13) -}
  [b#, ql, 0] |-> [r0#] {- DP (Top 2) (Input 13) -}
  [0#, qr] |-> [0#] {- DP (Top 1) (Input 8) -}
  [0#, ql] |-> [0#] {- DP (Top 1) (Input 11) -}
  [r0#, 1] |-> [1#, r0] {- DP (Top 0) (Input 1) -}
  [r0#, 1] |-> [r0#] {- DP (Top 1) (Input 1) -}
  [r0#, b] |-> [0#, b] {- DP (Top 1) (Input 6) -}
  [r0#, 0] |-> [0#, r0] {- DP (Top 0) (Input 0) -}
  [r0#, 0] |-> [r0#] {- DP (Top 1) (Input 0) -}
  [r0#, m] |-> [r0#] {- DP (Top 1) (Input 2) -}
  [r0#, m] |-> [m#, r0] {- DP (Top 0) (Input 2) -}
  [m#, qr] |-> [m#] {- DP (Top 1) (Input 10) -}
reason
  (r1, 1/1)
  (qr, 1/1)
  (1, 0/1)
  (ql, 1/1)
  (b, 0/1)
  (0, 0/1)
  (r0, 1/1)
  (m, 2/1)
  (r1#, 2/1)
  (1#, 0/1)
  (b#, 2/1)
  (0#, 0/1)
  (r0#, 2/1)
  (m#, 0/1)
   property Termination
has value Just True
for SRS
  [r0, 0] ->= [0, r0] {- DP Nontop (Input 0) -}
  [r0, 1] ->= [1, r0] {- DP Nontop (Input 1) -}
  [r0, m] ->= [m, r0] {- DP Nontop (Input 2) -}
  [r1, 0] ->= [0, r1] {- DP Nontop (Input 3) -}
  [r1, 1] ->= [1, r1] {- DP Nontop (Input 4) -}
  [r1, m] ->= [m, r1] {- DP Nontop (Input 5) -}
  [r0, b] ->= [qr, 0, b] {- DP Nontop (Input 6) -}
  [r1, b] ->= [qr, 1, b] {- DP Nontop (Input 7) -}
  [0, qr] ->= [qr, 0] {- DP Nontop (Input 8) -}
  [1, qr] ->= [qr, 1] {- DP Nontop (Input 9) -}
  [m, qr] ->= [ql, m] {- DP Nontop (Input 10) -}
  [0, ql] ->= [ql, 0] {- DP Nontop (Input 11) -}
  [1, ql] ->= [ql, 1] {- DP Nontop (Input 12) -}
  [b, ql, 0] ->= [0, b, r0] {- DP Nontop (Input 13) -}
  [b, ql, 1] ->= [1, b, r1] {- DP Nontop (Input 14) -}
  [r1#, 1] |-> [r1#] {- DP (Top 1) (Input 4) -}
  [r1#, 0] |-> [r1#] {- DP (Top 1) (Input 3) -}
  [b#, ql, 1] |-> [b#, r1] {- DP (Top 1) (Input 14) -}
  [b#, ql, 0] |-> [b#, r0] {- DP (Top 1) (Input 13) -}
  [r0#, 1] |-> [r0#] {- DP (Top 1) (Input 1) -}
  [r0#, 0] |-> [r0#] {- DP (Top 1) (Input 0) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [r1#, 1] |-> [r1#] {- DP (Top 1) (Input 4) -}
  [r1#, 0] |-> [r1#] {- DP (Top 1) (Input 3) -}
  [r0, 0] ->= [0, r0] {- DP Nontop (Input 0) -}
  [r0, 1] ->= [1, r0] {- DP Nontop (Input 1) -}
  [r0, m] ->= [m, r0] {- DP Nontop (Input 2) -}
  [r1, 0] ->= [0, r1] {- DP Nontop (Input 3) -}
  [r1, 1] ->= [1, r1] {- DP Nontop (Input 4) -}
  [r1, m] ->= [m, r1] {- DP Nontop (Input 5) -}
  [r0, b] ->= [qr, 0, b] {- DP Nontop (Input 6) -}
  [r1, b] ->= [qr, 1, b] {- DP Nontop (Input 7) -}
  [0, qr] ->= [qr, 0] {- DP Nontop (Input 8) -}
  [1, qr] ->= [qr, 1] {- DP Nontop (Input 9) -}
  [m, qr] ->= [ql, m] {- DP Nontop (Input 10) -}
  [0, ql] ->= [ql, 0] {- DP Nontop (Input 11) -}
  [1, ql] ->= [ql, 1] {- DP Nontop (Input 12) -}
  [b, ql, 0] ->= [0, b, r0] {- DP Nontop (Input 13) -}
  [b, ql, 1] ->= [1, b, r1] {- DP Nontop (Input 14) -}
reason
  remove un-usable
    SRS
      [r0, 0] ->= [0, r0] {- DP Nontop (Input 0) -}
      [r0, 1] ->= [1, r0] {- DP Nontop (Input 1) -}
      [r0, m] ->= [m, r0] {- DP Nontop (Input 2) -}
      [r1, 0] ->= [0, r1] {- DP Nontop (Input 3) -}
      [r1, 1] ->= [1, r1] {- DP Nontop (Input 4) -}
      [r1, m] ->= [m, r1] {- DP Nontop (Input 5) -}
      [r0, b] ->= [qr, 0, b] {- DP Nontop (Input 6) -}
      [r1, b] ->= [qr, 1, b] {- DP Nontop (Input 7) -}
      [0, qr] ->= [qr, 0] {- DP Nontop (Input 8) -}
      [1, qr] ->= [qr, 1] {- DP Nontop (Input 9) -}
      [m, qr] ->= [ql, m] {- DP Nontop (Input 10) -}
      [0, ql] ->= [ql, 0] {- DP Nontop (Input 11) -}
      [1, ql] ->= [ql, 1] {- DP Nontop (Input 12) -}
      [b, ql, 0] ->= [0, b, r0] {- DP Nontop (Input 13) -}
      [b, ql, 1] ->= [1, b, r1] {- DP Nontop (Input 14) -}
   property Termination
has value Just True
for SRS
  [r1#, 1] |-> [r1#] {- DP (Top 1) (Input 4) -}
  [r1#, 0] |-> [r1#] {- DP (Top 1) (Input 3) -}
reason
  (1, 1/1)
  (0, 1/1)
  (r1#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

property Termination
has value Just True
for SRS
  [b#, ql, 1] |-> [b#, r1] {- DP (Top 1) (Input 14) -}
  [b#, ql, 0] |-> [b#, r0] {- DP (Top 1) (Input 13) -}
  [r0, 0] ->= [0, r0] {- DP Nontop (Input 0) -}
  [r0, 1] ->= [1, r0] {- DP Nontop (Input 1) -}
  [r0, m] ->= [m, r0] {- DP Nontop (Input 2) -}
  [r1, 0] ->= [0, r1] {- DP Nontop (Input 3) -}
  [r1, 1] ->= [1, r1] {- DP Nontop (Input 4) -}
  [r1, m] ->= [m, r1] {- DP Nontop (Input 5) -}
  [r0, b] ->= [qr, 0, b] {- DP Nontop (Input 6) -}
  [r1, b] ->= [qr, 1, b] {- DP Nontop (Input 7) -}
  [0, qr] ->= [qr, 0] {- DP Nontop (Input 8) -}
  [1, qr] ->= [qr, 1] {- DP Nontop (Input 9) -}
  [m, qr] ->= [ql, m] {- DP Nontop (Input 10) -}
  [0, ql] ->= [ql, 0] {- DP Nontop (Input 11) -}
  [1, ql] ->= [ql, 1] {- DP Nontop (Input 12) -}
  [b, ql, 0] ->= [0, b, r0] {- DP Nontop (Input 13) -}
  [b, ql, 1] ->= [1, b, r1] {- DP Nontop (Input 14) -}
reason
  ( r1
  , Wk  / 0A  0A -2A \
        | -2A 0A -2A |
        \ -   -  0A  / )
  ( qr
  , Wk  / -2A -   0A \
        | -2A -2A -  |
        \ -   -   0A / )
  ( 1
  , Wk  / 0A 0A 2A \
        | -  0A 2A |
        \ -  -  0A / )
  ( ql
  , Wk  / 0A -  0A  \
        | -  0A -1A |
        \ -  -  0A  / )
  ( b
  , Wk  / 0A 0A -  \
        | 0A 0A 0A |
        \ -  -  0A / )
  ( 0
  , Wk  / 2A 2A -  \
        | 0A 2A 2A |
        \ -  -  0A / )
  ( r0
  , Wk  / -2A 0A 0A \
        | -   0A -  |
        \ -   -  0A / )
  ( m
  , Wk  / - - 2A \
        | - - 2A |
        \ - - 0A / )
  ( b#
  , Wk  / 0A -1A 0A \
        | -  -   -  |
        \ -  -   0A / )
   property Termination
has value Just True
for SRS
  [b#, ql, 1] |-> [b#, r1] {- DP (Top 1) (Input 14) -}
  [r0, 0] ->= [0, r0] {- DP Nontop (Input 0) -}
  [r0, 1] ->= [1, r0] {- DP Nontop (Input 1) -}
  [r0, m] ->= [m, r0] {- DP Nontop (Input 2) -}
  [r1, 0] ->= [0, r1] {- DP Nontop (Input 3) -}
  [r1, 1] ->= [1, r1] {- DP Nontop (Input 4) -}
  [r1, m] ->= [m, r1] {- DP Nontop (Input 5) -}
  [r0, b] ->= [qr, 0, b] {- DP Nontop (Input 6) -}
  [r1, b] ->= [qr, 1, b] {- DP Nontop (Input 7) -}
  [0, qr] ->= [qr, 0] {- DP Nontop (Input 8) -}
  [1, qr] ->= [qr, 1] {- DP Nontop (Input 9) -}
  [m, qr] ->= [ql, m] {- DP Nontop (Input 10) -}
  [0, ql] ->= [ql, 0] {- DP Nontop (Input 11) -}
  [1, ql] ->= [ql, 1] {- DP Nontop (Input 12) -}
  [b, ql, 0] ->= [0, b, r0] {- DP Nontop (Input 13) -}
  [b, ql, 1] ->= [1, b, r1] {- DP Nontop (Input 14) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, ql, 1] |-> [b#, r1] {- DP (Top 1) (Input 14) -}
  [r0, 0] ->= [0, r0] {- DP Nontop (Input 0) -}
  [r0, 1] ->= [1, r0] {- DP Nontop (Input 1) -}
  [r0, m] ->= [m, r0] {- DP Nontop (Input 2) -}
  [r1, 0] ->= [0, r1] {- DP Nontop (Input 3) -}
  [r1, 1] ->= [1, r1] {- DP Nontop (Input 4) -}
  [r1, m] ->= [m, r1] {- DP Nontop (Input 5) -}
  [r0, b] ->= [qr, 0, b] {- DP Nontop (Input 6) -}
  [r1, b] ->= [qr, 1, b] {- DP Nontop (Input 7) -}
  [0, qr] ->= [qr, 0] {- DP Nontop (Input 8) -}
  [1, qr] ->= [qr, 1] {- DP Nontop (Input 9) -}
  [m, qr] ->= [ql, m] {- DP Nontop (Input 10) -}
  [0, ql] ->= [ql, 0] {- DP Nontop (Input 11) -}
  [1, ql] ->= [ql, 1] {- DP Nontop (Input 12) -}
  [b, ql, 0] ->= [0, b, r0] {- DP Nontop (Input 13) -}
  [b, ql, 1] ->= [1, b, r1] {- DP Nontop (Input 14) -}
reason
  ( r1
  , Wk  / 0A -1A -   \
        | 0A 0A  -1A |
        \ -  -   0A  / )
  ( qr
  , Wk  / -1A -   0A \
        | -   -1A -  |
        \ -   -   0A / )
  ( 1
  , Wk  / 0A 0A 0A \
        | 1A 1A -  |
        \ -  -  0A / )
  ( ql
  , Wk  / 0A -1A -  \
        | 1A 0A  0A |
        \ -  -   0A / )
  ( b
  , Wk  / 1A 1A -  \
        | -  1A 1A |
        \ -  -  0A / )
  ( 0
  , Wk  / 0A -1A -  \
        | -  0A  0A |
        \ -  -   0A / )
  ( r0
  , Wk  / 0A 0A -  \
        | -  0A -  |
        \ -  -  0A / )
  ( m
  , Wk  / - - 1A \
        | - - 2A |
        \ - - 0A / )
  ( b#
  , Wk  / 1A 1A -  \
        | -  -  -  |
        \ -  -  0A / )
   property Termination
has value Just True
for SRS
  [r0, 0] ->= [0, r0] {- DP Nontop (Input 0) -}
  [r0, 1] ->= [1, r0] {- DP Nontop (Input 1) -}
  [r0, m] ->= [m, r0] {- DP Nontop (Input 2) -}
  [r1, 0] ->= [0, r1] {- DP Nontop (Input 3) -}
  [r1, 1] ->= [1, r1] {- DP Nontop (Input 4) -}
  [r1, m] ->= [m, r1] {- DP Nontop (Input 5) -}
  [r0, b] ->= [qr, 0, b] {- DP Nontop (Input 6) -}
  [r1, b] ->= [qr, 1, b] {- DP Nontop (Input 7) -}
  [0, qr] ->= [qr, 0] {- DP Nontop (Input 8) -}
  [1, qr] ->= [qr, 1] {- DP Nontop (Input 9) -}
  [m, qr] ->= [ql, m] {- DP Nontop (Input 10) -}
  [0, ql] ->= [ql, 0] {- DP Nontop (Input 11) -}
  [1, ql] ->= [ql, 1] {- DP Nontop (Input 12) -}
  [b, ql, 0] ->= [0, b, r0] {- DP Nontop (Input 13) -}
  [b, ql, 1] ->= [1, b, r1] {- DP Nontop (Input 14) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [r0#, 1] |-> [r0#] {- DP (Top 1) (Input 1) -}
  [r0#, 0] |-> [r0#] {- DP (Top 1) (Input 0) -}
  [r0, 0] ->= [0, r0] {- DP Nontop (Input 0) -}
  [r0, 1] ->= [1, r0] {- DP Nontop (Input 1) -}
  [r0, m] ->= [m, r0] {- DP Nontop (Input 2) -}
  [r1, 0] ->= [0, r1] {- DP Nontop (Input 3) -}
  [r1, 1] ->= [1, r1] {- DP Nontop (Input 4) -}
  [r1, m] ->= [m, r1] {- DP Nontop (Input 5) -}
  [r0, b] ->= [qr, 0, b] {- DP Nontop (Input 6) -}
  [r1, b] ->= [qr, 1, b] {- DP Nontop (Input 7) -}
  [0, qr] ->= [qr, 0] {- DP Nontop (Input 8) -}
  [1, qr] ->= [qr, 1] {- DP Nontop (Input 9) -}
  [m, qr] ->= [ql, m] {- DP Nontop (Input 10) -}
  [0, ql] ->= [ql, 0] {- DP Nontop (Input 11) -}
  [1, ql] ->= [ql, 1] {- DP Nontop (Input 12) -}
  [b, ql, 0] ->= [0, b, r0] {- DP Nontop (Input 13) -}
  [b, ql, 1] ->= [1, b, r1] {- DP Nontop (Input 14) -}
reason
  remove un-usable
    SRS
      [r0, 0] ->= [0, r0] {- DP Nontop (Input 0) -}
      [r0, 1] ->= [1, r0] {- DP Nontop (Input 1) -}
      [r0, m] ->= [m, r0] {- DP Nontop (Input 2) -}
      [r1, 0] ->= [0, r1] {- DP Nontop (Input 3) -}
      [r1, 1] ->= [1, r1] {- DP Nontop (Input 4) -}
      [r1, m] ->= [m, r1] {- DP Nontop (Input 5) -}
      [r0, b] ->= [qr, 0, b] {- DP Nontop (Input 6) -}
      [r1, b] ->= [qr, 1, b] {- DP Nontop (Input 7) -}
      [0, qr] ->= [qr, 0] {- DP Nontop (Input 8) -}
      [1, qr] ->= [qr, 1] {- DP Nontop (Input 9) -}
      [m, qr] ->= [ql, m] {- DP Nontop (Input 10) -}
      [0, ql] ->= [ql, 0] {- DP Nontop (Input 11) -}
      [1, ql] ->= [ql, 1] {- DP Nontop (Input 12) -}
      [b, ql, 0] ->= [0, b, r0] {- DP Nontop (Input 13) -}
      [b, ql, 1] ->= [1, b, r1] {- DP Nontop (Input 14) -}
   property Termination
has value Just True
for SRS
  [r0#, 1] |-> [r0#] {- DP (Top 1) (Input 1) -}
  [r0#, 0] |-> [r0#] {- DP (Top 1) (Input 0) -}
reason
  (1, 1/1)
  (0, 1/1)
  (r0#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: (15,8)\Deepee(25/15,14)\Weight(6/15,11)\EDG[(2/15,9)\Usable(2,3)\Weight(0,0)\EDG[],(2/15,9)\Matrix{\ArcticBZ}{3}\EDG(1/15,9)\Matrix{\ArcticBZ}{3}(0/15,8)\EDG[],(2/15,9)\Usable(2,3)\Weight(0,0)\EDG[]]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.059967730000
  min duration 3.059967730000
  total durat. 3.059967730000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 402
      , num_strict_rules = 402
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 51
      , total_length = 2556}
    , self = 88
    , parent = Nothing
    , duration = 3.059967730000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:23:08.756300878 UTC
    , finish = 2025-09-03 13:23:11.816268608 UTC
    , thread_cap_info = ("ThreadId 104", 0, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.061945393000
  min duration 3.061945393000
  total durat. 3.061945393000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 402
      , num_strict_rules = 402
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 51
      , total_length = 2556}
    , self = 89
    , parent = Nothing
    , duration = 3.061945393000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:23:08.777147528 UTC
    , finish = 2025-09-03 13:23:11.839092921 UTC
    , thread_cap_info = ("ThreadId 106", 0, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 2.079543409000
  min duration 1.073015779000
  total durat. 5.074991454000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 17
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 15
      , alphabet_size = 9
      , total_length = 76}
    , self = 70
    , parent = Nothing
    , duration = 1.073015779000
    , status = Success
    , start = 2025-09-03 13:23:08.702474104 UTC
    , finish = 2025-09-03 13:23:09.775489883 UTC
    , thread_cap_info = ("ThreadId 92", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 15
      , alphabet_size = 9
      , total_length = 71}
    , self = 90
    , parent = Nothing
    , duration = 1.922432266000
    , status = Success
    , start = 2025-09-03 13:23:10.121239917 UTC
    , finish = 2025-09-03 13:23:12.043672183 UTC
    , thread_cap_info = ("ThreadId 121", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 17
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 15
      , alphabet_size = 9
      , total_length = 76}
    , self = 79
    , parent = Nothing
    , duration = 2.079543409000
    , status = Success
    , start = 2025-09-03 13:23:08.695887306 UTC
    , finish = 2025-09-03 13:23:10.775430715 UTC
    , thread_cap_info = ("ThreadId 87", 2, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 2.333941264000
  min duration 1.247865465000
  total durat. 5.686844974000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 17
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 15
      , alphabet_size = 9
      , total_length = 76}
    , self = 72
    , parent = Nothing
    , duration = 1.247865465000
    , status = Fail
    , start = 2025-09-03 13:23:08.599012159 UTC
    , finish = 2025-09-03 13:23:09.846877624 UTC
    , thread_cap_info = ("ThreadId 82", 2, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 15
      , alphabet_size = 9
      , total_length = 71}
    , self = 92
    , parent = Nothing
    , duration = 2.105038245000
    , status = Fail
    , start = 2025-09-03 13:23:10.018432244 UTC
    , finish = 2025-09-03 13:23:12.123470489 UTC
    , thread_cap_info = ("ThreadId 120", 2, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 17
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 15
      , alphabet_size = 9
      , total_length = 76}
    , self = 81
    , parent = Nothing
    , duration = 2.333941264000
    , status = Fail
    , start = 2025-09-03 13:23:08.616207562 UTC
    , finish = 2025-09-03 13:23:10.950148826 UTC
    , thread_cap_info = ("ThreadId 80", 2, False)}
**************************************************
S              Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
S              epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
S              = Size { num_rules = 960 , num_strict_rules = 960 , num_top_rules = 0 ,
S              num_weak_rules = 0 , alphabet_size = 64 , total_length = 6144} , self =
S              49 , parent = Nothing , duration = 0.155855081000 , status = Success ,
S              start = 2025-09-03 13:23:08.4704415 UTC , finish = 2025-09-03 13:23:08.626296581
S              UTC , thread_cap_info = ("ThreadId 53", 3, False)}
S              
| S            Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| S            epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| S            = Size { num_rules = 960 , num_strict_rules = 960 , num_top_rules = 0 ,
| S            num_weak_rules = 0 , alphabet_size = 64 , total_length = 6144} , self =
| S            50 , parent = Nothing , duration = 0.138227412000 , status = Success ,
| S            start = 2025-09-03 13:23:08.493334123 UTC , finish = 2025-09-03 13:23:08.631561535
| S            UTC , thread_cap_info = ("ThreadId 55", 0, False)}
| S            
| | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F          = False\n , verbose = False}" , input_size = Size { num_rules = 17 , num_strict_rules
| | F          = 2 , num_top_rules = 2 , num_weak_rules = 15 , alphabet_size = 9 , total_length
| | F          = 76} , self = 54 , parent = Nothing , duration = 0.104254735000 , status
| | F          = Fail , start = 2025-09-03 13:23:08.536247837 UTC , finish = 2025-09-03
| | F          13:23:08.640502572 UTC , thread_cap_info = ("ThreadId 71", 2, False)}
| | F          
| | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 17 , num_strict_rules
| | | F        = 2 , num_top_rules = 2 , num_weak_rules = 15 , alphabet_size = 9 , total_length
| | | F        = 76} , self = 55 , parent = Nothing , duration = 0.148062576000 , status
| | | F        = Fail , start = 2025-09-03 13:23:08.539975889 UTC , finish = 2025-09-03
| | | F        13:23:08.688038465 UTC , thread_cap_info = ("ThreadId 75", 2, False)}
| | | F        
| | | | F      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F      = 17 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 15 ,
| | | | F      alphabet_size = 9 , total_length = 76} , self = 72 , parent = Nothing ,
| | | | F      duration = 1.247865465000 , status = Fail , start = 2025-09-03 13:23:08.599012159
| | | | F      UTC , finish = 2025-09-03 13:23:09.846877624 UTC , thread_cap_info = ("ThreadId
| | | | F      82", 2, False)}
| | | | F      
| | | | | F    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F    = 17 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 15 ,
| | | | | F    alphabet_size = 9 , total_length = 76} , self = 81 , parent = Nothing ,
| | | | | F    duration = 2.333941264000 , status = Fail , start = 2025-09-03 13:23:08.616207562
| | | | | F    UTC , finish = 2025-09-03 13:23:10.950148826 UTC , thread_cap_info = ("ThreadId
| | | | | F    80", 2, False)}
| | | | | F    
S | | | | |    
  S | | | |    
    F | | |    
      F | |    
S       | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
S       | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
S       | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
S       | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
S       | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
S       | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 17
S       | |    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 15 , alphabet_size
S       | |    = 9 , total_length = 76} , self = 79 , parent = Nothing , duration = 2.079543409000
S       | |    , status = Success , start = 2025-09-03 13:23:08.695887306 UTC , finish
S       | |    = 2025-09-03 13:23:10.775430715 UTC , thread_cap_info = ("ThreadId 87",
S       | |    2, False)}
S       | |    
| S     | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| S     | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| S     | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S     | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S     | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S     | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 17
| S     | |    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 15 , alphabet_size
| S     | |    = 9 , total_length = 76} , self = 70 , parent = Nothing , duration = 1.073015779000
| S     | |    , status = Success , start = 2025-09-03 13:23:08.702474104 UTC , finish
| S     | |    = 2025-09-03 13:23:09.775489883 UTC , thread_cap_info = ("ThreadId 92",
| S     | |    2, False)}
| S     | |    
| | F   | |    Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | F   | |    { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | F   | |    = MSB_First}\n , max_size = Nothing\n , max_height = Just 5\n , initial
| | F   | |    = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | F   | |    = False}" , input_size = Size { num_rules = 15 , num_strict_rules = 15
| | F   | |    , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 8 , total_length
| | F   | |    = 66} , self = 66 , parent = Nothing , duration = 0.243310144000 , status
| | F   | |    = Fail , start = 2025-09-03 13:23:08.73541137 UTC , finish = 2025-09-03
| | F   | |    13:23:08.978721514 UTC , thread_cap_info = ("ThreadId 96", 0, False)}
| | F   | |    
| | | E | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | E | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E | |    = False\n , verbose = False}" , input_size = Size { num_rules = 402 , num_strict_rules
| | | E | |    = 402 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 51 , total_length
| | | E | |    = 2556} , self = 88 , parent = Nothing , duration = 3.059967730000 , status
| | | E | |    = Except "AsyncCancelled" , start = 2025-09-03 13:23:08.756300878 UTC ,
| | | E | |    finish = 2025-09-03 13:23:11.816268608 UTC , thread_cap_info = ("ThreadId
| | | E | |    104", 0, False)}
| | | E | |    
| | | | | | E  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | E  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | E  = False\n , verbose = False}" , input_size = Size { num_rules = 402 , num_strict_rules
| | | | | | E  = 402 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 51 , total_length
| | | | | | E  = 2556} , self = 89 , parent = Nothing , duration = 3.061945393000 , status
| | | | | | E  = Except "AsyncCancelled" , start = 2025-09-03 13:23:08.777147528 UTC ,
| | | | | | E  finish = 2025-09-03 13:23:11.839092921 UTC , thread_cap_info = ("ThreadId
| | | | | | E  106", 0, False)}
| | | | | | E  
| | F | | | |  
| | F | | | |  Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | F | | | |  { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | F | | | |  = MSB_First}\n , max_size = Nothing\n , max_height = Just 6\n , initial
| | F | | | |  = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | F | | | |  = False}" , input_size = Size { num_rules = 15 , num_strict_rules = 15
| | F | | | |  , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 8 , total_length
| | F | | | |  = 66} , self = 67 , parent = Nothing , duration = 0.333148829000 , status
| | F | | | |  = Fail , start = 2025-09-03 13:23:09.039351853 UTC , finish = 2025-09-03
| | F | | | |  13:23:09.372500682 UTC , thread_cap_info = ("ThreadId 108", 0, False)}
| | F | | | |  
| | F | | | |  
| | F | | | |  Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | F | | | |  { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | F | | | |  = MSB_First}\n , max_size = Nothing\n , max_height = Just 6\n , initial
| | F | | | |  = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | F | | | |  = False}" , input_size = Size { num_rules = 15 , num_strict_rules = 15
| | F | | | |  , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 8 , total_length
| | F | | | |  = 66} , self = 69 , parent = Nothing , duration = 0.320454141000 , status
| | F | | | |  = Fail , start = 2025-09-03 13:23:09.424071559 UTC , finish = 2025-09-03
| | F | | | |  13:23:09.7445257 UTC , thread_cap_info = ("ThreadId 109", 0, False)}
| | F | | | |  
| | F | | | |  
| S   | | | |  
|     | F | |  
| F   |   | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F   |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F   |   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| F   |   | |  = 1 , num_top_rules = 1 , num_weak_rules = 15 , alphabet_size = 9 , total_length
| F   |   | |  = 71} , self = 78 , parent = Nothing , duration = 0.101289043000 , status
| F   |   | |  = Fail , start = 2025-09-03 13:23:09.964924865 UTC , finish = 2025-09-03
| F   |   | |  13:23:10.066213908 UTC , thread_cap_info = ("ThreadId 117", 2, False)}
| F   |   | |  
| | F |   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F |   | |  = 16 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 15 ,
| | F |   | |  alphabet_size = 9 , total_length = 71} , self = 92 , parent = Nothing ,
| | F |   | |  duration = 2.105038245000 , status = Fail , start = 2025-09-03 13:23:10.018432244
| | F |   | |  UTC , finish = 2025-09-03 13:23:12.123470489 UTC , thread_cap_info = ("ThreadId
| | F |   | |  120", 2, False)}
| | F |   | |  
| F | |   | |  
| S | |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| S | |   | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| S | |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S | |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S | |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S | |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 16
| S | |   | |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 15 , alphabet_size
| S | |   | |  = 9 , total_length = 71} , self = 90 , parent = Nothing , duration = 1.922432266000
| S | |   | |  , status = Success , start = 2025-09-03 13:23:10.121239917 UTC , finish
| S | |   | |  = 2025-09-03 13:23:12.043672183 UTC , thread_cap_info = ("ThreadId 121",
| S | |   | |  2, False)}
| S | |   | |  
S | | |   | |  
  | | |   F |  
F | | |     |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | | |     |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | |     |  = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
F | | |     |  = 1 , num_top_rules = 1 , num_weak_rules = 15 , alphabet_size = 9 , total_length
F | | |     |  = 71} , self = 86 , parent = Nothing , duration = 0.316629685000 , status
F | | |     |  = Fail , start = 2025-09-03 13:23:11.178367237 UTC , finish = 2025-09-03
F | | |     |  13:23:11.494996922 UTC , thread_cap_info = ("ThreadId 127", 2, False)}
F | | |     |  
| | | | F   |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F   |  = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | F   |  = 1 , num_top_rules = 1 , num_weak_rules = 15 , alphabet_size = 9 , total_length
| | | | F   |  = 71} , self = 87 , parent = Nothing , duration = 0.206790431000 , status
| | | | F   |  = Fail , start = 2025-09-03 13:23:11.372536101 UTC , finish = 2025-09-03
| | | | F   |  13:23:11.579326532 UTC , thread_cap_info = ("ThreadId 128", 2, False)}
| | | | F   |  
F | | | |   |  
  | | | F   |  
  | | E     |  
  | |       E  
  S |          
    F          
