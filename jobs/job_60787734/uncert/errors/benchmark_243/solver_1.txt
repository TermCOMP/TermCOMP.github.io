last 2527 length 10009
CNF 2527 vars 10009 clauses
last 3175 length 17145
last 2427 length 12376
CNF 2427 vars 12376 clauses
last 2783 length 11411
CNF 3175 vars 17145 clauses
CNF 2783 vars 11411 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9749, clauses: 35241
last 9749 length 35241
CNF 9749 vars 35241 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15109, clauses: 54007
last 15109 length 54007
CNF 15109 vars 54007 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9749, clauses: 35241, status: Satisfied, time: 0.2380445s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15109, clauses: 54007, status: Satisfied, time: 0.29298218s
last 3892 length 28547
last 2990 length 20974
CNF 3892 vars 28547 clauses
CNF 2990 vars 20974 clauses
last 2749 length 11277
last 2461 length 9757
CNF 2749 vars 11277 clauses
CNF 2461 vars 9757 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8975, clauses: 31770
last 8975 length 31770
CNF 8975 vars 31770 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8975, clauses: 31770, status: Satisfied, time: 0.337599698s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 29772, clauses: 122876
last 29772 length 122876
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14898, clauses: 53186
last 14898 length 53186
CNF 14898 vars 53186 clauses
CNF 29772 vars 122876 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14898, clauses: 53186, status: Satisfied, time: 0.216887135s
last 3884 length 28517
last 2982 length 20944
CNF 3884 vars 28517 clauses
CNF 2982 vars 20944 clauses
last 2715 length 11143
CNF 2715 vars 11143 clauses
last 2395 length 9505
CNF 2395 vars 9505 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8869, clauses: 31381
last 8869 length 31381
CNF 8869 vars 31381 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14687, clauses: 52365
last 14687 length 52365
CNF 14687 vars 52365 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8869, clauses: 31381, status: Unsatisfied, time: 1.122652745s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 29726, clauses: 122706
last 29726 length 122706
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14687, clauses: 52365, status: Satisfied, time: 0.68797717s
CNF 29726 vars 122706 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18389, clauses: 71543
last 18389 length 71543
last 2345 length 9321
CNF 2345 vars 9321 clauses
CNF 18389 vars 71543 clauses
last 2651 length 10905
CNF 2651 vars 10905 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14198, clauses: 50616
last 14198 length 50616
CNF 14198 vars 50616 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14198, clauses: 50616, status: Satisfied, time: 0.173738116s
last 1883 length 7595
last 2367 length 9845
CNF 2367 vars 9845 clauses
CNF 1883 vars 7595 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11979, clauses: 42368
last 11979 length 42368
CNF 11979 vars 42368 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11979, clauses: 42368, status: Satisfied, time: 0.295170809s
last 1229 length 5135
CNF 1229 vars 5135 clauses
last 1729 length 7417
CNF 1729 vars 7417 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7500, clauses: 26045
last 7500 length 26045
CNF 7500 vars 26045 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7500, clauses: 26045, status: Satisfied, time: 0.22253455s
last 1563 length 6375
last 2055 length 8637
CNF 2055 vars 8637 clauses
CNF 1563 vars 6375 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9971, clauses: 34962
last 9971 length 34962
CNF 9971 vars 34962 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9971, clauses: 34962, status: Unsatisfied, time: 0.633170615s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18389, clauses: 71543, status: Unsatisfied, time: 4.534572286s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 31472, clauses: 129727
last 31472 length 129727
CNF 31472 vars 129727 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 19563, clauses: 75759
last 19563 length 75759
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14381, clauses: 53668
last 14381 length 53668
CNF 19563 vars 75759 clauses
CNF 14381 vars 53668 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 19563, clauses: 75759, status: Unsatisfied, time: 2.577361329s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16141, clauses: 59895
last 16141 length 59895
CNF 16141 vars 59895 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 52489, clauses: 208080
last 52489 length 208080
CNF 52489 vars 208080 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16141, clauses: 59895, status: Unsatisfied, time: 3.864533376s
[Info] pool sizes (success) 39314 seen 18225 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
**************************************************
summary
**************************************************
SRS with 26 rules on 16 letters       looping derivation
from
  [BABA, BA, A, A, ABA, A, A, ABA, b, a]
to
  [BABA, BABA, BA, A, A, ABA, A, A, ABA, b, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]
via 58 steps

**************************************************
proof
**************************************************
property Termination
has value Just False
for SRS
  [B, a] -> [BA] {- Input 0 -}
  [B, b] -> [B, B] {- Input 1 -}
  [BA, a] -> [BA, A] {- Input 2 -}
  [BA, b] -> [BAB] {- Input 3 -}
  [BAB, a] -> [BABA] {- Input 4 -}
  [BAB, b] -> [BAB, B] {- Input 5 -}
  [BABA, a] -> [BABAA] {- Input 6 -}
  [BABA, b] -> [BABA, B] {- Input 7 -}
  [BABAA, a] -> [BABAAA] {- Input 8 -}
  [BABAA, b] -> [BABAA, B] {- Input 9 -}
  [BABAAA, a] -> [BABAAAA] {- Input 10 -}
  [BABAAA, b] -> [BABAAA, B] {- Input 11 -}
  [BABAAAA, a] -> [BABAAAA, A] {- Input 12 -}
  [BABAAAA, b] -> [BABAAAAB] {- Input 13 -}
  [BABAAAAB, a] -> [BABAAAABA] {- Input 14 -}
  [BABAAAAB, b] -> [BABAAAAB, B] {- Input 15 -}
  [BABAAAABA] -> [a, b, a, b, a] {- Input 16 -}
  [A, a] -> [A, A] {- Input 17 -}
  [A, b] -> [AB] {- Input 18 -}
  [AB, a] -> [ABA] {- Input 19 -}
  [AB, b] -> [AB, B] {- Input 20 -}
  [ABA, a] -> [ABA, A] {- Input 21 -}
  [ABA, b] -> [ABAB] {- Input 22 -}
  [ABAB, a] -> [ABABA] {- Input 23 -}
  [ABAB, b] -> [ABAB, B] {- Input 24 -}
  [ABABA] -> [b, a, b, a, a, a, a, b, a] {- Input 25 -}
reason
  Nontermination
    Derive   { from = [BABA, BA, A, A, ABA, A, A, ABA, b, a], via = [(Step   { rule = 22, position = 7}, [BABA, BA, A, A, ABA, A, A, ABAB, a]), (Step   { rule = 23, position = 7}, [BABA, BA, A, A, ABA, A, A, ABABA]), (Step   { rule = 25, position = 7}, [BABA, BA, A, A, ABA, A, A, b, a, b, a, a, a, a, b, a]), (Step   { rule = 18, position = 6}, [BABA, BA, A, A, ABA, A, AB, a, b, a, a, a, a, b, a]), (Step   { rule = 19, position = 6}, [BABA, BA, A, A, ABA, A, ABA, b, a, a, a, a, b, a]), (Step   { rule = 22, position = 6}, [BABA, BA, A, A, ABA, A, ABAB, a, a, a, a, b, a]), (Step   { rule = 23, position = 6}, [BABA, BA, A, A, ABA, A, ABABA, a, a, a, b, a]), (Step   { rule = 25, position = 6}, [BABA, BA, A, A, ABA, A, b, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 18, position = 5}, [BABA, BA, A, A, ABA, AB, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 19, position = 5}, [BABA, BA, A, A, ABA, ABA, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 22, position = 5}, [BABA, BA, A, A, ABA, ABAB, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 23, position = 5}, [BABA, BA, A, A, ABA, ABABA, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 25, position = 5}, [BABA, BA, A, A, ABA, b, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 22, position = 4}, [BABA, BA, A, A, ABAB, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 23, position = 4}, [BABA, BA, A, A, ABABA, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 25, position = 4}, [BABA, BA, A, A, b, a, b, a, a, a, a, b, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 18, position = 3}, [BABA, BA, A, AB, a, b, a, a, a, a, b, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 19, position = 3}, [BABA, BA, A, ABA, b, a, a, a, a, b, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 22, position = 3}, [BABA, BA, A, ABAB, a, a, a, a, b, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 23, position = 3}, [BABA, BA, A, ABABA, a, a, a, b, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 25, position = 3}, [BABA, BA, A, b, a, b, a, a, a, a, b, a, a, a, a, b, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 18, position = 2}, [BABA, BA, AB, a, b, a, a, a, a, b, a, a, a, a, b, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 19, position = 2}, [BABA, BA, ABA, b, a, a, a, a, b, a, a, a, a, b, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 22, position = 2}, [BABA, BA, ABAB, a, a, a, a, b, a, a, a, a, b, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 23, position = 2}, [BABA, BA, ABABA, a, a, a, b, a, a, a, a, b, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 25, position = 2}, [BABA, BA, b, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 3, position = 1}, [BABA, BAB, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 4, position = 1}, [BABA, BABA, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 7, position = 1}, [BABA, BABA, B, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 0, position = 2}, [BABA, BABA, BA, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 2, position = 2}, [BABA, BABA, BA, A, a, a, b, a, a, a, a, b, a, a, a, a, b, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 17, position = 3}, [BABA, BABA, BA, A, A, a, b, a, a, a, a, b, a, a, a, a, b, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 17, position = 4}, [BABA, BABA, BA, A, A, A, b, a, a, a, a, b, a, a, a, a, b, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 18, position = 5}, [BABA, BABA, BA, A, A, AB, a, a, a, a, b, a, a, a, a, b, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 19, position = 5}, [BABA, BABA, BA, A, A, ABA, a, a, a, b, a, a, a, a, b, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 21, position = 5}, [BABA, BABA, BA, A, A, ABA, A, a, a, b, a, a, a, a, b, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 17, position = 6}, [BABA, BABA, BA, A, A, ABA, A, A, a, b, a, a, a, a, b, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 17, position = 7}, [BABA, BABA, BA, A, A, ABA, A, A, A, b, a, a, a, a, b, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 18, position = 8}, [BABA, BABA, BA, A, A, ABA, A, A, AB, a, a, a, a, b, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 19, position = 8}, [BABA, BABA, BA, A, A, ABA, A, A, ABA, a, a, a, b, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 21, position = 8}, [BABA, BABA, BA, A, A, ABA, A, A, ABA, A, a, a, b, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 17, position = 9}, [BABA, BABA, BA, A, A, ABA, A, A, ABA, A, A, a, b, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 17, position = 10}, [BABA, BABA, BA, A, A, ABA, A, A, ABA, A, A, A, b, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 18, position = 11}, [BABA, BABA, BA, A, A, ABA, A, A, ABA, A, A, AB, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 19, position = 11}, [BABA, BABA, BA, A, A, ABA, A, A, ABA, A, A, ABA, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 22, position = 11}, [BABA, BABA, BA, A, A, ABA, A, A, ABA, A, A, ABAB, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 23, position = 11}, [BABA, BABA, BA, A, A, ABA, A, A, ABA, A, A, ABABA, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 25, position = 11}, [BABA, BABA, BA, A, A, ABA, A, A, ABA, A, A, b, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 18, position = 10}, [BABA, BABA, BA, A, A, ABA, A, A, ABA, A, AB, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 19, position = 10}, [BABA, BABA, BA, A, A, ABA, A, A, ABA, A, ABA, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 22, position = 10}, [BABA, BABA, BA, A, A, ABA, A, A, ABA, A, ABAB, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 23, position = 10}, [BABA, BABA, BA, A, A, ABA, A, A, ABA, A, ABABA, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 25, position = 10}, [BABA, BABA, BA, A, A, ABA, A, A, ABA, A, b, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 18, position = 9}, [BABA, BABA, BA, A, A, ABA, A, A, ABA, AB, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 19, position = 9}, [BABA, BABA, BA, A, A, ABA, A, A, ABA, ABA, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 22, position = 9}, [BABA, BABA, BA, A, A, ABA, A, A, ABA, ABAB, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 23, position = 9}, [BABA, BABA, BA, A, A, ABA, A, A, ABA, ABABA, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]), (Step   { rule = 25, position = 9}, [BABA, BABA, BA, A, A, ABA, A, A, ABA, b, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a])], to = [BABA, BABA, BA, A, A, ABA, A, A, ABA, b, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a, a, a, a, b, a]}

**************************************************
skeleton: (26,16)\Loop{58}[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 10
  max duration 0.389229894000
  min duration 0.062545302000
  total durat. 1.656824990000
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.098314688000
  min duration 3.098314688000
  total durat. 3.098314688000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 381
      , num_strict_rules = 381
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 169
      , total_length = 2529}
    , self = 115
    , parent = Nothing
    , duration = 3.098314688000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:13:57.455357403 UTC
    , finish = 2025-09-03 11:14:00.553672091 UTC
    , thread_cap_info = ("ThreadId 135", 1, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 10
  max duration 0.290407244000
  min duration 0.089090918000
  total durat. 1.768222092000
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.120898583000
  min duration 3.120898583000
  total durat. 3.120898583000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 381
      , num_strict_rules = 381
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 169
      , total_length = 2529}
    , self = 116
    , parent = Nothing
    , duration = 3.120898583000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:13:57.455359039 UTC
    , finish = 2025-09-03 11:14:00.576257622 UTC
    , thread_cap_info = ("ThreadId 137", 1, False)}
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 3
  max duration 15.918326768000
  min duration 0.073095585000
  total durat. 16.110038343000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 452
      , num_strict_rules = 452
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 183
      , total_length = 3028}
    , self = 151
    , parent = Nothing
    , duration = 15.918326768000
    , status = Fail
    , start = 2025-09-03 11:13:57.374719754 UTC
    , finish = 2025-09-03 11:14:13.293046522 UTC
    , thread_cap_info = ("ThreadId 128", 2, False)}
Except "<<timeout>>" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 9.050704337000
  min duration 9.036721800000
  total durat. 18.087426137000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 37
      , num_strict_rules = 11
      , num_top_rules = 11
      , num_weak_rules = 26
      , alphabet_size = 22
      , total_length = 136}
    , self = 149
    , parent = Nothing
    , duration = 9.036721800000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 11:14:02.680790417 UTC
    , finish = 2025-09-03 11:14:11.717512217 UTC
    , thread_cap_info = ("ThreadId 210", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 26
      , alphabet_size = 19
      , total_length = 134}
    , self = 146
    , parent = Nothing
    , duration = 9.050704337000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 11:13:57.998399529 UTC
    , finish = 2025-09-03 11:14:07.049103866 UTC
    , thread_cap_info = ("ThreadId 156", 3, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 8
  max duration 1.463116330000
  min duration 0.442954421000
  total durat. 6.131187137000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 58
      , num_strict_rules = 32
      , num_top_rules = 32
      , num_weak_rules = 26
      , alphabet_size = 28
      , total_length = 206}
    , self = 108
    , parent = Nothing
    , duration = 1.463116330000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:13:58.253903654 UTC
    , finish = 2025-09-03 11:13:59.717019984 UTC
    , thread_cap_info = ("ThreadId 159", 3, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 4.903300101000
  min duration 3.814730807000
  total durat. 8.718030908000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 37
      , num_strict_rules = 11
      , num_top_rules = 11
      , num_weak_rules = 26
      , alphabet_size = 22
      , total_length = 136}
    , self = 147
    , parent = Nothing
    , duration = 3.814730807000
    , status = Fail
    , start = 2025-09-03 11:14:04.323703429 UTC
    , finish = 2025-09-03 11:14:08.138434236 UTC
    , thread_cap_info = ("ThreadId 212", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 26
      , alphabet_size = 19
      , total_length = 134}
    , self = 145
    , parent = Nothing
    , duration = 4.903300101000
    , status = Fail
    , start = 2025-09-03 11:13:59.534882613 UTC
    , finish = 2025-09-03 11:14:04.438182714 UTC
    , thread_cap_info = ("ThreadId 162", 3, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 1.472720426000
  min duration 0.429429562000
  total durat. 5.988767959000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 58
      , num_strict_rules = 32
      , num_top_rules = 32
      , num_weak_rules = 26
      , alphabet_size = 28
      , total_length = 206}
    , self = 106
    , parent = Nothing
    , duration = 1.472720426000
    , status = Success
    , start = 2025-09-03 11:13:58.073670221 UTC
    , finish = 2025-09-03 11:13:59.546390647 UTC
    , thread_cap_info = ("ThreadId 158", 3, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.618167110000
  min duration 1.515576264000
  total durat. 3.133743374000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 26
      , alphabet_size = 19
      , total_length = 134}
    , self = 105
    , parent = Nothing
    , duration = 1.515576264000
    , status = Fail
    , start = 2025-09-03 11:13:57.984156939 UTC
    , finish = 2025-09-03 11:13:59.499733203 UTC
    , thread_cap_info = ("ThreadId 155", 3, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 37
      , num_strict_rules = 11
      , num_top_rules = 11
      , num_weak_rules = 26
      , alphabet_size = 22
      , total_length = 136}
    , self = 144
    , parent = Nothing
    , duration = 1.618167110000
    , status = Fail
    , start = 2025-09-03 11:14:02.68078566 UTC
    , finish = 2025-09-03 11:14:04.29895277 UTC
    , thread_cap_info = ("ThreadId 209", 3, False)}
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 4.487947566000
  min duration 4.487947566000
  total durat. 4.487947566000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 37
      , num_strict_rules = 11
      , num_top_rules = 11
      , num_weak_rules = 26
      , alphabet_size = 22
      , total_length = 136}
    , self = 150
    , parent = Nothing
    , duration = 4.487947566000
    , status = Fail
    , start = 2025-09-03 11:14:08.163926332 UTC
    , finish = 2025-09-03 11:14:12.651873898 UTC
    , thread_cap_info = ("ThreadId 219", 3, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 16.057614164000
  min duration 16.057614164000
  total durat. 16.057614164000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 26
      , num_strict_rules = 26
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 16
      , total_length = 100}
    , self = 148
    , parent = Nothing
    , duration = 16.057614164000
    , status = Fail
    , start = 2025-09-03 11:13:55.60506486 UTC
    , finish = 2025-09-03 11:14:11.662679024 UTC
    , thread_cap_info = ("ThreadId 46", 1, False)}
Success : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.806775960000
  min duration 1.806775960000
  total durat. 1.806775960000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 26
      , num_strict_rules = 26
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 16
      , total_length = 100}
    , self = 152
    , parent = Nothing
    , duration = 1.806775960000
    , status = Success
    , start = 2025-09-03 11:14:11.677277432 UTC
    , finish = 2025-09-03 11:14:13.484053392 UTC
    , thread_cap_info = ("ThreadId 222", 3, False)}
Success : "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize, epsilon_digits = 6}))\n , verbose = False\n , tracing = False}"
  total number 7
  max duration 1.292283176000
  min duration 0.001139350000
  total durat. 2.541658460000
  Info
    { what = "Weight\n  { modus = Pre (Or_Else Count (GLPK   { goal = Optimize, epsilon_digits = 6}))\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 6656
      , num_strict_rules = 6656
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 256
      , total_length = 38912}
    , self = 75
    , parent = Nothing
    , duration = 1.235551295000
    , status = Success
    , start = 2025-09-03 11:13:55.684461761 UTC
    , finish = 2025-09-03 11:13:56.920013056 UTC
    , thread_cap_info = ("ThreadId 54", 2, False)}
  Info
    { what = "Weight\n  { modus = Pre (Or_Else Count (GLPK   { goal = Optimize, epsilon_digits = 6}))\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 5120
      , num_strict_rules = 5120
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 256
      , total_length = 29696}
    , self = 78
    , parent = Nothing
    , duration = 1.292283176000
    , status = Success
    , start = 2025-09-03 11:13:55.808341977 UTC
    , finish = 2025-09-03 11:13:57.100625153 UTC
    , thread_cap_info = ("ThreadId 82", 1, False)}
**************************************************
F                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                , closure = Forward\n , start_strict_only = True\n , max_closure_length
F                = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                = True})" , input_size = Size { num_rules = 26 , num_strict_rules = 26
F                , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 16 , total_length
F                = 100} , self = 148 , parent = Nothing , duration = 16.057614164000 , status
F                = Fail , start = 2025-09-03 11:13:55.60506486 UTC , finish = 2025-09-03
F                11:14:11.662679024 UTC , thread_cap_info = ("ThreadId 46", 1, False)}
F                
| F              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F              = Size { num_rules = 26 , num_strict_rules = 26 , num_top_rules = 0 , num_weak_rules
| F              = 0 , alphabet_size = 16 , total_length = 100} , self = 25 , parent = Nothing
| F              , duration = 0.118615990000 , status = Fail , start = 2025-09-03 11:13:55.61366547
| F              UTC , finish = 2025-09-03 11:13:55.73228146 UTC , thread_cap_info = ("ThreadId
| F              43", 3, False)}
| F              
| | S            Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| | S            , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| | S            , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| | S            = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| | S            , cpf = False}" , input_size = Size { num_rules = 26 , num_strict_rules
| | S            = 26 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 16 , total_length
| | S            = 100} , self = 24 , parent = Nothing , duration = 0.115522263000 , status
| | S            = Success , start = 2025-09-03 11:13:55.613688556 UTC , finish = 2025-09-03
| | S            11:13:55.729210819 UTC , thread_cap_info = ("ThreadId 52", 1, False)}
| | S            
| | | S          Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | S          epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | S          = Size { num_rules = 6656 , num_strict_rules = 6656 , num_top_rules = 0
| | | S          , num_weak_rules = 0 , alphabet_size = 256 , total_length = 38912} , self
| | | S          = 75 , parent = Nothing , duration = 1.235551295000 , status = Success
| | | S          , start = 2025-09-03 11:13:55.684461761 UTC , finish = 2025-09-03 11:13:56.920013056
| | | S          UTC , thread_cap_info = ("ThreadId 54", 2, False)}
| | | S          
| | S |          
| F   |          
| F   |          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F   |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F   |          = False\n , verbose = False}" , input_size = Size { num_rules = 60 , num_strict_rules
| F   |          = 34 , num_top_rules = 34 , num_weak_rules = 26 , alphabet_size = 28 ,
| F   |          total_length = 214} , self = 43 , parent = Nothing , duration = 0.119579403000
| F   |          , status = Fail , start = 2025-09-03 11:13:55.741306493 UTC , finish =
| F   |          2025-09-03 11:13:55.860885896 UTC , thread_cap_info = ("ThreadId 75", 3,
| F   |          False)}
| F   |          
| | F |          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F |          = False\n , verbose = False}" , input_size = Size { num_rules = 60 , num_strict_rules
| | F |          = 34 , num_top_rules = 34 , num_weak_rules = 26 , alphabet_size = 28 ,
| | F |          total_length = 214} , self = 49 , parent = Nothing , duration = 0.214298891000
| | F |          , status = Fail , start = 2025-09-03 11:13:55.741328633 UTC , finish =
| | F |          2025-09-03 11:13:55.955627524 UTC , thread_cap_info = ("ThreadId 76", 3,
| | F |          False)}
| | F |          
| | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 37 , num_strict_rules
| | | | F        = 11 , num_top_rules = 11 , num_weak_rules = 26 , alphabet_size = 19 ,
| | | | F        total_length = 157} , self = 46 , parent = Nothing , duration = 0.124476361000
| | | | F        , status = Fail , start = 2025-09-03 11:13:55.773638795 UTC , finish =
| | | | F        2025-09-03 11:13:55.898115156 UTC , thread_cap_info = ("ThreadId 78", 3,
| | | | F        False)}
| | | | F        
| | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 37 , num_strict_rules
| | | | | F      = 11 , num_top_rules = 11 , num_weak_rules = 26 , alphabet_size = 19 ,
| | | | | F      total_length = 157} , self = 48 , parent = Nothing , duration = 0.181963760000
| | | | | F      , status = Fail , start = 2025-09-03 11:13:55.77365388 UTC , finish = 2025-09-03
| | | | | F      11:13:55.95561764 UTC , thread_cap_info = ("ThreadId 79", 3, False)}
| | | | | F      
| | | | | | S    Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | | S    epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | | S    = Size { num_rules = 5120 , num_strict_rules = 5120 , num_top_rules = 0
| | | | | | S    , num_weak_rules = 0 , alphabet_size = 256 , total_length = 29696} , self
| | | | | | S    = 78 , parent = Nothing , duration = 1.292283176000 , status = Success
| | | | | | S    , start = 2025-09-03 11:13:55.808341977 UTC , finish = 2025-09-03 11:13:57.100625153
| | | | | | S    UTC , thread_cap_info = ("ThreadId 82", 1, False)}
| | | | | | S    
| F | | | | |    
| S | | | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | | | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | | | | |    = 60 , num_strict_rules = 34 , num_top_rules = 34 , num_weak_rules = 26
| S | | | | |    , alphabet_size = 28 , total_length = 214} , self = 62 , parent = Nothing
| S | | | | |    , duration = 0.651424272000 , status = Success , start = 2025-09-03 11:13:55.870144215
| S | | | | |    UTC , finish = 2025-09-03 11:13:56.521568487 UTC , thread_cap_info = ("ThreadId
| S | | | | |    86", 3, False)}
| S | | | | |    
| | | | F | |    
| | | | S | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S | |    = 37 , num_strict_rules = 11 , num_top_rules = 11 , num_weak_rules = 26
| | | | S | |    , alphabet_size = 19 , total_length = 157} , self = 55 , parent = Nothing
| | | | S | |    , duration = 0.429429562000 , status = Success , start = 2025-09-03 11:13:55.934317185
| | | | S | |    UTC , finish = 2025-09-03 11:13:56.363746747 UTC , thread_cap_info = ("ThreadId
| | | | S | |    89", 3, False)}
| | | | S | |    
| | | | | F |    
| | F | |   |    
| | E | |   |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | |   |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | |   |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | |   |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | |   |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | |   |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 37
| | E | |   |    , num_strict_rules = 11 , num_top_rules = 11 , num_weak_rules = 26 , alphabet_size
| | E | |   |    = 19 , total_length = 157} , self = 58 , parent = Nothing , duration =
| | E | |   |    0.442954421000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | E | |   |    11:13:56.013668652 UTC , finish = 2025-09-03 11:13:56.456623073 UTC , thread_cap_info
| | E | |   |    = ("ThreadId 91", 3, False)}
| | E | |   |    
| | | | | F |    Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | | | F |    { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | | | F |    = MSB_First}\n , max_size = Nothing\n , max_height = Just 4\n , initial
| | | | | F |    = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | | | F |    = False}" , input_size = Size { num_rules = 20 , num_strict_rules = 20
| | | | | F |    , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 16 , total_length
| | | | | F |    = 76} , self = 52 , parent = Nothing , duration = 0.160356125000 , status
| | | | | F |    = Fail , start = 2025-09-03 11:13:56.013674162 UTC , finish = 2025-09-03
| | | | | F |    11:13:56.174030287 UTC , thread_cap_info = ("ThreadId 93", 1, False)}
| | | | | F |    
| | | | | | | E  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 60
| | | | | | | E  , num_strict_rules = 34 , num_top_rules = 34 , num_weak_rules = 26 , alphabet_size
| | | | | | | E  = 28 , total_length = 214} , self = 67 , parent = Nothing , duration =
| | | | | | | E  0.712683705000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | | | E  11:13:56.034401769 UTC , finish = 2025-09-03 11:13:56.747085474 UTC , thread_cap_info
| | | | | | | E  = ("ThreadId 92", 3, False)}
| | | | | | | E  
| | | | | F | |  
| | | | | F | |  Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | | | F | |  { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | | | F | |  = MSB_First}\n , max_size = Nothing\n , max_height = Just 5\n , initial
| | | | | F | |  = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | | | F | |  = False}" , input_size = Size { num_rules = 20 , num_strict_rules = 20
| | | | | F | |  , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 16 , total_length
| | | | | F | |  = 76} , self = 57 , parent = Nothing , duration = 0.134709153000 , status
| | | | | F | |  = Fail , start = 2025-09-03 11:13:56.294644366 UTC , finish = 2025-09-03
| | | | | F | |  11:13:56.429353519 UTC , thread_cap_info = ("ThreadId 97", 1, False)}
| | | | | F | |  
| | | | S | | |  
| | | |   F | |  
| | E |     | |  
| S   |     | |  
| F   |     | |  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| F   |     | |  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| F   |     | |  = Size { num_rules = 59 , num_strict_rules = 33 , num_top_rules = 33 ,
| F   |     | |  num_weak_rules = 26 , alphabet_size = 28 , total_length = 210} , self =
| F   |     | |  66 , parent = Nothing , duration = 0.113062129000 , status = Fail , start
| F   |     | |  = 2025-09-03 11:13:56.52159188 UTC , finish = 2025-09-03 11:13:56.634654009
| F   |     | |  UTC , thread_cap_info = ("ThreadId 102", 3, False)}
| F   |     | |  
| | F |     | |  Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | F |     | |  { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | F |     | |  = MSB_First}\n , max_size = Nothing\n , max_height = Just 6\n , initial
| | F |     | |  = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | F |     | |  = False}" , input_size = Size { num_rules = 20 , num_strict_rules = 20
| | F |     | |  , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 16 , total_length
| | F |     | |  = 76} , self = 69 , parent = Nothing , duration = 0.224908652000 , status
| | F |     | |  = Fail , start = 2025-09-03 11:13:56.534282046 UTC , finish = 2025-09-03
| | F |     | |  11:13:56.759190698 UTC , thread_cap_info = ("ThreadId 104", 1, False)}
| | F |     | |  
| | | | F   | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 34 , num_strict_rules
| | | | F   | |  = 8 , num_top_rules = 8 , num_weak_rules = 26 , alphabet_size = 19 , total_length
| | | | F   | |  = 136} , self = 74 , parent = Nothing , duration = 0.204557534000 , status
| | | | F   | |  = Fail , start = 2025-09-03 11:13:56.609105924 UTC , finish = 2025-09-03
| | | | F   | |  11:13:56.813663458 UTC , thread_cap_info = ("ThreadId 105", 3, False)}
| | | | F   | |  
| | | | | F | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F | |  = False\n , verbose = False}" , input_size = Size { num_rules = 34 , num_strict_rules
| | | | | F | |  = 8 , num_top_rules = 8 , num_weak_rules = 26 , alphabet_size = 19 , total_length
| | | | | F | |  = 136} , self = 73 , parent = Nothing , duration = 0.198972924000 , status
| | | | | F | |  = Fail , start = 2025-09-03 11:13:56.613667725 UTC , finish = 2025-09-03
| | | | | F | |  11:13:56.812640649 UTC , thread_cap_info = ("ThreadId 106", 3, False)}
| | | | | F | |  
| F | | | | | |  
|   | | | | | E  
|   F | | | |    
| F   | | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F   | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F   | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 59 , num_strict_rules
| F   | | | |    = 33 , num_top_rules = 33 , num_weak_rules = 26 , alphabet_size = 28 ,
| F   | | | |    total_length = 210} , self = 79 , parent = Nothing , duration = 0.389229894000
| F   | | | |    , status = Fail , start = 2025-09-03 11:13:56.766618597 UTC , finish =
| F   | | | |    2025-09-03 11:13:57.155848491 UTC , thread_cap_info = ("ThreadId 111",
| F   | | | |    3, False)}
| F   | | | |    
| | F | | | |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 59 , num_strict_rules
| | F | | | |    = 33 , num_top_rules = 33 , num_weak_rules = 26 , alphabet_size = 28 ,
| | F | | | |    total_length = 210} , self = 77 , parent = Nothing , duration = 0.270126620000
| | F | | | |    , status = Fail , start = 2025-09-03 11:13:56.767609032 UTC , finish =
| | F | | | |    2025-09-03 11:13:57.037735652 UTC , thread_cap_info = ("ThreadId 112",
| | F | | | |    3, False)}
| | F | | | |    
| | | | | F |    
| | | | F   |    
| | | | S   |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S   |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S   |    = 34 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 26 ,
| | | | S   |    alphabet_size = 19 , total_length = 136} , self = 84 , parent = Nothing
| | | | S   |    , duration = 0.625704073000 , status = Success , start = 2025-09-03 11:13:56.813691467
| | | | S   |    UTC , finish = 2025-09-03 11:13:57.43939554 UTC , thread_cap_info = ("ThreadId
| | | | S   |    114", 3, False)}
| | | | S   |    
| | | | | E |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 34
| | | | | E |    , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 26 , alphabet_size
| | | | | E |    = 19 , total_length = 136} , self = 89 , parent = Nothing , duration =
| | | | | E |    0.900717609000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | E |    11:13:56.815395271 UTC , finish = 2025-09-03 11:13:57.71611288 UTC , thread_cap_info
| | | | | E |    = ("ThreadId 115", 3, False)}
| | | | | E |    
| | | S | | |    
| | F   | | |    
| | S   | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S   | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S   | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S   | | |    = 59 , num_strict_rules = 33 , num_top_rules = 33 , num_weak_rules = 26
| | S   | | |    , alphabet_size = 28 , total_length = 210} , self = 91 , parent = Nothing
| | S   | | |    , duration = 0.687496984000 , status = Success , start = 2025-09-03 11:13:57.073823789
| | S   | | |    UTC , finish = 2025-09-03 11:13:57.761320773 UTC , thread_cap_info = ("ThreadId
| | S   | | |    119", 3, False)}
| | S   | | |    
| | |   | | S    
| | | F | |      Info { what = "Unlabel\n { accept_null_strict = True\n , produce_null_strict
| | | F | |      = False\n , verbose = False\n , tracing = False}" , input_size = Size {
| | | F | |      num_rules = 381 , num_strict_rules = 381 , num_top_rules = 0 , num_weak_rules
| | | F | |      = 0 , alphabet_size = 169 , total_length = 2529} , self = 85 , parent =
| | | F | |      Nothing , duration = 0.342848441000 , status = Fail , start = 2025-09-03
| | | F | |      11:13:57.100653418 UTC , finish = 2025-09-03 11:13:57.443501859 UTC , thread_cap_info
| | | F | |      = ("ThreadId 121", 1, False)}
| | | F | |      
| F | | | |      
| E | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E | | | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 59
| E | | | |      , num_strict_rules = 33 , num_top_rules = 33 , num_weak_rules = 26 , alphabet_size
| E | | | |      = 28 , total_length = 210} , self = 94 , parent = Nothing , duration =
| E | | | |      0.578091593000 , status = Except "AsyncCancelled" , start = 2025-09-03
| E | | | |      11:13:57.216177135 UTC , finish = 2025-09-03 11:13:57.794268728 UTC , thread_cap_info
| E | | | |      = ("ThreadId 122", 3, False)}
| E | | | |      
| | | | | | F    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | F    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | F    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | F    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | F    = Size { num_rules = 452 , num_strict_rules = 452 , num_top_rules = 0 ,
| | | | | | F    num_weak_rules = 0 , alphabet_size = 183 , total_length = 3028} , self
| | | | | | F    = 151 , parent = Nothing , duration = 15.918326768000 , status = Fail ,
| | | | | | F    start = 2025-09-03 11:13:57.374719754 UTC , finish = 2025-09-03 11:14:13.293046522
| | | | | | F    UTC , thread_cap_info = ("ThreadId 128", 2, False)}
| | | | | | F    
| | | | S | |    
| | | F   | |    
| | | E   | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | E   | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E   | |    = False\n , verbose = False}" , input_size = Size { num_rules = 381 , num_strict_rules
| | | E   | |    = 381 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 169 ,
| | | E   | |    total_length = 2529} , self = 115 , parent = Nothing , duration = 3.098314688000
| | | E   | |    , status = Except "AsyncCancelled" , start = 2025-09-03 11:13:57.455357403
| | | E   | |    UTC , finish = 2025-09-03 11:14:00.553672091 UTC , thread_cap_info = ("ThreadId
| | | E   | |    135", 1, False)}
| | | E   | |    
| | | | E | |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | E | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | E | |    = False\n , verbose = False}" , input_size = Size { num_rules = 381 , num_strict_rules
| | | | E | |    = 381 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 169 ,
| | | | E | |    total_length = 2529} , self = 116 , parent = Nothing , duration = 3.120898583000
| | | | E | |    , status = Except "AsyncCancelled" , start = 2025-09-03 11:13:57.455359039
| | | | E | |    UTC , finish = 2025-09-03 11:14:00.576257622 UTC , thread_cap_info = ("ThreadId
| | | | E | |    137", 1, False)}
| | | | E | |    
| | | | | E |    
| | S | |   |    
| E   | |   |    
| F   | |   |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F   | |   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F   | |   |    = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| F   | |   |    = 7 , num_top_rules = 7 , num_weak_rules = 26 , alphabet_size = 19 , total_length
| F   | |   |    = 134} , self = 102 , parent = Nothing , duration = 0.189299416000 , status
| F   | |   |    = Fail , start = 2025-09-03 11:13:57.794810814 UTC , finish = 2025-09-03
| F   | |   |    11:13:57.98411023 UTC , thread_cap_info = ("ThreadId 145", 3, False)}
| F   | |   |    
| | F | |   |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F | |   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | |   |    = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | F | |   |    = 7 , num_top_rules = 7 , num_weak_rules = 26 , alphabet_size = 19 , total_length
| | F | |   |    = 134} , self = 101 , parent = Nothing , duration = 0.170433848000 , status
| | F | |   |    = Fail , start = 2025-09-03 11:13:57.813664849 UTC , finish = 2025-09-03
| | F | |   |    11:13:57.984098697 UTC , thread_cap_info = ("ThreadId 146", 3, False)}
| | F | |   |    
| | | | | F |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F |    = False\n , verbose = False}" , input_size = Size { num_rules = 58 , num_strict_rules
| | | | | F |    = 32 , num_top_rules = 32 , num_weak_rules = 26 , alphabet_size = 28 ,
| | | | | F |    total_length = 206} , self = 104 , parent = Nothing , duration = 0.159239609000
| | | | | F |    , status = Fail , start = 2025-09-03 11:13:57.898820055 UTC , finish =
| | | | | F |    2025-09-03 11:13:58.058059664 UTC , thread_cap_info = ("ThreadId 152",
| | | | | F |    3, False)}
| | | | | F |    
| | F | | | |    
| F   | | | |    
| F   | | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F   | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F   | | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F   | | | |    = 33 , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 26 ,
| F   | | | |    alphabet_size = 19 , total_length = 134} , self = 105 , parent = Nothing
| F   | | | |    , duration = 1.515576264000 , status = Fail , start = 2025-09-03 11:13:57.984156939
| F   | | | |    UTC , finish = 2025-09-03 11:13:59.499733203 UTC , thread_cap_info = ("ThreadId
| F   | | | |    155", 3, False)}
| F   | | | |    
| | E | | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | | | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 33
| | E | | | |    , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 26 , alphabet_size
| | E | | | |    = 19 , total_length = 134} , self = 146 , parent = Nothing , duration =
| | E | | | |    9.050704337000 , status = Except "<<timeout>>" , start = 2025-09-03 11:13:57.998399529
| | E | | | |    UTC , finish = 2025-09-03 11:14:07.049103866 UTC , thread_cap_info = ("ThreadId
| | E | | | |    156", 3, False)}
| | E | | | |    
| | | | | F |    
| | | | | S |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S |    = 58 , num_strict_rules = 32 , num_top_rules = 32 , num_weak_rules = 26
| | | | | S |    , alphabet_size = 28 , total_length = 206} , self = 106 , parent = Nothing
| | | | | S |    , duration = 1.472720426000 , status = Success , start = 2025-09-03 11:13:58.073670221
| | | | | S |    UTC , finish = 2025-09-03 11:13:59.546390647 UTC , thread_cap_info = ("ThreadId
| | | | | S |    158", 3, False)}
| | | | | S |    
| | | | | | | E  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 58
| | | | | | | E  , num_strict_rules = 32 , num_top_rules = 32 , num_weak_rules = 26 , alphabet_size
| | | | | | | E  = 28 , total_length = 206} , self = 108 , parent = Nothing , duration =
| | | | | | | E  1.463116330000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | | | E  11:13:58.253903654 UTC , finish = 2025-09-03 11:13:59.717019984 UTC , thread_cap_info
| | | | | | | E  = ("ThreadId 159", 3, False)}
| | | | | | | E  
| F | | | | | |  
| F | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| F | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 33
| F | | | | | |  , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 26 , alphabet_size
| F | | | | | |  = 19 , total_length = 134} , self = 145 , parent = Nothing , duration =
| F | | | | | |  4.903300101000 , status = Fail , start = 2025-09-03 11:13:59.534882613
| F | | | | | |  UTC , finish = 2025-09-03 11:14:04.438182714 UTC , thread_cap_info = ("ThreadId
| F | | | | | |  162", 3, False)}
| F | | | | | |  
| | | | | S | |  
| | | | |   | E  
| | | | | F |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F |    = False\n , verbose = False}" , input_size = Size { num_rules = 56 , num_strict_rules
| | | | | F |    = 30 , num_top_rules = 30 , num_weak_rules = 26 , alphabet_size = 27 ,
| | | | | F |    total_length = 200} , self = 113 , parent = Nothing , duration = 0.141850405000
| | | | | F |    , status = Fail , start = 2025-09-03 11:13:59.899530938 UTC , finish =
| | | | | F |    2025-09-03 11:14:00.041381343 UTC , thread_cap_info = ("ThreadId 168",
| | | | | F |    3, False)}
| | | | | F |    
| | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 56 , num_strict_rules
| | | | | | | F  = 30 , num_top_rules = 30 , num_weak_rules = 26 , alphabet_size = 27 ,
| | | | | | | F  total_length = 200} , self = 114 , parent = Nothing , duration = 0.290407244000
| | | | | | | F  , status = Fail , start = 2025-09-03 11:13:59.909103281 UTC , finish =
| | | | | | | F  2025-09-03 11:14:00.199510525 UTC , thread_cap_info = ("ThreadId 170",
| | | | | | | F  3, False)}
| | | | | | | F  
| | | | | F | |  
| | | | | S | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S | |  = 56 , num_strict_rules = 30 , num_top_rules = 30 , num_weak_rules = 26
| | | | | S | |  , alphabet_size = 27 , total_length = 200} , self = 117 , parent = Nothing
| | | | | S | |  , duration = 0.782935179000 , status = Success , start = 2025-09-03 11:14:00.069667139
| | | | | S | |  UTC , finish = 2025-09-03 11:14:00.852602318 UTC , thread_cap_info = ("ThreadId
| | | | | S | |  172", 3, False)}
| | | | | S | |  
| | | | | | | F  
| | | | | | | E  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 56
| | | | | | | E  , num_strict_rules = 30 , num_top_rules = 30 , num_weak_rules = 26 , alphabet_size
| | | | | | | E  = 27 , total_length = 200} , self = 119 , parent = Nothing , duration =
| | | | | | | E  0.668638897000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | | | E  11:14:00.21603945 UTC , finish = 2025-09-03 11:14:00.884678347 UTC , thread_cap_info
| | | | | | | E  = ("ThreadId 174", 3, False)}
| | | | | | | E  
| | | E | | | |  
| | |   E | | |  
| | |     S | |  
| | |       | E  
| | | F     |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F     |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F     |    = False\n , verbose = False}" , input_size = Size { num_rules = 45 , num_strict_rules
| | | F     |    = 19 , num_top_rules = 19 , num_weak_rules = 26 , alphabet_size = 24 ,
| | | F     |    total_length = 164} , self = 125 , parent = Nothing , duration = 0.139854528000
| | | F     |    , status = Fail , start = 2025-09-03 11:14:00.896045178 UTC , finish =
| | | F     |    2025-09-03 11:14:01.035899706 UTC , thread_cap_info = ("ThreadId 183",
| | | F     |    3, False)}
| | | F     |    
| | | | F   |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F   |    = False\n , verbose = False}" , input_size = Size { num_rules = 45 , num_strict_rules
| | | | F   |    = 19 , num_top_rules = 19 , num_weak_rules = 26 , alphabet_size = 24 ,
| | | | F   |    total_length = 164} , self = 124 , parent = Nothing , duration = 0.137592437000
| | | | F   |    , status = Fail , start = 2025-09-03 11:14:00.896047677 UTC , finish =
| | | | F   |    2025-09-03 11:14:01.033640114 UTC , thread_cap_info = ("ThreadId 184",
| | | | F   |    3, False)}
| | | | F   |    
| | | | F   |    
| | | F     |    
| | | S     |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S     |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S     |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S     |    = 45 , num_strict_rules = 19 , num_top_rules = 19 , num_weak_rules = 26
| | | S     |    , alphabet_size = 24 , total_length = 164} , self = 126 , parent = Nothing
| | | S     |    , duration = 0.829911314000 , status = Success , start = 2025-09-03 11:14:01.035960539
| | | S     |    UTC , finish = 2025-09-03 11:14:01.865871853 UTC , thread_cap_info = ("ThreadId
| | | S     |    187", 3, False)}
| | | S     |    
| | | | E   |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E   |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E   |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E   |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E   |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E   |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 45
| | | | E   |    , num_strict_rules = 19 , num_top_rules = 19 , num_weak_rules = 26 , alphabet_size
| | | | E   |    = 24 , total_length = 164} , self = 128 , parent = Nothing , duration =
| | | | E   |    0.843058214000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | E   |    11:14:01.053664448 UTC , finish = 2025-09-03 11:14:01.896722662 UTC , thread_cap_info
| | | | E   |    = ("ThreadId 188", 3, False)}
| | | | E   |    
| | | S |   |    
| | |   E   |    
| | | S     |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S     |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S     |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S     |    = 27 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 26 ,
| | | S     |    alphabet_size = 17 , total_length = 104} , self = 135 , parent = Nothing
| | | S     |    , duration = 0.509146149000 , status = Success , start = 2025-09-03 11:14:01.985748305
| | | S     |    UTC , finish = 2025-09-03 11:14:02.494894454 UTC , thread_cap_info = ("ThreadId
| | | S     |    198", 3, False)}
| | | S     |    
| | | | E   |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E   |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E   |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E   |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E   |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E   |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 27
| | | | E   |    , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 26 , alphabet_size
| | | | E   |    = 17 , total_length = 104} , self = 137 , parent = Nothing , duration =
| | | | E   |    0.521926368000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | E   |    11:14:02.031740762 UTC , finish = 2025-09-03 11:14:02.55366713 UTC , thread_cap_info
| | | | E   |    = ("ThreadId 199", 3, False)}
| | | | E   |    
| | | S |   |    
| | |   E   |    
| | | F     |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F     |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F     |    = False\n , verbose = False}" , input_size = Size { num_rules = 37 , num_strict_rules
| | | F     |    = 11 , num_top_rules = 11 , num_weak_rules = 26 , alphabet_size = 22 ,
| | | F     |    total_length = 136} , self = 143 , parent = Nothing , duration = 0.126192538000
| | | F     |    , status = Fail , start = 2025-09-03 11:14:02.55454765 UTC , finish = 2025-09-03
| | | F     |    11:14:02.680740188 UTC , thread_cap_info = ("ThreadId 205", 3, False)}
| | | F     |    
| | | | F   |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F   |    = False\n , verbose = False}" , input_size = Size { num_rules = 37 , num_strict_rules
| | | | F   |    = 11 , num_top_rules = 11 , num_weak_rules = 26 , alphabet_size = 22 ,
| | | | F   |    total_length = 136} , self = 142 , parent = Nothing , duration = 0.124927678000
| | | | F   |    , status = Fail , start = 2025-09-03 11:14:02.554560134 UTC , finish =
| | | | F   |    2025-09-03 11:14:02.679487812 UTC , thread_cap_info = ("ThreadId 206",
| | | | F   |    3, False)}
| | | | F   |    
| | | | F   |    
| | | F     |    
| | | F     |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F     |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F     |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F     |    = 37 , num_strict_rules = 11 , num_top_rules = 11 , num_weak_rules = 26
| | | F     |    , alphabet_size = 22 , total_length = 136} , self = 144 , parent = Nothing
| | | F     |    , duration = 1.618167110000 , status = Fail , start = 2025-09-03 11:14:02.68078566
| | | F     |    UTC , finish = 2025-09-03 11:14:04.29895277 UTC , thread_cap_info = ("ThreadId
| | | F     |    209", 3, False)}
| | | F     |    
| | | | E   |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E   |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E   |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E   |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E   |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E   |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 37
| | | | E   |    , num_strict_rules = 11 , num_top_rules = 11 , num_weak_rules = 26 , alphabet_size
| | | | E   |    = 22 , total_length = 136} , self = 149 , parent = Nothing , duration =
| | | | E   |    9.036721800000 , status = Except "<<timeout>>" , start = 2025-09-03 11:14:02.680790417
| | | | E   |    UTC , finish = 2025-09-03 11:14:11.717512217 UTC , thread_cap_info = ("ThreadId
| | | | E   |    210", 3, False)}
| | | | E   |    
| | | F |   |    
| | | F |   |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | F |   |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | F |   |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | F |   |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F |   |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F |   |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 37
| | | F |   |    , num_strict_rules = 11 , num_top_rules = 11 , num_weak_rules = 26 , alphabet_size
| | | F |   |    = 22 , total_length = 136} , self = 147 , parent = Nothing , duration =
| | | F |   |    3.814730807000 , status = Fail , start = 2025-09-03 11:14:04.323703429
| | | F |   |    UTC , finish = 2025-09-03 11:14:08.138434236 UTC , thread_cap_info = ("ThreadId
| | | F |   |    212", 3, False)}
| | | F |   |    
| F | | |   |    
|   E | |   |    
|     F |   |    
| F     |   |    Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| F     |   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F     |   |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F     |   |    = 37 , num_strict_rules = 11 , num_top_rules = 11 , num_weak_rules = 26
| F     |   |    , alphabet_size = 22 , total_length = 136} , self = 150 , parent = Nothing
| F     |   |    , duration = 4.487947566000 , status = Fail , start = 2025-09-03 11:14:08.163926332
| F     |   |    UTC , finish = 2025-09-03 11:14:12.651873898 UTC , thread_cap_info = ("ThreadId
| F     |   |    219", 3, False)}
| F     |   |    
F |     |   |    
S |     |   |    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
S |     |   |    , closure = Forward\n , start_strict_only = True\n , max_closure_length
S |     |   |    = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
S |     |   |    , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
S |     |   |    max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
S |     |   |    [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
S |     |   |    string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
S |     |   |    , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
S |     |   |    = True})" , input_size = Size { num_rules = 26 , num_strict_rules = 26
S |     |   |    , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 16 , total_length
S |     |   |    = 100} , self = 152 , parent = Nothing , duration = 1.806775960000 , status
S |     |   |    = Success , start = 2025-09-03 11:14:11.677277432 UTC , finish = 2025-09-03
S |     |   |    11:14:13.484053392 UTC , thread_cap_info = ("ThreadId 222", 3, False)}
S |     |   |    
| |     E   |    
| F         |    
|           F    
S                
