last 2813 length 13312
CNF 2813 vars 13312 clauses
last 3385 length 17954
CNF 3385 vars 17954 clauses
last 2489 length 11837
CNF 2489 vars 11837 clauses
last 2863 length 15929
CNF 2863 vars 15929 clauses
last 4369 length 23346
last 3573 length 17030
CNF 4369 vars 23346 clauses
CNF 3573 vars 17030 clauses
**************************************************
summary
**************************************************
SRS with 5 rules on 3 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 45 rules on 9 letters       weights
SRS with 23 rules on 9 letters       mirror
SRS with 23 rules on 9 letters       DP
SRS with 43 strict rules and 23 weak rules on 15 letters       weights
SRS with 2 strict rules and 23 weak rules on 11 letters       EDG
2 sub-proofs
  1 SRS with 1 strict rules and 23 weak rules on 10 letters       Usable
  SRS with 1 rules on 2 letters       weights
  SRS with 0 rules on 0 letters       EDG

  2 SRS with 1 strict rules and 23 weak rules on 10 letters       Usable
  SRS with 1 rules on 2 letters       weights
  SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [a, a] -> [b] {- Input 1 -}
  [b] -> [] {- Input 2 -}
  [b, c] -> [c, c, b, a] {- Input 3 -}
  [c] -> [] {- Input 4 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, a], [a, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[b, a], [a, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[c, a], [a, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[c, a], [a, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[c, a], [a, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[a, a], [a, a], [a, a]] -> [[a, b], [b, a]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, a], [a, a], [a, b]] -> [[a, b], [b, b]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, a], [a, a], [a, c]] -> [[a, b], [b, c]] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, a], [a, a], [a, a]] -> [[b, b], [b, a]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, a], [a, a], [a, b]] -> [[b, b], [b, b]] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, a], [a, a], [a, c]] -> [[b, b], [b, c]] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[c, a], [a, a], [a, a]] -> [[c, b], [b, a]] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[c, a], [a, a], [a, b]] -> [[c, b], [b, b]] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[c, a], [a, a], [a, c]] -> [[c, b], [b, c]] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, b], [b, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b], [b, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b], [b, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, b], [b, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, b], [b, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[b, b], [b, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[c, b], [b, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[c, b], [b, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[c, b], [b, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 2)) -}
  [[a, b], [b, c], [c, a]] -> [ [a, c] , [c, c] , [c, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 3)) -}
  [[a, b], [b, c], [c, b]] -> [ [a, c] , [c, c] , [c, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 3)) -}
  [[a, b], [b, c], [c, c]] -> [ [a, c] , [c, c] , [c, b] , [b, a] , [a, c] ] {- Semlab 0 (Concon 2 (Input 3)) -}
  [[b, b], [b, c], [c, a]] -> [ [b, c] , [c, c] , [c, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 3)) -}
  [[b, b], [b, c], [c, b]] -> [ [b, c] , [c, c] , [c, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 3)) -}
  [[b, b], [b, c], [c, c]] -> [ [b, c] , [c, c] , [c, b] , [b, a] , [a, c] ] {- Semlab 1 (Concon 2 (Input 3)) -}
  [[c, b], [b, c], [c, a]] -> [ [c, c] , [c, c] , [c, b] , [b, a] , [a, a] ] {- Semlab 2 (Concon 0 (Input 3)) -}
  [[c, b], [b, c], [c, b]] -> [ [c, c] , [c, c] , [c, b] , [b, a] , [a, b] ] {- Semlab 2 (Concon 1 (Input 3)) -}
  [[c, b], [b, c], [c, c]] -> [ [c, c] , [c, c] , [c, b] , [b, a] , [a, c] ] {- Semlab 2 (Concon 2 (Input 3)) -}
  [[a, c], [c, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 4)) -}
  [[a, c], [c, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 4)) -}
  [[a, c], [c, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 4)) -}
  [[b, c], [c, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 4)) -}
  [[b, c], [c, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 4)) -}
  [[b, c], [c, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 4)) -}
  [[c, c], [c, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 4)) -}
  [[c, c], [c, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 4)) -}
  [[c, c], [c, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 4)) -}
reason
  ([a, a], 1/1)
  ([a, b], 1/1)
  ([a, c], 1/1)
  ([b, a], 0/1)
  ([b, b], 1/1)
  ([b, c], 1/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
   property Termination
has value Just True
for SRS
  [[b, a], [a, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[b, a], [a, a], [a, b]] -> [[b, b], [b, b]] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, a], [a, a], [a, c]] -> [[b, b], [b, c]] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[a, b], [b, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[c, b], [b, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[a, b], [b, c], [c, a]] -> [ [a, c] , [c, c] , [c, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 3)) -}
  [[a, b], [b, c], [c, b]] -> [ [a, c] , [c, c] , [c, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 3)) -}
  [[a, b], [b, c], [c, c]] -> [ [a, c] , [c, c] , [c, b] , [b, a] , [a, c] ] {- Semlab 0 (Concon 2 (Input 3)) -}
  [[b, b], [b, c], [c, a]] -> [ [b, c] , [c, c] , [c, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 3)) -}
  [[b, b], [b, c], [c, b]] -> [ [b, c] , [c, c] , [c, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 3)) -}
  [[b, b], [b, c], [c, c]] -> [ [b, c] , [c, c] , [c, b] , [b, a] , [a, c] ] {- Semlab 1 (Concon 2 (Input 3)) -}
  [[c, b], [b, c], [c, a]] -> [ [c, c] , [c, c] , [c, b] , [b, a] , [a, a] ] {- Semlab 2 (Concon 0 (Input 3)) -}
  [[c, b], [b, c], [c, b]] -> [ [c, c] , [c, c] , [c, b] , [b, a] , [a, b] ] {- Semlab 2 (Concon 1 (Input 3)) -}
  [[c, b], [b, c], [c, c]] -> [ [c, c] , [c, c] , [c, b] , [b, a] , [a, c] ] {- Semlab 2 (Concon 2 (Input 3)) -}
  [[a, c], [c, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 4)) -}
  [[a, c], [c, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 4)) -}
  [[a, c], [c, c]] -> [[a, c]] {- Semlab 0 (Concon 2 (Input 4)) -}
  [[b, c], [c, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 4)) -}
  [[b, c], [c, c]] -> [[b, c]] {- Semlab 1 (Concon 2 (Input 4)) -}
  [[c, c], [c, a]] -> [[c, a]] {- Semlab 2 (Concon 0 (Input 4)) -}
  [[c, c], [c, b]] -> [[c, b]] {- Semlab 2 (Concon 1 (Input 4)) -}
  [[c, c], [c, c]] -> [[c, c]] {- Semlab 2 (Concon 2 (Input 4)) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [[a, b], [b, a]] -> [[b, b]] {- Mirror (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, c], [b, a]] -> [[b, c]] {- Mirror (Semlab 1 (Concon 2 (Input 0))) -}
  [[a, b], [a, a], [b, a]] -> [ [b, b] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 1 (Input 1))) -}
  [[a, c], [a, a], [b, a]] -> [ [b, c] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 2 (Input 1))) -}
  [[b, a], [a, b]] -> [[a, a]] {- Mirror (Semlab 0 (Concon 0 (Input 2))) -}
  [[b, a], [c, b]] -> [[c, a]] {- Mirror (Semlab 2 (Concon 0 (Input 2))) -}
  [[c, a], [b, c], [a, b]] -> [ [a, a] , [b, a] , [c, b] , [c, c] , [ a , c ] ] {- Mirror (Semlab 0 (Concon 0 (Input 3))) -}
  [[c, b], [b, c], [a, b]] -> [ [a, b] , [b, a] , [c, b] , [c, c] , [ a , c ] ] {- Mirror (Semlab 0 (Concon 1 (Input 3))) -}
  [[c, c], [b, c], [a, b]] -> [ [a, c] , [b, a] , [c, b] , [c, c] , [ a , c ] ] {- Mirror (Semlab 0 (Concon 2 (Input 3))) -}
  [[c, a], [b, c], [b, b]] -> [ [a, a] , [b, a] , [c, b] , [c, c] , [ b , c ] ] {- Mirror (Semlab 1 (Concon 0 (Input 3))) -}
  [[c, b], [b, c], [b, b]] -> [ [a, b] , [b, a] , [c, b] , [c, c] , [ b , c ] ] {- Mirror (Semlab 1 (Concon 1 (Input 3))) -}
  [[c, c], [b, c], [b, b]] -> [ [a, c] , [b, a] , [c, b] , [c, c] , [ b , c ] ] {- Mirror (Semlab 1 (Concon 2 (Input 3))) -}
  [[c, a], [b, c], [c, b]] -> [ [a, a] , [b, a] , [c, b] , [c, c] , [ c , c ] ] {- Mirror (Semlab 2 (Concon 0 (Input 3))) -}
  [[c, b], [b, c], [c, b]] -> [ [a, b] , [b, a] , [c, b] , [c, c] , [ c , c ] ] {- Mirror (Semlab 2 (Concon 1 (Input 3))) -}
  [[c, c], [b, c], [c, b]] -> [ [a, c] , [b, a] , [c, b] , [c, c] , [ c , c ] ] {- Mirror (Semlab 2 (Concon 2 (Input 3))) -}
  [[c, a], [a, c]] -> [[a, a]] {- Mirror (Semlab 0 (Concon 0 (Input 4))) -}
  [[c, b], [a, c]] -> [[a, b]] {- Mirror (Semlab 0 (Concon 1 (Input 4))) -}
  [[c, c], [a, c]] -> [[a, c]] {- Mirror (Semlab 0 (Concon 2 (Input 4))) -}
  [[c, b], [b, c]] -> [[b, b]] {- Mirror (Semlab 1 (Concon 1 (Input 4))) -}
  [[c, c], [b, c]] -> [[b, c]] {- Mirror (Semlab 1 (Concon 2 (Input 4))) -}
  [[c, a], [c, c]] -> [[c, a]] {- Mirror (Semlab 2 (Concon 0 (Input 4))) -}
  [[c, b], [c, c]] -> [[c, b]] {- Mirror (Semlab 2 (Concon 1 (Input 4))) -}
  [[c, c], [c, c]] -> [[c, c]] {- Mirror (Semlab 2 (Concon 2 (Input 4))) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, b], [a, a], [b, a]] ->= [ [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [b, a]] ->= [ [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a], [b, c], [a, b]] ->= [ [a, a] , [b, a] , [c, b] , [c, c] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [b, c], [a, b]] ->= [ [a, b] , [b, a] , [c, b] , [c, c] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [b, c], [a, b]] ->= [ [a, c] , [b, a] , [c, b] , [c, c] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [b, c], [b, b]] ->= [ [a, a] , [b, a] , [c, b] , [c, c] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [b, c], [b, b]] ->= [ [a, b] , [b, a] , [c, b] , [c, c] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [b, c], [b, b]] ->= [ [a, c] , [b, a] , [c, b] , [c, c] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [b, c], [c, b]] ->= [ [a, a] , [b, a] , [c, b] , [c, c] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [b, c], [c, b]] ->= [ [a, b] , [b, a] , [c, b] , [c, c] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [b, c], [c, b]] ->= [ [a, c] , [b, a] , [c, b] , [c, c] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[c, a], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 4)))) -}
  [[c, b], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 4)))) -}
  [[c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 4)))) -}
  [[c, b], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 4)))) -}
  [[c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 4)))) -}
  [[c, a], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 4)))) -}
  [[c, b], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 4)))) -}
  [[c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 4)))) -}
  [[b, a]#, [c, b]] |-> [ [ c , a ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [b, c], [a, b]] |-> [ [ a , c ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, a]#, [b, c], [a, b]] |-> [ [b, a]# , [c, b] , [c, c] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, a]#, [b, c], [a, b]] |-> [ [c, b]# , [c, c] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, a]#, [b, c], [a, b]] |-> [ [c, c]# , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, a]#, [b, c], [b, b]] |-> [ [b, a]# , [c, b] , [c, c] , [ b , c ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, a]#, [b, c], [b, b]] |-> [ [c, b]# , [c, c] , [ b , c ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, a]#, [b, c], [b, b]] |-> [ [c, c]# , [ b , c ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, a]#, [b, c], [c, b]] |-> [ [b, a]# , [c, b] , [c, c] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, a]#, [b, c], [c, b]] |-> [ [c, b]# , [c, c] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, a]#, [b, c], [c, b]] |-> [ [ c , c ]# ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, a]#, [b, c], [c, b]] |-> [ [c, c]# , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, a]#, [c, c]] |-> [ [ c , a ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 4)))) -}
  [[c, b]#, [a, c]] |-> [ [ a , b ]# ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 4)))) -}
  [[c, b]#, [b, c], [a, b]] |-> [ [a, b]# , [b, a] , [c, b] , [c, c] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, b]#, [b, c], [a, b]] |-> [ [ a , c ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, b]#, [b, c], [a, b]] |-> [ [b, a]# , [c, b] , [c, c] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, b]#, [b, c], [a, b]] |-> [ [c, b]# , [c, c] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, b]#, [b, c], [a, b]] |-> [ [c, c]# , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, b]#, [b, c], [b, b]] |-> [ [a, b]# , [b, a] , [c, b] , [c, c] , [ b , c ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, b]#, [b, c], [b, b]] |-> [ [b, a]# , [c, b] , [c, c] , [ b , c ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, b]#, [b, c], [b, b]] |-> [ [c, b]# , [c, c] , [ b , c ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, b]#, [b, c], [b, b]] |-> [ [c, c]# , [ b , c ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, b]#, [b, c], [c, b]] |-> [ [a, b]# , [b, a] , [c, b] , [c, c] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, b]#, [b, c], [c, b]] |-> [ [b, a]# , [c, b] , [c, c] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, b]#, [b, c], [c, b]] |-> [ [c, b]# , [c, c] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, b]#, [b, c], [c, b]] |-> [ [ c , c ]# ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, b]#, [b, c], [c, b]] |-> [ [c, c]# , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, b]#, [c, c]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 4)))) -}
  [[c, c]#, [b, c], [a, b]] |-> [ [ a , c ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, c]#, [b, c], [a, b]] |-> [ [a, c]# , [b, a] , [c, b] , [c, c] , [ a , c ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, c]#, [b, c], [a, b]] |-> [ [b, a]# , [c, b] , [c, c] , [ a , c ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, c]#, [b, c], [a, b]] |-> [ [c, b]# , [c, c] , [ a , c ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, c]#, [b, c], [a, b]] |-> [ [c, c]# , [ a , c ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, c]#, [b, c], [b, b]] |-> [ [a, c]# , [b, a] , [c, b] , [c, c] , [ b , c ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, c]#, [b, c], [b, b]] |-> [ [b, a]# , [c, b] , [c, c] , [ b , c ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, c]#, [b, c], [b, b]] |-> [ [c, b]# , [c, c] , [ b , c ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, c]#, [b, c], [b, b]] |-> [ [c, c]# , [ b , c ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, c]#, [b, c], [c, b]] |-> [ [a, c]# , [b, a] , [c, b] , [c, c] , [ c , c ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[c, c]#, [b, c], [c, b]] |-> [ [b, a]# , [c, b] , [c, c] , [ c , c ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[c, c]#, [b, c], [c, b]] |-> [ [c, b]# , [c, c] , [ c , c ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[c, c]#, [b, c], [c, b]] |-> [ [ c , c ]# ] {- DP (Top 4) (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[c, c]#, [b, c], [c, b]] |-> [ [c, c]# , [ c , c ] ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
reason
  ([a, a], 2/1)
  ([a, b], 2/1)
  ([a, c], 2/1)
  ([b, a], 0/1)
  ([b, b], 2/1)
  ([b, c], 2/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
  ([a, b]#, 0/1)
  ([a, c]#, 0/1)
  ([b, a]#, 3/1)
  ([c, a]#, 2/1)
  ([c, b]#, 2/1)
  ([c, c]#, 2/1)
   property Termination
has value Just True
for SRS
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, b], [a, a], [b, a]] ->= [ [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [b, a]] ->= [ [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a], [b, c], [a, b]] ->= [ [a, a] , [b, a] , [c, b] , [c, c] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [b, c], [a, b]] ->= [ [a, b] , [b, a] , [c, b] , [c, c] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [b, c], [a, b]] ->= [ [a, c] , [b, a] , [c, b] , [c, c] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [b, c], [b, b]] ->= [ [a, a] , [b, a] , [c, b] , [c, c] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [b, c], [b, b]] ->= [ [a, b] , [b, a] , [c, b] , [c, c] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [b, c], [b, b]] ->= [ [a, c] , [b, a] , [c, b] , [c, c] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [b, c], [c, b]] ->= [ [a, a] , [b, a] , [c, b] , [c, c] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [b, c], [c, b]] ->= [ [a, b] , [b, a] , [c, b] , [c, c] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [b, c], [c, b]] ->= [ [a, c] , [b, a] , [c, b] , [c, c] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[c, a], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 4)))) -}
  [[c, b], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 4)))) -}
  [[c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 4)))) -}
  [[c, b], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 4)))) -}
  [[c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 4)))) -}
  [[c, a], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 4)))) -}
  [[c, b], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 4)))) -}
  [[c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 4)))) -}
  [[c, a]#, [c, c]] |-> [ [ c , a ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 4)))) -}
  [[c, b]#, [c, c]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 4)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[c, a]#, [c, c]] |-> [ [ c , a ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 4)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, b], [a, a], [b, a]] ->= [ [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [b, a]] ->= [ [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a], [b, c], [a, b]] ->= [ [a, a] , [b, a] , [c, b] , [c, c] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [b, c], [a, b]] ->= [ [a, b] , [b, a] , [c, b] , [c, c] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [b, c], [a, b]] ->= [ [a, c] , [b, a] , [c, b] , [c, c] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [b, c], [b, b]] ->= [ [a, a] , [b, a] , [c, b] , [c, c] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [b, c], [b, b]] ->= [ [a, b] , [b, a] , [c, b] , [c, c] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [b, c], [b, b]] ->= [ [a, c] , [b, a] , [c, b] , [c, c] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [b, c], [c, b]] ->= [ [a, a] , [b, a] , [c, b] , [c, c] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [b, c], [c, b]] ->= [ [a, b] , [b, a] , [c, b] , [c, c] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [b, c], [c, b]] ->= [ [a, c] , [b, a] , [c, b] , [c, c] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[c, a], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 4)))) -}
  [[c, b], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 4)))) -}
  [[c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 4)))) -}
  [[c, b], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 4)))) -}
  [[c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 4)))) -}
  [[c, a], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 4)))) -}
  [[c, b], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 4)))) -}
  [[c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 4)))) -}
reason
  remove un-usable
    SRS
      [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
      [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
      [[a, b], [a, a], [b, a]] ->= [ [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
      [[a, c], [a, a], [b, a]] ->= [ [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
      [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
      [[c, a], [b, c], [a, b]] ->= [ [a, a] , [b, a] , [c, b] , [c, c] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
      [[c, b], [b, c], [a, b]] ->= [ [a, b] , [b, a] , [c, b] , [c, c] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
      [[c, c], [b, c], [a, b]] ->= [ [a, c] , [b, a] , [c, b] , [c, c] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
      [[c, a], [b, c], [b, b]] ->= [ [a, a] , [b, a] , [c, b] , [c, c] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
      [[c, b], [b, c], [b, b]] ->= [ [a, b] , [b, a] , [c, b] , [c, c] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
      [[c, c], [b, c], [b, b]] ->= [ [a, c] , [b, a] , [c, b] , [c, c] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
      [[c, a], [b, c], [c, b]] ->= [ [a, a] , [b, a] , [c, b] , [c, c] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
      [[c, b], [b, c], [c, b]] ->= [ [a, b] , [b, a] , [c, b] , [c, c] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
      [[c, c], [b, c], [c, b]] ->= [ [a, c] , [b, a] , [c, b] , [c, c] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
      [[c, a], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 4)))) -}
      [[c, b], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 4)))) -}
      [[c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 4)))) -}
      [[c, b], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 4)))) -}
      [[c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 4)))) -}
      [[c, a], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 4)))) -}
      [[c, b], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 4)))) -}
      [[c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 4)))) -}
   property Termination
has value Just True
for SRS
  [[c, a]#, [c, c]] |-> [ [ c , a ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 4)))) -}
reason
  ([c, c], 1/1)
  ([c, a]#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

property Termination
has value Just True
for SRS
  [[c, b]#, [c, c]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 4)))) -}
  [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[a, b], [a, a], [b, a]] ->= [ [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, c], [a, a], [b, a]] ->= [ [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a], [b, c], [a, b]] ->= [ [a, a] , [b, a] , [c, b] , [c, c] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, b], [b, c], [a, b]] ->= [ [a, b] , [b, a] , [c, b] , [c, c] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c], [b, c], [a, b]] ->= [ [a, c] , [b, a] , [c, b] , [c, c] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [b, c], [b, b]] ->= [ [a, a] , [b, a] , [c, b] , [c, c] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b], [b, c], [b, b]] ->= [ [a, b] , [b, a] , [c, b] , [c, c] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c], [b, c], [b, b]] ->= [ [a, c] , [b, a] , [c, b] , [c, c] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [b, c], [c, b]] ->= [ [a, a] , [b, a] , [c, b] , [c, c] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, b], [b, c], [c, b]] ->= [ [a, b] , [b, a] , [c, b] , [c, c] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c], [b, c], [c, b]] ->= [ [a, c] , [b, a] , [c, b] , [c, c] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[c, a], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 4)))) -}
  [[c, b], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 4)))) -}
  [[c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 4)))) -}
  [[c, b], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 4)))) -}
  [[c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 4)))) -}
  [[c, a], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 4)))) -}
  [[c, b], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 4)))) -}
  [[c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 4)))) -}
reason
  remove un-usable
    SRS
      [[a, b], [b, a]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
      [[a, c], [b, a]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
      [[a, b], [a, a], [b, a]] ->= [ [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
      [[a, c], [a, a], [b, a]] ->= [ [b, c] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
      [[b, a], [a, b]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
      [[b, a], [c, b]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
      [[c, a], [b, c], [a, b]] ->= [ [a, a] , [b, a] , [c, b] , [c, c] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
      [[c, b], [b, c], [a, b]] ->= [ [a, b] , [b, a] , [c, b] , [c, c] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
      [[c, c], [b, c], [a, b]] ->= [ [a, c] , [b, a] , [c, b] , [c, c] , [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
      [[c, a], [b, c], [b, b]] ->= [ [a, a] , [b, a] , [c, b] , [c, c] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
      [[c, b], [b, c], [b, b]] ->= [ [a, b] , [b, a] , [c, b] , [c, c] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
      [[c, c], [b, c], [b, b]] ->= [ [a, c] , [b, a] , [c, b] , [c, c] , [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
      [[c, a], [b, c], [c, b]] ->= [ [a, a] , [b, a] , [c, b] , [c, c] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
      [[c, b], [b, c], [c, b]] ->= [ [a, b] , [b, a] , [c, b] , [c, c] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
      [[c, c], [b, c], [c, b]] ->= [ [a, c] , [b, a] , [c, b] , [c, c] , [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
      [[c, a], [a, c]] ->= [ [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 4)))) -}
      [[c, b], [a, c]] ->= [ [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 4)))) -}
      [[c, c], [a, c]] ->= [ [ a , c ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 4)))) -}
      [[c, b], [b, c]] ->= [ [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 4)))) -}
      [[c, c], [b, c]] ->= [ [ b , c ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 4)))) -}
      [[c, a], [c, c]] ->= [ [ c , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 4)))) -}
      [[c, b], [c, c]] ->= [ [ c , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 4)))) -}
      [[c, c], [c, c]] ->= [ [ c , c ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 4)))) -}
   property Termination
has value Just True
for SRS
  [[c, b]#, [c, c]] |-> [ [ c , b ]# ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 4)))) -}
reason
  ([c, c], 1/1)
  ([c, b]#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: (5,3)\TileAllAll{2}(45,9)\Weight\Mirror(23,9)\Deepee(43/23,15)\Weight(2/23,11)\EDG[(1/23,10)\Usable(1,2)\Weight(0,0)\EDG[],(1/23,10)\Usable(1,2)\Weight(0,0)\EDG[]]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************

**************************************************
S        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
S        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
S        = False\n , verbose = False}" , input_size = Size { num_rules = 23 , num_strict_rules
S        = 23 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
S        = 118} , self = 46 , parent = Nothing , duration = 0.156687063000 , status
S        = Success , start = 2025-09-03 11:43:58.447437234 UTC , finish = 2025-09-03
S        11:43:58.604124297 UTC , thread_cap_info = ("ThreadId 65", 3, False)}
S        
| F      Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F      , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F      = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F      False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F      = Size { num_rules = 23 , num_strict_rules = 23 , num_top_rules = 0 , num_weak_rules
| F      = 0 , alphabet_size = 9 , total_length = 118} , self = 61 , parent = Nothing
| F      , duration = 0.485110663000 , status = Fail , start = 2025-09-03 11:43:58.453813971
| F      UTC , finish = 2025-09-03 11:43:58.938924634 UTC , thread_cap_info = ("ThreadId
| F      73", 2, False)}
| F      
| | F    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | F    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | F    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | F    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | F    = Size { num_rules = 23 , num_strict_rules = 23 , num_top_rules = 0 , num_weak_rules
| | F    = 0 , alphabet_size = 9 , total_length = 118} , self = 48 , parent = Nothing
| | F    , duration = 0.224191671000 , status = Fail , start = 2025-09-03 11:43:58.453819305
| | F    UTC , finish = 2025-09-03 11:43:58.678010976 UTC , thread_cap_info = ("ThreadId
| | F    75", 2, False)}
| | F    
| | | E  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | E  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E  = False\n , verbose = False}" , input_size = Size { num_rules = 23 , num_strict_rules
| | | E  = 23 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | E  = 118} , self = 50 , parent = Nothing , duration = 0.241258209000 , status
| | | E  = Except "AsyncCancelled" , start = 2025-09-03 11:43:58.467269916 UTC ,
| | | E  finish = 2025-09-03 11:43:58.708528125 UTC , thread_cap_info = ("ThreadId
| | | E  67", 3, False)}
| | | E  
S | | |  
  | F |  
  |   E  
  F      
S        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
S        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
S        = False\n , verbose = False}" , input_size = Size { num_rules = 28 , num_strict_rules
S        = 5 , num_top_rules = 5 , num_weak_rules = 23 , alphabet_size = 11 , total_length
S        = 148} , self = 89 , parent = Nothing , duration = 0.153761682000 , status
S        = Success , start = 2025-09-03 11:43:58.951651323 UTC , finish = 2025-09-03
S        11:43:59.105413005 UTC , thread_cap_info = ("ThreadId 116", 2, False)}
S        
| F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F      = False\n , verbose = False}" , input_size = Size { num_rules = 28 , num_strict_rules
| F      = 5 , num_top_rules = 5 , num_weak_rules = 23 , alphabet_size = 11 , total_length
| F      = 148} , self = 88 , parent = Nothing , duration = 0.137807682000 , status
| F      = Fail , start = 2025-09-03 11:43:58.967278022 UTC , finish = 2025-09-03
| F      11:43:59.105085704 UTC , thread_cap_info = ("ThreadId 117", 2, False)}
| F      
| F      
S        
