Input TRS:
    1: B(a(x1)) -> BA(x1)
    2: B(b(x1)) -> B(B(x1))
    3: BA(a(x1)) -> BA(A(x1))
    4: BA(b(x1)) -> BAB(x1)
    5: BAB(a(x1)) -> BABA(x1)
    6: BAB(b(x1)) -> BAB(B(x1))
    7: BABA(a(x1)) -> BABAA(x1)
    8: BABA(b(x1)) -> BABA(B(x1))
    9: BABAA(a(x1)) -> BABAAA(x1)
    10: BABAA(b(x1)) -> BABAA(B(x1))
    11: BABAAA(a(x1)) -> BABAAAA(x1)
    12: BABAAA(b(x1)) -> BABAAA(B(x1))
    13: BABAAAA(a(x1)) -> BABAAAAA(x1)
    14: BABAAAA(b(x1)) -> BABAAAA(B(x1))
    15: BABAAAAA(a(x1)) -> BABAAAAA(A(x1))
    16: BABAAAAA(b(x1)) -> BABAAAAAB(x1)
    17: BABAAAAAB(a(x1)) -> BABAAAAABA(x1)
    18: BABAAAAAB(b(x1)) -> BABAAAAAB(B(x1))
    19: BABAAAAABA(x1) -> a(a(b(a(b(a(x1))))))
    20: A(a(x1)) -> AA(x1)
    21: A(b(x1)) -> A(B(x1))
    22: AA(a(x1)) -> AA(A(x1))
    23: AA(b(x1)) -> AAB(x1)
    24: AAB(a(x1)) -> AABA(x1)
    25: AAB(b(x1)) -> AAB(B(x1))
    26: AABA(a(x1)) -> AABA(A(x1))
    27: AABA(b(x1)) -> AABAB(x1)
    28: AABAB(a(x1)) -> AABABA(x1)
    29: AABAB(b(x1)) -> AABAB(B(x1))
    30: AABABA(x1) -> b(a(b(a(a(a(a(a(b(a(x1))))))))))
Number of strict rules: 30
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #B(b(x1)) -> #B(B(x1))
   #2: #B(b(x1)) -> #B(x1)
   #3: #AABAB(b(x1)) -> #AABAB(B(x1))
   #4: #AABAB(b(x1)) -> #B(x1)
   #5: #BAB(b(x1)) -> #BAB(B(x1))
   #6: #BAB(b(x1)) -> #B(x1)
   #7: #BABAAAA(a(x1)) -> #BABAAAAA(x1)
   #8: #BABAA(a(x1)) -> #BABAAA(x1)
   #9: #BABAAA(a(x1)) -> #BABAAAA(x1)
   #10: #AAB(a(x1)) -> #AABA(x1)
   #11: #AA(b(x1)) -> #AAB(x1)
   #12: #BABAAA(b(x1)) -> #BABAAA(B(x1))
   #13: #BABAAA(b(x1)) -> #B(x1)
   #14: #BABAAAA(b(x1)) -> #BABAAAA(B(x1))
   #15: #BABAAAA(b(x1)) -> #B(x1)
   #16: #AAB(b(x1)) -> #AAB(B(x1))
   #17: #AAB(b(x1)) -> #B(x1)
   #18: #A(a(x1)) -> #AA(x1)
   #19: #BABA(a(x1)) -> #BABAA(x1)
   #20: #BABAA(b(x1)) -> #BABAA(B(x1))
   #21: #BABAA(b(x1)) -> #B(x1)
   #22: #BAB(a(x1)) -> #BABA(x1)
   #23: #AABAB(a(x1)) -> #AABABA(x1)
   #24: #AA(a(x1)) -> #AA(A(x1))
   #25: #AA(a(x1)) -> #A(x1)
   #26: #AABA(b(x1)) -> #AABAB(x1)
   #27: #BABAAAAAB(a(x1)) -> #BABAAAAABA(x1)
   #28: #AABA(a(x1)) -> #AABA(A(x1))
   #29: #AABA(a(x1)) -> #A(x1)
   #30: #A(b(x1)) -> #A(B(x1))
   #31: #A(b(x1)) -> #B(x1)
   #32: #BABAAAAA(b(x1)) -> #BABAAAAAB(x1)
   #33: #BA(a(x1)) -> #BA(A(x1))
   #34: #BA(a(x1)) -> #A(x1)
   #35: #B(a(x1)) -> #BA(x1)
   #36: #BABA(b(x1)) -> #BABA(B(x1))
   #37: #BABA(b(x1)) -> #B(x1)
   #38: #BABAAAAA(a(x1)) -> #BABAAAAA(A(x1))
   #39: #BABAAAAA(a(x1)) -> #A(x1)
   #40: #BA(b(x1)) -> #BAB(x1)
   #41: #BABAAAAAB(b(x1)) -> #BABAAAAAB(B(x1))
   #42: #BABAAAAAB(b(x1)) -> #B(x1)
Number of SCCs: 1, DPs: 38, edges: 86
	SCC { #1 #2 #4..22 #24..26 #28..40 #42 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: 0; x1_2
  #BA(x1)	weight: (/ 1 16) + x1_2; 0
BABAAAA(x1)	weight: 0; x1_2
  #AA(x1)	weight: (/ 1 16) + x1_2; 0
#BABAA(x1)	weight: (/ 1 16) + x1_2; 0
#BABAAAA(x1)	weight: (/ 1 16) + x1_2; 0
     b(x1)	weight: (/ 1 8); x1_1 + x1_2
   #B(x1)	weight: (/ 1 16) + x1_2; 0
#BABA(x1)	weight: (/ 1 16) + x1_2; 0
BABAAAAA(x1)	weight: 0; x1_2
#BABAAA(x1)	weight: (/ 1 16) + x1_2; 0
BABAAAAABA(x1)	weight: 0; x1_2
#BABAAAAAB(x1)	weight: x1_1 + x1_2; 0
    AA(x1)	weight: (/ 1 8); x1_2
 AABAB(x1)	weight: (/ 1 8); x1_2
   BAB(x1)	weight: 0; x1_2
#AABAB(x1)	weight: x1_1 + x1_2; 0
     B(x1)	weight: (/ 1 16); x1_2
 #BAB(x1)	weight: (/ 1 16) + x1_2; 0
   AAB(x1)	weight: (/ 1 8); x1_2
#BABAAAAA(x1)	weight: (/ 1 16) + x1_2; 0
#BABAAAAABA(x1)	weight: 0; 0
     A(x1)	weight: (/ 1 8) + x1_1 + x1_2; x1_2
 BABAA(x1)	weight: 0; x1_2
BABAAAAAB(x1)	weight: 0; x1_2
   #A(x1)	weight: (/ 1 16) + x1_2; 0
  AABA(x1)	weight: (/ 1 8); x1_2
#AABA(x1)	weight: (/ 1 16) + x1_2; 0
BABAAA(x1)	weight: 0; x1_2
  BABA(x1)	weight: 0; x1_2
#AABABA(x1)	weight: 0; 0
 #AAB(x1)	weight: (/ 1 16) + x1_1 + x1_2; 0
AABABA(x1)	weight: (/ 1 8); x1_2
    BA(x1)	weight: 0; x1_2
    Usable rules: { 1..30 }
    Removed DPs: #4 #16 #17 #26 #32 #42
Number of SCCs: 1, DPs: 30, edges: 66
	SCC { #1 #2 #5..15 #18..22 #24 #25 #29..31 #33..37 #39 #40 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: x1_2; x1_1
  #BA(x1)	weight: (/ 3 64) + x1_1; 0
BABAAAA(x1)	weight: x1_2; (/ 1 16) + x1_2
  #AA(x1)	weight: x1_1; 0
#BABAA(x1)	weight: (/ 3 64) + x1_2; 0
#BABAAAA(x1)	weight: (/ 1 32) + x1_2; 0
     b(x1)	weight: x1_2; (/ 1 16) + x1_2
   #B(x1)	weight: (/ 3 64) + x1_2; 0
#BABA(x1)	weight: (/ 3 64) + x1_1; 0
BABAAAAA(x1)	weight: x1_1; (/ 1 16) + x1_1
#BABAAA(x1)	weight: (/ 3 64) + x1_1; 0
BABAAAAABA(x1)	weight: x1_1; (/ 1 16) + x1_1
#BABAAAAAB(x1)	weight: 0; 0
    AA(x1)	weight: x1_1; (/ 1 16) + x1_1
 AABAB(x1)	weight: x1_2; (/ 1 16) + x1_2
   BAB(x1)	weight: x1_2; (/ 1 16) + x1_2
#AABAB(x1)	weight: 0; 0
     B(x1)	weight: x1_2; (/ 1 16) + x1_2
 #BAB(x1)	weight: (/ 3 64) + x1_2; 0
   AAB(x1)	weight: x1_2; (/ 1 16) + x1_2
#BABAAAAA(x1)	weight: (/ 1 64) + x1_1; 0
#BABAAAAABA(x1)	weight: 0; 0
     A(x1)	weight: x1_2; (/ 1 16) + x1_2
 BABAA(x1)	weight: x1_2; (/ 1 16) + x1_2
BABAAAAAB(x1)	weight: x1_2; (/ 1 16) + x1_2
   #A(x1)	weight: x1_2; 0
  AABA(x1)	weight: x1_1; (/ 1 16) + x1_1
#AABA(x1)	weight: x1_1; 0
BABAAA(x1)	weight: x1_1; (/ 1 16) + x1_1
  BABA(x1)	weight: x1_1; (/ 1 16) + x1_1
#AABABA(x1)	weight: 0; 0
 #AAB(x1)	weight: x1_2; 0
AABABA(x1)	weight: x1_1; (/ 1 16) + x1_1
    BA(x1)	weight: x1_1; (/ 1 16) + x1_1
    Usable rules: { 1..30 }
    Removed DPs: #2 #6 #7 #9 #15 #21 #31 #34 #39
Number of SCCs: 2, DPs: 19, edges: 30
	SCC { #10 #11 #18 #24 #25 #29 #30 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
