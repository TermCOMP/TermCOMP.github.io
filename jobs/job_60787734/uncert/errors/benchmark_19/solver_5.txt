Input TRS:
    1: A(a(x1)) -> AA(x1)
    2: A(b(x1)) -> A(B(x1))
    3: AA(a(x1)) -> AAA(x1)
    4: AA(b(x1)) -> AA(B(x1))
    5: AAA(a(x1)) -> AAAA(x1)
    6: AAA(b(x1)) -> AAA(B(x1))
    7: AAAA(a(x1)) -> AAAA(A(x1))
    8: AAAA(b(x1)) -> AAAAB(x1)
    9: AAAAB(a(x1)) -> AAAABA(x1)
    10: AAAAB(b(x1)) -> AAAAB(B(x1))
    11: AAAABA(a(x1)) -> AAAABA(A(x1))
    12: AAAABA(b(x1)) -> AAAABAB(x1)
    13: AAAABAB(a(x1)) -> AAAABABA(x1)
    14: AAAABAB(b(x1)) -> AAAABAB(B(x1))
    15: AAAABABA(a(x1)) -> AAAABABA(A(x1))
    16: AAAABABA(b(x1)) -> AAAABABAB(x1)
    17: AAAABABAB(a(x1)) -> AAAABABABA(x1)
    18: AAAABABAB(b(x1)) -> AAAABABAB(B(x1))
    19: AAAABABABA(x1) -> b(a(b(a(a(a(x1))))))
    20: B(a(x1)) -> BA(x1)
    21: B(b(x1)) -> B(B(x1))
    22: BA(a(x1)) -> BA(A(x1))
    23: BA(b(x1)) -> BAB(x1)
    24: BAB(a(x1)) -> BABA(x1)
    25: BAB(b(x1)) -> BAB(B(x1))
    26: BABA(a(x1)) -> BABAA(x1)
    27: BABA(b(x1)) -> BABA(B(x1))
    28: BABAA(a(x1)) -> BABAAA(x1)
    29: BABAA(b(x1)) -> BABAA(B(x1))
    30: BABAAA(x1) -> a(a(a(a(b(a(b(a(b(a(x1))))))))))
Number of strict rules: 30
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #A(b(x1)) -> #A(B(x1))
   #2: #A(b(x1)) -> #B(x1)
   #3: #BABAA(b(x1)) -> #BABAA(B(x1))
   #4: #BABAA(b(x1)) -> #B(x1)
   #5: #AAA(b(x1)) -> #AAA(B(x1))
   #6: #AAA(b(x1)) -> #B(x1)
   #7: #AAAABAB(a(x1)) -> #AAAABABA(x1)
   #8: #AAAAB(a(x1)) -> #AAAABA(x1)
   #9: #AAAABA(a(x1)) -> #AAAABA(A(x1))
   #10: #AAAABA(a(x1)) -> #A(x1)
   #11: #BAB(a(x1)) -> #BABA(x1)
   #12: #BA(b(x1)) -> #BAB(x1)
   #13: #AAAABA(b(x1)) -> #AAAABAB(x1)
   #14: #AAAABAB(b(x1)) -> #AAAABAB(B(x1))
   #15: #AAAABAB(b(x1)) -> #B(x1)
   #16: #BAB(b(x1)) -> #BAB(B(x1))
   #17: #BAB(b(x1)) -> #B(x1)
   #18: #B(a(x1)) -> #BA(x1)
   #19: #AAAA(a(x1)) -> #AAAA(A(x1))
   #20: #AAAA(a(x1)) -> #A(x1)
   #21: #AAAAB(b(x1)) -> #AAAAB(B(x1))
   #22: #AAAAB(b(x1)) -> #B(x1)
   #23: #AAA(a(x1)) -> #AAAA(x1)
   #24: #BABAA(a(x1)) -> #BABAAA(x1)
   #25: #BA(a(x1)) -> #BA(A(x1))
   #26: #BA(a(x1)) -> #A(x1)
   #27: #BABA(b(x1)) -> #BABA(B(x1))
   #28: #BABA(b(x1)) -> #B(x1)
   #29: #AAAABABAB(a(x1)) -> #AAAABABABA(x1)
   #30: #BABA(a(x1)) -> #BABAA(x1)
   #31: #B(b(x1)) -> #B(B(x1))
   #32: #B(b(x1)) -> #B(x1)
   #33: #AAAABABA(b(x1)) -> #AAAABABAB(x1)
   #34: #AA(a(x1)) -> #AAA(x1)
   #35: #A(a(x1)) -> #AA(x1)
   #36: #AAAA(b(x1)) -> #AAAAB(x1)
   #37: #AAAABABA(a(x1)) -> #AAAABABA(A(x1))
   #38: #AAAABABA(a(x1)) -> #A(x1)
   #39: #AA(b(x1)) -> #AA(B(x1))
   #40: #AA(b(x1)) -> #B(x1)
   #41: #AAAABABAB(b(x1)) -> #AAAABABAB(B(x1))
   #42: #AAAABABAB(b(x1)) -> #B(x1)
Number of SCCs: 1, DPs: 38, edges: 86
	SCC { #1 #2 #4..23 #25..28 #30..40 #42 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
#AAAAB(x1)	weight: (/ 1 16) + x1_2; 0
     a(x1)	weight: 0; x1_2
#AAAABABABA(x1)	weight: 0; 0
  #BA(x1)	weight: (/ 1 16) + x1_2; 0
  #AA(x1)	weight: (/ 1 16) + x1_2; 0
#BABAA(x1)	weight: (/ 1 16) + x1_2; 0
 #AAA(x1)	weight: (/ 1 16) + x1_2; 0
     b(x1)	weight: (/ 1 8); x1_1 + x1_2
   #B(x1)	weight: (/ 1 16) + x1_2; 0
#BABA(x1)	weight: (/ 1 16) + x1_2; 0
  AAAA(x1)	weight: (/ 1 8) + x1_2; x1_2
#BABAAA(x1)	weight: 0; 0
#AAAABA(x1)	weight: (/ 1 16) + x1_2; 0
    AA(x1)	weight: (/ 1 8) + x1_2; x1_2
   BAB(x1)	weight: x1_2; x1_2
     B(x1)	weight: x1_2; x1_2
 #BAB(x1)	weight: (/ 1 16) + x1_2; 0
AAAABABAB(x1)	weight: (/ 1 8); x1_2
 AAAAB(x1)	weight: (/ 1 8) + x1_2; x1_2
     A(x1)	weight: (/ 1 8) + x1_2; x1_2
 BABAA(x1)	weight: x1_2; x1_2
   #A(x1)	weight: (/ 1 16) + x1_2; 0
#AAAABAB(x1)	weight: (/ 1 16) + x1_2; 0
AAAABABA(x1)	weight: (/ 1 8) + x1_2; x1_2
BABAAA(x1)	weight: x1_2; x1_2
#AAAABABA(x1)	weight: (/ 1 16) + x1_2; 0
#AAAABABAB(x1)	weight: x1_1 + x1_2; 0
#AAAA(x1)	weight: (/ 1 16) + x1_2; 0
  BABA(x1)	weight: x1_2; x1_2
AAAABA(x1)	weight: (/ 1 8) + x1_2; x1_2
AAAABAB(x1)	weight: (/ 1 8) + x1_2; x1_2
   AAA(x1)	weight: (/ 1 8) + x1_2; x1_2
AAAABABABA(x1)	weight: (/ 1 8); x1_2
    BA(x1)	weight: x1_2; x1_2
    Usable rules: { 1..30 }
    Removed DPs: #33 #42
Number of SCCs: 1, DPs: 35, edges: 79
	SCC { #1 #2 #4..23 #25..28 #30..32 #34..36 #38..40 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
#AAAAB(x1)	weight: (/ 1 16) + x1_1; x1_1
     a(x1)	weight: x1_2; x1_1
#AAAABABABA(x1)	weight: 0; 0
  #BA(x1)	weight: (/ 1 16) + x1_2; x1_2
  #AA(x1)	weight: (/ 1 16) + x1_2; x1_2
#BABAA(x1)	weight: x1_1; x1_1
 #AAA(x1)	weight: (/ 1 16) + x1_1; x1_1
     b(x1)	weight: (/ 1 8) + x1_1; x1_1
   #B(x1)	weight: (/ 1 16) + x1_1; x1_1
#BABA(x1)	weight: (/ 1 16) + x1_2; x1_2
  AAAA(x1)	weight: (/ 1 8) + x1_2; x1_2
#BABAAA(x1)	weight: 0; 0
#AAAABA(x1)	weight: (/ 1 16) + x1_2; x1_2
    AA(x1)	weight: (/ 1 8) + x1_1 + x1_2; x1_2
   BAB(x1)	weight: (/ 1 8) + x1_1; x1_1
     B(x1)	weight: (/ 1 8) + x1_1; x1_1
 #BAB(x1)	weight: (/ 1 16) + x1_1; x1_1
AAAABABAB(x1)	weight: (/ 1 8) + x1_1; x1_1
 AAAAB(x1)	weight: (/ 1 8) + x1_1; x1_1
     A(x1)	weight: (/ 1 8) + x1_1 + x1_2; x1_1
 BABAA(x1)	weight: (/ 1 8) + x1_1; x1_1
   #A(x1)	weight: (/ 1 16) + x1_1; x1_1
#AAAABAB(x1)	weight: (/ 1 16) + x1_1; x1_1
AAAABABA(x1)	weight: (/ 1 8) + x1_2; x1_2
BABAAA(x1)	weight: (/ 1 8) + x1_2; x1_2
#AAAABABA(x1)	weight: (/ 1 16) + x1_2; x1_2
#AAAABABAB(x1)	weight: 0; 0
#AAAA(x1)	weight: (/ 1 16) + x1_2; x1_2
  BABA(x1)	weight: (/ 1 8) + x1_2; x1_2
AAAABA(x1)	weight: (/ 1 8) + x1_2; x1_2
AAAABAB(x1)	weight: (/ 1 8) + x1_1; x1_1
   AAA(x1)	weight: (/ 1 8) + x1_1 + x1_2; x1_1
AAAABABABA(x1)	weight: (/ 1 8) + x1_2; x1_2
    BA(x1)	weight: (/ 1 8) + x1_2; x1_2
    Usable rules: { 1..30 }
    Removed DPs: #2 #4 #6 #15 #17 #22 #30 #32
Number of SCCs: 1, DPs: 26, edges: 44
	SCC { #1 #5 #7..14 #16 #18..21 #23 #25 #26 #28 #31 #34..36 #38..40 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
#AAAAB(x1)	weight: x1_1; 0
     a(x1)	weight: x1_1; 0
#AAAABABABA(x1)	weight: 0; 0
  #BA(x1)	weight: x1_1; 0
  #AA(x1)	weight: x1_1; 0
#BABAA(x1)	weight: 0; 0
 #AAA(x1)	weight: x1_1; 0
     b(x1)	weight: x1_1 + x1_2; (/ 1 8)
   #B(x1)	weight: x1_1; 0
#BABA(x1)	weight: x1_1; 0
  AAAA(x1)	weight: x1_1; (/ 1 8)
#BABAAA(x1)	weight: 0; 0
#AAAABA(x1)	weight: x1_1; 0
    AA(x1)	weight: x1_1; (/ 1 8)
   BAB(x1)	weight: x1_1; 0
     B(x1)	weight: x1_1 + x1_2; 0
 #BAB(x1)	weight: x1_1; 0
AAAABABAB(x1)	weight: x1_1; (/ 1 8)
 AAAAB(x1)	weight: x1_1 + x1_2; (/ 1 8)
     A(x1)	weight: x1_1; (/ 1 8)
 BABAA(x1)	weight: x1_1; 0
   #A(x1)	weight: x1_1; 0
#AAAABAB(x1)	weight: x1_1 + x1_2; 0
AAAABABA(x1)	weight: x1_1; (/ 1 8)
BABAAA(x1)	weight: x1_1; 0
#AAAABABA(x1)	weight: x1_1; 0
#AAAABABAB(x1)	weight: 0; 0
#AAAA(x1)	weight: x1_1; 0
  BABA(x1)	weight: x1_1; 0
AAAABA(x1)	weight: x1_1; (/ 1 8)
AAAABAB(x1)	weight: x1_1 + x1_2; (/ 1 8)
   AAA(x1)	weight: x1_1; (/ 1 8)
AAAABABABA(x1)	weight: x1_1; (/ 1 8)
    BA(x1)	weight: x1_1; 0
    Usable rules: { 1..30 }
    Removed DPs: #14
Number of SCCs: 1, DPs: 25, edges: 42
	SCC { #1 #5 #7..13 #16 #18..21 #23 #25 #26 #28 #31 #34..36 #38..40 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
#AAAAB(x1)	weight: x1_1; 0
     a(x1)	weight: x1_1; 0
#AAAABABABA(x1)	weight: 0; 0
  #BA(x1)	weight: x1_1; 0
  #AA(x1)	weight: x1_1; 0
#BABAA(x1)	weight: 0; 0
 #AAA(x1)	weight: x1_1; 0
     b(x1)	weight: x1_1 + x1_2; (/ 1 8)
   #B(x1)	weight: x1_1; 0
#BABA(x1)	weight: x1_1; 0
  AAAA(x1)	weight: x1_1; (/ 1 8)
#BABAAA(x1)	weight: 0; 0
#AAAABA(x1)	weight: x1_1; 0
    AA(x1)	weight: x1_1; (/ 1 8)
   BAB(x1)	weight: x1_1; 0
     B(x1)	weight: x1_1 + x1_2; 0
 #BAB(x1)	weight: x1_1 + x1_2; 0
AAAABABAB(x1)	weight: x1_1; (/ 1 8)
 AAAAB(x1)	weight: x1_1; (/ 1 8)
     A(x1)	weight: x1_1; (/ 1 8)
 BABAA(x1)	weight: x1_1; 0
   #A(x1)	weight: x1_1; 0
#AAAABAB(x1)	weight: x1_1; 0
AAAABABA(x1)	weight: x1_1; (/ 1 8)
BABAAA(x1)	weight: x1_1; 0
#AAAABABA(x1)	weight: x1_1; 0
#AAAABABAB(x1)	weight: 0; 0
#AAAA(x1)	weight: x1_1; 0
  BABA(x1)	weight: x1_1; 0
AAAABA(x1)	weight: x1_1; (/ 1 8)
AAAABAB(x1)	weight: x1_1; (/ 1 8)
   AAA(x1)	weight: x1_1; (/ 1 8)
AAAABABABA(x1)	weight: x1_1; (/ 1 8)
    BA(x1)	weight: x1_1; 0
    Usable rules: { 1..30 }
    Removed DPs: #16
Number of SCCs: 1, DPs: 24, edges: 40
	SCC { #1 #5 #7..13 #18..21 #23 #25 #26 #28 #31 #34..36 #38..40 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
#AAAAB(x1)	weight: x1_1; x1_1
     a(x1)	weight: x1_2; x1_2
#AAAABABABA(x1)	weight: 0; 0
  #BA(x1)	weight: x1_2; x1_2
  #AA(x1)	weight: x1_2; x1_2
#BABAA(x1)	weight: 0; 0
 #AAA(x1)	weight: x1_2; x1_2
     b(x1)	weight: (/ 1 16) + x1_2; x1_1
   #B(x1)	weight: x1_1; x1_1
#BABA(x1)	weight: x1_2; x1_2
  AAAA(x1)	weight: (/ 1 16) + x1_2; x1_2
#BABAAA(x1)	weight: 0; 0
#AAAABA(x1)	weight: x1_2; x1_2
    AA(x1)	weight: (/ 1 16) + x1_2; x1_2
   BAB(x1)	weight: x1_1; x1_1
     B(x1)	weight: (/ 1 32) + x1_2; x1_1
 #BAB(x1)	weight: x1_1; x1_1
AAAABABAB(x1)	weight: (/ 1 16) + x1_1; x1_1
 AAAAB(x1)	weight: (/ 1 16) + x1_1; x1_1
     A(x1)	weight: (/ 1 16) + x1_2; x1_2
 BABAA(x1)	weight: x1_2; x1_2
   #A(x1)	weight: x1_2; x1_2
#AAAABAB(x1)	weight: x1_1; x1_1
AAAABABA(x1)	weight: (/ 1 16) + x1_2; x1_2
BABAAA(x1)	weight: x1_2; x1_2
#AAAABABA(x1)	weight: x1_2; x1_2
#AAAABABAB(x1)	weight: 0; 0
#AAAA(x1)	weight: x1_2; x1_2
  BABA(x1)	weight: x1_2; x1_2
AAAABA(x1)	weight: (/ 1 16) + x1_2; x1_2
AAAABAB(x1)	weight: (/ 1 16) + x1_1; x1_1
   AAA(x1)	weight: (/ 1 16) + x1_2; x1_2
AAAABABABA(x1)	weight: (/ 1 16) + x1_2; x1_2
    BA(x1)	weight: (/ 1 32) + x1_2; x1_2
    Usable rules: { 1..30 }
    Removed DPs: #21 #31
Number of SCCs: 1, DPs: 22, edges: 35
	SCC { #1 #5 #7..13 #18..20 #23 #25 #26 #28 #34..36 #38..40 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
