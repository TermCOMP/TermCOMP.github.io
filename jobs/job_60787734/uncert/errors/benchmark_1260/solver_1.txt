last 749 length 3232
last 889 length 3794
last 902 length 4018
last 996 length 4457
CNF 749 vars 3232 clauses
CNF 902 vars 4018 clauses
CNF 889 vars 3794 clauses
CNF 996 vars 4457 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1935, clauses: 7097
last 1935 length 7097
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1829, clauses: 6624
last 1829 length 6624
CNF 1829 vars 6624 clauses
CNF 1935 vars 7097 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5962, clauses: 24715
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6006, clauses: 24885
last 5962 length 24715
last 6006 length 24885
CNF 6006 vars 24885 clauses
CNF 5962 vars 24715 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1829, clauses: 6624, status: Unsatisfied, time: 0.144754259s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1935, clauses: 7097, status: Unsatisfied, time: 0.208402453s
last 6600 length 35235
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3595, clauses: 14558
last 3595 length 14558
CNF 6600 vars 35235 clauses
CNF 3595 vars 14558 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3664, clauses: 14812
last 3664 length 14812
CNF 3664 vars 14812 clauses
last 8999 length 55833
CNF 8999 vars 55833 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5962, clauses: 24715, status: Unsatisfied, time: 0.965212353s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6006, clauses: 24885, status: Unsatisfied, time: 0.966520542s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3193, clauses: 12329
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3664, clauses: 14812, status: Unsatisfied, time: 0.7189646s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3024, clauses: 11551
last 3193 length 12329
last 3024 length 11551
CNF 3193 vars 12329 clauses
CNF 3024 vars 11551 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10172, clauses: 42793
last 10172 length 42793
CNF 10172 vars 42793 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3595, clauses: 14558, status: Unsatisfied, time: 1.2266284s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3024, clauses: 11551, status: Unsatisfied, time: 0.349724489s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5653, clauses: 21436
last 5653 length 21436
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3193, clauses: 12329, status: Unsatisfied, time: 0.526638847s
CNF 5653 vars 21436 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10084, clauses: 42452
last 10084 length 42452
CNF 10084 vars 42452 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5954, clauses: 22698
last 5954 length 22698
CNF 5954 vars 22698 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5653, clauses: 21436, status: Unsatisfied, time: 1.877072222s
last 13031 length 71011
last 18271 length 88524
CNF 13031 vars 71011 clauses
[Info] pool sizes (success) 148526 seen 62075 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
**************************************************
summary
**************************************************
SRS with 2 rules on 3 letters       looping derivation
from
  [a, b, a, b, a, b, a, b, b, c]
to
  [b, c, c, b, c, c, b, b, c, c, a, c, c, a, b, a, b, a, b, a, b, b, c, b, b, b]
via 31 steps

**************************************************
proof
**************************************************
property Termination
has value Just False
for SRS
  [a] -> [b] {- Input 0 -}
  [a, b, b, c] -> [a, c, c, a, a, a] {- Input 1 -}
reason
  Nontermination
    Derive   { from = [a, b, a, b, a, b, a, b, b, c], via = [(Step   { rule = 1, position = 6}, [a, b, a, b, a, b, a, c, c, a, a, a]), (Step   { rule = 0, position = 11}, [a, b, a, b, a, b, a, c, c, a, a, b]), (Step   { rule = 0, position = 10}, [a, b, a, b, a, b, a, c, c, a, b, b]), (Step   { rule = 0, position = 9}, [a, b, a, b, a, b, a, c, c, b, b, b]), (Step   { rule = 0, position = 6}, [a, b, a, b, a, b, b, c, c, b, b, b]), (Step   { rule = 1, position = 4}, [a, b, a, b, a, c, c, a, a, a, c, b, b, b]), (Step   { rule = 0, position = 9}, [a, b, a, b, a, c, c, a, a, b, c, b, b, b]), (Step   { rule = 0, position = 8}, [a, b, a, b, a, c, c, a, b, b, c, b, b, b]), (Step   { rule = 0, position = 4}, [a, b, a, b, b, c, c, a, b, b, c, b, b, b]), (Step   { rule = 1, position = 2}, [a, b, a, c, c, a, a, a, c, a, b, b, c, b, b, b]), (Step   { rule = 0, position = 7}, [a, b, a, c, c, a, a, b, c, a, b, b, c, b, b, b]), (Step   { rule = 0, position = 6}, [a, b, a, c, c, a, b, b, c, a, b, b, c, b, b, b]), (Step   { rule = 0, position = 2}, [a, b, b, c, c, a, b, b, c, a, b, b, c, b, b, b]), (Step   { rule = 1, position = 5}, [a, b, b, c, c, a, c, c, a, a, a, a, b, b, c, b, b, b]), (Step   { rule = 0, position = 10}, [a, b, b, c, c, a, c, c, a, a, b, a, b, b, c, b, b, b]), (Step   { rule = 0, position = 8}, [a, b, b, c, c, a, c, c, b, a, b, a, b, b, c, b, b, b]), (Step   { rule = 0, position = 5}, [a, b, b, c, c, b, c, c, b, a, b, a, b, b, c, b, b, b]), (Step   { rule = 1, position = 0}, [a, c, c, a, a, a, c, b, c, c, b, a, b, a, b, b, c, b, b, b]), (Step   { rule = 0, position = 5}, [a, c, c, a, a, b, c, b, c, c, b, a, b, a, b, b, c, b, b, b]), (Step   { rule = 0, position = 4}, [a, c, c, a, b, b, c, b, c, c, b, a, b, a, b, b, c, b, b, b]), (Step   { rule = 0, position = 0}, [b, c, c, a, b, b, c, b, c, c, b, a, b, a, b, b, c, b, b, b]), (Step   { rule = 1, position = 3}, [b, c, c, a, c, c, a, a, a, b, c, c, b, a, b, a, b, b, c, b, b, b]), (Step   { rule = 0, position = 8}, [b, c, c, a, c, c, a, a, b, b, c, c, b, a, b, a, b, b, c, b, b, b]), (Step   { rule = 0, position = 6}, [b, c, c, a, c, c, b, a, b, b, c, c, b, a, b, a, b, b, c, b, b, b]), (Step   { rule = 0, position = 3}, [b, c, c, b, c, c, b, a, b, b, c, c, b, a, b, a, b, b, c, b, b, b]), (Step   { rule = 1, position = 7}, [b, c, c, b, c, c, b, a, c, c, a, a, a, c, b, a, b, a, b, b, c, b, b, b]), (Step   { rule = 0, position = 12}, [b, c, c, b, c, c, b, a, c, c, a, a, b, c, b, a, b, a, b, b, c, b, b, b]), (Step   { rule = 0, position = 11}, [b, c, c, b, c, c, b, a, c, c, a, b, b, c, b, a, b, a, b, b, c, b, b, b]), (Step   { rule = 0, position = 7}, [b, c, c, b, c, c, b, b, c, c, a, b, b, c, b, a, b, a, b, b, c, b, b, b]), (Step   { rule = 1, position = 10}, [b, c, c, b, c, c, b, b, c, c, a, c, c, a, a, a, b, a, b, a, b, b, c, b, b, b]), (Step   { rule = 0, position = 14}, [b, c, c, b, c, c, b, b, c, c, a, c, c, a, b, a, b, a, b, a, b, b, c, b, b, b])], to = [b, c, c, b, c, c, b, b, c, c, a, c, c, a, b, a, b, a, b, a, b, b, c, b, b, b]}

**************************************************
skeleton: (2,3)\Loop{31}[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12484, clauses: 58091
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5954, clauses: 22698, status: Unsatisfied, time: 3.190046712s
**************************************************last 12484 length 58091

statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.027403177000
  min duration 3.027403177000
  total durat. 3.027403177000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 75
      , num_strict_rules = 57
      , num_top_rules = 57
      , num_weak_rules = 18
      , alphabet_size = 15
      , total_length = 654}
    , self = 92
    , parent = Nothing
    , duration = 3.027403177000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 11:22:05.743633078 UTC
    , finish = 2025-09-03 11:22:08.771036255 UTC
    , thread_cap_info = ("ThreadId 138", 1, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 1.062954152000
  min duration 0.028271690000
  total durat. 1.148228137000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 18
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 9
      , total_length = 144}
    , self = 70
    , parent = Nothing
    , duration = 1.062954152000
    , status = Fail
    , start = 2025-09-03 11:22:03.945029017 UTC
    , finish = 2025-09-03 11:22:05.007983169 UTC
    , thread_cap_info = ("ThreadId 87", 0, False)}
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.036681681000
  min duration 3.036681681000
  total durat. 3.036681681000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 75
      , num_strict_rules = 57
      , num_top_rules = 57
      , num_weak_rules = 18
      , alphabet_size = 15
      , total_length = 654}
    , self = 93
    , parent = Nothing
    , duration = 3.036681681000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 11:22:05.744956137 UTC
    , finish = 2025-09-03 11:22:08.781637818 UTC
    , thread_cap_info = ("ThreadId 139", 1, False)}
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 4
  max duration 1.782027069000
  min duration 0.042945076000
  total durat. 2.947815010000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 18
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 9
      , total_length = 144}
    , self = 69
    , parent = Nothing
    , duration = 1.078766543000
    , status = Fail
    , start = 2025-09-03 11:22:03.924952157 UTC
    , finish = 2025-09-03 11:22:05.0037187 UTC
    , thread_cap_info = ("ThreadId 91", 1, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 18
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 9
      , total_length = 144}
    , self = 76
    , parent = Nothing
    , duration = 1.782027069000
    , status = Fail
    , start = 2025-09-03 11:22:03.921783991 UTC
    , finish = 2025-09-03 11:22:05.70381106 UTC
    , thread_cap_info = ("ThreadId 89", 1, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.141496430000
  min duration 1.091817795000
  total durat. 2.233314225000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 30}
    , self = 72
    , parent = Nothing
    , duration = 1.091817795000
    , status = Fail
    , start = 2025-09-03 11:22:04.019997396 UTC
    , finish = 2025-09-03 11:22:05.111815191 UTC
    , thread_cap_info = ("ThreadId 100", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 25}
    , self = 71
    , parent = Nothing
    , duration = 1.141496430000
    , status = Fail
    , start = 2025-09-03 11:22:03.965019816 UTC
    , finish = 2025-09-03 11:22:05.106516246 UTC
    , thread_cap_info = ("ThreadId 98", 2, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.325316493000
  min duration 0.941629263000
  total durat. 2.266945756000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 25}
    , self = 74
    , parent = Nothing
    , duration = 1.325316493000
    , status = Fail
    , start = 2025-09-03 11:22:04.198962147 UTC
    , finish = 2025-09-03 11:22:05.52427864 UTC
    , thread_cap_info = ("ThreadId 107", 2, False)}
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.710909853000
  min duration 0.452764090000
  total durat. 1.163673943000
Fail : "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 2.038453364000
  min duration 2.038453364000
  total durat. 2.038453364000
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 25}
    , self = 91
    , parent = Nothing
    , duration = 2.038453364000
    , status = Fail
    , start = 2025-09-03 11:22:05.585498121 UTC
    , finish = 2025-09-03 11:22:07.623951485 UTC
    , thread_cap_info = ("ThreadId 126", 2, False)}
Success : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 5.050574414000
  min duration 5.050574414000
  total durat. 5.050574414000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 2
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 94
    , parent = Nothing
    , duration = 5.050574414000
    , status = Success
    , start = 2025-09-03 11:22:03.854413347 UTC
    , finish = 2025-09-03 11:22:08.904987761 UTC
    , thread_cap_info = ("ThreadId 53", 3, False)}
**************************************************
S                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
S                  , closure = Backward\n , start_strict_only = True\n , max_closure_length
S                  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
S                  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
S                  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
S                  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
S                  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
S                  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
S                  = True})" , input_size = Size { num_rules = 2 , num_strict_rules = 2 ,
S                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
S                  = 12} , self = 94 , parent = Nothing , duration = 5.050574414000 , status
S                  = Success , start = 2025-09-03 11:22:03.854413347 UTC , finish = 2025-09-03
S                  11:22:08.904987761 UTC , thread_cap_info = ("ThreadId 53", 3, False)}
S                  
| F                Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F                , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F                = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F                False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F                = Size { num_rules = 18 , num_strict_rules = 18 , num_top_rules = 0 , num_weak_rules
| F                = 0 , alphabet_size = 9 , total_length = 144} , self = 76 , parent = Nothing
| F                , duration = 1.782027069000 , status = Fail , start = 2025-09-03 11:22:03.921783991
| F                UTC , finish = 2025-09-03 11:22:05.70381106 UTC , thread_cap_info = ("ThreadId
| F                89", 1, False)}
| F                
| | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F              = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | F              = 18 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F              = 144} , self = 66 , parent = Nothing , duration = 0.483966573000 , status
| | F              = Fail , start = 2025-09-03 11:22:03.924947817 UTC , finish = 2025-09-03
| | F              11:22:04.40891439 UTC , thread_cap_info = ("ThreadId 85", 0, False)}
| | F              
| | | F            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | F            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | F            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | F            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | F            = Size { num_rules = 18 , num_strict_rules = 18 , num_top_rules = 0 , num_weak_rules
| | | F            = 0 , alphabet_size = 9 , total_length = 144} , self = 69 , parent = Nothing
| | | F            , duration = 1.078766543000 , status = Fail , start = 2025-09-03 11:22:03.924952157
| | | F            UTC , finish = 2025-09-03 11:22:05.0037187 UTC , thread_cap_info = ("ThreadId
| | | F            91", 1, False)}
| | | F            
| | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | | F          = 18 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | F          = 144} , self = 70 , parent = Nothing , duration = 1.062954152000 , status
| | | | F          = Fail , start = 2025-09-03 11:22:03.945029017 UTC , finish = 2025-09-03
| | | | F          11:22:05.007983169 UTC , thread_cap_info = ("ThreadId 87", 0, False)}
| | | | F          
| | | | | F        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F        = 4 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | | | | F        = 4 , total_length = 25} , self = 60 , parent = Nothing , duration = 0.244907034000
| | | | | F        , status = Fail , start = 2025-09-03 11:22:03.953239398 UTC , finish =
| | | | | F        2025-09-03 11:22:04.198146432 UTC , thread_cap_info = ("ThreadId 97", 2,
| | | | | F        False)}
| | | | | F        
| | | | | | F      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | F      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | F      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | F      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | F      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | F      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | | F      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | | | | | F      = 4 , total_length = 25} , self = 71 , parent = Nothing , duration = 1.141496430000
| | | | | | F      , status = Fail , start = 2025-09-03 11:22:03.965019816 UTC , finish =
| | | | | | F      2025-09-03 11:22:05.106516246 UTC , thread_cap_info = ("ThreadId 98", 2,
| | | | | | F      False)}
| | | | | | F      
| | | | | | | F    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | F    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | F    = 5 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 2 , alphabet_size
| | | | | | | F    = 4 , total_length = 30} , self = 61 , parent = Nothing , duration = 0.228267257000
| | | | | | | F    , status = Fail , start = 2025-09-03 11:22:04.004959818 UTC , finish =
| | | | | | | F    2025-09-03 11:22:04.233227075 UTC , thread_cap_info = ("ThreadId 99", 2,
| | | | | | | F    False)}
| | | | | | | F    
| | | | | | | | F  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | F  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | F  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | F  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | F  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | F  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | | | | | F  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 2 , alphabet_size
| | | | | | | | F  = 4 , total_length = 30} , self = 72 , parent = Nothing , duration = 1.091817795000
| | | | | | | | F  , status = Fail , start = 2025-09-03 11:22:04.019997396 UTC , finish =
| | | | | | | | F  2025-09-03 11:22:05.111815191 UTC , thread_cap_info = ("ThreadId 100",
| | | | | | | | F  2, False)}
| | | | | | | | F  
| | | | | F | | |  
| | | | | F | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | F | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | F | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | F | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | F | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | | | | F | | |  = 4 , total_length = 25} , self = 74 , parent = Nothing , duration = 1.325316493000
| | | | | F | | |  , status = Fail , start = 2025-09-03 11:22:04.198962147 UTC , finish =
| | | | | F | | |  2025-09-03 11:22:05.52427864 UTC , thread_cap_info = ("ThreadId 107", 2,
| | | | | F | | |  False)}
| | | | | F | | |  
| | | | | | | F |  
| | | | | | | F |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | | | F |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | F |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | F |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | F |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | F |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | | | | F |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 2 , alphabet_size
| | | | | | | F |  = 4 , total_length = 30} , self = 73 , parent = Nothing , duration = 0.941629263000
| | | | | | | F |  , status = Fail , start = 2025-09-03 11:22:04.278602068 UTC , finish =
| | | | | | | F |  2025-09-03 11:22:05.220231331 UTC , thread_cap_info = ("ThreadId 110",
| | | | | | | F |  2, False)}
| | | | | | | F |  
| | F | | | | | |  
| |   F | | | | |  
| |     F | | | |  
| |       | F | |  
| |       |   | F  
| | F     |   |    Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | F     |   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F     |   |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F     |   |    = 4 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | F     |   |    = 4 , total_length = 25} , self = 75 , parent = Nothing , duration = 0.452764090000
| | F     |   |    , status = Fail , start = 2025-09-03 11:22:05.117290604 UTC , finish =
| | F     |   |    2025-09-03 11:22:05.570054694 UTC , thread_cap_info = ("ThreadId 119",
| | F     |   |    2, False)}
| | F     |   |    
| | | F   |   |    Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | F   |   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F   |   |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F   |   |    = 5 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 2 , alphabet_size
| | | F   |   |    = 4 , total_length = 30} , self = 89 , parent = Nothing , duration = 0.710909853000
| | | F   |   |    , status = Fail , start = 2025-09-03 11:22:05.117296486 UTC , finish =
| | | F   |   |    2025-09-03 11:22:05.828206339 UTC , thread_cap_info = ("ThreadId 120",
| | | F   |   |    2, False)}
| | | F   |   |    
| | | |   |   F    
| | | |   F        
| | F |            
| | F |            Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
| | F |            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F |            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F |            = 4 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | F |            = 4 , total_length = 25} , self = 91 , parent = Nothing , duration = 2.038453364000
| | F |            , status = Fail , start = 2025-09-03 11:22:05.585498121 UTC , finish =
| | F |            2025-09-03 11:22:07.623951485 UTC , thread_cap_info = ("ThreadId 126",
| | F |            2, False)}
| | F |            
| F | |            
| E | |            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| E | |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E | |            = False\n , verbose = False}" , input_size = Size { num_rules = 75 , num_strict_rules
| E | |            = 57 , num_top_rules = 57 , num_weak_rules = 18 , alphabet_size = 15 ,
| E | |            total_length = 654} , self = 92 , parent = Nothing , duration = 3.027403177000
| E | |            , status = Except "<<timeout>>" , start = 2025-09-03 11:22:05.743633078
| E | |            UTC , finish = 2025-09-03 11:22:08.771036255 UTC , thread_cap_info = ("ThreadId
| E | |            138", 1, False)}
| E | |            
| | | | E          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | E          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | E          = False\n , verbose = False}" , input_size = Size { num_rules = 75 , num_strict_rules
| | | | E          = 57 , num_top_rules = 57 , num_weak_rules = 18 , alphabet_size = 15 ,
| | | | E          total_length = 654} , self = 93 , parent = Nothing , duration = 3.036681681000
| | | | E          , status = Except "<<timeout>>" , start = 2025-09-03 11:22:05.744956137
| | | | E          UTC , finish = 2025-09-03 11:22:08.781637818 UTC , thread_cap_info = ("ThreadId
| | | | E          139", 1, False)}
| | | | E          
| | | F |          
| | F   |          
| E     |          
|       E          
S                  
