[Info] pool sizes (success) 74 seen 47 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 2 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 2 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 2 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 8834 length 66876
last 10205 length 67827
CNF 8834 vars 66876 clauses
CNF 10205 vars 67827 clauses
last 5543 length 31532
CNF 5543 vars 31532 clauses
[Info] pool sizes (success) 3 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 3 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 2 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 30 seen 17 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 7526 length 39925
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2877, clauses: 11165
last 2877 length 11165
CNF 7526 vars 39925 clauses
CNF 2877 vars 11165 clauses
last 14327 length 78636
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2877, clauses: 11165, status: Unsatisfied, time: 0.663465178s
CNF 14327 vars 78636 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9823, clauses: 41328
last 9823 length 41328
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5923, clauses: 25526
last 5923 length 25526
CNF 9823 vars 41328 clauses
CNF 5923 vars 25526 clauses
**************************************************
summary
**************************************************
SRS with 1 rules on 2 letters       Drop
SRS with 1 rules on 2 letters       Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4878, clauses: 22202
Matchbound last 4878 length 22202
  { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 44 states

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a, b, a, a, a, b, a, a, b] -> [ a , b , a , a , a , b , a , a , b , a , a , a , b ] {- Input 0 -}
reason
  Drop
    property Termination
    has value Just True
    for SRS
      [a, a, b, a, a, a, b] -> [ a , b , a , a , a , b , a , a , b , a ] {- Dropped 0 3 (Input 0) -}
    reason
      Matchbound
        Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 44 states

   property Termination
has value Just True
for SRS
  [a, a, b, a, a, a, b] -> [ a , b , a , a , a , b , a , a , b , a ] {- Dropped 0 3 (Input 0) -}
reason
  Matchbound
    Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 44 states

**************************************************
skeleton: \Drop{0}{3}(1,2)\Rfcmatchbound{1}[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 2.067169808000
  min duration 1.322929601000
  total durat. 3.390099409000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 100}
    , self = 94
    , parent = Nothing
    , duration = 1.322929601000
    , status = Fail
    , start = 2025-09-03 12:13:16.845604402 UTC
    , finish = 2025-09-03 12:13:18.168534003 UTC
    , thread_cap_info = ("ThreadId 104", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 106}
    , self = 114
    , parent = Nothing
    , duration = 2.067169808000
    , status = Fail
    , start = 2025-09-03 12:13:17.543509912 UTC
    , finish = 2025-09-03 12:13:19.61067972 UTC
    , thread_cap_info = ("ThreadId 210", 0, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 2.522118691000
  min duration 0.903709186000
  total durat. 4.879215774000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 100}
    , self = 95
    , parent = Nothing
    , duration = 1.453387897000
    , status = Fail
    , start = 2025-09-03 12:13:16.866951471 UTC
    , finish = 2025-09-03 12:13:18.320339368 UTC
    , thread_cap_info = ("ThreadId 106", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 10
      , num_top_rules = 10
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 290}
    , self = 123
    , parent = Nothing
    , duration = 2.522118691000
    , status = Fail
    , start = 2025-09-03 12:13:17.703674939 UTC
    , finish = 2025-09-03 12:13:20.22579363 UTC
    , thread_cap_info = ("ThreadId 229", 0, False)}
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 14
  max duration 2.167369835000
  min duration 0.008635985000
  total durat. 9.979812972000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 23}
    , self = 111
    , parent = Nothing
    , duration = 1.381483203000
    , status = Fail
    , start = 2025-09-03 12:13:18.056463947 UTC
    , finish = 2025-09-03 12:13:19.43794715 UTC
    , thread_cap_info = ("ThreadId 225", 3, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 101
    , parent = Nothing
    , duration = 1.506987130000
    , status = Fail
    , start = 2025-09-03 12:13:17.203521171 UTC
    , finish = 2025-09-03 12:13:18.710508301 UTC
    , thread_cap_info = ("ThreadId 142", 3, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 23}
    , self = 119
    , parent = Nothing
    , duration = 1.587143510000
    , status = Fail
    , start = 2025-09-03 12:13:18.445125798 UTC
    , finish = 2025-09-03 12:13:20.032269308 UTC
    , thread_cap_info = ("ThreadId 234", 3, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 105
    , parent = Nothing
    , duration = 2.167369835000
    , status = Fail
    , start = 2025-09-03 12:13:16.838110143 UTC
    , finish = 2025-09-03 12:13:19.005479978 UTC
    , thread_cap_info = ("ThreadId 73", 3, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.428959704000
  min duration 1.428959704000
  total durat. 1.428959704000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 106}
    , self = 118
    , parent = Nothing
    , duration = 1.428959704000
    , status = Fail
    , start = 2025-09-03 12:13:18.560383764 UTC
    , finish = 2025-09-03 12:13:19.989343468 UTC
    , thread_cap_info = ("ThreadId 247", 0, False)}
Success : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 3
  max duration 0.740696386000
  min duration 0.002788478000
  total durat. 1.169131383000
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 3
  max duration 3.201044087000
  min duration 2.460483167000
  total durat. 8.821540859000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 17}
    , self = 116
    , parent = Nothing
    , duration = 2.460483167000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:13:17.523528424 UTC
    , finish = 2025-09-03 12:13:19.984011591 UTC
    , thread_cap_info = ("ThreadId 177", 3, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 122
    , parent = Nothing
    , duration = 3.160013605000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:13:17.063509252 UTC
    , finish = 2025-09-03 12:13:20.223522857 UTC
    , thread_cap_info = ("ThreadId 132", 3, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 124
    , parent = Nothing
    , duration = 3.201044087000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:13:17.123578385 UTC
    , finish = 2025-09-03 12:13:20.324622472 UTC
    , thread_cap_info = ("ThreadId 135", 3, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 5
  max duration 3.505149320000
  min duration 1.331170997000
  total durat. 11.720608191000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 23}
    , self = 121
    , parent = Nothing
    , duration = 1.331170997000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:13:18.873070425 UTC
    , finish = 2025-09-03 12:13:20.204241422 UTC
    , thread_cap_info = ("ThreadId 245", 3, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 17}
    , self = 106
    , parent = Nothing
    , duration = 1.580022360000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:13:17.50370151 UTC
    , finish = 2025-09-03 12:13:19.08372387 UTC
    , thread_cap_info = ("ThreadId 176", 3, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 115
    , parent = Nothing
    , duration = 2.644280157000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:13:17.003577539 UTC
    , finish = 2025-09-03 12:13:19.647857696 UTC
    , thread_cap_info = ("ThreadId 131", 3, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 120
    , parent = Nothing
    , duration = 2.659985357000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:13:17.403506549 UTC
    , finish = 2025-09-03 12:13:20.063491906 UTC
    , thread_cap_info = ("ThreadId 175", 3, False)}
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 23}
    , self = 125
    , parent = Nothing
    , duration = 3.505149320000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:13:16.838385953 UTC
    , finish = 2025-09-03 12:13:20.343535273 UTC
    , thread_cap_info = ("ThreadId 96", 0, False)}
Except "AsyncCancelled" : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = False}"
  total number 8
  max duration 2.720472857000
  min duration 1.268281811000
  total durat. 16.928443063000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 17}
    , self = 93
    , parent = Nothing
    , duration = 1.268281811000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:13:16.83686158 UTC
    , finish = 2025-09-03 12:13:18.105143391 UTC
    , thread_cap_info = ("ThreadId 63", 3, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 15}
    , self = 109
    , parent = Nothing
    , duration = 1.861271869000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:13:17.263556075 UTC
    , finish = 2025-09-03 12:13:19.124827944 UTC
    , thread_cap_info = ("ThreadId 156", 3, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 108
    , parent = Nothing
    , duration = 1.865898191000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:13:17.237626636 UTC
    , finish = 2025-09-03 12:13:19.103524827 UTC
    , thread_cap_info = ("ThreadId 144", 3, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 107
    , parent = Nothing
    , duration = 2.120013437000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:13:16.983497898 UTC
    , finish = 2025-09-03 12:13:19.103511335 UTC
    , thread_cap_info = ("ThreadId 116", 3, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 21}
    , self = 104
    , parent = Nothing
    , duration = 2.127337515000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:13:16.836806448 UTC
    , finish = 2025-09-03 12:13:18.964143963 UTC
    , thread_cap_info = ("ThreadId 54", 3, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 17}
    , self = 113
    , parent = Nothing
    , duration = 2.338318447000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:13:17.245333103 UTC
    , finish = 2025-09-03 12:13:19.58365155 UTC
    , thread_cap_info = ("ThreadId 152", 3, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 19}
    , self = 112
    , parent = Nothing
    , duration = 2.626848936000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:13:16.83684584 UTC
    , finish = 2025-09-03 12:13:19.463694776 UTC
    , thread_cap_info = ("ThreadId 62", 3, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 23}
    , self = 117
    , parent = Nothing
    , duration = 2.720472857000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:13:17.263566173 UTC
    , finish = 2025-09-03 12:13:19.98403903 UTC
    , thread_cap_info = ("ThreadId 164", 3, False)}
**************************************************
F                                                    Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                                                    , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                                                    = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                                                    , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                                                    = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
F                                                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F                                                    = 23} , self = 54 , parent = Nothing , duration = 0.269582371000 , status
F                                                    = Fail , start = 2025-09-03 12:13:16.836525923 UTC , finish = 2025-09-03
F                                                    12:13:17.106108294 UTC , thread_cap_info = ("ThreadId 22", 2, False)}
F                                                    
| E                                                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| E                                                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| E                                                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| E                                                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| E                                                  = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| E                                                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| E                                                  = 21} , self = 104 , parent = Nothing , duration = 2.127337515000 , status
| E                                                  = Except "AsyncCancelled" , start = 2025-09-03 12:13:16.836806448 UTC ,
| E                                                  finish = 2025-09-03 12:13:18.964143963 UTC , thread_cap_info = ("ThreadId
| E                                                  54", 3, False)}
| E                                                  
| | E                                                Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | E                                                , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | E                                                = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | E                                                , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | E                                                = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | E                                                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | E                                                = 19} , self = 112 , parent = Nothing , duration = 2.626848936000 , status
| | E                                                = Except "AsyncCancelled" , start = 2025-09-03 12:13:16.83684584 UTC ,
| | E                                                finish = 2025-09-03 12:13:19.463694776 UTC , thread_cap_info = ("ThreadId
| | E                                                62", 3, False)}
| | E                                                
| | | E                                              Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | E                                              , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | E                                              = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | E                                              , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | E                                              = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | E                                              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | E                                              = 17} , self = 93 , parent = Nothing , duration = 1.268281811000 , status
| | | E                                              = Except "AsyncCancelled" , start = 2025-09-03 12:13:16.83686158 UTC ,
| | | E                                              finish = 2025-09-03 12:13:18.105143391 UTC , thread_cap_info = ("ThreadId
| | | E                                              63", 3, False)}
| | | E                                              
| | | | F                                            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | F                                            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | F                                            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | F                                            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | F                                            = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | F                                            = 0 , alphabet_size = 2 , total_length = 21} , self = 105 , parent = Nothing
| | | | F                                            , duration = 2.167369835000 , status = Fail , start = 2025-09-03 12:13:16.838110143
| | | | F                                            UTC , finish = 2025-09-03 12:13:19.005479978 UTC , thread_cap_info = ("ThreadId
| | | | F                                            73", 3, False)}
| | | | F                                            
| | | | | E                                          Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | E                                          , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | E                                          = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | E                                          , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | E                                          max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | E                                          [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | E                                          string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | E                                          , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | E                                          = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | E                                          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | E                                          = 23} , self = 125 , parent = Nothing , duration = 3.505149320000 , status
| | | | | E                                          = Except "AsyncCancelled" , start = 2025-09-03 12:13:16.838385953 UTC ,
| | | | | E                                          finish = 2025-09-03 12:13:20.343535273 UTC , thread_cap_info = ("ThreadId
| | | | | E                                          96", 0, False)}
| | | | | E                                          
| | | | | | F                                        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F                                        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F                                        = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | F                                        = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | | | F                                        = 100} , self = 94 , parent = Nothing , duration = 1.322929601000 , status
| | | | | | F                                        = Fail , start = 2025-09-03 12:13:16.845604402 UTC , finish = 2025-09-03
| | | | | | F                                        12:13:18.168534003 UTC , thread_cap_info = ("ThreadId 104", 1, False)}
| | | | | | F                                        
| | | | | | | F                                      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F                                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F                                      = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | F                                      = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | | | | F                                      = 100} , self = 95 , parent = Nothing , duration = 1.453387897000 , status
| | | | | | | F                                      = Fail , start = 2025-09-03 12:13:16.866951471 UTC , finish = 2025-09-03
| | | | | | | F                                      12:13:18.320339368 UTC , thread_cap_info = ("ThreadId 106", 1, False)}
| | | | | | | F                                      
| | | | | | | | S                                    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | S                                    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | S                                    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | S                                    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | S                                    = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | S                                    = 0 , alphabet_size = 2 , total_length = 17} , self = 47 , parent = Nothing
| | | | | | | | S                                    , duration = 0.110618441000 , status = Success , start = 2025-09-03 12:13:16.866993715
| | | | | | | | S                                    UTC , finish = 2025-09-03 12:13:16.977612156 UTC , thread_cap_info = ("ThreadId
| | | | | | | | S                                    85", 3, False)}
| | | | | | | | S                                    
| | | | | | | | | E                                  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | E                                  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | E                                  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | E                                  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | E                                  = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | E                                  = 0 , alphabet_size = 2 , total_length = 17} , self = 71 , parent = Nothing
| | | | | | | | | E                                  , duration = 0.676502414000 , status = Except "AsyncCancelled" , start
| | | | | | | | | E                                  = 2025-09-03 12:13:16.867020012 UTC , finish = 2025-09-03 12:13:17.543522426
| | | | | | | | | E                                  UTC , thread_cap_info = ("ThreadId 87", 3, False)}
| | | | | | | | | E                                  
| | | | | | | | | | F                                Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | F                                , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | F                                = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | F                                False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | F                                = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | F                                = 0 , alphabet_size = 2 , total_length = 19} , self = 84 , parent = Nothing
| | | | | | | | | | F                                , duration = 0.943976331000 , status = Fail , start = 2025-09-03 12:13:16.943623634
| | | | | | | | | | F                                UTC , finish = 2025-09-03 12:13:17.887599965 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | F                                111", 3, False)}
| | | | | | | | | | F                                
| | | | | | | | S | |                                
| | | | | | | | E | |                                Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | E | |                                , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | E | |                                = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | E | |                                , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | E | |                                = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | E | |                                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | E | |                                = 21} , self = 107 , parent = Nothing , duration = 2.120013437000 , status
| | | | | | | | E | |                                = Except "AsyncCancelled" , start = 2025-09-03 12:13:16.983497898 UTC ,
| | | | | | | | E | |                                finish = 2025-09-03 12:13:19.103511335 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E | |                                116", 3, False)}
| | | | | | | | E | |                                
| | | | | | | | | | | E                              Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | E                              , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | E                              = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | E                              , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | E                              max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | E                              [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | E                              string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | E                              , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | E                              = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | E                              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | E                              = 21} , self = 115 , parent = Nothing , duration = 2.644280157000 , status
| | | | | | | | | | | E                              = Except "AsyncCancelled" , start = 2025-09-03 12:13:17.003577539 UTC ,
| | | | | | | | | | | E                              finish = 2025-09-03 12:13:19.647857696 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | E                              131", 3, False)}
| | | | | | | | | | | E                              
| | | | | | | | | | | | E                            Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | E                            , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | E                            = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | E                            , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | E                            max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | E                            [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | E                            string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | E                            , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | E                            = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | E                            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | E                            = 21} , self = 122 , parent = Nothing , duration = 3.160013605000 , status
| | | | | | | | | | | | E                            = Except "AsyncCancelled" , start = 2025-09-03 12:13:17.063509252 UTC ,
| | | | | | | | | | | | E                            finish = 2025-09-03 12:13:20.223522857 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | E                            132", 3, False)}
| | | | | | | | | | | | E                            
F | | | | | | | | | | | |                            
F | | | | | | | | | | | |                            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
F | | | | | | | | | | | |                            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
F | | | | | | | | | | | |                            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
F | | | | | | | | | | | |                            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
F | | | | | | | | | | | |                            = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
F | | | | | | | | | | | |                            = 0 , alphabet_size = 4 , total_length = 100} , self = 59 , parent = Nothing
F | | | | | | | | | | | |                            , duration = 0.383951041000 , status = Fail , start = 2025-09-03 12:13:17.106157709
F | | | | | | | | | | | |                            UTC , finish = 2025-09-03 12:13:17.49010875 UTC , thread_cap_info = ("ThreadId
F | | | | | | | | | | | |                            171", 0, False)}
F | | | | | | | | | | | |                            
| | | | | | | | | | | | | E                          Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | E                          , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | E                          = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | E                          , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | E                          max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | E                          [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | E                          string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | E                          , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | E                          = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | E                          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | E                          = 19} , self = 124 , parent = Nothing , duration = 3.201044087000 , status
| | | | | | | | | | | | | E                          = Except "AsyncCancelled" , start = 2025-09-03 12:13:17.123578385 UTC ,
| | | | | | | | | | | | | E                          finish = 2025-09-03 12:13:20.324622472 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | E                          135", 3, False)}
| | | | | | | | | | | | | E                          
| | | | | | | | | | | | | | F                        Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | F                        , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | F                        = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | F                        False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | F                        = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | F                        = 0 , alphabet_size = 4 , total_length = 100} , self = 60 , parent = Nothing
| | | | | | | | | | | | | | F                        , duration = 0.402591286000 , status = Fail , start = 2025-09-03 12:13:17.123584798
| | | | | | | | | | | | | | F                        UTC , finish = 2025-09-03 12:13:17.526176084 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | F                        173", 0, False)}
| | | | | | | | | | | | | | F                        
| | | | | | | | | | | | | | | F                      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | F                      , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | F                      = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | | | | | | | | | | | | | F                      Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | | | | | | | | | | | | | F                      8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | | | | | | | | | | | | | F                      = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | | | | | | | | | | | | | F                      ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | | | | | | | | | | | | | F                      1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | F                      = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | F                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | F                      = 21} , self = 73 , parent = Nothing , duration = 0.381613814000 , status
| | | | | | | | | | | | | | | F                      = Fail , start = 2025-09-03 12:13:17.183604747 UTC , finish = 2025-09-03
| | | | | | | | | | | | | | | F                      12:13:17.565218561 UTC , thread_cap_info = ("ThreadId 139", 3, False)}
| | | | | | | | | | | | | | | F                      
| | | | | | | | | | | | | | | | F                    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | | | F                    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | | | F                    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | | | F                    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | | | F                    = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | | | F                    = 0 , alphabet_size = 2 , total_length = 21} , self = 74 , parent = Nothing
| | | | | | | | | | | | | | | | F                    , duration = 0.397887889000 , status = Fail , start = 2025-09-03 12:13:17.183608974
| | | | | | | | | | | | | | | | F                    UTC , finish = 2025-09-03 12:13:17.581496863 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | F                    140", 3, False)}
| | | | | | | | | | | | | | | | F                    
| | | | | | | | | | | | | | | | | F                  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | | | | F                  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | | | | F                  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | | | | F                  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | | | | F                  = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | | | | F                  = 0 , alphabet_size = 2 , total_length = 21} , self = 101 , parent = Nothing
| | | | | | | | | | | | | | | | | F                  , duration = 1.506987130000 , status = Fail , start = 2025-09-03 12:13:17.203521171
| | | | | | | | | | | | | | | | | F                  UTC , finish = 2025-09-03 12:13:18.710508301 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | F                  142", 3, False)}
| | | | | | | | | | | | | | | | | F                  
| | | | | | | | | | | | | | | | | | E                Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | | | | | | | | | | | E                , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | | | | | | | | | | | E                = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | | | | | | | | | | | E                , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | | | | | | | | | | | E                = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | | E                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | | E                = 19} , self = 108 , parent = Nothing , duration = 1.865898191000 , status
| | | | | | | | | | | | | | | | | | E                = Except "AsyncCancelled" , start = 2025-09-03 12:13:17.237626636 UTC ,
| | | | | | | | | | | | | | | | | | E                finish = 2025-09-03 12:13:19.103524827 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | E                144", 3, False)}
| | | | | | | | | | | | | | | | | | E                
| | | | | | | | | | | | | | | | | | | E              Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | | | | | | | | | | | | E              , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | | | | | | | | | | | | E              = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | | | | | | | | | | | | E              , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | | | | | | | | | | | | E              = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | | | E              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | | | E              = 17} , self = 113 , parent = Nothing , duration = 2.338318447000 , status
| | | | | | | | | | | | | | | | | | | E              = Except "AsyncCancelled" , start = 2025-09-03 12:13:17.245333103 UTC ,
| | | | | | | | | | | | | | | | | | | E              finish = 2025-09-03 12:13:19.58365155 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | | E              152", 3, False)}
| | | | | | | | | | | | | | | | | | | E              
| | | | | | | | | | | | | | | | | | | | E            Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | | | | | | | | | | | | | E            , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | | | | | | | | | | | | | E            = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | | | | | | | | | | | | | E            , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | | | | | | | | | | | | | E            = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | | | | E            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | | | | E            = 15} , self = 109 , parent = Nothing , duration = 1.861271869000 , status
| | | | | | | | | | | | | | | | | | | | E            = Except "AsyncCancelled" , start = 2025-09-03 12:13:17.263556075 UTC ,
| | | | | | | | | | | | | | | | | | | | E            finish = 2025-09-03 12:13:19.124827944 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | | | E            156", 3, False)}
| | | | | | | | | | | | | | | | | | | | E            
| | | | | | | | | | | | | | | | | | | | | E          Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | | | | | | | | | | | | | | E          , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | | | | | | | | | | | | | | E          = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | | | | | | | | | | | | | | E          , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | | | | | | | | | | | | | | E          = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | | | | | E          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | | | | | E          = 23} , self = 117 , parent = Nothing , duration = 2.720472857000 , status
| | | | | | | | | | | | | | | | | | | | | E          = Except "AsyncCancelled" , start = 2025-09-03 12:13:17.263566173 UTC ,
| | | | | | | | | | | | | | | | | | | | | E          finish = 2025-09-03 12:13:19.98403903 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | | | | E          164", 3, False)}
| | | | | | | | | | | | | | | | | | | | | E          
| | | | | | | | | | | | | | | | | | | | | | E        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | | | | | | | E        , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | | | | | | | E        = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | | | | | | | E        , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | | | | | | | E        max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | | | | | | | E        [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | | | | | | | E        string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | | | | | | | E        , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | | | | | | | E        = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | | | | | | E        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | | | | | | E        = 19} , self = 120 , parent = Nothing , duration = 2.659985357000 , status
| | | | | | | | | | | | | | | | | | | | | | E        = Except "AsyncCancelled" , start = 2025-09-03 12:13:17.403506549 UTC ,
| | | | | | | | | | | | | | | | | | | | | | E        finish = 2025-09-03 12:13:20.063491906 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | | | | | E        175", 3, False)}
| | | | | | | | | | | | | | | | | | | | | | E        
F | | | | | | | | | | | | | | | | | | | | | |        
E | | | | | | | | | | | | | | | | | | | | | |        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E | | | | | | | | | | | | | | | | | | | | | |        , closure = Forward\n , start_strict_only = True\n , max_closure_length
E | | | | | | | | | | | | | | | | | | | | | |        = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
E | | | | | | | | | | | | | | | | | | | | | |        , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
E | | | | | | | | | | | | | | | | | | | | | |        max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
E | | | | | | | | | | | | | | | | | | | | | |        [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
E | | | | | | | | | | | | | | | | | | | | | |        string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
E | | | | | | | | | | | | | | | | | | | | | |        , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E | | | | | | | | | | | | | | | | | | | | | |        = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
E | | | | | | | | | | | | | | | | | | | | | |        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
E | | | | | | | | | | | | | | | | | | | | | |        = 17} , self = 106 , parent = Nothing , duration = 1.580022360000 , status
E | | | | | | | | | | | | | | | | | | | | | |        = Except "AsyncCancelled" , start = 2025-09-03 12:13:17.50370151 UTC ,
E | | | | | | | | | | | | | | | | | | | | | |        finish = 2025-09-03 12:13:19.08372387 UTC , thread_cap_info = ("ThreadId
E | | | | | | | | | | | | | | | | | | | | | |        176", 3, False)}
E | | | | | | | | | | | | | | | | | | | | | |        
| | | | | | | | | | | | | | | | | | | | | | | E      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | | | | | | | | E      , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | | | | | | | | E      = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | | | | | | | | | | | | | | E      , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | | | | | | | | | | | | | | E      max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | | | | | | | | | | | | | | E      [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | | | | | | | | | | | | | | E      string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | | | | | | | | | | | | | | E      , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | | | | | | | | E      = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | | | | | | | E      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | | | | | | | E      = 17} , self = 116 , parent = Nothing , duration = 2.460483167000 , status
| | | | | | | | | | | | | | | | | | | | | | | E      = Except "AsyncCancelled" , start = 2025-09-03 12:13:17.523528424 UTC ,
| | | | | | | | | | | | | | | | | | | | | | | E      finish = 2025-09-03 12:13:19.984011591 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | | | | | | E      177", 3, False)}
| | | | | | | | | | | | | | | | | | | | | | | E      
| | | | | | | | | | | | | | F | | | | | | | | |      
| | | | | | | | | | | | | | F | | | | | | | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | F | | | | | | | | |      CNF 4878 vars 22202 clauses
[Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | F | | | | | | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | | | | | | | | F | | | | | | | | |      = 3 , num_top_rules = 3 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | | | | | | | | | | | | F | | | | | | | | |      = 106} , self = 114 , parent = Nothing , duration = 2.067169808000 , status
| | | | | | | | | | | | | | F | | | | | | | | |      = Fail , start = 2025-09-03 12:13:17.543509912 UTC , finish = 2025-09-03
| | | | | | | | | | | | | | F | | | | | | | | |      12:13:19.61067972 UTC , thread_cap_info = ("ThreadId 210", 0, False)}
| | | | | | | | | | | | | | F | | | | | | | | |      
| | | | | | | | | E | | | | | | | | | | | | | |      
| | | | | | | | | F | | | | | | | | | | | | | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F | | | | | | | | | | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F | | | | | | | | | | | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | | | F | | | | | | | | | | | | | |      = 3 , num_top_rules = 3 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | | | | | | | F | | | | | | | | | | | | | |      = 106} , self = 100 , parent = Nothing , duration = 0.903709186000 , status
| | | | | | | | | F | | | | | | | | | | | | | |      = Fail , start = 2025-09-03 12:13:17.563662018 UTC , finish = 2025-09-03
| | | | | | | | | F | | | | | | | | | | | | | |      12:13:18.467371204 UTC , thread_cap_info = ("ThreadId 211", 0, False)}
| | | | | | | | | F | | | | | | | | | | | | | |      
| | | | | | | | | | | | | | | F | | | | | | | |      
| | | | | | | | | | | | | | |   F | | | | | | |      
| | | | | | | | | | | | | | | S   | | | | | | |      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | S   | | | | | | |      , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | S   | | | | | | |      = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | | | | | | | | | | | | | S   | | | | | | |      Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | | | | | | | | | | | | | S   | | | | | | |      8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | | | | | | | | | | | | | S   | | | | | | |      = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | | | | | | | | | | | | | S   | | | | | | |      ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | | | | | | | | | | | | | S   | | | | | | |      1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | S   | | | | | | |      = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | S   | | | | | | |      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | S   | | | | | | |      = 15} , self = 89 , parent = Nothing , duration = 0.425646519000 , status
| | | | | | | | | | | | | | | S   | | | | | | |      = Success , start = 2025-09-03 12:13:17.625452381 UTC , finish = 2025-09-03
| | | | | | | | | | | | | | | S   | | | | | | |      12:13:18.0510989 UTC , thread_cap_info = ("ThreadId 190", 3, False)}
| | | | | | | | | | | | | | | S   | | | | | | |      
| | | | | | | | | | | | | | | | F | | | | | | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | | F | | | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | | F | | | | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | | | | | | | | | | | | F | | | | | | |      = 10 , num_top_rules = 10 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | | | | | | | | | | | | | | F | | | | | | |      = 290} , self = 123 , parent = Nothing , duration = 2.522118691000 , status
| | | | | | | | | | | | | | | | F | | | | | | |      = Fail , start = 2025-09-03 12:13:17.703674939 UTC , finish = 2025-09-03
| | | | | | | | | | | | | | | | F | | | | | | |      12:13:20.22579363 UTC , thread_cap_info = ("ThreadId 229", 0, False)}
| | | | | | | | | | | | | | | | F | | | | | | |      
| | | | | | | | | | F | | | | | | | | | | | | |      
| | | | | | | | | | F | | | | | | | | | | | | |      Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | F | | | | | | | | | | | | |      , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | F | | | | | | | | | | | | |      = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | F | | | | | | | | | | | | |      False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | F | | | | | | | | | | | | |      = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | F | | | | | | | | | | | | |      = 0 , alphabet_size = 2 , total_length = 19} , self = 102 , parent = Nothing
| | | | | | | | | | F | | | | | | | | | | | | |      , duration = 0.756771211000 , status = Fail , start = 2025-09-03 12:13:17.983849792
| | | | | | | | | | F | | | | | | | | | | | | |      UTC , finish = 2025-09-03 12:13:18.740621003 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | F | | | | | | | | | | | | |      214", 3, False)}
| | | | | | | | | | F | | | | | | | | | | | | |      
| | | | | | | | | | | | | | | | | | | | | | | | S    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | | | | | | | | | | | | | | S    , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | | | | | | | | | | | | | | S    = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | | | | | | | | | | | | | | | | | | | | | | S    Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | | | | | | | | | | | | | | | | | | | | | | S    8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | | | | | | | | | | | | | | | | | | | | | | S    = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | | | | | | | | | | | | | | | | | | | | | | S    ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | | | | | | | | | | | | | | | | | | | | | | S    1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | | | | | | | | | | | | | | S    = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | | | | | | | | | | | | | | | S    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | | | | | | | | | S    = 17} , self = 103 , parent = Nothing , duration = 0.740696386000 , status
| | | | | | | | | | | | | | | | | | | | | | | | S    = Success , start = 2025-09-03 12:13:18.003527399 UTC , finish = 2025-09-03
| | | | | | | | | | | | | | | | | | | | | | | | S    12:13:18.744223785 UTC , thread_cap_info = ("ThreadId 216", 3, False)}
| | | | | | | | | | | | | | | | | | | | | | | | S    
| | | | | | | | | | | | | | | | | | | | | | | | | F  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | | | | | | | | | | | | F  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | | | | | | | | | | | | F  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | | | | | | | | | | | | F  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | | | | | | | | | | | | F  = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | | | | | | | | | | | | F  = 0 , alphabet_size = 2 , total_length = 17} , self = 98 , parent = Nothing
| | | | | | | | | | | | | | | | | | | | | | | | | F  , duration = 0.410349135000 , status = Fail , start = 2025-09-03 12:13:18.0185867
| | | | | | | | | | | | | | | | | | | | | | | | | F  UTC , finish = 2025-09-03 12:13:18.428935835 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | | | | | | | | F  219", 3, False)}
| | | | | | | | | | | | | | | | | | | | | | | | | F  
| | | | | | | | | | | | | | | S | | | | | | | | | |  
| | | | | | | | | | | | | | | F | | | | | | | | | |  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | | | | | | F | | | | | | | | | |  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | | | | | | F | | | | | | | | | |  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | | | | | | F | | | | | | | | | |  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | | | | | | F | | | | | | | | | |  = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | | F | | | | | | | | | |  = 0 , alphabet_size = 2 , total_length = 23} , self = 111 , parent = Nothing
| | | | | | | | | | | | | | | F | | | | | | | | | |  , duration = 1.381483203000 , status = Fail , start = 2025-09-03 12:13:18.056463947
| | | | | | | | | | | | | | | F | | | | | | | | | |  UTC , finish = 2025-09-03 12:13:19.43794715 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | F | | | | | | | | | |  225", 3, False)}
| | | | | | | | | | | | | | | F | | | | | | | | | |  
| | | E | | | | | | | | | | | | | | | | | | | | | |  
| | |   | | F | | | | | | | | | | | | | | | | | | |  
| | |   | |   F | | | | | | | | | | | | | | | | | |  
| | | S | |     | | | | | | | | | | | | | | | | | |  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | S | |     | | | | | | | | | | | | | | | | | |  , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | S | |     | | | | | | | | | | | | | | | | | |  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | S | |     | | | | | | | | | | | | | | | | | |  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | S | |     | | | | | | | | | | | | | | | | | |  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | S | |     | | | | | | | | | | | | | | | | | |  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | S | |     | | | | | | | | | | | | | | | | | |  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | S | |     | | | | | | | | | | | | | | | | | |  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | S | |     | | | | | | | | | | | | | | | | | |  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | S | |     | | | | | | | | | | | | | | | | | |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | S | |     | | | | | | | | | | | | | | | | | |  = 21} , self = 110 , parent = Nothing , duration = 0.821468355000 , status
| | | S | |     | | | | | | | | | | | | | | | | | |  = Success , start = 2025-09-03 12:13:18.364498213 UTC , finish = 2025-09-03
| | | S | |     | | | | | | | | | | | | | | | | | |  12:13:19.185966568 UTC , thread_cap_info = ("ThreadId 230", 3, False)}
| | | S | |     | | | | | | | | | | | | | | | | | |  
| | | | | |     | | | | | | | | | | | | | | | | | F  
| | | | | | F   | | | | | | | | | | | | | | | | |    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | F   | | | | | | | | | | | | | | | | |    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | F   | | | | | | | | | | | | | | | | |    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | F   | | | | | | | | | | | | | | | | |    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | F   | | | | | | | | | | | | | | | | |    = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | F   | | | | | | | | | | | | | | | | |    = 0 , alphabet_size = 2 , total_length = 23} , self = 119 , parent = Nothing
| | | | | | F   | | | | | | | | | | | | | | | | |    , duration = 1.587143510000 , status = Fail , start = 2025-09-03 12:13:18.445125798
| | | | | | F   | | | | | | | | | | | | | | | | |    UTC , finish = 2025-09-03 12:13:20.032269308 UTC , thread_cap_info = ("ThreadId
| | | | | | F   | | | | | | | | | | | | | | | | |    234", 3, False)}
| | | | | | F   | | | | | | | | | | | | | | | | |    
| | | | | | |   | F | | | | | | | | | | | | | | |    
| | | | | | | F |   | | | | | | | | | | | | | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | F |   | | | | | | | | | | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | F |   | | | | | | | | | | | | | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | F |   | | | | | | | | | | | | | | |    = 5 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 2 , alphabet_size
| | | | | | | F |   | | | | | | | | | | | | | | |    = 4 , total_length = 106} , self = 118 , parent = Nothing , duration =
| | | | | | | F |   | | | | | | | | | | | | | | |    1.428959704000 , status = Fail , start = 2025-09-03 12:13:18.560383764
| | | | | | | F |   | | | | | | | | | | | | | | |    UTC , finish = 2025-09-03 12:13:19.989343468 UTC , thread_cap_info = ("ThreadId
| | | | | | | F |   | | | | | | | | | | | | | | |    247", 0, False)}
| | | | | | | F |   | | | | | | | | | | | | | | |    
| | | | | | | | |   | | | | | | | F | | | | | | |    
| | | | | | | | |   F | | | | | |   | | | | | | |    
| | | | | | | | |     | | | | | |   | | | | | | S    
| | | | | | | | | E   | | | | | |   | | | | | |      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | E   | | | | | |   | | | | | |      , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | E   | | | | | |   | | | | | |      = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | E   | | | | | |   | | | | | |      , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | E   | | | | | |   | | | | | |      max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | E   | | | | | |   | | | | | |      [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | E   | | | | | |   | | | | | |      string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | E   | | | | | |   | | | | | |      , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | E   | | | | | |   | | | | | |      = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | E   | | | | | |   | | | | | |      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | E   | | | | | |   | | | | | |      = 23} , self = 121 , parent = Nothing , duration = 1.331170997000 , status
| | | | | | | | | E   | | | | | |   | | | | | |      = Except "AsyncCancelled" , start = 2025-09-03 12:13:18.873070425 UTC ,
| | | | | | | | | E   | | | | | |   | | | | | |      finish = 2025-09-03 12:13:20.204241422 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | E   | | | | | |   | | | | | |      245", 3, False)}
| | | | | | | | | E   | | | | | |   | | | | | |      
| E | | | | | | | |   | | | | | |   | | | | | |      
|   | | F | | | | |   | | | | | |   | | | | | |      
E   | |   | | | | |   | | | | | |   | | | | | |      
    | |   | | | E |   | | | | | |   | | | | | |      
    | |   | | |   |   | | | | | |   E | | | | |      
    | |   | | |   |   | | | | | |     | E | | |      
    | S   | | |   |   | | | | | |     |   | | |      
    |     | | |   |   | | | | F |     |   | | |      
    E     | | |   |   | | | |   |     |   | | |      
          | | |   |   | | | |   |     E   | | |      
          | | |   |   | | | F   |         | | |      
          | | |   |   E | |     |         | | |      
          | | |   |     | |     |         | | E      
          | | |   |     | |     |         E |        
          | | F   |     | |     |           |        
          | F     |     | |     |           |        
          |       |     | |     |           E        
          |       E     | |     |                    
          |             E |     |                    
          |               |     F                    
          |               E                          
          E                                          
