last 4214 length 18947
last 4249 length 20876
CNF 4214 vars 18947 clauses
CNF 4249 vars 20876 clauses
last 753 length 3045
CNF 753 vars 3045 clauses
last 673 length 2862
CNF 673 vars 2862 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2202, clauses: 8078
last 2202 length 8078
CNF 2202 vars 8078 clauses
last 593 length 2429
last 600 length 2433
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2202, clauses: 8078, status: Unsatisfied, time: 0.088108223s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6722, clauses: 27895
CNF 593 vars 2429 clauses
CNF 600 vars 2433 clauses
last 6722 length 27895
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4214, clauses: 17034
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1982, clauses: 7131
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6382, clauses: 26473
last 4214 length 17034
CNF 6722 vars 27895 clauses
last 1982 length 7131
last 6382 length 26473
CNF 4214 vars 17034 clauses
CNF 1982 vars 7131 clauses
CNF 6382 vars 26473 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1982, clauses: 7131, status: Unsatisfied, time: 0.464586677s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4214, clauses: 17034, status: Unsatisfied, time: 0.582237329s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3965, clauses: 16038
last 3965 length 16038
CNF 3965 vars 16038 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3605, clauses: 13981
last 3605 length 13981
CNF 3605 vars 13981 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6382, clauses: 26473, status: Unsatisfied, time: 0.606990806s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3605, clauses: 13981, status: Unsatisfied, time: 0.264054517s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3965, clauses: 16038, status: Unsatisfied, time: 0.316879062s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3252, clauses: 12251
last 3252 length 12251
CNF 3252 vars 12251 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6722, clauses: 27895, status: Unsatisfied, time: 1.44202827s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3252, clauses: 12251, status: Unsatisfied, time: 0.2254968s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6724, clauses: 25738
last 6724 length 25738
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11185, clauses: 47219
last 11185 length 47219
CNF 6724 vars 25738 clauses
CNF 11185 vars 47219 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11639, clauses: 49063
last 11639 length 49063
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6073, clauses: 22656
last 6073 length 22656
CNF 11639 vars 49063 clauses
CNF 6073 vars 22656 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6724, clauses: 25738, status: Unsatisfied, time: 0.737335115s
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14184, clauses: 65935
last 14184 length 65935
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6073, clauses: 22656, status: Unsatisfied, time: 0.876241437s
CNF 14184 vars 65935 clauses
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13792, clauses: 64115
last 13792 length 64115
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14184, clauses: 65935, status: Satisfied, time: 0.625371036s
CNF 13792 vars 64115 clauses
**************************************************
summary
**************************************************
SRS with 3 rules on 3 letters       mirror
SRS with 3 rules on 3 letters       context
SRS with 5 rules on 3 letters       mirror
SRS with 5 rules on 3 letters       DP
SRS with 5 strict rules and 5 weak rules on 5 letters       weights
SRS with 3 strict rules and 5 weak rules on 4 letters       EDG
SRS with 3 strict rules and 5 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 5 weak rules on 4 letters       EDG
SRS with 1 strict rules and 5 weak rules on 4 letters       Usable
SRS with 1 rules on 3 letters       weights
SRS with 0 rules on 0 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [b] {- Input 0 -}
  [a, b, c] -> [c, a, c, a, a] {- Input 1 -}
  [c, c] -> [] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a] -> [b] {- Mirror (Input 0) -}
  [c, b, a] -> [a, a, c, a, c] {- Mirror (Input 1) -}
  [c, c] -> [] {- Mirror (Input 2) -}
reason
  context
   property Termination
has value Just True
for SRS
  [a] -> [b] {- Mirror (Input 0) -}
  [c, b, a] -> [a, a, c, a, c] {- Mirror (Input 1) -}
  [a, c, c] -> [a] {- Mirror (Input 2) -}
  [b, c, c] -> [b] {- Mirror (Input 2) -}
  [c, c, c] -> [c] {- Mirror (Input 2) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a] -> [b] {- Input 0 -}
  [a, b, c] -> [c, a, c, a, a] {- Input 1 -}
  [c, c, a] -> [a] {- Input 2 -}
  [c, c, b] -> [b] {- Input 2 -}
  [c, c, c] -> [c] {- Input 2 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a] ->= [b] {- DP Nontop (Input 0) -}
  [a, b, c] ->= [c, a, c, a, a] {- DP Nontop (Input 1) -}
  [c, c, a] ->= [a] {- DP Nontop (Input 2) -}
  [c, c, b] ->= [b] {- DP Nontop (Input 2) -}
  [c, c, c] ->= [c] {- DP Nontop (Input 2) -}
  [a#, b, c] |-> [a#] {- DP (Top 4) (Input 1) -}
  [a#, b, c] |-> [a#, a] {- DP (Top 3) (Input 1) -}
  [a#, b, c] |-> [a#, c, a, a] {- DP (Top 1) (Input 1) -}
  [a#, b, c] |-> [c#, a, a] {- DP (Top 2) (Input 1) -}
  [a#, b, c] |-> [c#, a, c, a, a] {- DP (Top 0) (Input 1) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [a] ->= [b] {- DP Nontop (Input 0) -}
  [a, b, c] ->= [c, a, c, a, a] {- DP Nontop (Input 1) -}
  [c, c, a] ->= [a] {- DP Nontop (Input 2) -}
  [c, c, b] ->= [b] {- DP Nontop (Input 2) -}
  [c, c, c] ->= [c] {- DP Nontop (Input 2) -}
  [a#, b, c] |-> [a#] {- DP (Top 4) (Input 1) -}
  [a#, b, c] |-> [a#, a] {- DP (Top 3) (Input 1) -}
  [a#, b, c] |-> [a#, c, a, a] {- DP (Top 1) (Input 1) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b, c] |-> [a#] {- DP (Top 4) (Input 1) -}
  [a#, b, c] |-> [a#, a] {- DP (Top 3) (Input 1) -}
  [a#, b, c] |-> [a#, c, a, a] {- DP (Top 1) (Input 1) -}
  [a] ->= [b] {- DP Nontop (Input 0) -}
  [a, b, c] ->= [c, a, c, a, a] {- DP Nontop (Input 1) -}
  [c, c, a] ->= [a] {- DP Nontop (Input 2) -}
  [c, c, b] ->= [b] {- DP Nontop (Input 2) -}
  [c, c, c] ->= [c] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / - -  - -  1A \
        | - -  - 0A 0A |
        | - -  - -  -  |
        | - 0A - -  1A |
        \ - -  - -  0A / )
  ( b
  , Wk  / - -  - -  0A \
        | - -  - 0A -  |
        | - -  - -  -  |
        | - 0A - -  0A |
        \ - -  - -  0A / )
  ( c
  , Wk  / 0A -  - -  0A \
        | -  1A - 0A 2A |
        | -  -  - -  -  |
        | -  0A - -  -  |
        \ -  -  - -  0A / )
  ( a#
  , Wk  / - - - 0A 0A \
        | - - - -  -  |
        | - - - -  -  |
        | - - - -  -  |
        \ - - - -  0A / )
   property Termination
has value Just True
for SRS
  [a#, b, c] |-> [a#] {- DP (Top 4) (Input 1) -}
  [a] ->= [b] {- DP Nontop (Input 0) -}
  [a, b, c] ->= [c, a, c, a, a] {- DP Nontop (Input 1) -}
  [c, c, a] ->= [a] {- DP Nontop (Input 2) -}
  [c, c, b] ->= [b] {- DP Nontop (Input 2) -}
  [c, c, c] ->= [c] {- DP Nontop (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b, c] |-> [a#] {- DP (Top 4) (Input 1) -}
  [a] ->= [b] {- DP Nontop (Input 0) -}
  [a, b, c] ->= [c, a, c, a, a] {- DP Nontop (Input 1) -}
  [c, c, a] ->= [a] {- DP Nontop (Input 2) -}
  [c, c, b] ->= [b] {- DP Nontop (Input 2) -}
  [c, c, c] ->= [c] {- DP Nontop (Input 2) -}
reason
  remove un-usable
    SRS
      [a] ->= [b] {- DP Nontop (Input 0) -}
      [a, b, c] ->= [c, a, c, a, a] {- DP Nontop (Input 1) -}
      [c, c, a] ->= [a] {- DP Nontop (Input 2) -}
      [c, c, b] ->= [b] {- DP Nontop (Input 2) -}
      [c, c, c] ->= [c] {- DP Nontop (Input 2) -}
   property Termination
has value Just True
for SRS
  [a#, b, c] |-> [a#] {- DP (Top 4) (Input 1) -}
reason
  (b, 1/1)
  (c, 1/1)
  (a#, 0/1)
   property Termination
has value Just True
for SRS
  
reason
  EDG

**************************************************
skeleton: \Mirror(3,3)\Context\Mirror(5,3)\Deepee(5/5,5)\Weight\EDG(3/5,4)\Matrix{\Arctic}{5}\EDG(1/5,4)\Usable(1,3)\Weight(0,0)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.722052123000
  min duration 0.929203200000
  total durat. 2.651255323000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 38}
    , self = 73
    , parent = Nothing
    , duration = 1.722052123000
    , status = Fail
    , start = 2025-09-03 11:24:55.95757374 UTC
    , finish = 2025-09-03 11:24:57.679625863 UTC
    , thread_cap_info = ("ThreadId 101", 3, False)}
Success : "Matrix\n { monotone = Weak\n , domain = Arctic\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.005802005000
  min duration 1.005802005000
  total durat. 1.005802005000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Arctic\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 5\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 38}
    , self = 77
    , parent = Nothing
    , duration = 1.005802005000
    , status = Success
    , start = 2025-09-03 11:24:58.698037655 UTC
    , finish = 2025-09-03 11:24:59.70383966 UTC
    , thread_cap_info = ("ThreadId 130", 3, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.806391969000
  min duration 0.526193701000
  total durat. 1.332585670000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.341756495000
  min duration 2.341756495000
  total durat. 2.341756495000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 38}
    , self = 79
    , parent = Nothing
    , duration = 2.341756495000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:24:57.517404908 UTC
    , finish = 2025-09-03 11:24:59.859161403 UTC
    , thread_cap_info = ("ThreadId 122", 3, False)}
Fail : "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.227338022000
  min duration 0.917505503000
  total durat. 2.144843525000
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 32}
    , self = 76
    , parent = Nothing
    , duration = 1.227338022000
    , status = Fail
    , start = 2025-09-03 11:24:57.877539978 UTC
    , finish = 2025-09-03 11:24:59.104878 UTC
    , thread_cap_info = ("ThreadId 125", 3, False)}
Except "AsyncCancelled" : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = False}"
  total number 1
  max duration 4.557121621000
  min duration 4.557121621000
  total durat. 4.557121621000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 84
    , parent = Nothing
    , duration = 4.557121621000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 11:24:55.626379567 UTC
    , finish = 2025-09-03 11:25:00.183501188 UTC
    , thread_cap_info = ("ThreadId 22", 2, False)}
**************************************************
E            Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
E            , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
E            = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
E            , string_implementation = ByteString Plain\n , tracing = False\n , cpf
E            = False}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
E            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
E            = 12} , self = 84 , parent = Nothing , duration = 4.557121621000 , status
E            = Except "AsyncCancelled" , start = 2025-09-03 11:24:55.626379567 UTC ,
E            finish = 2025-09-03 11:25:00.183501188 UTC , thread_cap_info = ("ThreadId
E            22", 2, False)}
E            
| F          Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| F          , closure = Backward\n , start_strict_only = True\n , max_closure_length
| F          = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| F          Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| F          8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| F          = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| F          ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| F          1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| F          = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| F          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| F          = 12} , self = 67 , parent = Nothing , duration = 0.993615056000 , status
| F          = Fail , start = 2025-09-03 11:24:55.626388539 UTC , finish = 2025-09-03
| F          11:24:56.620003595 UTC , thread_cap_info = ("ThreadId 37", 3, False)}
| F          
| | F        Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | F        , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | F        = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | F        False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | F        = Size { num_rules = 27 , num_strict_rules = 27 , num_top_rules = 0 , num_weak_rules
| | F        = 0 , alphabet_size = 9 , total_length = 162} , self = 47 , parent = Nothing
| | F        , duration = 0.200276825000 , status = Fail , start = 2025-09-03 11:24:55.631892169
| | F        UTC , finish = 2025-09-03 11:24:55.832168994 UTC , thread_cap_info = ("ThreadId
| | F        52", 1, False)}
| | F        
| | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | F      = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | F      = 162} , self = 58 , parent = Nothing , duration = 0.196740082000 , status
| | | F      = Fail , start = 2025-09-03 11:24:55.723541964 UTC , finish = 2025-09-03
| | | F      11:24:55.920282046 UTC , thread_cap_info = ("ThreadId 71", 0, False)}
| | | F      
| | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | F    = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | F    = 162} , self = 54 , parent = Nothing , duration = 0.161531176000 , status
| | | | F    = Fail , start = 2025-09-03 11:24:55.737700265 UTC , finish = 2025-09-03
| | | | F    11:24:55.899231441 UTC , thread_cap_info = ("ThreadId 73", 0, False)}
| | | | F    
| | F | |    
| |   | F    
| | F |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F |      = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | F |      = 4 , total_length = 38} , self = 64 , parent = Nothing , duration = 0.299947825000
| | F |      , status = Fail , start = 2025-09-03 11:24:55.917582163 UTC , finish =
| | F |      2025-09-03 11:24:56.217529988 UTC , thread_cap_info = ("ThreadId 95", 3,
| | F |      False)}
| | F |      
| | | F      
| | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | F      = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | | F      = 32} , self = 65 , parent = Nothing , duration = 0.344359613000 , status
| | | F      = Fail , start = 2025-09-03 11:24:55.933939658 UTC , finish = 2025-09-03
| | | F      11:24:56.278299271 UTC , thread_cap_info = ("ThreadId 98", 3, False)}
| | | F      
| | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | F    = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | | | F    = 32} , self = 66 , parent = Nothing , duration = 0.404668428000 , status
| | | | F    = Fail , start = 2025-09-03 11:24:55.933944916 UTC , finish = 2025-09-03
| | | | F    11:24:56.338613344 UTC , thread_cap_info = ("ThreadId 99", 3, False)}
| | | | F    
| | | | | F  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | F  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | F  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | F  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | | F  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | | | F  = 4 , total_length = 38} , self = 73 , parent = Nothing , duration = 1.722052123000
| | | | | F  , status = Fail , start = 2025-09-03 11:24:55.95757374 UTC , finish = 2025-09-03
| | | | | F  11:24:57.679625863 UTC , thread_cap_info = ("ThreadId 101", 3, False)}
| | | | | F  
| | F | | |  
| | F | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | F | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | F | | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | F | | |  = 4 , total_length = 38} , self = 69 , parent = Nothing , duration = 0.806391969000
| | F | | |  , status = Fail , start = 2025-09-03 11:24:56.238051836 UTC , finish =
| | F | | |  2025-09-03 11:24:57.044443805 UTC , thread_cap_info = ("ThreadId 108",
| | F | | |  3, False)}
| | F | | |  
| | | F | |  
| | | F | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F | |  = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | F | |  = 4 , total_length = 32} , self = 68 , parent = Nothing , duration = 0.627309957000
| | | F | |  , status = Fail , start = 2025-09-03 11:24:56.317543697 UTC , finish =
| | | F | |  2025-09-03 11:24:56.944853654 UTC , thread_cap_info = ("ThreadId 109",
| | | F | |  3, False)}
| | | F | |  
| | | | F |  
| | | | F |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | F |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | F |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | F |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | F |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | F |  = 4 , total_length = 32} , self = 70 , parent = Nothing , duration = 0.929203200000
| | | | F |  , status = Fail , start = 2025-09-03 11:24:56.357640464 UTC , finish =
| | | | F |  2025-09-03 11:24:57.286843664 UTC , thread_cap_info = ("ThreadId 110",
| | | | F |  3, False)}
| | | | F |  
| F | | | |  
|   | F | |  
| F |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| F |   | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| F |   | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| F |   | |  = 4 , total_length = 32} , self = 72 , parent = Nothing , duration = 0.526193701000
| F |   | |  , status = Fail , start = 2025-09-03 11:24:56.973837473 UTC , finish =
| F |   | |  2025-09-03 11:24:57.500031174 UTC , thread_cap_info = ("ThreadId 116",
| F |   | |  3, False)}
| F |   | |  
| | F   | |  
| | F   | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | F   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F   | |  = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | F   | |  = 4 , total_length = 38} , self = 71 , parent = Nothing , duration = 0.396206987000
| | F   | |  , status = Fail , start = 2025-09-03 11:24:57.101898641 UTC , finish =
| | F   | |  2025-09-03 11:24:57.498105628 UTC , thread_cap_info = ("ThreadId 117",
| | F   | |  3, False)}
| | F   | |  
| | |   F |  
| | | F   |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | F   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F   |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F   |  = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | F   |  = 4 , total_length = 32} , self = 74 , parent = Nothing , duration = 0.435730648000
| | | F   |  , status = Fail , start = 2025-09-03 11:24:57.304239118 UTC , finish =
| | | F   |  2025-09-03 11:24:57.739969766 UTC , thread_cap_info = ("ThreadId 120",
| | | F   |  3, False)}
| | | F   |  
| | F |   |  
| F   |   |  
| E   |   |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| E   |   |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| E   |   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| E   |   |  , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E   |   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E   |   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| E   |   |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| E   |   |  = 4 , total_length = 38} , self = 79 , parent = Nothing , duration = 2.341756495000
| E   |   |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:24:57.517404908
| E   |   |  UTC , finish = 2025-09-03 11:24:59.859161403 UTC , thread_cap_info = ("ThreadId
| E   |   |  122", 3, False)}
| E   |   |  
| |   |   F  
| |   F      
| | F        Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
| | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F        = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | F        = 4 , total_length = 38} , self = 75 , parent = Nothing , duration = 0.917505503000
| | F        , status = Fail , start = 2025-09-03 11:24:57.777541166 UTC , finish =
| | F        2025-09-03 11:24:58.695046669 UTC , thread_cap_info = ("ThreadId 124",
| | F        3, False)}
| | F        
| | | F      Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
| | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F      = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | F      = 4 , total_length = 32} , self = 76 , parent = Nothing , duration = 1.227338022000
| | | F      , status = Fail , start = 2025-09-03 11:24:57.877539978 UTC , finish =
| | | F      2025-09-03 11:24:59.104878 UTC , thread_cap_info = ("ThreadId 125", 3,
| | | F      False)}
| | | F      
| | F |      
| | S |      Info { what = "Matrix\n { monotone = Weak\n , domain = Arctic\n , method
| | S |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | S |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S |      , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | S |      , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | S |      = 4 , total_length = 38} , self = 77 , parent = Nothing , duration = 1.005802005000
| | S |      , status = Success , start = 2025-09-03 11:24:58.698037655 UTC , finish
| | S |      = 2025-09-03 11:24:59.70383966 UTC , thread_cap_info = ("ThreadId 130",
| | S |      3, False)}
| | S |      
| | | F      
| | S        
| E          
E            
