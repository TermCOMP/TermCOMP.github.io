last 9690 length 65334
CNF 9690 vars 65334 clauses
last 9404 length 72556
CNF 9404 vars 72556 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5282, clauses: 24825
last 5282 length 24825
CNF 5282 vars 24825 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5282, clauses: 24180
last 5282 length 24180
CNF 5282 vars 24180 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5282, clauses: 24825, status: Satisfied, time: 0.342433036s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5282, clauses: 24180, status: Unsatisfied, time: 0.861234908s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9824, clauses: 42173
last 9824 length 42173
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15680, clauses: 65935
CNF 9824 vars 42173 clauses
last 15680 length 65935
CNF 15680 vars 65935 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9824, clauses: 42173, status: Unsatisfied, time: 2.747409925s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5071, clauses: 23518
last 5071 length 23518
CNF 5071 vars 23518 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8658, clauses: 42517
last 8658 length 42517
CNF 8658 vars 42517 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5071, clauses: 23518, status: Satisfied, time: 0.618040279s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8658, clauses: 42517, status: Satisfied, time: 0.51925896s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15924, clauses: 66979
last 15924 length 66979
CNF 15924 vars 66979 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4953, clauses: 22310
last 4953 length 22310
CNF 4953 vars 22310 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4094, clauses: 17007
last 4094 length 17007
CNF 4094 vars 17007 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15296, clauses: 64327
last 15296 length 64327
CNF 15296 vars 64327 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4953, clauses: 22310, status: Unsatisfied, time: 0.537331783s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14232, clauses: 59803
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4094, clauses: 17007, status: Unsatisfied, time: 0.513988193s
last 14232 length 59803
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9504, clauses: 40813
last 9504 length 40813
CNF 14232 vars 59803 clauses
CNF 9504 vars 40813 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8688, clauses: 37043
last 8688 length 37043
CNF 8688 vars 37043 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8688, clauses: 37043, status: Unsatisfied, time: 1.15393131s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9504, clauses: 40813, status: Unsatisfied, time: 1.697129384s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6780, clauses: 29609
last 6780 length 29609
CNF 6780 vars 29609 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8136, clauses: 39129
last 8136 length 39129
CNF 8136 vars 39129 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6780, clauses: 29609, status: Satisfied, time: 0.56867899s
**************************************************
summary
**************************************************
SRS with 1 rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 4 rules on 4 letters       DP
SRS with 34 strict rules and 4 weak rules on 6 letters       EDG
SRS with 12 strict rules and 4 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 11 strict rules and 4 weak rules on 6 letters       EDG
SRS with 11 strict rules and 4 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 6 strict rules and 4 weak rules on 6 letters       EDG
SRS with 6 strict rules and 4 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 4 weak rules on 6 letters       weights
SRS with 0 strict rules and 4 weak rules on 4 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, a, b, a, a, b, a, a, b, a] -> [ a , b , a , a , b , a , a , b , a , a , b , a , b ] {- Input 0 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] -> [ [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] -> [ [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] -> [ [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] -> [ [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- Semlab 1 (Concon 1 (Input 0)) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] ->= [ [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 3) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 6) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 9) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 13) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 2) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 5) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 8) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] ] {- DP (Top 11) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 3) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 6) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 9) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 2) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 5) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 8) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, b] , [b, b] ] {- DP (Top 11) (Semlab 0 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 3) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 6) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 9) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 13) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 2) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 5) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 8) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] ] {- DP (Top 11) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 3) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 6) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 9) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 2) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 5) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 8) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] |-> [ [b, a]# , [a, b] , [b, b] ] {- DP (Top 11) (Semlab 1 (Concon 1 (Input 0))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 3) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 6) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 9) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 13) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 3) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] ] {- DP (Top 11) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 6) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 9) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 13) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] ] {- DP (Top 11) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 0) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] ->= [ [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [a, b]
  , Wk  / 0A  0A 0A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, a]
  , Wk  / 0A  0A  0A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, b]
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [a, a]#
  , Wk  / 22A 22A 22A - \
        | 22A 22A 22A - |
        | 22A 22A 22A - |
        \ -   -   -   - / )
  ( [b, a]#
  , Wk  / 20A 21A 22A - \
        | 20A 21A 22A - |
        | 20A 21A 22A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 3) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 6) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 9) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 13) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 3) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] ] {- DP (Top 11) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 6) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 9) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 13) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] ] {- DP (Top 11) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] ->= [ [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 3) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 6) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 9) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 13) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 3) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] ] {- DP (Top 11) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 6) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 9) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 13) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] ] {- DP (Top 11) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] ->= [ [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [a, b]
  , Wk  / 0A  0A  0A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [b, a]
  , Wk  / 0A  0A 0A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, b]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [a, a]#
  , Wk  / 12A 12A 13A - \
        | 12A 12A 13A - |
        | 12A 12A 13A - |
        \ -   -   -   - / )
  ( [b, a]#
  , Wk  / 10A 10A 13A - \
        | 10A 10A 13A - |
        | 10A 10A 13A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 9) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 13) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] ] {- DP (Top 11) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 9) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 13) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] ] {- DP (Top 11) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] ->= [ [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 9) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 13) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 9) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] ] {- DP (Top 11) (Semlab 0 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [[b, a]#] {- DP (Top 13) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [b, a]# , [a, b] , [b, a] ] {- DP (Top 11) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] ->= [ [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A  4A 4A - \
        | 0A  0A  0A 0A - |
        | -4A 0A  0A 0A - |
        | -4A -4A 0A 0A - |
        \ -   -   -  -  - / )
  ( [a, b]
  , Wk  / 0A  0A  0A  0A - \
        | -4A 0A  0A  0A - |
        | -4A -4A -4A 0A - |
        | -4A -4A -4A 0A - |
        \ -   -   -   -  - / )
  ( [b, a]
  , Wk  / 0A  0A  0A 4A - \
        | -4A 0A  0A 0A - |
        | -4A 0A  0A 0A - |
        | -4A -4A 0A 0A - |
        \ -   -   -  -  - / )
  ( [b, b]
  , Wk  / 0A  0A  0A  0A - \
        | -4A -4A -4A 0A - |
        | -4A -4A -4A 0A - |
        | -4A -4A -4A 0A - |
        \ -   -   -   -  - / )
  ( [a, a]#
  , Wk  / 21A 21A 21A 21A - \
        | 21A 21A 21A 21A - |
        | 21A 21A 21A 21A - |
        | 21A 21A 21A 21A - |
        \ -   -   -   -   - / )
  ( [b, a]#
  , Wk  / 17A 17A 17A 17A - \
        | 17A 17A 17A 17A - |
        | 17A 17A 17A 17A - |
        | 17A 17A 17A 17A - |
        \ -   -   -   -   - / )
   property Termination
has value Just True
for SRS
  [ [b, a]# , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] |-> [ [a, a]# , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP (Top 9) (Semlab 1 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] ->= [ [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([a, a]#, 0/1)
  ([b, a]#, 1/1)
   property Termination
has value Just True
for SRS
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] ->= [ [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] ->= [ [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] ->= [ [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- DP Nontop (Semlab 1 (Concon 0 (Input 0))) -}
  [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] ->= [ [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 0))) -}
reason
  EDG

**************************************************
skeleton: (1,2)\TileAllAll{2}(4,4)\Deepee(34/4,6)\EDG(12/4,6)\Matrix{\Arctic}{3}\EDG(11/4,6)\Matrix{\Arctic}{3}\EDG(6/4,6)\Matrix{\Arctic}{4}(1/4,6)\Weight(0/4,4)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.001740493000
  min duration 1.001740493000
  total durat. 1.001740493000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 104}
    , self = 54
    , parent = Nothing
    , duration = 1.001740493000
    , status = Fail
    , start = 2025-09-03 12:34:15.833423543 UTC
    , finish = 2025-09-03 12:34:16.835164036 UTC
    , thread_cap_info = ("ThreadId 73", 2, False)}
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 3.080726681000
  min duration 3.023235047000
  total durat. 15.282923537000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 12
      , num_top_rules = 12
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 332}
    , self = 74
    , parent = Nothing
    , duration = 3.023235047000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:34:17.774198743 UTC
    , finish = 2025-09-03 12:34:20.79743379 UTC
    , thread_cap_info = ("ThreadId 131", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 194}
    , self = 106
    , parent = Nothing
    , duration = 3.038319823000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:34:27.49586477 UTC
    , finish = 2025-09-03 12:34:30.534184593 UTC
    , thread_cap_info = ("ThreadId 174", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 15
      , num_strict_rules = 11
      , num_top_rules = 11
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 306}
    , self = 87
    , parent = Nothing
    , duration = 3.059975381000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:34:22.594206774 UTC
    , finish = 2025-09-03 12:34:25.654182155 UTC
    , thread_cap_info = ("ThreadId 152", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 10
      , num_top_rules = 10
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 330}
    , self = 104
    , parent = Nothing
    , duration = 3.080666605000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:34:27.254219102 UTC
    , finish = 2025-09-03 12:34:30.334885707 UTC
    , thread_cap_info = ("ThreadId 170", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 12
      , num_top_rules = 12
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 362}
    , self = 76
    , parent = Nothing
    , duration = 3.080726681000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:34:17.994749531 UTC
    , finish = 2025-09-03 12:34:21.075476212 UTC
    , thread_cap_info = ("ThreadId 135", 1, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.409054327000
  min duration 1.409054327000
  total durat. 1.409054327000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 104}
    , self = 56
    , parent = Nothing
    , duration = 1.409054327000
    , status = Fail
    , start = 2025-09-03 12:34:15.837588312 UTC
    , finish = 2025-09-03 12:34:17.246642639 UTC
    , thread_cap_info = ("ThreadId 75", 2, False)}
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 3.079373648000
  min duration 3.020710990000
  total durat. 15.261611166000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 10
      , num_top_rules = 10
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 330}
    , self = 105
    , parent = Nothing
    , duration = 3.020710990000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:34:27.314199757 UTC
    , finish = 2025-09-03 12:34:30.334910747 UTC
    , thread_cap_info = ("ThreadId 172", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 194}
    , self = 107
    , parent = Nothing
    , duration = 3.039973618000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:34:27.574224979 UTC
    , finish = 2025-09-03 12:34:30.614198597 UTC
    , thread_cap_info = ("ThreadId 175", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 15
      , num_strict_rules = 11
      , num_top_rules = 11
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 306}
    , self = 88
    , parent = Nothing
    , duration = 3.060251707000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:34:22.614425045 UTC
    , finish = 2025-09-03 12:34:25.674676752 UTC
    , thread_cap_info = ("ThreadId 153", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 12
      , num_top_rules = 12
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 362}
    , self = 77
    , parent = Nothing
    , duration = 3.061301203000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:34:18.014189274 UTC
    , finish = 2025-09-03 12:34:21.075490477 UTC
    , thread_cap_info = ("ThreadId 136", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 12
      , num_top_rules = 12
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 332}
    , self = 75
    , parent = Nothing
    , duration = 3.079373648000
    , status = Except "<<timeout>>"
    , start = 2025-09-03 12:34:17.794835852 UTC
    , finish = 2025-09-03 12:34:20.8742095 UTC
    , thread_cap_info = ("ThreadId 132", 1, False)}
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 6
  max duration 1.474552097000
  min duration 0.172456252000
  total durat. 5.644210204000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 24}
    , self = 55
    , parent = Nothing
    , duration = 1.131713019000
    , status = Fail
    , start = 2025-09-03 12:34:15.935472479 UTC
    , finish = 2025-09-03 12:34:17.067185498 UTC
    , thread_cap_info = ("ThreadId 94", 0, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 22}
    , self = 57
    , parent = Nothing
    , duration = 1.396979122000
    , status = Fail
    , start = 2025-09-03 12:34:15.856656638 UTC
    , finish = 2025-09-03 12:34:17.25363576 UTC
    , thread_cap_info = ("ThreadId 79", 0, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 104}
    , self = 58
    , parent = Nothing
    , duration = 1.474552097000
    , status = Fail
    , start = 2025-09-03 12:34:16.15504557 UTC
    , finish = 2025-09-03 12:34:17.629597667 UTC
    , thread_cap_info = ("ThreadId 113", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 4
  max duration 5.944315854000
  min duration 0.619302027000
  total durat. 11.775977226000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 15
      , num_strict_rules = 11
      , num_top_rules = 11
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 306}
    , self = 95
    , parent = Nothing
    , duration = 1.399489466000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:34:25.777745782 UTC
    , finish = 2025-09-03 12:34:27.177235248 UTC
    , thread_cap_info = ("ThreadId 160", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 194}
    , self = 114
    , parent = Nothing
    , duration = 3.812869879000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:34:30.755363203 UTC
    , finish = 2025-09-03 12:34:34.568233082 UTC
    , thread_cap_info = ("ThreadId 184", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 12
      , num_top_rules = 12
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 362}
    , self = 93
    , parent = Nothing
    , duration = 5.944315854000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:34:21.214193881 UTC
    , finish = 2025-09-03 12:34:27.158509735 UTC
    , thread_cap_info = ("ThreadId 144", 1, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 3.047108275000
  min duration 1.747611143000
  total durat. 6.771926310000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 194}
    , self = 110
    , parent = Nothing
    , duration = 1.747611143000
    , status = Fail
    , start = 2025-09-03 12:34:31.589048002 UTC
    , finish = 2025-09-03 12:34:33.336659145 UTC
    , thread_cap_info = ("ThreadId 188", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 10
      , num_top_rules = 10
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 330}
    , self = 111
    , parent = Nothing
    , duration = 1.977206892000
    , status = Fail
    , start = 2025-09-03 12:34:31.359509062 UTC
    , finish = 2025-09-03 12:34:33.336715954 UTC
    , thread_cap_info = ("ThreadId 187", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 12
      , num_top_rules = 12
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 362}
    , self = 86
    , parent = Nothing
    , duration = 3.047108275000
    , status = Fail
    , start = 2025-09-03 12:34:22.374627962 UTC
    , finish = 2025-09-03 12:34:25.421736237 UTC
    , thread_cap_info = ("ThreadId 149", 1, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.157942244000
  min duration 0.572976932000
  total durat. 1.730919176000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 15
      , num_strict_rules = 11
      , num_top_rules = 11
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 306}
    , self = 89
    , parent = Nothing
    , duration = 1.157942244000
    , status = Success
    , start = 2025-09-03 12:34:25.75920725 UTC
    , finish = 2025-09-03 12:34:26.917149494 UTC
    , thread_cap_info = ("ThreadId 159", 1, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 1.152336374000
  min duration 0.861102255000
  total durat. 2.914533086000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 12
      , num_top_rules = 12
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 362}
    , self = 81
    , parent = Nothing
    , duration = 1.152336374000
    , status = Fail
    , start = 2025-09-03 12:34:21.175166175 UTC
    , finish = 2025-09-03 12:34:22.327502549 UTC
    , thread_cap_info = ("ThreadId 143", 1, False)}
Success : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.483276439000
  min duration 1.109130239000
  total durat. 2.592406678000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 194}
    , self = 112
    , parent = Nothing
    , duration = 1.109130239000
    , status = Success
    , start = 2025-09-03 12:34:33.356836754 UTC
    , finish = 2025-09-03 12:34:34.465966993 UTC
    , thread_cap_info = ("ThreadId 192", 1, False)}
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 12
      , num_top_rules = 12
      , num_weak_rules = 4
      , alphabet_size = 6
      , total_length = 362}
    , self = 91
    , parent = Nothing
    , duration = 1.483276439000
    , status = Success
    , start = 2025-09-03 12:34:25.514676134 UTC
    , finish = 2025-09-03 12:34:26.997952573 UTC
    , thread_cap_info = ("ThreadId 156", 1, False)}
Fail : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = False}"
  total number 3
  max duration 11.413571101000
  min duration 1.986633673000
  total durat. 16.662872251000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 24}
    , self = 69
    , parent = Nothing
    , duration = 1.986633673000
    , status = Fail
    , start = 2025-09-03 12:34:15.826639109 UTC
    , finish = 2025-09-03 12:34:17.813272782 UTC
    , thread_cap_info = ("ThreadId 22", 3, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 22}
    , self = 73
    , parent = Nothing
    , duration = 3.262667477000
    , status = Fail
    , start = 2025-09-03 12:34:15.828949667 UTC
    , finish = 2025-09-03 12:34:19.091617144 UTC
    , thread_cap_info = ("ThreadId 61", 0, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 24}
    , self = 101
    , parent = Nothing
    , duration = 11.413571101000
    , status = Fail
    , start = 2025-09-03 12:34:15.834202813 UTC
    , finish = 2025-09-03 12:34:27.247773914 UTC
    , thread_cap_info = ("ThreadId 69", 0, False)}
**************************************************
F                      Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                      , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                      = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                      , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                      = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
F                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F                      = 24} , self = 69 , parent = Nothing , duration = 1.986633673000 , status
F                      = Fail , start = 2025-09-03 12:34:15.826639109 UTC , finish = 2025-09-03
F                      12:34:17.813272782 UTC , thread_cap_info = ("ThreadId 22", 3, False)}
F                      
| F                    Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| F                    , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| F                    = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| F                    , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| F                    = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| F                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| F                    = 22} , self = 73 , parent = Nothing , duration = 3.262667477000 , status
| F                    = Fail , start = 2025-09-03 12:34:15.828949667 UTC , finish = 2025-09-03
| F                    12:34:19.091617144 UTC , thread_cap_info = ("ThreadId 61", 0, False)}
| F                    
| | F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | F                  = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | F                  = 104} , self = 54 , parent = Nothing , duration = 1.001740493000 , status
| | F                  = Fail , start = 2025-09-03 12:34:15.833423543 UTC , finish = 2025-09-03
| | F                  12:34:16.835164036 UTC , thread_cap_info = ("ThreadId 73", 2, False)}
| | F                  
| | | F                Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | F                , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | F                = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | F                , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | F                = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | F                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | F                = 24} , self = 101 , parent = Nothing , duration = 11.413571101000 , status
| | | F                = Fail , start = 2025-09-03 12:34:15.834202813 UTC , finish = 2025-09-03
| | | F                12:34:27.247773914 UTC , thread_cap_info = ("ThreadId 69", 0, False)}
| | | F                
| | | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | F              = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | F              = 104} , self = 56 , parent = Nothing , duration = 1.409054327000 , status
| | | | F              = Fail , start = 2025-09-03 12:34:15.837588312 UTC , finish = 2025-09-03
| | | | F              12:34:17.246642639 UTC , thread_cap_info = ("ThreadId 75", 2, False)}
| | | | F              
| | | | | F            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | F            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | F            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | F            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | F            = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | F            = 0 , alphabet_size = 2 , total_length = 22} , self = 57 , parent = Nothing
| | | | | F            , duration = 1.396979122000 , status = Fail , start = 2025-09-03 12:34:15.856656638
| | | | | F            UTC , finish = 2025-09-03 12:34:17.25363576 UTC , thread_cap_info = ("ThreadId
| | | | | F            79", 0, False)}
| | | | | F            
| | | | | | F          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | F          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | F          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | F          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | F          = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | F          = 0 , alphabet_size = 2 , total_length = 22} , self = 52 , parent = Nothing
| | | | | | F          , duration = 0.716039052000 , status = Fail , start = 2025-09-03 12:34:15.899751926
| | | | | | F          UTC , finish = 2025-09-03 12:34:16.615790978 UTC , thread_cap_info = ("ThreadId
| | | | | | F          90", 0, False)}
| | | | | | F          
| | | | | | | F        Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | F        , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | F        = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | F        False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | F        = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | F        = 0 , alphabet_size = 2 , total_length = 24} , self = 55 , parent = Nothing
| | | | | | | F        , duration = 1.131713019000 , status = Fail , start = 2025-09-03 12:34:15.935472479
| | | | | | | F        UTC , finish = 2025-09-03 12:34:17.067185498 UTC , thread_cap_info = ("ThreadId
| | | | | | | F        94", 0, False)}
| | | | | | | F        
| | | | | | | | F      Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | F      , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | F      = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | F      False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | F      = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | | | F      = 0 , alphabet_size = 2 , total_length = 24} , self = 53 , parent = Nothing
| | | | | | | | F      , duration = 0.752470662000 , status = Fail , start = 2025-09-03 12:34:15.954189647
| | | | | | | | F      UTC , finish = 2025-09-03 12:34:16.706660309 UTC , thread_cap_info = ("ThreadId
| | | | | | | | F      96", 0, False)}
| | | | | | | | F      
| | | | | | | | | F    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | F    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | F    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | F    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | F    = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | F    = 0 , alphabet_size = 4 , total_length = 104} , self = 51 , parent = Nothing
| | | | | | | | | F    , duration = 0.172456252000 , status = Fail , start = 2025-09-03 12:34:16.134416685
| | | | | | | | | F    UTC , finish = 2025-09-03 12:34:16.306872937 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | F    111", 1, False)}
| | | | | | | | | F    
| | | | | | | | | | F  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | | | | | F  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | | | | | F  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | | | | | F  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | | | | | F  = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | F  = 0 , alphabet_size = 4 , total_length = 104} , self = 58 , parent = Nothing
| | | | | | | | | | F  , duration = 1.474552097000 , status = Fail , start = 2025-09-03 12:34:16.15504557
| | | | | | | | | | F  UTC , finish = 2025-09-03 12:34:17.629597667 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | F  113", 1, False)}
| | | | | | | | | | F  
| | | | | | | | | F |  
| | | | | | F | |   |  
| | | | | |   | F   |  
| | F | | |   |     |  
| |   | | |   F     |  
| |   | F |         |  
| |   |   F         |  
| |   |             F  
| | E |                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | E |                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E |                = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | E |                = 12 , num_top_rules = 12 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | E |                = 332} , self = 74 , parent = Nothing , duration = 3.023235047000 , status
| | E |                = Except "<<timeout>>" , start = 2025-09-03 12:34:17.774198743 UTC , finish
| | E |                = 2025-09-03 12:34:20.79743379 UTC , thread_cap_info = ("ThreadId 131",
| | E |                1, False)}
| | E |                
| | | | E              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | E              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | E              = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | E              = 12 , num_top_rules = 12 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | | E              = 332} , self = 75 , parent = Nothing , duration = 3.079373648000 , status
| | | | E              = Except "<<timeout>>" , start = 2025-09-03 12:34:17.794835852 UTC , finish
| | | | E              = 2025-09-03 12:34:20.8742095 UTC , thread_cap_info = ("ThreadId 132",
| | | | E              1, False)}
| | | | E              
F | | | |              
E | | | |              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
E | | | |              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
E | | | |              = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
E | | | |              = 12 , num_top_rules = 12 , num_weak_rules = 4 , alphabet_size = 6 , total_length
E | | | |              = 362} , self = 76 , parent = Nothing , duration = 3.080726681000 , status
E | | | |              = Except "<<timeout>>" , start = 2025-09-03 12:34:17.994749531 UTC , finish
E | | | |              = 2025-09-03 12:34:21.075476212 UTC , thread_cap_info = ("ThreadId 135",
E | | | |              1, False)}
E | | | |              
| | | | | E            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | E            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | E            = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | | E            = 12 , num_top_rules = 12 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | | | E            = 362} , self = 77 , parent = Nothing , duration = 3.061301203000 , status
| | | | | E            = Except "<<timeout>>" , start = 2025-09-03 12:34:18.014189274 UTC , finish
| | | | | E            = 2025-09-03 12:34:21.075490477 UTC , thread_cap_info = ("ThreadId 136",
| | | | | E            1, False)}
| | | | | E            
| F | | | |            
|   E | | |            
|     | E |            
| S   |   |            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S   |   |            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S   |   |            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S   |   |            = 16 , num_strict_rules = 12 , num_top_rules = 12 , num_weak_rules = 4
| S   |   |            , alphabet_size = 6 , total_length = 332} , self = 78 , parent = Nothing
| S   |   |            , duration = 0.572976932000 , status = Success , start = 2025-09-03 12:34:20.974211115
| S   |   |            UTC , finish = 2025-09-03 12:34:21.547188047 UTC , thread_cap_info = ("ThreadId
| S   |   |            139", 1, False)}
| S   |   |            
| | E |   |            Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E |   |            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E |   |            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E |   |            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E |   |            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E |   |            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 16
| | E |   |            , num_strict_rules = 12 , num_top_rules = 12 , num_weak_rules = 4 , alphabet_size
| | E |   |            = 6 , total_length = 332} , self = 80 , parent = Nothing , duration = 0.619302027000
| | E |   |            , status = Except "AsyncCancelled" , start = 2025-09-03 12:34:21.054950417
| | E |   |            UTC , finish = 2025-09-03 12:34:21.674252444 UTC , thread_cap_info = ("ThreadId
| | E |   |            140", 1, False)}
| | E |   |            
E | | |   |            
  | | |   E            
F | | |                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F | | |                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | |                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | |                = 16 , num_strict_rules = 12 , num_top_rules = 12 , num_weak_rules = 4
F | | |                , alphabet_size = 6 , total_length = 362} , self = 81 , parent = Nothing
F | | |                , duration = 1.152336374000 , status = Fail , start = 2025-09-03 12:34:21.175166175
F | | |                UTC , finish = 2025-09-03 12:34:22.327502549 UTC , thread_cap_info = ("ThreadId
F | | |                143", 1, False)}
F | | |                
| | | | E              Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 16
| | | | E              , num_strict_rules = 12 , num_top_rules = 12 , num_weak_rules = 4 , alphabet_size
| | | | E              = 6 , total_length = 362} , self = 93 , parent = Nothing , duration = 5.944315854000
| | | | E              , status = Except "AsyncCancelled" , start = 2025-09-03 12:34:21.214193881
| | | | E              UTC , finish = 2025-09-03 12:34:27.158509735 UTC , thread_cap_info = ("ThreadId
| | | | E              144", 1, False)}
| | | | E              
| S | | |              
|   E | |              
F     | |              
F     | |              Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
F     | |              = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F     | |              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F     | |              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F     | |              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F     | |              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 16
F     | |              , num_strict_rules = 12 , num_top_rules = 12 , num_weak_rules = 4 , alphabet_size
F     | |              = 6 , total_length = 362} , self = 86 , parent = Nothing , duration = 3.047108275000
F     | |              , status = Fail , start = 2025-09-03 12:34:22.374627962 UTC , finish =
F     | |              2025-09-03 12:34:25.421736237 UTC , thread_cap_info = ("ThreadId 149",
F     | |              1, False)}
F     | |              
| E   | |              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| E   | |              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E   | |              = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| E   | |              = 11 , num_top_rules = 11 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| E   | |              = 306} , self = 87 , parent = Nothing , duration = 3.059975381000 , status
| E   | |              = Except "<<timeout>>" , start = 2025-09-03 12:34:22.594206774 UTC , finish
| E   | |              = 2025-09-03 12:34:25.654182155 UTC , thread_cap_info = ("ThreadId 152",
| E   | |              1, False)}
| E   | |              
| | E | |              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | E | |              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E | |              = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | E | |              = 11 , num_top_rules = 11 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | E | |              = 306} , self = 88 , parent = Nothing , duration = 3.060251707000 , status
| | E | |              = Except "<<timeout>>" , start = 2025-09-03 12:34:22.614425045 UTC , finish
| | E | |              = 2025-09-03 12:34:25.674676752 UTC , thread_cap_info = ("ThreadId 153",
| | E | |              1, False)}
| | E | |              
F | | | |              
S | | | |              Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
S | | | |              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | | | |              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | | | |              = 16 , num_strict_rules = 12 , num_top_rules = 12 , num_weak_rules = 4
S | | | |              , alphabet_size = 6 , total_length = 362} , self = 91 , parent = Nothing
S | | | |              , duration = 1.483276439000 , status = Success , start = 2025-09-03 12:34:25.514676134
S | | | |              UTC , finish = 2025-09-03 12:34:26.997952573 UTC , thread_cap_info = ("ThreadId
S | | | |              156", 1, False)}
S | | | |              
| E | | |              
|   E | |              
| S   | |              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S   | |              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S   | |              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S   | |              = 15 , num_strict_rules = 11 , num_top_rules = 11 , num_weak_rules = 4
| S   | |              , alphabet_size = 6 , total_length = 306} , self = 89 , parent = Nothing
| S   | |              , duration = 1.157942244000 , status = Success , start = 2025-09-03 12:34:25.75920725
| S   | |              UTC , finish = 2025-09-03 12:34:26.917149494 UTC , thread_cap_info = ("ThreadId
| S   | |              159", 1, False)}
| S   | |              
| | E | |              Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | |              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | |              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | |              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | |              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | |              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 15
| | E | |              , num_strict_rules = 11 , num_top_rules = 11 , num_weak_rules = 4 , alphabet_size
| | E | |              = 6 , total_length = 306} , self = 95 , parent = Nothing , duration = 1.399489466000
| | E | |              , status = Except "AsyncCancelled" , start = 2025-09-03 12:34:25.777745782
| | E | |              UTC , finish = 2025-09-03 12:34:27.177235248 UTC , thread_cap_info = ("ThreadId
| | E | |              160", 1, False)}
| | E | |              
| S | | |              
S   | | |              
    | | E              
    E |                
      F                
E                      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
E                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
E                      = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
E                      = 10 , num_top_rules = 10 , num_weak_rules = 4 , alphabet_size = 6 , total_length
E                      = 330} , self = 104 , parent = Nothing , duration = 3.080666605000 , status
E                      = Except "<<timeout>>" , start = 2025-09-03 12:34:27.254219102 UTC , finish
E                      = 2025-09-03 12:34:30.334885707 UTC , thread_cap_info = ("ThreadId 170",
E                      1, False)}
E                      
| E                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| E                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E                    = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| E                    = 10 , num_top_rules = 10 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| E                    = 330} , self = 105 , parent = Nothing , duration = 3.020710990000 , status
| E                    = Except "<<timeout>>" , start = 2025-09-03 12:34:27.314199757 UTC , finish
| E                    = 2025-09-03 12:34:30.334910747 UTC , thread_cap_info = ("ThreadId 172",
| E                    1, False)}
| E                    
| | E                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | E                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E                  = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | E                  = 6 , num_top_rules = 6 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | E                  = 194} , self = 106 , parent = Nothing , duration = 3.038319823000 , status
| | E                  = Except "<<timeout>>" , start = 2025-09-03 12:34:27.49586477 UTC , finish
| | E                  = 2025-09-03 12:34:30.534184593 UTC , thread_cap_info = ("ThreadId 174",
| | E                  1, False)}
| | E                  
| | | E                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | E                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E                = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | E                = 6 , num_top_rules = 6 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | E                = 194} , self = 107 , parent = Nothing , duration = 3.039973618000 , status
| | | E                = Except "<<timeout>>" , start = 2025-09-03 12:34:27.574224979 UTC , finish
| | | E                = 2025-09-03 12:34:30.614198597 UTC , thread_cap_info = ("ThreadId 175",
| | | E                1, False)}
| | | E                
E | | |                
  E | |                
F   | |                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F   | |                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F   | |                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F   | |                = 14 , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 4
F   | |                , alphabet_size = 6 , total_length = 330} , self = 108 , parent = Nothing
F   | |                , duration = 0.901094457000 , status = Fail , start = 2025-09-03 12:34:30.434204282
F   | |                UTC , finish = 2025-09-03 12:34:31.335298739 UTC , thread_cap_info = ("ThreadId
F   | |                178", 1, False)}
F   | |                
|   E |                
|     E                
| F                    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F                    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F                    = 10 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 4 ,
| F                    alphabet_size = 6 , total_length = 194} , self = 109 , parent = Nothing
| F                    , duration = 0.861102255000 , status = Fail , start = 2025-09-03 12:34:30.676012088
| F                    UTC , finish = 2025-09-03 12:34:31.537114343 UTC , thread_cap_info = ("ThreadId
| F                    183", 1, False)}
| F                    
| | E                  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E                  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E                  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E                  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E                  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E                  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | E                  , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 4 , alphabet_size
| | E                  = 6 , total_length = 194} , self = 114 , parent = Nothing , duration =
| | E                  3.812869879000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | E                  12:34:30.755363203 UTC , finish = 2025-09-03 12:34:34.568233082 UTC , thread_cap_info
| | E                  = ("ThreadId 184", 1, False)}
| | E                  
F | |                  
F | |                  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
F | |                  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F | |                  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F | |                  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F | |                  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F | |                  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
F | |                  , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 4 , alphabet_size
F | |                  = 6 , total_length = 330} , self = 111 , parent = Nothing , duration =
F | |                  1.977206892000 , status = Fail , start = 2025-09-03 12:34:31.359509062
F | |                  UTC , finish = 2025-09-03 12:34:33.336715954 UTC , thread_cap_info = ("ThreadId
F | |                  187", 1, False)}
F | |                  
| F |                  
| F |                  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| F |                  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F |                  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F |                  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F |                  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F |                  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| F |                  , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 4 , alphabet_size
| F |                  = 6 , total_length = 194} , self = 110 , parent = Nothing , duration =
| F |                  1.747611143000 , status = Fail , start = 2025-09-03 12:34:31.589048002
| F |                  UTC , finish = 2025-09-03 12:34:33.336659145 UTC , thread_cap_info = ("ThreadId
| F |                  188", 1, False)}
| F |                  
| F |                  
F   |                  
S   |                  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
S   |                  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S   |                  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S   |                  = 10 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 4 ,
S   |                  alphabet_size = 6 , total_length = 194} , self = 112 , parent = Nothing
S   |                  , duration = 1.109130239000 , status = Success , start = 2025-09-03 12:34:33.356836754
S   |                  UTC , finish = 2025-09-03 12:34:34.465966993 UTC , thread_cap_info = ("ThreadId
S   |                  192", 1, False)}
S   |                  
S   |                  
    E                  
