last 3890 length 17225
CNF 3890 vars 17225 clauses
last 3900 length 17146
last 841 length 3530
CNF 841 vars 3530 clauses
CNF 3900 vars 17146 clauses
last 1164 length 5004
CNF 1164 vars 5004 clauses
last 1271 length 5333
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1987, clauses: 7246
last 1415 length 6177
CNF 1271 vars 5333 clauses
last 1987 length 7246
CNF 1415 vars 6177 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7937, clauses: 33345
last 4928 length 21948
CNF 1987 vars 7246 clauses
last 7937 length 33345
last 5950 length 26402
last 4576 length 20212
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2949, clauses: 10976
CNF 4928 vars 21948 clauses
last 6489 length 30861
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1987, clauses: 7246, status: Satisfied, time: 0.30546539s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10118, clauses: 42501
CNF 5950 vars 26402 clauses
CNF 7937 vars 33345 clauses
last 2949 length 10976
CNF 6489 vars 30861 clauses
last 10118 length 42501
CNF 4576 vars 20212 clauses
last 802 length 3332
CNF 2949 vars 10976 clauses
last 937 length 3908
CNF 802 vars 3332 clauses
CNF 10118 vars 42501 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2949, clauses: 10976, status: Satisfied, time: 0.275679888s
CNF 937 vars 3908 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5964, clauses: 22289
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7391, clauses: 28218
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2029, clauses: 7402
last 992 length 4230
last 5964 length 22289
last 818 length 3504
last 7391 length 28218
last 2029 length 7402
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7943, clauses: 33383
CNF 818 vars 3504 clauses
CNF 992 vars 4230 clauses
CNF 5964 vars 22289 clauses
last 7943 length 33383
CNF 7391 vars 28218 clauses
CNF 2029 vars 7402 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2008, clauses: 7273
last 2008 length 7273
CNF 7943 vars 33383 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5964, clauses: 22289, status: Satisfied, time: 0.466216456s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7391, clauses: 28218, status: Satisfied, time: 0.403140858s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2029, clauses: 7402, status: Unsatisfied, time: 0.377639666s
CNF 2008 vars 7273 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7939, clauses: 33351
last 7939 length 33351
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2008, clauses: 7273, status: Unsatisfied, time: 0.265754193s
CNF 7939 vars 33351 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4774, clauses: 19926
last 4774 length 19926
CNF 4774 vars 19926 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7943, clauses: 33383, status: Satisfied, time: 0.696403731s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4764, clauses: 19766
last 4764 length 19766
**************************************************
summary
**************************************************
SRS with 3 rules on 2 letters       DP
SRS with 11 strict rules and 3 weak rules on 4 letters       weights
SRS with 2 strict rules and 3 weak rules on 4 letters       EDG
2 sub-proofs
  1 SRS with 1 strict rules and 3 weak rules on 3 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 3 weak rules on 2 letters       EDG

  2 SRS with 1 strict rules and 3 weak rules on 3 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 3 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, a, a] -> [a, a, b, a] {- Input 0 -}
  [b, b, a, a] -> [a, a, a, b] {- Input 1 -}
  [b, a, a, b] -> [b, b, b, a] {- Input 2 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, b, a, a] ->= [a, a, b, a] {- DP Nontop (Input 0) -}
  [b, b, a, a] ->= [a, a, a, b] {- DP Nontop (Input 1) -}
  [b, a, a, b] ->= [b, b, b, a] {- DP Nontop (Input 2) -}
  [a#, b, a, a] |-> [a#, a, b, a] {- DP (Top 0) (Input 0) -}
  [a#, b, a, a] |-> [a#, b, a] {- DP (Top 1) (Input 0) -}
  [a#, b, a, a] |-> [b#, a] {- DP (Top 2) (Input 0) -}
  [b#, a, a, b] |-> [a#] {- DP (Top 3) (Input 2) -}
  [b#, a, a, b] |-> [b#, a] {- DP (Top 2) (Input 2) -}
  [b#, a, a, b] |-> [b#, b, a] {- DP (Top 1) (Input 2) -}
  [b#, a, a, b] |-> [b#, b, b, a] {- DP (Top 0) (Input 2) -}
  [b#, b, a, a] |-> [a#, a, a, b] {- DP (Top 0) (Input 1) -}
  [b#, b, a, a] |-> [a#, a, b] {- DP (Top 1) (Input 1) -}
  [b#, b, a, a] |-> [a#, b] {- DP (Top 2) (Input 1) -}
  [b#, b, a, a] |-> [b#] {- DP (Top 3) (Input 1) -}
reason
  (a, 1/1)
  (b, 1/1)
  (a#, 0/1)
  (b#, 1/1)
   property Termination
has value Just True
for SRS
  [a, b, a, a] ->= [a, a, b, a] {- DP Nontop (Input 0) -}
  [b, b, a, a] ->= [a, a, a, b] {- DP Nontop (Input 1) -}
  [b, a, a, b] ->= [b, b, b, a] {- DP Nontop (Input 2) -}
  [a#, b, a, a] |-> [a#, a, b, a] {- DP (Top 0) (Input 0) -}
  [b#, a, a, b] |-> [b#, b, b, a] {- DP (Top 0) (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b, a, a] |-> [a#, a, b, a] {- DP (Top 0) (Input 0) -}
  [a, b, a, a] ->= [a, a, b, a] {- DP Nontop (Input 0) -}
  [b, b, a, a] ->= [a, a, a, b] {- DP Nontop (Input 1) -}
  [b, a, a, b] ->= [b, b, b, a] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 3A 3A 6A - \
        | 3A 3A 6A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 1A 1A 1A - \
        | 1A 1A 1A - |
        | 1A 1A 1A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [a, b, a, a] ->= [a, a, b, a] {- DP Nontop (Input 0) -}
  [b, b, a, a] ->= [a, a, a, b] {- DP Nontop (Input 1) -}
  [b, a, a, b] ->= [b, b, b, a] {- DP Nontop (Input 2) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [b#, a, a, b] |-> [b#, b, b, a] {- DP (Top 0) (Input 2) -}
  [a, b, a, a] ->= [a, a, b, a] {- DP Nontop (Input 0) -}
  [b, b, a, a] ->= [a, a, a, b] {- DP Nontop (Input 1) -}
  [b, a, a, b] ->= [b, b, b, a] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / -   -   0A  \
        | -1A -1A -2A |
        \ -   -   0A  / )
  ( b
  , Wk  / - - 2A  \
        | - - -1A |
        \ - - 0A  / )
  ( b#
  , Wk  / - 2A 0A \
        | - -  -  |
        \ - -  0A / )
   property Termination
has value Just True
for SRS
  [a, b, a, a] ->= [a, a, b, a] {- DP Nontop (Input 0) -}
  [b, b, a, a] ->= [a, a, a, b] {- DP Nontop (Input 1) -}
  [b, a, a, b] ->= [b, b, b, a] {- DP Nontop (Input 2) -}
reason
  EDG

**************************************************
skeleton: (3,2)\Deepee(11/3,4)\Weight(2/3,4)\EDG[(1/3,3)\Matrix{\Arctic}{3}(0/3,2)\EDG[],(1/3,3)\Matrix{\ArcticBZ}{3}(0/3,2)\EDG[]]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.559428647000
  min duration 0.024037521000
  total durat. 1.951622273000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.461993192000
  min duration 0.043399282000
  total durat. 2.163444414000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 4
  max duration 1.016149550000
  min duration 0.461308672000
  total durat. 3.052400816000
  Info
    { what = CNF 4764 vars 19766 clauses
"Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 12
      , alphabet_size = 6
      , total_length = 180}
    , self = 111
    , parent = Nothing
    , duration = 1.016149550000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:04:13.701505492 UTC
    , finish = 2025-09-03 12:04:14.717655042 UTC
    , thread_cap_info = ("ThreadId 142", 2, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 1.005384934000
  min duration 0.483000245000
  total durat. 3.014938554000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 12
      , alphabet_size = 5
      , total_length = 140}
    , self = 105
    , parent = Nothing
    , duration = 1.005384934000
    , status = Success
    , start = 2025-09-03 12:04:13.651602042 UTC
    , finish = 2025-09-03 12:04:14.656986976 UTC
    , thread_cap_info = ("ThreadId 139", 2, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.763001390000
  min duration 0.444827177000
  total durat. 1.207828567000
**************************************************
F                    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                    , closure = Backward\n , start_strict_only = True\n , max_closure_length
F                    = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                    Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                    8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                    = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                    ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                    1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                    = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F                    = 24} , self = 80 , parent = Nothing , duration = 0.480560939000 , status
F                    = Fail , start = 2025-09-03 12:04:12.867619951 UTC , finish = 2025-09-03
F                    12:04:13.34818089 UTC , thread_cap_info = ("ThreadId 34", 2, False)}
F                    
| F                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| F                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| F                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| F                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| F                  = False}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| F                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| F                  = 24} , self = 55 , parent = Nothing , duration = 0.242200887000 , status
| F                  = Fail , start = 2025-09-03 12:04:12.867632482 UTC , finish = 2025-09-03
| F                  12:04:13.109833369 UTC , thread_cap_info = ("ThreadId 22", 1, False)}
| F                  
| | F                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | F                , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | F                = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | F                Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | F                8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | F                = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | F                ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | F                1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | F                = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| | F                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | F                = 24} , self = 93 , parent = Nothing , duration = 0.925791176000 , status
| | F                = Fail , start = 2025-09-03 12:04:12.867650873 UTC , finish = 2025-09-03
| | F                12:04:13.793442049 UTC , thread_cap_info = ("ThreadId 41", 1, False)}
| | F                
| | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | F              = 12 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | F              = 120} , self = 54 , parent = Nothing , duration = 0.228297522000 , status
| | | F              = Fail , start = 2025-09-03 12:04:12.880254713 UTC , finish = 2025-09-03
| | | F              12:04:13.108552235 UTC , thread_cap_info = ("ThreadId 58", 3, False)}
| | | F              
| | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | F            = 12 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | F            = 120} , self = 67 , parent = Nothing , duration = 0.241835475000 , status
| | | | F            = Fail , start = 2025-09-03 12:04:12.90719054 UTC , finish = 2025-09-03
| | | | F            12:04:13.149026015 UTC , thread_cap_info = ("ThreadId 56", 3, False)}
| | | | F            
| | | F |            
| F |   |            
| F |   |            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F |   |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F |   |            = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| F |   |            = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| F |   |            = 48} , self = 79 , parent = Nothing , duration = 0.191837991000 , status
| F |   |            = Fail , start = 2025-09-03 12:04:13.127988592 UTC , finish = 2025-09-03
| F |   |            12:04:13.319826583 UTC , thread_cap_info = ("ThreadId 99", 0, False)}
| F |   |            
| | | F |            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F |            = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | F |            = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | F |            = 48} , self = 81 , parent = Nothing , duration = 0.263303392000 , status
| | | F |            = Fail , start = 2025-09-03 12:04:13.136282837 UTC , finish = 2025-09-03
| | | F |            12:04:13.399586229 UTC , thread_cap_info = ("ThreadId 101", 0, False)}
| | | F |            
| | | | | S          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S          = 4 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | | | | S          = 3 , total_length = 32} , self = 82 , parent = Nothing , duration = 0.483000245000
| | | | | S          , status = Success , start = 2025-09-03 12:04:13.136302872 UTC , finish
| | | | | S          = 2025-09-03 12:04:13.619303117 UTC , thread_cap_info = ("ThreadId 103",
| | | | | S          1, False)}
| | | | | S          
| | | | F |          
| | | | E |          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E |          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | E |          , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | | | E |          = 3 , total_length = 32} , self = 84 , parent = Nothing , duration = 0.461308672000
| | | | E |          , status = Except "AsyncCancelled" , start = 2025-09-03 12:04:13.158206534
| | | | E |          UTC , finish = 2025-09-03 12:04:13.619515206 UTC , thread_cap_info = ("ThreadId
| | | | E |          113", 1, False)}
| | | | E |          
| | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | | F        = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | | | | | F        = 140} , self = 92 , parent = Nothing , duration = 0.559428647000 , status
| | | | | | F        = Fail , start = 2025-09-03 12:04:13.162542493 UTC , finish = 2025-09-03
| | | | | | F        12:04:13.72197114 UTC , thread_cap_info = ("ThreadId 117", 2, False)}
| | | | | | F        
| | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | | | F      = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | | | | | | F      = 140} , self = 89 , parent = Nothing , duration = 0.461993192000 , status
| | | | | | | F      = Fail , start = 2025-09-03 12:04:13.176452944 UTC , finish = 2025-09-03
| | | | | | | F      12:04:13.638446136 UTC , thread_cap_info = ("ThreadId 118", 2, False)}
| | | | | | | F      
| | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | | | | | | F    = 6 , num_top_rules = 6 , num_weak_rules = 12 , alphabet_size = 6 , total_length
| | | | | | | | F    = 180} , self = 91 , parent = Nothing , duration = 0.417136199000 , status
| | | | | | | | F    = Fail , start = 2025-09-03 12:04:13.272669065 UTC , finish = 2025-09-03
| | | | | | | | F    12:04:13.689805264 UTC , thread_cap_info = ("ThreadId 122", 2, False)}
| | | | | | | | F    
| | | | | | | | | F  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | | | | | | | F  = 6 , num_top_rules = 6 , num_weak_rules = 12 , alphabet_size = 6 , total_length
| | | | | | | | | F  = 180} , self = 90 , parent = Nothing , duration = 0.385341164000 , status
| | | | | | | | | F  = Fail , start = 2025-09-03 12:04:13.276305386 UTC , finish = 2025-09-03
| | | | | | | | | F  12:04:13.66164655 UTC , thread_cap_info = ("ThreadId 121", 1, False)}
| | | | | | | | | F  
| F | | | | | | | |  
| S | | | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | | | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | | | | | | | |  = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| S | | | | | | | |  = 4 , total_length = 48} , self = 95 , parent = Nothing , duration = 0.542493685000
| S | | | | | | | |  , status = Success , start = 2025-09-03 12:04:13.336306272 UTC , finish
| S | | | | | | | |  = 2025-09-03 12:04:13.878799957 UTC , thread_cap_info = ("ThreadId 123",
| S | | | | | | | |  0, False)}
| S | | | | | | | |  
F | | | | | | | | |  
  | | F | | | | | |  
E | |   | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E | |   | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | |   | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | |   | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | |   | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | |   | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
E | |   | | | | | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
E | |   | | | | | |  = 4 , total_length = 48} , self = 97 , parent = Nothing , duration = 0.602364205000
E | |   | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 12:04:13.42744155
E | |   | | | | | |  UTC , finish = 2025-09-03 12:04:14.029805755 UTC , thread_cap_info = ("ThreadId
E | |   | | | | | |  126", 0, False)}
E | |   | | | | | |  
| | |   | S | | | |  
| | |   E   | | | |  
| | | F     | | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F     | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F     | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | F     | | | |  = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size = 3 , total_length
| | | F     | | | |  = 32} , self = 94 , parent = Nothing , duration = 0.222247008000 , status
| | | F     | | | |  = Fail , start = 2025-09-03 12:04:13.61966916 UTC , finish = 2025-09-03
| | | F     | | | |  12:04:13.841916168 UTC , thread_cap_info = ("ThreadId 136", 1, False)}
| | | F     | | | |  
| | | | F   | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F   | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F   | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | F   | | | |  = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size = 3 , total_length
| | | | F   | | | |  = 32} , self = 102 , parent = Nothing , duration = 0.411420985000 , status
| | | | F   | | | |  = Fail , start = 2025-09-03 12:04:13.628689993 UTC , finish = 2025-09-03
| | | | F   | | | |  12:04:14.040110978 UTC , thread_cap_info = ("ThreadId 137", 1, False)}
| | | | F   | | | |  
| | | | |   | F | |  
| | | | | S |   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S |   | |  = 14 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 12 ,
| | | | | S |   | |  alphabet_size = 5 , total_length = 140} , self = 105 , parent = Nothing
| | | | | S |   | |  , duration = 1.005384934000 , status = Success , start = 2025-09-03 12:04:13.651602042
| | | | | S |   | |  UTC , finish = 2025-09-03 12:04:14.656986976 UTC , thread_cap_info = ("ThreadId
| | | | | S |   | |  139", 2, False)}
| | | | | S |   | |  
| | | | | | |   | F  
| | | | | | | S |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | S |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | S |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | S |    = 18 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 12 ,
| | | | | | | S |    alphabet_size = 6 , total_length = 180} , self = 107 , parent = Nothing
| | | | | | | S |    , duration = 0.984059690000 , status = Success , start = 2025-09-03 12:04:13.678610886
| | | | | | | S |    UTC , finish = 2025-09-03 12:04:14.662670576 UTC , thread_cap_info = ("ThreadId
| | | | | | | S |    140", 2, False)}
| | | | | | | S |    
| | | | | | | | F    
| | | | | | | | E    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | E    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | E    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | E    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | E    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | E    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 18
| | | | | | | | E    , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 12 , alphabet_size
| | | | | | | | E    = 6 , total_length = 180} , self = 111 , parent = Nothing , duration =
| | | | | | | | E    1.016149550000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | | | | E    12:04:13.701505492 UTC , finish = 2025-09-03 12:04:14.717655042 UTC , thread_cap_info
| | | | | | | | E    = ("ThreadId 142", 2, False)}
| | | | | | | | E    
| | | | | | F | |    
| | | | | | E | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
| | | | | | E | |    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size
| | | | | | E | |    = 5 , total_length = 140} , self = 110 , parent = Nothing , duration =
| | | | | | E | |    0.972578389000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | | | | E | |    12:04:13.736305658 UTC , finish = 2025-09-03 12:04:14.708884047 UTC , thread_cap_info
| | | | | | E | |    = ("ThreadId 144", 2, False)}
| | | | | | E | |    
| | F | | | | | |    
| |   F | | | | |    
| S     | | | | |    
| F     | | | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F     | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F     | | | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F     | | | | |    = 4 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| F     | | | | |    = 3 , total_length = 32} , self = 108 , parent = Nothing , duration = 0.763001390000
| F     | | | | |    , status = Fail , start = 2025-09-03 12:04:13.899697192 UTC , finish =
| F     | | | | |    2025-09-03 12:04:14.662698582 UTC , thread_cap_info = ("ThreadId 148",
| F     | | | | |    0, False)}
| F     | | | | |    
E |     | | | | |    
F |     | | | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F |     | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F |     | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
F |     | | | | |    = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size = 3 , total_length
F |     | | | | |    = 32} , self = 103 , parent = Nothing , duration = 0.326894467000 , status
F |     | | | | |    = Fail , start = 2025-09-03 12:04:14.032505905 UTC , finish = 2025-09-03
F |     | | | | |    12:04:14.359400372 UTC , thread_cap_info = ("ThreadId 152", 0, False)}
F |     | | | | |    
| | F   | | | | |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F   | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F   | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | F   | | | | |    = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size = 3 , total_length
| | F   | | | | |    = 32} , self = 104 , parent = Nothing , duration = 0.337893842000 , status
| | F   | | | | |    = Fail , start = 2025-09-03 12:04:14.036267859 UTC , finish = 2025-09-03
| | F   | | | | |    12:04:14.374161701 UTC , thread_cap_info = ("ThreadId 153", 0, False)}
| | F   | | | | |    
| | |   F | | | |    
| | | S   | | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | S   | | | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S   | | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S   | | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S   | | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S   | | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | S   | | | |    , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | | S   | | | |    = 3 , total_length = 32} , self = 121 , parent = Nothing , duration = 0.845540549000
| | | S   | | | |    , status = Success , start = 2025-09-03 12:04:14.058109016 UTC , finish
| | | S   | | | |    = 2025-09-03 12:04:14.903649565 UTC , thread_cap_info = ("ThreadId 154",
| | | S   | | | |    0, False)}
| | | S   | | | |    
F | | |   | | | |    
F | | |   | | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F | | |   | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | |   | | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | |   | | | |    = 4 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
F | | |   | | | |    = 3 , total_length = 32} , self = 120 , parent = Nothing , duration = 0.444827177000
F | | |   | | | |    , status = Fail , start = 2025-09-03 12:04:14.371451697 UTC , finish =
F | | |   | | | |    2025-09-03 12:04:14.816278874 UTC , thread_cap_info = ("ThreadId 160",
F | | |   | | | |    0, False)}
F | | |   | | | |    
| | F |   | | | |    
| |   |   S | | |    
| |   |     | S |    
| F   |     |   |    
| E   |     |   |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| E   |     |   |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| E   |     |   |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| E   |     |   |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E   |     |   |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E   |     |   |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| E   |     |   |    , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| E   |     |   |    = 3 , total_length = 32} , self = 123 , parent = Nothing , duration = 0.472855331000
| E   |     |   |    , status = Except "AsyncCancelled" , start = 2025-09-03 12:04:14.662783776
| E   |     |   |    UTC , finish = 2025-09-03 12:04:15.135639107 UTC , thread_cap_info = ("ThreadId
| E   |     |   |    166", 0, False)}
| E   |     |   |    
| |   |     E   |    
| |   |         E    
F |   |              
  |   S              
  E                  
last 4662 length 20511
