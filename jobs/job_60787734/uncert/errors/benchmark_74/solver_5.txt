Input TRS:
    1: A(a(x1)) -> A(A(x1))
    2: A(b(x1)) -> AB(x1)
    3: AB(a(x1)) -> ABA(x1)
    4: AB(b(x1)) -> AB(B(x1))
    5: ABA(a(x1)) -> ABA(A(x1))
    6: ABA(b(x1)) -> ABAB(x1)
    7: ABAB(a(x1)) -> ABABA(x1)
    8: ABAB(b(x1)) -> ABAB(B(x1))
    9: ABABA(a(x1)) -> ABABA(A(x1))
    10: ABABA(b(x1)) -> ABABAB(x1)
    11: ABABAB(a(x1)) -> ABABAB(A(x1))
    12: ABABAB(b(x1)) -> ABABABB(x1)
    13: ABABABB(a(x1)) -> ABABABB(A(x1))
    14: ABABABB(b(x1)) -> ABABABBB(x1)
    15: ABABABBB(a(x1)) -> ABABABBB(A(x1))
    16: ABABABBB(b(x1)) -> ABABABBBB(x1)
    17: ABABABBBB(a(x1)) -> ABABABBBBA(x1)
    18: ABABABBBB(b(x1)) -> ABABABBBB(B(x1))
    19: ABABABBBBA(x1) -> b(a(b(a(x1))))
    20: B(a(x1)) -> BA(x1)
    21: B(b(x1)) -> B(B(x1))
    22: BA(a(x1)) -> BA(A(x1))
    23: BA(b(x1)) -> BAB(x1)
    24: BAB(a(x1)) -> BABA(x1)
    25: BAB(b(x1)) -> BAB(B(x1))
    26: BABA(x1) -> a(b(a(b(a(b(b(b(b(a(x1))))))))))
Number of strict rules: 26
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #A(b(x1)) -> #AB(x1)
   #2: #ABA(b(x1)) -> #ABAB(x1)
   #3: #ABABABB(a(x1)) -> #ABABABB(A(x1))
   #4: #ABABABB(a(x1)) -> #A(x1)
   #5: #ABABA(a(x1)) -> #ABABA(A(x1))
   #6: #ABABA(a(x1)) -> #A(x1)
   #7: #ABABAB(a(x1)) -> #ABABAB(A(x1))
   #8: #ABABAB(a(x1)) -> #A(x1)
   #9: #BAB(a(x1)) -> #BABA(x1)
   #10: #BA(b(x1)) -> #BAB(x1)
   #11: #ABABAB(b(x1)) -> #ABABABB(x1)
   #12: #ABABABB(b(x1)) -> #ABABABBB(x1)
   #13: #BAB(b(x1)) -> #BAB(B(x1))
   #14: #BAB(b(x1)) -> #B(x1)
   #15: #B(a(x1)) -> #BA(x1)
   #16: #ABAB(a(x1)) -> #ABABA(x1)
   #17: #ABABA(b(x1)) -> #ABABAB(x1)
   #18: #ABA(a(x1)) -> #ABA(A(x1))
   #19: #ABA(a(x1)) -> #A(x1)
   #20: #BA(a(x1)) -> #BA(A(x1))
   #21: #BA(a(x1)) -> #A(x1)
   #22: #ABABABBBB(a(x1)) -> #ABABABBBBA(x1)
   #23: #B(b(x1)) -> #B(B(x1))
   #24: #B(b(x1)) -> #B(x1)
   #25: #ABABABBB(b(x1)) -> #ABABABBBB(x1)
   #26: #AB(a(x1)) -> #ABA(x1)
   #27: #A(a(x1)) -> #A(A(x1))
   #28: #A(a(x1)) -> #A(x1)
   #29: #ABAB(b(x1)) -> #ABAB(B(x1))
   #30: #ABAB(b(x1)) -> #B(x1)
   #31: #ABABABBB(a(x1)) -> #ABABABBB(A(x1))
   #32: #ABABABBB(a(x1)) -> #A(x1)
   #33: #AB(b(x1)) -> #AB(B(x1))
   #34: #AB(b(x1)) -> #B(x1)
   #35: #ABABABBBB(b(x1)) -> #ABABABBBB(B(x1))
   #36: #ABABABBBB(b(x1)) -> #B(x1)
Number of SCCs: 1, DPs: 32, edges: 72
	SCC { #1..8 #10..12 #14..21 #23..34 #36 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: x1_1 + x1_2; (/ 1 8) + x1_2
  #BA(x1)	weight: x1_1; x1_1
ABABABBBB(x1)	weight: x1_1; 0
#ABABABB(x1)	weight: x1_1; x1_1
ABABABBBBA(x1)	weight: x1_1 + x1_2; 0
  ABAB(x1)	weight: x1_1; 0
#ABABA(x1)	weight: x1_1 + x1_2; x1_1
     b(x1)	weight: x1_1; 0
   #B(x1)	weight: x1_1; x1_1
#BABA(x1)	weight: 0; 0
#ABAB(x1)	weight: x1_1; x1_1
    AB(x1)	weight: x1_1; 0
#ABABABBBBA(x1)	weight: 0; 0
 #ABA(x1)	weight: x1_1; x1_1 + x1_2
   BAB(x1)	weight: x1_1; (/ 1 8) + x1_1
     B(x1)	weight: x1_1; (/ 1 8) + x1_1
 #BAB(x1)	weight: x1_1; x1_1
ABABAB(x1)	weight: x1_1; 0
ABABABBB(x1)	weight: x1_1; 0
     A(x1)	weight: x1_1; (/ 1 16)
   #A(x1)	weight: x1_1; x1_1
   ABA(x1)	weight: x1_1; 0
ABABABB(x1)	weight: x1_1; 0
#ABABAB(x1)	weight: x1_1; x1_1
 ABABA(x1)	weight: x1_1; 0
  BABA(x1)	weight: x1_1 + x1_2; (/ 1 8)
#ABABABBB(x1)	weight: x1_1; x1_1
#ABABABBBB(x1)	weight: x1_1; x1_1
  #AB(x1)	weight: x1_1; x1_1
    BA(x1)	weight: x1_1; (/ 1 8) + x1_1
    Usable rules: { 1..26 }
    Removed DPs: #5 #6
Number of SCCs: 1, DPs: 30, edges: 66
	SCC { #1..4 #7 #8 #10..12 #14..21 #23..34 #36 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: x1_1 + x1_2; (/ 3 8) + x1_2
  #BA(x1)	weight: x1_1 + x1_2; x1_1
ABABABBBB(x1)	weight: x1_1; 0
#ABABABB(x1)	weight: (/ 1 4) + x1_1; x1_1
ABABABBBBA(x1)	weight: x1_1 + x1_2; 0
  ABAB(x1)	weight: x1_1; 0
#ABABA(x1)	weight: (/ 1 4) + x1_1 + x1_2; x1_1
     b(x1)	weight: x1_1; 0
   #B(x1)	weight: x1_1; x1_1
#BABA(x1)	weight: 0; 0
#ABAB(x1)	weight: (/ 1 4) + x1_1; x1_1
    AB(x1)	weight: x1_1; 0
#ABABABBBBA(x1)	weight: 0; 0
 #ABA(x1)	weight: (/ 1 4) + x1_1; x1_1 + x1_2
   BAB(x1)	weight: x1_1; (/ 3 8) + x1_1
     B(x1)	weight: x1_1; (/ 3 8) + x1_1
 #BAB(x1)	weight: x1_1; x1_1
ABABAB(x1)	weight: x1_1; 0
ABABABBB(x1)	weight: x1_1; 0
     A(x1)	weight: x1_1; (/ 1 8)
   #A(x1)	weight: (/ 1 4) + x1_1; x1_1 + x1_2
   ABA(x1)	weight: x1_1; 0
ABABABB(x1)	weight: x1_1; 0
#ABABAB(x1)	weight: (/ 1 4) + x1_1; x1_1
 ABABA(x1)	weight: x1_1; 0
  BABA(x1)	weight: x1_1 + x1_2; (/ 3 8)
#ABABABBB(x1)	weight: (/ 1 4) + x1_1; x1_1
#ABABABBBB(x1)	weight: (/ 1 8) + x1_1; x1_1
  #AB(x1)	weight: (/ 1 4) + x1_1; x1_1
    BA(x1)	weight: x1_1; (/ 3 8) + x1_1
    Usable rules: { 1..26 }
    Removed DPs: #20 #21 #25 #30 #34 #36
Number of SCCs: 2, DPs: 23, edges: 45
	SCC { #10 #14 #15 #23 #24 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: x1_1; 0
  #BA(x1)	weight: (/ 1 32) + x1_1; 0
ABABABBBB(x1)	weight: 0; (/ 3 32)
#ABABABB(x1)	weight: (/ 1 16); 0
ABABABBBBA(x1)	weight: 0; (/ 3 32)
  ABAB(x1)	weight: (/ 1 32); (/ 3 32)
#ABABA(x1)	weight: (/ 1 16); 0
     b(x1)	weight: x1_2; (/ 3 32) + x1_1 + x1_2
   #B(x1)	weight: (/ 1 16) + x1_1 + x1_2; 0
#BABA(x1)	weight: 0; 0
#ABAB(x1)	weight: (/ 1 16); 0
    AB(x1)	weight: (/ 1 32); (/ 3 32)
#ABABABBBBA(x1)	weight: 0; 0
 #ABA(x1)	weight: (/ 1 16); 0
   BAB(x1)	weight: (/ 1 32); 0
     B(x1)	weight: (/ 1 32); (/ 1 32)
 #BAB(x1)	weight: x1_2; 0
ABABAB(x1)	weight: 0; (/ 3 32)
ABABABBB(x1)	weight: 0; (/ 3 32)
     A(x1)	weight: (/ 1 32); (/ 3 32)
   #A(x1)	weight: (/ 1 16); 0
   ABA(x1)	weight: (/ 1 32); (/ 3 32)
ABABABB(x1)	weight: 0; (/ 3 32)
#ABABAB(x1)	weight: (/ 1 16); 0
 ABABA(x1)	weight: (/ 1 32); (/ 3 32)
  BABA(x1)	weight: (/ 1 32); 0
#ABABABBB(x1)	weight: (/ 1 16); 0
#ABABABBBB(x1)	weight: (/ 1 32); 0
  #AB(x1)	weight: (/ 1 16); 0
    BA(x1)	weight: (/ 1 32); (/ 1 32)
    Usable rules: { 1..26 }
    Removed DPs: #10 #14 #15 #23 #24
Number of SCCs: 1, DPs: 18, edges: 36
	SCC { #1..4 #7 #8 #11 #12 #16..19 #26..29 #32 #33 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: (/ 1 16) + x1_1; x1_1
  #BA(x1)	weight: (/ 1 32); 0
ABABABBBB(x1)	weight: x1_2; x1_2
#ABABABB(x1)	weight: (/ 1 16) + x1_2; 0
ABABABBBBA(x1)	weight: x1_1; x1_1
  ABAB(x1)	weight: (/ 1 32) + x1_2; x1_2
#ABABA(x1)	weight: (/ 1 16) + x1_1; 0
     b(x1)	weight: x1_2; x1_2
   #B(x1)	weight: (/ 1 16); 0
#BABA(x1)	weight: 0; 0
#ABAB(x1)	weight: (/ 1 16) + x1_2; 0
    AB(x1)	weight: (/ 1 32) + x1_2; x1_2
#ABABABBBBA(x1)	weight: 0; 0
 #ABA(x1)	weight: (/ 1 16) + x1_1; 0
   BAB(x1)	weight: (/ 1 16) + x1_2; x1_2
     B(x1)	weight: (/ 1 16) + x1_2; x1_2
 #BAB(x1)	weight: 0; 0
ABABAB(x1)	weight: x1_2; x1_2
ABABABBB(x1)	weight: x1_2; x1_2
     A(x1)	weight: (/ 1 32) + x1_1; x1_1
   #A(x1)	weight: (/ 1 16) + x1_1; 0
   ABA(x1)	weight: (/ 1 32) + x1_1; x1_1
ABABABB(x1)	weight: x1_2; x1_2
#ABABAB(x1)	weight: (/ 1 16) + x1_2; 0
 ABABA(x1)	weight: (/ 1 32) + x1_1; x1_1
  BABA(x1)	weight: (/ 1 16) + x1_1; x1_1
#ABABABBB(x1)	weight: (/ 1 16) + x1_2; 0
#ABABABBBB(x1)	weight: (/ 1 32); 0
  #AB(x1)	weight: (/ 1 16) + x1_2; 0
    BA(x1)	weight: (/ 1 16) + x1_1; x1_1
    Usable rules: { 1..26 }
    Removed DPs: #18 #19 #27 #28
Number of SCCs: 1, DPs: 14, edges: 20
	SCC { #1..4 #7 #8 #11 #12 #16 #17 #26 #29 #32 #33 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
