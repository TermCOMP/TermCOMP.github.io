last 3128 length 14190
CNF 3128 vars 14190 clauses
last 4184 length 19453
CNF 4184 vars 19453 clauses
last 5314 length 23940
CNF 5314 vars 23940 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4797, clauses: 18443
last 4797 length 18443
CNF 4797 vars 18443 clauses
last 6055 length 27957
CNF 6055 vars 27957 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4797, clauses: 18443, status: Satisfied, time: 0.051100654s
last 3900 length 17860
last 5568 length 25717
CNF 3900 vars 17860 clauses
CNF 5568 vars 25717 clauses
last 982 length 4228
last 1026 length 4215
CNF 1026 vars 4215 clauses
CNF 982 vars 4228 clauses
last 879 length 3690
CNF 879 vars 3690 clauses
last 1782 length 7723
CNF 1782 vars 7723 clauses
last 6804 length 31517
CNF 6804 vars 31517 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4494, clauses: 17168
last 4494 length 17168
CNF 4494 vars 17168 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1798, clauses: 6601
last 1798 length 6601
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2220, clauses: 8438
last 2220 length 8438
CNF 1798 vars 6601 clauses
CNF 2220 vars 8438 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1798, clauses: 6601, status: Satisfied, time: 0.109915927s
last 10844 length 53453
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2220, clauses: 8438, status: Satisfied, time: 0.078265703s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4494, clauses: 17168, status: Satisfied, time: 0.227235597s
CNF 10844 vars 53453 clauses
last 836 length 3422
last 1430 length 6163
CNF 1430 vars 6163 clauses
CNF 836 vars 3422 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5735, clauses: 22590
last 5735 length 22590
last 777 length 3298
last 1181 length 5011
CNF 5735 vars 22590 clauses
CNF 1181 vars 5011 clauses
CNF 777 vars 3298 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2009, clauses: 7491
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6268, clauses: 26113
last 2009 length 7491
last 6268 length 26113
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5735, clauses: 22590, status: Satisfied, time: 0.145542925s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1822, clauses: 6655
CNF 2009 vars 7491 clauses
CNF 6268 vars 26113 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6775, clauses: 28367
last 4048 length 18582
last 6062 length 27322
last 1822 length 6655
last 6775 length 28367
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2009, clauses: 7491, status: Unsatisfied, time: 0.35393297s
CNF 4048 vars 18582 clauses
CNF 6062 vars 27322 clauses
CNF 1822 vars 6655 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6268, clauses: 26113, status: Unsatisfied, time: 0.485148907s
last 6804 length 31517
CNF 6775 vars 28367 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3825, clauses: 15674
CNF 6804 vars 31517 clauses
last 10844 length 53453
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1822, clauses: 6655, status: Unsatisfied, time: 0.531832812s
last 3825 length 15674
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3304, clauses: 13151
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4812, clauses: 18161
CNF 10844 vars 53453 clauses
last 3304 length 13151
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5735, clauses: 22590
CNF 3825 vars 15674 clauses
last 4812 length 18161
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4096, clauses: 16860
last 5735 length 22590
CNF 3304 vars 13151 clauses
CNF 4812 vars 18161 clauses
last 4096 length 16860
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18741, clauses: 79089
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6775, clauses: 28367, status: Unsatisfied, time: 1.040203976s
CNF 5735 vars 22590 clauses
CNF 4096 vars 16860 clauses
last 18741 length 79089
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3825, clauses: 15674, status: Unsatisfied, time: 0.625138462s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3025, clauses: 11688
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5735, clauses: 22590, status: Satisfied, time: 0.379169107s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4812, clauses: 18161, status: Satisfied, time: 0.47223721s
CNF 18741 vars 79089 clauses
last 3025 length 11688
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3304, clauses: 13151, status: Unsatisfied, time: 0.964211346s
**************************************************
summary
**************************************************
SRS with 3 rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 12 rules on 4 letters       mirror
SRS with 12 rules on 4 letters       DP
SRS with 48 strict rules and 12 weak rules on 8 letters       weights
SRS with 12 strict rules and 12 weak rules on 8 letters       EDG
2 sub-proofs
  1 SRS with 6 strict rules and 12 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 2 strict rules and 12 weak rules on 6 letters       weights
  SRS with 0 strict rules and 12 weak rules on 4 letters       EDG

  2 SRS with 6 strict rules and 12 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 2 strict rules and 12 weak rules on 6 letters       weights
  SRS with 0 strict rules and 12 weak rules on 4 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a, b, a] -> [a, a, a, b] {- Input 0 -}
  [b, b, b, a] -> [a, a, a, b] {- Input 1 -}
  [b, a, a, b] -> [b, b, b, a] {- Input 2 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, a], [a, b], [b, a], [a, a]] -> [ [a, a] , [a, a] , [a, a] , [a, b] , [ b , a ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, a], [a, b], [b, a], [a, b]] -> [ [a, a] , [a, a] , [a, a] , [a, b] , [ b , b ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[b, a], [a, a], [a, b], [b, a], [a, a]] -> [ [b, a] , [a, a] , [a, a] , [a, b] , [ b , a ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, a], [a, b], [b, a], [a, b]] -> [ [b, a] , [a, a] , [a, a] , [a, b] , [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, b], [b, b], [b, b], [b, a], [a, a]] -> [ [a, a] , [a, a] , [a, a] , [a, b] , [ b , a ] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b], [b, b], [b, b], [b, a], [a, b]] -> [ [a, a] , [a, a] , [a, a] , [a, b] , [ b , b ] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, b], [b, b], [b, b], [b, a], [a, a]] -> [ [b, a] , [a, a] , [a, a] , [a, b] , [ b , a ] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, b], [b, b], [b, b], [b, a], [a, b]] -> [ [b, a] , [a, a] , [a, a] , [a, b] , [ b , b ] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[a, b], [b, a], [a, a], [a, b], [b, a]] -> [ [a, b] , [b, b] , [b, b] , [b, a] , [ a , a ] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b], [b, a], [a, a], [a, b], [b, b]] -> [ [a, b] , [b, b] , [b, b] , [b, a] , [ a , b ] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[b, b], [b, a], [a, a], [a, b], [b, a]] -> [ [b, b] , [b, b] , [b, b] , [b, a] , [ a , a ] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, b], [b, a], [a, a], [a, b], [b, b]] -> [ [b, b] , [b, b] , [b, b] , [b, a] , [ a , b ] ] {- Semlab 1 (Concon 1 (Input 2)) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [[a, a], [b, a], [a, b], [a, a], [a, a]] -> [ [b, a] , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- Mirror (Semlab 0 (Concon 0 (Input 0))) -}
  [[a, b], [b, a], [a, b], [a, a], [a, a]] -> [ [b, b] , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- Mirror (Semlab 0 (Concon 1 (Input 0))) -}
  [[a, a], [b, a], [a, b], [a, a], [b, a]] -> [ [b, a] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- Mirror (Semlab 1 (Concon 0 (Input 0))) -}
  [[a, b], [b, a], [a, b], [a, a], [b, a]] -> [ [b, b] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- Mirror (Semlab 1 (Concon 1 (Input 0))) -}
  [[a, a], [b, a], [b, b], [b, b], [a, b]] -> [ [b, a] , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- Mirror (Semlab 0 (Concon 0 (Input 1))) -}
  [[a, b], [b, a], [b, b], [b, b], [a, b]] -> [ [b, b] , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- Mirror (Semlab 0 (Concon 1 (Input 1))) -}
  [[a, a], [b, a], [b, b], [b, b], [b, b]] -> [ [b, a] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- Mirror (Semlab 1 (Concon 0 (Input 1))) -}
  [[a, b], [b, a], [b, b], [b, b], [b, b]] -> [ [b, b] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- Mirror (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, a], [a, b], [a, a], [b, a], [a, b]] -> [ [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 0 (Input 2))) -}
  [[b, b], [a, b], [a, a], [b, a], [a, b]] -> [ [a, b] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 1 (Input 2))) -}
  [[b, a], [a, b], [a, a], [b, a], [b, b]] -> [ [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, b], [a, b], [a, a], [b, a], [b, b]] -> [ [a, b] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- Mirror (Semlab 1 (Concon 1 (Input 2))) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [[a, a], [b, a], [a, b], [a, a], [a, a]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a], [a, b], [a, a], [a, a]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a], [a, b], [a, a], [b, a]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a], [a, b], [a, a], [b, a]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a], [b, b], [b, b], [a, b]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [b, b], [b, b], [a, b]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, a], [b, a], [b, b], [b, b], [b, b]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [b, b], [b, b], [b, b]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, a], [a, b], [a, a], [b, a], [a, b]] ->= [ [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b], [a, a], [b, a], [a, b]] ->= [ [a, b] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}CNF 3025 vars 11688 clauses

  [[b, a], [a, b], [a, a], [b, a], [b, b]] ->= [ [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b], [a, a], [b, a], [b, b]] ->= [ [a, b] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[a, a]#, [b, a], [a, b], [a, a], [a, a]] |-> [ [a, a]# , [a, a] , [ a , a ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, a]#, [b, a], [a, b], [a, a], [a, a]] |-> [ [a, b]# , [a, a] , [a, a] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, a]#, [b, a], [a, b], [a, a], [a, a]] |-> [ [b, a]# , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, a]#, [b, a], [a, b], [a, a], [b, a]] |-> [ [a, a]# , [a, a] , [ b , a ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a]#, [b, a], [a, b], [a, a], [b, a]] |-> [ [a, b]# , [a, a] , [a, a] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a]#, [b, a], [a, b], [a, a], [b, a]] |-> [ [b, a]# , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a]#, [b, a], [b, b], [b, b], [a, b]] |-> [ [ a , a ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, a]#, [b, a], [b, b], [b, b], [a, b]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, a]#, [b, a], [b, b], [b, b], [a, b]] |-> [ [a, a]# , [a, a] , [ a , a ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, a]#, [b, a], [b, b], [b, b], [a, b]] |-> [ [a, b]# , [a, a] , [a, a] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, a]#, [b, a], [b, b], [b, b], [a, b]] |-> [ [b, a]# , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, a]#, [b, a], [b, b], [b, b], [b, b]] |-> [ [a, a]# , [a, a] , [ b , a ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, a]#, [b, a], [b, b], [b, b], [b, b]] |-> [ [a, a]# , [ b , a ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, a]#, [b, a], [b, b], [b, b], [b, b]] |-> [ [a, b]# , [a, a] , [a, a] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, a]#, [b, a], [b, b], [b, b], [b, b]] |-> [ [ b , a ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, a]#, [b, a], [b, b], [b, b], [b, b]] |-> [ [b, a]# , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b]#, [b, a], [a, b], [a, a], [a, a]] |-> [ [a, a]# , [a, a] , [ a , a ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [b, a], [a, b], [a, a], [a, a]] |-> [ [a, b]# , [a, a] , [a, a] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [b, a], [a, b], [a, a], [a, a]] |-> [ [b, b]# , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [b, a], [a, b], [a, a], [b, a]] |-> [ [a, a]# , [a, a] , [ b , a ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, b]#, [b, a], [a, b], [a, a], [b, a]] |-> [ [a, b]# , [a, a] , [a, a] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, b]#, [b, a], [a, b], [a, a], [b, a]] |-> [ [b, b]# , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, b]#, [b, a], [b, b], [b, b], [a, b]] |-> [ [ a , a ]# ] {- DP (Top 4) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, b]#, [b, a], [b, b], [b, b], [a, b]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, b]#, [b, a], [b, b], [b, b], [a, b]] |-> [ [a, a]# , [a, a] , [ a , a ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, b]#, [b, a], [b, b], [b, b], [a, b]] |-> [ [a, b]# , [a, a] , [a, a] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, b]#, [b, a], [b, b], [b, b], [a, b]] |-> [ [b, b]# , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, b]#, [b, a], [b, b], [b, b], [b, b]] |-> [ [a, a]# , [a, a] , [ b , a ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, b]#, [b, a], [b, b], [b, b], [b, b]] |-> [ [a, a]# , [ b , a ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, b]#, [b, a], [b, b], [b, b], [b, b]] |-> [ [a, b]# , [a, a] , [a, a] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, b]#, [b, a], [b, b], [b, b], [b, b]] |-> [ [ b , a ]# ] {- DP (Top 4) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, b]#, [b, a], [b, b], [b, b], [b, b]] |-> [ [b, b]# , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a], [b, a], [a, b]] |-> [ [a, a]# , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [a, b], [a, a], [b, a], [a, b]] |-> [ [b, a]# , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [a, b], [a, a], [b, a], [a, b]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [a, b], [a, a], [b, a], [a, b]] |-> [ [b, b]# , [b, b] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [a, b], [a, a], [b, a], [b, b]] |-> [ [a, a]# , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [a, b], [a, a], [b, a], [b, b]] |-> [ [b, a]# , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [a, b], [a, a], [b, a], [b, b]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [a, b], [a, a], [b, a], [b, b]] |-> [ [b, b]# , [b, b] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b]#, [a, b], [a, a], [b, a], [a, b]] |-> [ [a, b]# , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b]#, [a, b], [a, a], [b, a], [a, b]] |-> [ [b, a]# , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b]#, [a, b], [a, a], [b, a], [a, b]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b]#, [a, b], [a, a], [b, a], [a, b]] |-> [ [b, b]# , [b, b] , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b]#, [a, b], [a, a], [b, a], [b, b]] |-> [ [a, b]# , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [a, b], [a, a], [b, a], [b, b]] |-> [ [b, a]# , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [a, b], [a, a], [b, a], [b, b]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b]#, [a, b], [a, a], [b, a], [b, b]] |-> [ [b, b]# , [b, b] , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
reason
  ([a, a], 2/1)
  ([a, b], 2/1)
  ([b, a], 2/1)
  ([b, b], 2/1)
  ([a, a]#, 1/1)
  ([a, b]#, 1/1)
  ([b, a]#, 1/1)
  ([b, b]#, 1/1)
   property Termination
has value Just True
for SRS
  [[a, a], [b, a], [a, b], [a, a], [a, a]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a], [a, b], [a, a], [a, a]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a], [a, b], [a, a], [b, a]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a], [a, b], [a, a], [b, a]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a], [b, b], [b, b], [a, b]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [b, b], [b, b], [a, b]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, a], [b, a], [b, b], [b, b], [b, b]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [b, b], [b, b], [b, b]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, a], [a, b], [a, a], [b, a], [a, b]] ->= [ [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b], [a, a], [b, a], [a, b]] ->= [ [a, b] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, a], [a, b], [a, a], [b, a], [b, b]] ->= [ [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b], [a, a], [b, a], [b, b]] ->= [ [a, b] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[a, a]#, [b, a], [a, b], [a, a], [a, a]] |-> [ [b, a]# , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, a]#, [b, a], [a, b], [a, a], [b, a]] |-> [ [b, a]# , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, a]#, [b, a], [b, b], [b, b], [a, b]] |-> [ [b, a]# , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, a]#, [b, a], [b, b], [b, b], [b, b]] |-> [ [b, a]# , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b]#, [b, a], [a, b], [a, a], [a, a]] |-> [ [b, b]# , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, b]#, [b, a], [a, b], [a, a], [b, a]] |-> [ [b, b]# , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, b]#, [b, a], [b, b], [b, b], [a, b]] |-> [ [b, b]# , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, b]#, [b, a], [b, b], [b, b], [b, b]] |-> [ [b, b]# , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, a]#, [a, b], [a, a], [b, a], [a, b]] |-> [ [a, a]# , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [a, b], [a, a], [b, a], [b, b]] |-> [ [a, a]# , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b]#, [a, b], [a, a], [b, a], [a, b]] |-> [ [a, b]# , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b]#, [a, b], [a, a], [b, a], [b, b]] |-> [ [a, b]# , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, a]#, [b, a], [a, b], [a, a], [a, a]] |-> [ [b, a]# , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, a]#, [a, b], [a, a], [b, a], [a, b]] |-> [ [a, a]# , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[a, a]#, [b, a], [a, b], [a, a], [b, a]] |-> [ [b, a]# , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [a, b], [a, a], [b, a], [b, b]] |-> [ [a, a]# , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[a, a]#, [b, a], [b, b], [b, b], [a, b]] |-> [ [b, a]# , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, a]#, [b, a], [b, b], [b, b], [b, b]] |-> [ [b, a]# , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, a], [b, a], [a, b], [a, a], [a, a]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a], [a, b], [a, a], [a, a]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a], [a, b], [a, a], [b, a]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a], [a, b], [a, a], [b, a]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a], [b, b], [b, b], [a, b]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [b, b], [b, b], [a, b]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, a], [b, a], [b, b], [b, b], [b, b]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [b, b], [b, b], [b, b]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, a], [a, b], [a, a], [b, a], [a, b]] ->= [ [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b], [a, a], [b, a], [a, b]] ->= [ [a, b] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, a], [a, b], [a, a], [b, a], [b, b]] ->= [ [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b], [a, a], [b, a], [b, b]] ->= [ [a, b] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A  3A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [a, b]
  , Wk  / 3A 6A 6A - \
        | 3A 6A 6A - |
        | 3A 6A 6A - |
        \ -  -  -  - / )
  ( [b, a]
  , Wk  / 0A  3A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, b]
  , Wk  / 3A 6A 6A - \
        | 0A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( [a, a]#
  , Wk  / 4A 7A 7A - \
        | 4A 7A 7A - |
        | 4A 7A 7A - |
        \ -  -  -  - / )
  ( [b, a]#
  , Wk  / 3A 3A 4A - \
        | 3A 3A 4A - |
        | 3A 3A 4A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [[b, a]#, [a, b], [a, a], [b, a], [a, b]] |-> [ [a, a]# , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [a, b], [a, a], [b, a], [b, b]] |-> [ [a, a]# , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[a, a], [b, a], [a, b], [a, a], [a, a]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a], [a, b], [a, a], [a, a]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a], [a, b], [a, a], [b, a]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a], [a, b], [a, a], [b, a]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a], [b, b], [b, b], [a, b]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [b, b], [b, b], [a, b]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, a], [b, a], [b, b], [b, b], [b, b]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [b, b], [b, b], [b, b]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, a], [a, b], [a, a], [b, a], [a, b]] ->= [ [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b], [a, a], [b, a], [a, b]] ->= [ [a, b] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, a], [a, b], [a, a], [b, a], [b, b]] ->= [ [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b], [a, a], [b, a], [b, b]] ->= [ [a, b] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([a, a]#, 0/1)
  ([b, a]#, 1/1)
   property Termination
has value Just True
for SRS
  [[a, a], [b, a], [a, b], [a, a], [a, a]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a], [a, b], [a, a], [a, a]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a], [a, b], [a, a], [b, a]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a], [a, b], [a, a], [b, a]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a], [b, b], [b, b], [a, b]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [b, b], [b, b], [a, b]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, a], [b, a], [b, b], [b, b], [b, b]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [b, b], [b, b], [b, b]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, a], [a, b], [a, a], [b, a], [a, b]] ->= [ [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b], [a, a], [b, a], [a, b]] ->= [ [a, b] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, a], [a, b], [a, a], [b, a], [b, b]] ->= [ [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b], [a, a], [b, a], [b, b]] ->= [ [a, b] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [[a, b]#, [b, a], [a, b], [a, a], [a, a]] |-> [ [b, b]# , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b]#, [a, b], [a, a], [b, a], [a, b]] |-> [ [a, b]# , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[a, b]#, [b, a], [a, b], [a, a], [b, a]] |-> [ [b, b]# , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b]#, [a, b], [a, a], [b, a], [b, b]] |-> [ [a, b]# , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[a, b]#, [b, a], [b, b], [b, b], [a, b]] |-> [ [b, b]# , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, b]#, [b, a], [b, b], [b, b], [b, b]] |-> [ [b, b]# , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[a, a], [b, a], [a, b], [a, a], [a, a]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a], [a, b], [a, a], [a, a]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a], [a, b], [a, a], [b, a]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a], [a, b], [a, a], [b, a]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a], [b, b], [b, b], [a, b]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [b, b], [b, b], [a, b]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, a], [b, a], [b, b], [b, b], [b, b]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [b, b], [b, b], [b, b]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, a], [a, b], [a, a], [b, a], [a, b]] ->= [ [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b], [a, a], [b, a], [a, b]] ->= [ [a, b] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, a], [a, b], [a, a], [b, a], [b, b]] ->= [ [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b], [a, a], [b, a], [b, b]] ->= [ [a, b] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A  3A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( [a, b]
  , Wk  / 3A 6A 6A - \
        | 3A 6A 6A - |
        | 3A 6A 6A - |
        \ -  -  -  - / )
  ( [b, a]
  , Wk  / 0A  3A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, b]
  , Wk  / 3A 6A 6A - \
        | 0A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( [a, b]#
  , Wk  / 4A 7A 7A - \
        | 4A 7A 7A - |
        | 4A 7A 7A - |
        \ -  -  -  - / )
  ( [b, b]#
  , Wk  / 3A 3A 4A - \
        | 3A 3A 4A - |
        | 3A 3A 4A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [[b, b]#, [a, b], [a, a], [b, a], [a, b]] |-> [ [a, b]# , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b]#, [a, b], [a, a], [b, a], [b, b]] |-> [ [a, b]# , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[a, a], [b, a], [a, b], [a, a], [a, a]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a], [a, b], [a, a], [a, a]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a], [a, b], [a, a], [b, a]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a], [a, b], [a, a], [b, a]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a], [b, b], [b, b], [a, b]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [b, b], [b, b], [a, b]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, a], [b, a], [b, b], [b, b], [b, b]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [b, b], [b, b], [b, b]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, a], [a, b], [a, a], [b, a], [a, b]] ->= [ [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b], [a, a], [b, a], [a, b]] ->= [ [a, b] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, a], [a, b], [a, a], [b, a], [b, b]] ->= [ [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b], [a, a], [b, a], [b, b]] ->= [ [a, b] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([a, b]#, 0/1)
  ([b, b]#, 1/1)
   property Termination
has value Just True
for SRS
  [[a, a], [b, a], [a, b], [a, a], [a, a]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a], [a, b], [a, a], [a, a]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a], [a, b], [a, a], [b, a]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[a, b], [b, a], [a, b], [a, a], [b, a]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[a, a], [b, a], [b, b], [b, b], [a, b]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [b, b], [b, b], [a, b]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, a], [b, a], [b, b], [b, b], [b, b]] ->= [ [b, a] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[a, b], [b, a], [b, b], [b, b], [b, b]] ->= [ [b, b] , [a, b] , [a, a] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, a], [a, b], [a, a], [b, a], [a, b]] ->= [ [a, a] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b], [a, a], [b, a], [a, b]] ->= [ [a, b] , [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, a], [a, b], [a, a], [b, a], [b, b]] ->= [ [a, a] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, b], [a, b], [a, a], [b, a], [b, b]] ->= [ [a, b] , [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
reason
  EDG

**************************************************
skeleton: (3,2)\TileAllAll{2}\Mirror(12,4)\Deepee(48/12,8)\Weight(12/12,8)\EDG[(6/12,6)\Matrix{\Arctic}{3}(2/12,6)\Weight(0/12,4)\EDG[],(6/12,6)\Matrix{\Arctic}{3}(2/12,6)\Weight(0/12,4)\EDG[]]
**************************************************
let {slowdown = 1.0}
in let Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10545, clauses: 44970
last 10545 length 44970
{verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 0.901380711000
  min duration 0.066058123000
  total durat. 3.340743251000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 10
  max duration 0.643517027000
  min duration 0.047797313000
  total durat. 2.752926476000
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.387329433000
  min duration 0.721011064000
  total durat. 2.108340497000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 3
      , alphabet_size = 3
      , total_length = 32}
    , self = 134
    , parent = Nothing
    , duration = 1.387329433000
    , status = Fail
    , start = 2025-09-03 11:58:51.85679389 UTC
    , finish = 2025-09-03 11:58:53.244123323 UTC
    , thread_cap_info = ("ThreadId 174", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 5
  max duration 0.835666232000
  min duration 0.246537651000
  total durat. 2.223102455000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 1.109120987000
  min duration 0.126073669000
  total durat. 3.867380458000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 12
      , alphabet_size = 6
      , total_length = 180}
    , self = 138
    , parent = Nothing
    , duration = 1.064301486000
    , status = Success
    , start = 2025-09-03 11:58:52.742690554 UTC
    , finish = 2025-09-03 11:58:53.80699204 UTC
    , thread_cap_info = ("ThreadId 193", 2, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 12
      , alphabet_size = 5
      , total_length = 140}
    , self = 136
    , parent = Nothing
    , duration = 1.109120987000
    , status = Success
    , start = 2025-09-03 11:58:52.43783019 UTC
    , finish = 2025-09-03 11:58:53.546951177 UTC
    , thread_cap_info = ("ThreadId 188", 2, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.902056722000
  min duration 0.667900242000
  total durat. 1.569956964000
**************************************************
F                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                , closure = Backward\n , start_strict_only = True\n , max_closure_length
F                = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F                = 24} , self = 61 , parent = Nothing , duration = 0.190574577000 , status
F                = Fail , start = 2025-09-03 11:58:50.667410474 UTC , finish = 2025-09-03
F                11:58:50.857985051 UTC , thread_cap_info = ("ThreadId 35", 0, False)}
F                
| F              Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| F              , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| F              = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| F              , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| F              = False}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| F              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| F              = 24} , self = 51 , parent = Nothing , duration = 0.110248957000 , status
| F              = Fail , start = 2025-09-03 11:58:50.667431494 UTC , finish = 2025-09-03
| F              CNF 10545 vars 44970 clauses
11:58:50.777680451 UTC , thread_cap_info = ("ThreadId 22", 3, False)}
| F              
| | F            Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | F            , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | F            = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | F            Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | F            8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | F            = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | F            ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | F            1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | F            = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| | F            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | F            = 24} , self = 65 , parent = Nothing , duration = 0.252518268000 , status
| | F            = Fail , start = 2025-09-03 11:58:50.667435083 UTC , finish = 2025-09-03
| | F            11:58:50.919953351 UTC , thread_cap_info = ("ThreadId 43", 3, False)}
| | F            
| | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | F          = 12 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | F          = 120} , self = 62 , parent = Nothing , duration = 0.205825711000 , status
| | | F          = Fail , start = 2025-09-03 11:58:50.675709983 UTC , finish = 2025-09-03
| | | F          11:58:50.881535694 UTC , thread_cap_info = ("ThreadId 62", 1, False)}
| | | F          
| | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | F        = 12 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | F        = 120} , self = 54 , parent = Nothing , duration = 0.120675824000 , status
| | | | F        = Fail , start = 2025-09-03 11:58:50.676728549 UTC , finish = 2025-09-03
| | | | F        11:58:50.797404373 UTC , thread_cap_info = ("ThreadId 64", 1, False)}
| | | | F        
| | | | | E      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | E      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | E      = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | E      = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | | | | E      = 140} , self = 68 , parent = Nothing , duration = 0.211901262000 , status
| | | | | E      = Except "AsyncCancelled" , start = 2025-09-03 11:58:50.774778895 UTC ,
| | | | | E      finish = 2025-09-03 11:58:50.986680157 UTC , thread_cap_info = ("ThreadId
| | | | | E      85", 2, False)}
| | | | | E      
| F | | | |      
| F | | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| F | | | |      = 6 , num_top_rules = 6 , num_weak_rules = 12 , alphabet_size = 6 , total_length
| F | | | |      = 180} , self = 110 , parent = Nothing , duration = 0.901380711000 , status
| F | | | |      = Fail , start = 2025-09-03 11:58:50.779039315 UTC , finish = 2025-09-03
| F | | | |      11:58:51.680420026 UTC , thread_cap_info = ("ThreadId 87", 2, False)}
| F | | | |      
| | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | | | | F    = 6 , num_top_rules = 6 , num_weak_rules = 12 , alphabet_size = 6 , total_length
| | | | | | F    = 180} , self = 93 , parent = Nothing , duration = 0.643517027000 , status
| | | | | | F    = Fail , start = 2025-09-03 11:58:50.796748947 UTC , finish = 2025-09-03
| | | | | | F    11:58:51.440265974 UTC , thread_cap_info = ("ThreadId 88", 2, False)}
| | | | | | F    
| | | | F | |    
| | | | S | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S | |    = 14 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 12 ,
| | | | S | |    alphabet_size = 5 , total_length = 140} , self = 66 , parent = Nothing
| | | | S | |    , duration = 0.126073669000 , status = Success , start = 2025-09-03 11:58:50.857245617
| | | | S | |    UTC , finish = 2025-09-03 11:58:50.983319286 UTC , thread_cap_info = ("ThreadId
| | | | S | |    95", 2, False)}
| | | | S | |    
F | | | | | |    
F | | | | | |    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
F | | | | | |    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
F | | | | | |    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
F | | | | | |    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
F | | | | | |    = Size { num_rules = 3 , num_strict_rules = 3 , num_top_rules = 0 , num_weak_rules
F | | | | | |    = 0 , alphabet_size = 2 , total_length = 24} , self = 73 , parent = Nothing
F | | | | | |    , duration = 0.287118180000 , status = Fail , start = 2025-09-03 11:58:50.876755999
F | | | | | |    UTC , finish = 2025-09-03 11:58:51.163874179 UTC , thread_cap_info = ("ThreadId
F | | | | | |    97", 0, False)}
F | | | | | |    
| | | F | | |    
| | F   | | |    
| |     S | |    
| |       E |    
| | F       |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F       |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F       |    = False\n , verbose = False}" , input_size = Size { num_rules = 13 , num_strict_rules
| | F       |    = 1 , num_top_rules = 1 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | F       |    = 130} , self = 87 , parent = Nothing , duration = 0.201426083000 , status
| | F       |    = Fail , start = 2025-09-03 11:58:50.987216531 UTC , finish = 2025-09-03
| | F       |    11:58:51.188642614 UTC , thread_cap_info = ("ThreadId 112", 2, False)}
| | F       |    
| | | F     |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F     |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F     |    = False\n , verbose = False}" , input_size = Size { num_rules = 13 , num_strict_rules
| | | F     |    = 1 , num_top_rules = 1 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | | F     |    = 130} , self = 88 , parent = Nothing , duration = 0.222275920000 , status
| | | F     |    = Fail , start = 2025-09-03 11:58:50.997680968 UTC , finish = 2025-09-03
| | | F     |    11:58:51.219956888 UTC , thread_cap_info = ("ThreadId 111", 2, False)}
| | | F     |    
F | | |     |    
  | F |     |    
F |   |     |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F |   |     |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F |   |     |    = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
F |   |     |    = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size = 3 , total_length
F |   |     |    = 32} , self = 92 , parent = Nothing , duration = 0.147036675000 , status
F |   |     |    = Fail , start = 2025-09-03 11:58:51.189702251 UTC , finish = 2025-09-03
F |   |     |    11:58:51.336738926 UTC , thread_cap_info = ("ThreadId 129", 0, False)}
F |   |     |    
| | F |     |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F |     |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F |     |    = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | F |     |    = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | F |     |    = 48} , self = 91 , parent = Nothing , duration = 0.143421965000 , status
| | F |     |    = Fail , start = 2025-09-03 11:58:51.192446686 UTC , finish = 2025-09-03
| | F |     |    11:58:51.335868651 UTC , thread_cap_info = ("ThreadId 126", 0, False)}
| | F |     |    
| | | | S   |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S   |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S   |    = 13 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 12 ,
| | | | S   |    alphabet_size = 5 , total_length = 130} , self = 98 , parent = Nothing
| | | | S   |    , duration = 0.408202320000 , status = Success , start = 2025-09-03 11:58:51.196176932
| | | | S   |    UTC , finish = 2025-09-03 11:58:51.604379252 UTC , thread_cap_info = ("ThreadId
| | | | S   |    132", 2, False)}
| | | | S   |    
| | | F |   |    
| | | E |   |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E |   |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E |   |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E |   |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E |   |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E |   |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 13
| | | E |   |    , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 12 , alphabet_size
| | | E |   |    = 5 , total_length = 130} , self = 111 , parent = Nothing , duration =
| | | E |   |    0.455914199000 , status = Except "AsyncCancelled" , start = 2025-09-03
| | | E |   |    11:58:51.238517911 UTC , finish = 2025-09-03 11:58:51.69443211 UTC , thread_cap_info
| | | E |   |    = ("ThreadId 134", 2, False)}
| | | E |   |    
| | | | | S |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S |    = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | | | S |    = 4 , total_length = 48} , self = 96 , parent = Nothing , duration = 0.276863562000
| | | | | S |    , status = Success , start = 2025-09-03 11:58:51.24823352 UTC , finish
| | | | | S |    = 2025-09-03 11:58:51.525097082 UTC , thread_cap_info = ("ThreadId 136",
| | | | | S |    0, False)}
| | | | | S |    
| | | | | | | S  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | S  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | S  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | S  = 4 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | | | | | | S  = 3 , total_length = 32} , self = 94 , parent = Nothing , duration = 0.242257911000
| | | | | | | S  , status = Success , start = 2025-09-03 11:58:51.261646296 UTC , finish
| | | | | | | S  = 2025-09-03 11:58:51.503904207 UTC , thread_cap_info = ("ThreadId 138",
| | | | | | | S  0, False)}
| | | | | | | S  
| | F | | | | |  
F |   | | | | |  
E |   | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E |   | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E |   | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E |   | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E |   | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E |   | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
E |   | | | | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
E |   | | | | |  = 4 , total_length = 48} , self = 101 , parent = Nothing , duration = 0.280617549000
E |   | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:58:51.357383318
E |   | | | | |  UTC , finish = 2025-09-03 11:58:51.638000867 UTC , thread_cap_info = ("ThreadId
E |   | | | | |  140", 0, False)}
E |   | | | | |  
| | E | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | E | | | | |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | E | | | | |  = 3 , total_length = 32} , self = 100 , parent = Nothing , duration = 0.246537651000
| | E | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-03 11:58:51.391436866
| | E | | | | |  UTC , finish = 2025-09-03 11:58:51.637974517 UTC , thread_cap_info = ("ThreadId
| | E | | | | |  141", 0, False)}
| | E | | | | |  
| | | | | | F |  
| | | | | | S |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | S |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | S |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | S |  = 18 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 12 ,
| | | | | | S |  alphabet_size = 6 , total_length = 180} , self = 120 , parent = Nothing
| | | | | | S |  , duration = 0.640560523000 , status = Success , start = 2025-09-03 11:58:51.458230512
| | | | | | S |  UTC , finish = 2025-09-03 11:58:52.098791035 UTC , thread_cap_info = ("ThreadId
| | | | | | S |  145", 2, False)}
| | | | | | S |  
| | | | | | | S  
| | | | | S |    
| | | | S   |    
| | E |     |    
E |   |     |    
F |   |     |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F |   |     |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F |   |     |    = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
F |   |     |    = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size = 3 , total_length
F |   |     |    = 32} , self = 118 , parent = Nothing , duration = 0.163800985000 , status
F |   |     |    = Fail , start = 2025-09-03 11:58:51.670984655 UTC , finish = 2025-09-03
F |   |     |    11:58:51.83478564 UTC , thread_cap_info = ("ThreadId 158", 0, False)}
F |   |     |    
| | F |     |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F |     |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F |     |    = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | F |     |    = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size = 3 , total_length
| | F |     |    = 32} , self = 119 , parent = Nothing , duration = 0.166134851000 , status
| | F |     |    = Fail , start = 2025-09-03 11:58:51.674193996 UTC , finish = 2025-09-03
| | F |     |    11:58:51.840328847 UTC , thread_cap_info = ("ThreadId 159", 0, False)}
| | F |     |    
| F | |     |    
|   | E     |    
| E |       |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E |       |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E |       |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E |       |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E |       |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E |       |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 18
| E |       |    , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 12 , alphabet_size
| E |       |    = 6 , total_length = 180} , self = 122 , parent = Nothing , duration =
| E |       |    0.404366824000 , status = Except "AsyncCancelled" , start = 2025-09-03
| E |       |    11:58:51.694804497 UTC , finish = 2025-09-03 11:58:52.099171321 UTC , thread_cap_info
| E |       |    = ("ThreadId 162", 2, False)}
| E |       |    
| | | F     |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F     |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F     |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F     |    = 5 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| | | F     |    = 4 , total_length = 40} , self = 127 , parent = Nothing , duration = 0.667900242000
| | | F     |    , status = Fail , start = 2025-09-03 11:58:51.707852164 UTC , finish =
| | | F     |    2025-09-03 11:58:52.375752406 UTC , thread_cap_info = ("ThreadId 168",
| | | F     |    0, False)}
| | | F     |    
| | | | F   |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | F   |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | F   |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | F   |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F   |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F   |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | F   |    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| | | | F   |    = 4 , total_length = 40} , self = 129 , parent = Nothing , duration = 0.721011064000
| | | | F   |    , status = Fail , start = 2025-09-03 11:58:51.71674492 UTC , finish = 2025-09-03
| | | | F   |    11:58:52.437755984 UTC , thread_cap_info = ("ThreadId 169", 0, False)}
| | | | F   |    
| | | | | F |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F |    = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | F |    = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | | | | F |    = 140} , self = 130 , parent = Nothing , duration = 0.700075321000 , status
| | | | | F |    = Fail , start = 2025-09-03 11:58:51.737719011 UTC , finish = 2025-09-03
| | | | | F |    11:58:52.437794332 UTC , thread_cap_info = ("ThreadId 171", 2, False)}
| | | | | F |    
| | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | | | F  = 2 , num_top_rules = 2 , num_weak_rules = 12 , alphabet_size = 5 , total_length
| | | | | | | F  = 140} , self = 128 , parent = Nothing , duration = 0.640679064000 , status
| | | | | | | F  = Fail , start = 2025-09-03 11:58:51.776856298 UTC , finish = 2025-09-03
| | | | | | | F  11:58:52.417535362 UTC , thread_cap_info = ("ThreadId 172", 2, False)}
| | | | | | | F  
F | | | | | | |  
F | | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | | | | | |  = 4 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
F | | | | | | |  = 3 , total_length = 32} , self = 132 , parent = Nothing , duration = 0.902056722000
F | | | | | | |  , status = Fail , start = 2025-09-03 11:58:51.834835348 UTC , finish =
F | | | | | | |  2025-09-03 11:58:52.73689207 UTC , thread_cap_info = ("ThreadId 173", 0,
F | | | | | | |  False)}
F | | | | | | |  
| | F | | | | |  
| | F | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | F | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | F | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | F | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | F | | | | |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | F | | | | |  = 3 , total_length = 32} , self = 134 , parent = Nothing , duration = 1.387329433000
| | F | | | | |  , status = Fail , start = 2025-09-03 11:58:51.85679389 UTC , finish = 2025-09-03
| | F | | | | |  11:58:53.244123323 UTC , thread_cap_info = ("ThreadId 174", 0, False)}
| | F | | | | |  
| | | | | | S |  
| E | | | |   |  
| F | | | |   |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F | | | |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | | |   |  = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| F | | | |   |  = 6 , num_top_rules = 6 , num_weak_rules = 12 , alphabet_size = 6 , total_length
| F | | | |   |  = 180} , self = 131 , parent = Nothing , duration = 0.634143254000 , status
| F | | | |   |  = Fail , start = 2025-09-03 11:58:52.099764139 UTC , finish = 2025-09-03
| F | | | |   |  11:58:52.733907393 UTC , thread_cap_info = ("ThreadId 182", 2, False)}
| F | | | |   |  
| | | | | | F |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F |  = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | | | | F |  = 6 , num_top_rules = 6 , num_weak_rules = 12 , alphabet_size = 6 , total_length
| | | | | | F |  = 180} , self = 133 , parent = Nothing , duration = 0.867018064000 , status
| | | | | | F |  = Fail , start = 2025-09-03 11:58:52.10691265 UTC , finish = 2025-09-03
| | | | | | F |  11:58:52.973930714 UTC , thread_cap_info = ("ThreadId 181", 2, False)}
| | | | | | F |  
| | | F | | | |  
| | | F | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | F | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | F | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | F | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | F | | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| | | F | | | |  = 4 , total_length = 40} , self = 135 , parent = Nothing , duration = 0.983401411000
| | | F | | | |  , status = Fail , start = 2025-09-03 11:58:52.375835227 UTC , finish =
| | | F | | | |  2025-09-03 11:58:53.359236638 UTC , thread_cap_info = ("ThreadId 186",
| | | F | | | |  0, False)}
| | | F | | | |  
| | | | | | | F  
| | | | F | |    
| | | |   F |    
| | | | S   |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S   |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S   |    = 14 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 12 ,
| | | | S   |    alphabet_size = 5 , total_length = 140} , self = 136 , parent = Nothing
| | | | S   |    , duration = 1.109120987000 , status = Success , start = 2025-09-03 11:58:52.43783019
| | | | S   |    UTC , finish = 2025-09-03 11:58:53.546951177 UTC , thread_cap_info = ("ThreadId
| | | | S   |    188", 2, False)}
| | | | S   |    
| F | | |   |    
F   | | |   |    
S   | | |   |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S   | | |   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S   | | |   |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S   | | |   |    = 18 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 12 ,
S   | | |   |    alphabet_size = 6 , total_length = 180} , self = 138 , parent = Nothing
S   | | |   |    , duration = 1.064301486000 , status = Success , start = 2025-09-03 11:58:52.742690554
S   | | |   |    UTC , finish = 2025-09-03 11:58:53.80699204 UTC , thread_cap_info = ("ThreadId
S   | | |   |    193", 2, False)}
S   | | |   |    
|   | | |   F    
| E | | |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E | | |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E | | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 18
| E | | |        , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 12 , alphabet_size
| E | | |        = 6 , total_length = 180} , self = 140 , parent = Nothing , duration =
| E | | |        0.835666232000 , status = Except "AsyncCancelled" , start = 2025-09-03
| E | | |        11:58:52.97399451 UTC , finish = 2025-09-03 11:58:53.809660742 UTC , thread_cap_info
| E | | |        = ("ThreadId 198", 2, False)}
| E | | |        
| | F | |        
| |   F |        
| |     S        
S |              
  E              
