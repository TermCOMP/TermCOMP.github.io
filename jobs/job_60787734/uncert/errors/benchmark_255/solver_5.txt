Input TRS:
    1: B(a(x1)) -> BA(x1)
    2: B(b(x1)) -> B(B(x1))
    3: BA(a(x1)) -> BA(A(x1))
    4: BA(b(x1)) -> BAB(x1)
    5: BAB(a(x1)) -> BABA(x1)
    6: BAB(b(x1)) -> BAB(B(x1))
    7: BABA(a(x1)) -> BABA(A(x1))
    8: BABA(b(x1)) -> BABAB(x1)
    9: BABAB(a(x1)) -> BABAB(A(x1))
    10: BABAB(b(x1)) -> BABABB(x1)
    11: BABABB(a(x1)) -> BABABBA(x1)
    12: BABABB(b(x1)) -> BABABB(B(x1))
    13: BABABBA(a(x1)) -> BABABBA(A(x1))
    14: BABABBA(b(x1)) -> BABABBAB(x1)
    15: BABABBAB(a(x1)) -> BABABBABA(x1)
    16: BABABBAB(b(x1)) -> BABABBAB(B(x1))
    17: BABABBABA(x1) -> a(b(b(a(x1))))
    18: A(a(x1)) -> A(A(x1))
    19: A(b(x1)) -> AB(x1)
    20: AB(a(x1)) -> AB(A(x1))
    21: AB(b(x1)) -> ABB(x1)
    22: ABB(a(x1)) -> ABBA(x1)
    23: ABB(b(x1)) -> ABB(B(x1))
    24: ABBA(x1) -> b(a(b(a(b(b(a(b(a(x1)))))))))
Number of strict rules: 24
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #B(b(x1)) -> #B(B(x1))
   #2: #B(b(x1)) -> #B(x1)
   #3: #BAB(b(x1)) -> #BAB(B(x1))
   #4: #BAB(b(x1)) -> #B(x1)
   #5: #BABABBA(a(x1)) -> #BABABBA(A(x1))
   #6: #BABABBA(a(x1)) -> #A(x1)
   #7: #BABAB(a(x1)) -> #BABAB(A(x1))
   #8: #BABAB(a(x1)) -> #A(x1)
   #9: #BABABB(a(x1)) -> #BABABBA(x1)
   #10: #ABB(b(x1)) -> #ABB(B(x1))
   #11: #ABB(b(x1)) -> #B(x1)
   #12: #BABABB(b(x1)) -> #BABABB(B(x1))
   #13: #BABABB(b(x1)) -> #B(x1)
   #14: #BABABBA(b(x1)) -> #BABABBAB(x1)
   #15: #AB(a(x1)) -> #AB(A(x1))
   #16: #AB(a(x1)) -> #A(x1)
   #17: #BABA(a(x1)) -> #BABA(A(x1))
   #18: #BABA(a(x1)) -> #A(x1)
   #19: #BABAB(b(x1)) -> #BABABB(x1)
   #20: #BAB(a(x1)) -> #BABA(x1)
   #21: #ABB(a(x1)) -> #ABBA(x1)
   #22: #A(b(x1)) -> #AB(x1)
   #23: #AB(b(x1)) -> #ABB(x1)
   #24: #BABABBAB(b(x1)) -> #BABABBAB(B(x1))
   #25: #BABABBAB(b(x1)) -> #B(x1)
   #26: #BA(a(x1)) -> #BA(A(x1))
   #27: #BA(a(x1)) -> #A(x1)
   #28: #B(a(x1)) -> #BA(x1)
   #29: #BABA(b(x1)) -> #BABAB(x1)
   #30: #BABABBAB(a(x1)) -> #BABABBABA(x1)
   #31: #BA(b(x1)) -> #BAB(x1)
   #32: #A(a(x1)) -> #A(A(x1))
   #33: #A(a(x1)) -> #A(x1)
Number of SCCs: 1, DPs: 29, edges: 65
	SCC { #1..9 #11..20 #22 #23 #25..29 #31..33 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: x1_2; (/ 1 16) + x1_2
  #BA(x1)	weight: x1_2; 0
BABABBABA(x1)	weight: x1_2; (/ 1 16) + x1_2
     b(x1)	weight: x1_1; x1_1
   #B(x1)	weight: x1_1; 0
#BABA(x1)	weight: x1_2; 0
    AB(x1)	weight: x1_1; (/ 1 32) + x1_1
#ABBA(x1)	weight: 0; 0
BABABBA(x1)	weight: x1_2; (/ 1 16) + x1_2
   ABB(x1)	weight: x1_1; x1_1
BABABBAB(x1)	weight: x1_1; (/ 1 16) + x1_1
   BAB(x1)	weight: x1_1; (/ 1 16) + x1_1
     B(x1)	weight: x1_1; (/ 1 16) + x1_1
 #BAB(x1)	weight: x1_1; 0
  ABBA(x1)	weight: x1_2; x1_2
#BABAB(x1)	weight: x1_1; 0
#BABABB(x1)	weight: x1_1; 0
     A(x1)	weight: x1_2; (/ 1 32) + x1_2
   #A(x1)	weight: x1_2; 0
#BABABBA(x1)	weight: x1_2; 0
 BABAB(x1)	weight: x1_1; (/ 1 16) + x1_1
 #ABB(x1)	weight: x1_1; 0
  BABA(x1)	weight: x1_2; (/ 1 16) + x1_2
#BABABBAB(x1)	weight: x1_1; 0
BABABB(x1)	weight: x1_1; (/ 1 16) + x1_1
  #AB(x1)	weight: x1_1; 0
#BABABBABA(x1)	weight: 0; 0
    BA(x1)	weight: x1_2; (/ 1 16) + x1_2
    Usable rules: { 1..24 }
    Removed DPs: #5 #6 #17 #18 #26 #27 #32 #33
Number of SCCs: 1, DPs: 21, edges: 39
	SCC { #1..4 #7..9 #11..16 #19 #20 #22 #23 #25 #28 #29 #31 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
