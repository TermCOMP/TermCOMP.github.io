last 671 length 2719
CNF 671 vars 2719 clauses
last 648 length 2787
CNF 648 vars 2787 clauses
last 1400 length 7085
CNF 1400 vars 7085 clauses
last 887 length 3788
CNF 887 vars 3788 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2399, clauses: 8505
last 2399 length 8505
CNF 2399 vars 8505 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2691, clauses: 9713
last 2691 length 9713
CNF 2691 vars 9713 clauses
last 8999 length 64923
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2399, clauses: 8505, status: Unsatisfied, time: 0.129221147s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2691, clauses: 9713, status: Unsatisfied, time: 0.109729602s
CNF 8999 vars 64923 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8222, clauses: 34231
last 8222 length 34231
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5129, clauses: 20580
last 5129 length 20580
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9142, clauses: 38129
last 9142 length 38129
CNF 5129 vars 20580 clauses
CNF 8222 vars 34231 clauses
CNF 9142 vars 38129 clauses
last 11567 length 112341
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5708, clauses: 22964
last 5708 length 22964
CNF 5708 vars 22964 clauses
CNF 11567 vars 112341 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5129, clauses: 20580, status: Unsatisfied, time: 0.547687931s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3956, clauses: 14763
last 3956 length 14763
CNF 3956 vars 14763 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3956, clauses: 14763, status: Unsatisfied, time: 0.224958564s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5708, clauses: 22964, status: Unsatisfied, time: 0.893942348s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8222, clauses: 34231, status: Unsatisfied, time: 1.176634861s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14626, clauses: 60881
last 14626 length 60881
CNF 14626 vars 60881 clauses
last 7076 length 34546
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4425, clauses: 16857
last 4425 length 16857
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9142, clauses: 38129, status: Unsatisfied, time: 1.346658853s
CNF 7076 vars 34546 clauses
CNF 4425 vars 16857 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7398, clauses: 27446
last 7398 length 27446
last 7844 length 37589
CNF 7398 vars 27446 clauses
CNF 7844 vars 37589 clauses
last 12103 length 65570
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4425, clauses: 16857, status: Unsatisfied, time: 0.373860082s
CNF 12103 vars 65570 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16118, clauses: 67087
last 16118 length 67087
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7398, clauses: 27446, status: Unsatisfied, time: 0.585561764s
CNF 16118 vars 67087 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14558, clauses: 56730
last 14558 length 56730
CNF 14558 vars 56730 clauses
last 14063 length 74113
[Info] pool sizes (success) 64853 seen 45295 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8299, clauses: 31293
**************************************************CNF 14063 vars 74113 clauses

last 8299 length 31293
summary
**************************************************
SRS with 3 rules on 3 letters       looping derivation
from
  [a, a, a, b, b, c]
to
  [b, b, c, b, b, b, b, c, b, b, b, b, c, b, b, a, a, c, a, a, a, b, b, c, c, c, c]
via 54 steps

**************************************************
proof
**************************************************
property Termination
has value Just False
for SRS
  [a] -> [] {- Input 0 -}
  [a, b] -> [b, b, a, a, c, a] {- Input 1 -}
  [c, c, b] -> [] {- Input 2 -}
reason
  Nontermination
    Derive   { from = [a, a, a, b, b, c], via = [(Step   { rule = 1, position = 2}, [a, a, b, b, a, a, c, a, b, c]), (Step   { rule = 0, position = 4}, [a, a, b, b, a, c, a, b, c]), (Step   { rule = 0, position = 4}, [a, a, b, b, c, a, b, c]), (Step   { rule = 1, position = 5}, [a, a, b, b, c, b, b, a, a, c, a, c]), (Step   { rule = 0, position = 10}, [a, a, b, b, c, b, b, a, a, c, c]), (Step   { rule = 0, position = 7}, [a, a, b, b, c, b, b, a, c, c]), (Step   { rule = 0, position = 7}, [a, a, b, b, c, b, b, c, c]), (Step   { rule = 1, position = 1}, [a, b, b, a, a, c, a, b, c, b, b, c, c]), (Step   { rule = 0, position = 3}, [a, b, b, a, c, a, b, c, b, b, c, c]), (Step   { rule = 0, position = 3}, [a, b, b, c, a, b, c, b, b, c, c]), (Step   { rule = 1, position = 4}, [a, b, b, c, b, b, a, a, c, a, c, b, b, c, c]), (Step   { rule = 0, position = 9}, [a, b, b, c, b, b, a, a, c, c, b, b, c, c]), (Step   { rule = 2, position = 8}, [a, b, b, c, b, b, a, a, b, c, c]), (Step   { rule = 1, position = 7}, [a, b, b, c, b, b, a, b, b, a, a, c, a, c, c]), (Step   { rule = 0, position = 12}, [a, b, b, c, b, b, a, b, b, a, a, c, c, c]), (Step   { rule = 0, position = 9}, [a, b, b, c, b, b, a, b, b, a, c, c, c]), (Step   { rule = 0, position = 9}, [a, b, b, c, b, b, a, b, b, c, c, c]), (Step   { rule = 1, position = 0}, [b, b, a, a, c, a, b, c, b, b, a, b, b, c, c, c]), (Step   { rule = 0, position = 2}, [b, b, a, c, a, b, c, b, b, a, b, b, c, c, c]), (Step   { rule = 0, position = 2}, [b, b, c, a, b, c, b, b, a, b, b, c, c, c]), (Step   { rule = 1, position = 3}, [b, b, c, b, b, a, a, c, a, c, b, b, a, b, b, c, c, c]), (Step   { rule = 0, position = 8}, [b, b, c, b, b, a, a, c, c, b, b, a, b, b, c, c, c]), (Step   { rule = 2, position = 7}, [b, b, c, b, b, a, a, b, a, b, b, c, c, c]), (Step   { rule = 1, position = 8}, [b, b, c, b, b, a, a, b, b, b, a, a, c, a, b, c, c, c]), (Step   { rule = 0, position = 10}, [b, b, c, b, b, a, a, b, b, b, a, c, a, b, c, c, c]), (Step   { rule = 0, position = 10}, [b, b, c, b, b, a, a, b, b, b, c, a, b, c, c, c]), (Step   { rule = 1, position = 11}, [b, b, c, b, b, a, a, b, b, b, c, b, b, a, a, c, a, c, c, c]), (Step   { rule = 0, position = 16}, [b, b, c, b, b, a, a, b, b, b, c, b, b, a, a, c, c, c, c]), (Step   { rule = 0, position = 13}, [b, b, c, b, b, a, a, b, b, b, c, b, b, a, c, c, c, c]), (Step   { rule = 0, position = 13}, [b, b, c, b, b, a, a, b, b, b, c, b, b, c, c, c, c]), (Step   { rule = 1, position = 6}, [b, b, c, b, b, a, b, b, a, a, c, a, b, b, c, b, b, c, c, c, c]), (Step   { rule = 0, position = 8}, [b, b, c, b, b, a, b, b, a, c, a, b, b, c, b, b, c, c, c, c]), (Step   { rule = 0, position = 8}, [b, b, c, b, b, a, b, b, c, a, b, b, c, b, b, c, c, c, c]), (Step   { rule = 1, position = 9}, [b, b, c, b, b, a, b, b, c, b, b, a, a, c, a, b, c, b, b, c, c, c, c]), (Step   { rule = 0, position = 11}, [b, b, c, b, b, a, b, b, c, b, b, a, c, a, b, c, b, b, c, c, c, c]), (Step   { rule = 0, position = 11}, [b, b, c, b, b, a, b, b, c, b, b, c, a, b, c, b, b, c, c, c, c]), (Step   { rule = 1, position = 12}, [b, b, c, b, b, a, b, b, c, b, b, c, b, b, a, a, c, a, c, b, b, c, c, c, c]), (Step   { rule = 0, position = 17}, [b, b, c, b, b, a, b, b, c, b, b, c, b, b, a, a, c, c, b, b, c, c, c, c]), (Step   { rule = 2, position = 16}, [b, b, c, b, b, a, b, b, c, b, b, c, b, b, a, a, b, c, c, c, c]), (Step   { rule = 0, position = 14}, [b, b, c, b, b, a, b, b, c, b, b, c, b, b, a, b, c, c, c, c]), (Step   { rule = 0, position = 14}, [b, b, c, b, b, a, b, b, c, b, b, c, b, b, b, c, c, c, c]), (Step   { rule = 1, position = 5}, [b, b, c, b, b, b, b, a, a, c, a, b, c, b, b, c, b, b, b, c, c, c, c]), (Step   { rule = 0, position = 7}, [b, b, c, b, b, b, b, a, c, a, b, c, b, b, c, b, b, b, c, c, c, c]), (Step   { rule = 0, position = 7}, [b, b, c, b, b, b, b, c, a, b, c, b, b, c, b, b, b, c, c, c, c]), (Step   { rule = 1, position = 8}, [b, b, c, b, b, b, b, c, b, b, a, a, c, a, c, b, b, c, b, b, b, c, c, c, c]), (Step   { rule = 0, position = 13}, [b, b, c, b, b, b, b, c, b, b, a, a, c, c, b, b, c, b, b, b, c, c, c, c]), (Step   { rule = 2, position = 12}, [b, b, c, b, b, b, b, c, b, b, a, a, b, c, b, b, b, c, c, c, c]), (Step   { rule = 1, position = 11}, [b, b, c, b, b, b, b, c, b, b, a, b, b, a, a, c, a, c, b, b, b, c, c, c, c]), (Step   { rule = 0, position = 16}, [b, b, c, b, b, b, b, c, b, b, a, b, b, a, a, c, c, b, b, b, c, c, c, c]), (Step   { rule = 2, position = 15}, [b, b, c, b, b, b, b, c, b, b, a, b, b, a, a, b, b, c, c, c, c]), (Step   { rule = 1, position = 10}, [b, b, c, b, b, b, b, c, b, b, b, b, a, a, c, a, b, a, a, b, b, c, c, c, c]), (Step   { rule = 0, position = 12}, [b, b, c, b, b, b, b, c, b, b, b, b, a, c, a, b, a, a, b, b, c, c, c, c]), (Step   { rule = 0, position = 12}, [b, b, c, b, b, b, b, c, b, b, b, b, c, a, b, a, a, b, b, c, c, c, c]), (Step   { rule = 1, position = 13}, [b, b, c, b, b, b, b, c, b, b, b, b, c, b, b, a, a, c, a, a, a, b, b, c, c, c, c])], to = [b, b, c, b, b, b, b, c, b, b, b, b, c, b, b, a, a, c, a, a, a, b, b, c, c, c, c]}

**************************************************
skeleton: (3,3)\Loop{54}[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))CNF 8299 vars 31293 clauses
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 1.141166852000
  min duration 0.010400659000
  total durat. 1.720213886000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 67
      , num_strict_rules = 40
      , num_top_rules = 40
      , num_weak_rules = 27
      , alphabet_size = 14
      , total_length = 384}
    , self = 93
    , parent = Nothing
    , duration = 1.141166852000
    , status = Fail
    , start = 2025-09-03 11:06:49.082415563 UTC
    , finish = 2025-09-03 11:06:50.223582415 UTC
    , thread_cap_info = ("ThreadId 134", 0, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.976135785000
  min duration 0.009872609000
  total durat. 2.650010074000
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 4
  max duration 1.190358427000
  min duration 0.016734952000
  total durat. 1.998752115000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 27
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 9
      , total_length = 162}
    , self = 71
    , parent = Nothing
    , duration = 1.190358427000
    , status = Fail
    , start = 2025-09-03 11:06:47.856817325 UTC
    , finish = 2025-09-03 11:06:49.047175752 UTC
    , thread_cap_info = ("ThreadId 87", 0, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.619799828000
  min duration 1.488316305000
  total durat. 3.108116133000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 39}
    , self = 88
    , parent = Nothing
    , duration = 1.488316305000
    , status = Fail
    , start = 2025-09-03 11:06:47.89605301 UTC
    , finish = 2025-09-03 11:06:49.384369315 UTC
    , thread_cap_info = ("ThreadId 102", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 46}
    , self = 89
    , parent = Nothing
    , duration = 1.619799828000
    , status = Fail
    , start = 2025-09-03 11:06:48.016305585 UTC
    , finish = 2025-09-03 11:06:49.636105413 UTC
    , thread_cap_info = ("ThreadId 106", 1, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.007466146000
  min duration 0.646520160000
  total durat. 1.653986306000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 46}
    , self = 87
    , parent = Nothing
    , duration = 1.007466146000
    , status = Fail
    , start = 2025-09-03 11:06:48.236035956 UTC
    , finish = 2025-09-03 11:06:49.243502102 UTC
    , thread_cap_info = ("ThreadId 110", 1, False)}
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.728078098000
  min duration 0.300877383000
  total durat. 1.028955481000
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.501825899000
  min duration 1.501825899000
  total durat. 1.501825899000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 86
    , parent = Nothing
    , duration = 1.501825899000
    , status = Fail
    , start = 2025-09-03 11:06:47.730984904 UTC
    , finish = 2025-09-03 11:06:49.232810803 UTC
    , thread_cap_info = ("ThreadId 35", 2, False)}
Success : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.479903957000
  min duration 1.479903957000
  total durat. 1.479903957000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = Nothing\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = Nothing\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 12}
    , self = 95
    , parent = Nothing
    , duration = 1.479903957000
    , status = Success
    , start = 2025-09-03 11:06:49.236747565 UTC
    , finish = 2025-09-03 11:06:50.716651522 UTC
    , thread_cap_info = ("ThreadId 137", 2, False)}
**************************************************
F                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                  , closure = Backward\n , start_strict_only = True\n , max_closure_length
F                  = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                  Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                  8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                  = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                  ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                  1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                  = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F                  = 12} , self = 86 , parent = Nothing , duration = 1.501825899000 , status
F                  = Fail , start = 2025-09-03 11:06:47.730984904 UTC , finish = 2025-09-03
F                  11:06:49.232810803 UTC , thread_cap_info = ("ThreadId 35", 2, False)}
F                  
| F                Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| F                , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| F                = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| F                , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| F                = False}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| F                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| F                = 12} , self = 53 , parent = Nothing , duration = 0.114367024000 , status
| F                = Fail , start = 2025-09-03 11:06:47.731663488 UTC , finish = 2025-09-03
| F                11:06:47.846030512 UTC , thread_cap_info = ("ThreadId 22", 1, False)}
| F                
| | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F              = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | F              = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F              = 162} , self = 69 , parent = Nothing , duration = 0.976135785000 , status
| | F              = Fail , start = 2025-09-03 11:06:47.737170116 UTC , finish = 2025-09-03
| | F              11:06:48.713305901 UTC , thread_cap_info = ("ThreadId 54", 2, False)}
| | F              
| | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | F            = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | F            = 162} , self = 67 , parent = Nothing , duration = 0.462198266000 , status
| | | F            = Fail , start = 2025-09-03 11:06:47.757305527 UTC , finish = 2025-09-03
| | | F            11:06:48.219503793 UTC , thread_cap_info = ("ThreadId 52", 2, False)}
| | | F            
| | | | F          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | F          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | F          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | F          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | F          = Size { num_rules = 27 , num_strict_rules = 27 , num_top_rules = 0 , num_weak_rules
| | | | F          = 0 , alphabet_size = 9 , total_length = 162} , self = 68 , parent = Nothing
| | | | F          , duration = 0.749164979000 , status = Fail , start = 2025-09-03 11:06:47.836856083
| | | | F          UTC , finish = 2025-09-03 11:06:48.586021062 UTC , thread_cap_info = ("ThreadId
| | | | F          85", 0, False)}
| | | | F          
| F | | |          
| F | | |          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F | | |          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F | | |          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F | | |          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F | | |          = Size { num_rules = 27 , num_strict_rules = 27 , num_top_rules = 0 , num_weak_rules
| F | | |          = 0 , alphabet_size = 9 , total_length = 162} , self = 71 , parent = Nothing
| F | | |          , duration = 1.190358427000 , status = Fail , start = 2025-09-03 11:06:47.856817325
| F | | |          UTC , finish = 2025-09-03 11:06:49.047175752 UTC , thread_cap_info = ("ThreadId
| F | | |          87", 0, False)}
| F | | |          
| | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | F        = 3 , num_top_rules = 3 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | | | | F        = 46} , self = 64 , parent = Nothing , duration = 0.106448109000 , status
| | | | | F        = Fail , start = 2025-09-03 11:06:47.864490155 UTC , finish = 2025-09-03
| | | | | F        11:06:47.970938264 UTC , thread_cap_info = ("ThreadId 98", 1, False)}
| | | | | F        
| | | | | | F      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F      = 9 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | | | | | F      = 4 , total_length = 39} , self = 65 , parent = Nothing , duration = 0.208222892000
| | | | | | F      , status = Fail , start = 2025-09-03 11:06:47.894386061 UTC , finish =
| | | | | | F      2025-09-03 11:06:48.102608953 UTC , thread_cap_info = ("ThreadId 100",
| | | | | | F      1, False)}
| | | | | | F      
| | | | | | | F    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | F    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | F    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | F    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | F    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | F    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | | | | F    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | | | | | | F    = 4 , total_length = 39} , self = 88 , parent = Nothing , duration = 1.488316305000
| | | | | | | F    , status = Fail , start = 2025-09-03 11:06:47.89605301 UTC , finish = 2025-09-03
| | | | | | | F    11:06:49.384369315 UTC , thread_cap_info = ("ThreadId 102", 1, False)}
| | | | | | | F    
| | | | | F | |    
| | | | | F | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F | |    = 10 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 7 ,
| | | | | F | |    alphabet_size = 4 , total_length = 46} , self = 66 , parent = Nothing ,
| | | | | F | |    duration = 0.187663325000 , status = Fail , start = 2025-09-03 11:06:47.970963535
| | | | | F | |    UTC , finish = 2025-09-03 11:06:48.15862686 UTC , thread_cap_info = ("ThreadId
| | | | | F | |    104", 1, False)}
| | | | | F | |    
| | | | | | | | F  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | F  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | F  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | F  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | F  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | F  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | | | | | F  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 7 , alphabet_size
| | | | | | | | F  = 4 , total_length = 46} , self = 89 , parent = Nothing , duration = 1.619799828000
| | | | | | | | F  , status = Fail , start = 2025-09-03 11:06:48.016305585 UTC , finish =
| | | | | | | | F  2025-09-03 11:06:49.636105413 UTC , thread_cap_info = ("ThreadId 106",
| | | | | | | | F  1, False)}
| | | | | | | | F  
| | | | | | F | |  
| | | | | F   | |  
| | | | | F   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | F   | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | F   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | F   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | | | F   | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | | | | F   | |  = 4 , total_length = 39} , self = 70 , parent = Nothing , duration = 0.646520160000
| | | | | F   | |  , status = Fail , start = 2025-09-03 11:06:48.176039745 UTC , finish =
| | | | | F   | |  2025-09-03 11:06:48.822559905 UTC , thread_cap_info = ("ThreadId 109",
| | | | | F   | |  1, False)}
| | | | | F   | |  
| | | F | |   | |  
| | | F | |   | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | F | |   | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | F | |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | F | |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F | |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F | |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | F | |   | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 7 , alphabet_size
| | | F | |   | |  = 4 , total_length = 46} , self = 87 , parent = Nothing , duration = 1.007466146000
| | | F | |   | |  , status = Fail , start = 2025-09-03 11:06:48.236035956 UTC , finish =
| | | F | |   | |  2025-09-03 11:06:49.243502102 UTC , thread_cap_info = ("ThreadId 110",
| | | F | |   | |  1, False)}
| | | F | |   | |  
| | | | F |   | |  
| | F |   |   | |  
| |   |   F   | |  
| | F |       | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | F |       | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F |       | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F |       | |  = 9 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | F |       | |  = 4 , total_length = 39} , self = 85 , parent = Nothing , duration = 0.300877383000
| | F |       | |  , status = Fail , start = 2025-09-03 11:06:48.822592108 UTC , finish =
| | F |       | |  2025-09-03 11:06:49.123469491 UTC , thread_cap_info = ("ThreadId 118",
| | F |       | |  1, False)}
| | F |       | |  
| F | |       | |  
| F | |       | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F | |       | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | |       | |  = False\n , verbose = False}" , input_size = Size { num_rules = 76 , num_strict_rules
| F | |       | |  = 49 , num_top_rules = 49 , num_weak_rules = 27 , alphabet_size = 14 ,
| F | |       | |  total_length = 449} , self = 91 , parent = Nothing , duration = 0.937291733000
| F | |       | |  , status = Fail , start = 2025-09-03 11:06:49.077980188 UTC , finish =
| F | |       | |  2025-09-03 11:06:50.015271921 UTC , thread_cap_info = ("ThreadId 131",
| F | |       | |  1, False)}
| F | |       | |  
| | | | F     | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F     | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F     | |  = False\n , verbose = False}" , input_size = Size { num_rules = 67 , num_strict_rules
| | | | F     | |  = 40 , num_top_rules = 40 , num_weak_rules = 27 , alphabet_size = 14 ,
| | | | F     | |  total_length = 384} , self = 93 , parent = Nothing , duration = 1.141166852000
| | | | F     | |  , status = Fail , start = 2025-09-03 11:06:49.082415563 UTC , finish =
| | | | F     | |  2025-09-03 11:06:50.223582415 UTC , thread_cap_info = ("ThreadId 134",
| | | | F     | |  0, False)}
| | | | F     | |  
| | | | | F   | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 67 , num_strict_rules
| | | | | F   | |  = 40 , num_top_rules = 40 , num_weak_rules = 27 , alphabet_size = 14 ,
| | | | | F   | |  total_length = 384} , self = 90 , parent = Nothing , duration = 0.681008237000
| | | | | F   | |  , status = Fail , start = 2025-09-03 11:06:49.101630203 UTC , finish =
| | | | | F   | |  2025-09-03 11:06:49.78263844 UTC , thread_cap_info = ("ThreadId 135", 0,
| | | | | F   | |  False)}
| | | | | F   | |  
| | F | | |   | |  
F |   | | |   | |  
S |   | | |   | |  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
S |   | | |   | |  , closure = Backward\n , start_strict_only = True\n , max_closure_length
S |   | | |   | |  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
S |   | | |   | |  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
S |   | | |   | |  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
S |   | | |   | |  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
S |   | | |   | |  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
S |   | | |   | |  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
S |   | | |   | |  = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
S |   | | |   | |  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
S |   | | |   | |  = 12} , self = 95 , parent = Nothing , duration = 1.479903957000 , status
S |   | | |   | |  = Success , start = 2025-09-03 11:06:49.236747565 UTC , finish = 2025-09-03
S |   | | |   | |  11:06:50.716651522 UTC , thread_cap_info = ("ThreadId 137", 2, False)}
S |   | | |   | |  
| |   F | |   | |  
| | F   | |   | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | F   | |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F   | |   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F   | |   | |  = 10 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 7 ,
| | F   | |   | |  alphabet_size = 4 , total_length = 46} , self = 92 , parent = Nothing ,
| | F   | |   | |  duration = 0.728078098000 , status = Fail , start = 2025-09-03 11:06:49.355259915
| | F   | |   | |  UTC , finish = 2025-09-03 11:06:50.083338013 UTC , thread_cap_info = ("ThreadId
| | F   | |   | |  138", 1, False)}
| | F   | |   | |  
| | |   | |   F |  
| | | F | |     |  Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
| | | F | |     |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F | |     |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F | |     |  = 9 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| | | F | |     |  = 4 , total_length = 39} , self = 94 , parent = Nothing , duration = 0.967509149000
| | | F | |     |  , status = Fail , start = 2025-09-03 11:06:49.496303221 UTC , finish =
| | | F | |     |  2025-09-03 11:06:50.46381237 UTC , thread_cap_info = ("ThreadId 139", 1,
| | | F | |     |  False)}
| | | F | |     |  
| | | | | |     F  
| | | | | F        
| F | | |          
|   F | |          
|     | F          
|     F            
S                  
