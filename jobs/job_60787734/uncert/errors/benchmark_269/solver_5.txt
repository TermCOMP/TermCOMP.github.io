Input TRS:
    1: B(a(x1)) -> BA(x1)
    2: B(b(x1)) -> B(B(x1))
    3: BA(a(x1)) -> BA(A(x1))
    4: BA(b(x1)) -> BAB(x1)
    5: BAB(a(x1)) -> BAB(A(x1))
    6: BAB(b(x1)) -> BABB(x1)
    7: BABB(a(x1)) -> BABB(A(x1))
    8: BABB(b(x1)) -> BABBB(x1)
    9: BABBB(a(x1)) -> BABBB(A(x1))
    10: BABBB(b(x1)) -> BABBBB(x1)
    11: BABBBB(a(x1)) -> BABBBBA(x1)
    12: BABBBB(b(x1)) -> BABBBB(B(x1))
    13: BABBBBA(a(x1)) -> BABBBBA(A(x1))
    14: BABBBBA(b(x1)) -> BABBBBAB(x1)
    15: BABBBBAB(a(x1)) -> BABBBBABA(x1)
    16: BABBBBAB(b(x1)) -> BABBBBAB(B(x1))
    17: BABBBBABA(x1) -> a(b(b(b(b(a(x1))))))
    18: A(a(x1)) -> A(A(x1))
    19: A(b(x1)) -> AB(x1)
    20: AB(a(x1)) -> AB(A(x1))
    21: AB(b(x1)) -> ABB(x1)
    22: ABB(a(x1)) -> ABB(A(x1))
    23: ABB(b(x1)) -> ABBB(x1)
    24: ABBB(a(x1)) -> ABBB(A(x1))
    25: ABBB(b(x1)) -> ABBBB(x1)
    26: ABBBB(a(x1)) -> ABBBBA(x1)
    27: ABBBB(b(x1)) -> ABBBB(B(x1))
    28: ABBBBA(x1) -> b(a(b(b(b(b(a(b(a(x1)))))))))
Number of strict rules: 28
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #B(b(x1)) -> #B(B(x1))
   #2: #B(b(x1)) -> #B(x1)
   #3: #BAB(b(x1)) -> #BABB(x1)
   #4: #BABBBBA(a(x1)) -> #BABBBBA(A(x1))
   #5: #BABBBBA(a(x1)) -> #A(x1)
   #6: #BABBB(a(x1)) -> #BABBB(A(x1))
   #7: #BABBB(a(x1)) -> #A(x1)
   #8: #BABBBB(a(x1)) -> #BABBBBA(x1)
   #9: #ABBB(a(x1)) -> #ABBB(A(x1))
   #10: #ABBB(a(x1)) -> #A(x1)
   #11: #ABB(b(x1)) -> #ABBB(x1)
   #12: #BABBBB(b(x1)) -> #BABBBB(B(x1))
   #13: #BABBBB(b(x1)) -> #B(x1)
   #14: #BABBBBA(b(x1)) -> #BABBBBAB(x1)
   #15: #ABBB(b(x1)) -> #ABBBB(x1)
   #16: #AB(a(x1)) -> #AB(A(x1))
   #17: #AB(a(x1)) -> #A(x1)
   #18: #BABB(a(x1)) -> #BABB(A(x1))
   #19: #BABB(a(x1)) -> #A(x1)
   #20: #BABBB(b(x1)) -> #BABBBB(x1)
   #21: #BAB(a(x1)) -> #BAB(A(x1))
   #22: #BAB(a(x1)) -> #A(x1)
   #23: #ABB(a(x1)) -> #ABB(A(x1))
   #24: #ABB(a(x1)) -> #A(x1)
   #25: #ABBBB(b(x1)) -> #ABBBB(B(x1))
   #26: #ABBBB(b(x1)) -> #B(x1)
   #27: #A(b(x1)) -> #AB(x1)
   #28: #ABBBB(a(x1)) -> #ABBBBA(x1)
   #29: #AB(b(x1)) -> #ABB(x1)
   #30: #BABBBBAB(b(x1)) -> #BABBBBAB(B(x1))
   #31: #BABBBBAB(b(x1)) -> #B(x1)
   #32: #BA(a(x1)) -> #BA(A(x1))
   #33: #BA(a(x1)) -> #A(x1)
   #34: #B(a(x1)) -> #BA(x1)
   #35: #BABB(b(x1)) -> #BABBB(x1)
   #36: #BABBBBAB(a(x1)) -> #BABBBBABA(x1)
   #37: #BA(b(x1)) -> #BAB(x1)
   #38: #A(a(x1)) -> #A(A(x1))
   #39: #A(a(x1)) -> #A(x1)
Number of SCCs: 1, DPs: 35, edges: 79
	SCC { #1..24 #26 #27 #29 #31..35 #37..39 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: (/ 1 32) + x1_1; x1_1
  #BA(x1)	weight: x1_1; x1_1
     b(x1)	weight: x1_2; x1_2
   #B(x1)	weight: x1_2; x1_2
 BABBB(x1)	weight: (/ 1 32) + x1_2; x1_2
BABBBBABA(x1)	weight: (/ 1 32) + x1_1; x1_1
#ABBB(x1)	weight: x1_2; x1_2
#BABBBBABA(x1)	weight: 0; 0
    AB(x1)	weight: (/ 1 64) + x1_2; x1_2
BABBBBA(x1)	weight: (/ 1 32) + x1_1; x1_1
   ABB(x1)	weight: (/ 1 64) + x1_2; x1_2
BABBBB(x1)	weight: (/ 1 32) + x1_2; x1_2
   BAB(x1)	weight: (/ 1 32) + x1_2; x1_2
#ABBBBA(x1)	weight: 0; 0
     B(x1)	weight: (/ 1 32) + x1_2; x1_2
 #BAB(x1)	weight: x1_2; x1_2
BABBBBAB(x1)	weight: (/ 1 32) + x1_2; x1_2
ABBBBA(x1)	weight: (/ 1 64) + x1_1; x1_1
     A(x1)	weight: (/ 1 64) + x1_1; x1_1
   #A(x1)	weight: x1_1; x1_1
#BABB(x1)	weight: x1_2; x1_2
  BABB(x1)	weight: (/ 1 32) + x1_2; x1_2
  ABBB(x1)	weight: (/ 1 64) + x1_2; x1_2
 #ABB(x1)	weight: x1_2; x1_2
#BABBBBA(x1)	weight: x1_1; x1_1
#BABBBBAB(x1)	weight: x1_2; x1_2
#BABBBB(x1)	weight: x1_2; x1_2
 ABBBB(x1)	weight: (/ 1 64) + x1_2; x1_2
  #AB(x1)	weight: x1_2; x1_2
#ABBBB(x1)	weight: x1_2; x1_2
    BA(x1)	weight: (/ 1 32) + x1_1; x1_1
#BABBB(x1)	weight: x1_2; x1_2
    Usable rules: { 1..28 }
    Removed DPs: #4 #5 #32 #33 #38 #39
Number of SCCs: 1, DPs: 29, edges: 51
	SCC { #1..3 #6..24 #26 #27 #29 #31 #34 #35 #37 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
