last 2101 length 8761
last 2048 length 8544
CNF 2101 vars 8761 clauses
CNF 2048 vars 8544 clauses
last 754 length 2935
last 767 length 2998
CNF 754 vars 2935 clauses
last 559 length 2185
last 626 length 2456
CNF 767 vars 2998 clauses
CNF 626 vars 2456 clauses
CNF 559 vars 2185 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2297, clauses: 8541
last 2297 length 8541
CNF 2297 vars 8541 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2297, clauses: 8541, status: Satisfied, time: 0.028937627s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2619, clauses: 9731
last 684 length 2670
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6744, clauses: 28023
last 531 length 2091
last 2619 length 9731
last 6744 length 28023
CNF 531 vars 2091 clauses
CNF 684 vars 2670 clauses
CNF 2619 vars 9731 clauses
CNF 6744 vars 28023 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2191, clauses: 8062
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2619, clauses: 9731, status: Satisfied, time: 0.056244434s
last 2191 length 8062
last 639 length 2541
CNF 2191 vars 8062 clauses
CNF 639 vars 2541 clauses
last 643 length 2567
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2191, clauses: 8062, status: Satisfied, time: 0.030410489s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6067, clauses: 25184
last 6067 length 25184
CNF 643 vars 2567 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2398, clauses: 8767
last 2398 length 8767
CNF 2398 vars 8767 clauses
last 489 length 1919
last 583 length 2314
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2398, clauses: 8767, status: Satisfied, time: 0.04854989s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6650, clauses: 27665
last 4690 length 18939
CNF 489 vars 1919 clauses
CNF 583 vars 2314 clauses
last 7952 length 32385
CNF 4690 vars 18939 clauses
last 372 length 1447
last 381 length 1481
last 6974 length 28833
CNF 7952 vars 32385 clauses
last 5063 length 21038
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1968, clauses: 7127
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6018, clauses: 24983
CNF 381 vars 1481 clauses
CNF 372 vars 1447 clauses
CNF 6974 vars 28833 clauses
last 1968 length 7127
CNF 5063 vars 21038 clauses
last 6018 length 24983
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11848, clauses: 47509
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1474, clauses: 5254
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5015, clauses: 20849
CNF 1968 vars 7127 clauses
CNF 6018 vars 24983 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9963, clauses: 39560
last 11848 length 47509
last 1474 length 5254
last 5015 length 20849
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1968, clauses: 7127, status: Satisfied, time: 0.441236477s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6018, clauses: 24983, status: Satisfied, time: 0.466676978s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 30064, clauses: 126493
last 9963 length 39560
CNF 1474 vars 5254 clauses
CNF 11848 vars 47509 clauses
CNF 5015 vars 20849 clauses
last 421 length 1716
last 457 length 1824
last 30064 length 126493
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5015, clauses: 20849, status: Satisfied, time: 0.275330731s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1474, clauses: 5254, status: Satisfied, time: 0.241530959s
CNF 421 vars 1716 clauses
CNF 457 vars 1824 clauses
CNF 9963 vars 39560 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 28118, clauses: 118225
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11848, clauses: 47509, status: Satisfied, time: 0.318606178s
**************************************************
last 28118 length 118225
summary
**************************************************
SRS with 3 rules on 2 letters       DP
SRS with 6 strict rules and 3 weak rules on 4 letters       EDG
SRS with 6 strict rules and 3 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 4 strict rules and 3 weak rules on 4 letters       EDG
SRS with 4 strict rules and 3 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 3 weak rules on 4 letters       weights
SRS with 1 strict rules and 3 weak rules on 3 letters       EDG
SRS with 1 strict rules and 3 weak rules on 3 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 3 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, a] -> [b, b, a] {- Input 0 -}
  [b, b, b] -> [b, a] {- Input 1 -}
  [b, b] -> [a, a, a] {- Input 2 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, b, a] ->= [b, b, a] {- DP Nontop (Input 0) -}
  [b, b, b] ->= [b, a] {- DP Nontop (Input 1) -}
  [b, b] ->= [a, a, a] {- DP Nontop (Input 2) -}
  [a#, b, a] |-> [b#, b, a] {- DP (Top 0) (Input 0) -}
  [b#, b] |-> [a#] {- DP (Top 2) (Input 2) -}
  [b#, b] |-> [a#, a] {- DP (Top 1) (Input 2) -}
  [b#, b] |-> [a#, a, a] {- DP (Top 0) (Input 2) -}
  [b#, b, b] |-> [a#] {- DP (Top 1) (Input 1) -}
  [b#, b, b] |-> [b#, a] {- DP (Top 0) (Input 1) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b, a] |-> [b#, b, a] {- DP (Top 0) (Input 0) -}
  [b#, b] |-> [a#] {- DP (Top 2) (Input 2) -}
  [b#, b] |-> [a#, a] {- DP (Top 1) (Input 2) -}
  [b#, b] |-> [a#, a, a] {- DP (Top 0) (Input 2) -}
  [b#, b, b] |-> [a#] {- DP (Top 1) (Input 1) -}
  [b#, b, b] |-> [b#, a] {- DP (Top 0) (Input 1) -}
  [a, b, a] ->= [b, b, a] {- DP Nontop (Input 0) -}
  [b, b, b] ->= [b, a] {- DP Nontop (Input 1) -}
  [b, b] ->= [a, a, a] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / 0A  3A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( b
  , Wk  / 0A 0A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 18A 19A 21A - \
        | 18A 19A 21A - |
        | 18A 19A 21A - |
        \ -   -   -   - / )
  ( b#
  , Wk  / 21A 21A 21A - \
        | 21A 21A 21A - |
        | 21A 21A 21A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [a#, b, a] |-> [b#, b, a] {- DP (Top 0) (Input 0) -}
  [b#, b] |-> [a#, a] {- DP (Top 1) (Input 2) -}
  [b#, b] |-> [a#, a, a] {- DP (Top 0) (Input 2) -}
  [b#, b, b] |-> [b#, a] {- DP (Top 0) (Input 1) -}
  [a, b, a] ->= [b, b, a] {- DP Nontop (Input 0) -}
  [b, b, b] ->= [b, a] {- DP Nontop (Input 1) -}
  [b, b] ->= [a, a, a] {- DP Nontop (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b, a] |-> [b#, b, a] {- DP (Top 0) (Input 0) -}
  [b#, b] |-> [a#, a] {- DP (Top 1) (Input 2) -}
  [b#, b] |-> [a#, a, a] {- DP (Top 0) (Input 2) -}
  [b#, b, b] |-> [b#, a] {- DP (Top 0) (Input 1) -}
  [a, b, a] ->= [b, b, a] {- DP Nontop (Input 0) -}
  [b, b, b] ->= [b, a] {- DP Nontop (Input 1) -}
  [b, b] ->= [a, a, a] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / 0A  0A  3A - \
        | 0A  0A  3A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( b
  , Wk  / 0A 0A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 4A 4A 7A - \
        | 4A 4A 7A - |
        | 4A 4A 7A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 5A 7A 7A - \
        | 5A 7A 7A - |
        | 5A 7A 7A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [a#, b, a] |-> [b#, b, a] {- DP (Top 0) (Input 0) -}
  [b#, b, b] |-> [b#, a] {- DP (Top 0) (Input 1) -}
  [a, b, a] ->= [b, b, a] {- DP Nontop (Input 0) -}
  [b, b, b] ->= [b, a] {- DP Nontop (Input 1) -}
  [b, b] ->= [a, a, a] {- DP Nontop (Input 2) -}
reason
  (a, 0/1)
  (b, 0/1)
  (a#, 1/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [b#, b, b] |-> [b#, a] {- DP (Top 0) (Input 1) -}
  [a, b, a] ->= [b, b, a] {- DP Nontop (Input 0) -}
  [b, b, b] ->= [b, a] {- DP Nontop (Input 1) -}
  [b, b] ->= [a, a, a] {- DP Nontop (Input 2) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, b, b] |-> [b#, a] {- DP (Top 0) (Input 1) -}
  [a, b, a] ->= [b, b, a] {- DP Nontop (Input 0) -}
  [b, b, b] ->= [b, a] {- DP Nontop (Input 1) -}
  [b, b] ->= [a, a, a] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / 0A  0A -   \
        | -2A 0A -2A |
        \ -   -  0A  / )
  ( b
  , Wk  / -1A 0A 0A \
        | 1A  0A 1A |
        \ -   -  0A / )
  ( b#
  , Wk  / 1A 1A -  \
        | -  -  -  |
        \ -  -  0A / )
   property Termination
has value Just True
for SRS
  [a, b, a] ->= [b, b, a] {- DP Nontop (Input 0) -}
  [b, b, b] ->= [b, a] {- DP Nontop (Input 1) -}
  [b, b] ->= [a, a, a] {- DP Nontop (Input 2) -}
reason
  EDG

**************************************************
skeleton: (3,2)\Deepee\EDG(6/3,4)\Matrix{\Arctic}{3}\EDG(4/3,4)\Matrix{\Arctic}{3}(2/3,4)\Weight\EDG(1/3,3)\Matrix{\ArcticBZ}{3}(0/3,2)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************CNF 30064 vars 126493 clauses

Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 0.455303903000
  min duration 0.016425932000
  total durat. 1.473654088000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 0.530130438000
  min duration 0.020246917000
  total durat. 1.505007149000
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.687197437000
  min duration 0.571513494000
  total durat. 1.258710931000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.657849459000
  min duration 0.070862343000
  total durat. 1.653672746000
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.502365603000
  min duration 1.502365603000
  total durat. 1.502365603000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 16}
    , self = 135
    , parent = Nothing
    , duration = 1.502365603000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 10:45:17.648604725 UTC
    , finish = 2025-09-03 10:45:19.150970328 UTC
    , thread_cap_info = ("ThreadId 43", 3, False)}
**************************************************
E                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E                  , closure = Forward\n , start_strict_only = True\n , max_closure_length
E                  = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
E                  Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
E                  8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
E                  = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
E                  ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
E                  1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E                  = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
E                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
E                  = 16} , self = 135 , parent = Nothing , duration = 1.502365603000 , status
E                  = Except "AsyncCancelled" , start = 2025-09-03 10:45:17.648604725 UTC ,
E                  finish = 2025-09-03 10:45:19.150970328 UTC , thread_cap_info = ("ThreadId
E                  43", 3, False)}
E                  
| F                Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F                , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F                = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F                False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F                = Size { num_rules = 12 , num_strict_rules = 12 , num_top_rules = 0 , num_weak_rules
| F                = 0 , alphabet_size = 4 , total_length = 88} , self = 66 , parent = Nothing
| F                , duration = 0.243327783000 , status = Fail , start = 2025-09-03 10:45:17.713995543
| F                UTC , finish = 2025-09-03 10:45:17.957323326 UTC , thread_cap_info = ("ThreadId
| F                81", 3, False)}
| F                
| | F              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | F              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | F              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | F              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | F              = Size { num_rules = 12 , num_strict_rules = 12 , num_top_rules = 0 , num_weak_rules
| | F              = 0 , alphabet_size = 4 , total_length = 88} , self = 48 , parent = Nothing
| | F              , duration = 0.153843646000 , status = Fail , start = 2025-09-03 10:45:17.714003907
| | F              UTC , finish = 2025-09-03 10:45:17.867847553 UTC , thread_cap_info = ("ThreadId
| | F              83", 3, False)}
| | F              
| | | F            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | F            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | F            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | F            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | F            = Size { num_rules = 3 , num_strict_rules = 3 , num_top_rules = 0 , num_weak_rules
| | | F            = 0 , alphabet_size = 2 , total_length = 16} , self = 49 , parent = Nothing
| | | F            , duration = 0.189372058000 , status = Fail , start = 2025-09-03 10:45:17.716746649
| | | F            UTC , finish = 2025-09-03 10:45:17.906118707 UTC , thread_cap_info = ("ThreadId
| | | F            71", 2, False)}
| | | F            
| | F |            
| |   F            
| F                
| S                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S                = 9 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 3 , alphabet_size
| S                = 4 , total_length = 43} , self = 89 , parent = Nothing , duration = 0.141069044000
| S                , status = Success , start = 2025-09-03 10:45:17.957902484 UTC , finish
| S                = 2025-09-03 10:45:18.098971528 UTC , thread_cap_info = ("ThreadId 106",
| S                2, False)}
| S                
| | E              Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | E              , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 3 , alphabet_size
| | E              = 4 , total_length = 43} , self = 91 , parent = Nothing , duration = 0.122219200000
| | E              , status = Except "AsyncCancelled" , start = 2025-09-03 10:45:17.976985844
| | E              UTC , finish = 2025-09-03 10:45:18.099205044 UTC , thread_cap_info = ("ThreadId
| | E              111", 2, False)}
| | E              
| | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 48 , num_strict_rules
| | | F            = 36 , num_top_rules = 36 , num_weak_rules = 12 , alphabet_size = 8 , total_length
| | | F            = 308} , self = 116 , parent = Nothing , duration = 0.332318055000 , status
| | | F            = Fail , start = 2025-09-03 10:45:18.075438827 UTC , finish = 2025-09-03
| | | F            10:45:18.407756882 UTC , thread_cap_info = ("ThreadId 130", 0, False)}
| | | F            
| | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 48 , num_strict_rules
| | | | F          = 36 , num_top_rules = 36 , num_weak_rules = 12 , alphabet_size = 8 , total_length
| | | | F          = 308} , self = 115 , parent = Nothing , duration = 0.317052145000 , status
| | | | F          = Fail , start = 2025-09-03 10:45:18.077713288 UTC , finish = 2025-09-03
| | | | F          10:45:18.394765433 UTC , thread_cap_info = ("ThreadId 131", 0, False)}
| | | | F          
| S | | |          
|   E | |          
| S   | |          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S   | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S   | |          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S   | |          = 7 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 3 , alphabet_size
| S   | |          = 4 , total_length = 36} , self = 106 , parent = Nothing , duration = 0.120789466000
| S   | |          , status = Success , start = 2025-09-03 10:45:18.130596725 UTC , finish
| S   | |          = 2025-09-03 10:45:18.251386191 UTC , thread_cap_info = ("ThreadId 143",
| S   | |          3, False)}
| S   | |          
| | E | |          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | |          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | E | |          , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 3 , alphabet_size
| | E | |          = 4 , total_length = 36} , self = 108 , parent = Nothing , duration = 0.110398588000
| | E | |          , status = Except "AsyncCancelled" , start = 2025-09-03 10:45:18.146568362
| | E | |          UTC , finish = 2025-09-03 10:45:18.25696695 UTC , thread_cap_info = ("ThreadId
| | E | |          146", 3, False)}
| | E | |          
| | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | F        = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | F        = 30} , self = 114 , parent = Nothing , duration = 0.190114790000 , status
| | | | | F        = Fail , start = 2025-09-03 10:45:18.151295398 UTC , finish = 2025-09-03
| | | | | F        10:45:18.341410188 UTC , thread_cap_info = ("ThreadId 150", 3, False)}
| | | | | F        
| | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | F      = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | | F      = 30} , self = 113 , parent = Nothing , duration = 0.169209625000 , status
| | | | | | F      = Fail , start = 2025-09-03 10:45:18.156990554 UTC , finish = 2025-09-03
| | | | | | F      10:45:18.326200179 UTC , thread_cap_info = ("ThreadId 151", 3, False)}
| | | | | | F      
| | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 38 , num_strict_rules
| | | | | | | F    = 26 , num_top_rules = 26 , num_weak_rules = 12 , alphabet_size = 8 , total_length
| | | | | | | F    = 246} , self = 119 , parent = Nothing , duration = 0.455303903000 , status
| | | | | | | F    = Fail , start = 2025-09-03 10:45:18.164314874 UTC , finish = 2025-09-03
| | | | | | | F    10:45:18.619618777 UTC , thread_cap_info = ("ThreadId 154", 0, False)}
| | | | | | | F    
| | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 38 , num_strict_rules
| | | | | | | | F  = 26 , num_top_rules = 26 , num_weak_rules = 12 , alphabet_size = 8 , total_length
| | | | | | | | F  = 246} , self = 120 , parent = Nothing , duration = 0.530130438000 , status
| | | | | | | | F  = Fail , start = 2025-09-03 10:45:18.177492012 UTC , finish = 2025-09-03
| | | | | | | | F  10:45:18.70762245 UTC , thread_cap_info = ("ThreadId 155", 0, False)}
| | | | | | | | F  
| S | | | | | | |  
|   E | | | | | |  
| F   | | | | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F   | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F   | | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| F   | | | | | |  = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size = 3 , total_length
| F   | | | | | |  = 21} , self = 117 , parent = Nothing , duration = 0.280606357000 , status
| F   | | | | | |  = Fail , start = 2025-09-03 10:45:18.257196861 UTC , finish = 2025-09-03
| F   | | | | | |  10:45:18.537803218 UTC , thread_cap_info = ("ThreadId 163", 3, False)}
| F   | | | | | |  
| | F | | | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | F | | | | | |  = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size = 3 , total_length
| | F | | | | | |  = 21} , self = 118 , parent = Nothing , duration = 0.313016690000 , status
| | F | | | | | |  = Fail , start = 2025-09-03 10:45:18.257198027 UTC , finish = 2025-09-03
| | F | | | | | |  10:45:18.570214717 UTC , thread_cap_info = ("ThreadId 164", 3, False)}
| | F | | | | | |  
| | | | | | F | |  
| | | | | F   | |  
| | | | | S   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S   | |  = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | | | S   | |  = 4 , total_length = 30} , self = 121 , parent = Nothing , duration = 0.657849459000
| | | | | S   | |  , status = Success , start = 2025-09-03 10:45:18.34142619 UTC , finish
| | | | | S   | |  = 2025-09-03 10:45:18.999275649 UTC , thread_cap_info = ("ThreadId 166",
| | | | | S   | |  2, False)}
| | | | | S   | |  
| | | | | | S | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | S | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | S | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | S | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | S | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | S | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | | | S | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | | | | S | |  = 4 , total_length = 30} , self = 123 , parent = Nothing , duration = 0.687197437000
| | | | | | S | |  , status = Success , start = 2025-09-03 10:45:18.341433456 UTC , finish
| | | | | | S | |  = 2025-09-03 10:45:19.028630893 UTC , thread_cap_info = ("ThreadId 167",
| | | | | | S | |  2, False)}
| | | | | | S | |  
| | | | F | | | |  
| | | F   | | | |  
| F |     | | | |  
| S |     | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S |     | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S |     | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S |     | | | |  = 4 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| S |     | | | |  = 3 , total_length = 21} , self = 131 , parent = Nothing , duration = 0.591208711000
| S |     | | | |  , status = Success , start = 2025-09-03 10:45:18.557273285 UTC , finish
| S |     | | | |  = 2025-09-03 10:45:19.148481996 UTC , thread_cap_info = ("ThreadId 174",
| S |     | | | |  3, False)}
| S |     | | | |  
| | F     | | | |  
| | S     | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | S     | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | S     | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S     | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S     | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S     | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | S     | | | |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | S     | | | |  = 3 , total_length = 21} , self = 129 , parent = Nothing , duration = 0.571513494000
| | S     | | | |  , status = Success , start = 2025-09-03 10:45:18.570233315 UTC , finish
| | S     | | | |  = 2025-09-03 10:45:19.141746809 UTC , thread_cap_info = ("ThreadId 175",
| | S     | | | |  3, False)}
| | S     | | | |  
| | |     | | F |  
| | |     | |   F  
| | |     S |      
| | |       S      
| | S              
| S                
E                  
