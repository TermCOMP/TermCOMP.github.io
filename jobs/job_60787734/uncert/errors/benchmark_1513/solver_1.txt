last 3251 length 14496
CNF 3251 vars 14496 clauses
last 3890 length 16521
CNF 3890 vars 16521 clauses
last 1203 length 5131
last 1303 length 5533
CNF 1203 vars 5131 clauses
last 1012 length 4237
last 862 length 3737
CNF 1303 vars 5533 clauses
CNF 1012 vars 4237 clauses
CNF 862 vars 3737 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2646, clauses: 9962
last 2646 length 9962
CNF 2646 vars 9962 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2032, clauses: 7714
last 2032 length 7714
CNF 2032 vars 7714 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8948, clauses: 37589
last 8948 length 37589
CNF 8948 vars 37589 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2646, clauses: 9962, status: Unsatisfied, time: 0.130120624s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2032, clauses: 7714, status: Unsatisfied, time: 0.108028272s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6821, clauses: 28617
last 6821 length 28617
CNF 6821 vars 28617 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4166, clauses: 17538
last 4166 length 17538
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5443, clauses: 22919
last 5443 length 22919
CNF 4166 vars 17538 clauses
CNF 5443 vars 22919 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6821, clauses: 28617, status: Unsatisfied, time: 0.710817538s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4166, clauses: 17538, status: Unsatisfied, time: 0.608371512s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3348, clauses: 13494
last 3348 length 13494
CNF 3348 vars 13494 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5443, clauses: 22919, status: Unsatisfied, time: 1.062293255s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3348, clauses: 13494, status: Unsatisfied, time: 0.316614813s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11601, clauses: 51449
last 11601 length 51449
CNF 11601 vars 51449 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4365, clauses: 17373
last 4365 length 17373
CNF 4365 vars 17373 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6277, clauses: 24895
last 6277 length 24895
CNF 6277 vars 24895 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8948, clauses: 37589, status: Unsatisfied, time: 2.0823043s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4365, clauses: 17373, status: Satisfied, time: 0.427364726s
**************************************************
summary
**************************************************
SRS with 3 rules on 2 letters       DP
SRS with 7 strict rules and 3 weak rules on 4 letters       weights
SRS with 3 strict rules and 3 weak rules on 4 letters       EDG
SRS with 3 strict rules and 3 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 3 weak rules on 4 letters       weights
SRS with 0 strict rules and 3 weak rules on 2 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, b, a, b] -> [a, b, a, b] {- Input 0 -}
  [a, a, a, a] -> [b, b, b, b] {- Input 1 -}
  [b, b, a, b] -> [a, a, a, b] {- Input 2 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [b, b, a, b] ->= [a, b, a, b] {- DP Nontop (Input 0) -}
  [a, a, a, a] ->= [b, b, b, b] {- DP Nontop (Input 1) -}
  [b, b, a, b] ->= [a, a, a, b] {- DP Nontop (Input 2) -}
  [a#, a, a, a] |-> [b#] {- DP (Top 3) (Input 1) -}
  [a#, a, a, a] |-> [b#, b] {- DP (Top 2) (Input 1) -}
  [a#, a, a, a] |-> [b#, b, b] {- DP (Top 1) (Input 1) -}
  [a#, a, a, a] |-> [b#, b, b, b] {- DP (Top 0) (Input 1) -}
  [b#, b, a, b] |-> [a#, a, a, b] {- DP (Top 0) (Input 2) -}
  [b#, b, a, b] |-> [a#, a, b] {- DP (Top 1) (Input 2) -}
  [b#, b, a, b] |-> [a#, b, a, b] {- DP (Top 0) (Input 0) -}
reason
  (a, 1/1)
  (b, 1/1)
  (a#, 0/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [b, b, a, b] ->= [a, b, a, b] {- DP Nontop (Input 0) -}
  [a, a, a, a] ->= [b, b, b, b] {- DP Nontop (Input 1) -}
  [b, b, a, b] ->= [a, a, a, b] {- DP Nontop (Input 2) -}
  [a#, a, a, a] |-> [b#, b, b, b] {- DP (Top 0) (Input 1) -}
  [b#, b, a, b] |-> [a#, a, a, b] {- DP (Top 0) (Input 2) -}
  [b#, b, a, b] |-> [a#, b, a, b] {- DP (Top 0) (Input 0) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a, a, a] |-> [b#, b, b, b] {- DP (Top 0) (Input 1) -}
  [b#, b, a, b] |-> [a#, a, a, b] {- DP (Top 0) (Input 2) -}
  [b#, b, a, b] |-> [a#, b, a, b] {- DP (Top 0) (Input 0) -}
  [b, b, a, b] ->= [a, b, a, b] {- DP Nontop (Input 0) -}
  [a, a, a, a] ->= [b, b, b, b] {- DP Nontop (Input 1) -}
  [b, b, a, b] ->= [a, a, a, b] {- DP Nontop (Input 2) -}
reason
  ( a
  , Wk  / 0A  4A 4A 4A - \
        | 0A  0A 4A 4A - |
        | 0A  0A 0A 0A - |
        | -4A 0A 0A 0A - |
        \ -   -  -  -  - / )
  ( b
  , Wk  / 0A  0A 0A 4A - \
        | 0A  0A 0A 4A - |
        | 0A  0A 0A 4A - |
        | -4A 0A 0A 0A - |
        \ -   -  -  -  - / )
  ( a#
  , Wk  / 8A 12A 12A 12A - \
        | 8A 12A 12A 12A - |
        | 8A 12A 12A 12A - |
        | 8A 12A 12A 12A - |
        \ -  -   -   -   - / )
  ( b#
  , Wk  / 8A 8A 9A 12A - \
        | 8A 8A 9A 12A - |
        | 8A 8A 9A 12A - |
        | 8A 8A 9A 12A - |
        \ -  -  -  -   - / )
   property Termination
has value Just True
for SRS
  [b#, b, a, b] |-> [a#, a, a, b] {- DP (Top 0) (Input 2) -}
  [b#, b, a, b] |-> [a#, b, a, b] {- DP (Top 0) (Input 0) -}
  [b, b, a, b] ->= [a, b, a, b] {- DP Nontop (Input 0) -}
  [a, a, a, a] ->= [b, b, b, b] {- DP Nontop (Input 1) -}
  [b, b, a, b] ->= [a, a, a, b] {- DP Nontop (Input 2) -}
reason
  (a, 0/1)
  (b, 0/1)
  (a#, 0/1)
  (b#, 1/1)
   property Termination
has value Just True
for SRS
  [b, b, a, b] ->= [a, b, a, b] {- DP Nontop (Input 0) -}
  [a, a, a, a] ->= [b, b, b, b] {- DP Nontop (Input 1) -}
  [b, b, a, b] ->= [a, a, a, b] {- DP Nontop (Input 2) -}
reason
  EDG

**************************************************
skeleton: (3,2)\Deepee(7/3,4)\Weight\EDG(3/3,4)\Matrix{\Arctic}{4}(2/3,4)\Weight(0/3,2)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 2.390940025000
  min duration 0.940658528000
  total durat. 3.331598553000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 48}
    , self = 74
    , parent = Nothing
    , duration = 2.390940025000
    , status = Fail
    , start = 2025-09-03 12:11:40.495755927 UTC
    , finish = 2025-09-03 12:11:42.886695952 UTC
    , thread_cap_info = ("ThreadId 108", 1, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.248416644000
  min duration 0.817337087000
  total durat. 2.065753731000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 48}
    , self = 72
    , parent = Nothing
    , duration = 1.248416644000
    , status = Fail
    , start = 2025-09-03 12:11:40.766711864 UTC
    , finish = 2025-09-03 12:11:42.015128508 UTC
    , thread_cap_info = ("ThreadId 114", 1, False)}
**************************************************
F          Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F          , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F          = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F          , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F          = False}" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F          = 24} , self = 33 , parent = Nothing , duration = 0.129931576000 , status
F          = Fail , start = 2025-09-03 12:11:39.891781713 UTC , finish = 2025-09-03
F          12:11:40.021713289 UTC , thread_cap_info = ("ThreadId 22", 0, False)}
F          
| F        Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F        , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F        = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F        False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F        = Size { num_rules = 3 , num_strict_rules = 3 , num_top_rules = 0 , num_weak_rules
| F        = 0 , alphabet_size = 2 , total_length = 24} , self = 49 , parent = Nothing
| F        , duration = 0.262941104000 , status = Fail , start = 2025-09-03 12:11:39.891837878
| F        UTC , finish = 2025-09-03 12:11:40.154778982 UTC , thread_cap_info = ("ThreadId
| F        48", 1, False)}
| F        
| | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F      = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | F      = 12 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | F      = 120} , self = 41 , parent = Nothing , duration = 0.166809283000 , status
| | F      = Fail , start = 2025-09-03 12:11:39.902245712 UTC , finish = 2025-09-03
| | F      12:11:40.069054995 UTC , thread_cap_info = ("ThreadId 58", 3, False)}
| | F      
| | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | F    = 12 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | F    = 120} , self = 35 , parent = Nothing , duration = 0.121255184000 , status
| | | F    = Fail , start = 2025-09-03 12:11:39.907147994 UTC , finish = 2025-09-03
| | | F    12:11:40.028403178 UTC , thread_cap_info = ("ThreadId 60", 3, False)}
| | | F    
| | | | F  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | F  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | F  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | F  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | F  = Size { num_rules = 3 , num_strict_rules = 3 , num_top_rules = 0 , num_weak_rules
| | | | F  = 0 , alphabet_size = 2 , total_length = 24} , self = 50 , parent = Nothing
| | | | F  , duration = 0.524659677000 , status = Fail , start = 2025-09-03 12:11:39.907148715
| | | | F  UTC , finish = 2025-09-03 12:11:40.431808392 UTC , thread_cap_info = ("ThreadId
| | | | F  50", 1, False)}
| | | | F  
F | | | |  
  | | F |  
  | F   |  
  F     |  
        F  
F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F          = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
F          = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size = 3 , total_length
F          = 40} , self = 66 , parent = Nothing , duration = 0.105102106000 , status
F          = Fail , start = 2025-09-03 12:11:40.44236927 UTC , finish = 2025-09-03
F          12:11:40.547471376 UTC , thread_cap_info = ("ThreadId 99", 1, False)}
F          
| F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F        = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| F        = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size = 3 , total_length
| F        = 40} , self = 67 , parent = Nothing , duration = 0.179863709000 , status
| F        = Fail , start = 2025-09-03 12:11:40.442386459 UTC , finish = 2025-09-03
| F        12:11:40.622250168 UTC , thread_cap_info = ("ThreadId 102", 1, False)}
| F        
| | F      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F      = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | F      = 4 , total_length = 48} , self = 68 , parent = Nothing , duration = 0.279425426000
| | F      , status = Fail , start = 2025-09-03 12:11:40.472496541 UTC , finish =
| | F      2025-09-03 12:11:40.751921967 UTC , thread_cap_info = ("ThreadId 105",
| | F      1, False)}
| | F      
| | | F    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | F    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | F    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | F    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | F    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
| | | F    = 4 , total_length = 48} , self = 74 , parent = Nothing , duration = 2.390940025000
| | | F    , status = Fail , start = 2025-09-03 12:11:40.495755927 UTC , finish =
| | | F    2025-09-03 12:11:42.886695952 UTC , thread_cap_info = ("ThreadId 108",
| | | F    1, False)}
| | | F    
F | | |    
  F | |    
F   | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F   | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F   | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F   | |    = 5 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
F   | |    = 3 , total_length = 40} , self = 69 , parent = Nothing , duration = 0.134595750000
F   | |    , status = Fail , start = 2025-09-03 12:11:40.624400899 UTC , finish =
F   | |    2025-09-03 12:11:40.758996649 UTC , thread_cap_info = ("ThreadId 109",
F   | |    1, False)}
F   | |    
| F | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| F | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| F | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| F | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| F | |    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| F | |    = 3 , total_length = 40} , self = 70 , parent = Nothing , duration = 0.940658528000
| F | |    , status = Fail , start = 2025-09-03 12:11:40.646045363 UTC , finish =
| F | |    2025-09-03 12:11:41.586703891 UTC , thread_cap_info = ("ThreadId 111",
| F | |    1, False)}
| F | |    
| | F |    
F |   |    
F |   |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
F |   |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F |   |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F |   |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F |   |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F |   |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
F |   |    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
F |   |    = 4 , total_length = 48} , self = 72 , parent = Nothing , duration = 1.248416644000
F |   |    , status = Fail , start = 2025-09-03 12:11:40.766711864 UTC , finish =
F |   |    2025-09-03 12:11:42.015128508 UTC , thread_cap_info = ("ThreadId 114",
F |   |    1, False)}
F |   |    
| | F |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | F |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | F |    , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| | F |    = 3 , total_length = 40} , self = 71 , parent = Nothing , duration = 0.817337087000
| | F |    , status = Fail , start = 2025-09-03 12:11:40.7925708 UTC , finish = 2025-09-03
| | F |    12:11:41.609907887 UTC , thread_cap_info = ("ThreadId 115", 1, False)}
| | F |    
| F | |    
|   F |    
| F   |    Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| F   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F   |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F   |    = 5 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 3 , alphabet_size
| F   |    = 3 , total_length = 40} , self = 73 , parent = Nothing , duration = 0.505281137000
| F   |    , status = Fail , start = 2025-09-03 12:11:41.628524463 UTC , finish =
| F   |    2025-09-03 12:11:42.1338056 UTC , thread_cap_info = ("ThreadId 119", 1,
| F   |    False)}
| F   |    
F |   |    
S |   |    Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
S |   |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S |   |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S |   |    = 6 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 3 , alphabet_size
S |   |    = 4 , total_length = 48} , self = 75 , parent = Nothing , duration = 0.842930770000
S |   |    , status = Success , start = 2025-09-03 12:11:42.06880996 UTC , finish
S |   |    = 2025-09-03 12:11:42.91174073 UTC , thread_cap_info = ("ThreadId 122",
S |   |    1, False)}
S |   |    
| F   |    
|     F    
S          
