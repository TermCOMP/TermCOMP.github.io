Input TRS:
    1: a(d(x1)) -> d(b(x1))
    2: a(x1) -> b(b(b(x1)))
    3: d(x1) -> x1
    4: a(x1) -> x1
    5: b(d(b(x1))) -> a(d(x1))
    6: b(c(x1)) -> c(d(d(x1)))
    7: a(c(x1)) -> b(b(c(d(x1))))
Number of strict rules: 7
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #a(x1) -> #b(b(b(x1)))
   #2: #a(x1) -> #b(b(x1))
   #3: #a(x1) -> #b(x1)
   #4: #b(c(x1)) -> #d(d(x1))
   #5: #b(c(x1)) -> #d(x1)
   #6: #a(c(x1)) -> #b(b(c(d(x1))))
   #7: #a(c(x1)) -> #b(c(d(x1)))
   #8: #a(c(x1)) -> #d(x1)
   #9: #b(d(b(x1))) -> #a(d(x1))
   #10: #b(d(b(x1))) -> #d(x1)
   #11: #a(d(x1)) -> #d(b(x1))
   #12: #a(d(x1)) -> #b(x1)
Number of SCCs: 1, DPs: 5, edges: 8
	SCC { #1..3 #9 #12 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     a(x1)	weight: x1
     d(x1)	weight: (/ 1 4) + x1
     b(x1)	weight: x1
     c(x1)	weight: (/ 1 4)
   #d(x1)	weight: 0
   #a(x1)	weight: x1
   #b(x1)	weight: x1
    Usable rules: { 1..7 }
    Removed DPs: #12
Number of SCCs: 1, DPs: 4, edges: 6
	SCC { #1..3 #9 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... succeeded.
     a(x1)	weight: (/ 3 8) + x1_1; (/ 3 8) + x1_2
     d(x1)	weight: (/ 1 8) + x1_1 + x1_2; (/ 1 8) + x1_1 + x1_2
     b(x1)	weight: (/ 1 8) + x1_1; (/ 1 8) + x1_2
     c(x1)	weight: (/ 1 8); 0
   #d(x1)	weight: 0; 0
   #a(x1)	weight: (/ 1 2) + x1_1 + x1_2; (/ 1 4) + x1_2
   #b(x1)	weight: x1_1 + x1_2; x1_2
    Usable rules: { 1..7 }
    Removed DPs: #2 #3
Number of SCCs: 1, DPs: 2, edges: 2
	SCC { #1 #9 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
