last 904 length 3647
last 825 length 3329
CNF 904 vars 3647 clauses
CNF 825 vars 3329 clauses
last 11646 length 50215
CNF 11646 vars 50215 clauses
last 929 length 3691
last 819 length 3253
CNF 929 vars 3691 clauses
last 13595 length 57836
CNF 13595 vars 57836 clauses
CNF 819 vars 3253 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4037, clauses: 14631
last 4037 length 14631
CNF 4037 vars 14631 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11673, clauses: 48446
last 11673 length 48446
CNF 11673 vars 48446 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11673, clauses: 48446, status: Satisfied, time: 0.078540959s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4213, clauses: 15205
last 4213 length 15205
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
CNF 4213 vars 15205 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12043, clauses: 49893
last 12043 length 49893
last 731 length 2919
CNF 12043 vars 49893 clauses
last 803 length 3200
CNF 731 vars 2919 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4213, clauses: 15205, status: Satisfied, time: 0.126782408s
CNF 803 vars 3200 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3721, clauses: 13372
last 3721 length 13372
CNF 3721 vars 13372 clauses
last 898 length 3574
last 803 length 3195
CNF 898 vars 3574 clauses
CNF 803 vars 3195 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11042, clauses: 45773
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3721, clauses: 13372, status: Satisfied, time: 0.154583642s
last 11042 length 45773
CNF 11042 vars 45773 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4107, clauses: 14780
last 4107 length 14780
CNF 4107 vars 14780 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4107, clauses: 14780, status: Satisfied, time: 0.053601695s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11997, clauses: 49717
last 722 length 2892
last 757 length 3024
CNF 722 vars 2892 clauses
CNF 757 vars 3024 clauses
last 740 length 2920
last 726 length 2868
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3615, clauses: 12947
CNF 740 vars 2920 clauses
last 3615 length 12947
CNF 726 vars 2868 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10996, clauses: 45597
last 10996 length 45597
CNF 3615 vars 12947 clauses
CNF 10996 vars 45597 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3382, clauses: 12049
last 3382 length 12049
CNF 3382 vars 12049 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3615, clauses: 12947, status: Unsatisfied, time: 0.245299476s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11194, clauses: 46475
last 11194 length 46475
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3382, clauses: 12049, status: Unsatisfied, time: 0.11083962s
CNF 11194 vars 46475 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7046, clauses: 27687
last 7046 length 27687
CNF 7046 vars 27687 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7062, clauses: 27775
last 7062 length 27775
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11194, clauses: 46475, status: Unsatisfied, time: 0.237429069s
CNF 7062 vars 27775 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7046, clauses: 27687, status: Satisfied, time: 0.125488273s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5496, clauses: 20849
last 5496 length 20849
CNF 5496 vars 20849 clauses
**************************************************
summary
**************************************************
SRS with 7 rules on 4 letters       mirror
SRS with 7 rules on 4 letters       context
SRS with 13 rules on 4 letters       mirror
SRS with 13 rules on 4 letters       DP
SRS with 12 strict rules and 13 weak rules on 7 letters       weights
SRS with 7 strict rules and 13 weak rules on 6 letters       EDG
SRS with 6 strict rules and 13 weak rules on 6 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 5 strict rules and 13 weak rules on 6 letters       EDG
SRS with 5 strict rules and 13 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 4 strict rules and 13 weak rules on 6 letters       EDG
SRS with 4 strict rules and 13 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 13 weak rules on 4 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, d] -> [d, b] {- Input 0 -}
  [a] -> [b, b, b] {- Input 1 -}
  [d] -> [] {- Input 2 -}
  [a] -> [] {- Input 3 -}
  [b, d, b] -> [a, d] {- Input 4 -}
  [b, c] -> [c, d, d] {- Input 5 -}
  [a, c] -> [b, b, c, d] {- Input 6 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [d, a] -> [b, d] {- Mirror (Input 0) -}
  [a] -> [b, b, b] {- Mirror (Input 1) -}
  [d] -> [] {- Mirror (Input 2) -}
  [a] -> [] {- Mirror (Input 3) -}
  [b, d, b] -> [d, a] {- Mirror (Input 4) -}
  [c, b] -> [d, d, c] {- Mirror (Input 5) -}
  [c, a] -> [d, c, b, b] {- Mirror (Input 6) -}
reason
  context
   property Termination
has value Just True
for SRS
  [d, a] -> [b, d] {- Mirror (Input 0) -}
  [a] -> [b, b, b] {- Mirror (Input 1) -}
  [d, d] -> [d] {- Mirror (Input 2) -}
  [a, d] -> [a] {- Mirror (Input 2) -}
  [b, d] -> [b] {- Mirror (Input 2) -}
  [c, d] -> [c] {- Mirror (Input 2) -}
  [d, a] -> [d] {- Mirror (Input 3) -}
  [a, a] -> [a] {- Mirror (Input 3) -}
  [b, a] -> [b] {- Mirror (Input 3) -}
  [c, a] -> [c] {- Mirror (Input 3) -}
  [b, d, b] -> [d, a] {- Mirror (Input 4) -}
  [c, b] -> [d, d, c] {- Mirror (Input 5) -}
  [c, a] -> [d, c, b, b] {- Mirror (Input 6) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, d] -> [d, b] {- Input 0 -}
  [a] -> [b, b, b] {- Input 1 -}
  [d, d] -> [d] {- Input 2 -}
  [d, a] -> [a] {- Input 2 -}
  [d, b] -> [b] {- Input 2 -}
  [d, c] -> [c] {- Input 2 -}
  [a, d] -> [d] {- Input 3 -}
  [a, a] -> [a] {- Input 3 -}
  [a, b] -> [b] {- Input 3 -}
  [a, c] -> [c] {- Input 3 -}
  [b, d, b] -> [a, d] {- Input 4 -}
  [b, c] -> [c, d, d] {- Input 5 -}
  [a, c] -> [b, b, c, d] {- Input 6 -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, d] ->= [d, b] {- DP Nontop (Input 0) -}
  [a] ->= [b, b, b] {- DP Nontop (Input 1) -}
  [d, d] ->= [d] {- DP Nontop (Input 2) -}
  [d, a] ->= [a] {- DP Nontop (Input 2) -}
  [d, b] ->= [b] {- DP Nontop (Input 2) -}
  [d, c] ->= [c] {- DP Nontop (Input 2) -}
  [a, d] ->= [d] {- DP Nontop (Input 3) -}
  [a, a] ->= [a] {- DP Nontop (Input 3) -}
  [a, b] ->= [b] {- DP Nontop (Input 3) -}
  [a, c] ->= [c] {- DP Nontop (Input 3) -}
  [b, d, b] ->= [a, d] {- DP Nontop (Input 4) -}
  [b, c] ->= [c, d, d] {- DP Nontop (Input 5) -}
  [a, c] ->= [b, b, c, d] {- DP Nontop (Input 6) -}
  [a#] |-> [b#] {- DP (Top 2) (Input 1) -}
  [a#] |-> [b#, b] {- DP (Top 1) (Input 1) -}
  [a#] |-> [b#, b, b] {- DP (Top 0) (Input 1) -}
  [a#, d] |-> [d#, b] {- DP (Top 0) (Input 0) -}
  [a#, d] |-> [b#] {- DP (Top 1) (Input 0) -}
  [a#, c] |-> [d#] {- DP (Top 3) (Input 6) -}
  [a#, c] |-> [b#, b, c, d] {- DP (Top 0) (Input 6) -}
  [a#, c] |-> [b#, c, d] {- DP (Top 1) (Input 6) -}
  [b#, d, b] |-> [d#] {- DP (Top 1) (Input 4) -}
  [b#, d, b] |-> [a#, d] {- DP (Top 0) (Input 4) -}
  [b#, c] |-> [d#] {- DP (Top 2) (Input 5) -}
  [b#, c] |-> [d#, d] {- DP (Top 1) (Input 5) -}
reason
  (d, 0/1)
  (a, 0/1)
  (b, 0/1)
  (c, 1/1)
  (d#, 0/1)
  (a#, 1/1)
  (b#, 1/1)
   property Termination
has value Just True
for SRS
  [a, d] ->= [d, b] {- DP Nontop (Input 0) -}
  [a] ->= [b, b, b] {- DP Nontop (Input 1) -}
  [d, d] ->= [d] {- DP Nontop (Input 2) -}
  [d, a] ->= [a] {- DP Nontop (Input 2) -}
  [d, b] ->= [b] {- DP Nontop (Input 2) -}
  [d, c] ->= [c] {- DP Nontop (Input 2) -}
  [a, d] ->= [d] {- DP Nontop (Input 3) -}
  [a, a] ->= [a] {- DP Nontop (Input 3) -}
  [a, b] ->= [b] {- DP Nontop (Input 3) -}
  [a, c] ->= [c] {- DP Nontop (Input 3) -}
  [b, d, b] ->= [a, d] {- DP Nontop (Input 4) -}
  [b, c] ->= [c, d, d] {- DP Nontop (Input 5) -}
  [a, c] ->= [b, b, c, d] {- DP Nontop (Input 6) -}
  [a#] |-> [b#] {- DP (Top 2) (Input 1) -}
  [a#] |-> [b#, b] {- DP (Top 1) (Input 1) -}
  [a#] |-> [b#, b, b] {- DP (Top 0) (Input 1) -}
  [a#, d] |-> [b#] {- DP (Top 1) (Input 0) -}
  [a#, c] |-> [b#, b, c, d] {- DP (Top 0) (Input 6) -}
  [a#, c] |-> [b#, c, d] {- DP (Top 1) (Input 6) -}
  [b#, d, b] |-> [a#, d] {- DP (Top 0) (Input 4) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#] |-> [b#] {- DP (Top 2) (Input 1) -}
  [b#, d, b] |-> [a#, d] {- DP (Top 0) (Input 4) -}
  [a#] |-> [b#, b] {- DP (Top 1) (Input 1) -}
  [a#] |-> [b#, b, b] {- DP (Top 0) (Input 1) -}
  [a#, d] |-> [b#] {- DP (Top 1) (Input 0) -}
  [a#, c] |-> [b#, b, c, d] {- DP (Top 0) (Input 6) -}
  [a, d] ->= [d, b] {- DP Nontop (Input 0) -}
  [a] ->= [b, b, b] {- DP Nontop (Input 1) -}
  [d, d] ->= [d] {- DP Nontop (Input 2) -}
  [d, a] ->= [a] {- DP Nontop (Input 2) -}
  [d, b] ->= [b] {- DP Nontop (Input 2) -}
  [d, c] ->= [c] {- DP Nontop (Input 2) -}
  [a, d] ->= [d] {- DP Nontop (Input 3) -}
  [a, a] ->= [a] {- DP Nontop (Input 3) -}
  [a, b] ->= [b] {- DP Nontop (Input 3) -}
  [a, c] ->= [c] {- DP Nontop (Input 3) -}
  [b, d, b] ->= [a, d] {- DP Nontop (Input 4) -}
  [b, c] ->= [c, d, d] {- DP Nontop (Input 5) -}
  [a, c] ->= [b, b, c, d] {- DP Nontop (Input 6) -}
reason
  ( d
  , Wk  / 0A 0A -  \
        | -  0A -  |
        \ -  -  0A / )
  ( a
  , Wk  / 0A -1A 2A \
        | -  0A  2A |
        \ -  -   0A / )
  ( b
  , Wk  / 0A -1A -  \
        | -  0A  2A |
        \ -  -   0A / )
  ( c
  , Wk  / 0A 0A -   \
        | 1A 1A -2A |
        \ -  -  0A  / )
  ( a#
  , Wk  / 0A 0A 2A \
        | -  -  -  |
        \ -  -  0A / )
  ( b#
  , Wk  / 0A - -  \
        | -  - -  |
        \ -  - 0A / )
   property Termination
has value Just True
for SRS
  [a#] |-> [b#] {- DP (Top 2) (Input 1) -}
  [b#, d, b] |-> [a#, d] {- DP (Top 0) (Input 4) -}
  [a#] |-> [b#, b] {- DP (Top 1) (Input 1) -}
  [a#] |-> [b#, b, b] {- DP (Top 0) (Input 1) -}
  [a#, d] |-> [b#] {- DP (Top 1) (Input 0) -}
  [a, d] ->= [d, b] {- DP Nontop (Input 0) -}
  [a] ->= [b, b, b] {- DP Nontop (Input 1) -}
  [d, d] ->= [d] {- DP Nontop (Input 2) -}
  [d, a] ->= [a] {- DP Nontop (Input 2) -}
  [d, b] ->= [b] {- DP Nontop (Input 2) -}
  [d, c] ->= [c] {- DP Nontop (Input 2) -}
  [a, d] ->= [d] {- DP Nontop (Input 3) -}
  [a, a] ->= [a] {- DP Nontop (Input 3) -}
  [a, b] ->= [b] {- DP Nontop (Input 3) -}
  [a, c] ->= [c] {- DP Nontop (Input 3) -}
  [b, d, b] ->= [a, d] {- DP Nontop (Input 4) -}
  [b, c] ->= [c, d, d] {- DP Nontop (Input 5) -}
  [a, c] ->= [b, b, c, d] {- DP Nontop (Input 6) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#] |-> [b#] {- DP (Top 2) (Input 1) -}
  [b#, d, b] |-> [a#, d] {- DP (Top 0) (Input 4) -}
  [a#] |-> [b#, b] {- DP (Top 1) (Input 1) -}
  [a#] |-> [b#, b, b] {- DP (Top 0) (Input 1) -}
  [a#, d] |-> [b#] {- DP (Top 1) (Input 0) -}
  [a, d] ->= [d, b] {- DP Nontop (Input 0) -}
  [a] ->= [b, b, b] {- DP Nontop (Input 1) -}
  [d, d] ->= [d] {- DP Nontop (Input 2) -}
  [d, a] ->= [a] {- DP Nontop (Input 2) -}
  [d, b] ->= [b] {- DP Nontop (Input 2) -}
  [d, c] ->= [c] {- DP Nontop (Input 2) -}
  [a, d] ->= [d] {- DP Nontop (Input 3) -}
  [a, a] ->= [a] {- DP Nontop (Input 3) -}
  [a, b] ->= [b] {- DP Nontop (Input 3) -}
  [a, c] ->= [c] {- DP Nontop (Input 3) -}
  [b, d, b] ->= [a, d] {- DP Nontop (Input 4) -}
  [b, c] ->= [c, d, d] {- DP Nontop (Input 5) -}
  [a, c] ->= [b, b, c, d] {- DP Nontop (Input 6) -}
reason
  ( d
  , Wk  / 0A  0A  3A - \
        | 0A  0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( a
  , Wk  / 0A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( c
  , Wk  / 9A 9A 12A - \
        | 9A 9A 9A  - |
        | 9A 9A 9A  - |
        \ -  -  -   - / )
  ( a#
  , Wk  / 1A 4A 4A - \
        | 1A 4A 4A - |
        | 1A 4A 4A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 1A 1A 1A - \
        | 1A 1A 1A - |
        | 1A 1A 1A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [a#] |-> [b#] {- DP (Top 2) (Input 1) -}
  [b#, d, b] |-> [a#, d] {- DP (Top 0) (Input 4) -}
  [a#] |-> [b#, b] {- DP (Top 1) (Input 1) -}
  [a#] |-> [b#, b, b] {- DP (Top 0) (Input 1) -}
  [a, d] ->= [d, b] {- DP Nontop (Input 0) -}
  [a] ->= [b, b, b] {- DP Nontop (Input 1) -}
  [d, d] ->= [d] {- DP Nontop (Input 2) -}
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7062, clauses: 27775, status: Unsatisfied, time: 0.272708011s
  [d, a] ->= [a] {- DP Nontop (Input 2) -}Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5496, clauses: 20849, status: Unsatisfied, time: 0.275903346s

  [d, b] ->= [b] {- DP Nontop (Input 2) -}
  [d, c] ->= [c] {- DP Nontop (Input 2) -}
  [a, d] ->= [d] {- DP Nontop (Input 3) -}
  [a, a] ->= [a] {- DP Nontop (Input 3) -}
  [a, b] ->= [b] {- DP Nontop (Input 3) -}
  [a, c] ->= [c] {- DP Nontop (Input 3) -}
  [b, d, b] ->= [a, d] {- DP Nontop (Input 4) -}
  [b, c] ->= [c, d, d] {- DP Nontop (Input 5) -}
  [a, c] ->= [b, b, c, d] {- DP Nontop (Input 6) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#] |-> [b#] {- DP (Top 2) (Input 1) -}
  [b#, d, b] |-> [a#, d] {- DP (Top 0) (Input 4) -}
  [a#] |-> [b#, b] {- DP (Top 1) (Input 1) -}
  [a#] |-> [b#, b, b] {- DP (Top 0) (Input 1) -}
  [a, d] ->= [d, b] {- DP Nontop (Input 0) -}
  [a] ->= [b, b, b] {- DP Nontop (Input 1) -}
  [d, d] ->= [d] {- DP Nontop (Input 2) -}
  [d, a] ->= [a] {- DP Nontop (Input 2) -}
  [d, b] ->= [b] {- DP Nontop (Input 2) -}
  [d, c] ->= [c] {- DP Nontop (Input 2) -}
  [a, d] ->= [d] {- DP Nontop (Input 3) -}
  [a, a] ->= [a] {- DP Nontop (Input 3) -}
  [a, b] ->= [b] {- DP Nontop (Input 3) -}
  [a, c] ->= [c] {- DP Nontop (Input 3) -}
  [b, d, b] ->= [a, d] {- DP Nontop (Input 4) -}
  [b, c] ->= [c, d, d] {- DP Nontop (Input 5) -}
  [a, c] ->= [b, b, c, d] {- DP Nontop (Input 6) -}
reason
  ( d
  , Wk  / 1 1 1 \
        | 1 5 1 |
        \ 0 0 1 / )
  ( a
  , Wk  / 1 0 1 \
        | 0 1 6 |
        \ 0 0 1 / )
  ( b
  , Wk  / 1 0 0 \
        | 0 1 1 |
        \ 0 0 1 / )
  ( c
  , Wk  / 0 0 0 \
        | 0 0 5 |
        \ 0 0 1 / )
  ( a#
  , Wk  / 4 0 3 \
        | 0 0 0 |
        \ 0 0 1 / )
  ( b#
  , Wk  / 4 0 2 \
        | 0 0 0 |
        \ 0 0 1 / )
   property Termination
has value Just True
for SRS
  [a, d] ->= [d, b] {- DP Nontop (Input 0) -}
  [a] ->= [b, b, b] {- DP Nontop (Input 1) -}
  [d, d] ->= [d] {- DP Nontop (Input 2) -}
  [d, a] ->= [a] {- DP Nontop (Input 2) -}
  [d, b] ->= [b] {- DP Nontop (Input 2) -}
  [d, c] ->= [c] {- DP Nontop (Input 2) -}
  [a, d] ->= [d] {- DP Nontop (Input 3) -}
  [a, a] ->= [a] {- DP Nontop (Input 3) -}
  [a, b] ->= [b] {- DP Nontop (Input 3) -}
  [a, c] ->= [c] {- DP Nontop (Input 3) -}
  [b, d, b] ->= [a, d] {- DP Nontop (Input 4) -}
  [b, c] ->= [c, d, d] {- DP Nontop (Input 5) -}
  [a, c] ->= [b, b, c, d] {- DP Nontop (Input 6) -}
reason
  EDG

**************************************************
skeleton: \Mirror(7,4)\Context\Mirror(13,4)\Deepee(12/13,7)\Weight(7/13,6)\EDG(6/13,6)\Matrix{\ArcticBZ}{3}\EDG(5/13,6)\Matrix{\Arctic}{3}\EDG(4/13,6)\Matrix{\Natural}{3}(0/13,4)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.533442073000
  min duration 0.034063810000
  total durat. 1.117239474000
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 4
  max duration 0.748052673000
  min duration 0.011614580000
  total durat. 1.179362624000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 4
  max duration 0.763335571000
  min duration 0.153550986000
  total durat. 1.546767768000
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 2.075251539000
  min duration 2.075251539000
  total durat. 2.075251539000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 7
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 4
      , total_length = 26}
    , self = 125
    , parent = Nothing
    , duration = 2.075251539000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 13:33:50.462313307 UTC
    , finish = 2025-09-03 13:33:52.537564846 UTC
    , thread_cap_info = ("ThreadId 46", 3, False)}
**************************************************
E                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E                , closure = Forward\n , start_strict_only = True\n , max_closure_length
E                = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
E                Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
E                8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
E                = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
E                ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
E                1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E                = True})" , input_size = Size { num_rules = 7 , num_strict_rules = 7 ,
E                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
E                = 26} , self = 125 , parent = Nothing , duration = 2.075251539000 , status
E                = Except "AsyncCancelled" , start = 2025-09-03 13:33:50.462313307 UTC ,
E                finish = 2025-09-03 13:33:52.537564846 UTC , thread_cap_info = ("ThreadId
E                46", 3, False)}
E                
| F              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F              = Size { num_rules = 112 , num_strict_rules = 112 , num_top_rules = 0 ,
| F              num_weak_rules = 0 , alphabet_size = 16 , total_length = 640} , self =
| F              60 , parent = Nothing , duration = 0.351352893000 , status = Fail , start
| F              = 2025-09-03 13:33:50.464558488 UTC , finish = 2025-09-03 13:33:50.815911381
| F              UTC , thread_cap_info = ("ThreadId 54", 2, False)}
| F              
| | F            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | F            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | F            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | F            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | F            = Size { num_rules = 112 , num_strict_rules = 112 , num_top_rules = 0 ,
| | F            num_weak_rules = 0 , alphabet_size = 16 , total_length = 640} , self =
| | F            70 , parent = Nothing , duration = 0.748052673000 , status = Fail , start
| | F            = 2025-09-03 13:33:50.464561668 UTC , finish = 2025-09-03 13:33:51.212614341
| | F            UTC , thread_cap_info = ("ThreadId 56", 2, False)}
| | F            
| | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 112 , num_strict_rules
| | | F          = 112 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 16 , total_length
| | | F          = 640} , self = 66 , parent = Nothing , duration = 0.533442073000 , status
| | | F          = Fail , start = 2025-09-03 13:33:50.47291245 UTC , finish = 2025-09-03
| | | F          13:33:51.006354523 UTC , thread_cap_info = ("ThreadId 62", 1, False)}
| | | F          
| | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 112 , num_strict_rules
| | | | F        = 112 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 16 , total_length
| | | | F        = 640} , self = 63 , parent = Nothing , duration = 0.462001341000 , status
| | | | F        = Fail , start = 2025-09-03 13:33:50.483822711 UTC , finish = 2025-09-03
| | | | F        13:33:50.945824052 UTC , thread_cap_info = ("ThreadId 65", 1, False)}
| | | | F        
| F | | |        
| F | | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | |        = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| F | | |        = 7 , num_top_rules = 7 , num_weak_rules = 13 , alphabet_size = 7 , total_length
| F | | |        = 73} , self = 64 , parent = Nothing , duration = 0.160574353000 , status
| F | | |        = Fail , start = 2025-09-03 13:33:50.823298627 UTC , finish = 2025-09-03
| F | | |        13:33:50.98387298 UTC , thread_cap_info = ("ThreadId 97", 3, False)}
| F | | |        
| | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| | | | | F      = 7 , num_top_rules = 7 , num_weak_rules = 13 , alphabet_size = 7 , total_length
| | | | | F      = 73} , self = 65 , parent = Nothing , duration = 0.145986795000 , status
| | | | | F      = Fail , start = 2025-09-03 13:33:50.860366391 UTC , finish = 2025-09-03
| | | | | F      13:33:51.006353186 UTC , thread_cap_info = ("ThreadId 98", 3, False)}
| | | | | F      
| | | | | | F    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F    = 19 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 13 ,
| | | | | | F    alphabet_size = 6 , total_length = 71} , self = 69 , parent = Nothing ,
| | | | | | F    duration = 0.308137090000 , status = Fail , start = 2025-09-03 13:33:50.874744096
| | | | | | F    UTC , finish = 2025-09-03 13:33:51.182881186 UTC , thread_cap_info = ("ThreadId
| | | | | | F    100", 3, False)}
| | | | | | F    
| | | | | | | S  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | S  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | S  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | S  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | S  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | S  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 19
| | | | | | | S  , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 13 , alphabet_size
| | | | | | | S  = 6 , total_length = 71} , self = 67 , parent = Nothing , duration = 0.247833417000
| | | | | | | S  , status = Success , start = 2025-09-03 13:33:50.883308688 UTC , finish
| | | | | | | S  = 2025-09-03 13:33:51.131142105 UTC , thread_cap_info = ("ThreadId 101",
| | | | | | | S  3, False)}
| | | | | | | S  
| | | | F | | |  
| F | |   | | |  
|   | |   F | |  
|   | F     | |  
| S |       | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S |       | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S |       | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S |       | |  = 20 , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 13 ,
| S |       | |  alphabet_size = 7 , total_length = 73} , self = 81 , parent = Nothing ,
| S |       | |  duration = 0.302886862000 , status = Success , start = 2025-09-03 13:33:51.00959316
| S |       | |  UTC , finish = 2025-09-03 13:33:51.312480022 UTC , thread_cap_info = ("ThreadId
| S |       | |  105", 3, False)}
| S |       | |  
| | | E     | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E     | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E     | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E     | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E     | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E     | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 20
| | | E     | |  , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 13 , alphabet_size
| | | E     | |  = 7 , total_length = 73} , self = 86 , parent = Nothing , duration = 0.313767007000
| | | E     | |  , status = Except "AsyncCancelled" , start = 2025-09-03 13:33:51.014448228
| | | E     | |  UTC , finish = 2025-09-03 13:33:51.328215235 UTC , thread_cap_info = ("ThreadId
| | | E     | |  106", 3, False)}
| | | E     | |  
| | | |     | S  
| | | |     F    
| | F |          
| | S |          Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
| | S |          verbose = False}" , input_size = Size { num_rules = 332 , num_strict_rules
| | S |          = 220 , num_top_rules = 220 , num_weak_rules = 112 , alphabet_size = 32
| | S |          , total_length = 1844} , self = 93 , parent = Nothing , duration = 0.208124162000
| | S |          , status = Success , start = 2025-09-03 13:33:51.303292675 UTC , finish
| | S |          = 2025-09-03 13:33:51.511416837 UTC , thread_cap_info = ("ThreadId 118",
| | S |          2, False)}
| | S |          
| S | |          
| S | |          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | |          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | |          = 18 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 13 ,
| S | |          alphabet_size = 6 , total_length = 65} , self = 97 , parent = Nothing ,
| S | |          duration = 0.210966577000 , status = Success , start = 2025-09-03 13:33:51.314616312
| S | |          UTC , finish = 2025-09-03 13:33:51.525582889 UTC , thread_cap_info = ("ThreadId
| S | |          130", 3, False)}
| S | |          
| | | E          
| | | E          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 18
| | | E          , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 13 , alphabet_size
| | | E          = 6 , total_length = 65} , self = 100 , parent = Nothing , duration = 0.316114204000
| | | E          , status = Except "AsyncCancelled" , start = 2025-09-03 13:33:51.32827532
| | | E          UTC , finish = 2025-09-03 13:33:51.644389524 UTC , thread_cap_info = ("ThreadId
| | | E          131", 3, False)}
| | | E          
| | | | S        Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
| | | | S        verbose = False}" , input_size = Size { num_rules = 270 , num_strict_rules
| | | | S        = 158 , num_top_rules = 158 , num_weak_rules = 112 , alphabet_size = 27
| | | | S        , total_length = 1507} , self = 90 , parent = Nothing , duration = 0.128464321000
| | | | S        , status = Success , start = 2025-09-03 13:33:51.343291004 UTC , finish
| | | | S        = 2025-09-03 13:33:51.471755325 UTC , thread_cap_info = ("ThreadId 116",
| | | | S        2, False)}
| | | | S        
| | | | S        
| | S |          
| | S |          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S |          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S |          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S |          = 19 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 13 ,
| | S |          alphabet_size = 7 , total_length = 70} , self = 101 , parent = Nothing
| | S |          , duration = 0.133726319000 , status = Success , start = 2025-09-03 13:33:51.517493344
| | S |          UTC , finish = 2025-09-03 13:33:51.651219663 UTC , thread_cap_info = ("ThreadId
| | S |          145", 3, False)}
| | S |          
| S | |          
| E | |          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E | |          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E | |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 19
| E | |          , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 13 , alphabet_size
| E | |          = 7 , total_length = 70} , self = 106 , parent = Nothing , duration = 0.153550986000
| E | |          , status = Except "AsyncCancelled" , start = 2025-09-03 13:33:51.525601807
| E | |          UTC , finish = 2025-09-03 13:33:51.679152793 UTC , thread_cap_info = ("ThreadId
| E | |          146", 3, False)}
| E | |          
| | | E          
| | S            
| E              
| F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F              = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| F              = 2 , num_top_rules = 2 , num_weak_rules = 13 , alphabet_size = 6 , total_length
| F              = 57} , self = 115 , parent = Nothing , duration = 0.226724115000 , status
| F              = Fail , start = 2025-09-03 13:33:51.697365203 UTC , finish = 2025-09-03
| F              13:33:51.924089318 UTC , thread_cap_info = ("ThreadId 164", 3, False)}
| F              
| | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F            = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | F            = 2 , num_top_rules = 2 , num_weak_rules = 13 , alphabet_size = 6 , total_length
| | F            = 57} , self = 116 , parent = Nothing , duration = 0.226731229000 , status
| | F            = Fail , start = 2025-09-03 13:33:51.697368921 UTC , finish = 2025-09-03
| | F            13:33:51.92410015 UTC , thread_cap_info = ("ThreadId 165", 3, False)}
| | F            
| | | F          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F          = 17 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 13 ,
| | | F          alphabet_size = 6 , total_length = 62} , self = 117 , parent = Nothing
| | | F          , duration = 0.433937212000 , status = Fail , start = 2025-09-03 13:33:51.703296867
| | | F          UTC , finish = 2025-09-03 13:33:52.137234079 UTC , thread_cap_info = ("ThreadId
| | | F          166", 3, False)}
| | | F          
| | | | E        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 17
| | | | E        , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 13 , alphabet_size
| | | | E        = 6 , total_length = 62} , self = 122 , parent = Nothing , duration = 0.763335571000
| | | | E        , status = Except "AsyncCancelled" , start = 2025-09-03 13:33:51.741143593
| | | | E        UTC , finish = 2025-09-03 13:33:52.504479164 UTC , thread_cap_info = ("ThreadId
| | | | E        167", 3, False)}
| | | | E        
| F | | |        
|   F | |        
| F   | |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| F   | |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| F   | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| F   | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F   | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F   | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 15
| F   | |        , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 13 , alphabet_size
| F   | |        = 6 , total_length = 57} , self = 119 , parent = Nothing , duration = 0.479679112000
| F   | |        , status = Fail , start = 2025-09-03 13:33:51.940105525 UTC , finish =
| F   | |        2025-09-03 13:33:52.419784637 UTC , thread_cap_info = ("ThreadId 173",
| F   | |        3, False)}
| F   | |        
| | F | |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | |        = 15 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 13 ,
| | F | |        alphabet_size = 6 , total_length = 57} , self = 118 , parent = Nothing
| | F | |        , duration = 0.219036976000 , status = Fail , start = 2025-09-03 13:33:51.963290564
| | F | |        UTC , finish = 2025-09-03 13:33:52.18232754 UTC , thread_cap_info = ("ThreadId
| | F | |        172", 3, False)}
| | F | |        
| | | F |        
| | | S |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | S |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | S |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | S |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 17
| | | S |        , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 13 , alphabet_size
| | | S |        = 6 , total_length = 62} , self = 120 , parent = Nothing , duration = 0.320416881000
| | | S |        , status = Success , start = 2025-09-03 13:33:52.144300115 UTC , finish
| | | S |        = 2025-09-03 13:33:52.464716996 UTC , thread_cap_info = ("ThreadId 175",
| | | S |        3, False)}
| | | S |        
| | F | |        
| F   | |        
|     S |        
|       E        
E                
