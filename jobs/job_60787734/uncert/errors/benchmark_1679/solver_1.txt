last 3864 length 22092
last 4222 length 22934
CNF 3864 vars 22092 clauses
CNF 4222 vars 22934 clauses
last 7475 length 37895
CNF 7475 vars 37895 clauses
last 9470 length 47026
last 5995 length 31214
CNF 5995 vars 31214 clauses
CNF 9470 vars 47026 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4208, clauses: 17370
last 4208 length 17370
CNF 4208 vars 17370 clauses
**************************************************
summary
**************************************************
SRS with 1 rules on 2 letters       Drop
SRS with 1 rules on 2 letters       mirror
SRS with 1 rules on 2 letters       Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 67 states

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, b, a, a, a, a] -> [a, a, a, a, a, b, b, a, a, b, b] {- Input 0 -}
reason
  Drop
    property Termination
    has value Just True
    for SRS
      [b, b, a, a, a, a] -> [a, a, a, a, b, b, a, a, b, b] {- Dropped 1 0 (Input 0) -}
    reason
      mirror
       property Termination
    has value Just True
    for SRS
      [a, a, a, a, b, b] -> [ b , b , a , a , b , b , a , a , a , a ] {- Mirror (Dropped 1 0 (Input 0)) -}
    reason
      Matchbound
        Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 67 states

   property Termination
has value Just True
for SRS
  [b, b, a, a, a, a] -> [a, a, a, a, b, b, a, a, b, b] {- Dropped 1 0 (Input 0) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a, a, a, b, b] -> [ b , b , a , a , b , b , a , a , a , a ] {- Mirror (Dropped 1 0 (Input 0)) -}
reason
  Matchbound
    Matchbound   { method = RFC, implementation = Exact, cpf_state_encoding = Encoding   { base = 10, order = MSB_First}, max_size = Just 10000, max_height = Just 5, initial = Paths, verbose = False, tracing = False, draw = False, cpf = False} matchbound 1 certified by automaton with 67 states

**************************************************
skeleton: (1,2)\Drop{1}{0}\Mirror(1,2)\Rfcmatchbound{1}[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 0.921436972000
  min duration 0.107881913000
  total durat. 1.678404404000
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 4
  max duration 0.826651776000
  min duration 0.110946791000
  total durat. 1.697149460000
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 2
  max duration 0.859188840000
  min duration 0.700116799000
  total durat. 1.559305639000
Except "AsyncCancelled" : "Transport\n { mode = Standard\n , output_as = Transport_System\n , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n , string_implementation = ByteString Plain\n , tracing = False\n , cpf = False}"
  total number 3
  max duration 1.376883086000
  min duration 0.878838542000
  total durat. 3.256380247000
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 18}
    , self = 77
    , parent = Nothing
    , duration = 1.000658619000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:40:55.565548252 UTC
    , finish = 2025-09-03 12:40:56.566206871 UTC
    , thread_cap_info = ("ThreadId 95", 1, False)}
  Info
    { what = "Transport\n  { mode = Standard\n  , output_as = Transport_System\n  , direction = Forward_Backward\n  , max_derivation_length = Just 2\n  , max_expansion_width = Nothing\n  , max_tiers = Just 33\n  , max_overlap_closures = Nothing\n  , string_implementation = ByteString Plain\n  , tracing = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 18}
    , self = 80
    , parent = Nothing
    , duration = 1.376883086000
    , status = Except "AsyncCancelled"
    , start = 2025-09-03 12:40:55.34859871 UTC
    , finish = 2025-09-03 12:40:56.725481796 UTC
    , thread_cap_info = ("ThreadId 22", 3, False)}
**************************************************
E                      Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
E                      , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
E                      = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
E                      , string_implementation = ByteString Plain\n , tracing = False\n , cpf
E                      = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
E                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
E                      = 18} , self = 80 , parent = Nothing , duration = 1.376883086000 , status
E                      = Except "AsyncCancelled" , start = 2025-09-03 12:40:55.34859871 UTC ,
E                      finish = 2025-09-03 12:40:56.725481796 UTC , thread_cap_info = ("ThreadId
E                      22", 3, False)}
E                      
| F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                    = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| F                    = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| F                    = 80} , self = 46 , parent = Nothing , duration = 0.129698008000 , status
| F                    = Fail , start = 2025-09-03 12:40:55.349935579 UTC , finish = 2025-09-03
| F                    12:40:55.479633587 UTC , thread_cap_info = ("ThreadId 49", 1, False)}
| F                    
| | F                  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | F                  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | F                  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | F                  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | F                  = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| | F                  = 0 , alphabet_size = 4 , total_length = 80} , self = 50 , parent = Nothing
| | F                  , duration = 0.258856818000 , status = Fail , start = 2025-09-03 12:40:55.350420496
| | F                  UTC , finish = 2025-09-03 12:40:55.609277314 UTC , thread_cap_info = ("ThreadId
| | F                  61", 0, False)}
| | F                  
| | | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | F                = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | F                = 80} , self = 44 , parent = Nothing , duration = 0.107881913000 , status
| | | F                = Fail , start = 2025-09-03 12:40:55.365773684 UTC , finish = 2025-09-03
| | | F                12:40:55.473655597 UTC , thread_cap_info = ("ThreadId 51", 1, False)}
| | | F                
| | | | F              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | F              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | F              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | F              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | F              = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules
| | | | F              = 0 , alphabet_size = 4 , total_length = 80} , self = 45 , parent = Nothing
| | | | F              , duration = 0.110946791000 , status = Fail , start = 2025-09-03 12:40:55.367559733
| | | | F              UTC , finish = 2025-09-03 12:40:55.478506524 UTC , thread_cap_info = ("ThreadId
| | | | F              63", 0, False)}
| | | | F              
| | | F |              
| | |   F              
| F |                  
| E |                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| E |                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| E |                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| E |                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| E |                  = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| E |                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| E |                  = 16} , self = 72 , parent = Nothing , duration = 0.878838542000 , status
| E |                  = Except "AsyncCancelled" , start = 2025-09-03 12:40:55.546103994 UTC ,
| E |                  finish = 2025-09-03 12:40:56.424942536 UTC , thread_cap_info = ("ThreadId
| E |                  87", 1, False)}
| E |                  
| | | E                Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | E                , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | E                = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | E                , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | E                = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | E                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | E                = 18} , self = 77 , parent = Nothing , duration = 1.000658619000 , status
| | | E                = Except "AsyncCancelled" , start = 2025-09-03 12:40:55.565548252 UTC ,
| | | E                finish = 2025-09-03 12:40:56.566206871 UTC , thread_cap_info = ("ThreadId
| | | E                95", 1, False)}
| | | E                
| | | | E              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | E              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | E              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | E              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | E              = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | E              = 0 , alphabet_size = 2 , total_length = 16} , self = 70 , parent = Nothing
| | | | E              , duration = 0.539940828000 , status = Except "AsyncCancelled" , start
| | | | E              = 2025-09-03 12:40:55.605016396 UTC , finish = 2025-09-03 12:40:56.144957224
| | | | E              UTC , thread_cap_info = ("ThreadId 99", 1, False)}
| | | | E              
| | F | |              
| | F | |              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F | |              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | |              = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | F | |              = 14 , num_top_rules = 14 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | F | |              = 254} , self = 76 , parent = Nothing , duration = 0.921436972000 , status
| | F | |              = Fail , start = 2025-09-03 12:40:55.624979974 UTC , finish = 2025-09-03
| | F | |              12:40:56.546416946 UTC , thread_cap_info = ("ThreadId 119", 0, False)}
| | F | |              
| | | | | F            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | F            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | F            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | F            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | F            = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | F            = 0 , alphabet_size = 2 , total_length = 18} , self = 75 , parent = Nothing
| | | | | F            , duration = 0.826651776000 , status = Fail , start = 2025-09-03 12:40:55.68503658
| | | | | F            UTC , finish = 2025-09-03 12:40:56.511688356 UTC , thread_cap_info = ("ThreadId
| | | | | F            124", 1, False)}
| | | | | F            
| | | | | | F          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | | F          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | | F          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | | F          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | | F          = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules
| | | | | | F          = 0 , alphabet_size = 2 , total_length = 18} , self = 71 , parent = Nothing
| | | | | | F          , duration = 0.500694075000 , status = Fail , start = 2025-09-03 12:40:55.705772271
| | | | | | F          UTC , finish = 2025-09-03 12:40:56.206466346 UTC , thread_cap_info = ("ThreadId
| | | | | | F          126", 1, False)}
| | | | | | F          
| | | | | | | E        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | E        , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | E        = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | E        , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | E        max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | E        [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | E        string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | E        , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | E        = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | E        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | E        = 16} , self = 78 , parent = Nothing , duration = 0.859188840000 , status
| | | | | | | E        = Except "AsyncCancelled" , start = 2025-09-03 12:40:55.745799581 UTC ,
| | | | | | | E        finish = 2025-09-03 12:40:56.604988421 UTC , thread_cap_info = ("ThreadId
| | | | | | | E        127", 1, False)}
| | | | | | | E        
| | | | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | | | | F      = 6 , num_top_rules = 6 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | | | | | | F      = 154} , self = 73 , parent = Nothing , duration = 0.680699716000 , status
| | | | | | | | F      = Fail , start = 2025-09-03 12:40:55.745814033 UTC , finish = 2025-09-03
| | | | | | | | F      12:40:56.426513749 UTC , thread_cap_info = ("ThreadId 130", 0, False)}
| | | | | | | | F      
| | | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | | | | | F    = 6 , num_top_rules = 6 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | | | | | | | F    = 154} , self = 74 , parent = Nothing , duration = 0.649085519000 , status
| | | | | | | | | F    = Fail , start = 2025-09-03 12:40:55.804980192 UTC , finish = 2025-09-03
| | | | | | | | | F    12:40:56.454065711 UTC , thread_cap_info = ("ThreadId 132", 0, False)}
| | | | | | | | | F    
| | | | | | | | | | E  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | E  , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | E  = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | | | | | | | | | E  , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | | | | | | | | | E  max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | | | | | | | | | E  [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | | | | | | | | | E  string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | | | | | | | | | E  , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | E  = True})" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
| | | | | | | | | | E  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | | | | | | | | E  = 18} , self = 79 , parent = Nothing , duration = 0.700116799000 , status
| | | | | | | | | | E  = Except "AsyncCancelled" , start = 2025-09-03 12:40:56.004960348 UTC ,
| | | | | | | | | | E  finish = 2025-09-03 12:40:56.705077147 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | E  134", 1, False)}
| | | | | | | | | | E  
| | | | E | | | | | |  
| | | |   | F | | | |  
| E | |   |   | | | |  
|   | |   |   | F | |  
|   | |   |   |   F |  
|   | |   F   |     |  
|   F |       |     |  
|     E       |     |  
|             E     |  
|                   E  
E                      
